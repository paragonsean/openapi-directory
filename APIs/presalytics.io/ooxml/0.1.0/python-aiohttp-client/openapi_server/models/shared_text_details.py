# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.shared_paragraph_details import SharedParagraphDetails
from openapi_server.models.shared_solid_fills_details import SharedSolidFillsDetails
from openapi_server import util


class SharedTextDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, color_solid_fill: SharedSolidFillsDetails=None, color_solid_fills_id: str=None, date_created: datetime=None, date_modified: datetime=None, font: str=None, font_size: int=None, id: str=None, is_bold: bool=None, is_italic: bool=None, is_theme_font: bool=None, is_underline: bool=None, paragraph: SharedParagraphDetails=None, paragraph_id: str=None, raw_text: str=None, sequence: int=None, user_created: str=None, user_modified: str=None):
        """SharedTextDetails - a model defined in OpenAPI

        :param color_solid_fill: The color_solid_fill of this SharedTextDetails.
        :param color_solid_fills_id: The color_solid_fills_id of this SharedTextDetails.
        :param date_created: The date_created of this SharedTextDetails.
        :param date_modified: The date_modified of this SharedTextDetails.
        :param font: The font of this SharedTextDetails.
        :param font_size: The font_size of this SharedTextDetails.
        :param id: The id of this SharedTextDetails.
        :param is_bold: The is_bold of this SharedTextDetails.
        :param is_italic: The is_italic of this SharedTextDetails.
        :param is_theme_font: The is_theme_font of this SharedTextDetails.
        :param is_underline: The is_underline of this SharedTextDetails.
        :param paragraph: The paragraph of this SharedTextDetails.
        :param paragraph_id: The paragraph_id of this SharedTextDetails.
        :param raw_text: The raw_text of this SharedTextDetails.
        :param sequence: The sequence of this SharedTextDetails.
        :param user_created: The user_created of this SharedTextDetails.
        :param user_modified: The user_modified of this SharedTextDetails.
        """
        self.openapi_types = {
            'color_solid_fill': SharedSolidFillsDetails,
            'color_solid_fills_id': str,
            'date_created': datetime,
            'date_modified': datetime,
            'font': str,
            'font_size': int,
            'id': str,
            'is_bold': bool,
            'is_italic': bool,
            'is_theme_font': bool,
            'is_underline': bool,
            'paragraph': SharedParagraphDetails,
            'paragraph_id': str,
            'raw_text': str,
            'sequence': int,
            'user_created': str,
            'user_modified': str
        }

        self.attribute_map = {
            'color_solid_fill': 'colorSolidFill',
            'color_solid_fills_id': 'colorSolidFillsId',
            'date_created': 'dateCreated',
            'date_modified': 'dateModified',
            'font': 'font',
            'font_size': 'fontSize',
            'id': 'id',
            'is_bold': 'isBold',
            'is_italic': 'isItalic',
            'is_theme_font': 'isThemeFont',
            'is_underline': 'isUnderline',
            'paragraph': 'paragraph',
            'paragraph_id': 'paragraphId',
            'raw_text': 'rawText',
            'sequence': 'sequence',
            'user_created': 'userCreated',
            'user_modified': 'userModified'
        }

        self._color_solid_fill = color_solid_fill
        self._color_solid_fills_id = color_solid_fills_id
        self._date_created = date_created
        self._date_modified = date_modified
        self._font = font
        self._font_size = font_size
        self._id = id
        self._is_bold = is_bold
        self._is_italic = is_italic
        self._is_theme_font = is_theme_font
        self._is_underline = is_underline
        self._paragraph = paragraph
        self._paragraph_id = paragraph_id
        self._raw_text = raw_text
        self._sequence = sequence
        self._user_created = user_created
        self._user_modified = user_modified

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SharedTextDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Shared.Text.Details of this SharedTextDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def color_solid_fill(self):
        """Gets the color_solid_fill of this SharedTextDetails.


        :return: The color_solid_fill of this SharedTextDetails.
        :rtype: SharedSolidFillsDetails
        """
        return self._color_solid_fill

    @color_solid_fill.setter
    def color_solid_fill(self, color_solid_fill):
        """Sets the color_solid_fill of this SharedTextDetails.


        :param color_solid_fill: The color_solid_fill of this SharedTextDetails.
        :type color_solid_fill: SharedSolidFillsDetails
        """

        self._color_solid_fill = color_solid_fill

    @property
    def color_solid_fills_id(self):
        """Gets the color_solid_fills_id of this SharedTextDetails.


        :return: The color_solid_fills_id of this SharedTextDetails.
        :rtype: str
        """
        return self._color_solid_fills_id

    @color_solid_fills_id.setter
    def color_solid_fills_id(self, color_solid_fills_id):
        """Sets the color_solid_fills_id of this SharedTextDetails.


        :param color_solid_fills_id: The color_solid_fills_id of this SharedTextDetails.
        :type color_solid_fills_id: str
        """

        self._color_solid_fills_id = color_solid_fills_id

    @property
    def date_created(self):
        """Gets the date_created of this SharedTextDetails.


        :return: The date_created of this SharedTextDetails.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this SharedTextDetails.


        :param date_created: The date_created of this SharedTextDetails.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_modified(self):
        """Gets the date_modified of this SharedTextDetails.


        :return: The date_modified of this SharedTextDetails.
        :rtype: datetime
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this SharedTextDetails.


        :param date_modified: The date_modified of this SharedTextDetails.
        :type date_modified: datetime
        """

        self._date_modified = date_modified

    @property
    def font(self):
        """Gets the font of this SharedTextDetails.


        :return: The font of this SharedTextDetails.
        :rtype: str
        """
        return self._font

    @font.setter
    def font(self, font):
        """Sets the font of this SharedTextDetails.


        :param font: The font of this SharedTextDetails.
        :type font: str
        """

        self._font = font

    @property
    def font_size(self):
        """Gets the font_size of this SharedTextDetails.


        :return: The font_size of this SharedTextDetails.
        :rtype: int
        """
        return self._font_size

    @font_size.setter
    def font_size(self, font_size):
        """Sets the font_size of this SharedTextDetails.


        :param font_size: The font_size of this SharedTextDetails.
        :type font_size: int
        """

        self._font_size = font_size

    @property
    def id(self):
        """Gets the id of this SharedTextDetails.


        :return: The id of this SharedTextDetails.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SharedTextDetails.


        :param id: The id of this SharedTextDetails.
        :type id: str
        """

        self._id = id

    @property
    def is_bold(self):
        """Gets the is_bold of this SharedTextDetails.


        :return: The is_bold of this SharedTextDetails.
        :rtype: bool
        """
        return self._is_bold

    @is_bold.setter
    def is_bold(self, is_bold):
        """Sets the is_bold of this SharedTextDetails.


        :param is_bold: The is_bold of this SharedTextDetails.
        :type is_bold: bool
        """

        self._is_bold = is_bold

    @property
    def is_italic(self):
        """Gets the is_italic of this SharedTextDetails.


        :return: The is_italic of this SharedTextDetails.
        :rtype: bool
        """
        return self._is_italic

    @is_italic.setter
    def is_italic(self, is_italic):
        """Sets the is_italic of this SharedTextDetails.


        :param is_italic: The is_italic of this SharedTextDetails.
        :type is_italic: bool
        """

        self._is_italic = is_italic

    @property
    def is_theme_font(self):
        """Gets the is_theme_font of this SharedTextDetails.


        :return: The is_theme_font of this SharedTextDetails.
        :rtype: bool
        """
        return self._is_theme_font

    @is_theme_font.setter
    def is_theme_font(self, is_theme_font):
        """Sets the is_theme_font of this SharedTextDetails.


        :param is_theme_font: The is_theme_font of this SharedTextDetails.
        :type is_theme_font: bool
        """

        self._is_theme_font = is_theme_font

    @property
    def is_underline(self):
        """Gets the is_underline of this SharedTextDetails.


        :return: The is_underline of this SharedTextDetails.
        :rtype: bool
        """
        return self._is_underline

    @is_underline.setter
    def is_underline(self, is_underline):
        """Sets the is_underline of this SharedTextDetails.


        :param is_underline: The is_underline of this SharedTextDetails.
        :type is_underline: bool
        """

        self._is_underline = is_underline

    @property
    def paragraph(self):
        """Gets the paragraph of this SharedTextDetails.


        :return: The paragraph of this SharedTextDetails.
        :rtype: SharedParagraphDetails
        """
        return self._paragraph

    @paragraph.setter
    def paragraph(self, paragraph):
        """Sets the paragraph of this SharedTextDetails.


        :param paragraph: The paragraph of this SharedTextDetails.
        :type paragraph: SharedParagraphDetails
        """

        self._paragraph = paragraph

    @property
    def paragraph_id(self):
        """Gets the paragraph_id of this SharedTextDetails.


        :return: The paragraph_id of this SharedTextDetails.
        :rtype: str
        """
        return self._paragraph_id

    @paragraph_id.setter
    def paragraph_id(self, paragraph_id):
        """Sets the paragraph_id of this SharedTextDetails.


        :param paragraph_id: The paragraph_id of this SharedTextDetails.
        :type paragraph_id: str
        """

        self._paragraph_id = paragraph_id

    @property
    def raw_text(self):
        """Gets the raw_text of this SharedTextDetails.


        :return: The raw_text of this SharedTextDetails.
        :rtype: str
        """
        return self._raw_text

    @raw_text.setter
    def raw_text(self, raw_text):
        """Sets the raw_text of this SharedTextDetails.


        :param raw_text: The raw_text of this SharedTextDetails.
        :type raw_text: str
        """

        self._raw_text = raw_text

    @property
    def sequence(self):
        """Gets the sequence of this SharedTextDetails.


        :return: The sequence of this SharedTextDetails.
        :rtype: int
        """
        return self._sequence

    @sequence.setter
    def sequence(self, sequence):
        """Sets the sequence of this SharedTextDetails.


        :param sequence: The sequence of this SharedTextDetails.
        :type sequence: int
        """

        self._sequence = sequence

    @property
    def user_created(self):
        """Gets the user_created of this SharedTextDetails.


        :return: The user_created of this SharedTextDetails.
        :rtype: str
        """
        return self._user_created

    @user_created.setter
    def user_created(self, user_created):
        """Sets the user_created of this SharedTextDetails.


        :param user_created: The user_created of this SharedTextDetails.
        :type user_created: str
        """

        self._user_created = user_created

    @property
    def user_modified(self):
        """Gets the user_modified of this SharedTextDetails.


        :return: The user_modified of this SharedTextDetails.
        :rtype: str
        """
        return self._user_modified

    @user_modified.setter
    def user_modified(self, user_modified):
        """Sets the user_modified of this SharedTextDetails.


        :param user_modified: The user_modified of this SharedTextDetails.
        :type user_modified: str
        """

        self._user_modified = user_modified
