# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SlideConnector(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, base_element_blob_url: str=None, changed_base_element_blob_url: str=None, end_connection_idx: int=None, end_connection_shape_id: str=None, flip_horizontal: bool=None, flip_vertical: bool=None, free_form_path_xml: str=None, group_elements_id: str=None, hidden: bool=None, id: str=None, is_theme_effect: bool=None, is_theme_fill: bool=None, is_theme_line: bool=None, name: str=None, ooxml_id: int=None, package_uri: str=None, preset_type_id: str=None, rotation: int=None, start_connection_idx: int=None, start_connection_shape_id: str=None, svg_blob_url: str=None):
        """SlideConnector - a model defined in OpenAPI

        :param base_element_blob_url: The base_element_blob_url of this SlideConnector.
        :param changed_base_element_blob_url: The changed_base_element_blob_url of this SlideConnector.
        :param end_connection_idx: The end_connection_idx of this SlideConnector.
        :param end_connection_shape_id: The end_connection_shape_id of this SlideConnector.
        :param flip_horizontal: The flip_horizontal of this SlideConnector.
        :param flip_vertical: The flip_vertical of this SlideConnector.
        :param free_form_path_xml: The free_form_path_xml of this SlideConnector.
        :param group_elements_id: The group_elements_id of this SlideConnector.
        :param hidden: The hidden of this SlideConnector.
        :param id: The id of this SlideConnector.
        :param is_theme_effect: The is_theme_effect of this SlideConnector.
        :param is_theme_fill: The is_theme_fill of this SlideConnector.
        :param is_theme_line: The is_theme_line of this SlideConnector.
        :param name: The name of this SlideConnector.
        :param ooxml_id: The ooxml_id of this SlideConnector.
        :param package_uri: The package_uri of this SlideConnector.
        :param preset_type_id: The preset_type_id of this SlideConnector.
        :param rotation: The rotation of this SlideConnector.
        :param start_connection_idx: The start_connection_idx of this SlideConnector.
        :param start_connection_shape_id: The start_connection_shape_id of this SlideConnector.
        :param svg_blob_url: The svg_blob_url of this SlideConnector.
        """
        self.openapi_types = {
            'base_element_blob_url': str,
            'changed_base_element_blob_url': str,
            'end_connection_idx': int,
            'end_connection_shape_id': str,
            'flip_horizontal': bool,
            'flip_vertical': bool,
            'free_form_path_xml': str,
            'group_elements_id': str,
            'hidden': bool,
            'id': str,
            'is_theme_effect': bool,
            'is_theme_fill': bool,
            'is_theme_line': bool,
            'name': str,
            'ooxml_id': int,
            'package_uri': str,
            'preset_type_id': str,
            'rotation': int,
            'start_connection_idx': int,
            'start_connection_shape_id': str,
            'svg_blob_url': str
        }

        self.attribute_map = {
            'base_element_blob_url': 'baseElementBlobUrl',
            'changed_base_element_blob_url': 'changedBaseElementBlobUrl',
            'end_connection_idx': 'endConnectionIdx',
            'end_connection_shape_id': 'endConnectionShapeId',
            'flip_horizontal': 'flipHorizontal',
            'flip_vertical': 'flipVertical',
            'free_form_path_xml': 'freeFormPathXml',
            'group_elements_id': 'groupElementsId',
            'hidden': 'hidden',
            'id': 'id',
            'is_theme_effect': 'isThemeEffect',
            'is_theme_fill': 'isThemeFill',
            'is_theme_line': 'isThemeLine',
            'name': 'name',
            'ooxml_id': 'ooxmlId',
            'package_uri': 'packageUri',
            'preset_type_id': 'presetTypeId',
            'rotation': 'rotation',
            'start_connection_idx': 'startConnectionIdx',
            'start_connection_shape_id': 'startConnectionShapeId',
            'svg_blob_url': 'svgBlobUrl'
        }

        self._base_element_blob_url = base_element_blob_url
        self._changed_base_element_blob_url = changed_base_element_blob_url
        self._end_connection_idx = end_connection_idx
        self._end_connection_shape_id = end_connection_shape_id
        self._flip_horizontal = flip_horizontal
        self._flip_vertical = flip_vertical
        self._free_form_path_xml = free_form_path_xml
        self._group_elements_id = group_elements_id
        self._hidden = hidden
        self._id = id
        self._is_theme_effect = is_theme_effect
        self._is_theme_fill = is_theme_fill
        self._is_theme_line = is_theme_line
        self._name = name
        self._ooxml_id = ooxml_id
        self._package_uri = package_uri
        self._preset_type_id = preset_type_id
        self._rotation = rotation
        self._start_connection_idx = start_connection_idx
        self._start_connection_shape_id = start_connection_shape_id
        self._svg_blob_url = svg_blob_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SlideConnector':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Slide.Connector of this SlideConnector.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def base_element_blob_url(self):
        """Gets the base_element_blob_url of this SlideConnector.


        :return: The base_element_blob_url of this SlideConnector.
        :rtype: str
        """
        return self._base_element_blob_url

    @base_element_blob_url.setter
    def base_element_blob_url(self, base_element_blob_url):
        """Sets the base_element_blob_url of this SlideConnector.


        :param base_element_blob_url: The base_element_blob_url of this SlideConnector.
        :type base_element_blob_url: str
        """

        self._base_element_blob_url = base_element_blob_url

    @property
    def changed_base_element_blob_url(self):
        """Gets the changed_base_element_blob_url of this SlideConnector.


        :return: The changed_base_element_blob_url of this SlideConnector.
        :rtype: str
        """
        return self._changed_base_element_blob_url

    @changed_base_element_blob_url.setter
    def changed_base_element_blob_url(self, changed_base_element_blob_url):
        """Sets the changed_base_element_blob_url of this SlideConnector.


        :param changed_base_element_blob_url: The changed_base_element_blob_url of this SlideConnector.
        :type changed_base_element_blob_url: str
        """

        self._changed_base_element_blob_url = changed_base_element_blob_url

    @property
    def end_connection_idx(self):
        """Gets the end_connection_idx of this SlideConnector.


        :return: The end_connection_idx of this SlideConnector.
        :rtype: int
        """
        return self._end_connection_idx

    @end_connection_idx.setter
    def end_connection_idx(self, end_connection_idx):
        """Sets the end_connection_idx of this SlideConnector.


        :param end_connection_idx: The end_connection_idx of this SlideConnector.
        :type end_connection_idx: int
        """

        self._end_connection_idx = end_connection_idx

    @property
    def end_connection_shape_id(self):
        """Gets the end_connection_shape_id of this SlideConnector.


        :return: The end_connection_shape_id of this SlideConnector.
        :rtype: str
        """
        return self._end_connection_shape_id

    @end_connection_shape_id.setter
    def end_connection_shape_id(self, end_connection_shape_id):
        """Sets the end_connection_shape_id of this SlideConnector.


        :param end_connection_shape_id: The end_connection_shape_id of this SlideConnector.
        :type end_connection_shape_id: str
        """

        self._end_connection_shape_id = end_connection_shape_id

    @property
    def flip_horizontal(self):
        """Gets the flip_horizontal of this SlideConnector.


        :return: The flip_horizontal of this SlideConnector.
        :rtype: bool
        """
        return self._flip_horizontal

    @flip_horizontal.setter
    def flip_horizontal(self, flip_horizontal):
        """Sets the flip_horizontal of this SlideConnector.


        :param flip_horizontal: The flip_horizontal of this SlideConnector.
        :type flip_horizontal: bool
        """

        self._flip_horizontal = flip_horizontal

    @property
    def flip_vertical(self):
        """Gets the flip_vertical of this SlideConnector.


        :return: The flip_vertical of this SlideConnector.
        :rtype: bool
        """
        return self._flip_vertical

    @flip_vertical.setter
    def flip_vertical(self, flip_vertical):
        """Sets the flip_vertical of this SlideConnector.


        :param flip_vertical: The flip_vertical of this SlideConnector.
        :type flip_vertical: bool
        """

        self._flip_vertical = flip_vertical

    @property
    def free_form_path_xml(self):
        """Gets the free_form_path_xml of this SlideConnector.


        :return: The free_form_path_xml of this SlideConnector.
        :rtype: str
        """
        return self._free_form_path_xml

    @free_form_path_xml.setter
    def free_form_path_xml(self, free_form_path_xml):
        """Sets the free_form_path_xml of this SlideConnector.


        :param free_form_path_xml: The free_form_path_xml of this SlideConnector.
        :type free_form_path_xml: str
        """

        self._free_form_path_xml = free_form_path_xml

    @property
    def group_elements_id(self):
        """Gets the group_elements_id of this SlideConnector.


        :return: The group_elements_id of this SlideConnector.
        :rtype: str
        """
        return self._group_elements_id

    @group_elements_id.setter
    def group_elements_id(self, group_elements_id):
        """Sets the group_elements_id of this SlideConnector.


        :param group_elements_id: The group_elements_id of this SlideConnector.
        :type group_elements_id: str
        """

        self._group_elements_id = group_elements_id

    @property
    def hidden(self):
        """Gets the hidden of this SlideConnector.


        :return: The hidden of this SlideConnector.
        :rtype: bool
        """
        return self._hidden

    @hidden.setter
    def hidden(self, hidden):
        """Sets the hidden of this SlideConnector.


        :param hidden: The hidden of this SlideConnector.
        :type hidden: bool
        """

        self._hidden = hidden

    @property
    def id(self):
        """Gets the id of this SlideConnector.


        :return: The id of this SlideConnector.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SlideConnector.


        :param id: The id of this SlideConnector.
        :type id: str
        """

        self._id = id

    @property
    def is_theme_effect(self):
        """Gets the is_theme_effect of this SlideConnector.


        :return: The is_theme_effect of this SlideConnector.
        :rtype: bool
        """
        return self._is_theme_effect

    @is_theme_effect.setter
    def is_theme_effect(self, is_theme_effect):
        """Sets the is_theme_effect of this SlideConnector.


        :param is_theme_effect: The is_theme_effect of this SlideConnector.
        :type is_theme_effect: bool
        """

        self._is_theme_effect = is_theme_effect

    @property
    def is_theme_fill(self):
        """Gets the is_theme_fill of this SlideConnector.


        :return: The is_theme_fill of this SlideConnector.
        :rtype: bool
        """
        return self._is_theme_fill

    @is_theme_fill.setter
    def is_theme_fill(self, is_theme_fill):
        """Sets the is_theme_fill of this SlideConnector.


        :param is_theme_fill: The is_theme_fill of this SlideConnector.
        :type is_theme_fill: bool
        """

        self._is_theme_fill = is_theme_fill

    @property
    def is_theme_line(self):
        """Gets the is_theme_line of this SlideConnector.


        :return: The is_theme_line of this SlideConnector.
        :rtype: bool
        """
        return self._is_theme_line

    @is_theme_line.setter
    def is_theme_line(self, is_theme_line):
        """Sets the is_theme_line of this SlideConnector.


        :param is_theme_line: The is_theme_line of this SlideConnector.
        :type is_theme_line: bool
        """

        self._is_theme_line = is_theme_line

    @property
    def name(self):
        """Gets the name of this SlideConnector.


        :return: The name of this SlideConnector.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SlideConnector.


        :param name: The name of this SlideConnector.
        :type name: str
        """

        self._name = name

    @property
    def ooxml_id(self):
        """Gets the ooxml_id of this SlideConnector.


        :return: The ooxml_id of this SlideConnector.
        :rtype: int
        """
        return self._ooxml_id

    @ooxml_id.setter
    def ooxml_id(self, ooxml_id):
        """Sets the ooxml_id of this SlideConnector.


        :param ooxml_id: The ooxml_id of this SlideConnector.
        :type ooxml_id: int
        """

        self._ooxml_id = ooxml_id

    @property
    def package_uri(self):
        """Gets the package_uri of this SlideConnector.


        :return: The package_uri of this SlideConnector.
        :rtype: str
        """
        return self._package_uri

    @package_uri.setter
    def package_uri(self, package_uri):
        """Sets the package_uri of this SlideConnector.


        :param package_uri: The package_uri of this SlideConnector.
        :type package_uri: str
        """

        self._package_uri = package_uri

    @property
    def preset_type_id(self):
        """Gets the preset_type_id of this SlideConnector.


        :return: The preset_type_id of this SlideConnector.
        :rtype: str
        """
        return self._preset_type_id

    @preset_type_id.setter
    def preset_type_id(self, preset_type_id):
        """Sets the preset_type_id of this SlideConnector.


        :param preset_type_id: The preset_type_id of this SlideConnector.
        :type preset_type_id: str
        """

        self._preset_type_id = preset_type_id

    @property
    def rotation(self):
        """Gets the rotation of this SlideConnector.


        :return: The rotation of this SlideConnector.
        :rtype: int
        """
        return self._rotation

    @rotation.setter
    def rotation(self, rotation):
        """Sets the rotation of this SlideConnector.


        :param rotation: The rotation of this SlideConnector.
        :type rotation: int
        """

        self._rotation = rotation

    @property
    def start_connection_idx(self):
        """Gets the start_connection_idx of this SlideConnector.


        :return: The start_connection_idx of this SlideConnector.
        :rtype: int
        """
        return self._start_connection_idx

    @start_connection_idx.setter
    def start_connection_idx(self, start_connection_idx):
        """Sets the start_connection_idx of this SlideConnector.


        :param start_connection_idx: The start_connection_idx of this SlideConnector.
        :type start_connection_idx: int
        """

        self._start_connection_idx = start_connection_idx

    @property
    def start_connection_shape_id(self):
        """Gets the start_connection_shape_id of this SlideConnector.


        :return: The start_connection_shape_id of this SlideConnector.
        :rtype: str
        """
        return self._start_connection_shape_id

    @start_connection_shape_id.setter
    def start_connection_shape_id(self, start_connection_shape_id):
        """Sets the start_connection_shape_id of this SlideConnector.


        :param start_connection_shape_id: The start_connection_shape_id of this SlideConnector.
        :type start_connection_shape_id: str
        """

        self._start_connection_shape_id = start_connection_shape_id

    @property
    def svg_blob_url(self):
        """Gets the svg_blob_url of this SlideConnector.


        :return: The svg_blob_url of this SlideConnector.
        :rtype: str
        """
        return self._svg_blob_url

    @svg_blob_url.setter
    def svg_blob_url(self, svg_blob_url):
        """Sets the svg_blob_url of this SlideConnector.


        :param svg_blob_url: The svg_blob_url of this SlideConnector.
        :type svg_blob_url: str
        """

        self._svg_blob_url = svg_blob_url
