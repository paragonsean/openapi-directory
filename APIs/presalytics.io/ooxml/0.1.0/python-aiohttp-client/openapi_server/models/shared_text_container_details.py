# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.chart_axes_details import ChartAxesDetails
from openapi_server.models.chart_charts_details import ChartChartsDetails
from openapi_server.models.shared_paragraph_details import SharedParagraphDetails
from openapi_server.models.slide_shapes_details import SlideShapesDetails
from openapi_server.models.table_cells_details import TableCellsDetails
from openapi_server import util


class SharedTextContainerDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, axis: ChartAxesDetails=None, axis_id: str=None, chart: ChartChartsDetails=None, chart_id: str=None, date_created: datetime=None, date_modified: datetime=None, id: str=None, outer_xml: str=None, paragraphs: List[SharedParagraphDetails]=None, parent_shape: SlideShapesDetails=None, shape_id: str=None, table_cell: TableCellsDetails=None, table_cell_id: str=None, user_created: str=None, user_modified: str=None):
        """SharedTextContainerDetails - a model defined in OpenAPI

        :param axis: The axis of this SharedTextContainerDetails.
        :param axis_id: The axis_id of this SharedTextContainerDetails.
        :param chart: The chart of this SharedTextContainerDetails.
        :param chart_id: The chart_id of this SharedTextContainerDetails.
        :param date_created: The date_created of this SharedTextContainerDetails.
        :param date_modified: The date_modified of this SharedTextContainerDetails.
        :param id: The id of this SharedTextContainerDetails.
        :param outer_xml: The outer_xml of this SharedTextContainerDetails.
        :param paragraphs: The paragraphs of this SharedTextContainerDetails.
        :param parent_shape: The parent_shape of this SharedTextContainerDetails.
        :param shape_id: The shape_id of this SharedTextContainerDetails.
        :param table_cell: The table_cell of this SharedTextContainerDetails.
        :param table_cell_id: The table_cell_id of this SharedTextContainerDetails.
        :param user_created: The user_created of this SharedTextContainerDetails.
        :param user_modified: The user_modified of this SharedTextContainerDetails.
        """
        self.openapi_types = {
            'axis': ChartAxesDetails,
            'axis_id': str,
            'chart': ChartChartsDetails,
            'chart_id': str,
            'date_created': datetime,
            'date_modified': datetime,
            'id': str,
            'outer_xml': str,
            'paragraphs': List[SharedParagraphDetails],
            'parent_shape': SlideShapesDetails,
            'shape_id': str,
            'table_cell': TableCellsDetails,
            'table_cell_id': str,
            'user_created': str,
            'user_modified': str
        }

        self.attribute_map = {
            'axis': 'axis',
            'axis_id': 'axisId',
            'chart': 'chart',
            'chart_id': 'chartId',
            'date_created': 'dateCreated',
            'date_modified': 'dateModified',
            'id': 'id',
            'outer_xml': 'outerXml',
            'paragraphs': 'paragraphs',
            'parent_shape': 'parentShape',
            'shape_id': 'shapeId',
            'table_cell': 'tableCell',
            'table_cell_id': 'tableCellId',
            'user_created': 'userCreated',
            'user_modified': 'userModified'
        }

        self._axis = axis
        self._axis_id = axis_id
        self._chart = chart
        self._chart_id = chart_id
        self._date_created = date_created
        self._date_modified = date_modified
        self._id = id
        self._outer_xml = outer_xml
        self._paragraphs = paragraphs
        self._parent_shape = parent_shape
        self._shape_id = shape_id
        self._table_cell = table_cell
        self._table_cell_id = table_cell_id
        self._user_created = user_created
        self._user_modified = user_modified

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SharedTextContainerDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Shared.TextContainer.Details of this SharedTextContainerDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def axis(self):
        """Gets the axis of this SharedTextContainerDetails.


        :return: The axis of this SharedTextContainerDetails.
        :rtype: ChartAxesDetails
        """
        return self._axis

    @axis.setter
    def axis(self, axis):
        """Sets the axis of this SharedTextContainerDetails.


        :param axis: The axis of this SharedTextContainerDetails.
        :type axis: ChartAxesDetails
        """

        self._axis = axis

    @property
    def axis_id(self):
        """Gets the axis_id of this SharedTextContainerDetails.


        :return: The axis_id of this SharedTextContainerDetails.
        :rtype: str
        """
        return self._axis_id

    @axis_id.setter
    def axis_id(self, axis_id):
        """Sets the axis_id of this SharedTextContainerDetails.


        :param axis_id: The axis_id of this SharedTextContainerDetails.
        :type axis_id: str
        """

        self._axis_id = axis_id

    @property
    def chart(self):
        """Gets the chart of this SharedTextContainerDetails.


        :return: The chart of this SharedTextContainerDetails.
        :rtype: ChartChartsDetails
        """
        return self._chart

    @chart.setter
    def chart(self, chart):
        """Sets the chart of this SharedTextContainerDetails.


        :param chart: The chart of this SharedTextContainerDetails.
        :type chart: ChartChartsDetails
        """

        self._chart = chart

    @property
    def chart_id(self):
        """Gets the chart_id of this SharedTextContainerDetails.


        :return: The chart_id of this SharedTextContainerDetails.
        :rtype: str
        """
        return self._chart_id

    @chart_id.setter
    def chart_id(self, chart_id):
        """Sets the chart_id of this SharedTextContainerDetails.


        :param chart_id: The chart_id of this SharedTextContainerDetails.
        :type chart_id: str
        """

        self._chart_id = chart_id

    @property
    def date_created(self):
        """Gets the date_created of this SharedTextContainerDetails.


        :return: The date_created of this SharedTextContainerDetails.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this SharedTextContainerDetails.


        :param date_created: The date_created of this SharedTextContainerDetails.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_modified(self):
        """Gets the date_modified of this SharedTextContainerDetails.


        :return: The date_modified of this SharedTextContainerDetails.
        :rtype: datetime
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this SharedTextContainerDetails.


        :param date_modified: The date_modified of this SharedTextContainerDetails.
        :type date_modified: datetime
        """

        self._date_modified = date_modified

    @property
    def id(self):
        """Gets the id of this SharedTextContainerDetails.


        :return: The id of this SharedTextContainerDetails.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SharedTextContainerDetails.


        :param id: The id of this SharedTextContainerDetails.
        :type id: str
        """

        self._id = id

    @property
    def outer_xml(self):
        """Gets the outer_xml of this SharedTextContainerDetails.


        :return: The outer_xml of this SharedTextContainerDetails.
        :rtype: str
        """
        return self._outer_xml

    @outer_xml.setter
    def outer_xml(self, outer_xml):
        """Sets the outer_xml of this SharedTextContainerDetails.


        :param outer_xml: The outer_xml of this SharedTextContainerDetails.
        :type outer_xml: str
        """

        self._outer_xml = outer_xml

    @property
    def paragraphs(self):
        """Gets the paragraphs of this SharedTextContainerDetails.


        :return: The paragraphs of this SharedTextContainerDetails.
        :rtype: List[SharedParagraphDetails]
        """
        return self._paragraphs

    @paragraphs.setter
    def paragraphs(self, paragraphs):
        """Sets the paragraphs of this SharedTextContainerDetails.


        :param paragraphs: The paragraphs of this SharedTextContainerDetails.
        :type paragraphs: List[SharedParagraphDetails]
        """

        self._paragraphs = paragraphs

    @property
    def parent_shape(self):
        """Gets the parent_shape of this SharedTextContainerDetails.


        :return: The parent_shape of this SharedTextContainerDetails.
        :rtype: SlideShapesDetails
        """
        return self._parent_shape

    @parent_shape.setter
    def parent_shape(self, parent_shape):
        """Sets the parent_shape of this SharedTextContainerDetails.


        :param parent_shape: The parent_shape of this SharedTextContainerDetails.
        :type parent_shape: SlideShapesDetails
        """

        self._parent_shape = parent_shape

    @property
    def shape_id(self):
        """Gets the shape_id of this SharedTextContainerDetails.


        :return: The shape_id of this SharedTextContainerDetails.
        :rtype: str
        """
        return self._shape_id

    @shape_id.setter
    def shape_id(self, shape_id):
        """Sets the shape_id of this SharedTextContainerDetails.


        :param shape_id: The shape_id of this SharedTextContainerDetails.
        :type shape_id: str
        """

        self._shape_id = shape_id

    @property
    def table_cell(self):
        """Gets the table_cell of this SharedTextContainerDetails.


        :return: The table_cell of this SharedTextContainerDetails.
        :rtype: TableCellsDetails
        """
        return self._table_cell

    @table_cell.setter
    def table_cell(self, table_cell):
        """Sets the table_cell of this SharedTextContainerDetails.


        :param table_cell: The table_cell of this SharedTextContainerDetails.
        :type table_cell: TableCellsDetails
        """

        self._table_cell = table_cell

    @property
    def table_cell_id(self):
        """Gets the table_cell_id of this SharedTextContainerDetails.


        :return: The table_cell_id of this SharedTextContainerDetails.
        :rtype: str
        """
        return self._table_cell_id

    @table_cell_id.setter
    def table_cell_id(self, table_cell_id):
        """Sets the table_cell_id of this SharedTextContainerDetails.


        :param table_cell_id: The table_cell_id of this SharedTextContainerDetails.
        :type table_cell_id: str
        """

        self._table_cell_id = table_cell_id

    @property
    def user_created(self):
        """Gets the user_created of this SharedTextContainerDetails.


        :return: The user_created of this SharedTextContainerDetails.
        :rtype: str
        """
        return self._user_created

    @user_created.setter
    def user_created(self, user_created):
        """Sets the user_created of this SharedTextContainerDetails.


        :param user_created: The user_created of this SharedTextContainerDetails.
        :type user_created: str
        """

        self._user_created = user_created

    @property
    def user_modified(self):
        """Gets the user_modified of this SharedTextContainerDetails.


        :return: The user_modified of this SharedTextContainerDetails.
        :rtype: str
        """
        return self._user_modified

    @user_modified.setter
    def user_modified(self, user_modified):
        """Sets the user_modified of this SharedTextContainerDetails.


        :param user_modified: The user_modified of this SharedTextContainerDetails.
        :type user_modified: str
        """

        self._user_modified = user_modified
