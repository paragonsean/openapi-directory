# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.theme_themes_details import ThemeThemesDetails
from openapi_server import util


class ThemeFontsDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, body_font: str=None, date_created: datetime=None, date_modified: datetime=None, heading_font: str=None, id: str=None, theme: ThemeThemesDetails=None, theme_id: str=None, user_created: str=None, user_modified: str=None):
        """ThemeFontsDetails - a model defined in OpenAPI

        :param body_font: The body_font of this ThemeFontsDetails.
        :param date_created: The date_created of this ThemeFontsDetails.
        :param date_modified: The date_modified of this ThemeFontsDetails.
        :param heading_font: The heading_font of this ThemeFontsDetails.
        :param id: The id of this ThemeFontsDetails.
        :param theme: The theme of this ThemeFontsDetails.
        :param theme_id: The theme_id of this ThemeFontsDetails.
        :param user_created: The user_created of this ThemeFontsDetails.
        :param user_modified: The user_modified of this ThemeFontsDetails.
        """
        self.openapi_types = {
            'body_font': str,
            'date_created': datetime,
            'date_modified': datetime,
            'heading_font': str,
            'id': str,
            'theme': ThemeThemesDetails,
            'theme_id': str,
            'user_created': str,
            'user_modified': str
        }

        self.attribute_map = {
            'body_font': 'bodyFont',
            'date_created': 'dateCreated',
            'date_modified': 'dateModified',
            'heading_font': 'headingFont',
            'id': 'id',
            'theme': 'theme',
            'theme_id': 'themeId',
            'user_created': 'userCreated',
            'user_modified': 'userModified'
        }

        self._body_font = body_font
        self._date_created = date_created
        self._date_modified = date_modified
        self._heading_font = heading_font
        self._id = id
        self._theme = theme
        self._theme_id = theme_id
        self._user_created = user_created
        self._user_modified = user_modified

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ThemeFontsDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Theme.Fonts.Details of this ThemeFontsDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def body_font(self):
        """Gets the body_font of this ThemeFontsDetails.


        :return: The body_font of this ThemeFontsDetails.
        :rtype: str
        """
        return self._body_font

    @body_font.setter
    def body_font(self, body_font):
        """Sets the body_font of this ThemeFontsDetails.


        :param body_font: The body_font of this ThemeFontsDetails.
        :type body_font: str
        """

        self._body_font = body_font

    @property
    def date_created(self):
        """Gets the date_created of this ThemeFontsDetails.


        :return: The date_created of this ThemeFontsDetails.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this ThemeFontsDetails.


        :param date_created: The date_created of this ThemeFontsDetails.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_modified(self):
        """Gets the date_modified of this ThemeFontsDetails.


        :return: The date_modified of this ThemeFontsDetails.
        :rtype: datetime
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this ThemeFontsDetails.


        :param date_modified: The date_modified of this ThemeFontsDetails.
        :type date_modified: datetime
        """

        self._date_modified = date_modified

    @property
    def heading_font(self):
        """Gets the heading_font of this ThemeFontsDetails.


        :return: The heading_font of this ThemeFontsDetails.
        :rtype: str
        """
        return self._heading_font

    @heading_font.setter
    def heading_font(self, heading_font):
        """Sets the heading_font of this ThemeFontsDetails.


        :param heading_font: The heading_font of this ThemeFontsDetails.
        :type heading_font: str
        """

        self._heading_font = heading_font

    @property
    def id(self):
        """Gets the id of this ThemeFontsDetails.


        :return: The id of this ThemeFontsDetails.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ThemeFontsDetails.


        :param id: The id of this ThemeFontsDetails.
        :type id: str
        """

        self._id = id

    @property
    def theme(self):
        """Gets the theme of this ThemeFontsDetails.


        :return: The theme of this ThemeFontsDetails.
        :rtype: ThemeThemesDetails
        """
        return self._theme

    @theme.setter
    def theme(self, theme):
        """Sets the theme of this ThemeFontsDetails.


        :param theme: The theme of this ThemeFontsDetails.
        :type theme: ThemeThemesDetails
        """

        self._theme = theme

    @property
    def theme_id(self):
        """Gets the theme_id of this ThemeFontsDetails.


        :return: The theme_id of this ThemeFontsDetails.
        :rtype: str
        """
        return self._theme_id

    @theme_id.setter
    def theme_id(self, theme_id):
        """Sets the theme_id of this ThemeFontsDetails.


        :param theme_id: The theme_id of this ThemeFontsDetails.
        :type theme_id: str
        """

        self._theme_id = theme_id

    @property
    def user_created(self):
        """Gets the user_created of this ThemeFontsDetails.


        :return: The user_created of this ThemeFontsDetails.
        :rtype: str
        """
        return self._user_created

    @user_created.setter
    def user_created(self, user_created):
        """Sets the user_created of this ThemeFontsDetails.


        :param user_created: The user_created of this ThemeFontsDetails.
        :type user_created: str
        """

        self._user_created = user_created

    @property
    def user_modified(self):
        """Gets the user_modified of this ThemeFontsDetails.


        :return: The user_modified of this ThemeFontsDetails.
        :rtype: str
        """
        return self._user_modified

    @user_modified.setter
    def user_modified(self, user_modified):
        """Sets the user_modified of this ThemeFontsDetails.


        :param user_modified: The user_modified of this ThemeFontsDetails.
        :type user_modified: str
        """

        self._user_modified = user_modified
