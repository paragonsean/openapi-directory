# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.chart_chart_data_details import ChartChartDataDetails
from openapi_server.models.chart_columns_details import ChartColumnsDetails
from openapi_server import util


class ChartColumnCollectionsDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, chart_data: ChartChartDataDetails=None, chart_data_id: str=None, columns: List[ChartColumnsDetails]=None, date_created: datetime=None, date_modified: datetime=None, id: str=None, user_created: str=None, user_modified: str=None):
        """ChartColumnCollectionsDetails - a model defined in OpenAPI

        :param chart_data: The chart_data of this ChartColumnCollectionsDetails.
        :param chart_data_id: The chart_data_id of this ChartColumnCollectionsDetails.
        :param columns: The columns of this ChartColumnCollectionsDetails.
        :param date_created: The date_created of this ChartColumnCollectionsDetails.
        :param date_modified: The date_modified of this ChartColumnCollectionsDetails.
        :param id: The id of this ChartColumnCollectionsDetails.
        :param user_created: The user_created of this ChartColumnCollectionsDetails.
        :param user_modified: The user_modified of this ChartColumnCollectionsDetails.
        """
        self.openapi_types = {
            'chart_data': ChartChartDataDetails,
            'chart_data_id': str,
            'columns': List[ChartColumnsDetails],
            'date_created': datetime,
            'date_modified': datetime,
            'id': str,
            'user_created': str,
            'user_modified': str
        }

        self.attribute_map = {
            'chart_data': 'chartData',
            'chart_data_id': 'chartDataId',
            'columns': 'columns',
            'date_created': 'dateCreated',
            'date_modified': 'dateModified',
            'id': 'id',
            'user_created': 'userCreated',
            'user_modified': 'userModified'
        }

        self._chart_data = chart_data
        self._chart_data_id = chart_data_id
        self._columns = columns
        self._date_created = date_created
        self._date_modified = date_modified
        self._id = id
        self._user_created = user_created
        self._user_modified = user_modified

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChartColumnCollectionsDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Chart.ColumnCollections.Details of this ChartColumnCollectionsDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def chart_data(self):
        """Gets the chart_data of this ChartColumnCollectionsDetails.


        :return: The chart_data of this ChartColumnCollectionsDetails.
        :rtype: ChartChartDataDetails
        """
        return self._chart_data

    @chart_data.setter
    def chart_data(self, chart_data):
        """Sets the chart_data of this ChartColumnCollectionsDetails.


        :param chart_data: The chart_data of this ChartColumnCollectionsDetails.
        :type chart_data: ChartChartDataDetails
        """

        self._chart_data = chart_data

    @property
    def chart_data_id(self):
        """Gets the chart_data_id of this ChartColumnCollectionsDetails.


        :return: The chart_data_id of this ChartColumnCollectionsDetails.
        :rtype: str
        """
        return self._chart_data_id

    @chart_data_id.setter
    def chart_data_id(self, chart_data_id):
        """Sets the chart_data_id of this ChartColumnCollectionsDetails.


        :param chart_data_id: The chart_data_id of this ChartColumnCollectionsDetails.
        :type chart_data_id: str
        """

        self._chart_data_id = chart_data_id

    @property
    def columns(self):
        """Gets the columns of this ChartColumnCollectionsDetails.


        :return: The columns of this ChartColumnCollectionsDetails.
        :rtype: List[ChartColumnsDetails]
        """
        return self._columns

    @columns.setter
    def columns(self, columns):
        """Sets the columns of this ChartColumnCollectionsDetails.


        :param columns: The columns of this ChartColumnCollectionsDetails.
        :type columns: List[ChartColumnsDetails]
        """

        self._columns = columns

    @property
    def date_created(self):
        """Gets the date_created of this ChartColumnCollectionsDetails.


        :return: The date_created of this ChartColumnCollectionsDetails.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this ChartColumnCollectionsDetails.


        :param date_created: The date_created of this ChartColumnCollectionsDetails.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_modified(self):
        """Gets the date_modified of this ChartColumnCollectionsDetails.


        :return: The date_modified of this ChartColumnCollectionsDetails.
        :rtype: datetime
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this ChartColumnCollectionsDetails.


        :param date_modified: The date_modified of this ChartColumnCollectionsDetails.
        :type date_modified: datetime
        """

        self._date_modified = date_modified

    @property
    def id(self):
        """Gets the id of this ChartColumnCollectionsDetails.


        :return: The id of this ChartColumnCollectionsDetails.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ChartColumnCollectionsDetails.


        :param id: The id of this ChartColumnCollectionsDetails.
        :type id: str
        """

        self._id = id

    @property
    def user_created(self):
        """Gets the user_created of this ChartColumnCollectionsDetails.


        :return: The user_created of this ChartColumnCollectionsDetails.
        :rtype: str
        """
        return self._user_created

    @user_created.setter
    def user_created(self, user_created):
        """Sets the user_created of this ChartColumnCollectionsDetails.


        :param user_created: The user_created of this ChartColumnCollectionsDetails.
        :type user_created: str
        """

        self._user_created = user_created

    @property
    def user_modified(self):
        """Gets the user_modified of this ChartColumnCollectionsDetails.


        :return: The user_modified of this ChartColumnCollectionsDetails.
        :rtype: str
        """
        return self._user_modified

    @user_modified.setter
    def user_modified(self, user_modified):
        """Sets the user_modified of this ChartColumnCollectionsDetails.


        :param user_modified: The user_modified of this ChartColumnCollectionsDetails.
        :type user_modified: str
        """

        self._user_modified = user_modified
