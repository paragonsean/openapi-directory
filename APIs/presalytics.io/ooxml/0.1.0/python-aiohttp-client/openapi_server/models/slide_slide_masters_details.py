# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.slide_color_maps_details import SlideColorMapsDetails
from openapi_server.models.slide_slides_details import SlideSlidesDetails
from openapi_server import util


class SlideSlideMastersDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, color_map: SlideColorMapsDetails=None, date_created: datetime=None, date_modified: datetime=None, id: str=None, parent_slide: SlideSlidesDetails=None, slide_id: str=None, user_created: str=None, user_modified: str=None):
        """SlideSlideMastersDetails - a model defined in OpenAPI

        :param color_map: The color_map of this SlideSlideMastersDetails.
        :param date_created: The date_created of this SlideSlideMastersDetails.
        :param date_modified: The date_modified of this SlideSlideMastersDetails.
        :param id: The id of this SlideSlideMastersDetails.
        :param parent_slide: The parent_slide of this SlideSlideMastersDetails.
        :param slide_id: The slide_id of this SlideSlideMastersDetails.
        :param user_created: The user_created of this SlideSlideMastersDetails.
        :param user_modified: The user_modified of this SlideSlideMastersDetails.
        """
        self.openapi_types = {
            'color_map': SlideColorMapsDetails,
            'date_created': datetime,
            'date_modified': datetime,
            'id': str,
            'parent_slide': SlideSlidesDetails,
            'slide_id': str,
            'user_created': str,
            'user_modified': str
        }

        self.attribute_map = {
            'color_map': 'colorMap',
            'date_created': 'dateCreated',
            'date_modified': 'dateModified',
            'id': 'id',
            'parent_slide': 'parentSlide',
            'slide_id': 'slideId',
            'user_created': 'userCreated',
            'user_modified': 'userModified'
        }

        self._color_map = color_map
        self._date_created = date_created
        self._date_modified = date_modified
        self._id = id
        self._parent_slide = parent_slide
        self._slide_id = slide_id
        self._user_created = user_created
        self._user_modified = user_modified

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SlideSlideMastersDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Slide.SlideMasters.Details of this SlideSlideMastersDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def color_map(self):
        """Gets the color_map of this SlideSlideMastersDetails.


        :return: The color_map of this SlideSlideMastersDetails.
        :rtype: SlideColorMapsDetails
        """
        return self._color_map

    @color_map.setter
    def color_map(self, color_map):
        """Sets the color_map of this SlideSlideMastersDetails.


        :param color_map: The color_map of this SlideSlideMastersDetails.
        :type color_map: SlideColorMapsDetails
        """

        self._color_map = color_map

    @property
    def date_created(self):
        """Gets the date_created of this SlideSlideMastersDetails.


        :return: The date_created of this SlideSlideMastersDetails.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this SlideSlideMastersDetails.


        :param date_created: The date_created of this SlideSlideMastersDetails.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_modified(self):
        """Gets the date_modified of this SlideSlideMastersDetails.


        :return: The date_modified of this SlideSlideMastersDetails.
        :rtype: datetime
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this SlideSlideMastersDetails.


        :param date_modified: The date_modified of this SlideSlideMastersDetails.
        :type date_modified: datetime
        """

        self._date_modified = date_modified

    @property
    def id(self):
        """Gets the id of this SlideSlideMastersDetails.


        :return: The id of this SlideSlideMastersDetails.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SlideSlideMastersDetails.


        :param id: The id of this SlideSlideMastersDetails.
        :type id: str
        """

        self._id = id

    @property
    def parent_slide(self):
        """Gets the parent_slide of this SlideSlideMastersDetails.


        :return: The parent_slide of this SlideSlideMastersDetails.
        :rtype: SlideSlidesDetails
        """
        return self._parent_slide

    @parent_slide.setter
    def parent_slide(self, parent_slide):
        """Sets the parent_slide of this SlideSlideMastersDetails.


        :param parent_slide: The parent_slide of this SlideSlideMastersDetails.
        :type parent_slide: SlideSlidesDetails
        """

        self._parent_slide = parent_slide

    @property
    def slide_id(self):
        """Gets the slide_id of this SlideSlideMastersDetails.


        :return: The slide_id of this SlideSlideMastersDetails.
        :rtype: str
        """
        return self._slide_id

    @slide_id.setter
    def slide_id(self, slide_id):
        """Sets the slide_id of this SlideSlideMastersDetails.


        :param slide_id: The slide_id of this SlideSlideMastersDetails.
        :type slide_id: str
        """

        self._slide_id = slide_id

    @property
    def user_created(self):
        """Gets the user_created of this SlideSlideMastersDetails.


        :return: The user_created of this SlideSlideMastersDetails.
        :rtype: str
        """
        return self._user_created

    @user_created.setter
    def user_created(self, user_created):
        """Sets the user_created of this SlideSlideMastersDetails.


        :param user_created: The user_created of this SlideSlideMastersDetails.
        :type user_created: str
        """

        self._user_created = user_created

    @property
    def user_modified(self):
        """Gets the user_modified of this SlideSlideMastersDetails.


        :return: The user_modified of this SlideSlideMastersDetails.
        :rtype: str
        """
        return self._user_modified

    @user_modified.setter
    def user_modified(self, user_modified):
        """Sets the user_modified of this SlideSlideMastersDetails.


        :param user_modified: The user_modified of this SlideSlideMastersDetails.
        :type user_modified: str
        """

        self._user_modified = user_modified
