# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.chart_axes_details import ChartAxesDetails
from openapi_server.models.chart_chart_data_details import ChartChartDataDetails
from openapi_server.models.chart_rows_details import ChartRowsDetails
from openapi_server import util


class ChartRowCollectionsDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, axis: ChartAxesDetails=None, axis_id: str=None, chart_data: ChartChartDataDetails=None, chart_data_id: str=None, date_created: datetime=None, date_modified: datetime=None, id: str=None, name_format_type: int=None, rows: List[ChartRowsDetails]=None, user_created: str=None, user_modified: str=None):
        """ChartRowCollectionsDetails - a model defined in OpenAPI

        :param axis: The axis of this ChartRowCollectionsDetails.
        :param axis_id: The axis_id of this ChartRowCollectionsDetails.
        :param chart_data: The chart_data of this ChartRowCollectionsDetails.
        :param chart_data_id: The chart_data_id of this ChartRowCollectionsDetails.
        :param date_created: The date_created of this ChartRowCollectionsDetails.
        :param date_modified: The date_modified of this ChartRowCollectionsDetails.
        :param id: The id of this ChartRowCollectionsDetails.
        :param name_format_type: The name_format_type of this ChartRowCollectionsDetails.
        :param rows: The rows of this ChartRowCollectionsDetails.
        :param user_created: The user_created of this ChartRowCollectionsDetails.
        :param user_modified: The user_modified of this ChartRowCollectionsDetails.
        """
        self.openapi_types = {
            'axis': ChartAxesDetails,
            'axis_id': str,
            'chart_data': ChartChartDataDetails,
            'chart_data_id': str,
            'date_created': datetime,
            'date_modified': datetime,
            'id': str,
            'name_format_type': int,
            'rows': List[ChartRowsDetails],
            'user_created': str,
            'user_modified': str
        }

        self.attribute_map = {
            'axis': 'axis',
            'axis_id': 'axisId',
            'chart_data': 'chartData',
            'chart_data_id': 'chartDataId',
            'date_created': 'dateCreated',
            'date_modified': 'dateModified',
            'id': 'id',
            'name_format_type': 'nameFormatType',
            'rows': 'rows',
            'user_created': 'userCreated',
            'user_modified': 'userModified'
        }

        self._axis = axis
        self._axis_id = axis_id
        self._chart_data = chart_data
        self._chart_data_id = chart_data_id
        self._date_created = date_created
        self._date_modified = date_modified
        self._id = id
        self._name_format_type = name_format_type
        self._rows = rows
        self._user_created = user_created
        self._user_modified = user_modified

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChartRowCollectionsDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Chart.RowCollections.Details of this ChartRowCollectionsDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def axis(self):
        """Gets the axis of this ChartRowCollectionsDetails.


        :return: The axis of this ChartRowCollectionsDetails.
        :rtype: ChartAxesDetails
        """
        return self._axis

    @axis.setter
    def axis(self, axis):
        """Sets the axis of this ChartRowCollectionsDetails.


        :param axis: The axis of this ChartRowCollectionsDetails.
        :type axis: ChartAxesDetails
        """

        self._axis = axis

    @property
    def axis_id(self):
        """Gets the axis_id of this ChartRowCollectionsDetails.


        :return: The axis_id of this ChartRowCollectionsDetails.
        :rtype: str
        """
        return self._axis_id

    @axis_id.setter
    def axis_id(self, axis_id):
        """Sets the axis_id of this ChartRowCollectionsDetails.


        :param axis_id: The axis_id of this ChartRowCollectionsDetails.
        :type axis_id: str
        """

        self._axis_id = axis_id

    @property
    def chart_data(self):
        """Gets the chart_data of this ChartRowCollectionsDetails.


        :return: The chart_data of this ChartRowCollectionsDetails.
        :rtype: ChartChartDataDetails
        """
        return self._chart_data

    @chart_data.setter
    def chart_data(self, chart_data):
        """Sets the chart_data of this ChartRowCollectionsDetails.


        :param chart_data: The chart_data of this ChartRowCollectionsDetails.
        :type chart_data: ChartChartDataDetails
        """

        self._chart_data = chart_data

    @property
    def chart_data_id(self):
        """Gets the chart_data_id of this ChartRowCollectionsDetails.


        :return: The chart_data_id of this ChartRowCollectionsDetails.
        :rtype: str
        """
        return self._chart_data_id

    @chart_data_id.setter
    def chart_data_id(self, chart_data_id):
        """Sets the chart_data_id of this ChartRowCollectionsDetails.


        :param chart_data_id: The chart_data_id of this ChartRowCollectionsDetails.
        :type chart_data_id: str
        """

        self._chart_data_id = chart_data_id

    @property
    def date_created(self):
        """Gets the date_created of this ChartRowCollectionsDetails.


        :return: The date_created of this ChartRowCollectionsDetails.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this ChartRowCollectionsDetails.


        :param date_created: The date_created of this ChartRowCollectionsDetails.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_modified(self):
        """Gets the date_modified of this ChartRowCollectionsDetails.


        :return: The date_modified of this ChartRowCollectionsDetails.
        :rtype: datetime
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this ChartRowCollectionsDetails.


        :param date_modified: The date_modified of this ChartRowCollectionsDetails.
        :type date_modified: datetime
        """

        self._date_modified = date_modified

    @property
    def id(self):
        """Gets the id of this ChartRowCollectionsDetails.


        :return: The id of this ChartRowCollectionsDetails.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ChartRowCollectionsDetails.


        :param id: The id of this ChartRowCollectionsDetails.
        :type id: str
        """

        self._id = id

    @property
    def name_format_type(self):
        """Gets the name_format_type of this ChartRowCollectionsDetails.


        :return: The name_format_type of this ChartRowCollectionsDetails.
        :rtype: int
        """
        return self._name_format_type

    @name_format_type.setter
    def name_format_type(self, name_format_type):
        """Sets the name_format_type of this ChartRowCollectionsDetails.


        :param name_format_type: The name_format_type of this ChartRowCollectionsDetails.
        :type name_format_type: int
        """

        self._name_format_type = name_format_type

    @property
    def rows(self):
        """Gets the rows of this ChartRowCollectionsDetails.


        :return: The rows of this ChartRowCollectionsDetails.
        :rtype: List[ChartRowsDetails]
        """
        return self._rows

    @rows.setter
    def rows(self, rows):
        """Sets the rows of this ChartRowCollectionsDetails.


        :param rows: The rows of this ChartRowCollectionsDetails.
        :type rows: List[ChartRowsDetails]
        """

        self._rows = rows

    @property
    def user_created(self):
        """Gets the user_created of this ChartRowCollectionsDetails.


        :return: The user_created of this ChartRowCollectionsDetails.
        :rtype: str
        """
        return self._user_created

    @user_created.setter
    def user_created(self, user_created):
        """Sets the user_created of this ChartRowCollectionsDetails.


        :param user_created: The user_created of this ChartRowCollectionsDetails.
        :type user_created: str
        """

        self._user_created = user_created

    @property
    def user_modified(self):
        """Gets the user_modified of this ChartRowCollectionsDetails.


        :return: The user_modified of this ChartRowCollectionsDetails.
        :rtype: str
        """
        return self._user_modified

    @user_modified.setter
    def user_modified(self, user_modified):
        """Sets the user_modified of this ChartRowCollectionsDetails.


        :param user_modified: The user_modified of this ChartRowCollectionsDetails.
        :type user_modified: str
        """

        self._user_modified = user_modified
