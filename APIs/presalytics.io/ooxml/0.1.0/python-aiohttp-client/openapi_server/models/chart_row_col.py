# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ChartRowCol(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, col_name: str=None, col_qualified_assy: str=None, id: str=None, row_name: str=None, row_qualifed_assy: str=None, type_id: int=None):
        """ChartRowCol - a model defined in OpenAPI

        :param col_name: The col_name of this ChartRowCol.
        :param col_qualified_assy: The col_qualified_assy of this ChartRowCol.
        :param id: The id of this ChartRowCol.
        :param row_name: The row_name of this ChartRowCol.
        :param row_qualifed_assy: The row_qualifed_assy of this ChartRowCol.
        :param type_id: The type_id of this ChartRowCol.
        """
        self.openapi_types = {
            'col_name': str,
            'col_qualified_assy': str,
            'id': str,
            'row_name': str,
            'row_qualifed_assy': str,
            'type_id': int
        }

        self.attribute_map = {
            'col_name': 'colName',
            'col_qualified_assy': 'colQualifiedAssy',
            'id': 'id',
            'row_name': 'rowName',
            'row_qualifed_assy': 'rowQualifedAssy',
            'type_id': 'typeId'
        }

        self._col_name = col_name
        self._col_qualified_assy = col_qualified_assy
        self._id = id
        self._row_name = row_name
        self._row_qualifed_assy = row_qualifed_assy
        self._type_id = type_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChartRowCol':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Chart.RowCol of this ChartRowCol.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def col_name(self):
        """Gets the col_name of this ChartRowCol.


        :return: The col_name of this ChartRowCol.
        :rtype: str
        """
        return self._col_name

    @col_name.setter
    def col_name(self, col_name):
        """Sets the col_name of this ChartRowCol.


        :param col_name: The col_name of this ChartRowCol.
        :type col_name: str
        """

        self._col_name = col_name

    @property
    def col_qualified_assy(self):
        """Gets the col_qualified_assy of this ChartRowCol.


        :return: The col_qualified_assy of this ChartRowCol.
        :rtype: str
        """
        return self._col_qualified_assy

    @col_qualified_assy.setter
    def col_qualified_assy(self, col_qualified_assy):
        """Sets the col_qualified_assy of this ChartRowCol.


        :param col_qualified_assy: The col_qualified_assy of this ChartRowCol.
        :type col_qualified_assy: str
        """

        self._col_qualified_assy = col_qualified_assy

    @property
    def id(self):
        """Gets the id of this ChartRowCol.


        :return: The id of this ChartRowCol.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ChartRowCol.


        :param id: The id of this ChartRowCol.
        :type id: str
        """

        self._id = id

    @property
    def row_name(self):
        """Gets the row_name of this ChartRowCol.


        :return: The row_name of this ChartRowCol.
        :rtype: str
        """
        return self._row_name

    @row_name.setter
    def row_name(self, row_name):
        """Sets the row_name of this ChartRowCol.


        :param row_name: The row_name of this ChartRowCol.
        :type row_name: str
        """

        self._row_name = row_name

    @property
    def row_qualifed_assy(self):
        """Gets the row_qualifed_assy of this ChartRowCol.


        :return: The row_qualifed_assy of this ChartRowCol.
        :rtype: str
        """
        return self._row_qualifed_assy

    @row_qualifed_assy.setter
    def row_qualifed_assy(self, row_qualifed_assy):
        """Sets the row_qualifed_assy of this ChartRowCol.


        :param row_qualifed_assy: The row_qualifed_assy of this ChartRowCol.
        :type row_qualifed_assy: str
        """

        self._row_qualifed_assy = row_qualifed_assy

    @property
    def type_id(self):
        """Gets the type_id of this ChartRowCol.


        :return: The type_id of this ChartRowCol.
        :rtype: int
        """
        return self._type_id

    @type_id.setter
    def type_id(self, type_id):
        """Sets the type_id of this ChartRowCol.


        :param type_id: The type_id of this ChartRowCol.
        :type type_id: int
        """

        self._type_id = type_id
