# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.chart_charts_details import ChartChartsDetails
from openapi_server.models.shared_text_container_details import SharedTextContainerDetails
from openapi_server import util


class ChartAxesDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, axis_data_type_id: int=None, chart: ChartChartsDetails=None, charts_id: str=None, date_created: datetime=None, date_modified: datetime=None, id: str=None, ooxml_id: int=None, title_text_container: SharedTextContainerDetails=None, user_created: str=None, user_modified: str=None):
        """ChartAxesDetails - a model defined in OpenAPI

        :param axis_data_type_id: The axis_data_type_id of this ChartAxesDetails.
        :param chart: The chart of this ChartAxesDetails.
        :param charts_id: The charts_id of this ChartAxesDetails.
        :param date_created: The date_created of this ChartAxesDetails.
        :param date_modified: The date_modified of this ChartAxesDetails.
        :param id: The id of this ChartAxesDetails.
        :param ooxml_id: The ooxml_id of this ChartAxesDetails.
        :param title_text_container: The title_text_container of this ChartAxesDetails.
        :param user_created: The user_created of this ChartAxesDetails.
        :param user_modified: The user_modified of this ChartAxesDetails.
        """
        self.openapi_types = {
            'axis_data_type_id': int,
            'chart': ChartChartsDetails,
            'charts_id': str,
            'date_created': datetime,
            'date_modified': datetime,
            'id': str,
            'ooxml_id': int,
            'title_text_container': SharedTextContainerDetails,
            'user_created': str,
            'user_modified': str
        }

        self.attribute_map = {
            'axis_data_type_id': 'axisDataTypeId',
            'chart': 'chart',
            'charts_id': 'chartsId',
            'date_created': 'dateCreated',
            'date_modified': 'dateModified',
            'id': 'id',
            'ooxml_id': 'ooxmlId',
            'title_text_container': 'titleTextContainer',
            'user_created': 'userCreated',
            'user_modified': 'userModified'
        }

        self._axis_data_type_id = axis_data_type_id
        self._chart = chart
        self._charts_id = charts_id
        self._date_created = date_created
        self._date_modified = date_modified
        self._id = id
        self._ooxml_id = ooxml_id
        self._title_text_container = title_text_container
        self._user_created = user_created
        self._user_modified = user_modified

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChartAxesDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Chart.Axes.Details of this ChartAxesDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def axis_data_type_id(self):
        """Gets the axis_data_type_id of this ChartAxesDetails.


        :return: The axis_data_type_id of this ChartAxesDetails.
        :rtype: int
        """
        return self._axis_data_type_id

    @axis_data_type_id.setter
    def axis_data_type_id(self, axis_data_type_id):
        """Sets the axis_data_type_id of this ChartAxesDetails.


        :param axis_data_type_id: The axis_data_type_id of this ChartAxesDetails.
        :type axis_data_type_id: int
        """

        self._axis_data_type_id = axis_data_type_id

    @property
    def chart(self):
        """Gets the chart of this ChartAxesDetails.


        :return: The chart of this ChartAxesDetails.
        :rtype: ChartChartsDetails
        """
        return self._chart

    @chart.setter
    def chart(self, chart):
        """Sets the chart of this ChartAxesDetails.


        :param chart: The chart of this ChartAxesDetails.
        :type chart: ChartChartsDetails
        """

        self._chart = chart

    @property
    def charts_id(self):
        """Gets the charts_id of this ChartAxesDetails.


        :return: The charts_id of this ChartAxesDetails.
        :rtype: str
        """
        return self._charts_id

    @charts_id.setter
    def charts_id(self, charts_id):
        """Sets the charts_id of this ChartAxesDetails.


        :param charts_id: The charts_id of this ChartAxesDetails.
        :type charts_id: str
        """

        self._charts_id = charts_id

    @property
    def date_created(self):
        """Gets the date_created of this ChartAxesDetails.


        :return: The date_created of this ChartAxesDetails.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this ChartAxesDetails.


        :param date_created: The date_created of this ChartAxesDetails.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_modified(self):
        """Gets the date_modified of this ChartAxesDetails.


        :return: The date_modified of this ChartAxesDetails.
        :rtype: datetime
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this ChartAxesDetails.


        :param date_modified: The date_modified of this ChartAxesDetails.
        :type date_modified: datetime
        """

        self._date_modified = date_modified

    @property
    def id(self):
        """Gets the id of this ChartAxesDetails.


        :return: The id of this ChartAxesDetails.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ChartAxesDetails.


        :param id: The id of this ChartAxesDetails.
        :type id: str
        """

        self._id = id

    @property
    def ooxml_id(self):
        """Gets the ooxml_id of this ChartAxesDetails.


        :return: The ooxml_id of this ChartAxesDetails.
        :rtype: int
        """
        return self._ooxml_id

    @ooxml_id.setter
    def ooxml_id(self, ooxml_id):
        """Sets the ooxml_id of this ChartAxesDetails.


        :param ooxml_id: The ooxml_id of this ChartAxesDetails.
        :type ooxml_id: int
        """

        self._ooxml_id = ooxml_id

    @property
    def title_text_container(self):
        """Gets the title_text_container of this ChartAxesDetails.


        :return: The title_text_container of this ChartAxesDetails.
        :rtype: SharedTextContainerDetails
        """
        return self._title_text_container

    @title_text_container.setter
    def title_text_container(self, title_text_container):
        """Sets the title_text_container of this ChartAxesDetails.


        :param title_text_container: The title_text_container of this ChartAxesDetails.
        :type title_text_container: SharedTextContainerDetails
        """

        self._title_text_container = title_text_container

    @property
    def user_created(self):
        """Gets the user_created of this ChartAxesDetails.


        :return: The user_created of this ChartAxesDetails.
        :rtype: str
        """
        return self._user_created

    @user_created.setter
    def user_created(self, user_created):
        """Sets the user_created of this ChartAxesDetails.


        :param user_created: The user_created of this ChartAxesDetails.
        :type user_created: str
        """

        self._user_created = user_created

    @property
    def user_modified(self):
        """Gets the user_modified of this ChartAxesDetails.


        :return: The user_modified of this ChartAxesDetails.
        :rtype: str
        """
        return self._user_modified

    @user_modified.setter
    def user_modified(self, user_modified):
        """Sets the user_modified of this ChartAxesDetails.


        :param user_modified: The user_modified of this ChartAxesDetails.
        :type user_modified: str
        """

        self._user_modified = user_modified
