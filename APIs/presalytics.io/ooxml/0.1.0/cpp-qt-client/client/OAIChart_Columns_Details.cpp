/**
 * OOXML Automation
 * This API helps users convert Excel and Powerpoint documents into rich, live dashboards and stories.
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChart_Columns_Details.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChart_Columns_Details::OAIChart_Columns_Details(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChart_Columns_Details::OAIChart_Columns_Details() {
    this->initializeModel();
}

OAIChart_Columns_Details::~OAIChart_Columns_Details() {}

void OAIChart_Columns_Details::initializeModel() {

    m_axis_isSet = false;
    m_axis_isValid = false;

    m_axis_id_isSet = false;
    m_axis_id_isValid = false;

    m_column_collection_isSet = false;
    m_column_collection_isValid = false;

    m_column_collection_id_isSet = false;
    m_column_collection_id_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_date_modified_isSet = false;
    m_date_modified_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_index_isSet = false;
    m_index_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_user_created_isSet = false;
    m_user_created_isValid = false;

    m_user_modified_isSet = false;
    m_user_modified_isValid = false;
}

void OAIChart_Columns_Details::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIChart_Columns_Details::fromJsonObject(QJsonObject json) {

    m_axis_isValid = ::OpenAPI::fromJsonValue(m_axis, json[QString("axis")]);
    m_axis_isSet = !json[QString("axis")].isNull() && m_axis_isValid;

    m_axis_id_isValid = ::OpenAPI::fromJsonValue(m_axis_id, json[QString("axisId")]);
    m_axis_id_isSet = !json[QString("axisId")].isNull() && m_axis_id_isValid;

    m_column_collection_isValid = ::OpenAPI::fromJsonValue(m_column_collection, json[QString("columnCollection")]);
    m_column_collection_isSet = !json[QString("columnCollection")].isNull() && m_column_collection_isValid;

    m_column_collection_id_isValid = ::OpenAPI::fromJsonValue(m_column_collection_id, json[QString("columnCollectionId")]);
    m_column_collection_id_isSet = !json[QString("columnCollectionId")].isNull() && m_column_collection_id_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("dateCreated")]);
    m_date_created_isSet = !json[QString("dateCreated")].isNull() && m_date_created_isValid;

    m_date_modified_isValid = ::OpenAPI::fromJsonValue(m_date_modified, json[QString("dateModified")]);
    m_date_modified_isSet = !json[QString("dateModified")].isNull() && m_date_modified_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_index_isValid = ::OpenAPI::fromJsonValue(m_index, json[QString("index")]);
    m_index_isSet = !json[QString("index")].isNull() && m_index_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_user_created_isValid = ::OpenAPI::fromJsonValue(m_user_created, json[QString("userCreated")]);
    m_user_created_isSet = !json[QString("userCreated")].isNull() && m_user_created_isValid;

    m_user_modified_isValid = ::OpenAPI::fromJsonValue(m_user_modified, json[QString("userModified")]);
    m_user_modified_isSet = !json[QString("userModified")].isNull() && m_user_modified_isValid;
}

QString OAIChart_Columns_Details::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIChart_Columns_Details::asJsonObject() const {
    QJsonObject obj;
    if (m_axis.isSet()) {
        obj.insert(QString("axis"), ::OpenAPI::toJsonValue(m_axis));
    }
    if (m_axis_id_isSet) {
        obj.insert(QString("axisId"), ::OpenAPI::toJsonValue(m_axis_id));
    }
    if (m_column_collection.isSet()) {
        obj.insert(QString("columnCollection"), ::OpenAPI::toJsonValue(m_column_collection));
    }
    if (m_column_collection_id_isSet) {
        obj.insert(QString("columnCollectionId"), ::OpenAPI::toJsonValue(m_column_collection_id));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("dateCreated"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_date_modified_isSet) {
        obj.insert(QString("dateModified"), ::OpenAPI::toJsonValue(m_date_modified));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_index_isSet) {
        obj.insert(QString("index"), ::OpenAPI::toJsonValue(m_index));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_user_created_isSet) {
        obj.insert(QString("userCreated"), ::OpenAPI::toJsonValue(m_user_created));
    }
    if (m_user_modified_isSet) {
        obj.insert(QString("userModified"), ::OpenAPI::toJsonValue(m_user_modified));
    }
    return obj;
}

OAIChart_Axes_Details OAIChart_Columns_Details::getAxis() const {
    return m_axis;
}
void OAIChart_Columns_Details::setAxis(const OAIChart_Axes_Details &axis) {
    m_axis = axis;
    m_axis_isSet = true;
}

bool OAIChart_Columns_Details::is_axis_Set() const{
    return m_axis_isSet;
}

bool OAIChart_Columns_Details::is_axis_Valid() const{
    return m_axis_isValid;
}

QString OAIChart_Columns_Details::getAxisId() const {
    return m_axis_id;
}
void OAIChart_Columns_Details::setAxisId(const QString &axis_id) {
    m_axis_id = axis_id;
    m_axis_id_isSet = true;
}

bool OAIChart_Columns_Details::is_axis_id_Set() const{
    return m_axis_id_isSet;
}

bool OAIChart_Columns_Details::is_axis_id_Valid() const{
    return m_axis_id_isValid;
}

OAIChart_ColumnCollections_Details OAIChart_Columns_Details::getColumnCollection() const {
    return m_column_collection;
}
void OAIChart_Columns_Details::setColumnCollection(const OAIChart_ColumnCollections_Details &column_collection) {
    m_column_collection = column_collection;
    m_column_collection_isSet = true;
}

bool OAIChart_Columns_Details::is_column_collection_Set() const{
    return m_column_collection_isSet;
}

bool OAIChart_Columns_Details::is_column_collection_Valid() const{
    return m_column_collection_isValid;
}

QString OAIChart_Columns_Details::getColumnCollectionId() const {
    return m_column_collection_id;
}
void OAIChart_Columns_Details::setColumnCollectionId(const QString &column_collection_id) {
    m_column_collection_id = column_collection_id;
    m_column_collection_id_isSet = true;
}

bool OAIChart_Columns_Details::is_column_collection_id_Set() const{
    return m_column_collection_id_isSet;
}

bool OAIChart_Columns_Details::is_column_collection_id_Valid() const{
    return m_column_collection_id_isValid;
}

QDateTime OAIChart_Columns_Details::getDateCreated() const {
    return m_date_created;
}
void OAIChart_Columns_Details::setDateCreated(const QDateTime &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAIChart_Columns_Details::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAIChart_Columns_Details::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QDateTime OAIChart_Columns_Details::getDateModified() const {
    return m_date_modified;
}
void OAIChart_Columns_Details::setDateModified(const QDateTime &date_modified) {
    m_date_modified = date_modified;
    m_date_modified_isSet = true;
}

bool OAIChart_Columns_Details::is_date_modified_Set() const{
    return m_date_modified_isSet;
}

bool OAIChart_Columns_Details::is_date_modified_Valid() const{
    return m_date_modified_isValid;
}

QString OAIChart_Columns_Details::getId() const {
    return m_id;
}
void OAIChart_Columns_Details::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIChart_Columns_Details::is_id_Set() const{
    return m_id_isSet;
}

bool OAIChart_Columns_Details::is_id_Valid() const{
    return m_id_isValid;
}

qint32 OAIChart_Columns_Details::getIndex() const {
    return m_index;
}
void OAIChart_Columns_Details::setIndex(const qint32 &index) {
    m_index = index;
    m_index_isSet = true;
}

bool OAIChart_Columns_Details::is_index_Set() const{
    return m_index_isSet;
}

bool OAIChart_Columns_Details::is_index_Valid() const{
    return m_index_isValid;
}

QString OAIChart_Columns_Details::getName() const {
    return m_name;
}
void OAIChart_Columns_Details::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIChart_Columns_Details::is_name_Set() const{
    return m_name_isSet;
}

bool OAIChart_Columns_Details::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIChart_Columns_Details::getUserCreated() const {
    return m_user_created;
}
void OAIChart_Columns_Details::setUserCreated(const QString &user_created) {
    m_user_created = user_created;
    m_user_created_isSet = true;
}

bool OAIChart_Columns_Details::is_user_created_Set() const{
    return m_user_created_isSet;
}

bool OAIChart_Columns_Details::is_user_created_Valid() const{
    return m_user_created_isValid;
}

QString OAIChart_Columns_Details::getUserModified() const {
    return m_user_modified;
}
void OAIChart_Columns_Details::setUserModified(const QString &user_modified) {
    m_user_modified = user_modified;
    m_user_modified_isSet = true;
}

bool OAIChart_Columns_Details::is_user_modified_Set() const{
    return m_user_modified_isSet;
}

bool OAIChart_Columns_Details::is_user_modified_Valid() const{
    return m_user_modified_isValid;
}

bool OAIChart_Columns_Details::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_axis.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_axis_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_column_collection.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_column_collection_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_modified_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_index_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_modified_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIChart_Columns_Details::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
