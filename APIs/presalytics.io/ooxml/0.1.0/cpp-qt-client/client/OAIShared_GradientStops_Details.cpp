/**
 * OOXML Automation
 * This API helps users convert Excel and Powerpoint documents into rich, live dashboards and stories.
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIShared_GradientStops_Details.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIShared_GradientStops_Details::OAIShared_GradientStops_Details(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIShared_GradientStops_Details::OAIShared_GradientStops_Details() {
    this->initializeModel();
}

OAIShared_GradientStops_Details::~OAIShared_GradientStops_Details() {}

void OAIShared_GradientStops_Details::initializeModel() {

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_date_modified_isSet = false;
    m_date_modified_isValid = false;

    m_gradient_fill_isSet = false;
    m_gradient_fill_isValid = false;

    m_gradient_fills_id_isSet = false;
    m_gradient_fills_id_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_position_isSet = false;
    m_position_isValid = false;

    m_solid_fill_isSet = false;
    m_solid_fill_isValid = false;

    m_user_created_isSet = false;
    m_user_created_isValid = false;

    m_user_modified_isSet = false;
    m_user_modified_isValid = false;
}

void OAIShared_GradientStops_Details::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIShared_GradientStops_Details::fromJsonObject(QJsonObject json) {

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("dateCreated")]);
    m_date_created_isSet = !json[QString("dateCreated")].isNull() && m_date_created_isValid;

    m_date_modified_isValid = ::OpenAPI::fromJsonValue(m_date_modified, json[QString("dateModified")]);
    m_date_modified_isSet = !json[QString("dateModified")].isNull() && m_date_modified_isValid;

    m_gradient_fill_isValid = ::OpenAPI::fromJsonValue(m_gradient_fill, json[QString("gradientFill")]);
    m_gradient_fill_isSet = !json[QString("gradientFill")].isNull() && m_gradient_fill_isValid;

    m_gradient_fills_id_isValid = ::OpenAPI::fromJsonValue(m_gradient_fills_id, json[QString("gradientFillsId")]);
    m_gradient_fills_id_isSet = !json[QString("gradientFillsId")].isNull() && m_gradient_fills_id_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_position_isValid = ::OpenAPI::fromJsonValue(m_position, json[QString("position")]);
    m_position_isSet = !json[QString("position")].isNull() && m_position_isValid;

    m_solid_fill_isValid = ::OpenAPI::fromJsonValue(m_solid_fill, json[QString("solidFill")]);
    m_solid_fill_isSet = !json[QString("solidFill")].isNull() && m_solid_fill_isValid;

    m_user_created_isValid = ::OpenAPI::fromJsonValue(m_user_created, json[QString("userCreated")]);
    m_user_created_isSet = !json[QString("userCreated")].isNull() && m_user_created_isValid;

    m_user_modified_isValid = ::OpenAPI::fromJsonValue(m_user_modified, json[QString("userModified")]);
    m_user_modified_isSet = !json[QString("userModified")].isNull() && m_user_modified_isValid;
}

QString OAIShared_GradientStops_Details::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIShared_GradientStops_Details::asJsonObject() const {
    QJsonObject obj;
    if (m_date_created_isSet) {
        obj.insert(QString("dateCreated"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_date_modified_isSet) {
        obj.insert(QString("dateModified"), ::OpenAPI::toJsonValue(m_date_modified));
    }
    if (m_gradient_fill.isSet()) {
        obj.insert(QString("gradientFill"), ::OpenAPI::toJsonValue(m_gradient_fill));
    }
    if (m_gradient_fills_id_isSet) {
        obj.insert(QString("gradientFillsId"), ::OpenAPI::toJsonValue(m_gradient_fills_id));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_position_isSet) {
        obj.insert(QString("position"), ::OpenAPI::toJsonValue(m_position));
    }
    if (m_solid_fill.isSet()) {
        obj.insert(QString("solidFill"), ::OpenAPI::toJsonValue(m_solid_fill));
    }
    if (m_user_created_isSet) {
        obj.insert(QString("userCreated"), ::OpenAPI::toJsonValue(m_user_created));
    }
    if (m_user_modified_isSet) {
        obj.insert(QString("userModified"), ::OpenAPI::toJsonValue(m_user_modified));
    }
    return obj;
}

QDateTime OAIShared_GradientStops_Details::getDateCreated() const {
    return m_date_created;
}
void OAIShared_GradientStops_Details::setDateCreated(const QDateTime &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAIShared_GradientStops_Details::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAIShared_GradientStops_Details::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QDateTime OAIShared_GradientStops_Details::getDateModified() const {
    return m_date_modified;
}
void OAIShared_GradientStops_Details::setDateModified(const QDateTime &date_modified) {
    m_date_modified = date_modified;
    m_date_modified_isSet = true;
}

bool OAIShared_GradientStops_Details::is_date_modified_Set() const{
    return m_date_modified_isSet;
}

bool OAIShared_GradientStops_Details::is_date_modified_Valid() const{
    return m_date_modified_isValid;
}

OAIShared_GradientFills_Details OAIShared_GradientStops_Details::getGradientFill() const {
    return m_gradient_fill;
}
void OAIShared_GradientStops_Details::setGradientFill(const OAIShared_GradientFills_Details &gradient_fill) {
    m_gradient_fill = gradient_fill;
    m_gradient_fill_isSet = true;
}

bool OAIShared_GradientStops_Details::is_gradient_fill_Set() const{
    return m_gradient_fill_isSet;
}

bool OAIShared_GradientStops_Details::is_gradient_fill_Valid() const{
    return m_gradient_fill_isValid;
}

QString OAIShared_GradientStops_Details::getGradientFillsId() const {
    return m_gradient_fills_id;
}
void OAIShared_GradientStops_Details::setGradientFillsId(const QString &gradient_fills_id) {
    m_gradient_fills_id = gradient_fills_id;
    m_gradient_fills_id_isSet = true;
}

bool OAIShared_GradientStops_Details::is_gradient_fills_id_Set() const{
    return m_gradient_fills_id_isSet;
}

bool OAIShared_GradientStops_Details::is_gradient_fills_id_Valid() const{
    return m_gradient_fills_id_isValid;
}

QString OAIShared_GradientStops_Details::getId() const {
    return m_id;
}
void OAIShared_GradientStops_Details::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIShared_GradientStops_Details::is_id_Set() const{
    return m_id_isSet;
}

bool OAIShared_GradientStops_Details::is_id_Valid() const{
    return m_id_isValid;
}

qint32 OAIShared_GradientStops_Details::getPosition() const {
    return m_position;
}
void OAIShared_GradientStops_Details::setPosition(const qint32 &position) {
    m_position = position;
    m_position_isSet = true;
}

bool OAIShared_GradientStops_Details::is_position_Set() const{
    return m_position_isSet;
}

bool OAIShared_GradientStops_Details::is_position_Valid() const{
    return m_position_isValid;
}

OAIShared_SolidFills_Details OAIShared_GradientStops_Details::getSolidFill() const {
    return m_solid_fill;
}
void OAIShared_GradientStops_Details::setSolidFill(const OAIShared_SolidFills_Details &solid_fill) {
    m_solid_fill = solid_fill;
    m_solid_fill_isSet = true;
}

bool OAIShared_GradientStops_Details::is_solid_fill_Set() const{
    return m_solid_fill_isSet;
}

bool OAIShared_GradientStops_Details::is_solid_fill_Valid() const{
    return m_solid_fill_isValid;
}

QString OAIShared_GradientStops_Details::getUserCreated() const {
    return m_user_created;
}
void OAIShared_GradientStops_Details::setUserCreated(const QString &user_created) {
    m_user_created = user_created;
    m_user_created_isSet = true;
}

bool OAIShared_GradientStops_Details::is_user_created_Set() const{
    return m_user_created_isSet;
}

bool OAIShared_GradientStops_Details::is_user_created_Valid() const{
    return m_user_created_isValid;
}

QString OAIShared_GradientStops_Details::getUserModified() const {
    return m_user_modified;
}
void OAIShared_GradientStops_Details::setUserModified(const QString &user_modified) {
    m_user_modified = user_modified;
    m_user_modified_isSet = true;
}

bool OAIShared_GradientStops_Details::is_user_modified_Set() const{
    return m_user_modified_isSet;
}

bool OAIShared_GradientStops_Details::is_user_modified_Valid() const{
    return m_user_modified_isValid;
}

bool OAIShared_GradientStops_Details::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_modified_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gradient_fill.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_gradient_fills_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_position_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_solid_fill.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_modified_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIShared_GradientStops_Details::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
