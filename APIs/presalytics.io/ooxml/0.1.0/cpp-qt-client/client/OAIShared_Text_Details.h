/**
 * OOXML Automation
 * This API helps users convert Excel and Powerpoint documents into rich, live dashboards and stories.
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIShared_Text_Details.h
 *
 * 
 */

#ifndef OAIShared_Text_Details_H
#define OAIShared_Text_Details_H

#include <QJsonObject>

#include "OAIShared_Paragraph_Details.h"
#include "OAIShared_SolidFills_Details.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIShared_SolidFills_Details;
class OAIShared_Paragraph_Details;

class OAIShared_Text_Details : public OAIObject {
public:
    OAIShared_Text_Details();
    OAIShared_Text_Details(QString json);
    ~OAIShared_Text_Details() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIShared_SolidFills_Details getColorSolidFill() const;
    void setColorSolidFill(const OAIShared_SolidFills_Details &color_solid_fill);
    bool is_color_solid_fill_Set() const;
    bool is_color_solid_fill_Valid() const;

    QString getColorSolidFillsId() const;
    void setColorSolidFillsId(const QString &color_solid_fills_id);
    bool is_color_solid_fills_id_Set() const;
    bool is_color_solid_fills_id_Valid() const;

    QDateTime getDateCreated() const;
    void setDateCreated(const QDateTime &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    QDateTime getDateModified() const;
    void setDateModified(const QDateTime &date_modified);
    bool is_date_modified_Set() const;
    bool is_date_modified_Valid() const;

    QString getFont() const;
    void setFont(const QString &font);
    bool is_font_Set() const;
    bool is_font_Valid() const;

    qint32 getFontSize() const;
    void setFontSize(const qint32 &font_size);
    bool is_font_size_Set() const;
    bool is_font_size_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsBold() const;
    void setIsBold(const bool &is_bold);
    bool is_is_bold_Set() const;
    bool is_is_bold_Valid() const;

    bool isIsItalic() const;
    void setIsItalic(const bool &is_italic);
    bool is_is_italic_Set() const;
    bool is_is_italic_Valid() const;

    bool isIsThemeFont() const;
    void setIsThemeFont(const bool &is_theme_font);
    bool is_is_theme_font_Set() const;
    bool is_is_theme_font_Valid() const;

    bool isIsUnderline() const;
    void setIsUnderline(const bool &is_underline);
    bool is_is_underline_Set() const;
    bool is_is_underline_Valid() const;

    OAIShared_Paragraph_Details getParagraph() const;
    void setParagraph(const OAIShared_Paragraph_Details &paragraph);
    bool is_paragraph_Set() const;
    bool is_paragraph_Valid() const;

    QString getParagraphId() const;
    void setParagraphId(const QString &paragraph_id);
    bool is_paragraph_id_Set() const;
    bool is_paragraph_id_Valid() const;

    QString getRawText() const;
    void setRawText(const QString &raw_text);
    bool is_raw_text_Set() const;
    bool is_raw_text_Valid() const;

    qint32 getSequence() const;
    void setSequence(const qint32 &sequence);
    bool is_sequence_Set() const;
    bool is_sequence_Valid() const;

    QString getUserCreated() const;
    void setUserCreated(const QString &user_created);
    bool is_user_created_Set() const;
    bool is_user_created_Valid() const;

    QString getUserModified() const;
    void setUserModified(const QString &user_modified);
    bool is_user_modified_Set() const;
    bool is_user_modified_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIShared_SolidFills_Details m_color_solid_fill;
    bool m_color_solid_fill_isSet;
    bool m_color_solid_fill_isValid;

    QString m_color_solid_fills_id;
    bool m_color_solid_fills_id_isSet;
    bool m_color_solid_fills_id_isValid;

    QDateTime m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    QDateTime m_date_modified;
    bool m_date_modified_isSet;
    bool m_date_modified_isValid;

    QString m_font;
    bool m_font_isSet;
    bool m_font_isValid;

    qint32 m_font_size;
    bool m_font_size_isSet;
    bool m_font_size_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_bold;
    bool m_is_bold_isSet;
    bool m_is_bold_isValid;

    bool m_is_italic;
    bool m_is_italic_isSet;
    bool m_is_italic_isValid;

    bool m_is_theme_font;
    bool m_is_theme_font_isSet;
    bool m_is_theme_font_isValid;

    bool m_is_underline;
    bool m_is_underline_isSet;
    bool m_is_underline_isValid;

    OAIShared_Paragraph_Details m_paragraph;
    bool m_paragraph_isSet;
    bool m_paragraph_isValid;

    QString m_paragraph_id;
    bool m_paragraph_id_isSet;
    bool m_paragraph_id_isValid;

    QString m_raw_text;
    bool m_raw_text_isSet;
    bool m_raw_text_isValid;

    qint32 m_sequence;
    bool m_sequence_isSet;
    bool m_sequence_isValid;

    QString m_user_created;
    bool m_user_created_isSet;
    bool m_user_created_isValid;

    QString m_user_modified;
    bool m_user_modified_isSet;
    bool m_user_modified_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIShared_Text_Details)

#endif // OAIShared_Text_Details_H
