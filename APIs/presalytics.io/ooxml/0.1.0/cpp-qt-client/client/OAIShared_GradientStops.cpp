/**
 * OOXML Automation
 * This API helps users convert Excel and Powerpoint documents into rich, live dashboards and stories.
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIShared_GradientStops.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIShared_GradientStops::OAIShared_GradientStops(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIShared_GradientStops::OAIShared_GradientStops() {
    this->initializeModel();
}

OAIShared_GradientStops::~OAIShared_GradientStops() {}

void OAIShared_GradientStops::initializeModel() {

    m_gradient_fills_id_isSet = false;
    m_gradient_fills_id_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_position_isSet = false;
    m_position_isValid = false;
}

void OAIShared_GradientStops::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIShared_GradientStops::fromJsonObject(QJsonObject json) {

    m_gradient_fills_id_isValid = ::OpenAPI::fromJsonValue(m_gradient_fills_id, json[QString("gradientFillsId")]);
    m_gradient_fills_id_isSet = !json[QString("gradientFillsId")].isNull() && m_gradient_fills_id_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_position_isValid = ::OpenAPI::fromJsonValue(m_position, json[QString("position")]);
    m_position_isSet = !json[QString("position")].isNull() && m_position_isValid;
}

QString OAIShared_GradientStops::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIShared_GradientStops::asJsonObject() const {
    QJsonObject obj;
    if (m_gradient_fills_id_isSet) {
        obj.insert(QString("gradientFillsId"), ::OpenAPI::toJsonValue(m_gradient_fills_id));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_position_isSet) {
        obj.insert(QString("position"), ::OpenAPI::toJsonValue(m_position));
    }
    return obj;
}

QString OAIShared_GradientStops::getGradientFillsId() const {
    return m_gradient_fills_id;
}
void OAIShared_GradientStops::setGradientFillsId(const QString &gradient_fills_id) {
    m_gradient_fills_id = gradient_fills_id;
    m_gradient_fills_id_isSet = true;
}

bool OAIShared_GradientStops::is_gradient_fills_id_Set() const{
    return m_gradient_fills_id_isSet;
}

bool OAIShared_GradientStops::is_gradient_fills_id_Valid() const{
    return m_gradient_fills_id_isValid;
}

QString OAIShared_GradientStops::getId() const {
    return m_id;
}
void OAIShared_GradientStops::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIShared_GradientStops::is_id_Set() const{
    return m_id_isSet;
}

bool OAIShared_GradientStops::is_id_Valid() const{
    return m_id_isValid;
}

qint32 OAIShared_GradientStops::getPosition() const {
    return m_position;
}
void OAIShared_GradientStops::setPosition(const qint32 &position) {
    m_position = position;
    m_position_isSet = true;
}

bool OAIShared_GradientStops::is_position_Set() const{
    return m_position_isSet;
}

bool OAIShared_GradientStops::is_position_Valid() const{
    return m_position_isValid;
}

bool OAIShared_GradientStops::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_gradient_fills_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_position_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIShared_GradientStops::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
