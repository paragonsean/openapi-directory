/**
 * OOXML Automation
 * This API helps users convert Excel and Powerpoint documents into rich, live dashboards and stories.
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIShared_Paragraph.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIShared_Paragraph::OAIShared_Paragraph(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIShared_Paragraph::OAIShared_Paragraph() {
    this->initializeModel();
}

OAIShared_Paragraph::~OAIShared_Paragraph() {}

void OAIShared_Paragraph::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_number_isSet = false;
    m_number_isValid = false;

    m_text_container_id_isSet = false;
    m_text_container_id_isValid = false;
}

void OAIShared_Paragraph::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIShared_Paragraph::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_number_isValid = ::OpenAPI::fromJsonValue(m_number, json[QString("number")]);
    m_number_isSet = !json[QString("number")].isNull() && m_number_isValid;

    m_text_container_id_isValid = ::OpenAPI::fromJsonValue(m_text_container_id, json[QString("textContainerId")]);
    m_text_container_id_isSet = !json[QString("textContainerId")].isNull() && m_text_container_id_isValid;
}

QString OAIShared_Paragraph::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIShared_Paragraph::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_number_isSet) {
        obj.insert(QString("number"), ::OpenAPI::toJsonValue(m_number));
    }
    if (m_text_container_id_isSet) {
        obj.insert(QString("textContainerId"), ::OpenAPI::toJsonValue(m_text_container_id));
    }
    return obj;
}

QString OAIShared_Paragraph::getId() const {
    return m_id;
}
void OAIShared_Paragraph::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIShared_Paragraph::is_id_Set() const{
    return m_id_isSet;
}

bool OAIShared_Paragraph::is_id_Valid() const{
    return m_id_isValid;
}

qint32 OAIShared_Paragraph::getNumber() const {
    return m_number;
}
void OAIShared_Paragraph::setNumber(const qint32 &number) {
    m_number = number;
    m_number_isSet = true;
}

bool OAIShared_Paragraph::is_number_Set() const{
    return m_number_isSet;
}

bool OAIShared_Paragraph::is_number_Valid() const{
    return m_number_isValid;
}

QString OAIShared_Paragraph::getTextContainerId() const {
    return m_text_container_id;
}
void OAIShared_Paragraph::setTextContainerId(const QString &text_container_id) {
    m_text_container_id = text_container_id;
    m_text_container_id_isSet = true;
}

bool OAIShared_Paragraph::is_text_container_id_Set() const{
    return m_text_container_id_isSet;
}

bool OAIShared_Paragraph::is_text_container_id_Valid() const{
    return m_text_container_id_isValid;
}

bool OAIShared_Paragraph::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_container_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIShared_Paragraph::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
