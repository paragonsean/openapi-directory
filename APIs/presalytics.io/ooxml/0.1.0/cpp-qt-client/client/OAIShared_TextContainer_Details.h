/**
 * OOXML Automation
 * This API helps users convert Excel and Powerpoint documents into rich, live dashboards and stories.
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIShared_TextContainer_Details.h
 *
 * 
 */

#ifndef OAIShared_TextContainer_Details_H
#define OAIShared_TextContainer_Details_H

#include <QJsonObject>

#include "OAIChart_Axes_Details.h"
#include "OAIChart_Charts_Details.h"
#include "OAIShared_Paragraph_Details.h"
#include "OAISlide_Shapes_Details.h"
#include "OAITable_Cells_Details.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIChart_Axes_Details;
class OAIChart_Charts_Details;
class OAIShared_Paragraph_Details;
class OAISlide_Shapes_Details;
class OAITable_Cells_Details;

class OAIShared_TextContainer_Details : public OAIObject {
public:
    OAIShared_TextContainer_Details();
    OAIShared_TextContainer_Details(QString json);
    ~OAIShared_TextContainer_Details() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIChart_Axes_Details getAxis() const;
    void setAxis(const OAIChart_Axes_Details &axis);
    bool is_axis_Set() const;
    bool is_axis_Valid() const;

    QString getAxisId() const;
    void setAxisId(const QString &axis_id);
    bool is_axis_id_Set() const;
    bool is_axis_id_Valid() const;

    OAIChart_Charts_Details getChart() const;
    void setChart(const OAIChart_Charts_Details &chart);
    bool is_chart_Set() const;
    bool is_chart_Valid() const;

    QString getChartId() const;
    void setChartId(const QString &chart_id);
    bool is_chart_id_Set() const;
    bool is_chart_id_Valid() const;

    QDateTime getDateCreated() const;
    void setDateCreated(const QDateTime &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    QDateTime getDateModified() const;
    void setDateModified(const QDateTime &date_modified);
    bool is_date_modified_Set() const;
    bool is_date_modified_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getOuterXml() const;
    void setOuterXml(const QString &outer_xml);
    bool is_outer_xml_Set() const;
    bool is_outer_xml_Valid() const;

    QList<OAIShared_Paragraph_Details> getParagraphs() const;
    void setParagraphs(const QList<OAIShared_Paragraph_Details> &paragraphs);
    bool is_paragraphs_Set() const;
    bool is_paragraphs_Valid() const;

    OAISlide_Shapes_Details getParentShape() const;
    void setParentShape(const OAISlide_Shapes_Details &parent_shape);
    bool is_parent_shape_Set() const;
    bool is_parent_shape_Valid() const;

    QString getShapeId() const;
    void setShapeId(const QString &shape_id);
    bool is_shape_id_Set() const;
    bool is_shape_id_Valid() const;

    OAITable_Cells_Details getTableCell() const;
    void setTableCell(const OAITable_Cells_Details &table_cell);
    bool is_table_cell_Set() const;
    bool is_table_cell_Valid() const;

    QString getTableCellId() const;
    void setTableCellId(const QString &table_cell_id);
    bool is_table_cell_id_Set() const;
    bool is_table_cell_id_Valid() const;

    QString getUserCreated() const;
    void setUserCreated(const QString &user_created);
    bool is_user_created_Set() const;
    bool is_user_created_Valid() const;

    QString getUserModified() const;
    void setUserModified(const QString &user_modified);
    bool is_user_modified_Set() const;
    bool is_user_modified_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIChart_Axes_Details m_axis;
    bool m_axis_isSet;
    bool m_axis_isValid;

    QString m_axis_id;
    bool m_axis_id_isSet;
    bool m_axis_id_isValid;

    OAIChart_Charts_Details m_chart;
    bool m_chart_isSet;
    bool m_chart_isValid;

    QString m_chart_id;
    bool m_chart_id_isSet;
    bool m_chart_id_isValid;

    QDateTime m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    QDateTime m_date_modified;
    bool m_date_modified_isSet;
    bool m_date_modified_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_outer_xml;
    bool m_outer_xml_isSet;
    bool m_outer_xml_isValid;

    QList<OAIShared_Paragraph_Details> m_paragraphs;
    bool m_paragraphs_isSet;
    bool m_paragraphs_isValid;

    OAISlide_Shapes_Details m_parent_shape;
    bool m_parent_shape_isSet;
    bool m_parent_shape_isValid;

    QString m_shape_id;
    bool m_shape_id_isSet;
    bool m_shape_id_isValid;

    OAITable_Cells_Details m_table_cell;
    bool m_table_cell_isSet;
    bool m_table_cell_isValid;

    QString m_table_cell_id;
    bool m_table_cell_id_isSet;
    bool m_table_cell_id_isValid;

    QString m_user_created;
    bool m_user_created_isSet;
    bool m_user_created_isValid;

    QString m_user_modified;
    bool m_user_modified_isSet;
    bool m_user_modified_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIShared_TextContainer_Details)

#endif // OAIShared_TextContainer_Details_H
