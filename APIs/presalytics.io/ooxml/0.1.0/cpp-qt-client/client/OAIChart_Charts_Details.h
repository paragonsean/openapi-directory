/**
 * OOXML Automation
 * This API helps users convert Excel and Powerpoint documents into rich, live dashboards and stories.
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChart_Charts_Details.h
 *
 * 
 */

#ifndef OAIChart_Charts_Details_H
#define OAIChart_Charts_Details_H

#include <QJsonObject>

#include "OAIChart_Axes_Details.h"
#include "OAIChart_ChartData_Details.h"
#include "OAIShared_TextContainer_Details.h"
#include "OAISlide_Graphics_Details.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIChart_Axes_Details;
class OAIChart_ChartData_Details;
class OAISlide_Graphics_Details;
class OAIShared_TextContainer_Details;

class OAIChart_Charts_Details : public OAIObject {
public:
    OAIChart_Charts_Details();
    OAIChart_Charts_Details(QString json);
    ~OAIChart_Charts_Details() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIChart_Axes_Details> getAxes() const;
    void setAxes(const QList<OAIChart_Axes_Details> &axes);
    bool is_axes_Set() const;
    bool is_axes_Valid() const;

    QString getBaseElementBlobUrl() const;
    void setBaseElementBlobUrl(const QString &base_element_blob_url);
    bool is_base_element_blob_url_Set() const;
    bool is_base_element_blob_url_Valid() const;

    QString getChangedBaseElementBlobUrl() const;
    void setChangedBaseElementBlobUrl(const QString &changed_base_element_blob_url);
    bool is_changed_base_element_blob_url_Set() const;
    bool is_changed_base_element_blob_url_Valid() const;

    OAIChart_ChartData_Details getChartData() const;
    void setChartData(const OAIChart_ChartData_Details &chart_data);
    bool is_chart_data_Set() const;
    bool is_chart_data_Valid() const;

    QDateTime getDateCreated() const;
    void setDateCreated(const QDateTime &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    QDateTime getDateModified() const;
    void setDateModified(const QDateTime &date_modified);
    bool is_date_modified_Set() const;
    bool is_date_modified_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPackageUri() const;
    void setPackageUri(const QString &package_uri);
    bool is_package_uri_Set() const;
    bool is_package_uri_Valid() const;

    OAISlide_Graphics_Details getParentGraphic() const;
    void setParentGraphic(const OAISlide_Graphics_Details &parent_graphic);
    bool is_parent_graphic_Set() const;
    bool is_parent_graphic_Valid() const;

    QString getParentGraphicId() const;
    void setParentGraphicId(const QString &parent_graphic_id);
    bool is_parent_graphic_id_Set() const;
    bool is_parent_graphic_id_Valid() const;

    QString getSvgBlobUrl() const;
    void setSvgBlobUrl(const QString &svg_blob_url);
    bool is_svg_blob_url_Set() const;
    bool is_svg_blob_url_Valid() const;

    OAIShared_TextContainer_Details getTitleTextContainer() const;
    void setTitleTextContainer(const OAIShared_TextContainer_Details &title_text_container);
    bool is_title_text_container_Set() const;
    bool is_title_text_container_Valid() const;

    QString getUserCreated() const;
    void setUserCreated(const QString &user_created);
    bool is_user_created_Set() const;
    bool is_user_created_Valid() const;

    QString getUserModified() const;
    void setUserModified(const QString &user_modified);
    bool is_user_modified_Set() const;
    bool is_user_modified_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIChart_Axes_Details> m_axes;
    bool m_axes_isSet;
    bool m_axes_isValid;

    QString m_base_element_blob_url;
    bool m_base_element_blob_url_isSet;
    bool m_base_element_blob_url_isValid;

    QString m_changed_base_element_blob_url;
    bool m_changed_base_element_blob_url_isSet;
    bool m_changed_base_element_blob_url_isValid;

    OAIChart_ChartData_Details m_chart_data;
    bool m_chart_data_isSet;
    bool m_chart_data_isValid;

    QDateTime m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    QDateTime m_date_modified;
    bool m_date_modified_isSet;
    bool m_date_modified_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_package_uri;
    bool m_package_uri_isSet;
    bool m_package_uri_isValid;

    OAISlide_Graphics_Details m_parent_graphic;
    bool m_parent_graphic_isSet;
    bool m_parent_graphic_isValid;

    QString m_parent_graphic_id;
    bool m_parent_graphic_id_isSet;
    bool m_parent_graphic_id_isValid;

    QString m_svg_blob_url;
    bool m_svg_blob_url_isSet;
    bool m_svg_blob_url_isValid;

    OAIShared_TextContainer_Details m_title_text_container;
    bool m_title_text_container_isSet;
    bool m_title_text_container_isValid;

    QString m_user_created;
    bool m_user_created_isSet;
    bool m_user_created_isValid;

    QString m_user_modified;
    bool m_user_modified_isSet;
    bool m_user_modified_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChart_Charts_Details)

#endif // OAIChart_Charts_Details_H
