/**
 * OOXML Automation
 * This API helps users convert Excel and Powerpoint documents into rich, live dashboards and stories.
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISlide_Shapes.h
 *
 * 
 */

#ifndef OAISlide_Shapes_H
#define OAISlide_Shapes_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISlide_Shapes : public OAIObject {
public:
    OAISlide_Shapes();
    OAISlide_Shapes(QString json);
    ~OAISlide_Shapes() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBaseElementBlobUrl() const;
    void setBaseElementBlobUrl(const QString &base_element_blob_url);
    bool is_base_element_blob_url_Set() const;
    bool is_base_element_blob_url_Valid() const;

    QString getChangedBaseElementBlobUrl() const;
    void setChangedBaseElementBlobUrl(const QString &changed_base_element_blob_url);
    bool is_changed_base_element_blob_url_Set() const;
    bool is_changed_base_element_blob_url_Valid() const;

    bool isFlipHorizontal() const;
    void setFlipHorizontal(const bool &flip_horizontal);
    bool is_flip_horizontal_Set() const;
    bool is_flip_horizontal_Valid() const;

    bool isFlipVertical() const;
    void setFlipVertical(const bool &flip_vertical);
    bool is_flip_vertical_Set() const;
    bool is_flip_vertical_Valid() const;

    QString getFreeFormPathXml() const;
    void setFreeFormPathXml(const QString &free_form_path_xml);
    bool is_free_form_path_xml_Set() const;
    bool is_free_form_path_xml_Valid() const;

    QString getGroupElementsId() const;
    void setGroupElementsId(const QString &group_elements_id);
    bool is_group_elements_id_Set() const;
    bool is_group_elements_id_Valid() const;

    qint32 getHeight() const;
    void setHeight(const qint32 &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    bool isHidden() const;
    void setHidden(const bool &hidden);
    bool is_hidden_Set() const;
    bool is_hidden_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsThemeEffect() const;
    void setIsThemeEffect(const bool &is_theme_effect);
    bool is_is_theme_effect_Set() const;
    bool is_is_theme_effect_Valid() const;

    bool isIsThemeFill() const;
    void setIsThemeFill(const bool &is_theme_fill);
    bool is_is_theme_fill_Set() const;
    bool is_is_theme_fill_Valid() const;

    bool isIsThemeLine() const;
    void setIsThemeLine(const bool &is_theme_line);
    bool is_is_theme_line_Set() const;
    bool is_is_theme_line_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getOoxmlId() const;
    void setOoxmlId(const qint32 &ooxml_id);
    bool is_ooxml_id_Set() const;
    bool is_ooxml_id_Valid() const;

    QString getPackageUri() const;
    void setPackageUri(const QString &package_uri);
    bool is_package_uri_Set() const;
    bool is_package_uri_Valid() const;

    QString getPresetTypeId() const;
    void setPresetTypeId(const QString &preset_type_id);
    bool is_preset_type_id_Set() const;
    bool is_preset_type_id_Valid() const;

    qint32 getRotation() const;
    void setRotation(const qint32 &rotation);
    bool is_rotation_Set() const;
    bool is_rotation_Valid() const;

    QString getSvgBlobUrl() const;
    void setSvgBlobUrl(const QString &svg_blob_url);
    bool is_svg_blob_url_Set() const;
    bool is_svg_blob_url_Valid() const;

    qint32 getWidth() const;
    void setWidth(const qint32 &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    qint32 getXOffset() const;
    void setXOffset(const qint32 &x_offset);
    bool is_x_offset_Set() const;
    bool is_x_offset_Valid() const;

    qint32 getYOffset() const;
    void setYOffset(const qint32 &y_offset);
    bool is_y_offset_Set() const;
    bool is_y_offset_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_base_element_blob_url;
    bool m_base_element_blob_url_isSet;
    bool m_base_element_blob_url_isValid;

    QString m_changed_base_element_blob_url;
    bool m_changed_base_element_blob_url_isSet;
    bool m_changed_base_element_blob_url_isValid;

    bool m_flip_horizontal;
    bool m_flip_horizontal_isSet;
    bool m_flip_horizontal_isValid;

    bool m_flip_vertical;
    bool m_flip_vertical_isSet;
    bool m_flip_vertical_isValid;

    QString m_free_form_path_xml;
    bool m_free_form_path_xml_isSet;
    bool m_free_form_path_xml_isValid;

    QString m_group_elements_id;
    bool m_group_elements_id_isSet;
    bool m_group_elements_id_isValid;

    qint32 m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    bool m_hidden;
    bool m_hidden_isSet;
    bool m_hidden_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_theme_effect;
    bool m_is_theme_effect_isSet;
    bool m_is_theme_effect_isValid;

    bool m_is_theme_fill;
    bool m_is_theme_fill_isSet;
    bool m_is_theme_fill_isValid;

    bool m_is_theme_line;
    bool m_is_theme_line_isSet;
    bool m_is_theme_line_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_ooxml_id;
    bool m_ooxml_id_isSet;
    bool m_ooxml_id_isValid;

    QString m_package_uri;
    bool m_package_uri_isSet;
    bool m_package_uri_isValid;

    QString m_preset_type_id;
    bool m_preset_type_id_isSet;
    bool m_preset_type_id_isValid;

    qint32 m_rotation;
    bool m_rotation_isSet;
    bool m_rotation_isValid;

    QString m_svg_blob_url;
    bool m_svg_blob_url_isSet;
    bool m_svg_blob_url_isValid;

    qint32 m_width;
    bool m_width_isSet;
    bool m_width_isValid;

    qint32 m_x_offset;
    bool m_x_offset_isSet;
    bool m_x_offset_isValid;

    qint32 m_y_offset;
    bool m_y_offset_isSet;
    bool m_y_offset_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISlide_Shapes)

#endif // OAISlide_Shapes_H
