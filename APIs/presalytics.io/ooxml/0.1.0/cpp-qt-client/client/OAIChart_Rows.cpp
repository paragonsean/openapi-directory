/**
 * OOXML Automation
 * This API helps users convert Excel and Powerpoint documents into rich, live dashboards and stories.
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChart_Rows.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChart_Rows::OAIChart_Rows(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChart_Rows::OAIChart_Rows() {
    this->initializeModel();
}

OAIChart_Rows::~OAIChart_Rows() {}

void OAIChart_Rows::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_index_isSet = false;
    m_index_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_row_name_collection_id_isSet = false;
    m_row_name_collection_id_isValid = false;
}

void OAIChart_Rows::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIChart_Rows::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_index_isValid = ::OpenAPI::fromJsonValue(m_index, json[QString("index")]);
    m_index_isSet = !json[QString("index")].isNull() && m_index_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_row_name_collection_id_isValid = ::OpenAPI::fromJsonValue(m_row_name_collection_id, json[QString("rowNameCollectionId")]);
    m_row_name_collection_id_isSet = !json[QString("rowNameCollectionId")].isNull() && m_row_name_collection_id_isValid;
}

QString OAIChart_Rows::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIChart_Rows::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_index_isSet) {
        obj.insert(QString("index"), ::OpenAPI::toJsonValue(m_index));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_row_name_collection_id_isSet) {
        obj.insert(QString("rowNameCollectionId"), ::OpenAPI::toJsonValue(m_row_name_collection_id));
    }
    return obj;
}

QString OAIChart_Rows::getId() const {
    return m_id;
}
void OAIChart_Rows::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIChart_Rows::is_id_Set() const{
    return m_id_isSet;
}

bool OAIChart_Rows::is_id_Valid() const{
    return m_id_isValid;
}

qint32 OAIChart_Rows::getIndex() const {
    return m_index;
}
void OAIChart_Rows::setIndex(const qint32 &index) {
    m_index = index;
    m_index_isSet = true;
}

bool OAIChart_Rows::is_index_Set() const{
    return m_index_isSet;
}

bool OAIChart_Rows::is_index_Valid() const{
    return m_index_isValid;
}

QString OAIChart_Rows::getName() const {
    return m_name;
}
void OAIChart_Rows::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIChart_Rows::is_name_Set() const{
    return m_name_isSet;
}

bool OAIChart_Rows::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIChart_Rows::getRowNameCollectionId() const {
    return m_row_name_collection_id;
}
void OAIChart_Rows::setRowNameCollectionId(const QString &row_name_collection_id) {
    m_row_name_collection_id = row_name_collection_id;
    m_row_name_collection_id_isSet = true;
}

bool OAIChart_Rows::is_row_name_collection_id_Set() const{
    return m_row_name_collection_id_isSet;
}

bool OAIChart_Rows::is_row_name_collection_id_Valid() const{
    return m_row_name_collection_id_isValid;
}

bool OAIChart_Rows::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_index_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_row_name_collection_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIChart_Rows::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
