/**
 * OOXML Automation
 * This API helps users convert Excel and Powerpoint documents into rich, live dashboards and stories.
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISlide_Graphics_Details.h
 *
 * The graphics class provides a bridge between the Slides and   lower level models including Charts, Tables, Pictures, and SmartArts
 */

#ifndef OAISlide_Graphics_Details_H
#define OAISlide_Graphics_Details_H

#include <QJsonObject>

#include "OAIChart_Charts_Details.h"
#include "OAIShared_Pictures_Details.h"
#include "OAISlide_GroupElements_Details.h"
#include "OAISlide_SmartArts_Details.h"
#include "OAITable_Tables_Details.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIChart_Charts_Details;
class OAISlide_GroupElements_Details;
class OAIShared_Pictures_Details;
class OAISlide_SmartArts_Details;
class OAITable_Tables_Details;

class OAISlide_Graphics_Details : public OAIObject {
public:
    OAISlide_Graphics_Details();
    OAISlide_Graphics_Details(QString json);
    ~OAISlide_Graphics_Details() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIChart_Charts_Details getChart() const;
    void setChart(const OAIChart_Charts_Details &chart);
    bool is_chart_Set() const;
    bool is_chart_Valid() const;

    QDateTime getDateCreated() const;
    void setDateCreated(const QDateTime &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    QDateTime getDateModified() const;
    void setDateModified(const QDateTime &date_modified);
    bool is_date_modified_Set() const;
    bool is_date_modified_Valid() const;

    qint32 getGraphicTypeId() const;
    void setGraphicTypeId(const qint32 &graphic_type_id);
    bool is_graphic_type_id_Set() const;
    bool is_graphic_type_id_Valid() const;

    OAISlide_GroupElements_Details getGroupElement() const;
    void setGroupElement(const OAISlide_GroupElements_Details &group_element);
    bool is_group_element_Set() const;
    bool is_group_element_Valid() const;

    QString getGroupElementsId() const;
    void setGroupElementsId(const QString &group_elements_id);
    bool is_group_elements_id_Set() const;
    bool is_group_elements_id_Valid() const;

    qint32 getHeight() const;
    void setHeight(const qint32 &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getOoxmlId() const;
    void setOoxmlId(const qint32 &ooxml_id);
    bool is_ooxml_id_Set() const;
    bool is_ooxml_id_Valid() const;

    OAIShared_Pictures_Details getPicture() const;
    void setPicture(const OAIShared_Pictures_Details &picture);
    bool is_picture_Set() const;
    bool is_picture_Valid() const;

    OAISlide_SmartArts_Details getSmartArt() const;
    void setSmartArt(const OAISlide_SmartArts_Details &smart_art);
    bool is_smart_art_Set() const;
    bool is_smart_art_Valid() const;

    OAITable_Tables_Details getTable() const;
    void setTable(const OAITable_Tables_Details &table);
    bool is_table_Set() const;
    bool is_table_Valid() const;

    QString getUserCreated() const;
    void setUserCreated(const QString &user_created);
    bool is_user_created_Set() const;
    bool is_user_created_Valid() const;

    QString getUserModified() const;
    void setUserModified(const QString &user_modified);
    bool is_user_modified_Set() const;
    bool is_user_modified_Valid() const;

    qint32 getWidth() const;
    void setWidth(const qint32 &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    qint32 getXOffset() const;
    void setXOffset(const qint32 &x_offset);
    bool is_x_offset_Set() const;
    bool is_x_offset_Valid() const;

    qint32 getYOffset() const;
    void setYOffset(const qint32 &y_offset);
    bool is_y_offset_Set() const;
    bool is_y_offset_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIChart_Charts_Details m_chart;
    bool m_chart_isSet;
    bool m_chart_isValid;

    QDateTime m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    QDateTime m_date_modified;
    bool m_date_modified_isSet;
    bool m_date_modified_isValid;

    qint32 m_graphic_type_id;
    bool m_graphic_type_id_isSet;
    bool m_graphic_type_id_isValid;

    OAISlide_GroupElements_Details m_group_element;
    bool m_group_element_isSet;
    bool m_group_element_isValid;

    QString m_group_elements_id;
    bool m_group_elements_id_isSet;
    bool m_group_elements_id_isValid;

    qint32 m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_ooxml_id;
    bool m_ooxml_id_isSet;
    bool m_ooxml_id_isValid;

    OAIShared_Pictures_Details m_picture;
    bool m_picture_isSet;
    bool m_picture_isValid;

    OAISlide_SmartArts_Details m_smart_art;
    bool m_smart_art_isSet;
    bool m_smart_art_isValid;

    OAITable_Tables_Details m_table;
    bool m_table_isSet;
    bool m_table_isValid;

    QString m_user_created;
    bool m_user_created_isSet;
    bool m_user_created_isValid;

    QString m_user_modified;
    bool m_user_modified_isSet;
    bool m_user_modified_isValid;

    qint32 m_width;
    bool m_width_isSet;
    bool m_width_isValid;

    qint32 m_x_offset;
    bool m_x_offset_isSet;
    bool m_x_offset_isValid;

    qint32 m_y_offset;
    bool m_y_offset_isSet;
    bool m_y_offset_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISlide_Graphics_Details)

#endif // OAISlide_Graphics_Details_H
