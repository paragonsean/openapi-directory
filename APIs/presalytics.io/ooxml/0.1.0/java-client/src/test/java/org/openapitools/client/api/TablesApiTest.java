/*
 * OOXML Automation
 * This API helps users convert Excel and Powerpoint documents into rich, live dashboards and stories.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ChildObjects;
import java.io.File;
import org.openapitools.client.model.OoxmlDTO;
import org.openapitools.client.model.ProblemDetails;
import org.openapitools.client.model.TableTableDataDTO;
import org.openapitools.client.model.TableTables;
import org.openapitools.client.model.TableTablesDetails;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TablesApi
 */
@Disabled
public class TablesApiTest {

    private final TablesApi api = new TablesApi();

    /**
     * Tables: Get Dependent Objects Tree
     *
     * This endpoint is helpful for helping users and bots identify dependent objects to this Table and retreive their corresponding metadata in order to make modifications to those objects in downstream operations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tablesTablesChildobjectsGetIdTest() throws ApiException {
        UUID id = null;
        List<ChildObjects> response = api.tablesTablesChildobjectsGetId(id);
        // TODO: test validations
    }

    /**
     * Tables: Get Details
     *
     * Returns object metadata and information about relative dependent objects 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tablesTablesDetailsGetIdTest() throws ApiException {
        UUID id = null;
        TableTablesDetails response = api.tablesTablesDetailsGetId(id);
        // TODO: test validations
    }

    /**
     * Tables: Get by Id
     *
     * Get by Id: Use this method to retrieve a Tables object by its primary key (id)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tablesTablesGetIdTest() throws ApiException {
        UUID id = null;
        TableTables response = api.tablesTablesGetId(id);
        // TODO: test validations
    }

    /**
     * Tables: Get Underlying Xml
     *
     * Return the subset of the xml content from within the latest edited version of the OpenXmlDocument from this Table object.  The returned xml data conforms to the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm).  Use this endpoint a starting point for building client-side extensions that modify Presalytics widgets containing Table objects.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tablesTablesOpenofficexmlGetIdUpdatedTest() throws ApiException {
        UUID id = null;
        Boolean updated = null;
        OoxmlDTO response = api.tablesTablesOpenofficexmlGetIdUpdated(id, updated);
        // TODO: test validations
    }

    /**
     * Tables: Modify Underlying Xml
     *
     * Directly eidt the underlying xml of a Table object within an OpenOpenXml (e.g. Excel, Powerpoint) document. This endpoint will validatate the submitted xml against the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm) prior to saving modification.  Invalid xml will rejected by this endpoint and a (hopefully) helpful error message will be returned.  Use this endpoint for client-side automation of modifications ot Table objects.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tablesTablesOpenofficexmlPutIdTest() throws ApiException {
        String id = null;
        OoxmlDTO ooxmlDTO = null;
        api.tablesTablesOpenofficexmlPutId(id, ooxmlDTO);
        // TODO: test validations
    }

    /**
     * Tables: Get Svg file
     *
     * This endpoint is helpful for rending this Table as an svg or image object that can then be rendered in a story, dashboard or website.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tablesTablesSvgGetIdUseCacheTest() throws ApiException {
        UUID id = null;
        Boolean useCache = null;
        File response = api.tablesTablesSvgGetIdUseCache(id, useCache);
        // TODO: test validations
    }

    /**
     * Table: Get Table Data
     *
     * Gets a TabletDataDTO object, usually used for downstream updates to table content
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tablesTablesTableupdateGetIdTest() throws ApiException {
        UUID id = null;
        TableTableDataDTO response = api.tablesTablesTableupdateGetId(id);
        // TODO: test validations
    }

    /**
     * Tables: Update Table Data
     *
     * Simplifies table update by allowing users to supply strings to table cells  via TableDataDTO
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tablesTablesTableupdatePutIdTest() throws ApiException {
        String id = null;
        TableTableDataDTO tableTableDataDTO = null;
        api.tablesTablesTableupdatePutId(id, tableTableDataDTO);
        // TODO: test validations
    }

}
