/*
 * OOXML Automation
 * This API helps users convert Excel and Powerpoint documents into rich, live dashboards and stories.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * SharedLines
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:00:20.731713-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SharedLines {
  public static final String SERIALIZED_NAME_B_LTO_T_R_BORDER_ID = "bLtoTRBorderId";
  @SerializedName(SERIALIZED_NAME_B_LTO_T_R_BORDER_ID)
  private UUID bLtoTRBorderId;

  public static final String SERIALIZED_NAME_BOTTOM_BORDER_ID = "bottomBorderId";
  @SerializedName(SERIALIZED_NAME_BOTTOM_BORDER_ID)
  private UUID bottomBorderId;

  public static final String SERIALIZED_NAME_CONNECTOR_ID = "connectorId";
  @SerializedName(SERIALIZED_NAME_CONNECTOR_ID)
  private UUID connectorId;

  public static final String SERIALIZED_NAME_DASH_TYPE_ID = "dashTypeId";
  @SerializedName(SERIALIZED_NAME_DASH_TYPE_ID)
  private Integer dashTypeId;

  public static final String SERIALIZED_NAME_HEAD_END_HEIGHT_ID = "headEndHeightId";
  @SerializedName(SERIALIZED_NAME_HEAD_END_HEIGHT_ID)
  private Integer headEndHeightId;

  public static final String SERIALIZED_NAME_HEAD_END_TYPE_ID = "headEndTypeId";
  @SerializedName(SERIALIZED_NAME_HEAD_END_TYPE_ID)
  private Integer headEndTypeId;

  public static final String SERIALIZED_NAME_HEAD_END_WIDTH_ID = "headEndWidthId";
  @SerializedName(SERIALIZED_NAME_HEAD_END_WIDTH_ID)
  private Integer headEndWidthId;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_LEFT_BORDER_ID = "leftBorderId";
  @SerializedName(SERIALIZED_NAME_LEFT_BORDER_ID)
  private UUID leftBorderId;

  public static final String SERIALIZED_NAME_LINE_MAP_ID = "lineMapId";
  @SerializedName(SERIALIZED_NAME_LINE_MAP_ID)
  private UUID lineMapId;

  public static final String SERIALIZED_NAME_RIGHT_BORDER_ID = "rightBorderId";
  @SerializedName(SERIALIZED_NAME_RIGHT_BORDER_ID)
  private UUID rightBorderId;

  public static final String SERIALIZED_NAME_SHAPE_ID = "shapeId";
  @SerializedName(SERIALIZED_NAME_SHAPE_ID)
  private UUID shapeId;

  public static final String SERIALIZED_NAME_T_LTO_B_R_BORDER_ID = "tLtoBRBorderId";
  @SerializedName(SERIALIZED_NAME_T_LTO_B_R_BORDER_ID)
  private UUID tLtoBRBorderId;

  public static final String SERIALIZED_NAME_TAIL_END_HEIGHT_ID = "tailEndHeightId";
  @SerializedName(SERIALIZED_NAME_TAIL_END_HEIGHT_ID)
  private Integer tailEndHeightId;

  public static final String SERIALIZED_NAME_TAIL_END_TYPE_ID = "tailEndTypeId";
  @SerializedName(SERIALIZED_NAME_TAIL_END_TYPE_ID)
  private Integer tailEndTypeId;

  public static final String SERIALIZED_NAME_TAIL_END_WIDTH_ID = "tailEndWidthId";
  @SerializedName(SERIALIZED_NAME_TAIL_END_WIDTH_ID)
  private Integer tailEndWidthId;

  public static final String SERIALIZED_NAME_TOP_BORDER_ID = "topBorderId";
  @SerializedName(SERIALIZED_NAME_TOP_BORDER_ID)
  private UUID topBorderId;

  public static final String SERIALIZED_NAME_WEIGHT = "weight";
  @SerializedName(SERIALIZED_NAME_WEIGHT)
  private Integer weight;

  public SharedLines() {
  }

  public SharedLines bLtoTRBorderId(UUID bLtoTRBorderId) {
    this.bLtoTRBorderId = bLtoTRBorderId;
    return this;
  }

  /**
   * Get bLtoTRBorderId
   * @return bLtoTRBorderId
   */
  @javax.annotation.Nullable
  public UUID getbLtoTRBorderId() {
    return bLtoTRBorderId;
  }

  public void setbLtoTRBorderId(UUID bLtoTRBorderId) {
    this.bLtoTRBorderId = bLtoTRBorderId;
  }


  public SharedLines bottomBorderId(UUID bottomBorderId) {
    this.bottomBorderId = bottomBorderId;
    return this;
  }

  /**
   * Get bottomBorderId
   * @return bottomBorderId
   */
  @javax.annotation.Nullable
  public UUID getBottomBorderId() {
    return bottomBorderId;
  }

  public void setBottomBorderId(UUID bottomBorderId) {
    this.bottomBorderId = bottomBorderId;
  }


  public SharedLines connectorId(UUID connectorId) {
    this.connectorId = connectorId;
    return this;
  }

  /**
   * Get connectorId
   * @return connectorId
   */
  @javax.annotation.Nullable
  public UUID getConnectorId() {
    return connectorId;
  }

  public void setConnectorId(UUID connectorId) {
    this.connectorId = connectorId;
  }


  public SharedLines dashTypeId(Integer dashTypeId) {
    this.dashTypeId = dashTypeId;
    return this;
  }

  /**
   * Get dashTypeId
   * @return dashTypeId
   */
  @javax.annotation.Nullable
  public Integer getDashTypeId() {
    return dashTypeId;
  }

  public void setDashTypeId(Integer dashTypeId) {
    this.dashTypeId = dashTypeId;
  }


  public SharedLines headEndHeightId(Integer headEndHeightId) {
    this.headEndHeightId = headEndHeightId;
    return this;
  }

  /**
   * Get headEndHeightId
   * @return headEndHeightId
   */
  @javax.annotation.Nullable
  public Integer getHeadEndHeightId() {
    return headEndHeightId;
  }

  public void setHeadEndHeightId(Integer headEndHeightId) {
    this.headEndHeightId = headEndHeightId;
  }


  public SharedLines headEndTypeId(Integer headEndTypeId) {
    this.headEndTypeId = headEndTypeId;
    return this;
  }

  /**
   * Get headEndTypeId
   * @return headEndTypeId
   */
  @javax.annotation.Nullable
  public Integer getHeadEndTypeId() {
    return headEndTypeId;
  }

  public void setHeadEndTypeId(Integer headEndTypeId) {
    this.headEndTypeId = headEndTypeId;
  }


  public SharedLines headEndWidthId(Integer headEndWidthId) {
    this.headEndWidthId = headEndWidthId;
    return this;
  }

  /**
   * Get headEndWidthId
   * @return headEndWidthId
   */
  @javax.annotation.Nullable
  public Integer getHeadEndWidthId() {
    return headEndWidthId;
  }

  public void setHeadEndWidthId(Integer headEndWidthId) {
    this.headEndWidthId = headEndWidthId;
  }


  public SharedLines id(UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }


  public SharedLines leftBorderId(UUID leftBorderId) {
    this.leftBorderId = leftBorderId;
    return this;
  }

  /**
   * Get leftBorderId
   * @return leftBorderId
   */
  @javax.annotation.Nullable
  public UUID getLeftBorderId() {
    return leftBorderId;
  }

  public void setLeftBorderId(UUID leftBorderId) {
    this.leftBorderId = leftBorderId;
  }


  public SharedLines lineMapId(UUID lineMapId) {
    this.lineMapId = lineMapId;
    return this;
  }

  /**
   * Get lineMapId
   * @return lineMapId
   */
  @javax.annotation.Nullable
  public UUID getLineMapId() {
    return lineMapId;
  }

  public void setLineMapId(UUID lineMapId) {
    this.lineMapId = lineMapId;
  }


  public SharedLines rightBorderId(UUID rightBorderId) {
    this.rightBorderId = rightBorderId;
    return this;
  }

  /**
   * Get rightBorderId
   * @return rightBorderId
   */
  @javax.annotation.Nullable
  public UUID getRightBorderId() {
    return rightBorderId;
  }

  public void setRightBorderId(UUID rightBorderId) {
    this.rightBorderId = rightBorderId;
  }


  public SharedLines shapeId(UUID shapeId) {
    this.shapeId = shapeId;
    return this;
  }

  /**
   * Get shapeId
   * @return shapeId
   */
  @javax.annotation.Nullable
  public UUID getShapeId() {
    return shapeId;
  }

  public void setShapeId(UUID shapeId) {
    this.shapeId = shapeId;
  }


  public SharedLines tLtoBRBorderId(UUID tLtoBRBorderId) {
    this.tLtoBRBorderId = tLtoBRBorderId;
    return this;
  }

  /**
   * Get tLtoBRBorderId
   * @return tLtoBRBorderId
   */
  @javax.annotation.Nullable
  public UUID gettLtoBRBorderId() {
    return tLtoBRBorderId;
  }

  public void settLtoBRBorderId(UUID tLtoBRBorderId) {
    this.tLtoBRBorderId = tLtoBRBorderId;
  }


  public SharedLines tailEndHeightId(Integer tailEndHeightId) {
    this.tailEndHeightId = tailEndHeightId;
    return this;
  }

  /**
   * Get tailEndHeightId
   * @return tailEndHeightId
   */
  @javax.annotation.Nullable
  public Integer getTailEndHeightId() {
    return tailEndHeightId;
  }

  public void setTailEndHeightId(Integer tailEndHeightId) {
    this.tailEndHeightId = tailEndHeightId;
  }


  public SharedLines tailEndTypeId(Integer tailEndTypeId) {
    this.tailEndTypeId = tailEndTypeId;
    return this;
  }

  /**
   * Get tailEndTypeId
   * @return tailEndTypeId
   */
  @javax.annotation.Nullable
  public Integer getTailEndTypeId() {
    return tailEndTypeId;
  }

  public void setTailEndTypeId(Integer tailEndTypeId) {
    this.tailEndTypeId = tailEndTypeId;
  }


  public SharedLines tailEndWidthId(Integer tailEndWidthId) {
    this.tailEndWidthId = tailEndWidthId;
    return this;
  }

  /**
   * Get tailEndWidthId
   * @return tailEndWidthId
   */
  @javax.annotation.Nullable
  public Integer getTailEndWidthId() {
    return tailEndWidthId;
  }

  public void setTailEndWidthId(Integer tailEndWidthId) {
    this.tailEndWidthId = tailEndWidthId;
  }


  public SharedLines topBorderId(UUID topBorderId) {
    this.topBorderId = topBorderId;
    return this;
  }

  /**
   * Get topBorderId
   * @return topBorderId
   */
  @javax.annotation.Nullable
  public UUID getTopBorderId() {
    return topBorderId;
  }

  public void setTopBorderId(UUID topBorderId) {
    this.topBorderId = topBorderId;
  }


  public SharedLines weight(Integer weight) {
    this.weight = weight;
    return this;
  }

  /**
   * Get weight
   * @return weight
   */
  @javax.annotation.Nullable
  public Integer getWeight() {
    return weight;
  }

  public void setWeight(Integer weight) {
    this.weight = weight;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SharedLines sharedLines = (SharedLines) o;
    return Objects.equals(this.bLtoTRBorderId, sharedLines.bLtoTRBorderId) &&
        Objects.equals(this.bottomBorderId, sharedLines.bottomBorderId) &&
        Objects.equals(this.connectorId, sharedLines.connectorId) &&
        Objects.equals(this.dashTypeId, sharedLines.dashTypeId) &&
        Objects.equals(this.headEndHeightId, sharedLines.headEndHeightId) &&
        Objects.equals(this.headEndTypeId, sharedLines.headEndTypeId) &&
        Objects.equals(this.headEndWidthId, sharedLines.headEndWidthId) &&
        Objects.equals(this.id, sharedLines.id) &&
        Objects.equals(this.leftBorderId, sharedLines.leftBorderId) &&
        Objects.equals(this.lineMapId, sharedLines.lineMapId) &&
        Objects.equals(this.rightBorderId, sharedLines.rightBorderId) &&
        Objects.equals(this.shapeId, sharedLines.shapeId) &&
        Objects.equals(this.tLtoBRBorderId, sharedLines.tLtoBRBorderId) &&
        Objects.equals(this.tailEndHeightId, sharedLines.tailEndHeightId) &&
        Objects.equals(this.tailEndTypeId, sharedLines.tailEndTypeId) &&
        Objects.equals(this.tailEndWidthId, sharedLines.tailEndWidthId) &&
        Objects.equals(this.topBorderId, sharedLines.topBorderId) &&
        Objects.equals(this.weight, sharedLines.weight);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(bLtoTRBorderId, bottomBorderId, connectorId, dashTypeId, headEndHeightId, headEndTypeId, headEndWidthId, id, leftBorderId, lineMapId, rightBorderId, shapeId, tLtoBRBorderId, tailEndHeightId, tailEndTypeId, tailEndWidthId, topBorderId, weight);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SharedLines {\n");
    sb.append("    bLtoTRBorderId: ").append(toIndentedString(bLtoTRBorderId)).append("\n");
    sb.append("    bottomBorderId: ").append(toIndentedString(bottomBorderId)).append("\n");
    sb.append("    connectorId: ").append(toIndentedString(connectorId)).append("\n");
    sb.append("    dashTypeId: ").append(toIndentedString(dashTypeId)).append("\n");
    sb.append("    headEndHeightId: ").append(toIndentedString(headEndHeightId)).append("\n");
    sb.append("    headEndTypeId: ").append(toIndentedString(headEndTypeId)).append("\n");
    sb.append("    headEndWidthId: ").append(toIndentedString(headEndWidthId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    leftBorderId: ").append(toIndentedString(leftBorderId)).append("\n");
    sb.append("    lineMapId: ").append(toIndentedString(lineMapId)).append("\n");
    sb.append("    rightBorderId: ").append(toIndentedString(rightBorderId)).append("\n");
    sb.append("    shapeId: ").append(toIndentedString(shapeId)).append("\n");
    sb.append("    tLtoBRBorderId: ").append(toIndentedString(tLtoBRBorderId)).append("\n");
    sb.append("    tailEndHeightId: ").append(toIndentedString(tailEndHeightId)).append("\n");
    sb.append("    tailEndTypeId: ").append(toIndentedString(tailEndTypeId)).append("\n");
    sb.append("    tailEndWidthId: ").append(toIndentedString(tailEndWidthId)).append("\n");
    sb.append("    topBorderId: ").append(toIndentedString(topBorderId)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bLtoTRBorderId");
    openapiFields.add("bottomBorderId");
    openapiFields.add("connectorId");
    openapiFields.add("dashTypeId");
    openapiFields.add("headEndHeightId");
    openapiFields.add("headEndTypeId");
    openapiFields.add("headEndWidthId");
    openapiFields.add("id");
    openapiFields.add("leftBorderId");
    openapiFields.add("lineMapId");
    openapiFields.add("rightBorderId");
    openapiFields.add("shapeId");
    openapiFields.add("tLtoBRBorderId");
    openapiFields.add("tailEndHeightId");
    openapiFields.add("tailEndTypeId");
    openapiFields.add("tailEndWidthId");
    openapiFields.add("topBorderId");
    openapiFields.add("weight");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SharedLines
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SharedLines.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SharedLines is not found in the empty JSON string", SharedLines.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SharedLines.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SharedLines` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("bLtoTRBorderId") != null && !jsonObj.get("bLtoTRBorderId").isJsonNull()) && !jsonObj.get("bLtoTRBorderId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bLtoTRBorderId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bLtoTRBorderId").toString()));
      }
      if ((jsonObj.get("bottomBorderId") != null && !jsonObj.get("bottomBorderId").isJsonNull()) && !jsonObj.get("bottomBorderId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bottomBorderId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bottomBorderId").toString()));
      }
      if ((jsonObj.get("connectorId") != null && !jsonObj.get("connectorId").isJsonNull()) && !jsonObj.get("connectorId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `connectorId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("connectorId").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("leftBorderId") != null && !jsonObj.get("leftBorderId").isJsonNull()) && !jsonObj.get("leftBorderId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `leftBorderId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("leftBorderId").toString()));
      }
      if ((jsonObj.get("lineMapId") != null && !jsonObj.get("lineMapId").isJsonNull()) && !jsonObj.get("lineMapId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lineMapId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lineMapId").toString()));
      }
      if ((jsonObj.get("rightBorderId") != null && !jsonObj.get("rightBorderId").isJsonNull()) && !jsonObj.get("rightBorderId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rightBorderId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rightBorderId").toString()));
      }
      if ((jsonObj.get("shapeId") != null && !jsonObj.get("shapeId").isJsonNull()) && !jsonObj.get("shapeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shapeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shapeId").toString()));
      }
      if ((jsonObj.get("tLtoBRBorderId") != null && !jsonObj.get("tLtoBRBorderId").isJsonNull()) && !jsonObj.get("tLtoBRBorderId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tLtoBRBorderId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tLtoBRBorderId").toString()));
      }
      if ((jsonObj.get("topBorderId") != null && !jsonObj.get("topBorderId").isJsonNull()) && !jsonObj.get("topBorderId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `topBorderId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("topBorderId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SharedLines.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SharedLines' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SharedLines> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SharedLines.class));

       return (TypeAdapter<T>) new TypeAdapter<SharedLines>() {
           @Override
           public void write(JsonWriter out, SharedLines value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SharedLines read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SharedLines given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SharedLines
   * @throws IOException if the JSON string is invalid with respect to SharedLines
   */
  public static SharedLines fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SharedLines.class);
  }

  /**
   * Convert an instance of SharedLines to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

