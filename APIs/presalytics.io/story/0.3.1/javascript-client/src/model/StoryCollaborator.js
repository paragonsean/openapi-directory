/**
 * Story
 * This API is the main entry point for creating, editing and publishing analytics throught the Presalytics API
 *
 * The version of the OpenAPI document: 0.3.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BaseModel from './BaseModel';
import PermissionType from './PermissionType';

/**
 * The StoryCollaborator model module.
 * @module model/StoryCollaborator
 * @version 0.3.1
 */
class StoryCollaborator {
    /**
     * Constructs a new <code>StoryCollaborator</code>.
     * Description of a user that can collaborate on a story
     * @alias module:model/StoryCollaborator
     * @implements module:model/BaseModel
     */
    constructor() { 
        BaseModel.initialize(this);
        StoryCollaborator.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StoryCollaborator</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StoryCollaborator} obj Optional instance to populate.
     * @return {module:model/StoryCollaborator} The populated <code>StoryCollaborator</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StoryCollaborator();
            BaseModel.constructFromObject(data, obj);

            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('created_by')) {
                obj['created_by'] = ApiClient.convertToType(data['created_by'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('updated_by')) {
                obj['updated_by'] = ApiClient.convertToType(data['updated_by'], 'String');
            }
            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('lead_id')) {
                obj['lead_id'] = ApiClient.convertToType(data['lead_id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('permission_type')) {
                obj['permission_type'] = PermissionType.constructFromObject(data['permission_type']);
            }
            if (data.hasOwnProperty('permission_type_id')) {
                obj['permission_type_id'] = ApiClient.convertToType(data['permission_type_id'], 'String');
            }
            if (data.hasOwnProperty('story_id')) {
                obj['story_id'] = ApiClient.convertToType(data['story_id'], 'String');
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StoryCollaborator</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StoryCollaborator</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['created_by'] && !(typeof data['created_by'] === 'string' || data['created_by'] instanceof String)) {
            throw new Error("Expected the field `created_by` to be a primitive type in the JSON string but got " + data['created_by']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['updated_by'] && !(typeof data['updated_by'] === 'string' || data['updated_by'] instanceof String)) {
            throw new Error("Expected the field `updated_by` to be a primitive type in the JSON string but got " + data['updated_by']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `permission_type`
        if (data['permission_type']) { // data not null
          PermissionType.validateJSON(data['permission_type']);
        }
        // ensure the json data is a string
        if (data['permission_type_id'] && !(typeof data['permission_type_id'] === 'string' || data['permission_type_id'] instanceof String)) {
            throw new Error("Expected the field `permission_type_id` to be a primitive type in the JSON string but got " + data['permission_type_id']);
        }
        // ensure the json data is a string
        if (data['story_id'] && !(typeof data['story_id'] === 'string' || data['story_id'] instanceof String)) {
            throw new Error("Expected the field `story_id` to be a primitive type in the JSON string but got " + data['story_id']);
        }
        // ensure the json data is a string
        if (data['user_id'] && !(typeof data['user_id'] === 'string' || data['user_id'] instanceof String)) {
            throw new Error("Expected the field `user_id` to be a primitive type in the JSON string but got " + data['user_id']);
        }

        return true;
    }


}



/**
 * @member {Date} created_at
 */
StoryCollaborator.prototype['created_at'] = undefined;

/**
 * @member {String} created_by
 */
StoryCollaborator.prototype['created_by'] = undefined;

/**
 * @member {String} id
 */
StoryCollaborator.prototype['id'] = undefined;

/**
 * @member {Date} updated_at
 */
StoryCollaborator.prototype['updated_at'] = undefined;

/**
 * @member {String} updated_by
 */
StoryCollaborator.prototype['updated_by'] = undefined;

/**
 * @member {Boolean} active
 */
StoryCollaborator.prototype['active'] = undefined;

/**
 * @member {String} email
 */
StoryCollaborator.prototype['email'] = undefined;

/**
 * @member {Number} lead_id
 */
StoryCollaborator.prototype['lead_id'] = undefined;

/**
 * @member {String} name
 */
StoryCollaborator.prototype['name'] = undefined;

/**
 * @member {module:model/PermissionType} permission_type
 */
StoryCollaborator.prototype['permission_type'] = undefined;

/**
 * @member {String} permission_type_id
 */
StoryCollaborator.prototype['permission_type_id'] = undefined;

/**
 * @member {String} story_id
 */
StoryCollaborator.prototype['story_id'] = undefined;

/**
 * @member {String} user_id
 */
StoryCollaborator.prototype['user_id'] = undefined;


// Implement BaseModel interface:
/**
 * @member {Date} created_at
 */
BaseModel.prototype['created_at'] = undefined;
/**
 * @member {String} created_by
 */
BaseModel.prototype['created_by'] = undefined;
/**
 * @member {String} id
 */
BaseModel.prototype['id'] = undefined;
/**
 * @member {Date} updated_at
 */
BaseModel.prototype['updated_at'] = undefined;
/**
 * @member {String} updated_by
 */
BaseModel.prototype['updated_by'] = undefined;




export default StoryCollaborator;

