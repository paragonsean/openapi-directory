/**
 * Story
 * This API is the main entry point for creating, editing and publishing analytics throught the Presalytics API
 *
 * The version of the OpenAPI document: 0.3.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BaseModel from './BaseModel';

/**
 * The View model module.
 * @module model/View
 * @version 0.3.1
 */
class View {
    /**
     * Constructs a new <code>View</code>.
     * A Page view within a session-create
     * @alias module:model/View
     * @implements module:model/BaseModel
     */
    constructor() { 
        BaseModel.initialize(this);
        View.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>View</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/View} obj Optional instance to populate.
     * @return {module:model/View} The populated <code>View</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new View();
            BaseModel.constructFromObject(data, obj);

            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('created_by')) {
                obj['created_by'] = ApiClient.convertToType(data['created_by'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('updated_by')) {
                obj['updated_by'] = ApiClient.convertToType(data['updated_by'], 'String');
            }
            if (data.hasOwnProperty('active_msecs')) {
                obj['active_msecs'] = ApiClient.convertToType(data['active_msecs'], 'Number');
            }
            if (data.hasOwnProperty('additional')) {
                obj['additional'] = ApiClient.convertToType(data['additional'], 'String');
            }
            if (data.hasOwnProperty('end_time')) {
                obj['end_time'] = ApiClient.convertToType(data['end_time'], 'Date');
            }
            if (data.hasOwnProperty('page_number')) {
                obj['page_number'] = ApiClient.convertToType(data['page_number'], 'Number');
            }
            if (data.hasOwnProperty('session_id')) {
                obj['session_id'] = ApiClient.convertToType(data['session_id'], 'String');
            }
            if (data.hasOwnProperty('start_time')) {
                obj['start_time'] = ApiClient.convertToType(data['start_time'], 'Date');
            }
            if (data.hasOwnProperty('total_msecs')) {
                obj['total_msecs'] = ApiClient.convertToType(data['total_msecs'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>View</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>View</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['created_by'] && !(typeof data['created_by'] === 'string' || data['created_by'] instanceof String)) {
            throw new Error("Expected the field `created_by` to be a primitive type in the JSON string but got " + data['created_by']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['updated_by'] && !(typeof data['updated_by'] === 'string' || data['updated_by'] instanceof String)) {
            throw new Error("Expected the field `updated_by` to be a primitive type in the JSON string but got " + data['updated_by']);
        }
        // ensure the json data is a string
        if (data['additional'] && !(typeof data['additional'] === 'string' || data['additional'] instanceof String)) {
            throw new Error("Expected the field `additional` to be a primitive type in the JSON string but got " + data['additional']);
        }
        // ensure the json data is a string
        if (data['session_id'] && !(typeof data['session_id'] === 'string' || data['session_id'] instanceof String)) {
            throw new Error("Expected the field `session_id` to be a primitive type in the JSON string but got " + data['session_id']);
        }

        return true;
    }


}



/**
 * @member {Date} created_at
 */
View.prototype['created_at'] = undefined;

/**
 * @member {String} created_by
 */
View.prototype['created_by'] = undefined;

/**
 * @member {String} id
 */
View.prototype['id'] = undefined;

/**
 * @member {Date} updated_at
 */
View.prototype['updated_at'] = undefined;

/**
 * @member {String} updated_by
 */
View.prototype['updated_by'] = undefined;

/**
 * @member {Number} active_msecs
 */
View.prototype['active_msecs'] = undefined;

/**
 * @member {String} additional
 */
View.prototype['additional'] = undefined;

/**
 * @member {Date} end_time
 */
View.prototype['end_time'] = undefined;

/**
 * @member {Number} page_number
 */
View.prototype['page_number'] = undefined;

/**
 * @member {String} session_id
 */
View.prototype['session_id'] = undefined;

/**
 * @member {Date} start_time
 */
View.prototype['start_time'] = undefined;

/**
 * @member {Number} total_msecs
 */
View.prototype['total_msecs'] = undefined;


// Implement BaseModel interface:
/**
 * @member {Date} created_at
 */
BaseModel.prototype['created_at'] = undefined;
/**
 * @member {String} created_by
 */
BaseModel.prototype['created_by'] = undefined;
/**
 * @member {String} id
 */
BaseModel.prototype['id'] = undefined;
/**
 * @member {Date} updated_at
 */
BaseModel.prototype['updated_at'] = undefined;
/**
 * @member {String} updated_by
 */
BaseModel.prototype['updated_by'] = undefined;




export default View;

