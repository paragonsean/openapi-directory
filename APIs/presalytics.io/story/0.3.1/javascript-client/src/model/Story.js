/**
 * Story
 * This API is the main entry point for creating, editing and publishing analytics throught the Presalytics API
 *
 * The version of the OpenAPI document: 0.3.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BaseModel from './BaseModel';
import OoxmlDocument from './OoxmlDocument';
import StoryCollaborator from './StoryCollaborator';
import StoryOutlineHistory from './StoryOutlineHistory';

/**
 * The Story model module.
 * @module model/Story
 * @version 0.3.1
 */
class Story {
    /**
     * Constructs a new <code>Story</code>.
     * Model for story objects
     * @alias module:model/Story
     * @implements module:model/BaseModel
     */
    constructor() { 
        BaseModel.initialize(this);
        Story.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Story</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Story} obj Optional instance to populate.
     * @return {module:model/Story} The populated <code>Story</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Story();
            BaseModel.constructFromObject(data, obj);

            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('created_by')) {
                obj['created_by'] = ApiClient.convertToType(data['created_by'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('updated_by')) {
                obj['updated_by'] = ApiClient.convertToType(data['updated_by'], 'String');
            }
            if (data.hasOwnProperty('collaborators')) {
                obj['collaborators'] = ApiClient.convertToType(data['collaborators'], [StoryCollaborator]);
            }
            if (data.hasOwnProperty('is_public')) {
                obj['is_public'] = ApiClient.convertToType(data['is_public'], 'Boolean');
            }
            if (data.hasOwnProperty('ooxml_documents')) {
                obj['ooxml_documents'] = ApiClient.convertToType(data['ooxml_documents'], [OoxmlDocument]);
            }
            if (data.hasOwnProperty('outline')) {
                obj['outline'] = ApiClient.convertToType(data['outline'], 'String');
            }
            if (data.hasOwnProperty('outline_history')) {
                obj['outline_history'] = ApiClient.convertToType(data['outline_history'], [StoryOutlineHistory]);
            }
            if (data.hasOwnProperty('revision')) {
                obj['revision'] = ApiClient.convertToType(data['revision'], 'Number');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Story</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Story</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['created_by'] && !(typeof data['created_by'] === 'string' || data['created_by'] instanceof String)) {
            throw new Error("Expected the field `created_by` to be a primitive type in the JSON string but got " + data['created_by']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['updated_by'] && !(typeof data['updated_by'] === 'string' || data['updated_by'] instanceof String)) {
            throw new Error("Expected the field `updated_by` to be a primitive type in the JSON string but got " + data['updated_by']);
        }
        if (data['collaborators']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['collaborators'])) {
                throw new Error("Expected the field `collaborators` to be an array in the JSON data but got " + data['collaborators']);
            }
            // validate the optional field `collaborators` (array)
            for (const item of data['collaborators']) {
                StoryCollaborator.validateJSON(item);
            };
        }
        if (data['ooxml_documents']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ooxml_documents'])) {
                throw new Error("Expected the field `ooxml_documents` to be an array in the JSON data but got " + data['ooxml_documents']);
            }
            // validate the optional field `ooxml_documents` (array)
            for (const item of data['ooxml_documents']) {
                OoxmlDocument.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['outline'] && !(typeof data['outline'] === 'string' || data['outline'] instanceof String)) {
            throw new Error("Expected the field `outline` to be a primitive type in the JSON string but got " + data['outline']);
        }
        if (data['outline_history']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['outline_history'])) {
                throw new Error("Expected the field `outline_history` to be an array in the JSON data but got " + data['outline_history']);
            }
            // validate the optional field `outline_history` (array)
            for (const item of data['outline_history']) {
                StoryOutlineHistory.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}



/**
 * @member {Date} created_at
 */
Story.prototype['created_at'] = undefined;

/**
 * @member {String} created_by
 */
Story.prototype['created_by'] = undefined;

/**
 * @member {String} id
 */
Story.prototype['id'] = undefined;

/**
 * @member {Date} updated_at
 */
Story.prototype['updated_at'] = undefined;

/**
 * @member {String} updated_by
 */
Story.prototype['updated_by'] = undefined;

/**
 * @member {Array.<module:model/StoryCollaborator>} collaborators
 */
Story.prototype['collaborators'] = undefined;

/**
 * @member {Boolean} is_public
 */
Story.prototype['is_public'] = undefined;

/**
 * @member {Array.<module:model/OoxmlDocument>} ooxml_documents
 */
Story.prototype['ooxml_documents'] = undefined;

/**
 * @member {String} outline
 */
Story.prototype['outline'] = undefined;

/**
 * @member {Array.<module:model/StoryOutlineHistory>} outline_history
 */
Story.prototype['outline_history'] = undefined;

/**
 * @member {Number} revision
 */
Story.prototype['revision'] = undefined;

/**
 * @member {String} title
 */
Story.prototype['title'] = undefined;


// Implement BaseModel interface:
/**
 * @member {Date} created_at
 */
BaseModel.prototype['created_at'] = undefined;
/**
 * @member {String} created_by
 */
BaseModel.prototype['created_by'] = undefined;
/**
 * @member {String} id
 */
BaseModel.prototype['id'] = undefined;
/**
 * @member {Date} updated_at
 */
BaseModel.prototype['updated_at'] = undefined;
/**
 * @member {String} updated_by
 */
BaseModel.prototype['updated_by'] = undefined;




export default Story;

