/**
 * Story
 * This API is the main entry point for creating, editing and publishing analytics throught the Presalytics API
 *
 * The version of the OpenAPI document: 0.3.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import PermissionType from '../model/PermissionType';
import ProblemDetail from '../model/ProblemDetail';

/**
* Permissions service.
* @module api/PermissionsApi
* @version 0.3.1
*/
export default class PermissionsApi {

    /**
    * Constructs a new PermissionsApi. 
    * @alias module:api/PermissionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the storyIdCollaboratorsUseridPermissiontypeGet operation.
     * @callback module:api/PermissionsApi~storyIdCollaboratorsUseridPermissiontypeGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Permissions: Story Authorization for a User
     * Check whether user have certain types of permissions.  Use http status codes to understand if permission is granted - 204 = Granted, 403 = Forbidden
     * @param {String} id the id from the story object
     * @param {String} storyCollaboratorUserid The presalytics userid (NOT the Id of the story_collaborator object)
     * @param {String} permissiontype the type of permission requested.  can be a permission_type object name (e.g., owner, editor, create, viewer, admin) or a permission type field (e.g., can_edit, can_view, can_add_collaborators, can_delete)
     * @param {module:api/PermissionsApi~storyIdCollaboratorsUseridPermissiontypeGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    storyIdCollaboratorsUseridPermissiontypeGet(id, storyCollaboratorUserid, permissiontype, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling storyIdCollaboratorsUseridPermissiontypeGet");
      }
      // verify the required parameter 'storyCollaboratorUserid' is set
      if (storyCollaboratorUserid === undefined || storyCollaboratorUserid === null) {
        throw new Error("Missing the required parameter 'storyCollaboratorUserid' when calling storyIdCollaboratorsUseridPermissiontypeGet");
      }
      // verify the required parameter 'permissiontype' is set
      if (permissiontype === undefined || permissiontype === null) {
        throw new Error("Missing the required parameter 'permissiontype' when calling storyIdCollaboratorsUseridPermissiontypeGet");
      }

      let pathParams = {
        'id': id,
        'story_collaborator_userid': storyCollaboratorUserid,
        'permissiontype': permissiontype
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/{id}/collaborators/authorize/{story_collaborator_userid}/{permissiontype}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the storyPermissionTypesGet operation.
     * @callback module:api/PermissionsApi~storyPermissionTypesGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/PermissionType>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Permissions: List Permission Types
     * Returns a list of possible user permission types
     * @param {module:api/PermissionsApi~storyPermissionTypesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/PermissionType>}
     */
    storyPermissionTypesGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [PermissionType];
      return this.apiClient.callApi(
        '/permission_types', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
