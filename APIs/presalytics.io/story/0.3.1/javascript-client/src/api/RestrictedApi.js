/**
 * Story
 * This API is the main entry point for creating, editing and publishing analytics throught the Presalytics API
 *
 * The version of the OpenAPI document: 0.3.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CollaboratorBulkUpdateRequest from '../model/CollaboratorBulkUpdateRequest';
import PermissionType from '../model/PermissionType';
import ProblemDetail from '../model/ProblemDetail';

/**
* Restricted service.
* @module api/RestrictedApi
* @version 0.3.1
*/
export default class RestrictedApi {

    /**
    * Constructs a new RestrictedApi. 
    * @alias module:api/RestrictedApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the collaboratorsPost operation.
     * @callback module:api/RestrictedApi~collaboratorsPostCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/PermissionType>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Collborators: Bulk Update (Admin Only)
     * Allows for bulk updates on collaborator metadata.  Restricted to internal admins
     * @param {module:model/CollaboratorBulkUpdateRequest} collaboratorBulkUpdateRequest parameters to identify an update a collaborator across multiple stories
     * @param {module:api/RestrictedApi~collaboratorsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/PermissionType>}
     */
    collaboratorsPost(collaboratorBulkUpdateRequest, callback) {
      let postBody = collaboratorBulkUpdateRequest;
      // verify the required parameter 'collaboratorBulkUpdateRequest' is set
      if (collaboratorBulkUpdateRequest === undefined || collaboratorBulkUpdateRequest === null) {
        throw new Error("Missing the required parameter 'collaboratorBulkUpdateRequest' when calling collaboratorsPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = [PermissionType];
      return this.apiClient.callApi(
        '/collaborators', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
