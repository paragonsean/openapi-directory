/**
 * Story
 * This API is the main entry point for creating, editing and publishing analytics throught the Presalytics API
 *
 * The version of the OpenAPI document: 0.3.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Story);
  }
}(this, function(expect, Story) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Story.StoryApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('StoryApi', function() {
    describe('storyGet', function() {
      it('should call storyGet successfully', function(done) {
        //uncomment below and update the code to test storyGet
        //instance.storyGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('storyIdAnalytics', function() {
      it('should call storyIdAnalytics successfully', function(done) {
        //uncomment below and update the code to test storyIdAnalytics
        //instance.storyIdAnalytics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('storyIdDelete', function() {
      it('should call storyIdDelete successfully', function(done) {
        //uncomment below and update the code to test storyIdDelete
        //instance.storyIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('storyIdFileOoxmlautomationidDelete', function() {
      it('should call storyIdFileOoxmlautomationidDelete successfully', function(done) {
        //uncomment below and update the code to test storyIdFileOoxmlautomationidDelete
        //instance.storyIdFileOoxmlautomationidDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('storyIdFileOoxmlautomationidGet', function() {
      it('should call storyIdFileOoxmlautomationidGet successfully', function(done) {
        //uncomment below and update the code to test storyIdFileOoxmlautomationidGet
        //instance.storyIdFileOoxmlautomationidGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('storyIdFilePost', function() {
      it('should call storyIdFilePost successfully', function(done) {
        //uncomment below and update the code to test storyIdFilePost
        //instance.storyIdFilePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('storyIdGet', function() {
      it('should call storyIdGet successfully', function(done) {
        //uncomment below and update the code to test storyIdGet
        //instance.storyIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('storyIdOutlineGet', function() {
      it('should call storyIdOutlineGet successfully', function(done) {
        //uncomment below and update the code to test storyIdOutlineGet
        //instance.storyIdOutlineGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('storyIdOutlinePost', function() {
      it('should call storyIdOutlinePost successfully', function(done) {
        //uncomment below and update the code to test storyIdOutlinePost
        //instance.storyIdOutlinePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('storyIdPublic', function() {
      it('should call storyIdPublic successfully', function(done) {
        //uncomment below and update the code to test storyIdPublic
        //instance.storyIdPublic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('storyIdPut', function() {
      it('should call storyIdPut successfully', function(done) {
        //uncomment below and update the code to test storyIdPut
        //instance.storyIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('storyIdReveal', function() {
      it('should call storyIdReveal successfully', function(done) {
        //uncomment below and update the code to test storyIdReveal
        //instance.storyIdReveal(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('storyIdStatusGet', function() {
      it('should call storyIdStatusGet successfully', function(done) {
        //uncomment below and update the code to test storyIdStatusGet
        //instance.storyIdStatusGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('storyPost', function() {
      it('should call storyPost successfully', function(done) {
        //uncomment below and update the code to test storyPost
        //instance.storyPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('storyPostFile', function() {
      it('should call storyPostFile successfully', function(done) {
        //uncomment below and update the code to test storyPostFile
        //instance.storyPostFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('storyPostFileJson', function() {
      it('should call storyPostFileJson successfully', function(done) {
        //uncomment below and update the code to test storyPostFileJson
        //instance.storyPostFileJson(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
