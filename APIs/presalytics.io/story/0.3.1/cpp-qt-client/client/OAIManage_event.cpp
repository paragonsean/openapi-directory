/**
 * Story
 * This API is the main entry point for creating, editing and publishing analytics throught the Presalytics API
 *
 * The version of the OpenAPI document: 0.3.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIManage_event.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIManage_event::OAIManage_event(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIManage_event::OAIManage_event() {
    this->initializeModel();
}

OAIManage_event::~OAIManage_event() {}

void OAIManage_event::initializeModel() {

    m_action_isSet = false;
    m_action_isValid = false;

    m_action_params_isSet = false;
    m_action_params_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIManage_event::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIManage_event::fromJsonObject(QJsonObject json) {

    m_action_isValid = ::OpenAPI::fromJsonValue(m_action, json[QString("action")]);
    m_action_isSet = !json[QString("action")].isNull() && m_action_isValid;

    m_action_params_isValid = ::OpenAPI::fromJsonValue(m_action_params, json[QString("action_params")]);
    m_action_params_isSet = !json[QString("action_params")].isNull() && m_action_params_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIManage_event::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIManage_event::asJsonObject() const {
    QJsonObject obj;
    if (m_action_isSet) {
        obj.insert(QString("action"), ::OpenAPI::toJsonValue(m_action));
    }
    if (m_action_params.size() > 0) {
        obj.insert(QString("action_params"), ::OpenAPI::toJsonValue(m_action_params));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIManage_event::getAction() const {
    return m_action;
}
void OAIManage_event::setAction(const QString &action) {
    m_action = action;
    m_action_isSet = true;
}

bool OAIManage_event::is_action_Set() const{
    return m_action_isSet;
}

bool OAIManage_event::is_action_Valid() const{
    return m_action_isValid;
}

QMap<QString, QJsonValue> OAIManage_event::getActionParams() const {
    return m_action_params;
}
void OAIManage_event::setActionParams(const QMap<QString, QJsonValue> &action_params) {
    m_action_params = action_params;
    m_action_params_isSet = true;
}

bool OAIManage_event::is_action_params_Set() const{
    return m_action_params_isSet;
}

bool OAIManage_event::is_action_params_Valid() const{
    return m_action_params_isValid;
}

QString OAIManage_event::getName() const {
    return m_name;
}
void OAIManage_event::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIManage_event::is_name_Set() const{
    return m_name_isSet;
}

bool OAIManage_event::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIManage_event::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_action_params.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIManage_event::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
