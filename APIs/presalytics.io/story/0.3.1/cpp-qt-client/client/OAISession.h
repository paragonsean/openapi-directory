/**
 * Story
 * This API is the main entry point for creating, editing and publishing analytics throught the Presalytics API
 *
 * The version of the OpenAPI document: 0.3.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISession.h
 *
 * A user session with an open story
 */

#ifndef OAISession_H
#define OAISession_H

#include <QJsonObject>

#include "OAIStory_collaborator.h"
#include "OAIView.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStory_collaborator;
class OAIView;

class OAISession : public OAIObject {
public:
    OAISession();
    OAISession(QString json);
    ~OAISession() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getCreatedBy() const;
    void setCreatedBy(const QString &created_by);
    bool is_created_by_Set() const;
    bool is_created_by_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QString getUpdatedBy() const;
    void setUpdatedBy(const QString &updated_by);
    bool is_updated_by_Set() const;
    bool is_updated_by_Valid() const;

    OAIStory_collaborator getCollaborator() const;
    void setCollaborator(const OAIStory_collaborator &collaborator);
    bool is_collaborator_Set() const;
    bool is_collaborator_Valid() const;

    QString getCollaboratorId() const;
    void setCollaboratorId(const QString &collaborator_id);
    bool is_collaborator_id_Set() const;
    bool is_collaborator_id_Valid() const;

    QString getHost() const;
    void setHost(const QString &host);
    bool is_host_Set() const;
    bool is_host_Valid() const;

    qint32 getOutlineRevision() const;
    void setOutlineRevision(const qint32 &outline_revision);
    bool is_outline_revision_Set() const;
    bool is_outline_revision_Valid() const;

    QList<OAIView> getViews() const;
    void setViews(const QList<OAIView> &views);
    bool is_views_Set() const;
    bool is_views_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_created_by;
    bool m_created_by_isSet;
    bool m_created_by_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QString m_updated_by;
    bool m_updated_by_isSet;
    bool m_updated_by_isValid;

    OAIStory_collaborator m_collaborator;
    bool m_collaborator_isSet;
    bool m_collaborator_isValid;

    QString m_collaborator_id;
    bool m_collaborator_id_isSet;
    bool m_collaborator_id_isValid;

    QString m_host;
    bool m_host_isSet;
    bool m_host_isValid;

    qint32 m_outline_revision;
    bool m_outline_revision_isSet;
    bool m_outline_revision_isValid;

    QList<OAIView> m_views;
    bool m_views_isSet;
    bool m_views_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISession)

#endif // OAISession_H
