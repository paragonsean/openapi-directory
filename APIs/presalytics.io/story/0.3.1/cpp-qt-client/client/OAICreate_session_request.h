/**
 * Story
 * This API is the main entry point for creating, editing and publishing analytics throught the Presalytics API
 *
 * The version of the OpenAPI document: 0.3.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreate_session_request.h
 *
 * Request body for creating a session
 */

#ifndef OAICreate_session_request_H
#define OAICreate_session_request_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreate_session_request : public OAIObject {
public:
    OAICreate_session_request();
    OAICreate_session_request(QString json);
    ~OAICreate_session_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCollaboratorUserId() const;
    void setCollaboratorUserId(const QString &collaborator_user_id);
    bool is_collaborator_user_id_Set() const;
    bool is_collaborator_user_id_Valid() const;

    QString getHost() const;
    void setHost(const QString &host);
    bool is_host_Set() const;
    bool is_host_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_collaborator_user_id;
    bool m_collaborator_user_id_isSet;
    bool m_collaborator_user_id_isValid;

    QString m_host;
    bool m_host_isSet;
    bool m_host_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreate_session_request)

#endif // OAICreate_session_request_H
