/**
 * Story
 * This API is the main entry point for creating, editing and publishing analytics throught the Presalytics API
 *
 * The version of the OpenAPI document: 0.3.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIView.h
 *
 * A Page view within a session-create
 */

#ifndef OAIView_H
#define OAIView_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIView : public OAIObject {
public:
    OAIView();
    OAIView(QString json);
    ~OAIView() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getCreatedBy() const;
    void setCreatedBy(const QString &created_by);
    bool is_created_by_Set() const;
    bool is_created_by_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QString getUpdatedBy() const;
    void setUpdatedBy(const QString &updated_by);
    bool is_updated_by_Set() const;
    bool is_updated_by_Valid() const;

    qint32 getActiveMsecs() const;
    void setActiveMsecs(const qint32 &active_msecs);
    bool is_active_msecs_Set() const;
    bool is_active_msecs_Valid() const;

    QString getAdditional() const;
    void setAdditional(const QString &additional);
    bool is_additional_Set() const;
    bool is_additional_Valid() const;

    QDateTime getEndTime() const;
    void setEndTime(const QDateTime &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    qint32 getPageNumber() const;
    void setPageNumber(const qint32 &page_number);
    bool is_page_number_Set() const;
    bool is_page_number_Valid() const;

    QString getSessionId() const;
    void setSessionId(const QString &session_id);
    bool is_session_id_Set() const;
    bool is_session_id_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    qint32 getTotalMsecs() const;
    void setTotalMsecs(const qint32 &total_msecs);
    bool is_total_msecs_Set() const;
    bool is_total_msecs_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_created_by;
    bool m_created_by_isSet;
    bool m_created_by_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QString m_updated_by;
    bool m_updated_by_isSet;
    bool m_updated_by_isValid;

    qint32 m_active_msecs;
    bool m_active_msecs_isSet;
    bool m_active_msecs_isValid;

    QString m_additional;
    bool m_additional_isSet;
    bool m_additional_isValid;

    QDateTime m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    qint32 m_page_number;
    bool m_page_number_isSet;
    bool m_page_number_isValid;

    QString m_session_id;
    bool m_session_id_isSet;
    bool m_session_id_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    qint32 m_total_msecs;
    bool m_total_msecs_isSet;
    bool m_total_msecs_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIView)

#endif // OAIView_H
