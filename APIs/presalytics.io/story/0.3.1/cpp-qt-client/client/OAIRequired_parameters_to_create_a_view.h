/**
 * Story
 * This API is the main entry point for creating, editing and publishing analytics throught the Presalytics API
 *
 * The version of the OpenAPI document: 0.3.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRequired_parameters_to_create_a_view.h
 *
 * A page view required a page number from the story outline to be created
 */

#ifndef OAIRequired_parameters_to_create_a_view_H
#define OAIRequired_parameters_to_create_a_view_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRequired_parameters_to_create_a_view : public OAIObject {
public:
    OAIRequired_parameters_to_create_a_view();
    OAIRequired_parameters_to_create_a_view(QString json);
    ~OAIRequired_parameters_to_create_a_view() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getActiveMSecs() const;
    void setActiveMSecs(const qint32 &active_m_secs);
    bool is_active_m_secs_Set() const;
    bool is_active_m_secs_Valid() const;

    QString getAdditional() const;
    void setAdditional(const QString &additional);
    bool is_additional_Set() const;
    bool is_additional_Valid() const;

    QDateTime getEndTime() const;
    void setEndTime(const QDateTime &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    qint32 getPageNumber() const;
    void setPageNumber(const qint32 &page_number);
    bool is_page_number_Set() const;
    bool is_page_number_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_active_m_secs;
    bool m_active_m_secs_isSet;
    bool m_active_m_secs_isValid;

    QString m_additional;
    bool m_additional_isSet;
    bool m_additional_isValid;

    QDateTime m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    qint32 m_page_number;
    bool m_page_number_isSet;
    bool m_page_number_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRequired_parameters_to_create_a_view)

#endif // OAIRequired_parameters_to_create_a_view_H
