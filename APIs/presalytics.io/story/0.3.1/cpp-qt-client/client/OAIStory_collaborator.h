/**
 * Story
 * This API is the main entry point for creating, editing and publishing analytics throught the Presalytics API
 *
 * The version of the OpenAPI document: 0.3.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStory_collaborator.h
 *
 * Description of a user that can collaborate on a story
 */

#ifndef OAIStory_collaborator_H
#define OAIStory_collaborator_H

#include <QJsonObject>

#include "OAIPermission_type.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPermission_type;

class OAIStory_collaborator : public OAIObject {
public:
    OAIStory_collaborator();
    OAIStory_collaborator(QString json);
    ~OAIStory_collaborator() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getCreatedBy() const;
    void setCreatedBy(const QString &created_by);
    bool is_created_by_Set() const;
    bool is_created_by_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QString getUpdatedBy() const;
    void setUpdatedBy(const QString &updated_by);
    bool is_updated_by_Set() const;
    bool is_updated_by_Valid() const;

    bool isActive() const;
    void setActive(const bool &active);
    bool is_active_Set() const;
    bool is_active_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    qint32 getLeadId() const;
    void setLeadId(const qint32 &lead_id);
    bool is_lead_id_Set() const;
    bool is_lead_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIPermission_type getPermissionType() const;
    void setPermissionType(const OAIPermission_type &permission_type);
    bool is_permission_type_Set() const;
    bool is_permission_type_Valid() const;

    QString getPermissionTypeId() const;
    void setPermissionTypeId(const QString &permission_type_id);
    bool is_permission_type_id_Set() const;
    bool is_permission_type_id_Valid() const;

    QString getStoryId() const;
    void setStoryId(const QString &story_id);
    bool is_story_id_Set() const;
    bool is_story_id_Valid() const;

    QString getUserId() const;
    void setUserId(const QString &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_created_by;
    bool m_created_by_isSet;
    bool m_created_by_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QString m_updated_by;
    bool m_updated_by_isSet;
    bool m_updated_by_isValid;

    bool m_active;
    bool m_active_isSet;
    bool m_active_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    qint32 m_lead_id;
    bool m_lead_id_isSet;
    bool m_lead_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIPermission_type m_permission_type;
    bool m_permission_type_isSet;
    bool m_permission_type_isValid;

    QString m_permission_type_id;
    bool m_permission_type_id_isSet;
    bool m_permission_type_id_isValid;

    QString m_story_id;
    bool m_story_id_isSet;
    bool m_story_id_isValid;

    QString m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStory_collaborator)

#endif // OAIStory_collaborator_H
