/**
 * Story
 * This API is the main entry point for creating, editing and publishing analytics throught the Presalytics API
 *
 * The version of the OpenAPI document: 0.3.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOutline.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOutline::OAIOutline(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOutline::OAIOutline() {
    this->initializeModel();
}

OAIOutline::~OAIOutline() {}

void OAIOutline::initializeModel() {

    m_outline_isSet = false;
    m_outline_isValid = false;
}

void OAIOutline::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOutline::fromJsonObject(QJsonObject json) {

    m_outline_isValid = ::OpenAPI::fromJsonValue(m_outline, json[QString("outline")]);
    m_outline_isSet = !json[QString("outline")].isNull() && m_outline_isValid;
}

QString OAIOutline::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOutline::asJsonObject() const {
    QJsonObject obj;
    if (m_outline_isSet) {
        obj.insert(QString("outline"), ::OpenAPI::toJsonValue(m_outline));
    }
    return obj;
}

QString OAIOutline::getOutline() const {
    return m_outline;
}
void OAIOutline::setOutline(const QString &outline) {
    m_outline = outline;
    m_outline_isSet = true;
}

bool OAIOutline::is_outline_Set() const{
    return m_outline_isSet;
}

bool OAIOutline::is_outline_Valid() const{
    return m_outline_isValid;
}

bool OAIOutline::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_outline_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOutline::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
