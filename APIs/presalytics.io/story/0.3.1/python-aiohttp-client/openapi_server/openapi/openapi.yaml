openapi: 3.0.0
info:
  description: "This API is the main entry point for creating, editing and publishing\
    \ analytics throught the Presalytics API"
  title: Story
  version: 0.3.1
  x-apisguru-categories:
  - analytics
  x-logo:
    url: https://presalytics.io/static/img/Logo/Logos/Orange-White/navbar.png
  x-origin:
  - format: openapi
    url: https://api.presalytics.io/story/openapi.json
    version: "3.0"
  x-providerName: presalytics.io
  x-serviceName: story
servers:
- url: /story
tags:
- description: Story
  name: Story
- description: Story Collaborators
  name: Story Collaborators
- description: Permissions and Authorization
  name: Permissions
paths:
  /:
    get:
      description: Returns a list of stories for this user identifie via the access
        token presentated to the api
      operationId: story_get
      parameters:
      - description: Indicate whether the returned object should include child relationships
        explode: true
        in: query
        name: include_relationships
        required: false
        schema:
          type: boolean
        style: form
      - description: Determines whether a repsonse including story objects should
          include the story outline.  Defaults to true. Useful for speeding up processing
          times.
        explode: true
        in: query
        name: include_outline
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/story'
                type: array
          description: List of stories for this user
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Not found
      summary: "Story: Get List of User Stories"
      tags:
      - Story
      x-operationName: list
      x-openapi-router-controller: openapi_server.controllers.story_controller
    post:
      description: Upload new story to presalytics api
      operationId: story_post
      parameters:
      - description: Determines whether a repsonse including story objects should
          include the story outline.  Defaults to true. Useful for speeding up processing
          times.
        explode: true
        in: query
        name: include_outline
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/outline'
        description: A story outline json object
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/story'
          description: Success responses with story object
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unsupported Media Type
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unprocessable Entity
      summary: "Story: Upload"
      tags:
      - Story
      x-openapi-router-controller: openapi_server.controllers.story_controller
      x-codegen-request-body-name: body
  /cache:
    post:
      description: An endpoint for Presalytics Renderers to cache html subdocuments
        for subsequent retrieval by the browser.  Documents Are retrieved via token
        expire after 1 minute.
      operationId: cache_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cache_post_request'
        description: parameters to identify an update a collaborator across multiple
          stories
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Not found
      summary: "Cache: Store Subdocument"
      tags:
      - Cache
      x-openapi-router-controller: openapi_server.controllers.cache_controller
      x-codegen-request-body-name: body
  /cache/{nonce}:
    get:
      description: An endpoint for broswer retreive html documents that were cached
        durin the rendering process via a nonce (token)
      operationId: cache_nonce_get
      parameters:
      - description: A one-time use token for retieving items in the users cache
        explode: false
        in: path
        name: nonce
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            text/html:
              schema:
                description: html document with a link to the login page
                title: Login Button
                type: string
          description: A cached html subdocument (typically loaded via iframe)
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Not found
      summary: "Cache: Get Subdocument"
      tags:
      - Cache
      x-openapi-router-controller: openapi_server.controllers.cache_controller
  /collaborators:
    post:
      description: Allows for bulk updates on collaborator metadata.  Restricted to
        internal admins
      operationId: collaborators_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/collaborator_bulk_update_request'
        description: parameters to identify an update a collaborator across multiple
          stories
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/permission_type'
                title: List of Permission Types
                type: array
          description: Array of all possible permission types
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Not found
      summary: "Collborators: Bulk Update (Admin Only)"
      tags:
      - Restricted
      x-openapi-router-controller: openapi_server.controllers.restricted_controller
      x-codegen-request-body-name: body
  /environment/:
    get:
      description: pass rendering metadata to the client-side scripts
      operationId: get_environment
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unauthorized
      summary: "Environment: Get"
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /file:
    post:
      description: Upload new story to presalytics api via an Open Office Xml file
      operationId: story_post_file
      parameters:
      - description: Determines whether a repsonse including story objects should
          include the story outline.  Defaults to true. Useful for speeding up processing
          times.
        explode: true
        in: query
        name: include_outline
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Open_Office_Xml_document__e_g___xlsx__pptx_file_'
        description: A pptx or xlsx file upload or story outline json object
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/story'
          description: Success responses with story object
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unsupported Media Type
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unprocessable Entity
      summary: "Story: Upload a File"
      tags:
      - Story
      x-operationName: upload-file
      x-openapi-router-controller: openapi_server.controllers.story_controller
      x-codegen-request-body-name: body
  /file/json:
    post:
      description: Upload new story to presalytics api via an Open Office Xml file
      operationId: story_post_file_json
      parameters:
      - description: Determines whether a repsonse including story objects should
          include the story outline.  Defaults to true. Useful for speeding up processing
          times.
        explode: true
        in: query
        name: include_outline
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/file_upload'
        description: A json-formatted object that includes a base64 encoded file (file
          encoded utf-8)
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/story'
          description: Success responses with story object
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unsupported Media Type
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unprocessable Entity
      summary: "Story: Upload a File (base64)"
      tags:
      - Story
      x-operationName: upload-file-json
      x-openapi-router-controller: openapi_server.controllers.story_controller
      x-codegen-request-body-name: body
  /no_tags_spec:
    get:
      description: json-formatted version of this spec with the tags removed to help
        with codegen processes
      operationId: spec_no_tags
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Bad Request
      summary: "Specification: No tags"
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /outline-schema/{schema_version}/story-outline.json:
    get:
      description: Json Schema for validating Story Outline objects
      operationId: story_outline_schema
      parameters:
      - description: The semanitic version of a schema (e.g. '0.3.1')
        explode: false
        in: path
        name: schema_version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Bad Request
      summary: Story Outline Schema
      tags:
      - Schemas
      x-openapi-router-controller: openapi_server.controllers.schemas_controller
  /permission_types:
    get:
      description: Returns a list of possible user permission types
      operationId: story_permission_types_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/permission_type'
                title: List of Permission Types
                type: array
          description: Array of all possible permission types
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Not found
      summary: "Permissions: List Permission Types"
      tags:
      - Permissions
      x-operationName: list
      x-openapi-router-controller: openapi_server.controllers.permissions_controller
  /sessions/{session_id}:
    delete:
      description: Remove a session and dependant data.
      operationId: session_id_delete
      parameters:
      - description: The primary key for a view session
        explode: false
        in: path
        name: session_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Not found
      summary: "Sessions: Delete by Id"
      tags:
      - Sessions
      x-openapi-router-controller: openapi_server.controllers.sessions_controller
    get:
      description: Get session metadata
      operationId: session_id_get
      parameters:
      - description: The primary key for a view session
        explode: false
        in: path
        name: session_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Indicate whether the returned object should include child relationships
        explode: true
        in: query
        name: include_relationships
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/session'
          description: A session object
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Not found
      summary: "Sessions: Get"
      tags:
      - Sessions
      x-operationName: get-session-id
      x-openapi-router-controller: openapi_server.controllers.sessions_controller
  /sessions/{session_id}/views:
    get:
      description: Get data for all views in a session
      operationId: sessions_id_views_get
      parameters:
      - description: The primary key for a view session
        explode: false
        in: path
        name: session_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/view'
                type: array
          description: A List of session views
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Not found
      summary: "Views: List Session Views"
      tags:
      - Views
      x-operationName: get-views
      x-openapi-router-controller: openapi_server.controllers.views_controller
    post:
      description: Create a page view object for a viewing session
      operationId: sessions_id_views_post
      parameters:
      - description: The primary key for a view session
        explode: false
        in: path
        name: session_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Required_parameters_to_create_a_view'
        description: Collaborator user id and permission type
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view'
          description: A new view object
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Not found
      summary: "Views: Create A Session View"
      tags:
      - Views
      x-operationName: create-view
      x-openapi-router-controller: openapi_server.controllers.views_controller
      x-codegen-request-body-name: body
  /views/{view_id}:
    delete:
      description: Remove a view and dependant data.
      operationId: views_id_delete
      parameters:
      - description: The primary key for a page view within a session
        explode: false
        in: path
        name: view_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Not found
      summary: "Views: Delete by Id"
      tags:
      - Views
      x-openapi-router-controller: openapi_server.controllers.views_controller
    get:
      description: Get view meta data
      operationId: views_id_get
      parameters:
      - description: The primary key for a page view within a session
        explode: false
        in: path
        name: view_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view'
          description: A List of session views
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Not found
      summary: "Views: Get View"
      tags:
      - Views
      x-operationName: get-view-id
      x-openapi-router-controller: openapi_server.controllers.views_controller
  /{id}:
    delete:
      description: Remove a story and dependant data.
      operationId: story_id_delete
      parameters:
      - description: the id from the story object
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Not found
      summary: "Story: Delete by Id"
      tags:
      - Story
      x-openapi-router-controller: openapi_server.controllers.story_controller
    get:
      description: "Returns story metadata, inlcuding json object with story outline"
      operationId: story_id_get
      parameters:
      - description: the id from the story object
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Indicate whether the returned object should include child relationships
        explode: true
        in: query
        name: include_relationships
        required: false
        schema:
          type: boolean
        style: form
      - description: Determines whether a repsonse including story objects should
          include the story outline.  Defaults to true. Useful for speeding up processing
          times.
        explode: true
        in: query
        name: include_outline
        required: false
        schema:
          type: boolean
        style: form
      - description: "Pull a story object with associated collaborator user, permission,\
          \ and session data(faster if cached from prior api call)"
        explode: true
        in: query
        name: full
        required: false
        schema:
          type: boolean
        style: form
      - description: Force the api reload the `Story full` object
        explode: true
        in: query
        name: refresh_cache
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/story'
          description: Success responses with story object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Not found
      summary: "Story: Get by Id"
      tags:
      - Story
      x-openapi-router-controller: openapi_server.controllers.story_controller
    put:
      description: "Update story metadata, including story outline"
      operationId: story_id_put
      parameters:
      - description: the id from the story object
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Determines whether a repsonse including story objects should
          include the story outline.  Defaults to true. Useful for speeding up processing
          times.
        explode: true
        in: query
        name: include_outline
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/story'
        description: The updated story object
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/story'
          description: Success responses with story object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Not found
      summary: "Story: Modify"
      tags:
      - Story
      x-openapi-router-controller: openapi_server.controllers.story_controller
      x-codegen-request-body-name: body
  /{id}/analytics:
    get:
      description: returns an html document containing session and event metrics for
        the story
      operationId: story_id_analytics
      parameters:
      - description: the id from the story object
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                description: html document with reveal.js presenation of story
                title: reveal.js presenation with analytics data
                type: string
          description: An html document containing session analytics for the story
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Bad Request
        "401":
          content:
            text/html:
              schema:
                description: html document with a link to the login page
                title: Login Button
                type: string
          description: An html document containing a login button
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Not found
      summary: "Story: View Analytics"
      tags:
      - Story
      x-operationName: getAnalytics
      x-openapi-router-controller: openapi_server.controllers.story_controller
  /{id}/collaborators:
    get:
      description: Gets a list users that can read or edit this story
      operationId: story_id_collaborators_get
      parameters:
      - description: the id from the story object
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/story_collaborator'
                type: array
          description: List of collaborators on the story
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Not found
      summary: "Story Collaborators: List"
      tags:
      - Story Collaborators
      x-operationName: list
      x-openapi-router-controller: openapi_server.controllers.story_collaborators_controller
    post:
      description: Add a colloborator to this story
      operationId: story_id_collaborators_post
      parameters:
      - description: the id from the story object
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_new_collaborator_request'
        description: Collaborator user id and permission type
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/story_collaborator'
          description: Collaborator data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Not found
      summary: "Story Collaborators: Add New User"
      tags:
      - Story Collaborators
      x-openapi-router-controller: openapi_server.controllers.story_collaborators_controller
      x-codegen-request-body-name: body
  /{id}/collaborators/authorize/{story_collaborator_userid}/{permissiontype}:
    get:
      description: "Check whether user have certain types of permissions.  Use http\
        \ status codes to understand if permission is granted - 204 = Granted, 403\
        \ = Forbidden"
      operationId: story_id_collaborators_userid_permissiontype_get
      parameters:
      - description: the id from the story object
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The presalytics userid (NOT the Id of the story_collaborator
          object)
        explode: false
        in: path
        name: story_collaborator_userid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "the type of permission requested.  can be a permission_type\
          \ object name (e.g., owner, editor, create, viewer, admin) or a permission\
          \ type field (e.g., can_edit, can_view, can_add_collaborators, can_delete)"
        explode: false
        in: path
        name: permissiontype
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Not found
      summary: "Permissions: Story Authorization for a User"
      tags:
      - Permissions
      x-operationName: check-auth
      x-openapi-router-controller: openapi_server.controllers.permissions_controller
  /{id}/collaborators/inactive:
    post:
      description: Edit story permissions for inactive users.  Requires admin rights.
      operationId: story_id_collaborators_inactive_post
      parameters:
      - description: the id from the story object
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modify_inactive_collaborator'
        description: Collaborator user id and permission type
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/story_collaborator'
          description: Collaborator data
        "204":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Not found
      summary: "Story Collaborators: Edit Inactive User Permission"
      tags:
      - Story Collaborators
      x-openapi-router-controller: openapi_server.controllers.story_collaborators_controller
      x-codegen-request-body-name: body
  /{id}/collaborators/{story_collaborator_userid}:
    delete:
      description: Remove a collaborator from this story
      operationId: story_id_collaborators_userid_delete
      parameters:
      - description: the id from the story object
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The presalytics userid (NOT the Id of the story_collaborator
          object)
        explode: false
        in: path
        name: story_collaborator_userid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Not found
      summary: "Story Collaborators: Remove User"
      tags:
      - Story Collaborators
      x-openapi-router-controller: openapi_server.controllers.story_collaborators_controller
    get:
      description: Data to help you understand the access rights of a particular collaborator
        on this story
      operationId: story_id_collaborators_userid_get
      parameters:
      - description: the id from the story object
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The presalytics userid (NOT the Id of the story_collaborator
          object)
        explode: false
        in: path
        name: story_collaborator_userid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/story_collaborator'
          description: Collaborator data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Not found
      summary: "Story Collaborators: Access Permissions"
      tags:
      - Story Collaborators
      x-openapi-router-controller: openapi_server.controllers.story_collaborators_controller
    put:
      description: "Modify a user's access right to this story (e.g., grant edit permissions)"
      operationId: story_id_collaborators_userid_put
      parameters:
      - description: the id from the story object
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The presalytics userid (NOT the Id of the story_collaborator
          object)
        explode: false
        in: path
        name: story_collaborator_userid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/story_collaborator'
        description: Collaborator user id (presalytics userid) and permission type
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/story_collaborator'
          description: Collaborator data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Not found
      summary: "Story Collaborators: Edit Access Rights"
      tags:
      - Story Collaborators
      x-openapi-router-controller: openapi_server.controllers.story_collaborators_controller
      x-codegen-request-body-name: body
  /{id}/events:
    get:
      description: Get a list of Events available to users of this story
      operationId: story_id_events_get
      parameters:
      - description: the id from the story object
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/event'
                type: array
          description: An Array of events
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unauthorized
      summary: "Events: List Events"
      tags:
      - Events
      x-operationName: get-events
      x-openapi-router-controller: openapi_server.controllers.events_controller
    post:
      description: Add a message to the Story's conversation
      operationId: story_id_events_post
      parameters:
      - description: the id from the story object
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/manage_event'
        description: Collaborator user id and permission type
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: A repsonse to the requested action
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Not found
      summary: "Events: Manage Events"
      tags:
      - Events
      x-operationName: post-events
      x-openapi-router-controller: openapi_server.controllers.events_controller
      x-codegen-request-body-name: body
  /{id}/file:
    post:
      description: Upload a file to an existing story
      operationId: story_id_file_post
      parameters:
      - description: the id from the story object
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Indicates whether a put or post method would replace the existing
          contents
        explode: true
        in: query
        name: replace_existing
        required: false
        schema:
          type: boolean
        style: form
      - description: A primary key pointing to an obsolete item in the story. Item
          type is context-dependent
        explode: true
        in: query
        name: obsolete_id
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Determines whether a repsonse including story objects should
          include the story outline.  Defaults to true. Useful for speeding up processing
          times.
        explode: true
        in: query
        name: include_outline
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Open_Office_Xml_document__e_g___xlsx__pptx_file_'
        description: A pptx or xlsx file upload or story outline json object
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/story'
          description: Success responses with story object
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unsupported Media Type
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unprocessable Entity
      summary: "Story: Upload a File To Existing Story"
      tags:
      - Story
      x-operationName: update
      x-openapi-router-controller: openapi_server.controllers.story_controller
      x-codegen-request-body-name: body
  /{id}/file/{ooxml_automation_id}:
    delete:
      description: "Deletes a subdcoument of this story (e.g., .pptx, .docx, .xlsx)"
      operationId: story_id_file_ooxmlautomationid_delete
      parameters:
      - description: the id from the story object
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: the id of the ooxml_automation object
        explode: false
        in: path
        name: ooxml_automation_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Not found
      summary: "Story: Delete Subdocument"
      tags:
      - Story
      x-operationName: download
      x-openapi-router-controller: openapi_server.controllers.story_controller
    get:
      description: "Redtreives updated story as open office xml file (e.g., .pptx,\
        \ .docx, .xlsx)"
      operationId: story_id_file_ooxmlautomationid_get
      parameters:
      - description: the id from the story object
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: the id of the ooxml_automation object
        explode: false
        in: path
        name: ooxml_automation_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.openxmlformats-officedocument.presentationml.presentation:
              schema:
                format: binary
                title: Powerpoint presentation
                type: string
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                format: binary
                title: Word document
                type: string
            application/vnd.openxmlformats-officedocument.wordprocessingml.document:
              schema:
                format: binary
                title: Excel spreadsheet
                type: string
          description: "The latest versiono of the story, in its orginal file format"
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Not found
      summary: "Story: Download Updated File"
      tags:
      - Story
      x-operationName: download
      x-openapi-router-controller: openapi_server.controllers.story_controller
  /{id}/messages:
    get:
      description: Get a list of messages that have been send in this story
      operationId: story_id_messages_get
      parameters:
      - description: the id from the story object
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/message'
                type: array
          description: An Array of conversation messages
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unauthorized
      summary: "Conversation: List Conversation Messages"
      tags:
      - Conversation
      x-operationName: get-messages
      x-openapi-router-controller: openapi_server.controllers.conversation_controller
    post:
      description: Add a message to the Story's conversation
      operationId: story_id_messages_post
      parameters:
      - description: the id from the story object
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: The message text
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Not found
      summary: "Conversation: Send a Message"
      tags:
      - Conversation
      x-operationName: post-messages
      x-openapi-router-controller: openapi_server.controllers.conversation_controller
      x-codegen-request-body-name: body
  /{id}/outline:
    get:
      description: Returns Story's outline
      operationId: story_id_outline_get
      parameters:
      - description: the id from the story object
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Stringified Story outline
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Not found
        "410":
          description: Gone
      summary: "Story: Get Story Outline"
      tags:
      - Story
      x-operationName: getOutline
      x-openapi-router-controller: openapi_server.controllers.story_controller
    post:
      description: Update a story outline.
      operationId: story_id_outline_post
      parameters:
      - description: the id from the story object
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: A story outline object
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Not found
      summary: "Story: Post Story Outline"
      tags:
      - Story
      x-operationName: postOutline
      x-openapi-router-controller: openapi_server.controllers.story_controller
      x-codegen-request-body-name: body
  /{id}/public/:
    get:
      description: "returns an html document containing a reveal.js epresentation\
        \ of the story, if the story if set to is_public = True"
      operationId: story_id_public
      parameters:
      - description: the id from the story object
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                description: html document with reveal.js presenation of story
                title: reveal.js presenation
                type: string
          description: An html document containing a reveal.js represenation of the
            story
        "302":
          description: Not Found redirect
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Bad Request
      summary: "Story: Public Link to Story Reveal.js Document"
      tags:
      - Story
      x-operationName: getPublic
      x-openapi-router-controller: openapi_server.controllers.story_controller
  /{id}/reveal:
    get:
      description: returns an html document containing a reveal.js epresentation of
        the story
      operationId: story_id_reveal
      parameters:
      - description: the id from the story object
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                description: html document with reveal.js presenation of story
                title: reveal.js presenation
                type: string
          description: An html document containing a reveal.js represenation of the
            story
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Bad Request
        "401":
          content:
            text/html:
              schema:
                description: html document with a link to the login page
                title: Login Button
                type: string
          description: An html document containing a login button
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Not found
      summary: "Story: Get Story at Reveal.js Document"
      tags:
      - Story
      x-operationName: getHtml
      x-openapi-router-controller: openapi_server.controllers.story_controller
  /{id}/sessions:
    get:
      description: Get a list of sessions asscoaited with this story
      operationId: story_id_sessions_get
      parameters:
      - description: the id from the story object
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Indicate whether the returned object should include child relationships
        explode: true
        in: query
        name: include_relationships
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/session'
                type: array
          description: An array of session objects
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Not found
      summary: "Sessions: List Story Sessions"
      tags:
      - Sessions
      x-operationName: get-sessions
      x-openapi-router-controller: openapi_server.controllers.sessions_controller
    post:
      description: Create a new session
      operationId: story_id_session_post
      parameters:
      - description: the id from the story object
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_session_request'
        description: Collaborator user id and permission type
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/session'
          description: A new session object
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Not found
      summary: "Sessions: Create a Session"
      tags:
      - Sessions
      x-operationName: create-session
      x-openapi-router-controller: openapi_server.controllers.sessions_controller
      x-codegen-request-body-name: body
  /{id}/status:
    get:
      description: "Returns code indicating whether story has active running background\
        \ and is healthy (e.g., the latest outline is valid)"
      operationId: story_id_status_get
      parameters:
      - description: the id from the story object
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
          description: Accepted
        "204":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/problem_detail'
          description: Not found
      summary: "Story: Get Story Status"
      tags:
      - Story
      x-operationName: getStatus
      x-openapi-router-controller: openapi_server.controllers.story_controller
components:
  parameters:
    d3_id:
      description: A d3 figure id from a D3Widget instance in the Presaltyics Python
        Library
      explode: false
      in: path
      name: d3_id
      required: true
      schema:
        type: string
      style: simple
    figure_id:
      description: A matplotlib figure id from a MatplotlibResponsiveFigure instance
        in the Presaltyics Python Library
      explode: false
      in: path
      name: figure_id
      required: true
      schema:
        type: string
      style: simple
    full:
      description: "Pull a story object with associated collaborator user, permission,\
        \ and session data(faster if cached from prior api call)"
      explode: true
      in: query
      name: full
      required: false
      schema:
        type: boolean
      style: form
    id:
      description: the id from the story object
      explode: false
      in: path
      name: id
      required: true
      schema:
        format: uuid
        type: string
      style: simple
    include_outline:
      description: Determines whether a repsonse including story objects should include
        the story outline.  Defaults to true. Useful for speeding up processing times.
      explode: true
      in: query
      name: include_outline
      required: false
      schema:
        type: boolean
      style: form
    include_relationships:
      description: Indicate whether the returned object should include child relationships
      explode: true
      in: query
      name: include_relationships
      required: false
      schema:
        type: boolean
      style: form
    nonce:
      description: A one-time use token for retieving items in the users cache
      explode: false
      in: path
      name: nonce
      required: true
      schema:
        format: uuid
        type: string
      style: simple
    obsolete_id:
      description: A primary key pointing to an obsolete item in the story. Item type
        is context-dependent
      explode: true
      in: query
      name: obsolete_id
      required: false
      schema:
        format: uuid
        type: string
      style: form
    ooxml_automation_id:
      description: the id of the ooxml_automation object
      explode: false
      in: path
      name: ooxml_automation_id
      required: true
      schema:
        format: uuid
        type: string
      style: simple
    permissiontype:
      description: "The type of access required.  Must match - admin, owner, editor,\
        \ viewer"
      explode: false
      in: path
      name: permissiontype
      required: true
      schema:
        type: string
      style: simple
    refresh_cache:
      description: Force the api reload the `Story full` object
      explode: true
      in: query
      name: refresh_cache
      required: false
      schema:
        type: boolean
      style: form
    replace_existing:
      description: Indicates whether a put or post method would replace the existing
        contents
      explode: true
      in: query
      name: replace_existing
      required: false
      schema:
        type: boolean
      style: form
    schema_version:
      description: The semanitic version of a schema (e.g. '0.3.1')
      explode: false
      in: path
      name: schema_version
      required: true
      schema:
        type: string
      style: simple
    session_id:
      description: The primary key for a view session
      explode: false
      in: path
      name: session_id
      required: true
      schema:
        format: uuid
        type: string
      style: simple
    story_collaborator_userid:
      description: The presalytics userid (NOT the Id of the story_collaborator object)
      explode: false
      in: path
      name: story_collaborator_userid
      required: true
      schema:
        format: uuid
        type: string
      style: simple
    view_id:
      description: The primary key for a page view within a session
      explode: false
      in: path
      name: view_id
      required: true
      schema:
        format: uuid
        type: string
      style: simple
  responses:
    accepted:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/status'
      description: Accepted
    badrequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/problem_detail'
      description: Bad Request
    forbidden:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/problem_detail'
      description: Forbidden
    gone:
      description: Gone
    notfound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/problem_detail'
      description: Not found
    outline:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/outline'
      description: Success responses with story object
    story:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/story'
      description: Success responses with story object
    success_response_no_content:
      description: Success
    unauthorized:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/problem_detail'
      description: Unauthorized
    unprocessable_entity:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/problem_detail'
      description: Unprocessable Entity
    unsupported_media_type:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/problem_detail'
      description: Unsupported Media Type
  schemas:
    add_new_collaborator_request:
      description: required subset of collaborator data to get a permission
      properties:
        collaborator_type:
          title: collaborator_type
          type: string
        user_email:
          title: user_email
          type: string
        user_id:
          format: uuid
          title: user_id
          type: string
      title: Collaborator permission data
    base_model:
      description: Base model for all types
      properties:
        created_at:
          format: date-time
          title: created_at
          type: string
          x-nullable: true
        created_by:
          format: uuid
          title: created_by
          type: string
          x-nullable: true
        id:
          format: uuid
          title: id
          type: string
        updated_at:
          format: date-time
          title: updated_at
          type: string
          x-nullable: true
        updated_by:
          format: uuid
          title: updated_by
          type: string
          x-nullable: true
      title: BaseModel
    cache_post_request:
      properties:
        current_user_id:
          format: uuid
          title: current_user_id
          type: string
        nonce:
          format: uuid
          title: nonce
          type: string
        subdocument:
          title: subdocument
          type: string
      title: Cache Post Request body
      type: object
    collaborator_bulk_update_request:
      description: allows for bulk updating of user_ids and active status based on
        a lead id or user_id
      properties:
        active:
          title: active
          type: boolean
        lead_id:
          format: int32
          title: lead_id
          type: integer
        user_id:
          format: uuid
          title: user_id
          type: string
      title: Collaborator data to change
    create_session_request:
      description: Request body for creating a session
      properties:
        collaboratorUserId:
          format: uuid
          title: collaboratorUserId
          type: string
        host:
          title: host
          type: string
      title: session-create
    event:
      allOf:
      - $ref: '#/components/schemas/base_model'
      - properties:
          attributes:
            type: string
          chat_prompt:
            type: string
          conversation_id:
            type: string
          dom_selectors:
            type: string
          is_chat_hidden:
            type: boolean
          is_notify_enabled:
            type: boolean
          name:
            type: string
        type: object
      description: An Story Event object
      example:
        is_chat_hidden: true
        is_notify_enabled: true
        updated_at: 2000-01-23T04:56:07.000+00:00
        conversation_id: conversation_id
        updated_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        dom_selectors: dom_selectors
        attributes: attributes
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        created_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        chat_prompt: chat_prompt
      title: Event
    file_upload:
      description: A Base64 encoded file object
      properties:
        content_length:
          title: content_length
          type: integer
        file:
          title: file
          type: string
        file_name:
          title: file_name
          type: string
        mimetype:
          title: mimetype
          type: string
      title: File Upload
    manage_event:
      properties:
        action:
          enum:
          - create
          - fire
          - change
          - delete
          title: action
          type: string
        action_params:
          additionalProperties: true
          title: action_params
          type: object
        name:
          nullable: true
          title: name
          type: string
          x-nullable: true
      title: Event Actions
      type: object
    message:
      description: A conversation message
      example:
        id: id
        body: body
        remote: true
        userName: userName
        userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        body:
          title: body
          type: string
        id:
          title: id
          type: string
        remote:
          title: remote
          type: boolean
        timestamp:
          format: date-time
          title: timestamp
          type: string
        userId:
          format: uuid
          title: userId
          type: string
        userName:
          title: userName
          type: string
      title: Message
    modify_inactive_collaborator:
      description: Action can be either "delete" or "activate".  Either lead_id or
        user_id is required.  user_id takes precedence.
      properties:
        action:
          title: action
          type: string
        lead_id:
          format: int32
          title: lead_id
          type: integer
        user_id:
          format: uuid
          title: user_id
          type: string
      title: Collaborator permission data
    ooxml_document:
      allOf:
      - $ref: '#/components/schemas/base_model'
      - properties:
          delete_target_on_story_delete:
            type: boolean
          ooxml_automation_id:
            format: uuid
            type: string
          story_id:
            format: uuid
            type: string
        type: object
      description: A reference to an Ooxml Automation Document from the Presalytics
        Ooxml Automation API
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        ooxml_automation_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        delete_target_on_story_delete: true
        story_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        updated_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        created_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      title: Ooxml Document
    outline:
      description: story_outline (json object)
      properties:
        outline:
          title: outline
          type: string
      title: Story Outline
    permission_type:
      allOf:
      - $ref: '#/components/schemas/base_model'
      - properties:
          can_add_collaborators:
            type: boolean
          can_delete:
            type: boolean
          can_edit:
            type: boolean
          can_view:
            type: boolean
          name:
            type: string
        type: object
      description: A permission type that can be applied to story collaborator
      example:
        can_add_collaborators: true
        can_view: true
        updated_at: 2000-01-23T04:56:07.000+00:00
        can_delete: true
        updated_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        can_edit: true
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        created_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      title: Permission Type
    problem_detail:
      description: Error reponse model
      example:
        detail: detail
        title: title
        type: type
        status: 5
      properties:
        detail:
          title: detail
          type: string
        status:
          format: int32
          title: status
          type: integer
        title:
          title: title
          type: string
        type:
          title: type
          type: string
      title: Problem Detail
    session:
      allOf:
      - $ref: '#/components/schemas/base_model'
      - properties:
          collaborator:
            $ref: '#/components/schemas/story_collaborator'
          collaborator_id:
            format: uuid
            type: string
          host:
            type: string
          outline_revision:
            type: integer
          views:
            items:
              $ref: '#/components/schemas/view'
            type: array
        type: object
      description: A user session with an open story
      example:
        collaborator_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        updated_at: 2000-01-23T04:56:07.000+00:00
        updated_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        host: host
        created_at: 2000-01-23T04:56:07.000+00:00
        outline_revision: 0
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        created_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        views:
        - start_time: 2000-01-23T04:56:07.000+00:00
          page_number: 1
          updated_at: 2000-01-23T04:56:07.000+00:00
          total_msecs: 5
          additional: additional
          updated_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          end_time: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          session_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          active_msecs: 6
        - start_time: 2000-01-23T04:56:07.000+00:00
          page_number: 1
          updated_at: 2000-01-23T04:56:07.000+00:00
          total_msecs: 5
          additional: additional
          updated_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          end_time: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          session_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          active_msecs: 6
        collaborator:
          story_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_at: 2000-01-23T04:56:07.000+00:00
          active: true
          created_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          permission_type_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          permission_type:
            can_add_collaborators: true
            can_view: true
            updated_at: 2000-01-23T04:56:07.000+00:00
            can_delete: true
            updated_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            can_edit: true
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            created_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updated_at: 2000-01-23T04:56:07.000+00:00
          user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updated_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          email: email
          lead_id: 0
      title: Session
    status:
      description: Status response when returning 202s
      example:
        status: status
      properties:
        status:
          title: status
          type: string
      title: Status
    story:
      allOf:
      - $ref: '#/components/schemas/base_model'
      - properties:
          collaborators:
            items:
              $ref: '#/components/schemas/story_collaborator'
            type: array
            x-nullable: true
          is_public:
            type: boolean
            x-nullable: true
          ooxml_documents:
            items:
              $ref: '#/components/schemas/ooxml_document'
            type: array
            x-nullable: true
          outline:
            nullable: true
            type: string
            x-nullable: true
          outline_history:
            items:
              $ref: '#/components/schemas/story_outline_history'
            type: array
            x-nullable: true
          revision:
            format: Int32
            type: integer
            x-nullable: true
          title:
            type: string
            x-nullable: true
        type: object
      description: Model for story objects
      example:
        outline: outline
        updated_at: 2000-01-23T04:56:07.000+00:00
        ooxml_documents:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          ooxml_automation_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          delete_target_on_story_delete: true
          story_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updated_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - updated_at: 2000-01-23T04:56:07.000+00:00
          ooxml_automation_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          delete_target_on_story_delete: true
          story_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updated_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        updated_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        is_public: true
        created_at: 2000-01-23T04:56:07.000+00:00
        collaborators:
        - story_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_at: 2000-01-23T04:56:07.000+00:00
          active: true
          created_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          permission_type_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          permission_type:
            can_add_collaborators: true
            can_view: true
            updated_at: 2000-01-23T04:56:07.000+00:00
            can_delete: true
            updated_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            can_edit: true
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            created_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updated_at: 2000-01-23T04:56:07.000+00:00
          user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updated_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          email: email
          lead_id: 0
        - story_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_at: 2000-01-23T04:56:07.000+00:00
          active: true
          created_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          permission_type_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          permission_type:
            can_add_collaborators: true
            can_view: true
            updated_at: 2000-01-23T04:56:07.000+00:00
            can_delete: true
            updated_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            can_edit: true
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            created_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updated_at: 2000-01-23T04:56:07.000+00:00
          user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updated_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          email: email
          lead_id: 0
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        outline_history:
        - outline: outline
          updated_at: 2000-01-23T04:56:07.000+00:00
          revision_number: 6
          story_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updated_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_at: 2000-01-23T04:56:07.000+00:00
          collaborator_user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - outline: outline
          updated_at: 2000-01-23T04:56:07.000+00:00
          revision_number: 6
          story_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updated_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_at: 2000-01-23T04:56:07.000+00:00
          collaborator_user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        title: title
        created_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        revision: 1
      title: Story
    story_collaborator:
      allOf:
      - $ref: '#/components/schemas/base_model'
      - properties:
          active:
            nullable: true
            type: boolean
            x-nullable: true
          email:
            type: string
          lead_id:
            format: int32
            nullable: true
            type: integer
            x-nullable: true
          name:
            type: string
          permission_type:
            $ref: '#/components/schemas/permission_type'
          permission_type_id:
            format: uuid
            type: string
          story_id:
            format: uuid
            type: string
          user_id:
            format: uuid
            type: string
        type: object
      description: Description of a user that can collaborate on a story
      example:
        story_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        created_at: 2000-01-23T04:56:07.000+00:00
        active: true
        created_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        permission_type_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        permission_type:
          can_add_collaborators: true
          can_view: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          can_delete: true
          updated_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          can_edit: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        updated_at: 2000-01-23T04:56:07.000+00:00
        user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        updated_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        email: email
        lead_id: 0
      title: Story Collaborator
    story_outline_history:
      allOf:
      - $ref: '#/components/schemas/base_model'
      - properties:
          collaborator_user_id:
            format: uuid
            type: string
          outline:
            type: string
          revision_number:
            format: Int32
            type: integer
          story_id:
            format: uuid
            type: string
        type: object
      description: A revision repository for story outlines
      example:
        outline: outline
        updated_at: 2000-01-23T04:56:07.000+00:00
        revision_number: 6
        story_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        updated_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        created_at: 2000-01-23T04:56:07.000+00:00
        collaborator_user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        created_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      title: Story Outline History
    view:
      allOf:
      - $ref: '#/components/schemas/base_model'
      - properties:
          active_msecs:
            type: integer
          additional:
            type: string
          end_time:
            format: date-time
            type: string
          page_number:
            type: integer
          session_id:
            format: uuid
            type: string
          start_time:
            format: date-time
            type: string
          total_msecs:
            type: integer
        type: object
      description: A Page view within a session-create
      example:
        start_time: 2000-01-23T04:56:07.000+00:00
        page_number: 1
        updated_at: 2000-01-23T04:56:07.000+00:00
        total_msecs: 5
        additional: additional
        updated_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        end_time: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        session_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        created_by: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        active_msecs: 6
      title: View
    Open_Office_Xml_document__e_g___xlsx__pptx_file_:
      description: A pptx or xlsx object from which to start creation of a story
      properties:
        file:
          items:
            format: binary
            type: string
          type: array
      title: "Open Office Xml document (e.g., xlsx, pptx file)"
    Required_parameters_to_create_a_view:
      description: A page view required a page number from the story outline to be
        created
      properties:
        activeMSecs:
          title: activeMSecs
          type: integer
        additional:
          title: additional
          type: string
        endTime:
          format: date-time
          title: endTime
          type: string
        pageNumber:
          title: pageNumber
          type: integer
        startTime:
          format: date-time
          title: startTime
          type: string
      required:
      - endTime
      - pageNumber
      - startTime
      title: Required parameters to create a view
      type: object
  securitySchemes:
    jwt:
      bearerFormat: JWT
      scheme: bearer
      type: http
      x-bearerInfoFunc: openapi_server.controllers.security_controller.info_from_jwt
