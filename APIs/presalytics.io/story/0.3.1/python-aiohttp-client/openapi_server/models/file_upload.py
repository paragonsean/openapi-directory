# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FileUpload(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content_length: int=None, file: str=None, file_name: str=None, mimetype: str=None):
        """FileUpload - a model defined in OpenAPI

        :param content_length: The content_length of this FileUpload.
        :param file: The file of this FileUpload.
        :param file_name: The file_name of this FileUpload.
        :param mimetype: The mimetype of this FileUpload.
        """
        self.openapi_types = {
            'content_length': int,
            'file': str,
            'file_name': str,
            'mimetype': str
        }

        self.attribute_map = {
            'content_length': 'content_length',
            'file': 'file',
            'file_name': 'file_name',
            'mimetype': 'mimetype'
        }

        self._content_length = content_length
        self._file = file
        self._file_name = file_name
        self._mimetype = mimetype

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FileUpload':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The file_upload of this FileUpload.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content_length(self):
        """Gets the content_length of this FileUpload.


        :return: The content_length of this FileUpload.
        :rtype: int
        """
        return self._content_length

    @content_length.setter
    def content_length(self, content_length):
        """Sets the content_length of this FileUpload.


        :param content_length: The content_length of this FileUpload.
        :type content_length: int
        """

        self._content_length = content_length

    @property
    def file(self):
        """Gets the file of this FileUpload.


        :return: The file of this FileUpload.
        :rtype: str
        """
        return self._file

    @file.setter
    def file(self, file):
        """Sets the file of this FileUpload.


        :param file: The file of this FileUpload.
        :type file: str
        """

        self._file = file

    @property
    def file_name(self):
        """Gets the file_name of this FileUpload.


        :return: The file_name of this FileUpload.
        :rtype: str
        """
        return self._file_name

    @file_name.setter
    def file_name(self, file_name):
        """Sets the file_name of this FileUpload.


        :param file_name: The file_name of this FileUpload.
        :type file_name: str
        """

        self._file_name = file_name

    @property
    def mimetype(self):
        """Gets the mimetype of this FileUpload.


        :return: The mimetype of this FileUpload.
        :rtype: str
        """
        return self._mimetype

    @mimetype.setter
    def mimetype(self, mimetype):
        """Sets the mimetype of this FileUpload.


        :param mimetype: The mimetype of this FileUpload.
        :type mimetype: str
        """

        self._mimetype = mimetype
