# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Message(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, body: str=None, id: str=None, remote: bool=None, timestamp: datetime=None, user_id: str=None, user_name: str=None):
        """Message - a model defined in OpenAPI

        :param body: The body of this Message.
        :param id: The id of this Message.
        :param remote: The remote of this Message.
        :param timestamp: The timestamp of this Message.
        :param user_id: The user_id of this Message.
        :param user_name: The user_name of this Message.
        """
        self.openapi_types = {
            'body': str,
            'id': str,
            'remote': bool,
            'timestamp': datetime,
            'user_id': str,
            'user_name': str
        }

        self.attribute_map = {
            'body': 'body',
            'id': 'id',
            'remote': 'remote',
            'timestamp': 'timestamp',
            'user_id': 'userId',
            'user_name': 'userName'
        }

        self._body = body
        self._id = id
        self._remote = remote
        self._timestamp = timestamp
        self._user_id = user_id
        self._user_name = user_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Message':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The message of this Message.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def body(self):
        """Gets the body of this Message.


        :return: The body of this Message.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this Message.


        :param body: The body of this Message.
        :type body: str
        """

        self._body = body

    @property
    def id(self):
        """Gets the id of this Message.


        :return: The id of this Message.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Message.


        :param id: The id of this Message.
        :type id: str
        """

        self._id = id

    @property
    def remote(self):
        """Gets the remote of this Message.


        :return: The remote of this Message.
        :rtype: bool
        """
        return self._remote

    @remote.setter
    def remote(self, remote):
        """Sets the remote of this Message.


        :param remote: The remote of this Message.
        :type remote: bool
        """

        self._remote = remote

    @property
    def timestamp(self):
        """Gets the timestamp of this Message.


        :return: The timestamp of this Message.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this Message.


        :param timestamp: The timestamp of this Message.
        :type timestamp: datetime
        """

        self._timestamp = timestamp

    @property
    def user_id(self):
        """Gets the user_id of this Message.


        :return: The user_id of this Message.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this Message.


        :param user_id: The user_id of this Message.
        :type user_id: str
        """

        self._user_id = user_id

    @property
    def user_name(self):
        """Gets the user_name of this Message.


        :return: The user_name of this Message.
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """Sets the user_name of this Message.


        :param user_name: The user_name of this Message.
        :type user_name: str
        """

        self._user_name = user_name
