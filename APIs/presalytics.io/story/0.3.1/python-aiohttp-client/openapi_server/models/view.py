# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class View(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, created_by: str=None, id: str=None, updated_at: datetime=None, updated_by: str=None, active_msecs: int=None, additional: str=None, end_time: datetime=None, page_number: int=None, session_id: str=None, start_time: datetime=None, total_msecs: int=None):
        """View - a model defined in OpenAPI

        :param created_at: The created_at of this View.
        :param created_by: The created_by of this View.
        :param id: The id of this View.
        :param updated_at: The updated_at of this View.
        :param updated_by: The updated_by of this View.
        :param active_msecs: The active_msecs of this View.
        :param additional: The additional of this View.
        :param end_time: The end_time of this View.
        :param page_number: The page_number of this View.
        :param session_id: The session_id of this View.
        :param start_time: The start_time of this View.
        :param total_msecs: The total_msecs of this View.
        """
        self.openapi_types = {
            'created_at': datetime,
            'created_by': str,
            'id': str,
            'updated_at': datetime,
            'updated_by': str,
            'active_msecs': int,
            'additional': str,
            'end_time': datetime,
            'page_number': int,
            'session_id': str,
            'start_time': datetime,
            'total_msecs': int
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'created_by': 'created_by',
            'id': 'id',
            'updated_at': 'updated_at',
            'updated_by': 'updated_by',
            'active_msecs': 'active_msecs',
            'additional': 'additional',
            'end_time': 'end_time',
            'page_number': 'page_number',
            'session_id': 'session_id',
            'start_time': 'start_time',
            'total_msecs': 'total_msecs'
        }

        self._created_at = created_at
        self._created_by = created_by
        self._id = id
        self._updated_at = updated_at
        self._updated_by = updated_by
        self._active_msecs = active_msecs
        self._additional = additional
        self._end_time = end_time
        self._page_number = page_number
        self._session_id = session_id
        self._start_time = start_time
        self._total_msecs = total_msecs

    @classmethod
    def from_dict(cls, dikt: dict) -> 'View':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The view of this View.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this View.


        :return: The created_at of this View.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this View.


        :param created_at: The created_at of this View.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def created_by(self):
        """Gets the created_by of this View.


        :return: The created_by of this View.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this View.


        :param created_by: The created_by of this View.
        :type created_by: str
        """

        self._created_by = created_by

    @property
    def id(self):
        """Gets the id of this View.


        :return: The id of this View.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this View.


        :param id: The id of this View.
        :type id: str
        """

        self._id = id

    @property
    def updated_at(self):
        """Gets the updated_at of this View.


        :return: The updated_at of this View.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this View.


        :param updated_at: The updated_at of this View.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def updated_by(self):
        """Gets the updated_by of this View.


        :return: The updated_by of this View.
        :rtype: str
        """
        return self._updated_by

    @updated_by.setter
    def updated_by(self, updated_by):
        """Sets the updated_by of this View.


        :param updated_by: The updated_by of this View.
        :type updated_by: str
        """

        self._updated_by = updated_by

    @property
    def active_msecs(self):
        """Gets the active_msecs of this View.


        :return: The active_msecs of this View.
        :rtype: int
        """
        return self._active_msecs

    @active_msecs.setter
    def active_msecs(self, active_msecs):
        """Sets the active_msecs of this View.


        :param active_msecs: The active_msecs of this View.
        :type active_msecs: int
        """

        self._active_msecs = active_msecs

    @property
    def additional(self):
        """Gets the additional of this View.


        :return: The additional of this View.
        :rtype: str
        """
        return self._additional

    @additional.setter
    def additional(self, additional):
        """Sets the additional of this View.


        :param additional: The additional of this View.
        :type additional: str
        """

        self._additional = additional

    @property
    def end_time(self):
        """Gets the end_time of this View.


        :return: The end_time of this View.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this View.


        :param end_time: The end_time of this View.
        :type end_time: datetime
        """

        self._end_time = end_time

    @property
    def page_number(self):
        """Gets the page_number of this View.


        :return: The page_number of this View.
        :rtype: int
        """
        return self._page_number

    @page_number.setter
    def page_number(self, page_number):
        """Sets the page_number of this View.


        :param page_number: The page_number of this View.
        :type page_number: int
        """

        self._page_number = page_number

    @property
    def session_id(self):
        """Gets the session_id of this View.


        :return: The session_id of this View.
        :rtype: str
        """
        return self._session_id

    @session_id.setter
    def session_id(self, session_id):
        """Sets the session_id of this View.


        :param session_id: The session_id of this View.
        :type session_id: str
        """

        self._session_id = session_id

    @property
    def start_time(self):
        """Gets the start_time of this View.


        :return: The start_time of this View.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this View.


        :param start_time: The start_time of this View.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def total_msecs(self):
        """Gets the total_msecs of this View.


        :return: The total_msecs of this View.
        :rtype: int
        """
        return self._total_msecs

    @total_msecs.setter
    def total_msecs(self, total_msecs):
        """Sets the total_msecs of this View.


        :param total_msecs: The total_msecs of this View.
        :type total_msecs: int
        """

        self._total_msecs = total_msecs
