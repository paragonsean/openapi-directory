# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Outline(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, outline: str=None):
        """Outline - a model defined in OpenAPI

        :param outline: The outline of this Outline.
        """
        self.openapi_types = {
            'outline': str
        }

        self.attribute_map = {
            'outline': 'outline'
        }

        self._outline = outline

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Outline':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The outline of this Outline.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def outline(self):
        """Gets the outline of this Outline.


        :return: The outline of this Outline.
        :rtype: str
        """
        return self._outline

    @outline.setter
    def outline(self, outline):
        """Sets the outline of this Outline.


        :param outline: The outline of this Outline.
        :type outline: str
        """

        self._outline = outline
