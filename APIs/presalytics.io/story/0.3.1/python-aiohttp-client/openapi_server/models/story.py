# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ooxml_document import OoxmlDocument
from openapi_server.models.story_collaborator import StoryCollaborator
from openapi_server.models.story_outline_history import StoryOutlineHistory
from openapi_server import util


class Story(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, created_by: str=None, id: str=None, updated_at: datetime=None, updated_by: str=None, collaborators: List[StoryCollaborator]=None, is_public: bool=None, ooxml_documents: List[OoxmlDocument]=None, outline: str=None, outline_history: List[StoryOutlineHistory]=None, revision: int=None, title: str=None):
        """Story - a model defined in OpenAPI

        :param created_at: The created_at of this Story.
        :param created_by: The created_by of this Story.
        :param id: The id of this Story.
        :param updated_at: The updated_at of this Story.
        :param updated_by: The updated_by of this Story.
        :param collaborators: The collaborators of this Story.
        :param is_public: The is_public of this Story.
        :param ooxml_documents: The ooxml_documents of this Story.
        :param outline: The outline of this Story.
        :param outline_history: The outline_history of this Story.
        :param revision: The revision of this Story.
        :param title: The title of this Story.
        """
        self.openapi_types = {
            'created_at': datetime,
            'created_by': str,
            'id': str,
            'updated_at': datetime,
            'updated_by': str,
            'collaborators': List[StoryCollaborator],
            'is_public': bool,
            'ooxml_documents': List[OoxmlDocument],
            'outline': str,
            'outline_history': List[StoryOutlineHistory],
            'revision': int,
            'title': str
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'created_by': 'created_by',
            'id': 'id',
            'updated_at': 'updated_at',
            'updated_by': 'updated_by',
            'collaborators': 'collaborators',
            'is_public': 'is_public',
            'ooxml_documents': 'ooxml_documents',
            'outline': 'outline',
            'outline_history': 'outline_history',
            'revision': 'revision',
            'title': 'title'
        }

        self._created_at = created_at
        self._created_by = created_by
        self._id = id
        self._updated_at = updated_at
        self._updated_by = updated_by
        self._collaborators = collaborators
        self._is_public = is_public
        self._ooxml_documents = ooxml_documents
        self._outline = outline
        self._outline_history = outline_history
        self._revision = revision
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Story':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The story of this Story.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this Story.


        :return: The created_at of this Story.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Story.


        :param created_at: The created_at of this Story.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def created_by(self):
        """Gets the created_by of this Story.


        :return: The created_by of this Story.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this Story.


        :param created_by: The created_by of this Story.
        :type created_by: str
        """

        self._created_by = created_by

    @property
    def id(self):
        """Gets the id of this Story.


        :return: The id of this Story.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Story.


        :param id: The id of this Story.
        :type id: str
        """

        self._id = id

    @property
    def updated_at(self):
        """Gets the updated_at of this Story.


        :return: The updated_at of this Story.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this Story.


        :param updated_at: The updated_at of this Story.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def updated_by(self):
        """Gets the updated_by of this Story.


        :return: The updated_by of this Story.
        :rtype: str
        """
        return self._updated_by

    @updated_by.setter
    def updated_by(self, updated_by):
        """Sets the updated_by of this Story.


        :param updated_by: The updated_by of this Story.
        :type updated_by: str
        """

        self._updated_by = updated_by

    @property
    def collaborators(self):
        """Gets the collaborators of this Story.


        :return: The collaborators of this Story.
        :rtype: List[StoryCollaborator]
        """
        return self._collaborators

    @collaborators.setter
    def collaborators(self, collaborators):
        """Sets the collaborators of this Story.


        :param collaborators: The collaborators of this Story.
        :type collaborators: List[StoryCollaborator]
        """

        self._collaborators = collaborators

    @property
    def is_public(self):
        """Gets the is_public of this Story.


        :return: The is_public of this Story.
        :rtype: bool
        """
        return self._is_public

    @is_public.setter
    def is_public(self, is_public):
        """Sets the is_public of this Story.


        :param is_public: The is_public of this Story.
        :type is_public: bool
        """

        self._is_public = is_public

    @property
    def ooxml_documents(self):
        """Gets the ooxml_documents of this Story.


        :return: The ooxml_documents of this Story.
        :rtype: List[OoxmlDocument]
        """
        return self._ooxml_documents

    @ooxml_documents.setter
    def ooxml_documents(self, ooxml_documents):
        """Sets the ooxml_documents of this Story.


        :param ooxml_documents: The ooxml_documents of this Story.
        :type ooxml_documents: List[OoxmlDocument]
        """

        self._ooxml_documents = ooxml_documents

    @property
    def outline(self):
        """Gets the outline of this Story.


        :return: The outline of this Story.
        :rtype: str
        """
        return self._outline

    @outline.setter
    def outline(self, outline):
        """Sets the outline of this Story.


        :param outline: The outline of this Story.
        :type outline: str
        """

        self._outline = outline

    @property
    def outline_history(self):
        """Gets the outline_history of this Story.


        :return: The outline_history of this Story.
        :rtype: List[StoryOutlineHistory]
        """
        return self._outline_history

    @outline_history.setter
    def outline_history(self, outline_history):
        """Sets the outline_history of this Story.


        :param outline_history: The outline_history of this Story.
        :type outline_history: List[StoryOutlineHistory]
        """

        self._outline_history = outline_history

    @property
    def revision(self):
        """Gets the revision of this Story.


        :return: The revision of this Story.
        :rtype: int
        """
        return self._revision

    @revision.setter
    def revision(self, revision):
        """Sets the revision of this Story.


        :param revision: The revision of this Story.
        :type revision: int
        """

        self._revision = revision

    @property
    def title(self):
        """Gets the title of this Story.


        :return: The title of this Story.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Story.


        :param title: The title of this Story.
        :type title: str
        """

        self._title = title
