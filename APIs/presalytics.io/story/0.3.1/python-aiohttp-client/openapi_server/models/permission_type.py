# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PermissionType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, created_by: str=None, id: str=None, updated_at: datetime=None, updated_by: str=None, can_add_collaborators: bool=None, can_delete: bool=None, can_edit: bool=None, can_view: bool=None, name: str=None):
        """PermissionType - a model defined in OpenAPI

        :param created_at: The created_at of this PermissionType.
        :param created_by: The created_by of this PermissionType.
        :param id: The id of this PermissionType.
        :param updated_at: The updated_at of this PermissionType.
        :param updated_by: The updated_by of this PermissionType.
        :param can_add_collaborators: The can_add_collaborators of this PermissionType.
        :param can_delete: The can_delete of this PermissionType.
        :param can_edit: The can_edit of this PermissionType.
        :param can_view: The can_view of this PermissionType.
        :param name: The name of this PermissionType.
        """
        self.openapi_types = {
            'created_at': datetime,
            'created_by': str,
            'id': str,
            'updated_at': datetime,
            'updated_by': str,
            'can_add_collaborators': bool,
            'can_delete': bool,
            'can_edit': bool,
            'can_view': bool,
            'name': str
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'created_by': 'created_by',
            'id': 'id',
            'updated_at': 'updated_at',
            'updated_by': 'updated_by',
            'can_add_collaborators': 'can_add_collaborators',
            'can_delete': 'can_delete',
            'can_edit': 'can_edit',
            'can_view': 'can_view',
            'name': 'name'
        }

        self._created_at = created_at
        self._created_by = created_by
        self._id = id
        self._updated_at = updated_at
        self._updated_by = updated_by
        self._can_add_collaborators = can_add_collaborators
        self._can_delete = can_delete
        self._can_edit = can_edit
        self._can_view = can_view
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PermissionType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The permission_type of this PermissionType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this PermissionType.


        :return: The created_at of this PermissionType.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this PermissionType.


        :param created_at: The created_at of this PermissionType.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def created_by(self):
        """Gets the created_by of this PermissionType.


        :return: The created_by of this PermissionType.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this PermissionType.


        :param created_by: The created_by of this PermissionType.
        :type created_by: str
        """

        self._created_by = created_by

    @property
    def id(self):
        """Gets the id of this PermissionType.


        :return: The id of this PermissionType.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PermissionType.


        :param id: The id of this PermissionType.
        :type id: str
        """

        self._id = id

    @property
    def updated_at(self):
        """Gets the updated_at of this PermissionType.


        :return: The updated_at of this PermissionType.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this PermissionType.


        :param updated_at: The updated_at of this PermissionType.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def updated_by(self):
        """Gets the updated_by of this PermissionType.


        :return: The updated_by of this PermissionType.
        :rtype: str
        """
        return self._updated_by

    @updated_by.setter
    def updated_by(self, updated_by):
        """Sets the updated_by of this PermissionType.


        :param updated_by: The updated_by of this PermissionType.
        :type updated_by: str
        """

        self._updated_by = updated_by

    @property
    def can_add_collaborators(self):
        """Gets the can_add_collaborators of this PermissionType.


        :return: The can_add_collaborators of this PermissionType.
        :rtype: bool
        """
        return self._can_add_collaborators

    @can_add_collaborators.setter
    def can_add_collaborators(self, can_add_collaborators):
        """Sets the can_add_collaborators of this PermissionType.


        :param can_add_collaborators: The can_add_collaborators of this PermissionType.
        :type can_add_collaborators: bool
        """

        self._can_add_collaborators = can_add_collaborators

    @property
    def can_delete(self):
        """Gets the can_delete of this PermissionType.


        :return: The can_delete of this PermissionType.
        :rtype: bool
        """
        return self._can_delete

    @can_delete.setter
    def can_delete(self, can_delete):
        """Sets the can_delete of this PermissionType.


        :param can_delete: The can_delete of this PermissionType.
        :type can_delete: bool
        """

        self._can_delete = can_delete

    @property
    def can_edit(self):
        """Gets the can_edit of this PermissionType.


        :return: The can_edit of this PermissionType.
        :rtype: bool
        """
        return self._can_edit

    @can_edit.setter
    def can_edit(self, can_edit):
        """Sets the can_edit of this PermissionType.


        :param can_edit: The can_edit of this PermissionType.
        :type can_edit: bool
        """

        self._can_edit = can_edit

    @property
    def can_view(self):
        """Gets the can_view of this PermissionType.


        :return: The can_view of this PermissionType.
        :rtype: bool
        """
        return self._can_view

    @can_view.setter
    def can_view(self, can_view):
        """Sets the can_view of this PermissionType.


        :param can_view: The can_view of this PermissionType.
        :type can_view: bool
        """

        self._can_view = can_view

    @property
    def name(self):
        """Gets the name of this PermissionType.


        :return: The name of this PermissionType.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PermissionType.


        :param name: The name of this PermissionType.
        :type name: str
        """

        self._name = name
