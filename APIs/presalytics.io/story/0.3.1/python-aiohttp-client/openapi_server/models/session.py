# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.story_collaborator import StoryCollaborator
from openapi_server.models.view import View
from openapi_server import util


class Session(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, created_by: str=None, id: str=None, updated_at: datetime=None, updated_by: str=None, collaborator: StoryCollaborator=None, collaborator_id: str=None, host: str=None, outline_revision: int=None, views: List[View]=None):
        """Session - a model defined in OpenAPI

        :param created_at: The created_at of this Session.
        :param created_by: The created_by of this Session.
        :param id: The id of this Session.
        :param updated_at: The updated_at of this Session.
        :param updated_by: The updated_by of this Session.
        :param collaborator: The collaborator of this Session.
        :param collaborator_id: The collaborator_id of this Session.
        :param host: The host of this Session.
        :param outline_revision: The outline_revision of this Session.
        :param views: The views of this Session.
        """
        self.openapi_types = {
            'created_at': datetime,
            'created_by': str,
            'id': str,
            'updated_at': datetime,
            'updated_by': str,
            'collaborator': StoryCollaborator,
            'collaborator_id': str,
            'host': str,
            'outline_revision': int,
            'views': List[View]
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'created_by': 'created_by',
            'id': 'id',
            'updated_at': 'updated_at',
            'updated_by': 'updated_by',
            'collaborator': 'collaborator',
            'collaborator_id': 'collaborator_id',
            'host': 'host',
            'outline_revision': 'outline_revision',
            'views': 'views'
        }

        self._created_at = created_at
        self._created_by = created_by
        self._id = id
        self._updated_at = updated_at
        self._updated_by = updated_by
        self._collaborator = collaborator
        self._collaborator_id = collaborator_id
        self._host = host
        self._outline_revision = outline_revision
        self._views = views

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Session':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The session of this Session.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this Session.


        :return: The created_at of this Session.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Session.


        :param created_at: The created_at of this Session.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def created_by(self):
        """Gets the created_by of this Session.


        :return: The created_by of this Session.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this Session.


        :param created_by: The created_by of this Session.
        :type created_by: str
        """

        self._created_by = created_by

    @property
    def id(self):
        """Gets the id of this Session.


        :return: The id of this Session.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Session.


        :param id: The id of this Session.
        :type id: str
        """

        self._id = id

    @property
    def updated_at(self):
        """Gets the updated_at of this Session.


        :return: The updated_at of this Session.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this Session.


        :param updated_at: The updated_at of this Session.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def updated_by(self):
        """Gets the updated_by of this Session.


        :return: The updated_by of this Session.
        :rtype: str
        """
        return self._updated_by

    @updated_by.setter
    def updated_by(self, updated_by):
        """Sets the updated_by of this Session.


        :param updated_by: The updated_by of this Session.
        :type updated_by: str
        """

        self._updated_by = updated_by

    @property
    def collaborator(self):
        """Gets the collaborator of this Session.


        :return: The collaborator of this Session.
        :rtype: StoryCollaborator
        """
        return self._collaborator

    @collaborator.setter
    def collaborator(self, collaborator):
        """Sets the collaborator of this Session.


        :param collaborator: The collaborator of this Session.
        :type collaborator: StoryCollaborator
        """

        self._collaborator = collaborator

    @property
    def collaborator_id(self):
        """Gets the collaborator_id of this Session.


        :return: The collaborator_id of this Session.
        :rtype: str
        """
        return self._collaborator_id

    @collaborator_id.setter
    def collaborator_id(self, collaborator_id):
        """Sets the collaborator_id of this Session.


        :param collaborator_id: The collaborator_id of this Session.
        :type collaborator_id: str
        """

        self._collaborator_id = collaborator_id

    @property
    def host(self):
        """Gets the host of this Session.


        :return: The host of this Session.
        :rtype: str
        """
        return self._host

    @host.setter
    def host(self, host):
        """Sets the host of this Session.


        :param host: The host of this Session.
        :type host: str
        """

        self._host = host

    @property
    def outline_revision(self):
        """Gets the outline_revision of this Session.


        :return: The outline_revision of this Session.
        :rtype: int
        """
        return self._outline_revision

    @outline_revision.setter
    def outline_revision(self, outline_revision):
        """Sets the outline_revision of this Session.


        :param outline_revision: The outline_revision of this Session.
        :type outline_revision: int
        """

        self._outline_revision = outline_revision

    @property
    def views(self):
        """Gets the views of this Session.


        :return: The views of this Session.
        :rtype: List[View]
        """
        return self._views

    @views.setter
    def views(self, views):
        """Sets the views of this Session.


        :param views: The views of this Session.
        :type views: List[View]
        """

        self._views = views
