# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RequiredParametersToCreateAView(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active_m_secs: int=None, additional: str=None, end_time: datetime=None, page_number: int=None, start_time: datetime=None):
        """RequiredParametersToCreateAView - a model defined in OpenAPI

        :param active_m_secs: The active_m_secs of this RequiredParametersToCreateAView.
        :param additional: The additional of this RequiredParametersToCreateAView.
        :param end_time: The end_time of this RequiredParametersToCreateAView.
        :param page_number: The page_number of this RequiredParametersToCreateAView.
        :param start_time: The start_time of this RequiredParametersToCreateAView.
        """
        self.openapi_types = {
            'active_m_secs': int,
            'additional': str,
            'end_time': datetime,
            'page_number': int,
            'start_time': datetime
        }

        self.attribute_map = {
            'active_m_secs': 'activeMSecs',
            'additional': 'additional',
            'end_time': 'endTime',
            'page_number': 'pageNumber',
            'start_time': 'startTime'
        }

        self._active_m_secs = active_m_secs
        self._additional = additional
        self._end_time = end_time
        self._page_number = page_number
        self._start_time = start_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RequiredParametersToCreateAView':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Required_parameters_to_create_a_view of this RequiredParametersToCreateAView.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active_m_secs(self):
        """Gets the active_m_secs of this RequiredParametersToCreateAView.


        :return: The active_m_secs of this RequiredParametersToCreateAView.
        :rtype: int
        """
        return self._active_m_secs

    @active_m_secs.setter
    def active_m_secs(self, active_m_secs):
        """Sets the active_m_secs of this RequiredParametersToCreateAView.


        :param active_m_secs: The active_m_secs of this RequiredParametersToCreateAView.
        :type active_m_secs: int
        """

        self._active_m_secs = active_m_secs

    @property
    def additional(self):
        """Gets the additional of this RequiredParametersToCreateAView.


        :return: The additional of this RequiredParametersToCreateAView.
        :rtype: str
        """
        return self._additional

    @additional.setter
    def additional(self, additional):
        """Sets the additional of this RequiredParametersToCreateAView.


        :param additional: The additional of this RequiredParametersToCreateAView.
        :type additional: str
        """

        self._additional = additional

    @property
    def end_time(self):
        """Gets the end_time of this RequiredParametersToCreateAView.


        :return: The end_time of this RequiredParametersToCreateAView.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this RequiredParametersToCreateAView.


        :param end_time: The end_time of this RequiredParametersToCreateAView.
        :type end_time: datetime
        """
        if end_time is None:
            raise ValueError("Invalid value for `end_time`, must not be `None`")

        self._end_time = end_time

    @property
    def page_number(self):
        """Gets the page_number of this RequiredParametersToCreateAView.


        :return: The page_number of this RequiredParametersToCreateAView.
        :rtype: int
        """
        return self._page_number

    @page_number.setter
    def page_number(self, page_number):
        """Sets the page_number of this RequiredParametersToCreateAView.


        :param page_number: The page_number of this RequiredParametersToCreateAView.
        :type page_number: int
        """
        if page_number is None:
            raise ValueError("Invalid value for `page_number`, must not be `None`")

        self._page_number = page_number

    @property
    def start_time(self):
        """Gets the start_time of this RequiredParametersToCreateAView.


        :return: The start_time of this RequiredParametersToCreateAView.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this RequiredParametersToCreateAView.


        :param start_time: The start_time of this RequiredParametersToCreateAView.
        :type start_time: datetime
        """
        if start_time is None:
            raise ValueError("Invalid value for `start_time`, must not be `None`")

        self._start_time = start_time
