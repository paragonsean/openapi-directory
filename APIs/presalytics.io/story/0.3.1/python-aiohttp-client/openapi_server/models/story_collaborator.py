# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.permission_type import PermissionType
from openapi_server import util


class StoryCollaborator(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, created_by: str=None, id: str=None, updated_at: datetime=None, updated_by: str=None, active: bool=None, email: str=None, lead_id: int=None, name: str=None, permission_type: PermissionType=None, permission_type_id: str=None, story_id: str=None, user_id: str=None):
        """StoryCollaborator - a model defined in OpenAPI

        :param created_at: The created_at of this StoryCollaborator.
        :param created_by: The created_by of this StoryCollaborator.
        :param id: The id of this StoryCollaborator.
        :param updated_at: The updated_at of this StoryCollaborator.
        :param updated_by: The updated_by of this StoryCollaborator.
        :param active: The active of this StoryCollaborator.
        :param email: The email of this StoryCollaborator.
        :param lead_id: The lead_id of this StoryCollaborator.
        :param name: The name of this StoryCollaborator.
        :param permission_type: The permission_type of this StoryCollaborator.
        :param permission_type_id: The permission_type_id of this StoryCollaborator.
        :param story_id: The story_id of this StoryCollaborator.
        :param user_id: The user_id of this StoryCollaborator.
        """
        self.openapi_types = {
            'created_at': datetime,
            'created_by': str,
            'id': str,
            'updated_at': datetime,
            'updated_by': str,
            'active': bool,
            'email': str,
            'lead_id': int,
            'name': str,
            'permission_type': PermissionType,
            'permission_type_id': str,
            'story_id': str,
            'user_id': str
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'created_by': 'created_by',
            'id': 'id',
            'updated_at': 'updated_at',
            'updated_by': 'updated_by',
            'active': 'active',
            'email': 'email',
            'lead_id': 'lead_id',
            'name': 'name',
            'permission_type': 'permission_type',
            'permission_type_id': 'permission_type_id',
            'story_id': 'story_id',
            'user_id': 'user_id'
        }

        self._created_at = created_at
        self._created_by = created_by
        self._id = id
        self._updated_at = updated_at
        self._updated_by = updated_by
        self._active = active
        self._email = email
        self._lead_id = lead_id
        self._name = name
        self._permission_type = permission_type
        self._permission_type_id = permission_type_id
        self._story_id = story_id
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StoryCollaborator':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The story_collaborator of this StoryCollaborator.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this StoryCollaborator.


        :return: The created_at of this StoryCollaborator.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this StoryCollaborator.


        :param created_at: The created_at of this StoryCollaborator.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def created_by(self):
        """Gets the created_by of this StoryCollaborator.


        :return: The created_by of this StoryCollaborator.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this StoryCollaborator.


        :param created_by: The created_by of this StoryCollaborator.
        :type created_by: str
        """

        self._created_by = created_by

    @property
    def id(self):
        """Gets the id of this StoryCollaborator.


        :return: The id of this StoryCollaborator.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this StoryCollaborator.


        :param id: The id of this StoryCollaborator.
        :type id: str
        """

        self._id = id

    @property
    def updated_at(self):
        """Gets the updated_at of this StoryCollaborator.


        :return: The updated_at of this StoryCollaborator.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this StoryCollaborator.


        :param updated_at: The updated_at of this StoryCollaborator.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def updated_by(self):
        """Gets the updated_by of this StoryCollaborator.


        :return: The updated_by of this StoryCollaborator.
        :rtype: str
        """
        return self._updated_by

    @updated_by.setter
    def updated_by(self, updated_by):
        """Sets the updated_by of this StoryCollaborator.


        :param updated_by: The updated_by of this StoryCollaborator.
        :type updated_by: str
        """

        self._updated_by = updated_by

    @property
    def active(self):
        """Gets the active of this StoryCollaborator.


        :return: The active of this StoryCollaborator.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this StoryCollaborator.


        :param active: The active of this StoryCollaborator.
        :type active: bool
        """

        self._active = active

    @property
    def email(self):
        """Gets the email of this StoryCollaborator.


        :return: The email of this StoryCollaborator.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this StoryCollaborator.


        :param email: The email of this StoryCollaborator.
        :type email: str
        """

        self._email = email

    @property
    def lead_id(self):
        """Gets the lead_id of this StoryCollaborator.


        :return: The lead_id of this StoryCollaborator.
        :rtype: int
        """
        return self._lead_id

    @lead_id.setter
    def lead_id(self, lead_id):
        """Sets the lead_id of this StoryCollaborator.


        :param lead_id: The lead_id of this StoryCollaborator.
        :type lead_id: int
        """

        self._lead_id = lead_id

    @property
    def name(self):
        """Gets the name of this StoryCollaborator.


        :return: The name of this StoryCollaborator.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this StoryCollaborator.


        :param name: The name of this StoryCollaborator.
        :type name: str
        """

        self._name = name

    @property
    def permission_type(self):
        """Gets the permission_type of this StoryCollaborator.


        :return: The permission_type of this StoryCollaborator.
        :rtype: PermissionType
        """
        return self._permission_type

    @permission_type.setter
    def permission_type(self, permission_type):
        """Sets the permission_type of this StoryCollaborator.


        :param permission_type: The permission_type of this StoryCollaborator.
        :type permission_type: PermissionType
        """

        self._permission_type = permission_type

    @property
    def permission_type_id(self):
        """Gets the permission_type_id of this StoryCollaborator.


        :return: The permission_type_id of this StoryCollaborator.
        :rtype: str
        """
        return self._permission_type_id

    @permission_type_id.setter
    def permission_type_id(self, permission_type_id):
        """Sets the permission_type_id of this StoryCollaborator.


        :param permission_type_id: The permission_type_id of this StoryCollaborator.
        :type permission_type_id: str
        """

        self._permission_type_id = permission_type_id

    @property
    def story_id(self):
        """Gets the story_id of this StoryCollaborator.


        :return: The story_id of this StoryCollaborator.
        :rtype: str
        """
        return self._story_id

    @story_id.setter
    def story_id(self, story_id):
        """Sets the story_id of this StoryCollaborator.


        :param story_id: The story_id of this StoryCollaborator.
        :type story_id: str
        """

        self._story_id = story_id

    @property
    def user_id(self):
        """Gets the user_id of this StoryCollaborator.


        :return: The user_id of this StoryCollaborator.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this StoryCollaborator.


        :param user_id: The user_id of this StoryCollaborator.
        :type user_id: str
        """

        self._user_id = user_id
