# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AddNewCollaboratorRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, collaborator_type: str=None, user_email: str=None, user_id: str=None):
        """AddNewCollaboratorRequest - a model defined in OpenAPI

        :param collaborator_type: The collaborator_type of this AddNewCollaboratorRequest.
        :param user_email: The user_email of this AddNewCollaboratorRequest.
        :param user_id: The user_id of this AddNewCollaboratorRequest.
        """
        self.openapi_types = {
            'collaborator_type': str,
            'user_email': str,
            'user_id': str
        }

        self.attribute_map = {
            'collaborator_type': 'collaborator_type',
            'user_email': 'user_email',
            'user_id': 'user_id'
        }

        self._collaborator_type = collaborator_type
        self._user_email = user_email
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddNewCollaboratorRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The add_new_collaborator_request of this AddNewCollaboratorRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def collaborator_type(self):
        """Gets the collaborator_type of this AddNewCollaboratorRequest.


        :return: The collaborator_type of this AddNewCollaboratorRequest.
        :rtype: str
        """
        return self._collaborator_type

    @collaborator_type.setter
    def collaborator_type(self, collaborator_type):
        """Sets the collaborator_type of this AddNewCollaboratorRequest.


        :param collaborator_type: The collaborator_type of this AddNewCollaboratorRequest.
        :type collaborator_type: str
        """

        self._collaborator_type = collaborator_type

    @property
    def user_email(self):
        """Gets the user_email of this AddNewCollaboratorRequest.


        :return: The user_email of this AddNewCollaboratorRequest.
        :rtype: str
        """
        return self._user_email

    @user_email.setter
    def user_email(self, user_email):
        """Sets the user_email of this AddNewCollaboratorRequest.


        :param user_email: The user_email of this AddNewCollaboratorRequest.
        :type user_email: str
        """

        self._user_email = user_email

    @property
    def user_id(self):
        """Gets the user_id of this AddNewCollaboratorRequest.


        :return: The user_id of this AddNewCollaboratorRequest.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this AddNewCollaboratorRequest.


        :param user_id: The user_id of this AddNewCollaboratorRequest.
        :type user_id: str
        """

        self._user_id = user_id
