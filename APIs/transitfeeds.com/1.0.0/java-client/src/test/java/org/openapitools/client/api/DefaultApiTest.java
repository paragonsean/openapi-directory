/*
 * TransitFeeds API
 * API to view feed information and download feeds from TransitFeeds.com 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@transitfeeds.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.API401Response;
import org.openapitools.client.model.API404Response;
import org.openapitools.client.model.GetFeedVersionsResponse;
import org.openapitools.client.model.GetFeedsResponse;
import org.openapitools.client.model.GetLatestFeedVersionResponse;
import org.openapitools.client.model.GetLocationsResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Retrieve a list of versions of specified (or all) feeds.
     *
     * This API call allows you to easily see every single feed update in the TranstiFeeds.com system. Since this can be quite long, it&#39;s also possible to filter this list by a single feed ID. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFeedVersionsTest() throws ApiException {
        String key = null;
        String feed = null;
        Integer page = null;
        Integer limit = null;
        Integer err = null;
        Integer warn = null;
        GetFeedVersionsResponse response = api.getFeedVersions(key, feed, page, limit, err, warn);
        // TODO: test validations
    }

    /**
     * Retrieve a list of feeds.
     *
     * Used this API to retrieve a list of feeds in the system. Doing so can be usedful to discover feed IDs that can be used in other API calls. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFeedsTest() throws ApiException {
        String key = null;
        Integer location = null;
        Integer descendants = null;
        Integer page = null;
        Integer limit = null;
        String type = null;
        GetFeedsResponse response = api.getFeeds(key, location, descendants, page, limit, type);
        // TODO: test validations
    }

    /**
     * Retrieve the download URL for the latest version of a feed.
     *
     * Once you have used &#x60;/getFeeds&#x60; to discover a feed&#39;s URL, you can use this endpoint to download its latest version from TranstiFeeds. It will be unmodified in the original format from the provider. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLatestFeedVersionTest() throws ApiException {
        String key = null;
        String feed = null;
        GetLatestFeedVersionResponse response = api.getLatestFeedVersion(key, feed);
        // TODO: test validations
    }

    /**
     * Retrieve a list of locations.
     *
     * Retrieve a list of locations. Each location (except for the root) has a parent location, and each location has zero or more child locations. This hierarchy is generally structured so countries contain states, states contain cities (although this typically depends on the country). 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLocationsTest() throws ApiException {
        String key = null;
        GetLocationsResponse response = api.getLocations(key);
        // TODO: test validations
    }

}
