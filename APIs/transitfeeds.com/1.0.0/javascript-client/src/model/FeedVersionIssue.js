/**
 * TransitFeeds API
 * API to view feed information and download feeds from TransitFeeds.com 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@transitfeeds.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FeedVersionIssue model module.
 * @module model/FeedVersionIssue
 * @version 1.0.0
 */
class FeedVersionIssue {
    /**
     * Constructs a new <code>FeedVersionIssue</code>.
     * Contains the information about a single error or warning associated with a feed version.
     * @alias module:model/FeedVersionIssue
     */
    constructor() { 
        
        FeedVersionIssue.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FeedVersionIssue</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FeedVersionIssue} obj Optional instance to populate.
     * @return {module:model/FeedVersionIssue} The populated <code>FeedVersionIssue</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FeedVersionIssue();

            if (data.hasOwnProperty('c')) {
                obj['c'] = ApiClient.convertToType(data['c'], 'String');
            }
            if (data.hasOwnProperty('f')) {
                obj['f'] = ApiClient.convertToType(data['f'], 'String');
            }
            if (data.hasOwnProperty('l')) {
                obj['l'] = ApiClient.convertToType(data['l'], 'String');
            }
            if (data.hasOwnProperty('m')) {
                obj['m'] = ApiClient.convertToType(data['m'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FeedVersionIssue</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FeedVersionIssue</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['c'] && !(typeof data['c'] === 'string' || data['c'] instanceof String)) {
            throw new Error("Expected the field `c` to be a primitive type in the JSON string but got " + data['c']);
        }
        // ensure the json data is a string
        if (data['f'] && !(typeof data['f'] === 'string' || data['f'] instanceof String)) {
            throw new Error("Expected the field `f` to be a primitive type in the JSON string but got " + data['f']);
        }
        // ensure the json data is a string
        if (data['l'] && !(typeof data['l'] === 'string' || data['l'] instanceof String)) {
            throw new Error("Expected the field `l` to be a primitive type in the JSON string but got " + data['l']);
        }
        // ensure the json data is a string
        if (data['m'] && !(typeof data['m'] === 'string' || data['m'] instanceof String)) {
            throw new Error("Expected the field `m` to be a primitive type in the JSON string but got " + data['m']);
        }

        return true;
    }


}



/**
 * The column name (if referring to a GTFS file / CSV file) associated with the issue.
 * @member {String} c
 */
FeedVersionIssue.prototype['c'] = undefined;

/**
 * The filename associated with this issue.
 * @member {String} f
 */
FeedVersionIssue.prototype['f'] = undefined;

/**
 * The line number in the given file associated with the issue.
 * @member {String} l
 */
FeedVersionIssue.prototype['l'] = undefined;

/**
 * A description of the issue.
 * @member {String} m
 */
FeedVersionIssue.prototype['m'] = undefined;






export default FeedVersionIssue;

