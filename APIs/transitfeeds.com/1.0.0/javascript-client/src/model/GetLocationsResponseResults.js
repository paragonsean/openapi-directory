/**
 * TransitFeeds API
 * API to view feed information and download feeds from TransitFeeds.com 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@transitfeeds.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Location from './Location';

/**
 * The GetLocationsResponseResults model module.
 * @module model/GetLocationsResponseResults
 * @version 1.0.0
 */
class GetLocationsResponseResults {
    /**
     * Constructs a new <code>GetLocationsResponseResults</code>.
     * Contains requested data for a valid request.
     * @alias module:model/GetLocationsResponseResults
     */
    constructor() { 
        
        GetLocationsResponseResults.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetLocationsResponseResults</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetLocationsResponseResults} obj Optional instance to populate.
     * @return {module:model/GetLocationsResponseResults} The populated <code>GetLocationsResponseResults</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetLocationsResponseResults();

            if (data.hasOwnProperty('input')) {
                obj['input'] = ApiClient.convertToType(data['input'], 'String');
            }
            if (data.hasOwnProperty('locations')) {
                obj['locations'] = ApiClient.convertToType(data['locations'], [Location]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetLocationsResponseResults</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetLocationsResponseResults</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['input'] && !(typeof data['input'] === 'string' || data['input'] instanceof String)) {
            throw new Error("Expected the field `input` to be a primitive type in the JSON string but got " + data['input']);
        }
        if (data['locations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['locations'])) {
                throw new Error("Expected the field `locations` to be an array in the JSON data but got " + data['locations']);
            }
            // validate the optional field `locations` (array)
            for (const item of data['locations']) {
                Location.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * If the status value is `MISSINGINPUT` or `INVALIDINPUT`, this field contains the name of the offending field.
 * @member {String} input
 */
GetLocationsResponseResults.prototype['input'] = undefined;

/**
 * An array of zero or more locations.
 * @member {Array.<module:model/Location>} locations
 */
GetLocationsResponseResults.prototype['locations'] = undefined;






export default GetLocationsResponseResults;

