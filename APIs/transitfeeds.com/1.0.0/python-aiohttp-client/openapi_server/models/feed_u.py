# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FeedU(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, d: str=None, i: str=None):
        """FeedU - a model defined in OpenAPI

        :param d: The d of this FeedU.
        :param i: The i of this FeedU.
        """
        self.openapi_types = {
            'd': str,
            'i': str
        }

        self.attribute_map = {
            'd': 'd',
            'i': 'i'
        }

        self._d = d
        self._i = i

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FeedU':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Feed_u of this FeedU.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def d(self):
        """Gets the d of this FeedU.

        If available, this contains a URL to download the feed directly from the provider (as opposed to downloading from TransitFeeds.com). 

        :return: The d of this FeedU.
        :rtype: str
        """
        return self._d

    @d.setter
    def d(self, d):
        """Sets the d of this FeedU.

        If available, this contains a URL to download the feed directly from the provider (as opposed to downloading from TransitFeeds.com). 

        :param d: The d of this FeedU.
        :type d: str
        """

        self._d = d

    @property
    def i(self):
        """Gets the i of this FeedU.

        If available, this contains a URL with additional information about registering or downloading the feed from the provider. 

        :return: The i of this FeedU.
        :rtype: str
        """
        return self._i

    @i.setter
    def i(self, i):
        """Sets the i of this FeedU.

        If available, this contains a URL with additional information about registering or downloading the feed from the provider. 

        :param i: The i of this FeedU.
        :type i: str
        """

        self._i = i
