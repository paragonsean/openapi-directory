# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class API401Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, msg: str=None, status: str=None, ts: int=None):
        """API401Response - a model defined in OpenAPI

        :param msg: The msg of this API401Response.
        :param status: The status of this API401Response.
        :param ts: The ts of this API401Response.
        """
        self.openapi_types = {
            'msg': str,
            'status': str,
            'ts': int
        }

        self.attribute_map = {
            'msg': 'msg',
            'status': 'status',
            'ts': 'ts'
        }

        self._msg = msg
        self._status = status
        self._ts = ts

    @classmethod
    def from_dict(cls, dikt: dict) -> 'API401Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The API401Response of this API401Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def msg(self):
        """Gets the msg of this API401Response.

        Description of the error.

        :return: The msg of this API401Response.
        :rtype: str
        """
        return self._msg

    @msg.setter
    def msg(self, msg):
        """Sets the msg of this API401Response.

        Description of the error.

        :param msg: The msg of this API401Response.
        :type msg: str
        """

        self._msg = msg

    @property
    def status(self):
        """Gets the status of this API401Response.

        Indicates the status of this request.

        :return: The status of this API401Response.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this API401Response.

        Indicates the status of this request.

        :param status: The status of this API401Response.
        :type status: str
        """
        allowed_values = ["INVALIDKEY", "PERMISSIONDENIED"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def ts(self):
        """Gets the ts of this API401Response.

        Indicates the timestamp (in number of seconds since the epoch (January 1 1970 00:00:00 GMT).

        :return: The ts of this API401Response.
        :rtype: int
        """
        return self._ts

    @ts.setter
    def ts(self, ts):
        """Sets the ts of this API401Response.

        Indicates the timestamp (in number of seconds since the epoch (January 1 1970 00:00:00 GMT).

        :param ts: The ts of this API401Response.
        :type ts: int
        """

        self._ts = ts
