/**
 * TransitFeeds API
 * API to view feed information and download feeds from TransitFeeds.com 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@transitfeeds.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFeedVersion_d.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFeedVersion_d::OAIFeedVersion_d(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFeedVersion_d::OAIFeedVersion_d() {
    this->initializeModel();
}

OAIFeedVersion_d::~OAIFeedVersion_d() {}

void OAIFeedVersion_d::initializeModel() {

    m_f_isSet = false;
    m_f_isValid = false;

    m_s_isSet = false;
    m_s_isValid = false;
}

void OAIFeedVersion_d::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFeedVersion_d::fromJsonObject(QJsonObject json) {

    m_f_isValid = ::OpenAPI::fromJsonValue(m_f, json[QString("f")]);
    m_f_isSet = !json[QString("f")].isNull() && m_f_isValid;

    m_s_isValid = ::OpenAPI::fromJsonValue(m_s, json[QString("s")]);
    m_s_isSet = !json[QString("s")].isNull() && m_s_isValid;
}

QString OAIFeedVersion_d::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFeedVersion_d::asJsonObject() const {
    QJsonObject obj;
    if (m_f_isSet) {
        obj.insert(QString("f"), ::OpenAPI::toJsonValue(m_f));
    }
    if (m_s_isSet) {
        obj.insert(QString("s"), ::OpenAPI::toJsonValue(m_s));
    }
    return obj;
}

QString OAIFeedVersion_d::getF() const {
    return m_f;
}
void OAIFeedVersion_d::setF(const QString &f) {
    m_f = f;
    m_f_isSet = true;
}

bool OAIFeedVersion_d::is_f_Set() const{
    return m_f_isSet;
}

bool OAIFeedVersion_d::is_f_Valid() const{
    return m_f_isValid;
}

QString OAIFeedVersion_d::getS() const {
    return m_s;
}
void OAIFeedVersion_d::setS(const QString &s) {
    m_s = s;
    m_s_isSet = true;
}

bool OAIFeedVersion_d::is_s_Set() const{
    return m_s_isSet;
}

bool OAIFeedVersion_d::is_s_Valid() const{
    return m_s_isValid;
}

bool OAIFeedVersion_d::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_f_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFeedVersion_d::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
