/**
 * TransitFeeds API
 * API to view feed information and download feeds from TransitFeeds.com 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@transitfeeds.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFeed_u.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFeed_u::OAIFeed_u(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFeed_u::OAIFeed_u() {
    this->initializeModel();
}

OAIFeed_u::~OAIFeed_u() {}

void OAIFeed_u::initializeModel() {

    m_d_isSet = false;
    m_d_isValid = false;

    m_i_isSet = false;
    m_i_isValid = false;
}

void OAIFeed_u::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFeed_u::fromJsonObject(QJsonObject json) {

    m_d_isValid = ::OpenAPI::fromJsonValue(m_d, json[QString("d")]);
    m_d_isSet = !json[QString("d")].isNull() && m_d_isValid;

    m_i_isValid = ::OpenAPI::fromJsonValue(m_i, json[QString("i")]);
    m_i_isSet = !json[QString("i")].isNull() && m_i_isValid;
}

QString OAIFeed_u::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFeed_u::asJsonObject() const {
    QJsonObject obj;
    if (m_d_isSet) {
        obj.insert(QString("d"), ::OpenAPI::toJsonValue(m_d));
    }
    if (m_i_isSet) {
        obj.insert(QString("i"), ::OpenAPI::toJsonValue(m_i));
    }
    return obj;
}

QString OAIFeed_u::getD() const {
    return m_d;
}
void OAIFeed_u::setD(const QString &d) {
    m_d = d;
    m_d_isSet = true;
}

bool OAIFeed_u::is_d_Set() const{
    return m_d_isSet;
}

bool OAIFeed_u::is_d_Valid() const{
    return m_d_isValid;
}

QString OAIFeed_u::getI() const {
    return m_i;
}
void OAIFeed_u::setI(const QString &i) {
    m_i = i;
    m_i_isSet = true;
}

bool OAIFeed_u::is_i_Set() const{
    return m_i_isSet;
}

bool OAIFeed_u::is_i_Valid() const{
    return m_i_isValid;
}

bool OAIFeed_u::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_d_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_i_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFeed_u::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
