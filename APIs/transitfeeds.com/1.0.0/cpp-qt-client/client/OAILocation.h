/**
 * TransitFeeds API
 * API to view feed information and download feeds from TransitFeeds.com 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@transitfeeds.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILocation.h
 *
 * Contains the information about a single location.
 */

#ifndef OAILocation_H
#define OAILocation_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILocation : public OAIObject {
public:
    OAILocation();
    OAILocation(QString json);
    ~OAILocation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    double getLat() const;
    void setLat(const double &lat);
    bool is_lat_Set() const;
    bool is_lat_Valid() const;

    double getLng() const;
    void setLng(const double &lng);
    bool is_lng_Set() const;
    bool is_lng_Valid() const;

    QString getN() const;
    void setN(const QString &n);
    bool is_n_Set() const;
    bool is_n_Valid() const;

    qint32 getPid() const;
    void setPid(const qint32 &pid);
    bool is_pid_Set() const;
    bool is_pid_Valid() const;

    QString getT() const;
    void setT(const QString &t);
    bool is_t_Set() const;
    bool is_t_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    double m_lat;
    bool m_lat_isSet;
    bool m_lat_isValid;

    double m_lng;
    bool m_lng_isSet;
    bool m_lng_isValid;

    QString m_n;
    bool m_n_isSet;
    bool m_n_isValid;

    qint32 m_pid;
    bool m_pid_isSet;
    bool m_pid_isValid;

    QString m_t;
    bool m_t_isSet;
    bool m_t_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILocation)

#endif // OAILocation_H
