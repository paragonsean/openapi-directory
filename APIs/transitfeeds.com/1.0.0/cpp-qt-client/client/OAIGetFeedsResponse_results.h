/**
 * TransitFeeds API
 * API to view feed information and download feeds from TransitFeeds.com 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@transitfeeds.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetFeedsResponse_results.h
 *
 * Contains requested data for a valid request.
 */

#ifndef OAIGetFeedsResponse_results_H
#define OAIGetFeedsResponse_results_H

#include <QJsonObject>

#include "OAIFeed.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFeed;

class OAIGetFeedsResponse_results : public OAIObject {
public:
    OAIGetFeedsResponse_results();
    OAIGetFeedsResponse_results(QString json);
    ~OAIGetFeedsResponse_results() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIFeed> getFeeds() const;
    void setFeeds(const QList<OAIFeed> &feeds);
    bool is_feeds_Set() const;
    bool is_feeds_Valid() const;

    QString getInput() const;
    void setInput(const QString &input);
    bool is_input_Set() const;
    bool is_input_Valid() const;

    qint32 getLimit() const;
    void setLimit(const qint32 &limit);
    bool is_limit_Set() const;
    bool is_limit_Valid() const;

    qint32 getNumPages() const;
    void setNumPages(const qint32 &num_pages);
    bool is_num_pages_Set() const;
    bool is_num_pages_Valid() const;

    qint32 getPage() const;
    void setPage(const qint32 &page);
    bool is_page_Set() const;
    bool is_page_Valid() const;

    qint32 getTotal() const;
    void setTotal(const qint32 &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIFeed> m_feeds;
    bool m_feeds_isSet;
    bool m_feeds_isValid;

    QString m_input;
    bool m_input_isSet;
    bool m_input_isValid;

    qint32 m_limit;
    bool m_limit_isSet;
    bool m_limit_isValid;

    qint32 m_num_pages;
    bool m_num_pages_isSet;
    bool m_num_pages_isValid;

    qint32 m_page;
    bool m_page_isSet;
    bool m_page_isValid;

    qint32 m_total;
    bool m_total_isSet;
    bool m_total_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetFeedsResponse_results)

#endif // OAIGetFeedsResponse_results_H
