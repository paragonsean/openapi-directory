/**
 * ShipEngine API
 * ShipEngine's easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.  Each of ShipEngine's features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.  ## Getting Started If you're new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics.  Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.  Here are some step-by-step **tutorials** to get you started:    - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)   - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)   - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)   - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)   ## Shipping Labels for Every Major Carrier ShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).   ## Real-Time Package Tracking With ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.   ## Compare Shipping Costs Across Carriers Make sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don't know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.   ## Worldwide Address Validation ShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others. 
 *
 * The version of the OpenAPI document: 1.1.202304191404
 * Contact: sales@shipengine.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ShipEngineApi);
  }
}(this, function(expect, ShipEngineApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ShipEngineApi.CreateLabelResponseBody();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CreateLabelResponseBody', function() {
    it('should create an instance of CreateLabelResponseBody', function() {
      // uncomment below and update the code to test CreateLabelResponseBody
      //var instance = new ShipEngineApi.CreateLabelResponseBody();
      //expect(instance).to.be.a(ShipEngineApi.CreateLabelResponseBody);
    });

    it('should have the property alternativeIdentifiers (base name: "alternative_identifiers")', function() {
      // uncomment below and update the code to test the property alternativeIdentifiers
      //var instance = new ShipEngineApi.CreateLabelResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property batchId (base name: "batch_id")', function() {
      // uncomment below and update the code to test the property batchId
      //var instance = new ShipEngineApi.CreateLabelResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property carrierCode (base name: "carrier_code")', function() {
      // uncomment below and update the code to test the property carrierCode
      //var instance = new ShipEngineApi.CreateLabelResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property carrierId (base name: "carrier_id")', function() {
      // uncomment below and update the code to test the property carrierId
      //var instance = new ShipEngineApi.CreateLabelResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property chargeEvent (base name: "charge_event")', function() {
      // uncomment below and update the code to test the property chargeEvent
      //var instance = new ShipEngineApi.CreateLabelResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new ShipEngineApi.CreateLabelResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property displayScheme (base name: "display_scheme")', function() {
      // uncomment below and update the code to test the property displayScheme
      //var instance = new ShipEngineApi.CreateLabelResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property formDownload (base name: "form_download")', function() {
      // uncomment below and update the code to test the property formDownload
      //var instance = new ShipEngineApi.CreateLabelResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property insuranceClaim (base name: "insurance_claim")', function() {
      // uncomment below and update the code to test the property insuranceClaim
      //var instance = new ShipEngineApi.CreateLabelResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property insuranceCost (base name: "insurance_cost")', function() {
      // uncomment below and update the code to test the property insuranceCost
      //var instance = new ShipEngineApi.CreateLabelResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property isInternational (base name: "is_international")', function() {
      // uncomment below and update the code to test the property isInternational
      //var instance = new ShipEngineApi.CreateLabelResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property isReturnLabel (base name: "is_return_label")', function() {
      // uncomment below and update the code to test the property isReturnLabel
      //var instance = new ShipEngineApi.CreateLabelResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property labelDownload (base name: "label_download")', function() {
      // uncomment below and update the code to test the property labelDownload
      //var instance = new ShipEngineApi.CreateLabelResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property labelDownloadType (base name: "label_download_type")', function() {
      // uncomment below and update the code to test the property labelDownloadType
      //var instance = new ShipEngineApi.CreateLabelResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property labelFormat (base name: "label_format")', function() {
      // uncomment below and update the code to test the property labelFormat
      //var instance = new ShipEngineApi.CreateLabelResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property labelId (base name: "label_id")', function() {
      // uncomment below and update the code to test the property labelId
      //var instance = new ShipEngineApi.CreateLabelResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property labelImageId (base name: "label_image_id")', function() {
      // uncomment below and update the code to test the property labelImageId
      //var instance = new ShipEngineApi.CreateLabelResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property labelLayout (base name: "label_layout")', function() {
      // uncomment below and update the code to test the property labelLayout
      //var instance = new ShipEngineApi.CreateLabelResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property outboundLabelId (base name: "outbound_label_id")', function() {
      // uncomment below and update the code to test the property outboundLabelId
      //var instance = new ShipEngineApi.CreateLabelResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property packageCode (base name: "package_code")', function() {
      // uncomment below and update the code to test the property packageCode
      //var instance = new ShipEngineApi.CreateLabelResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property packages (base name: "packages")', function() {
      // uncomment below and update the code to test the property packages
      //var instance = new ShipEngineApi.CreateLabelResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property rmaNumber (base name: "rma_number")', function() {
      // uncomment below and update the code to test the property rmaNumber
      //var instance = new ShipEngineApi.CreateLabelResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property serviceCode (base name: "service_code")', function() {
      // uncomment below and update the code to test the property serviceCode
      //var instance = new ShipEngineApi.CreateLabelResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property shipDate (base name: "ship_date")', function() {
      // uncomment below and update the code to test the property shipDate
      //var instance = new ShipEngineApi.CreateLabelResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property shipment (base name: "shipment")', function() {
      // uncomment below and update the code to test the property shipment
      //var instance = new ShipEngineApi.CreateLabelResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property shipmentCost (base name: "shipment_cost")', function() {
      // uncomment below and update the code to test the property shipmentCost
      //var instance = new ShipEngineApi.CreateLabelResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property shipmentId (base name: "shipment_id")', function() {
      // uncomment below and update the code to test the property shipmentId
      //var instance = new ShipEngineApi.CreateLabelResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new ShipEngineApi.CreateLabelResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property testLabel (base name: "test_label")', function() {
      // uncomment below and update the code to test the property testLabel
      //var instance = new ShipEngineApi.CreateLabelResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property trackable (base name: "trackable")', function() {
      // uncomment below and update the code to test the property trackable
      //var instance = new ShipEngineApi.CreateLabelResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property trackingNumber (base name: "tracking_number")', function() {
      // uncomment below and update the code to test the property trackingNumber
      //var instance = new ShipEngineApi.CreateLabelResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property trackingStatus (base name: "tracking_status")', function() {
      // uncomment below and update the code to test the property trackingStatus
      //var instance = new ShipEngineApi.CreateLabelResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property validateAddress (base name: "validate_address")', function() {
      // uncomment below and update the code to test the property validateAddress
      //var instance = new ShipEngineApi.CreateLabelResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property voided (base name: "voided")', function() {
      // uncomment below and update the code to test the property voided
      //var instance = new ShipEngineApi.CreateLabelResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property voidedAt (base name: "voided_at")', function() {
      // uncomment below and update the code to test the property voidedAt
      //var instance = new ShipEngineApi.CreateLabelResponseBody();
      //expect(instance).to.be();
    });

  });

}));
