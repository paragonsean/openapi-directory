/**
 * ShipEngine API
 * ShipEngine's easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.  Each of ShipEngine's features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.  ## Getting Started If you're new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics.  Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.  Here are some step-by-step **tutorials** to get you started:    - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)   - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)   - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)   - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)   ## Shipping Labels for Every Major Carrier ShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).   ## Real-Time Package Tracking With ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.   ## Compare Shipping Costs Across Carriers Make sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don't know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.   ## Worldwide Address Validation ShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others. 
 *
 * The version of the OpenAPI document: 1.1.202304191404
 * Contact: sales@shipengine.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ShipEngineApi);
  }
}(this, function(expect, ShipEngineApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ShipEngineApi.UpdateCarrierSettingsRequestBody();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UpdateCarrierSettingsRequestBody', function() {
    it('should create an instance of UpdateCarrierSettingsRequestBody', function() {
      // uncomment below and update the code to test UpdateCarrierSettingsRequestBody
      //var instance = new ShipEngineApi.UpdateCarrierSettingsRequestBody();
      //expect(instance).to.be.a(ShipEngineApi.UpdateCarrierSettingsRequestBody);
    });

    it('should have the property isPrimaryAccount (base name: "is_primary_account")', function() {
      // uncomment below and update the code to test the property isPrimaryAccount
      //var instance = new ShipEngineApi.UpdateCarrierSettingsRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property nickname (base name: "nickname")', function() {
      // uncomment below and update the code to test the property nickname
      //var instance = new ShipEngineApi.UpdateCarrierSettingsRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property shouldHideAccountNumberOnArchiveDoc (base name: "should_hide_account_number_on_archive_doc")', function() {
      // uncomment below and update the code to test the property shouldHideAccountNumberOnArchiveDoc
      //var instance = new ShipEngineApi.UpdateCarrierSettingsRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property letterheadImage (base name: "letterhead_image")', function() {
      // uncomment below and update the code to test the property letterheadImage
      //var instance = new ShipEngineApi.UpdateCarrierSettingsRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property pickupType (base name: "pickup_type")', function() {
      // uncomment below and update the code to test the property pickupType
      //var instance = new ShipEngineApi.UpdateCarrierSettingsRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property signatureImage (base name: "signature_image")', function() {
      // uncomment below and update the code to test the property signatureImage
      //var instance = new ShipEngineApi.UpdateCarrierSettingsRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property smartPostEndorsement (base name: "smart_post_endorsement")', function() {
      // uncomment below and update the code to test the property smartPostEndorsement
      //var instance = new ShipEngineApi.UpdateCarrierSettingsRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property smartPostHub (base name: "smart_post_hub")', function() {
      // uncomment below and update the code to test the property smartPostHub
      //var instance = new ShipEngineApi.UpdateCarrierSettingsRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property includeBarcodeWithOrderNumber (base name: "include_barcode_with_order_number")', function() {
      // uncomment below and update the code to test the property includeBarcodeWithOrderNumber
      //var instance = new ShipEngineApi.UpdateCarrierSettingsRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property receiveEmailOnManifestProcessing (base name: "receive_email_on_manifest_processing")', function() {
      // uncomment below and update the code to test the property receiveEmailOnManifestProcessing
      //var instance = new ShipEngineApi.UpdateCarrierSettingsRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property accountPostalCode (base name: "account_postal_code")', function() {
      // uncomment below and update the code to test the property accountPostalCode
      //var instance = new ShipEngineApi.UpdateCarrierSettingsRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property invoice (base name: "invoice")', function() {
      // uncomment below and update the code to test the property invoice
      //var instance = new ShipEngineApi.UpdateCarrierSettingsRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property mailInnovationsCostCenter (base name: "mail_innovations_cost_center")', function() {
      // uncomment below and update the code to test the property mailInnovationsCostCenter
      //var instance = new ShipEngineApi.UpdateCarrierSettingsRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property mailInnovationsEndorsement (base name: "mail_innovations_endorsement")', function() {
      // uncomment below and update the code to test the property mailInnovationsEndorsement
      //var instance = new ShipEngineApi.UpdateCarrierSettingsRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property useCarbonNeutralShippingProgram (base name: "use_carbon_neutral_shipping_program")', function() {
      // uncomment below and update the code to test the property useCarbonNeutralShippingProgram
      //var instance = new ShipEngineApi.UpdateCarrierSettingsRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property useConsolidationServices (base name: "use_consolidation_services")', function() {
      // uncomment below and update the code to test the property useConsolidationServices
      //var instance = new ShipEngineApi.UpdateCarrierSettingsRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property useGroundFreightPricing (base name: "use_ground_freight_pricing")', function() {
      // uncomment below and update the code to test the property useGroundFreightPricing
      //var instance = new ShipEngineApi.UpdateCarrierSettingsRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property useNegotiatedRates (base name: "use_negotiated_rates")', function() {
      // uncomment below and update the code to test the property useNegotiatedRates
      //var instance = new ShipEngineApi.UpdateCarrierSettingsRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property useOrderNumberOnMailInnovationsLabels (base name: "use_order_number_on_mail_innovations_labels")', function() {
      // uncomment below and update the code to test the property useOrderNumberOnMailInnovationsLabels
      //var instance = new ShipEngineApi.UpdateCarrierSettingsRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new ShipEngineApi.UpdateCarrierSettingsRequestBody();
      //expect(instance).to.be();
    });

  });

}));
