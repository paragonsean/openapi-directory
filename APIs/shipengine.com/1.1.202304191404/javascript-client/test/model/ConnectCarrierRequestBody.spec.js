/**
 * ShipEngine API
 * ShipEngine's easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.  Each of ShipEngine's features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.  ## Getting Started If you're new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics.  Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.  Here are some step-by-step **tutorials** to get you started:    - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)   - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)   - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)   - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)   ## Shipping Labels for Every Major Carrier ShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).   ## Real-Time Package Tracking With ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.   ## Compare Shipping Costs Across Carriers Make sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don't know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.   ## Worldwide Address Validation ShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others. 
 *
 * The version of the OpenAPI document: 1.1.202304191404
 * Contact: sales@shipengine.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ShipEngineApi);
  }
}(this, function(expect, ShipEngineApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ShipEngineApi.ConnectCarrierRequestBody();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ConnectCarrierRequestBody', function() {
    it('should create an instance of ConnectCarrierRequestBody', function() {
      // uncomment below and update the code to test ConnectCarrierRequestBody
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be.a(ShipEngineApi.ConnectCarrierRequestBody);
    });

    it('should have the property nickname (base name: "nickname")', function() {
      // uncomment below and update the code to test the property nickname
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property password (base name: "password")', function() {
      // uncomment below and update the code to test the property password
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property username (base name: "username")', function() {
      // uncomment below and update the code to test the property username
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property merchantSellerId (base name: "merchant_seller_id")', function() {
      // uncomment below and update the code to test the property merchantSellerId
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property mwsAuthToken (base name: "mws_auth_token")', function() {
      // uncomment below and update the code to test the property mwsAuthToken
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property authCode (base name: "auth_code")', function() {
      // uncomment below and update the code to test the property authCode
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property accountNumber (base name: "account_number")', function() {
      // uncomment below and update the code to test the property accountNumber
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property ftpPassword (base name: "ftp_password")', function() {
      // uncomment below and update the code to test the property ftpPassword
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property ftpUsername (base name: "ftp_username")', function() {
      // uncomment below and update the code to test the property ftpUsername
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property apiKey (base name: "api_key")', function() {
      // uncomment below and update the code to test the property apiKey
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property apiSecret (base name: "api_secret")', function() {
      // uncomment below and update the code to test the property apiSecret
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property contractId (base name: "contract_id")', function() {
      // uncomment below and update the code to test the property contractId
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property ancillaryEndorsement (base name: "ancillary_endorsement")', function() {
      // uncomment below and update the code to test the property ancillaryEndorsement
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property clientId (base name: "client_id")', function() {
      // uncomment below and update the code to test the property clientId
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property distributionCenter (base name: "distribution_center")', function() {
      // uncomment below and update the code to test the property distributionCenter
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property pickupNumber (base name: "pickup_number")', function() {
      // uncomment below and update the code to test the property pickupNumber
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property registrationId (base name: "registration_id")', function() {
      // uncomment below and update the code to test the property registrationId
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property softwareName (base name: "software_name")', function() {
      // uncomment below and update the code to test the property softwareName
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property soldTo (base name: "sold_to")', function() {
      // uncomment below and update the code to test the property soldTo
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property countryCode (base name: "country_code")', function() {
      // uncomment below and update the code to test the property countryCode
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property siteId (base name: "site_id")', function() {
      // uncomment below and update the code to test the property siteId
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property account (base name: "account")', function() {
      // uncomment below and update the code to test the property account
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property passphrase (base name: "passphrase")', function() {
      // uncomment below and update the code to test the property passphrase
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property address1 (base name: "address1")', function() {
      // uncomment below and update the code to test the property address1
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property address2 (base name: "address2")', function() {
      // uncomment below and update the code to test the property address2
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property agreeToEula (base name: "agree_to_eula")', function() {
      // uncomment below and update the code to test the property agreeToEula
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property city (base name: "city")', function() {
      // uncomment below and update the code to test the property city
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property company (base name: "company")', function() {
      // uncomment below and update the code to test the property company
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property firstName (base name: "first_name")', function() {
      // uncomment below and update the code to test the property firstName
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property lastName (base name: "last_name")', function() {
      // uncomment below and update the code to test the property lastName
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property meterNumber (base name: "meter_number")', function() {
      // uncomment below and update the code to test the property meterNumber
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property phone (base name: "phone")', function() {
      // uncomment below and update the code to test the property phone
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property postalCode (base name: "postal_code")', function() {
      // uncomment below and update the code to test the property postalCode
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property mailerId (base name: "mailer_id")', function() {
      // uncomment below and update the code to test the property mailerId
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property profileName (base name: "profile_name")', function() {
      // uncomment below and update the code to test the property profileName
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property inductionSite (base name: "induction_site")', function() {
      // uncomment below and update the code to test the property inductionSite
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property merchantId (base name: "merchant_id")', function() {
      // uncomment below and update the code to test the property merchantId
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property activationKey (base name: "activation_key")', function() {
      // uncomment below and update the code to test the property activationKey
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property companyName (base name: "company_name")', function() {
      // uncomment below and update the code to test the property companyName
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property contactName (base name: "contact_name")', function() {
      // uncomment below and update the code to test the property contactName
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property obaEmail (base name: "oba_email")', function() {
      // uncomment below and update the code to test the property obaEmail
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property streetLine1 (base name: "street_line1")', function() {
      // uncomment below and update the code to test the property streetLine1
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property streetLine2 (base name: "street_line2")', function() {
      // uncomment below and update the code to test the property streetLine2
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property streetLine3 (base name: "street_line3")', function() {
      // uncomment below and update the code to test the property streetLine3
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property accessKey (base name: "access_key")', function() {
      // uncomment below and update the code to test the property accessKey
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property sendleId (base name: "sendle_id")', function() {
      // uncomment below and update the code to test the property sendleId
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property accountCountryCode (base name: "account_country_code")', function() {
      // uncomment below and update the code to test the property accountCountryCode
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property accountPostalCode (base name: "account_postal_code")', function() {
      // uncomment below and update the code to test the property accountPostalCode
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property agreeToTechnologyAgreement (base name: "agree_to_technology_agreement")', function() {
      // uncomment below and update the code to test the property agreeToTechnologyAgreement
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property invoice (base name: "invoice")', function() {
      // uncomment below and update the code to test the property invoice
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property invoiceAmount (base name: "invoice_amount")', function() {
      // uncomment below and update the code to test the property invoiceAmount
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property invoiceCurrencyCode (base name: "invoice_currency_code")', function() {
      // uncomment below and update the code to test the property invoiceCurrencyCode
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new ShipEngineApi.ConnectCarrierRequestBody();
      //expect(instance).to.be();
    });

  });

}));
