/**
 * ShipEngine API
 * ShipEngine's easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.  Each of ShipEngine's features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.  ## Getting Started If you're new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics.  Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.  Here are some step-by-step **tutorials** to get you started:    - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)   - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)   - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)   - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)   ## Shipping Labels for Every Major Carrier ShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).   ## Real-Time Package Tracking With ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.   ## Compare Shipping Costs Across Carriers Make sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don't know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.   ## Worldwide Address Validation ShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others. 
 *
 * The version of the OpenAPI document: 1.1.202304191404
 * Contact: sales@shipengine.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ShipEngineApi);
  }
}(this, function(expect, ShipEngineApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ShipEngineApi.SchedulePickupResponseBody();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SchedulePickupResponseBody', function() {
    it('should create an instance of SchedulePickupResponseBody', function() {
      // uncomment below and update the code to test SchedulePickupResponseBody
      //var instance = new ShipEngineApi.SchedulePickupResponseBody();
      //expect(instance).to.be.a(ShipEngineApi.SchedulePickupResponseBody);
    });

    it('should have the property cancelledAt (base name: "cancelled_at")', function() {
      // uncomment below and update the code to test the property cancelledAt
      //var instance = new ShipEngineApi.SchedulePickupResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property carrierId (base name: "carrier_id")', function() {
      // uncomment below and update the code to test the property carrierId
      //var instance = new ShipEngineApi.SchedulePickupResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property confirmationNumber (base name: "confirmation_number")', function() {
      // uncomment below and update the code to test the property confirmationNumber
      //var instance = new ShipEngineApi.SchedulePickupResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property contactDetails (base name: "contact_details")', function() {
      // uncomment below and update the code to test the property contactDetails
      //var instance = new ShipEngineApi.SchedulePickupResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new ShipEngineApi.SchedulePickupResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property labelIds (base name: "label_ids")', function() {
      // uncomment below and update the code to test the property labelIds
      //var instance = new ShipEngineApi.SchedulePickupResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property pickupAddress (base name: "pickup_address")', function() {
      // uncomment below and update the code to test the property pickupAddress
      //var instance = new ShipEngineApi.SchedulePickupResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property pickupId (base name: "pickup_id")', function() {
      // uncomment below and update the code to test the property pickupId
      //var instance = new ShipEngineApi.SchedulePickupResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property pickupNotes (base name: "pickup_notes")', function() {
      // uncomment below and update the code to test the property pickupNotes
      //var instance = new ShipEngineApi.SchedulePickupResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property pickupWindow (base name: "pickup_window")', function() {
      // uncomment below and update the code to test the property pickupWindow
      //var instance = new ShipEngineApi.SchedulePickupResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property pickupWindows (base name: "pickup_windows")', function() {
      // uncomment below and update the code to test the property pickupWindows
      //var instance = new ShipEngineApi.SchedulePickupResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property warehouseId (base name: "warehouse_id")', function() {
      // uncomment below and update the code to test the property warehouseId
      //var instance = new ShipEngineApi.SchedulePickupResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property errors (base name: "errors")', function() {
      // uncomment below and update the code to test the property errors
      //var instance = new ShipEngineApi.SchedulePickupResponseBody();
      //expect(instance).to.be();
    });

    it('should have the property requestId (base name: "request_id")', function() {
      // uncomment below and update the code to test the property requestId
      //var instance = new ShipEngineApi.SchedulePickupResponseBody();
      //expect(instance).to.be();
    });

  });

}));
