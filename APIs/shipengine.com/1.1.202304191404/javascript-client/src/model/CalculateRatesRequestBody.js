/**
 * ShipEngine API
 * ShipEngine's easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.  Each of ShipEngine's features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.  ## Getting Started If you're new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics.  Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.  Here are some step-by-step **tutorials** to get you started:    - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)   - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)   - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)   - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)   ## Shipping Labels for Every Major Carrier ShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).   ## Real-Time Package Tracking With ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.   ## Compare Shipping Costs Across Carriers Make sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don't know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.   ## Worldwide Address Validation ShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others. 
 *
 * The version of the OpenAPI document: 1.1.202304191404
 * Contact: sales@shipengine.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RateRequestBody from './RateRequestBody';
import RateRequestOptions from './RateRequestOptions';

/**
 * The CalculateRatesRequestBody model module.
 * @module model/CalculateRatesRequestBody
 * @version 1.1.202304191404
 */
class CalculateRatesRequestBody {
    /**
     * Constructs a new <code>CalculateRatesRequestBody</code>.
     * A rate shipment request body
     * @alias module:model/CalculateRatesRequestBody
     * @param {(module:model/RateRequestOptions)} instance The actual instance to initialize CalculateRatesRequestBody.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "ShipmentIdRequest") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ShipmentIdRequest.validateJSON(instance); // throw an exception if no match
                // create ShipmentIdRequest from JS object
                this.actualInstance = ShipmentIdRequest.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ShipmentIdRequest
            errorMessages.push("Failed to construct ShipmentIdRequest: " + err)
        }

        try {
            if (typeof instance === "ShipmentRequest") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ShipmentRequest.validateJSON(instance); // throw an exception if no match
                // create ShipmentRequest from JS object
                this.actualInstance = ShipmentRequest.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ShipmentRequest
            errorMessages.push("Failed to construct ShipmentRequest: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `CalculateRatesRequestBody` with oneOf schemas RateRequestOptions. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `CalculateRatesRequestBody` with oneOf schemas RateRequestOptions. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>CalculateRatesRequestBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CalculateRatesRequestBody} obj Optional instance to populate.
     * @return {module:model/CalculateRatesRequestBody} The populated <code>CalculateRatesRequestBody</code> instance.
     */
    static constructFromObject(data, obj) {
        return new CalculateRatesRequestBody(data);
    }

    /**
     * Gets the actual instance, which can be <code>RateRequestOptions</code>.
     * @return {(module:model/RateRequestOptions)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>RateRequestOptions</code>.
     * @param {(module:model/RateRequestOptions)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = CalculateRatesRequestBody.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of CalculateRatesRequestBody from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/CalculateRatesRequestBody} An instance of CalculateRatesRequestBody.
     */
    static fromJSON = function(json_string){
        return CalculateRatesRequestBody.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * The rate options
 * @member {module:model/RateRequestBody} rate_options
 */
CalculateRatesRequestBody.prototype['rate_options'] = undefined;


CalculateRatesRequestBody.OneOf = ["RateRequestOptions"];

export default CalculateRatesRequestBody;

