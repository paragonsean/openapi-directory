/*
 * ShipEngine API
 * ShipEngine's easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.  Each of ShipEngine's features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.  ## Getting Started If you're new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics.  Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.  Here are some step-by-step **tutorials** to get you started:    - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)   - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)   - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)   - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)   ## Shipping Labels for Every Major Carrier ShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).   ## Real-Time Package Tracking With ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.   ## Compare Shipping Costs Across Carriers Make sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don't know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.   ## Worldwide Address Validation ShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others. 
 *
 * The version of the OpenAPI document: 1.1.202304191404
 * Contact: sales@shipengine.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GetServicePointByIdResponseBodyServicePointHoursOfOperation;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ListServicePointsResponseBodyServicePointsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:20:16.939652-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ListServicePointsResponseBodyServicePointsInner {
  public static final String SERIALIZED_NAME_ADDRESS_LINE1 = "address_line1";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE1)
  private String addressLine1;

  public static final String SERIALIZED_NAME_CARRIER_CODE = "carrier_code";
  @SerializedName(SERIALIZED_NAME_CARRIER_CODE)
  private String carrierCode;

  public static final String SERIALIZED_NAME_CITY_LOCALITY = "city_locality";
  @SerializedName(SERIALIZED_NAME_CITY_LOCALITY)
  private String cityLocality;

  public static final String SERIALIZED_NAME_COMPANY_NAME = "company_name";
  @SerializedName(SERIALIZED_NAME_COMPANY_NAME)
  private String companyName;

  public static final String SERIALIZED_NAME_COUNTRY_CODE = "country_code";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CODE)
  private String countryCode;

  public static final String SERIALIZED_NAME_DISTANCE_IN_METERS = "distance_in_meters";
  @SerializedName(SERIALIZED_NAME_DISTANCE_IN_METERS)
  private Double distanceInMeters;

  /**
   * Gets or Sets features
   */
  @JsonAdapter(FeaturesEnum.Adapter.class)
  public enum FeaturesEnum {
    DROP_OFF_POINT("drop_off_point"),
    
    PICKUP_POINT("pickup_point"),
    
    PRINT_SERVICES("print_services"),
    
    AFTER_HOURS_LOCKER("after_hours_locker"),
    
    AFTER_HOURS_DROPBOX("after_hours_dropbox");

    private String value;

    FeaturesEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FeaturesEnum fromValue(String value) {
      for (FeaturesEnum b : FeaturesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<FeaturesEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FeaturesEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FeaturesEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return FeaturesEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      FeaturesEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_FEATURES = "features";
  @SerializedName(SERIALIZED_NAME_FEATURES)
  private List<FeaturesEnum> features = new ArrayList<>();

  public static final String SERIALIZED_NAME_HOURS_OF_OPERATION = "hours_of_operation";
  @SerializedName(SERIALIZED_NAME_HOURS_OF_OPERATION)
  private GetServicePointByIdResponseBodyServicePointHoursOfOperation hoursOfOperation;

  public static final String SERIALIZED_NAME_LAT = "lat";
  @SerializedName(SERIALIZED_NAME_LAT)
  private Double lat;

  public static final String SERIALIZED_NAME_LONG = "long";
  @SerializedName(SERIALIZED_NAME_LONG)
  private Double _long;

  public static final String SERIALIZED_NAME_PHONE_NUMBER = "phone_number";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER)
  private String phoneNumber;

  public static final String SERIALIZED_NAME_POSTAL_CODE = "postal_code";
  @SerializedName(SERIALIZED_NAME_POSTAL_CODE)
  private String postalCode;

  public static final String SERIALIZED_NAME_SERVICE_CODES = "service_codes";
  @SerializedName(SERIALIZED_NAME_SERVICE_CODES)
  private List<String> serviceCodes = new ArrayList<>();

  public static final String SERIALIZED_NAME_SERVICE_POINT_ID = "service_point_id";
  @SerializedName(SERIALIZED_NAME_SERVICE_POINT_ID)
  private String servicePointId;

  public static final String SERIALIZED_NAME_STATE_PROVINCE = "state_province";
  @SerializedName(SERIALIZED_NAME_STATE_PROVINCE)
  private String stateProvince;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    PUDO("pudo"),
    
    LOCKER("locker");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type = TypeEnum.PUDO;

  public ListServicePointsResponseBodyServicePointsInner() {
  }

  public ListServicePointsResponseBodyServicePointsInner addressLine1(String addressLine1) {
    this.addressLine1 = addressLine1;
    return this;
  }

  /**
   * Get addressLine1
   * @return addressLine1
   */
  @javax.annotation.Nullable
  public String getAddressLine1() {
    return addressLine1;
  }

  public void setAddressLine1(String addressLine1) {
    this.addressLine1 = addressLine1;
  }


  public ListServicePointsResponseBodyServicePointsInner carrierCode(String carrierCode) {
    this.carrierCode = carrierCode;
    return this;
  }

  /**
   * Get carrierCode
   * @return carrierCode
   */
  @javax.annotation.Nullable
  public String getCarrierCode() {
    return carrierCode;
  }

  public void setCarrierCode(String carrierCode) {
    this.carrierCode = carrierCode;
  }


  public ListServicePointsResponseBodyServicePointsInner cityLocality(String cityLocality) {
    this.cityLocality = cityLocality;
    return this;
  }

  /**
   * Get cityLocality
   * @return cityLocality
   */
  @javax.annotation.Nullable
  public String getCityLocality() {
    return cityLocality;
  }

  public void setCityLocality(String cityLocality) {
    this.cityLocality = cityLocality;
  }


  public ListServicePointsResponseBodyServicePointsInner companyName(String companyName) {
    this.companyName = companyName;
    return this;
  }

  /**
   * Get companyName
   * @return companyName
   */
  @javax.annotation.Nullable
  public String getCompanyName() {
    return companyName;
  }

  public void setCompanyName(String companyName) {
    this.companyName = companyName;
  }


  public ListServicePointsResponseBodyServicePointsInner countryCode(String countryCode) {
    this.countryCode = countryCode;
    return this;
  }

  /**
   * Get countryCode
   * @return countryCode
   */
  @javax.annotation.Nullable
  public String getCountryCode() {
    return countryCode;
  }

  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }


  public ListServicePointsResponseBodyServicePointsInner distanceInMeters(Double distanceInMeters) {
    this.distanceInMeters = distanceInMeters;
    return this;
  }

  /**
   * Get distanceInMeters
   * @return distanceInMeters
   */
  @javax.annotation.Nullable
  public Double getDistanceInMeters() {
    return distanceInMeters;
  }

  public void setDistanceInMeters(Double distanceInMeters) {
    this.distanceInMeters = distanceInMeters;
  }


  public ListServicePointsResponseBodyServicePointsInner features(List<FeaturesEnum> features) {
    this.features = features;
    return this;
  }

  public ListServicePointsResponseBodyServicePointsInner addFeaturesItem(FeaturesEnum featuresItem) {
    if (this.features == null) {
      this.features = new ArrayList<>();
    }
    this.features.add(featuresItem);
    return this;
  }

  /**
   * Get features
   * @return features
   */
  @javax.annotation.Nullable
  public List<FeaturesEnum> getFeatures() {
    return features;
  }

  public void setFeatures(List<FeaturesEnum> features) {
    this.features = features;
  }


  public ListServicePointsResponseBodyServicePointsInner hoursOfOperation(GetServicePointByIdResponseBodyServicePointHoursOfOperation hoursOfOperation) {
    this.hoursOfOperation = hoursOfOperation;
    return this;
  }

  /**
   * Get hoursOfOperation
   * @return hoursOfOperation
   */
  @javax.annotation.Nullable
  public GetServicePointByIdResponseBodyServicePointHoursOfOperation getHoursOfOperation() {
    return hoursOfOperation;
  }

  public void setHoursOfOperation(GetServicePointByIdResponseBodyServicePointHoursOfOperation hoursOfOperation) {
    this.hoursOfOperation = hoursOfOperation;
  }


  public ListServicePointsResponseBodyServicePointsInner lat(Double lat) {
    this.lat = lat;
    return this;
  }

  /**
   * Get lat
   * @return lat
   */
  @javax.annotation.Nullable
  public Double getLat() {
    return lat;
  }

  public void setLat(Double lat) {
    this.lat = lat;
  }


  public ListServicePointsResponseBodyServicePointsInner _long(Double _long) {
    this._long = _long;
    return this;
  }

  /**
   * Get _long
   * @return _long
   */
  @javax.annotation.Nullable
  public Double getLong() {
    return _long;
  }

  public void setLong(Double _long) {
    this._long = _long;
  }


  public ListServicePointsResponseBodyServicePointsInner phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

  /**
   * Get phoneNumber
   * @return phoneNumber
   */
  @javax.annotation.Nullable
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public ListServicePointsResponseBodyServicePointsInner postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

  /**
   * Get postalCode
   * @return postalCode
   */
  @javax.annotation.Nullable
  public String getPostalCode() {
    return postalCode;
  }

  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }


  public ListServicePointsResponseBodyServicePointsInner serviceCodes(List<String> serviceCodes) {
    this.serviceCodes = serviceCodes;
    return this;
  }

  public ListServicePointsResponseBodyServicePointsInner addServiceCodesItem(String serviceCodesItem) {
    if (this.serviceCodes == null) {
      this.serviceCodes = new ArrayList<>();
    }
    this.serviceCodes.add(serviceCodesItem);
    return this;
  }

  /**
   * Get serviceCodes
   * @return serviceCodes
   */
  @javax.annotation.Nullable
  public List<String> getServiceCodes() {
    return serviceCodes;
  }

  public void setServiceCodes(List<String> serviceCodes) {
    this.serviceCodes = serviceCodes;
  }


  public ListServicePointsResponseBodyServicePointsInner servicePointId(String servicePointId) {
    this.servicePointId = servicePointId;
    return this;
  }

  /**
   * Get servicePointId
   * @return servicePointId
   */
  @javax.annotation.Nullable
  public String getServicePointId() {
    return servicePointId;
  }

  public void setServicePointId(String servicePointId) {
    this.servicePointId = servicePointId;
  }


  public ListServicePointsResponseBodyServicePointsInner stateProvince(String stateProvince) {
    this.stateProvince = stateProvince;
    return this;
  }

  /**
   * Get stateProvince
   * @return stateProvince
   */
  @javax.annotation.Nullable
  public String getStateProvince() {
    return stateProvince;
  }

  public void setStateProvince(String stateProvince) {
    this.stateProvince = stateProvince;
  }


  public ListServicePointsResponseBodyServicePointsInner type(TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListServicePointsResponseBodyServicePointsInner listServicePointsResponseBodyServicePointsInner = (ListServicePointsResponseBodyServicePointsInner) o;
    return Objects.equals(this.addressLine1, listServicePointsResponseBodyServicePointsInner.addressLine1) &&
        Objects.equals(this.carrierCode, listServicePointsResponseBodyServicePointsInner.carrierCode) &&
        Objects.equals(this.cityLocality, listServicePointsResponseBodyServicePointsInner.cityLocality) &&
        Objects.equals(this.companyName, listServicePointsResponseBodyServicePointsInner.companyName) &&
        Objects.equals(this.countryCode, listServicePointsResponseBodyServicePointsInner.countryCode) &&
        Objects.equals(this.distanceInMeters, listServicePointsResponseBodyServicePointsInner.distanceInMeters) &&
        Objects.equals(this.features, listServicePointsResponseBodyServicePointsInner.features) &&
        Objects.equals(this.hoursOfOperation, listServicePointsResponseBodyServicePointsInner.hoursOfOperation) &&
        Objects.equals(this.lat, listServicePointsResponseBodyServicePointsInner.lat) &&
        Objects.equals(this._long, listServicePointsResponseBodyServicePointsInner._long) &&
        Objects.equals(this.phoneNumber, listServicePointsResponseBodyServicePointsInner.phoneNumber) &&
        Objects.equals(this.postalCode, listServicePointsResponseBodyServicePointsInner.postalCode) &&
        Objects.equals(this.serviceCodes, listServicePointsResponseBodyServicePointsInner.serviceCodes) &&
        Objects.equals(this.servicePointId, listServicePointsResponseBodyServicePointsInner.servicePointId) &&
        Objects.equals(this.stateProvince, listServicePointsResponseBodyServicePointsInner.stateProvince) &&
        Objects.equals(this.type, listServicePointsResponseBodyServicePointsInner.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addressLine1, carrierCode, cityLocality, companyName, countryCode, distanceInMeters, features, hoursOfOperation, lat, _long, phoneNumber, postalCode, serviceCodes, servicePointId, stateProvince, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListServicePointsResponseBodyServicePointsInner {\n");
    sb.append("    addressLine1: ").append(toIndentedString(addressLine1)).append("\n");
    sb.append("    carrierCode: ").append(toIndentedString(carrierCode)).append("\n");
    sb.append("    cityLocality: ").append(toIndentedString(cityLocality)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    distanceInMeters: ").append(toIndentedString(distanceInMeters)).append("\n");
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("    hoursOfOperation: ").append(toIndentedString(hoursOfOperation)).append("\n");
    sb.append("    lat: ").append(toIndentedString(lat)).append("\n");
    sb.append("    _long: ").append(toIndentedString(_long)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    serviceCodes: ").append(toIndentedString(serviceCodes)).append("\n");
    sb.append("    servicePointId: ").append(toIndentedString(servicePointId)).append("\n");
    sb.append("    stateProvince: ").append(toIndentedString(stateProvince)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("address_line1");
    openapiFields.add("carrier_code");
    openapiFields.add("city_locality");
    openapiFields.add("company_name");
    openapiFields.add("country_code");
    openapiFields.add("distance_in_meters");
    openapiFields.add("features");
    openapiFields.add("hours_of_operation");
    openapiFields.add("lat");
    openapiFields.add("long");
    openapiFields.add("phone_number");
    openapiFields.add("postal_code");
    openapiFields.add("service_codes");
    openapiFields.add("service_point_id");
    openapiFields.add("state_province");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ListServicePointsResponseBodyServicePointsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ListServicePointsResponseBodyServicePointsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ListServicePointsResponseBodyServicePointsInner is not found in the empty JSON string", ListServicePointsResponseBodyServicePointsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ListServicePointsResponseBodyServicePointsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ListServicePointsResponseBodyServicePointsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("address_line1") != null && !jsonObj.get("address_line1").isJsonNull()) && !jsonObj.get("address_line1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address_line1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address_line1").toString()));
      }
      if ((jsonObj.get("carrier_code") != null && !jsonObj.get("carrier_code").isJsonNull()) && !jsonObj.get("carrier_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carrier_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carrier_code").toString()));
      }
      if ((jsonObj.get("city_locality") != null && !jsonObj.get("city_locality").isJsonNull()) && !jsonObj.get("city_locality").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city_locality` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city_locality").toString()));
      }
      if ((jsonObj.get("company_name") != null && !jsonObj.get("company_name").isJsonNull()) && !jsonObj.get("company_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `company_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("company_name").toString()));
      }
      if ((jsonObj.get("country_code") != null && !jsonObj.get("country_code").isJsonNull()) && !jsonObj.get("country_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country_code").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("features") != null && !jsonObj.get("features").isJsonNull() && !jsonObj.get("features").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `features` to be an array in the JSON string but got `%s`", jsonObj.get("features").toString()));
      }
      // validate the optional field `hours_of_operation`
      if (jsonObj.get("hours_of_operation") != null && !jsonObj.get("hours_of_operation").isJsonNull()) {
        GetServicePointByIdResponseBodyServicePointHoursOfOperation.validateJsonElement(jsonObj.get("hours_of_operation"));
      }
      if ((jsonObj.get("phone_number") != null && !jsonObj.get("phone_number").isJsonNull()) && !jsonObj.get("phone_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone_number").toString()));
      }
      if ((jsonObj.get("postal_code") != null && !jsonObj.get("postal_code").isJsonNull()) && !jsonObj.get("postal_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postal_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postal_code").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("service_codes") != null && !jsonObj.get("service_codes").isJsonNull() && !jsonObj.get("service_codes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `service_codes` to be an array in the JSON string but got `%s`", jsonObj.get("service_codes").toString()));
      }
      if ((jsonObj.get("service_point_id") != null && !jsonObj.get("service_point_id").isJsonNull()) && !jsonObj.get("service_point_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `service_point_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("service_point_id").toString()));
      }
      if ((jsonObj.get("state_province") != null && !jsonObj.get("state_province").isJsonNull()) && !jsonObj.get("state_province").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state_province` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state_province").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      // validate the optional field `type`
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) {
        TypeEnum.validateJsonElement(jsonObj.get("type"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ListServicePointsResponseBodyServicePointsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ListServicePointsResponseBodyServicePointsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ListServicePointsResponseBodyServicePointsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ListServicePointsResponseBodyServicePointsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ListServicePointsResponseBodyServicePointsInner>() {
           @Override
           public void write(JsonWriter out, ListServicePointsResponseBodyServicePointsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ListServicePointsResponseBodyServicePointsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ListServicePointsResponseBodyServicePointsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ListServicePointsResponseBodyServicePointsInner
   * @throws IOException if the JSON string is invalid with respect to ListServicePointsResponseBodyServicePointsInner
   */
  public static ListServicePointsResponseBodyServicePointsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ListServicePointsResponseBodyServicePointsInner.class);
  }

  /**
   * Convert an instance of ListServicePointsResponseBodyServicePointsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

