/*
 * ShipEngine API
 * ShipEngine's easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.  Each of ShipEngine's features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.  ## Getting Started If you're new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics.  Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.  Here are some step-by-step **tutorials** to get you started:    - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)   - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)   - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)   - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)   ## Shipping Labels for Every Major Carrier ShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).   ## Real-Time Package Tracking With ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.   ## Compare Shipping Costs Across Carriers Make sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don't know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.   ## Worldwide Address Validation ShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others. 
 *
 * The version of the OpenAPI document: 1.1.202304191404
 * Contact: sales@shipengine.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GetServicePointsRequestBodyAddress;
import org.openapitools.client.model.GetServicePointsRequestBodyProvidersInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A get service points request body. Caller must provide exactly one of address_query, address, or lat / long pair.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:20:16.939652-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetServicePointsRequestBody {
  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private GetServicePointsRequestBodyAddress address;

  public static final String SERIALIZED_NAME_ADDRESS_QUERY = "address_query";
  @SerializedName(SERIALIZED_NAME_ADDRESS_QUERY)
  private String addressQuery;

  public static final String SERIALIZED_NAME_LAT = "lat";
  @SerializedName(SERIALIZED_NAME_LAT)
  private Double lat;

  public static final String SERIALIZED_NAME_LONG = "long";
  @SerializedName(SERIALIZED_NAME_LONG)
  private Double _long;

  public static final String SERIALIZED_NAME_MAX_RESULTS = "max_results";
  @SerializedName(SERIALIZED_NAME_MAX_RESULTS)
  private Integer maxResults;

  public static final String SERIALIZED_NAME_PROVIDERS = "providers";
  @SerializedName(SERIALIZED_NAME_PROVIDERS)
  private List<GetServicePointsRequestBodyProvidersInner> providers = new ArrayList<>();

  public static final String SERIALIZED_NAME_RADIUS = "radius";
  @SerializedName(SERIALIZED_NAME_RADIUS)
  private Integer radius;

  public GetServicePointsRequestBody() {
  }

  public GetServicePointsRequestBody address(GetServicePointsRequestBodyAddress address) {
    this.address = address;
    return this;
  }

  /**
   * Get address
   * @return address
   */
  @javax.annotation.Nullable
  public GetServicePointsRequestBodyAddress getAddress() {
    return address;
  }

  public void setAddress(GetServicePointsRequestBodyAddress address) {
    this.address = address;
  }


  public GetServicePointsRequestBody addressQuery(String addressQuery) {
    this.addressQuery = addressQuery;
    return this;
  }

  /**
   * Unstructured text to search for service points by.
   * @return addressQuery
   */
  @javax.annotation.Nullable
  public String getAddressQuery() {
    return addressQuery;
  }

  public void setAddressQuery(String addressQuery) {
    this.addressQuery = addressQuery;
  }


  public GetServicePointsRequestBody lat(Double lat) {
    this.lat = lat;
    return this;
  }

  /**
   * The latitude of the point. Represented as signed degrees. Required if long is provided. http://www.geomidpoint.com/latlon.html
   * @return lat
   */
  @javax.annotation.Nullable
  public Double getLat() {
    return lat;
  }

  public void setLat(Double lat) {
    this.lat = lat;
  }


  public GetServicePointsRequestBody _long(Double _long) {
    this._long = _long;
    return this;
  }

  /**
   * The longitude of the point. Represented as signed degrees. Required if lat is provided. http://www.geomidpoint.com/latlon.html
   * @return _long
   */
  @javax.annotation.Nullable
  public Double getLong() {
    return _long;
  }

  public void setLong(Double _long) {
    this._long = _long;
  }


  public GetServicePointsRequestBody maxResults(Integer maxResults) {
    this.maxResults = maxResults;
    return this;
  }

  /**
   * The maximum number of service points to return
   * @return maxResults
   */
  @javax.annotation.Nullable
  public Integer getMaxResults() {
    return maxResults;
  }

  public void setMaxResults(Integer maxResults) {
    this.maxResults = maxResults;
  }


  public GetServicePointsRequestBody providers(List<GetServicePointsRequestBodyProvidersInner> providers) {
    this.providers = providers;
    return this;
  }

  public GetServicePointsRequestBody addProvidersItem(GetServicePointsRequestBodyProvidersInner providersItem) {
    if (this.providers == null) {
      this.providers = new ArrayList<>();
    }
    this.providers.add(providersItem);
    return this;
  }

  /**
   * An array of shipping service providers and service codes
   * @return providers
   */
  @javax.annotation.Nonnull
  public List<GetServicePointsRequestBodyProvidersInner> getProviders() {
    return providers;
  }

  public void setProviders(List<GetServicePointsRequestBodyProvidersInner> providers) {
    this.providers = providers;
  }


  public GetServicePointsRequestBody radius(Integer radius) {
    this.radius = radius;
    return this;
  }

  /**
   * Search radius in kilometers
   * @return radius
   */
  @javax.annotation.Nullable
  public Integer getRadius() {
    return radius;
  }

  public void setRadius(Integer radius) {
    this.radius = radius;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetServicePointsRequestBody getServicePointsRequestBody = (GetServicePointsRequestBody) o;
    return Objects.equals(this.address, getServicePointsRequestBody.address) &&
        Objects.equals(this.addressQuery, getServicePointsRequestBody.addressQuery) &&
        Objects.equals(this.lat, getServicePointsRequestBody.lat) &&
        Objects.equals(this._long, getServicePointsRequestBody._long) &&
        Objects.equals(this.maxResults, getServicePointsRequestBody.maxResults) &&
        Objects.equals(this.providers, getServicePointsRequestBody.providers) &&
        Objects.equals(this.radius, getServicePointsRequestBody.radius);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, addressQuery, lat, _long, maxResults, providers, radius);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetServicePointsRequestBody {\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    addressQuery: ").append(toIndentedString(addressQuery)).append("\n");
    sb.append("    lat: ").append(toIndentedString(lat)).append("\n");
    sb.append("    _long: ").append(toIndentedString(_long)).append("\n");
    sb.append("    maxResults: ").append(toIndentedString(maxResults)).append("\n");
    sb.append("    providers: ").append(toIndentedString(providers)).append("\n");
    sb.append("    radius: ").append(toIndentedString(radius)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("address");
    openapiFields.add("address_query");
    openapiFields.add("lat");
    openapiFields.add("long");
    openapiFields.add("max_results");
    openapiFields.add("providers");
    openapiFields.add("radius");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("providers");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetServicePointsRequestBody
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetServicePointsRequestBody.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetServicePointsRequestBody is not found in the empty JSON string", GetServicePointsRequestBody.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetServicePointsRequestBody.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetServicePointsRequestBody` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GetServicePointsRequestBody.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `address`
      if (jsonObj.get("address") != null && !jsonObj.get("address").isJsonNull()) {
        GetServicePointsRequestBodyAddress.validateJsonElement(jsonObj.get("address"));
      }
      if ((jsonObj.get("address_query") != null && !jsonObj.get("address_query").isJsonNull()) && !jsonObj.get("address_query").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address_query` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address_query").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("providers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `providers` to be an array in the JSON string but got `%s`", jsonObj.get("providers").toString()));
      }

      JsonArray jsonArrayproviders = jsonObj.getAsJsonArray("providers");
      // validate the required field `providers` (array)
      for (int i = 0; i < jsonArrayproviders.size(); i++) {
        GetServicePointsRequestBodyProvidersInner.validateJsonElement(jsonArrayproviders.get(i));
      };
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetServicePointsRequestBody.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetServicePointsRequestBody' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetServicePointsRequestBody> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetServicePointsRequestBody.class));

       return (TypeAdapter<T>) new TypeAdapter<GetServicePointsRequestBody>() {
           @Override
           public void write(JsonWriter out, GetServicePointsRequestBody value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetServicePointsRequestBody read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetServicePointsRequestBody given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetServicePointsRequestBody
   * @throws IOException if the JSON string is invalid with respect to GetServicePointsRequestBody
   */
  public static GetServicePointsRequestBody fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetServicePointsRequestBody.class);
  }

  /**
   * Convert an instance of GetServicePointsRequestBody to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

