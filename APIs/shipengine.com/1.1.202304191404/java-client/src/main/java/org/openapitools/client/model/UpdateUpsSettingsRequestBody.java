/*
 * ShipEngine API
 * ShipEngine's easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.  Each of ShipEngine's features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.  ## Getting Started If you're new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics.  Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.  Here are some step-by-step **tutorials** to get you started:    - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)   - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)   - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)   - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)   ## Shipping Labels for Every Major Carrier ShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).   ## Real-Time Package Tracking With ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.   ## Compare Shipping Costs Across Carriers Make sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don't know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.   ## Worldwide Address Validation ShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others. 
 *
 * The version of the OpenAPI document: 1.1.202304191404
 * Contact: sales@shipengine.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AncillaryServiceEndorsement;
import org.openapitools.client.model.UpsInvoice;
import org.openapitools.client.model.UpsPickupType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * An update UPS settings request body
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:20:16.939652-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateUpsSettingsRequestBody {
  public static final String SERIALIZED_NAME_ACCOUNT_POSTAL_CODE = "account_postal_code";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_POSTAL_CODE)
  private String accountPostalCode;

  public static final String SERIALIZED_NAME_INVOICE = "invoice";
  @SerializedName(SERIALIZED_NAME_INVOICE)
  private UpsInvoice invoice;

  public static final String SERIALIZED_NAME_IS_PRIMARY_ACCOUNT = "is_primary_account";
  @SerializedName(SERIALIZED_NAME_IS_PRIMARY_ACCOUNT)
  private Boolean isPrimaryAccount;

  public static final String SERIALIZED_NAME_MAIL_INNOVATIONS_COST_CENTER = "mail_innovations_cost_center";
  @SerializedName(SERIALIZED_NAME_MAIL_INNOVATIONS_COST_CENTER)
  private String mailInnovationsCostCenter;

  public static final String SERIALIZED_NAME_MAIL_INNOVATIONS_ENDORSEMENT = "mail_innovations_endorsement";
  @SerializedName(SERIALIZED_NAME_MAIL_INNOVATIONS_ENDORSEMENT)
  private AncillaryServiceEndorsement mailInnovationsEndorsement;

  public static final String SERIALIZED_NAME_NICKNAME = "nickname";
  @SerializedName(SERIALIZED_NAME_NICKNAME)
  private String nickname;

  public static final String SERIALIZED_NAME_PICKUP_TYPE = "pickup_type";
  @SerializedName(SERIALIZED_NAME_PICKUP_TYPE)
  private UpsPickupType pickupType;

  public static final String SERIALIZED_NAME_USE_CARBON_NEUTRAL_SHIPPING_PROGRAM = "use_carbon_neutral_shipping_program";
  @SerializedName(SERIALIZED_NAME_USE_CARBON_NEUTRAL_SHIPPING_PROGRAM)
  private Boolean useCarbonNeutralShippingProgram;

  public static final String SERIALIZED_NAME_USE_CONSOLIDATION_SERVICES = "use_consolidation_services";
  @SerializedName(SERIALIZED_NAME_USE_CONSOLIDATION_SERVICES)
  private Boolean useConsolidationServices;

  public static final String SERIALIZED_NAME_USE_GROUND_FREIGHT_PRICING = "use_ground_freight_pricing";
  @SerializedName(SERIALIZED_NAME_USE_GROUND_FREIGHT_PRICING)
  private Boolean useGroundFreightPricing;

  public static final String SERIALIZED_NAME_USE_NEGOTIATED_RATES = "use_negotiated_rates";
  @SerializedName(SERIALIZED_NAME_USE_NEGOTIATED_RATES)
  private Boolean useNegotiatedRates;

  public static final String SERIALIZED_NAME_USE_ORDER_NUMBER_ON_MAIL_INNOVATIONS_LABELS = "use_order_number_on_mail_innovations_labels";
  @SerializedName(SERIALIZED_NAME_USE_ORDER_NUMBER_ON_MAIL_INNOVATIONS_LABELS)
  private Boolean useOrderNumberOnMailInnovationsLabels;

  public UpdateUpsSettingsRequestBody() {
  }

  public UpdateUpsSettingsRequestBody accountPostalCode(String accountPostalCode) {
    this.accountPostalCode = accountPostalCode;
    return this;
  }

  /**
   * account postal code
   * @return accountPostalCode
   */
  @javax.annotation.Nullable
  public String getAccountPostalCode() {
    return accountPostalCode;
  }

  public void setAccountPostalCode(String accountPostalCode) {
    this.accountPostalCode = accountPostalCode;
  }


  public UpdateUpsSettingsRequestBody invoice(UpsInvoice invoice) {
    this.invoice = invoice;
    return this;
  }

  /**
   * The invoice
   * @return invoice
   */
  @javax.annotation.Nullable
  public UpsInvoice getInvoice() {
    return invoice;
  }

  public void setInvoice(UpsInvoice invoice) {
    this.invoice = invoice;
  }


  public UpdateUpsSettingsRequestBody isPrimaryAccount(Boolean isPrimaryAccount) {
    this.isPrimaryAccount = isPrimaryAccount;
    return this;
  }

  /**
   * Indicates if this is the primary UPS account
   * @return isPrimaryAccount
   */
  @javax.annotation.Nullable
  public Boolean getIsPrimaryAccount() {
    return isPrimaryAccount;
  }

  public void setIsPrimaryAccount(Boolean isPrimaryAccount) {
    this.isPrimaryAccount = isPrimaryAccount;
  }


  public UpdateUpsSettingsRequestBody mailInnovationsCostCenter(String mailInnovationsCostCenter) {
    this.mailInnovationsCostCenter = mailInnovationsCostCenter;
    return this;
  }

  /**
   * mail innovations cost center
   * @return mailInnovationsCostCenter
   */
  @javax.annotation.Nullable
  public String getMailInnovationsCostCenter() {
    return mailInnovationsCostCenter;
  }

  public void setMailInnovationsCostCenter(String mailInnovationsCostCenter) {
    this.mailInnovationsCostCenter = mailInnovationsCostCenter;
  }


  public UpdateUpsSettingsRequestBody mailInnovationsEndorsement(AncillaryServiceEndorsement mailInnovationsEndorsement) {
    this.mailInnovationsEndorsement = mailInnovationsEndorsement;
    return this;
  }

  /**
   * Get mailInnovationsEndorsement
   * @return mailInnovationsEndorsement
   */
  @javax.annotation.Nullable
  public AncillaryServiceEndorsement getMailInnovationsEndorsement() {
    return mailInnovationsEndorsement;
  }

  public void setMailInnovationsEndorsement(AncillaryServiceEndorsement mailInnovationsEndorsement) {
    this.mailInnovationsEndorsement = mailInnovationsEndorsement;
  }


  public UpdateUpsSettingsRequestBody nickname(String nickname) {
    this.nickname = nickname;
    return this;
  }

  /**
   * nickname
   * @return nickname
   */
  @javax.annotation.Nullable
  public String getNickname() {
    return nickname;
  }

  public void setNickname(String nickname) {
    this.nickname = nickname;
  }


  public UpdateUpsSettingsRequestBody pickupType(UpsPickupType pickupType) {
    this.pickupType = pickupType;
    return this;
  }

  /**
   * Get pickupType
   * @return pickupType
   */
  @javax.annotation.Nullable
  public UpsPickupType getPickupType() {
    return pickupType;
  }

  public void setPickupType(UpsPickupType pickupType) {
    this.pickupType = pickupType;
  }


  public UpdateUpsSettingsRequestBody useCarbonNeutralShippingProgram(Boolean useCarbonNeutralShippingProgram) {
    this.useCarbonNeutralShippingProgram = useCarbonNeutralShippingProgram;
    return this;
  }

  /**
   * The use carbon neutral shipping program
   * @return useCarbonNeutralShippingProgram
   */
  @javax.annotation.Nullable
  public Boolean getUseCarbonNeutralShippingProgram() {
    return useCarbonNeutralShippingProgram;
  }

  public void setUseCarbonNeutralShippingProgram(Boolean useCarbonNeutralShippingProgram) {
    this.useCarbonNeutralShippingProgram = useCarbonNeutralShippingProgram;
  }


  public UpdateUpsSettingsRequestBody useConsolidationServices(Boolean useConsolidationServices) {
    this.useConsolidationServices = useConsolidationServices;
    return this;
  }

  /**
   * The use consolidation services
   * @return useConsolidationServices
   */
  @javax.annotation.Nullable
  public Boolean getUseConsolidationServices() {
    return useConsolidationServices;
  }

  public void setUseConsolidationServices(Boolean useConsolidationServices) {
    this.useConsolidationServices = useConsolidationServices;
  }


  public UpdateUpsSettingsRequestBody useGroundFreightPricing(Boolean useGroundFreightPricing) {
    this.useGroundFreightPricing = useGroundFreightPricing;
    return this;
  }

  /**
   * The use ground freight pricing
   * @return useGroundFreightPricing
   */
  @javax.annotation.Nullable
  public Boolean getUseGroundFreightPricing() {
    return useGroundFreightPricing;
  }

  public void setUseGroundFreightPricing(Boolean useGroundFreightPricing) {
    this.useGroundFreightPricing = useGroundFreightPricing;
  }


  public UpdateUpsSettingsRequestBody useNegotiatedRates(Boolean useNegotiatedRates) {
    this.useNegotiatedRates = useNegotiatedRates;
    return this;
  }

  /**
   * The use negotiated rates
   * @return useNegotiatedRates
   */
  @javax.annotation.Nullable
  public Boolean getUseNegotiatedRates() {
    return useNegotiatedRates;
  }

  public void setUseNegotiatedRates(Boolean useNegotiatedRates) {
    this.useNegotiatedRates = useNegotiatedRates;
  }


  public UpdateUpsSettingsRequestBody useOrderNumberOnMailInnovationsLabels(Boolean useOrderNumberOnMailInnovationsLabels) {
    this.useOrderNumberOnMailInnovationsLabels = useOrderNumberOnMailInnovationsLabels;
    return this;
  }

  /**
   * The use order number on mail innovations labels
   * @return useOrderNumberOnMailInnovationsLabels
   */
  @javax.annotation.Nullable
  public Boolean getUseOrderNumberOnMailInnovationsLabels() {
    return useOrderNumberOnMailInnovationsLabels;
  }

  public void setUseOrderNumberOnMailInnovationsLabels(Boolean useOrderNumberOnMailInnovationsLabels) {
    this.useOrderNumberOnMailInnovationsLabels = useOrderNumberOnMailInnovationsLabels;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateUpsSettingsRequestBody updateUpsSettingsRequestBody = (UpdateUpsSettingsRequestBody) o;
    return Objects.equals(this.accountPostalCode, updateUpsSettingsRequestBody.accountPostalCode) &&
        Objects.equals(this.invoice, updateUpsSettingsRequestBody.invoice) &&
        Objects.equals(this.isPrimaryAccount, updateUpsSettingsRequestBody.isPrimaryAccount) &&
        Objects.equals(this.mailInnovationsCostCenter, updateUpsSettingsRequestBody.mailInnovationsCostCenter) &&
        Objects.equals(this.mailInnovationsEndorsement, updateUpsSettingsRequestBody.mailInnovationsEndorsement) &&
        Objects.equals(this.nickname, updateUpsSettingsRequestBody.nickname) &&
        Objects.equals(this.pickupType, updateUpsSettingsRequestBody.pickupType) &&
        Objects.equals(this.useCarbonNeutralShippingProgram, updateUpsSettingsRequestBody.useCarbonNeutralShippingProgram) &&
        Objects.equals(this.useConsolidationServices, updateUpsSettingsRequestBody.useConsolidationServices) &&
        Objects.equals(this.useGroundFreightPricing, updateUpsSettingsRequestBody.useGroundFreightPricing) &&
        Objects.equals(this.useNegotiatedRates, updateUpsSettingsRequestBody.useNegotiatedRates) &&
        Objects.equals(this.useOrderNumberOnMailInnovationsLabels, updateUpsSettingsRequestBody.useOrderNumberOnMailInnovationsLabels);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountPostalCode, invoice, isPrimaryAccount, mailInnovationsCostCenter, mailInnovationsEndorsement, nickname, pickupType, useCarbonNeutralShippingProgram, useConsolidationServices, useGroundFreightPricing, useNegotiatedRates, useOrderNumberOnMailInnovationsLabels);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateUpsSettingsRequestBody {\n");
    sb.append("    accountPostalCode: ").append(toIndentedString(accountPostalCode)).append("\n");
    sb.append("    invoice: ").append(toIndentedString(invoice)).append("\n");
    sb.append("    isPrimaryAccount: ").append(toIndentedString(isPrimaryAccount)).append("\n");
    sb.append("    mailInnovationsCostCenter: ").append(toIndentedString(mailInnovationsCostCenter)).append("\n");
    sb.append("    mailInnovationsEndorsement: ").append(toIndentedString(mailInnovationsEndorsement)).append("\n");
    sb.append("    nickname: ").append(toIndentedString(nickname)).append("\n");
    sb.append("    pickupType: ").append(toIndentedString(pickupType)).append("\n");
    sb.append("    useCarbonNeutralShippingProgram: ").append(toIndentedString(useCarbonNeutralShippingProgram)).append("\n");
    sb.append("    useConsolidationServices: ").append(toIndentedString(useConsolidationServices)).append("\n");
    sb.append("    useGroundFreightPricing: ").append(toIndentedString(useGroundFreightPricing)).append("\n");
    sb.append("    useNegotiatedRates: ").append(toIndentedString(useNegotiatedRates)).append("\n");
    sb.append("    useOrderNumberOnMailInnovationsLabels: ").append(toIndentedString(useOrderNumberOnMailInnovationsLabels)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_postal_code");
    openapiFields.add("invoice");
    openapiFields.add("is_primary_account");
    openapiFields.add("mail_innovations_cost_center");
    openapiFields.add("mail_innovations_endorsement");
    openapiFields.add("nickname");
    openapiFields.add("pickup_type");
    openapiFields.add("use_carbon_neutral_shipping_program");
    openapiFields.add("use_consolidation_services");
    openapiFields.add("use_ground_freight_pricing");
    openapiFields.add("use_negotiated_rates");
    openapiFields.add("use_order_number_on_mail_innovations_labels");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateUpsSettingsRequestBody
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateUpsSettingsRequestBody.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateUpsSettingsRequestBody is not found in the empty JSON string", UpdateUpsSettingsRequestBody.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateUpsSettingsRequestBody.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateUpsSettingsRequestBody` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_postal_code") != null && !jsonObj.get("account_postal_code").isJsonNull()) && !jsonObj.get("account_postal_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_postal_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_postal_code").toString()));
      }
      // validate the optional field `invoice`
      if (jsonObj.get("invoice") != null && !jsonObj.get("invoice").isJsonNull()) {
        UpsInvoice.validateJsonElement(jsonObj.get("invoice"));
      }
      if ((jsonObj.get("mail_innovations_cost_center") != null && !jsonObj.get("mail_innovations_cost_center").isJsonNull()) && !jsonObj.get("mail_innovations_cost_center").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mail_innovations_cost_center` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mail_innovations_cost_center").toString()));
      }
      // validate the optional field `mail_innovations_endorsement`
      if (jsonObj.get("mail_innovations_endorsement") != null && !jsonObj.get("mail_innovations_endorsement").isJsonNull()) {
        AncillaryServiceEndorsement.validateJsonElement(jsonObj.get("mail_innovations_endorsement"));
      }
      if ((jsonObj.get("nickname") != null && !jsonObj.get("nickname").isJsonNull()) && !jsonObj.get("nickname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nickname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nickname").toString()));
      }
      // validate the optional field `pickup_type`
      if (jsonObj.get("pickup_type") != null && !jsonObj.get("pickup_type").isJsonNull()) {
        UpsPickupType.validateJsonElement(jsonObj.get("pickup_type"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateUpsSettingsRequestBody.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateUpsSettingsRequestBody' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateUpsSettingsRequestBody> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateUpsSettingsRequestBody.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateUpsSettingsRequestBody>() {
           @Override
           public void write(JsonWriter out, UpdateUpsSettingsRequestBody value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateUpsSettingsRequestBody read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateUpsSettingsRequestBody given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateUpsSettingsRequestBody
   * @throws IOException if the JSON string is invalid with respect to UpdateUpsSettingsRequestBody
   */
  public static UpdateUpsSettingsRequestBody fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateUpsSettingsRequestBody.class);
  }

  /**
   * Convert an instance of UpdateUpsSettingsRequestBody to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

