# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteScheduledPickupResponseBody(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pickup_id: str=None):
        """DeleteScheduledPickupResponseBody - a model defined in OpenAPI

        :param pickup_id: The pickup_id of this DeleteScheduledPickupResponseBody.
        """
        self.openapi_types = {
            'pickup_id': str
        }

        self.attribute_map = {
            'pickup_id': 'pickup_id'
        }

        self._pickup_id = pickup_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteScheduledPickupResponseBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The delete_scheduled_pickup_response_body of this DeleteScheduledPickupResponseBody.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pickup_id(self):
        """Gets the pickup_id of this DeleteScheduledPickupResponseBody.

        Pickup Resource ID

        :return: The pickup_id of this DeleteScheduledPickupResponseBody.
        :rtype: str
        """
        return self._pickup_id

    @pickup_id.setter
    def pickup_id(self, pickup_id):
        """Sets the pickup_id of this DeleteScheduledPickupResponseBody.

        Pickup Resource ID

        :param pickup_id: The pickup_id of this DeleteScheduledPickupResponseBody.
        :type pickup_id: str
        """
        if pickup_id is None:
            raise ValueError("Invalid value for `pickup_id`, must not be `None`")
        if pickup_id is not None and len(pickup_id) < 4:
            raise ValueError("Invalid value for `pickup_id`, length must be greater than or equal to `4`")

        self._pickup_id = pickup_id
