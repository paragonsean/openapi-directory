# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DhlExpressAccountSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_primary_account: bool=None, nickname: str=None, should_hide_account_number_on_archive_doc: bool=None):
        """DhlExpressAccountSettings - a model defined in OpenAPI

        :param is_primary_account: The is_primary_account of this DhlExpressAccountSettings.
        :param nickname: The nickname of this DhlExpressAccountSettings.
        :param should_hide_account_number_on_archive_doc: The should_hide_account_number_on_archive_doc of this DhlExpressAccountSettings.
        """
        self.openapi_types = {
            'is_primary_account': bool,
            'nickname': str,
            'should_hide_account_number_on_archive_doc': bool
        }

        self.attribute_map = {
            'is_primary_account': 'is_primary_account',
            'nickname': 'nickname',
            'should_hide_account_number_on_archive_doc': 'should_hide_account_number_on_archive_doc'
        }

        self._is_primary_account = is_primary_account
        self._nickname = nickname
        self._should_hide_account_number_on_archive_doc = should_hide_account_number_on_archive_doc

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DhlExpressAccountSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The dhl_express_account_settings of this DhlExpressAccountSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_primary_account(self):
        """Gets the is_primary_account of this DhlExpressAccountSettings.

        Indicates if this is primary account

        :return: The is_primary_account of this DhlExpressAccountSettings.
        :rtype: bool
        """
        return self._is_primary_account

    @is_primary_account.setter
    def is_primary_account(self, is_primary_account):
        """Sets the is_primary_account of this DhlExpressAccountSettings.

        Indicates if this is primary account

        :param is_primary_account: The is_primary_account of this DhlExpressAccountSettings.
        :type is_primary_account: bool
        """

        self._is_primary_account = is_primary_account

    @property
    def nickname(self):
        """Gets the nickname of this DhlExpressAccountSettings.

        Account nickname

        :return: The nickname of this DhlExpressAccountSettings.
        :rtype: str
        """
        return self._nickname

    @nickname.setter
    def nickname(self, nickname):
        """Sets the nickname of this DhlExpressAccountSettings.

        Account nickname

        :param nickname: The nickname of this DhlExpressAccountSettings.
        :type nickname: str
        """
        if nickname is not None and len(nickname) < 1:
            raise ValueError("Invalid value for `nickname`, length must be greater than or equal to `1`")

        self._nickname = nickname

    @property
    def should_hide_account_number_on_archive_doc(self):
        """Gets the should_hide_account_number_on_archive_doc of this DhlExpressAccountSettings.

        Indicates if the account number should be hidden on the archive documentation

        :return: The should_hide_account_number_on_archive_doc of this DhlExpressAccountSettings.
        :rtype: bool
        """
        return self._should_hide_account_number_on_archive_doc

    @should_hide_account_number_on_archive_doc.setter
    def should_hide_account_number_on_archive_doc(self, should_hide_account_number_on_archive_doc):
        """Sets the should_hide_account_number_on_archive_doc of this DhlExpressAccountSettings.

        Indicates if the account number should be hidden on the archive documentation

        :param should_hide_account_number_on_archive_doc: The should_hide_account_number_on_archive_doc of this DhlExpressAccountSettings.
        :type should_hide_account_number_on_archive_doc: bool
        """

        self._should_hide_account_number_on_archive_doc = should_hide_account_number_on_archive_doc
