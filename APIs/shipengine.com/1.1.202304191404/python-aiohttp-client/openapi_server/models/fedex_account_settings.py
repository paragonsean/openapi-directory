# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ancillary_service_endorsement import AncillaryServiceEndorsement
from openapi_server.models.fedex_pickup_type import FedexPickupType
from openapi_server.models.smart_post_hub import SmartPostHub
from openapi_server import util


class FedexAccountSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_primary_account: bool=None, letterhead_image: str=None, nickname: str=None, pickup_type: FedexPickupType=None, signature_image: str=None, smart_post_endorsement: AncillaryServiceEndorsement=None, smart_post_hub: SmartPostHub=None):
        """FedexAccountSettings - a model defined in OpenAPI

        :param is_primary_account: The is_primary_account of this FedexAccountSettings.
        :param letterhead_image: The letterhead_image of this FedexAccountSettings.
        :param nickname: The nickname of this FedexAccountSettings.
        :param pickup_type: The pickup_type of this FedexAccountSettings.
        :param signature_image: The signature_image of this FedexAccountSettings.
        :param smart_post_endorsement: The smart_post_endorsement of this FedexAccountSettings.
        :param smart_post_hub: The smart_post_hub of this FedexAccountSettings.
        """
        self.openapi_types = {
            'is_primary_account': bool,
            'letterhead_image': str,
            'nickname': str,
            'pickup_type': FedexPickupType,
            'signature_image': str,
            'smart_post_endorsement': AncillaryServiceEndorsement,
            'smart_post_hub': SmartPostHub
        }

        self.attribute_map = {
            'is_primary_account': 'is_primary_account',
            'letterhead_image': 'letterhead_image',
            'nickname': 'nickname',
            'pickup_type': 'pickup_type',
            'signature_image': 'signature_image',
            'smart_post_endorsement': 'smart_post_endorsement',
            'smart_post_hub': 'smart_post_hub'
        }

        self._is_primary_account = is_primary_account
        self._letterhead_image = letterhead_image
        self._nickname = nickname
        self._pickup_type = pickup_type
        self._signature_image = signature_image
        self._smart_post_endorsement = smart_post_endorsement
        self._smart_post_hub = smart_post_hub

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FedexAccountSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The fedex_account_settings of this FedexAccountSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_primary_account(self):
        """Gets the is_primary_account of this FedexAccountSettings.


        :return: The is_primary_account of this FedexAccountSettings.
        :rtype: bool
        """
        return self._is_primary_account

    @is_primary_account.setter
    def is_primary_account(self, is_primary_account):
        """Sets the is_primary_account of this FedexAccountSettings.


        :param is_primary_account: The is_primary_account of this FedexAccountSettings.
        :type is_primary_account: bool
        """

        self._is_primary_account = is_primary_account

    @property
    def letterhead_image(self):
        """Gets the letterhead_image of this FedexAccountSettings.


        :return: The letterhead_image of this FedexAccountSettings.
        :rtype: str
        """
        return self._letterhead_image

    @letterhead_image.setter
    def letterhead_image(self, letterhead_image):
        """Sets the letterhead_image of this FedexAccountSettings.


        :param letterhead_image: The letterhead_image of this FedexAccountSettings.
        :type letterhead_image: str
        """

        self._letterhead_image = letterhead_image

    @property
    def nickname(self):
        """Gets the nickname of this FedexAccountSettings.

        Account nickname

        :return: The nickname of this FedexAccountSettings.
        :rtype: str
        """
        return self._nickname

    @nickname.setter
    def nickname(self, nickname):
        """Sets the nickname of this FedexAccountSettings.

        Account nickname

        :param nickname: The nickname of this FedexAccountSettings.
        :type nickname: str
        """
        if nickname is not None and len(nickname) < 1:
            raise ValueError("Invalid value for `nickname`, length must be greater than or equal to `1`")

        self._nickname = nickname

    @property
    def pickup_type(self):
        """Gets the pickup_type of this FedexAccountSettings.


        :return: The pickup_type of this FedexAccountSettings.
        :rtype: FedexPickupType
        """
        return self._pickup_type

    @pickup_type.setter
    def pickup_type(self, pickup_type):
        """Sets the pickup_type of this FedexAccountSettings.


        :param pickup_type: The pickup_type of this FedexAccountSettings.
        :type pickup_type: FedexPickupType
        """

        self._pickup_type = pickup_type

    @property
    def signature_image(self):
        """Gets the signature_image of this FedexAccountSettings.


        :return: The signature_image of this FedexAccountSettings.
        :rtype: str
        """
        return self._signature_image

    @signature_image.setter
    def signature_image(self, signature_image):
        """Sets the signature_image of this FedexAccountSettings.


        :param signature_image: The signature_image of this FedexAccountSettings.
        :type signature_image: str
        """

        self._signature_image = signature_image

    @property
    def smart_post_endorsement(self):
        """Gets the smart_post_endorsement of this FedexAccountSettings.


        :return: The smart_post_endorsement of this FedexAccountSettings.
        :rtype: AncillaryServiceEndorsement
        """
        return self._smart_post_endorsement

    @smart_post_endorsement.setter
    def smart_post_endorsement(self, smart_post_endorsement):
        """Sets the smart_post_endorsement of this FedexAccountSettings.


        :param smart_post_endorsement: The smart_post_endorsement of this FedexAccountSettings.
        :type smart_post_endorsement: AncillaryServiceEndorsement
        """

        self._smart_post_endorsement = smart_post_endorsement

    @property
    def smart_post_hub(self):
        """Gets the smart_post_hub of this FedexAccountSettings.


        :return: The smart_post_hub of this FedexAccountSettings.
        :rtype: SmartPostHub
        """
        return self._smart_post_hub

    @smart_post_hub.setter
    def smart_post_hub(self, smart_post_hub):
        """Sets the smart_post_hub of this FedexAccountSettings.


        :param smart_post_hub: The smart_post_hub of this FedexAccountSettings.
        :type smart_post_hub: SmartPostHub
        """

        self._smart_post_hub = smart_post_hub
