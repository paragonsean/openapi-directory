# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.warehouse import Warehouse
from openapi_server import util


class ListWarehousesResponseBody(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, warehouses: List[Warehouse]=None):
        """ListWarehousesResponseBody - a model defined in OpenAPI

        :param warehouses: The warehouses of this ListWarehousesResponseBody.
        """
        self.openapi_types = {
            'warehouses': List[Warehouse]
        }

        self.attribute_map = {
            'warehouses': 'warehouses'
        }

        self._warehouses = warehouses

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListWarehousesResponseBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The list_warehouses_response_body of this ListWarehousesResponseBody.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def warehouses(self):
        """Gets the warehouses of this ListWarehousesResponseBody.

        The array of warehouses returned by the API call

        :return: The warehouses of this ListWarehousesResponseBody.
        :rtype: List[Warehouse]
        """
        return self._warehouses

    @warehouses.setter
    def warehouses(self, warehouses):
        """Sets the warehouses of this ListWarehousesResponseBody.

        The array of warehouses returned by the API call

        :param warehouses: The warehouses of this ListWarehousesResponseBody.
        :type warehouses: List[Warehouse]
        """
        if warehouses is None:
            raise ValueError("Invalid value for `warehouses`, must not be `None`")

        self._warehouses = warehouses
