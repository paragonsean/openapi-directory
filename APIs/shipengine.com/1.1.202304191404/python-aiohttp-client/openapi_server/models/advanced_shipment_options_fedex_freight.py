# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AdvancedShipmentOptionsFedexFreight(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, booking_confirmation: str=None, shipper_load_and_count: str=None):
        """AdvancedShipmentOptionsFedexFreight - a model defined in OpenAPI

        :param booking_confirmation: The booking_confirmation of this AdvancedShipmentOptionsFedexFreight.
        :param shipper_load_and_count: The shipper_load_and_count of this AdvancedShipmentOptionsFedexFreight.
        """
        self.openapi_types = {
            'booking_confirmation': str,
            'shipper_load_and_count': str
        }

        self.attribute_map = {
            'booking_confirmation': 'booking_confirmation',
            'shipper_load_and_count': 'shipper_load_and_count'
        }

        self._booking_confirmation = booking_confirmation
        self._shipper_load_and_count = shipper_load_and_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdvancedShipmentOptionsFedexFreight':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The advanced_shipment_options_fedex_freight of this AdvancedShipmentOptionsFedexFreight.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def booking_confirmation(self):
        """Gets the booking_confirmation of this AdvancedShipmentOptionsFedexFreight.


        :return: The booking_confirmation of this AdvancedShipmentOptionsFedexFreight.
        :rtype: str
        """
        return self._booking_confirmation

    @booking_confirmation.setter
    def booking_confirmation(self, booking_confirmation):
        """Sets the booking_confirmation of this AdvancedShipmentOptionsFedexFreight.


        :param booking_confirmation: The booking_confirmation of this AdvancedShipmentOptionsFedexFreight.
        :type booking_confirmation: str
        """

        self._booking_confirmation = booking_confirmation

    @property
    def shipper_load_and_count(self):
        """Gets the shipper_load_and_count of this AdvancedShipmentOptionsFedexFreight.


        :return: The shipper_load_and_count of this AdvancedShipmentOptionsFedexFreight.
        :rtype: str
        """
        return self._shipper_load_and_count

    @shipper_load_and_count.setter
    def shipper_load_and_count(self, shipper_load_and_count):
        """Sets the shipper_load_and_count of this AdvancedShipmentOptionsFedexFreight.


        :param shipper_load_and_count: The shipper_load_and_count of this AdvancedShipmentOptionsFedexFreight.
        :type shipper_load_and_count: str
        """

        self._shipper_load_and_count = shipper_load_and_count
