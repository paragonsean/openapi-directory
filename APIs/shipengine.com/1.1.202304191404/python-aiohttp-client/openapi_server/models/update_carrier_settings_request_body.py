# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ancillary_service_endorsement import AncillaryServiceEndorsement
from openapi_server.models.smart_post_hub import SmartPostHub
from openapi_server.models.update_amazon_buy_shipping_request_body import UpdateAmazonBuyShippingRequestBody
from openapi_server.models.update_dhl_express_settings_request_body import UpdateDhlExpressSettingsRequestBody
from openapi_server.models.update_fedex_settings_request_body import UpdateFedexSettingsRequestBody
from openapi_server.models.update_newgistics_settings_request_body import UpdateNewgisticsSettingsRequestBody
from openapi_server.models.update_ups_settings_request_body import UpdateUpsSettingsRequestBody
from openapi_server.models.ups_invoice import UpsInvoice
from openapi_server.models.ups_pickup_type import UpsPickupType
from openapi_server import util


class UpdateCarrierSettingsRequestBody(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_primary_account: bool=None, nickname: str=None, should_hide_account_number_on_archive_doc: bool=None, letterhead_image: str=None, pickup_type: UpsPickupType=None, signature_image: str=None, smart_post_endorsement: AncillaryServiceEndorsement=None, smart_post_hub: SmartPostHub=None, include_barcode_with_order_number: bool=None, receive_email_on_manifest_processing: bool=None, account_postal_code: str=None, invoice: UpsInvoice=None, mail_innovations_cost_center: str=None, mail_innovations_endorsement: AncillaryServiceEndorsement=None, use_carbon_neutral_shipping_program: bool=None, use_consolidation_services: bool=None, use_ground_freight_pricing: bool=None, use_negotiated_rates: bool=None, use_order_number_on_mail_innovations_labels: bool=None, email: str=None):
        """UpdateCarrierSettingsRequestBody - a model defined in OpenAPI

        :param is_primary_account: The is_primary_account of this UpdateCarrierSettingsRequestBody.
        :param nickname: The nickname of this UpdateCarrierSettingsRequestBody.
        :param should_hide_account_number_on_archive_doc: The should_hide_account_number_on_archive_doc of this UpdateCarrierSettingsRequestBody.
        :param letterhead_image: The letterhead_image of this UpdateCarrierSettingsRequestBody.
        :param pickup_type: The pickup_type of this UpdateCarrierSettingsRequestBody.
        :param signature_image: The signature_image of this UpdateCarrierSettingsRequestBody.
        :param smart_post_endorsement: The smart_post_endorsement of this UpdateCarrierSettingsRequestBody.
        :param smart_post_hub: The smart_post_hub of this UpdateCarrierSettingsRequestBody.
        :param include_barcode_with_order_number: The include_barcode_with_order_number of this UpdateCarrierSettingsRequestBody.
        :param receive_email_on_manifest_processing: The receive_email_on_manifest_processing of this UpdateCarrierSettingsRequestBody.
        :param account_postal_code: The account_postal_code of this UpdateCarrierSettingsRequestBody.
        :param invoice: The invoice of this UpdateCarrierSettingsRequestBody.
        :param mail_innovations_cost_center: The mail_innovations_cost_center of this UpdateCarrierSettingsRequestBody.
        :param mail_innovations_endorsement: The mail_innovations_endorsement of this UpdateCarrierSettingsRequestBody.
        :param use_carbon_neutral_shipping_program: The use_carbon_neutral_shipping_program of this UpdateCarrierSettingsRequestBody.
        :param use_consolidation_services: The use_consolidation_services of this UpdateCarrierSettingsRequestBody.
        :param use_ground_freight_pricing: The use_ground_freight_pricing of this UpdateCarrierSettingsRequestBody.
        :param use_negotiated_rates: The use_negotiated_rates of this UpdateCarrierSettingsRequestBody.
        :param use_order_number_on_mail_innovations_labels: The use_order_number_on_mail_innovations_labels of this UpdateCarrierSettingsRequestBody.
        :param email: The email of this UpdateCarrierSettingsRequestBody.
        """
        self.openapi_types = {
            'is_primary_account': bool,
            'nickname': str,
            'should_hide_account_number_on_archive_doc': bool,
            'letterhead_image': str,
            'pickup_type': UpsPickupType,
            'signature_image': str,
            'smart_post_endorsement': AncillaryServiceEndorsement,
            'smart_post_hub': SmartPostHub,
            'include_barcode_with_order_number': bool,
            'receive_email_on_manifest_processing': bool,
            'account_postal_code': str,
            'invoice': UpsInvoice,
            'mail_innovations_cost_center': str,
            'mail_innovations_endorsement': AncillaryServiceEndorsement,
            'use_carbon_neutral_shipping_program': bool,
            'use_consolidation_services': bool,
            'use_ground_freight_pricing': bool,
            'use_negotiated_rates': bool,
            'use_order_number_on_mail_innovations_labels': bool,
            'email': str
        }

        self.attribute_map = {
            'is_primary_account': 'is_primary_account',
            'nickname': 'nickname',
            'should_hide_account_number_on_archive_doc': 'should_hide_account_number_on_archive_doc',
            'letterhead_image': 'letterhead_image',
            'pickup_type': 'pickup_type',
            'signature_image': 'signature_image',
            'smart_post_endorsement': 'smart_post_endorsement',
            'smart_post_hub': 'smart_post_hub',
            'include_barcode_with_order_number': 'include_barcode_with_order_number',
            'receive_email_on_manifest_processing': 'receive_email_on_manifest_processing',
            'account_postal_code': 'account_postal_code',
            'invoice': 'invoice',
            'mail_innovations_cost_center': 'mail_innovations_cost_center',
            'mail_innovations_endorsement': 'mail_innovations_endorsement',
            'use_carbon_neutral_shipping_program': 'use_carbon_neutral_shipping_program',
            'use_consolidation_services': 'use_consolidation_services',
            'use_ground_freight_pricing': 'use_ground_freight_pricing',
            'use_negotiated_rates': 'use_negotiated_rates',
            'use_order_number_on_mail_innovations_labels': 'use_order_number_on_mail_innovations_labels',
            'email': 'email'
        }

        self._is_primary_account = is_primary_account
        self._nickname = nickname
        self._should_hide_account_number_on_archive_doc = should_hide_account_number_on_archive_doc
        self._letterhead_image = letterhead_image
        self._pickup_type = pickup_type
        self._signature_image = signature_image
        self._smart_post_endorsement = smart_post_endorsement
        self._smart_post_hub = smart_post_hub
        self._include_barcode_with_order_number = include_barcode_with_order_number
        self._receive_email_on_manifest_processing = receive_email_on_manifest_processing
        self._account_postal_code = account_postal_code
        self._invoice = invoice
        self._mail_innovations_cost_center = mail_innovations_cost_center
        self._mail_innovations_endorsement = mail_innovations_endorsement
        self._use_carbon_neutral_shipping_program = use_carbon_neutral_shipping_program
        self._use_consolidation_services = use_consolidation_services
        self._use_ground_freight_pricing = use_ground_freight_pricing
        self._use_negotiated_rates = use_negotiated_rates
        self._use_order_number_on_mail_innovations_labels = use_order_number_on_mail_innovations_labels
        self._email = email

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateCarrierSettingsRequestBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The update_carrier_settings_request_body of this UpdateCarrierSettingsRequestBody.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_primary_account(self):
        """Gets the is_primary_account of this UpdateCarrierSettingsRequestBody.

        Indicates if this is the primary UPS account

        :return: The is_primary_account of this UpdateCarrierSettingsRequestBody.
        :rtype: bool
        """
        return self._is_primary_account

    @is_primary_account.setter
    def is_primary_account(self, is_primary_account):
        """Sets the is_primary_account of this UpdateCarrierSettingsRequestBody.

        Indicates if this is the primary UPS account

        :param is_primary_account: The is_primary_account of this UpdateCarrierSettingsRequestBody.
        :type is_primary_account: bool
        """

        self._is_primary_account = is_primary_account

    @property
    def nickname(self):
        """Gets the nickname of this UpdateCarrierSettingsRequestBody.

        nickname

        :return: The nickname of this UpdateCarrierSettingsRequestBody.
        :rtype: str
        """
        return self._nickname

    @nickname.setter
    def nickname(self, nickname):
        """Sets the nickname of this UpdateCarrierSettingsRequestBody.

        nickname

        :param nickname: The nickname of this UpdateCarrierSettingsRequestBody.
        :type nickname: str
        """
        if nickname is not None and len(nickname) < 1:
            raise ValueError("Invalid value for `nickname`, length must be greater than or equal to `1`")

        self._nickname = nickname

    @property
    def should_hide_account_number_on_archive_doc(self):
        """Gets the should_hide_account_number_on_archive_doc of this UpdateCarrierSettingsRequestBody.

        Indicates if the account number should be hidden on the archive documentation

        :return: The should_hide_account_number_on_archive_doc of this UpdateCarrierSettingsRequestBody.
        :rtype: bool
        """
        return self._should_hide_account_number_on_archive_doc

    @should_hide_account_number_on_archive_doc.setter
    def should_hide_account_number_on_archive_doc(self, should_hide_account_number_on_archive_doc):
        """Sets the should_hide_account_number_on_archive_doc of this UpdateCarrierSettingsRequestBody.

        Indicates if the account number should be hidden on the archive documentation

        :param should_hide_account_number_on_archive_doc: The should_hide_account_number_on_archive_doc of this UpdateCarrierSettingsRequestBody.
        :type should_hide_account_number_on_archive_doc: bool
        """

        self._should_hide_account_number_on_archive_doc = should_hide_account_number_on_archive_doc

    @property
    def letterhead_image(self):
        """Gets the letterhead_image of this UpdateCarrierSettingsRequestBody.


        :return: The letterhead_image of this UpdateCarrierSettingsRequestBody.
        :rtype: str
        """
        return self._letterhead_image

    @letterhead_image.setter
    def letterhead_image(self, letterhead_image):
        """Sets the letterhead_image of this UpdateCarrierSettingsRequestBody.


        :param letterhead_image: The letterhead_image of this UpdateCarrierSettingsRequestBody.
        :type letterhead_image: str
        """

        self._letterhead_image = letterhead_image

    @property
    def pickup_type(self):
        """Gets the pickup_type of this UpdateCarrierSettingsRequestBody.


        :return: The pickup_type of this UpdateCarrierSettingsRequestBody.
        :rtype: UpsPickupType
        """
        return self._pickup_type

    @pickup_type.setter
    def pickup_type(self, pickup_type):
        """Sets the pickup_type of this UpdateCarrierSettingsRequestBody.


        :param pickup_type: The pickup_type of this UpdateCarrierSettingsRequestBody.
        :type pickup_type: UpsPickupType
        """

        self._pickup_type = pickup_type

    @property
    def signature_image(self):
        """Gets the signature_image of this UpdateCarrierSettingsRequestBody.


        :return: The signature_image of this UpdateCarrierSettingsRequestBody.
        :rtype: str
        """
        return self._signature_image

    @signature_image.setter
    def signature_image(self, signature_image):
        """Sets the signature_image of this UpdateCarrierSettingsRequestBody.


        :param signature_image: The signature_image of this UpdateCarrierSettingsRequestBody.
        :type signature_image: str
        """

        self._signature_image = signature_image

    @property
    def smart_post_endorsement(self):
        """Gets the smart_post_endorsement of this UpdateCarrierSettingsRequestBody.


        :return: The smart_post_endorsement of this UpdateCarrierSettingsRequestBody.
        :rtype: AncillaryServiceEndorsement
        """
        return self._smart_post_endorsement

    @smart_post_endorsement.setter
    def smart_post_endorsement(self, smart_post_endorsement):
        """Sets the smart_post_endorsement of this UpdateCarrierSettingsRequestBody.


        :param smart_post_endorsement: The smart_post_endorsement of this UpdateCarrierSettingsRequestBody.
        :type smart_post_endorsement: AncillaryServiceEndorsement
        """

        self._smart_post_endorsement = smart_post_endorsement

    @property
    def smart_post_hub(self):
        """Gets the smart_post_hub of this UpdateCarrierSettingsRequestBody.


        :return: The smart_post_hub of this UpdateCarrierSettingsRequestBody.
        :rtype: SmartPostHub
        """
        return self._smart_post_hub

    @smart_post_hub.setter
    def smart_post_hub(self, smart_post_hub):
        """Sets the smart_post_hub of this UpdateCarrierSettingsRequestBody.


        :param smart_post_hub: The smart_post_hub of this UpdateCarrierSettingsRequestBody.
        :type smart_post_hub: SmartPostHub
        """

        self._smart_post_hub = smart_post_hub

    @property
    def include_barcode_with_order_number(self):
        """Gets the include_barcode_with_order_number of this UpdateCarrierSettingsRequestBody.


        :return: The include_barcode_with_order_number of this UpdateCarrierSettingsRequestBody.
        :rtype: bool
        """
        return self._include_barcode_with_order_number

    @include_barcode_with_order_number.setter
    def include_barcode_with_order_number(self, include_barcode_with_order_number):
        """Sets the include_barcode_with_order_number of this UpdateCarrierSettingsRequestBody.


        :param include_barcode_with_order_number: The include_barcode_with_order_number of this UpdateCarrierSettingsRequestBody.
        :type include_barcode_with_order_number: bool
        """

        self._include_barcode_with_order_number = include_barcode_with_order_number

    @property
    def receive_email_on_manifest_processing(self):
        """Gets the receive_email_on_manifest_processing of this UpdateCarrierSettingsRequestBody.


        :return: The receive_email_on_manifest_processing of this UpdateCarrierSettingsRequestBody.
        :rtype: bool
        """
        return self._receive_email_on_manifest_processing

    @receive_email_on_manifest_processing.setter
    def receive_email_on_manifest_processing(self, receive_email_on_manifest_processing):
        """Sets the receive_email_on_manifest_processing of this UpdateCarrierSettingsRequestBody.


        :param receive_email_on_manifest_processing: The receive_email_on_manifest_processing of this UpdateCarrierSettingsRequestBody.
        :type receive_email_on_manifest_processing: bool
        """

        self._receive_email_on_manifest_processing = receive_email_on_manifest_processing

    @property
    def account_postal_code(self):
        """Gets the account_postal_code of this UpdateCarrierSettingsRequestBody.

        account postal code

        :return: The account_postal_code of this UpdateCarrierSettingsRequestBody.
        :rtype: str
        """
        return self._account_postal_code

    @account_postal_code.setter
    def account_postal_code(self, account_postal_code):
        """Sets the account_postal_code of this UpdateCarrierSettingsRequestBody.

        account postal code

        :param account_postal_code: The account_postal_code of this UpdateCarrierSettingsRequestBody.
        :type account_postal_code: str
        """
        if account_postal_code is not None and len(account_postal_code) < 5:
            raise ValueError("Invalid value for `account_postal_code`, length must be greater than or equal to `5`")

        self._account_postal_code = account_postal_code

    @property
    def invoice(self):
        """Gets the invoice of this UpdateCarrierSettingsRequestBody.

        The invoice

        :return: The invoice of this UpdateCarrierSettingsRequestBody.
        :rtype: UpsInvoice
        """
        return self._invoice

    @invoice.setter
    def invoice(self, invoice):
        """Sets the invoice of this UpdateCarrierSettingsRequestBody.

        The invoice

        :param invoice: The invoice of this UpdateCarrierSettingsRequestBody.
        :type invoice: UpsInvoice
        """

        self._invoice = invoice

    @property
    def mail_innovations_cost_center(self):
        """Gets the mail_innovations_cost_center of this UpdateCarrierSettingsRequestBody.

        mail innovations cost center

        :return: The mail_innovations_cost_center of this UpdateCarrierSettingsRequestBody.
        :rtype: str
        """
        return self._mail_innovations_cost_center

    @mail_innovations_cost_center.setter
    def mail_innovations_cost_center(self, mail_innovations_cost_center):
        """Sets the mail_innovations_cost_center of this UpdateCarrierSettingsRequestBody.

        mail innovations cost center

        :param mail_innovations_cost_center: The mail_innovations_cost_center of this UpdateCarrierSettingsRequestBody.
        :type mail_innovations_cost_center: str
        """
        if mail_innovations_cost_center is not None and len(mail_innovations_cost_center) < 0:
            raise ValueError("Invalid value for `mail_innovations_cost_center`, length must be greater than or equal to `0`")

        self._mail_innovations_cost_center = mail_innovations_cost_center

    @property
    def mail_innovations_endorsement(self):
        """Gets the mail_innovations_endorsement of this UpdateCarrierSettingsRequestBody.


        :return: The mail_innovations_endorsement of this UpdateCarrierSettingsRequestBody.
        :rtype: AncillaryServiceEndorsement
        """
        return self._mail_innovations_endorsement

    @mail_innovations_endorsement.setter
    def mail_innovations_endorsement(self, mail_innovations_endorsement):
        """Sets the mail_innovations_endorsement of this UpdateCarrierSettingsRequestBody.


        :param mail_innovations_endorsement: The mail_innovations_endorsement of this UpdateCarrierSettingsRequestBody.
        :type mail_innovations_endorsement: AncillaryServiceEndorsement
        """

        self._mail_innovations_endorsement = mail_innovations_endorsement

    @property
    def use_carbon_neutral_shipping_program(self):
        """Gets the use_carbon_neutral_shipping_program of this UpdateCarrierSettingsRequestBody.

        The use carbon neutral shipping program

        :return: The use_carbon_neutral_shipping_program of this UpdateCarrierSettingsRequestBody.
        :rtype: bool
        """
        return self._use_carbon_neutral_shipping_program

    @use_carbon_neutral_shipping_program.setter
    def use_carbon_neutral_shipping_program(self, use_carbon_neutral_shipping_program):
        """Sets the use_carbon_neutral_shipping_program of this UpdateCarrierSettingsRequestBody.

        The use carbon neutral shipping program

        :param use_carbon_neutral_shipping_program: The use_carbon_neutral_shipping_program of this UpdateCarrierSettingsRequestBody.
        :type use_carbon_neutral_shipping_program: bool
        """

        self._use_carbon_neutral_shipping_program = use_carbon_neutral_shipping_program

    @property
    def use_consolidation_services(self):
        """Gets the use_consolidation_services of this UpdateCarrierSettingsRequestBody.

        The use consolidation services

        :return: The use_consolidation_services of this UpdateCarrierSettingsRequestBody.
        :rtype: bool
        """
        return self._use_consolidation_services

    @use_consolidation_services.setter
    def use_consolidation_services(self, use_consolidation_services):
        """Sets the use_consolidation_services of this UpdateCarrierSettingsRequestBody.

        The use consolidation services

        :param use_consolidation_services: The use_consolidation_services of this UpdateCarrierSettingsRequestBody.
        :type use_consolidation_services: bool
        """

        self._use_consolidation_services = use_consolidation_services

    @property
    def use_ground_freight_pricing(self):
        """Gets the use_ground_freight_pricing of this UpdateCarrierSettingsRequestBody.

        The use ground freight pricing

        :return: The use_ground_freight_pricing of this UpdateCarrierSettingsRequestBody.
        :rtype: bool
        """
        return self._use_ground_freight_pricing

    @use_ground_freight_pricing.setter
    def use_ground_freight_pricing(self, use_ground_freight_pricing):
        """Sets the use_ground_freight_pricing of this UpdateCarrierSettingsRequestBody.

        The use ground freight pricing

        :param use_ground_freight_pricing: The use_ground_freight_pricing of this UpdateCarrierSettingsRequestBody.
        :type use_ground_freight_pricing: bool
        """

        self._use_ground_freight_pricing = use_ground_freight_pricing

    @property
    def use_negotiated_rates(self):
        """Gets the use_negotiated_rates of this UpdateCarrierSettingsRequestBody.

        The use negotiated rates

        :return: The use_negotiated_rates of this UpdateCarrierSettingsRequestBody.
        :rtype: bool
        """
        return self._use_negotiated_rates

    @use_negotiated_rates.setter
    def use_negotiated_rates(self, use_negotiated_rates):
        """Sets the use_negotiated_rates of this UpdateCarrierSettingsRequestBody.

        The use negotiated rates

        :param use_negotiated_rates: The use_negotiated_rates of this UpdateCarrierSettingsRequestBody.
        :type use_negotiated_rates: bool
        """

        self._use_negotiated_rates = use_negotiated_rates

    @property
    def use_order_number_on_mail_innovations_labels(self):
        """Gets the use_order_number_on_mail_innovations_labels of this UpdateCarrierSettingsRequestBody.

        The use order number on mail innovations labels

        :return: The use_order_number_on_mail_innovations_labels of this UpdateCarrierSettingsRequestBody.
        :rtype: bool
        """
        return self._use_order_number_on_mail_innovations_labels

    @use_order_number_on_mail_innovations_labels.setter
    def use_order_number_on_mail_innovations_labels(self, use_order_number_on_mail_innovations_labels):
        """Sets the use_order_number_on_mail_innovations_labels of this UpdateCarrierSettingsRequestBody.

        The use order number on mail innovations labels

        :param use_order_number_on_mail_innovations_labels: The use_order_number_on_mail_innovations_labels of this UpdateCarrierSettingsRequestBody.
        :type use_order_number_on_mail_innovations_labels: bool
        """

        self._use_order_number_on_mail_innovations_labels = use_order_number_on_mail_innovations_labels

    @property
    def email(self):
        """Gets the email of this UpdateCarrierSettingsRequestBody.

        Email

        :return: The email of this UpdateCarrierSettingsRequestBody.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this UpdateCarrierSettingsRequestBody.

        Email

        :param email: The email of this UpdateCarrierSettingsRequestBody.
        :type email: str
        """
        if email is not None and len(email) < 1:
            raise ValueError("Invalid value for `email`, length must be greater than or equal to `1`")

        self._email = email
