# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.display_scheme import DisplayScheme
from openapi_server.models.label_charge_event import LabelChargeEvent
from openapi_server.models.label_download_type import LabelDownloadType
from openapi_server.models.label_format import LabelFormat
from openapi_server.models.label_layout import LabelLayout
from openapi_server import util


class CreateReturnLabelRequestBody(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, charge_event: LabelChargeEvent=None, display_scheme: DisplayScheme=None, label_download_type: LabelDownloadType=None, label_format: LabelFormat=None, label_image_id: str=None, label_layout: LabelLayout=None):
        """CreateReturnLabelRequestBody - a model defined in OpenAPI

        :param charge_event: The charge_event of this CreateReturnLabelRequestBody.
        :param display_scheme: The display_scheme of this CreateReturnLabelRequestBody.
        :param label_download_type: The label_download_type of this CreateReturnLabelRequestBody.
        :param label_format: The label_format of this CreateReturnLabelRequestBody.
        :param label_image_id: The label_image_id of this CreateReturnLabelRequestBody.
        :param label_layout: The label_layout of this CreateReturnLabelRequestBody.
        """
        self.openapi_types = {
            'charge_event': LabelChargeEvent,
            'display_scheme': DisplayScheme,
            'label_download_type': LabelDownloadType,
            'label_format': LabelFormat,
            'label_image_id': str,
            'label_layout': LabelLayout
        }

        self.attribute_map = {
            'charge_event': 'charge_event',
            'display_scheme': 'display_scheme',
            'label_download_type': 'label_download_type',
            'label_format': 'label_format',
            'label_image_id': 'label_image_id',
            'label_layout': 'label_layout'
        }

        self._charge_event = charge_event
        self._display_scheme = display_scheme
        self._label_download_type = label_download_type
        self._label_format = label_format
        self._label_image_id = label_image_id
        self._label_layout = label_layout

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateReturnLabelRequestBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The create_return_label_request_body of this CreateReturnLabelRequestBody.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def charge_event(self):
        """Gets the charge_event of this CreateReturnLabelRequestBody.

        The label charge event. 

        :return: The charge_event of this CreateReturnLabelRequestBody.
        :rtype: LabelChargeEvent
        """
        return self._charge_event

    @charge_event.setter
    def charge_event(self, charge_event):
        """Sets the charge_event of this CreateReturnLabelRequestBody.

        The label charge event. 

        :param charge_event: The charge_event of this CreateReturnLabelRequestBody.
        :type charge_event: LabelChargeEvent
        """

        self._charge_event = charge_event

    @property
    def display_scheme(self):
        """Gets the display_scheme of this CreateReturnLabelRequestBody.

        The display format that the label should be shown in.

        :return: The display_scheme of this CreateReturnLabelRequestBody.
        :rtype: DisplayScheme
        """
        return self._display_scheme

    @display_scheme.setter
    def display_scheme(self, display_scheme):
        """Sets the display_scheme of this CreateReturnLabelRequestBody.

        The display format that the label should be shown in.

        :param display_scheme: The display_scheme of this CreateReturnLabelRequestBody.
        :type display_scheme: DisplayScheme
        """

        self._display_scheme = display_scheme

    @property
    def label_download_type(self):
        """Gets the label_download_type of this CreateReturnLabelRequestBody.


        :return: The label_download_type of this CreateReturnLabelRequestBody.
        :rtype: LabelDownloadType
        """
        return self._label_download_type

    @label_download_type.setter
    def label_download_type(self, label_download_type):
        """Sets the label_download_type of this CreateReturnLabelRequestBody.


        :param label_download_type: The label_download_type of this CreateReturnLabelRequestBody.
        :type label_download_type: LabelDownloadType
        """

        self._label_download_type = label_download_type

    @property
    def label_format(self):
        """Gets the label_format of this CreateReturnLabelRequestBody.

        The file format that you want the label to be in.  We recommend `pdf` format because it is supported by all carriers, whereas some carriers do not support the `png` or `zpl` formats. 

        :return: The label_format of this CreateReturnLabelRequestBody.
        :rtype: LabelFormat
        """
        return self._label_format

    @label_format.setter
    def label_format(self, label_format):
        """Sets the label_format of this CreateReturnLabelRequestBody.

        The file format that you want the label to be in.  We recommend `pdf` format because it is supported by all carriers, whereas some carriers do not support the `png` or `zpl` formats. 

        :param label_format: The label_format of this CreateReturnLabelRequestBody.
        :type label_format: LabelFormat
        """

        self._label_format = label_format

    @property
    def label_image_id(self):
        """Gets the label_image_id of this CreateReturnLabelRequestBody.

        The label image resource that was used to create a custom label image.

        :return: The label_image_id of this CreateReturnLabelRequestBody.
        :rtype: str
        """
        return self._label_image_id

    @label_image_id.setter
    def label_image_id(self, label_image_id):
        """Sets the label_image_id of this CreateReturnLabelRequestBody.

        The label image resource that was used to create a custom label image.

        :param label_image_id: The label_image_id of this CreateReturnLabelRequestBody.
        :type label_image_id: str
        """
        if label_image_id is not None and len(label_image_id) < 4:
            raise ValueError("Invalid value for `label_image_id`, length must be greater than or equal to `4`")

        self._label_image_id = label_image_id

    @property
    def label_layout(self):
        """Gets the label_layout of this CreateReturnLabelRequestBody.

        The layout (size) that you want the label to be in.  The `label_format` determines which sizes are allowed.  `4x6` is supported for all label formats, whereas `letter` (8.5\" x 11\") is only supported for `pdf` format. 

        :return: The label_layout of this CreateReturnLabelRequestBody.
        :rtype: LabelLayout
        """
        return self._label_layout

    @label_layout.setter
    def label_layout(self, label_layout):
        """Sets the label_layout of this CreateReturnLabelRequestBody.

        The layout (size) that you want the label to be in.  The `label_format` determines which sizes are allowed.  `4x6` is supported for all label formats, whereas `letter` (8.5\" x 11\") is only supported for `pdf` format. 

        :param label_layout: The label_layout of this CreateReturnLabelRequestBody.
        :type label_layout: LabelLayout
        """

        self._label_layout = label_layout
