# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RateEstimateByCarrierIds(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, carrier_ids: List[str]=None):
        """RateEstimateByCarrierIds - a model defined in OpenAPI

        :param carrier_ids: The carrier_ids of this RateEstimateByCarrierIds.
        """
        self.openapi_types = {
            'carrier_ids': List[str]
        }

        self.attribute_map = {
            'carrier_ids': 'carrier_ids'
        }

        self._carrier_ids = carrier_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RateEstimateByCarrierIds':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The rate_estimate_by_carrier_ids of this RateEstimateByCarrierIds.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def carrier_ids(self):
        """Gets the carrier_ids of this RateEstimateByCarrierIds.

        Array of Carrier Ids

        :return: The carrier_ids of this RateEstimateByCarrierIds.
        :rtype: List[str]
        """
        return self._carrier_ids

    @carrier_ids.setter
    def carrier_ids(self, carrier_ids):
        """Sets the carrier_ids of this RateEstimateByCarrierIds.

        Array of Carrier Ids

        :param carrier_ids: The carrier_ids of this RateEstimateByCarrierIds.
        :type carrier_ids: List[str]
        """
        if carrier_ids is not None and len(carrier_ids) < 1:
            raise ValueError("Invalid value for `carrier_ids`, number of items must be greater than or equal to `1`")

        self._carrier_ids = carrier_ids
