# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.alternative_identifier import AlternativeIdentifier
from openapi_server.models.display_scheme import DisplayScheme
from openapi_server.models.label_charge_event import LabelChargeEvent
from openapi_server.models.label_download import LabelDownload
from openapi_server.models.label_download_type import LabelDownloadType
from openapi_server.models.label_format import LabelFormat
from openapi_server.models.label_layout import LabelLayout
from openapi_server.models.label_status import LabelStatus
from openapi_server.models.link import Link
from openapi_server.models.monetary_value import MonetaryValue
from openapi_server.models.package import Package
from openapi_server.models.shipment import Shipment
from openapi_server.models.tracking_status import TrackingStatus
from openapi_server.models.validate_address import ValidateAddress
import re
from openapi_server import util


class CreateLabelFromRateResponseBody(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alternative_identifiers: List[AlternativeIdentifier]=None, batch_id: str=None, carrier_code: str=None, carrier_id: str=None, charge_event: LabelChargeEvent=None, created_at: datetime=None, display_scheme: DisplayScheme=None, form_download: Link=None, insurance_claim: Link=None, insurance_cost: MonetaryValue=None, is_international: bool=None, is_return_label: bool=None, label_download: LabelDownload=None, label_download_type: LabelDownloadType=None, label_format: LabelFormat=None, label_id: str=None, label_image_id: str=None, label_layout: LabelLayout=None, outbound_label_id: str=None, package_code: str=None, packages: List[Package]=None, rma_number: str=None, service_code: str=None, ship_date: datetime=None, shipment: Shipment=None, shipment_cost: MonetaryValue=None, shipment_id: str=None, status: LabelStatus=None, test_label: bool=False, trackable: bool=None, tracking_number: str=None, tracking_status: TrackingStatus=None, validate_address: ValidateAddress=None, voided: bool=None, voided_at: datetime=None):
        """CreateLabelFromRateResponseBody - a model defined in OpenAPI

        :param alternative_identifiers: The alternative_identifiers of this CreateLabelFromRateResponseBody.
        :param batch_id: The batch_id of this CreateLabelFromRateResponseBody.
        :param carrier_code: The carrier_code of this CreateLabelFromRateResponseBody.
        :param carrier_id: The carrier_id of this CreateLabelFromRateResponseBody.
        :param charge_event: The charge_event of this CreateLabelFromRateResponseBody.
        :param created_at: The created_at of this CreateLabelFromRateResponseBody.
        :param display_scheme: The display_scheme of this CreateLabelFromRateResponseBody.
        :param form_download: The form_download of this CreateLabelFromRateResponseBody.
        :param insurance_claim: The insurance_claim of this CreateLabelFromRateResponseBody.
        :param insurance_cost: The insurance_cost of this CreateLabelFromRateResponseBody.
        :param is_international: The is_international of this CreateLabelFromRateResponseBody.
        :param is_return_label: The is_return_label of this CreateLabelFromRateResponseBody.
        :param label_download: The label_download of this CreateLabelFromRateResponseBody.
        :param label_download_type: The label_download_type of this CreateLabelFromRateResponseBody.
        :param label_format: The label_format of this CreateLabelFromRateResponseBody.
        :param label_id: The label_id of this CreateLabelFromRateResponseBody.
        :param label_image_id: The label_image_id of this CreateLabelFromRateResponseBody.
        :param label_layout: The label_layout of this CreateLabelFromRateResponseBody.
        :param outbound_label_id: The outbound_label_id of this CreateLabelFromRateResponseBody.
        :param package_code: The package_code of this CreateLabelFromRateResponseBody.
        :param packages: The packages of this CreateLabelFromRateResponseBody.
        :param rma_number: The rma_number of this CreateLabelFromRateResponseBody.
        :param service_code: The service_code of this CreateLabelFromRateResponseBody.
        :param ship_date: The ship_date of this CreateLabelFromRateResponseBody.
        :param shipment: The shipment of this CreateLabelFromRateResponseBody.
        :param shipment_cost: The shipment_cost of this CreateLabelFromRateResponseBody.
        :param shipment_id: The shipment_id of this CreateLabelFromRateResponseBody.
        :param status: The status of this CreateLabelFromRateResponseBody.
        :param test_label: The test_label of this CreateLabelFromRateResponseBody.
        :param trackable: The trackable of this CreateLabelFromRateResponseBody.
        :param tracking_number: The tracking_number of this CreateLabelFromRateResponseBody.
        :param tracking_status: The tracking_status of this CreateLabelFromRateResponseBody.
        :param validate_address: The validate_address of this CreateLabelFromRateResponseBody.
        :param voided: The voided of this CreateLabelFromRateResponseBody.
        :param voided_at: The voided_at of this CreateLabelFromRateResponseBody.
        """
        self.openapi_types = {
            'alternative_identifiers': List[AlternativeIdentifier],
            'batch_id': str,
            'carrier_code': str,
            'carrier_id': str,
            'charge_event': LabelChargeEvent,
            'created_at': datetime,
            'display_scheme': DisplayScheme,
            'form_download': Link,
            'insurance_claim': Link,
            'insurance_cost': MonetaryValue,
            'is_international': bool,
            'is_return_label': bool,
            'label_download': LabelDownload,
            'label_download_type': LabelDownloadType,
            'label_format': LabelFormat,
            'label_id': str,
            'label_image_id': str,
            'label_layout': LabelLayout,
            'outbound_label_id': str,
            'package_code': str,
            'packages': List[Package],
            'rma_number': str,
            'service_code': str,
            'ship_date': datetime,
            'shipment': Shipment,
            'shipment_cost': MonetaryValue,
            'shipment_id': str,
            'status': LabelStatus,
            'test_label': bool,
            'trackable': bool,
            'tracking_number': str,
            'tracking_status': TrackingStatus,
            'validate_address': ValidateAddress,
            'voided': bool,
            'voided_at': datetime
        }

        self.attribute_map = {
            'alternative_identifiers': 'alternative_identifiers',
            'batch_id': 'batch_id',
            'carrier_code': 'carrier_code',
            'carrier_id': 'carrier_id',
            'charge_event': 'charge_event',
            'created_at': 'created_at',
            'display_scheme': 'display_scheme',
            'form_download': 'form_download',
            'insurance_claim': 'insurance_claim',
            'insurance_cost': 'insurance_cost',
            'is_international': 'is_international',
            'is_return_label': 'is_return_label',
            'label_download': 'label_download',
            'label_download_type': 'label_download_type',
            'label_format': 'label_format',
            'label_id': 'label_id',
            'label_image_id': 'label_image_id',
            'label_layout': 'label_layout',
            'outbound_label_id': 'outbound_label_id',
            'package_code': 'package_code',
            'packages': 'packages',
            'rma_number': 'rma_number',
            'service_code': 'service_code',
            'ship_date': 'ship_date',
            'shipment': 'shipment',
            'shipment_cost': 'shipment_cost',
            'shipment_id': 'shipment_id',
            'status': 'status',
            'test_label': 'test_label',
            'trackable': 'trackable',
            'tracking_number': 'tracking_number',
            'tracking_status': 'tracking_status',
            'validate_address': 'validate_address',
            'voided': 'voided',
            'voided_at': 'voided_at'
        }

        self._alternative_identifiers = alternative_identifiers
        self._batch_id = batch_id
        self._carrier_code = carrier_code
        self._carrier_id = carrier_id
        self._charge_event = charge_event
        self._created_at = created_at
        self._display_scheme = display_scheme
        self._form_download = form_download
        self._insurance_claim = insurance_claim
        self._insurance_cost = insurance_cost
        self._is_international = is_international
        self._is_return_label = is_return_label
        self._label_download = label_download
        self._label_download_type = label_download_type
        self._label_format = label_format
        self._label_id = label_id
        self._label_image_id = label_image_id
        self._label_layout = label_layout
        self._outbound_label_id = outbound_label_id
        self._package_code = package_code
        self._packages = packages
        self._rma_number = rma_number
        self._service_code = service_code
        self._ship_date = ship_date
        self._shipment = shipment
        self._shipment_cost = shipment_cost
        self._shipment_id = shipment_id
        self._status = status
        self._test_label = test_label
        self._trackable = trackable
        self._tracking_number = tracking_number
        self._tracking_status = tracking_status
        self._validate_address = validate_address
        self._voided = voided
        self._voided_at = voided_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateLabelFromRateResponseBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The create_label_from_rate_response_body of this CreateLabelFromRateResponseBody.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alternative_identifiers(self):
        """Gets the alternative_identifiers of this CreateLabelFromRateResponseBody.

        Additional information some carriers may provide by which to identify a given label in their system.  

        :return: The alternative_identifiers of this CreateLabelFromRateResponseBody.
        :rtype: List[AlternativeIdentifier]
        """
        return self._alternative_identifiers

    @alternative_identifiers.setter
    def alternative_identifiers(self, alternative_identifiers):
        """Sets the alternative_identifiers of this CreateLabelFromRateResponseBody.

        Additional information some carriers may provide by which to identify a given label in their system.  

        :param alternative_identifiers: The alternative_identifiers of this CreateLabelFromRateResponseBody.
        :type alternative_identifiers: List[AlternativeIdentifier]
        """

        self._alternative_identifiers = alternative_identifiers

    @property
    def batch_id(self):
        """Gets the batch_id of this CreateLabelFromRateResponseBody.

        If this label was created as part of a [batch](https://www.shipengine.com/docs/labels/bulk/), then this is the unique ID of that batch. 

        :return: The batch_id of this CreateLabelFromRateResponseBody.
        :rtype: str
        """
        return self._batch_id

    @batch_id.setter
    def batch_id(self, batch_id):
        """Sets the batch_id of this CreateLabelFromRateResponseBody.

        If this label was created as part of a [batch](https://www.shipengine.com/docs/labels/bulk/), then this is the unique ID of that batch. 

        :param batch_id: The batch_id of this CreateLabelFromRateResponseBody.
        :type batch_id: str
        """
        if batch_id is not None and len(batch_id) > 25:
            raise ValueError("Invalid value for `batch_id`, length must be less than or equal to `25`")
        if batch_id is not None and len(batch_id) < 1:
            raise ValueError("Invalid value for `batch_id`, length must be greater than or equal to `1`")
        if batch_id is not None and not re.search(r'^se(-[a-z0-9]+)+$', batch_id):
            raise ValueError("Invalid value for `batch_id`, must be a follow pattern or equal to `/^se(-[a-z0-9]+)+$/`")

        self._batch_id = batch_id

    @property
    def carrier_code(self):
        """Gets the carrier_code of this CreateLabelFromRateResponseBody.

        The [shipping carrier](https://www.shipengine.com/docs/carriers/setup/) who will ship the package, such as `fedex`, `dhl_express`, `stamps_com`, etc. 

        :return: The carrier_code of this CreateLabelFromRateResponseBody.
        :rtype: str
        """
        return self._carrier_code

    @carrier_code.setter
    def carrier_code(self, carrier_code):
        """Sets the carrier_code of this CreateLabelFromRateResponseBody.

        The [shipping carrier](https://www.shipengine.com/docs/carriers/setup/) who will ship the package, such as `fedex`, `dhl_express`, `stamps_com`, etc. 

        :param carrier_code: The carrier_code of this CreateLabelFromRateResponseBody.
        :type carrier_code: str
        """
        if carrier_code is not None and not re.search(r'^[a-z0-9]+(_[a-z0-9]+)*$', carrier_code):
            raise ValueError("Invalid value for `carrier_code`, must be a follow pattern or equal to `/^[a-z0-9]+(_[a-z0-9]+)*$/`")

        self._carrier_code = carrier_code

    @property
    def carrier_id(self):
        """Gets the carrier_id of this CreateLabelFromRateResponseBody.

        The unique ID of the [carrier account](https://www.shipengine.com/docs/carriers/setup/) that was used to create this label 

        :return: The carrier_id of this CreateLabelFromRateResponseBody.
        :rtype: str
        """
        return self._carrier_id

    @carrier_id.setter
    def carrier_id(self, carrier_id):
        """Sets the carrier_id of this CreateLabelFromRateResponseBody.

        The unique ID of the [carrier account](https://www.shipengine.com/docs/carriers/setup/) that was used to create this label 

        :param carrier_id: The carrier_id of this CreateLabelFromRateResponseBody.
        :type carrier_id: str
        """
        if carrier_id is not None and len(carrier_id) > 25:
            raise ValueError("Invalid value for `carrier_id`, length must be less than or equal to `25`")
        if carrier_id is not None and len(carrier_id) < 1:
            raise ValueError("Invalid value for `carrier_id`, length must be greater than or equal to `1`")
        if carrier_id is not None and not re.search(r'^se(-[a-z0-9]+)+$', carrier_id):
            raise ValueError("Invalid value for `carrier_id`, must be a follow pattern or equal to `/^se(-[a-z0-9]+)+$/`")

        self._carrier_id = carrier_id

    @property
    def charge_event(self):
        """Gets the charge_event of this CreateLabelFromRateResponseBody.

        The label charge event. 

        :return: The charge_event of this CreateLabelFromRateResponseBody.
        :rtype: LabelChargeEvent
        """
        return self._charge_event

    @charge_event.setter
    def charge_event(self, charge_event):
        """Sets the charge_event of this CreateLabelFromRateResponseBody.

        The label charge event. 

        :param charge_event: The charge_event of this CreateLabelFromRateResponseBody.
        :type charge_event: LabelChargeEvent
        """

        self._charge_event = charge_event

    @property
    def created_at(self):
        """Gets the created_at of this CreateLabelFromRateResponseBody.

        The date and time that the label was created in ShipEngine.

        :return: The created_at of this CreateLabelFromRateResponseBody.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this CreateLabelFromRateResponseBody.

        The date and time that the label was created in ShipEngine.

        :param created_at: The created_at of this CreateLabelFromRateResponseBody.
        :type created_at: datetime
        """
        if created_at is not None and not re.search(r'^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d+)?(Z|[-+]\d{2}:\d{2})$', created_at):
            raise ValueError("Invalid value for `created_at`, must be a follow pattern or equal to `/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d+)?(Z|[-+]\d{2}:\d{2})$/`")

        self._created_at = created_at

    @property
    def display_scheme(self):
        """Gets the display_scheme of this CreateLabelFromRateResponseBody.

        The display format that the label should be shown in.

        :return: The display_scheme of this CreateLabelFromRateResponseBody.
        :rtype: DisplayScheme
        """
        return self._display_scheme

    @display_scheme.setter
    def display_scheme(self, display_scheme):
        """Sets the display_scheme of this CreateLabelFromRateResponseBody.

        The display format that the label should be shown in.

        :param display_scheme: The display_scheme of this CreateLabelFromRateResponseBody.
        :type display_scheme: DisplayScheme
        """

        self._display_scheme = display_scheme

    @property
    def form_download(self):
        """Gets the form_download of this CreateLabelFromRateResponseBody.

        The link to download the customs form (a.k.a. commercial invoice) for this shipment, if any.  Forms are in PDF format. This field is null if the shipment does not require a customs form, or if the carrier does not support it. 

        :return: The form_download of this CreateLabelFromRateResponseBody.
        :rtype: Link
        """
        return self._form_download

    @form_download.setter
    def form_download(self, form_download):
        """Sets the form_download of this CreateLabelFromRateResponseBody.

        The link to download the customs form (a.k.a. commercial invoice) for this shipment, if any.  Forms are in PDF format. This field is null if the shipment does not require a customs form, or if the carrier does not support it. 

        :param form_download: The form_download of this CreateLabelFromRateResponseBody.
        :type form_download: Link
        """

        self._form_download = form_download

    @property
    def insurance_claim(self):
        """Gets the insurance_claim of this CreateLabelFromRateResponseBody.

        The link to submit an insurance claim for the shipment.  This field is null if the shipment is not insured or if the insurance provider does not support online claim submission. 

        :return: The insurance_claim of this CreateLabelFromRateResponseBody.
        :rtype: Link
        """
        return self._insurance_claim

    @insurance_claim.setter
    def insurance_claim(self, insurance_claim):
        """Sets the insurance_claim of this CreateLabelFromRateResponseBody.

        The link to submit an insurance claim for the shipment.  This field is null if the shipment is not insured or if the insurance provider does not support online claim submission. 

        :param insurance_claim: The insurance_claim of this CreateLabelFromRateResponseBody.
        :type insurance_claim: Link
        """

        self._insurance_claim = insurance_claim

    @property
    def insurance_cost(self):
        """Gets the insurance_cost of this CreateLabelFromRateResponseBody.

        The insurance cost for this package.  Add this to the `shipment_cost` field to get the total cost. 

        :return: The insurance_cost of this CreateLabelFromRateResponseBody.
        :rtype: MonetaryValue
        """
        return self._insurance_cost

    @insurance_cost.setter
    def insurance_cost(self, insurance_cost):
        """Sets the insurance_cost of this CreateLabelFromRateResponseBody.

        The insurance cost for this package.  Add this to the `shipment_cost` field to get the total cost. 

        :param insurance_cost: The insurance_cost of this CreateLabelFromRateResponseBody.
        :type insurance_cost: MonetaryValue
        """

        self._insurance_cost = insurance_cost

    @property
    def is_international(self):
        """Gets the is_international of this CreateLabelFromRateResponseBody.

        Indicates whether this is an international shipment.  That is, the originating country and destination country are different. 

        :return: The is_international of this CreateLabelFromRateResponseBody.
        :rtype: bool
        """
        return self._is_international

    @is_international.setter
    def is_international(self, is_international):
        """Sets the is_international of this CreateLabelFromRateResponseBody.

        Indicates whether this is an international shipment.  That is, the originating country and destination country are different. 

        :param is_international: The is_international of this CreateLabelFromRateResponseBody.
        :type is_international: bool
        """

        self._is_international = is_international

    @property
    def is_return_label(self):
        """Gets the is_return_label of this CreateLabelFromRateResponseBody.

        Indicates whether this is a return label.  You may also want to set the `rma_number` so you know what is being returned. 

        :return: The is_return_label of this CreateLabelFromRateResponseBody.
        :rtype: bool
        """
        return self._is_return_label

    @is_return_label.setter
    def is_return_label(self, is_return_label):
        """Sets the is_return_label of this CreateLabelFromRateResponseBody.

        Indicates whether this is a return label.  You may also want to set the `rma_number` so you know what is being returned. 

        :param is_return_label: The is_return_label of this CreateLabelFromRateResponseBody.
        :type is_return_label: bool
        """

        self._is_return_label = is_return_label

    @property
    def label_download(self):
        """Gets the label_download of this CreateLabelFromRateResponseBody.


        :return: The label_download of this CreateLabelFromRateResponseBody.
        :rtype: LabelDownload
        """
        return self._label_download

    @label_download.setter
    def label_download(self, label_download):
        """Sets the label_download of this CreateLabelFromRateResponseBody.


        :param label_download: The label_download of this CreateLabelFromRateResponseBody.
        :type label_download: LabelDownload
        """

        self._label_download = label_download

    @property
    def label_download_type(self):
        """Gets the label_download_type of this CreateLabelFromRateResponseBody.


        :return: The label_download_type of this CreateLabelFromRateResponseBody.
        :rtype: LabelDownloadType
        """
        return self._label_download_type

    @label_download_type.setter
    def label_download_type(self, label_download_type):
        """Sets the label_download_type of this CreateLabelFromRateResponseBody.


        :param label_download_type: The label_download_type of this CreateLabelFromRateResponseBody.
        :type label_download_type: LabelDownloadType
        """

        self._label_download_type = label_download_type

    @property
    def label_format(self):
        """Gets the label_format of this CreateLabelFromRateResponseBody.

        The file format that you want the label to be in.  We recommend `pdf` format because it is supported by all carriers, whereas some carriers do not support the `png` or `zpl` formats. 

        :return: The label_format of this CreateLabelFromRateResponseBody.
        :rtype: LabelFormat
        """
        return self._label_format

    @label_format.setter
    def label_format(self, label_format):
        """Sets the label_format of this CreateLabelFromRateResponseBody.

        The file format that you want the label to be in.  We recommend `pdf` format because it is supported by all carriers, whereas some carriers do not support the `png` or `zpl` formats. 

        :param label_format: The label_format of this CreateLabelFromRateResponseBody.
        :type label_format: LabelFormat
        """

        self._label_format = label_format

    @property
    def label_id(self):
        """Gets the label_id of this CreateLabelFromRateResponseBody.

        A string that uniquely identifies the label. This ID is generated by ShipEngine when the label is created. 

        :return: The label_id of this CreateLabelFromRateResponseBody.
        :rtype: str
        """
        return self._label_id

    @label_id.setter
    def label_id(self, label_id):
        """Sets the label_id of this CreateLabelFromRateResponseBody.

        A string that uniquely identifies the label. This ID is generated by ShipEngine when the label is created. 

        :param label_id: The label_id of this CreateLabelFromRateResponseBody.
        :type label_id: str
        """
        if label_id is not None and len(label_id) > 25:
            raise ValueError("Invalid value for `label_id`, length must be less than or equal to `25`")
        if label_id is not None and len(label_id) < 1:
            raise ValueError("Invalid value for `label_id`, length must be greater than or equal to `1`")
        if label_id is not None and not re.search(r'^se(-[a-z0-9]+)+$', label_id):
            raise ValueError("Invalid value for `label_id`, must be a follow pattern or equal to `/^se(-[a-z0-9]+)+$/`")

        self._label_id = label_id

    @property
    def label_image_id(self):
        """Gets the label_image_id of this CreateLabelFromRateResponseBody.

        The label image resource that was used to create a custom label image.

        :return: The label_image_id of this CreateLabelFromRateResponseBody.
        :rtype: str
        """
        return self._label_image_id

    @label_image_id.setter
    def label_image_id(self, label_image_id):
        """Sets the label_image_id of this CreateLabelFromRateResponseBody.

        The label image resource that was used to create a custom label image.

        :param label_image_id: The label_image_id of this CreateLabelFromRateResponseBody.
        :type label_image_id: str
        """
        if label_image_id is not None and len(label_image_id) < 4:
            raise ValueError("Invalid value for `label_image_id`, length must be greater than or equal to `4`")

        self._label_image_id = label_image_id

    @property
    def label_layout(self):
        """Gets the label_layout of this CreateLabelFromRateResponseBody.

        The layout (size) that you want the label to be in.  The `label_format` determines which sizes are allowed.  `4x6` is supported for all label formats, whereas `letter` (8.5\" x 11\") is only supported for `pdf` format. 

        :return: The label_layout of this CreateLabelFromRateResponseBody.
        :rtype: LabelLayout
        """
        return self._label_layout

    @label_layout.setter
    def label_layout(self, label_layout):
        """Sets the label_layout of this CreateLabelFromRateResponseBody.

        The layout (size) that you want the label to be in.  The `label_format` determines which sizes are allowed.  `4x6` is supported for all label formats, whereas `letter` (8.5\" x 11\") is only supported for `pdf` format. 

        :param label_layout: The label_layout of this CreateLabelFromRateResponseBody.
        :type label_layout: LabelLayout
        """

        self._label_layout = label_layout

    @property
    def outbound_label_id(self):
        """Gets the outbound_label_id of this CreateLabelFromRateResponseBody.

        The `label_id` of the original (outgoing) label that the return label is for. This associates the two labels together, which is required by some carriers. 

        :return: The outbound_label_id of this CreateLabelFromRateResponseBody.
        :rtype: str
        """
        return self._outbound_label_id

    @outbound_label_id.setter
    def outbound_label_id(self, outbound_label_id):
        """Sets the outbound_label_id of this CreateLabelFromRateResponseBody.

        The `label_id` of the original (outgoing) label that the return label is for. This associates the two labels together, which is required by some carriers. 

        :param outbound_label_id: The outbound_label_id of this CreateLabelFromRateResponseBody.
        :type outbound_label_id: str
        """
        if outbound_label_id is not None and len(outbound_label_id) > 25:
            raise ValueError("Invalid value for `outbound_label_id`, length must be less than or equal to `25`")
        if outbound_label_id is not None and len(outbound_label_id) < 1:
            raise ValueError("Invalid value for `outbound_label_id`, length must be greater than or equal to `1`")
        if outbound_label_id is not None and not re.search(r'^se(-[a-z0-9]+)+$', outbound_label_id):
            raise ValueError("Invalid value for `outbound_label_id`, must be a follow pattern or equal to `/^se(-[a-z0-9]+)+$/`")

        self._outbound_label_id = outbound_label_id

    @property
    def package_code(self):
        """Gets the package_code of this CreateLabelFromRateResponseBody.

        The [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  The code `package` indicates a custom or unknown package type. 

        :return: The package_code of this CreateLabelFromRateResponseBody.
        :rtype: str
        """
        return self._package_code

    @package_code.setter
    def package_code(self, package_code):
        """Sets the package_code of this CreateLabelFromRateResponseBody.

        The [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  The code `package` indicates a custom or unknown package type. 

        :param package_code: The package_code of this CreateLabelFromRateResponseBody.
        :type package_code: str
        """
        if package_code is not None and not re.search(r'^[a-z0-9]+(_[a-z0-9]+)*$', package_code):
            raise ValueError("Invalid value for `package_code`, must be a follow pattern or equal to `/^[a-z0-9]+(_[a-z0-9]+)*$/`")

        self._package_code = package_code

    @property
    def packages(self):
        """Gets the packages of this CreateLabelFromRateResponseBody.

        The label's package(s).  > **Note:** Some carriers only allow one package per label.  If you attempt to create a multi-package label for a carrier that doesn't allow it, an error will be returned. 

        :return: The packages of this CreateLabelFromRateResponseBody.
        :rtype: List[Package]
        """
        return self._packages

    @packages.setter
    def packages(self, packages):
        """Sets the packages of this CreateLabelFromRateResponseBody.

        The label's package(s).  > **Note:** Some carriers only allow one package per label.  If you attempt to create a multi-package label for a carrier that doesn't allow it, an error will be returned. 

        :param packages: The packages of this CreateLabelFromRateResponseBody.
        :type packages: List[Package]
        """

        self._packages = packages

    @property
    def rma_number(self):
        """Gets the rma_number of this CreateLabelFromRateResponseBody.

        An optional Return Merchandise Authorization number.  This field is useful for return labels.  You can set it to any string value. 

        :return: The rma_number of this CreateLabelFromRateResponseBody.
        :rtype: str
        """
        return self._rma_number

    @rma_number.setter
    def rma_number(self, rma_number):
        """Sets the rma_number of this CreateLabelFromRateResponseBody.

        An optional Return Merchandise Authorization number.  This field is useful for return labels.  You can set it to any string value. 

        :param rma_number: The rma_number of this CreateLabelFromRateResponseBody.
        :type rma_number: str
        """

        self._rma_number = rma_number

    @property
    def service_code(self):
        """Gets the service_code of this CreateLabelFromRateResponseBody.

        The [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/) used to ship the package, such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc. 

        :return: The service_code of this CreateLabelFromRateResponseBody.
        :rtype: str
        """
        return self._service_code

    @service_code.setter
    def service_code(self, service_code):
        """Sets the service_code of this CreateLabelFromRateResponseBody.

        The [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/) used to ship the package, such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc. 

        :param service_code: The service_code of this CreateLabelFromRateResponseBody.
        :type service_code: str
        """
        if service_code is not None and not re.search(r'^[a-z0-9]+(_[a-z0-9-]+)* ?$', service_code):
            raise ValueError("Invalid value for `service_code`, must be a follow pattern or equal to `/^[a-z0-9]+(_[a-z0-9-]+)* ?$/`")

        self._service_code = service_code

    @property
    def ship_date(self):
        """Gets the ship_date of this CreateLabelFromRateResponseBody.

        The date that the package was (or will be) shippped.  ShipEngine will take the day of week into consideration. For example, if the carrier does not operate on Sundays, then a package that would have shipped on Sunday will ship on Monday instead. 

        :return: The ship_date of this CreateLabelFromRateResponseBody.
        :rtype: datetime
        """
        return self._ship_date

    @ship_date.setter
    def ship_date(self, ship_date):
        """Sets the ship_date of this CreateLabelFromRateResponseBody.

        The date that the package was (or will be) shippped.  ShipEngine will take the day of week into consideration. For example, if the carrier does not operate on Sundays, then a package that would have shipped on Sunday will ship on Monday instead. 

        :param ship_date: The ship_date of this CreateLabelFromRateResponseBody.
        :type ship_date: datetime
        """
        if ship_date is not None and not re.search(r'^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?(Z|[-+]\d{2}:\d{2}))?$', ship_date):
            raise ValueError("Invalid value for `ship_date`, must be a follow pattern or equal to `/^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?(Z|[-+]\d{2}:\d{2}))?$/`")

        self._ship_date = ship_date

    @property
    def shipment(self):
        """Gets the shipment of this CreateLabelFromRateResponseBody.

        The shipment information used to generate the label

        :return: The shipment of this CreateLabelFromRateResponseBody.
        :rtype: Shipment
        """
        return self._shipment

    @shipment.setter
    def shipment(self, shipment):
        """Sets the shipment of this CreateLabelFromRateResponseBody.

        The shipment information used to generate the label

        :param shipment: The shipment of this CreateLabelFromRateResponseBody.
        :type shipment: Shipment
        """

        self._shipment = shipment

    @property
    def shipment_cost(self):
        """Gets the shipment_cost of this CreateLabelFromRateResponseBody.

        The cost of shipping, delivery confirmation, and other carrier charges.  This amount **does not** include insurance costs. 

        :return: The shipment_cost of this CreateLabelFromRateResponseBody.
        :rtype: MonetaryValue
        """
        return self._shipment_cost

    @shipment_cost.setter
    def shipment_cost(self, shipment_cost):
        """Sets the shipment_cost of this CreateLabelFromRateResponseBody.

        The cost of shipping, delivery confirmation, and other carrier charges.  This amount **does not** include insurance costs. 

        :param shipment_cost: The shipment_cost of this CreateLabelFromRateResponseBody.
        :type shipment_cost: MonetaryValue
        """

        self._shipment_cost = shipment_cost

    @property
    def shipment_id(self):
        """Gets the shipment_id of this CreateLabelFromRateResponseBody.

        The shipment that this label is for.  ShipEngine can create a shipment for you automatically when you [create a label](https://www.shipengine.com/docs/labels/create-a-label/), or you can [create your own shipment](https://www.shipengine.com/docs/shipping/create-a-shipment/) and then [use it to print a label](https://www.shipengine.com/docs/labels/create-from-shipment/) 

        :return: The shipment_id of this CreateLabelFromRateResponseBody.
        :rtype: str
        """
        return self._shipment_id

    @shipment_id.setter
    def shipment_id(self, shipment_id):
        """Sets the shipment_id of this CreateLabelFromRateResponseBody.

        The shipment that this label is for.  ShipEngine can create a shipment for you automatically when you [create a label](https://www.shipengine.com/docs/labels/create-a-label/), or you can [create your own shipment](https://www.shipengine.com/docs/shipping/create-a-shipment/) and then [use it to print a label](https://www.shipengine.com/docs/labels/create-from-shipment/) 

        :param shipment_id: The shipment_id of this CreateLabelFromRateResponseBody.
        :type shipment_id: str
        """
        if shipment_id is not None and len(shipment_id) > 25:
            raise ValueError("Invalid value for `shipment_id`, length must be less than or equal to `25`")
        if shipment_id is not None and len(shipment_id) < 1:
            raise ValueError("Invalid value for `shipment_id`, length must be greater than or equal to `1`")
        if shipment_id is not None and not re.search(r'^se(-[a-z0-9]+)+$', shipment_id):
            raise ValueError("Invalid value for `shipment_id`, must be a follow pattern or equal to `/^se(-[a-z0-9]+)+$/`")

        self._shipment_id = shipment_id

    @property
    def status(self):
        """Gets the status of this CreateLabelFromRateResponseBody.


        :return: The status of this CreateLabelFromRateResponseBody.
        :rtype: LabelStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this CreateLabelFromRateResponseBody.


        :param status: The status of this CreateLabelFromRateResponseBody.
        :type status: LabelStatus
        """

        self._status = status

    @property
    def test_label(self):
        """Gets the test_label of this CreateLabelFromRateResponseBody.

        Indicate if this label is being used only for testing purposes. If true, then no charge will be added to your account.

        :return: The test_label of this CreateLabelFromRateResponseBody.
        :rtype: bool
        """
        return self._test_label

    @test_label.setter
    def test_label(self, test_label):
        """Sets the test_label of this CreateLabelFromRateResponseBody.

        Indicate if this label is being used only for testing purposes. If true, then no charge will be added to your account.

        :param test_label: The test_label of this CreateLabelFromRateResponseBody.
        :type test_label: bool
        """

        self._test_label = test_label

    @property
    def trackable(self):
        """Gets the trackable of this CreateLabelFromRateResponseBody.

        Indicates whether the shipment is trackable, in which case the `tracking_status` field will reflect the current status and each package will have a `tracking_number`. 

        :return: The trackable of this CreateLabelFromRateResponseBody.
        :rtype: bool
        """
        return self._trackable

    @trackable.setter
    def trackable(self, trackable):
        """Sets the trackable of this CreateLabelFromRateResponseBody.

        Indicates whether the shipment is trackable, in which case the `tracking_status` field will reflect the current status and each package will have a `tracking_number`. 

        :param trackable: The trackable of this CreateLabelFromRateResponseBody.
        :type trackable: bool
        """

        self._trackable = trackable

    @property
    def tracking_number(self):
        """Gets the tracking_number of this CreateLabelFromRateResponseBody.

        The tracking number for the package. Tracking number formats vary across carriers.

        :return: The tracking_number of this CreateLabelFromRateResponseBody.
        :rtype: str
        """
        return self._tracking_number

    @tracking_number.setter
    def tracking_number(self, tracking_number):
        """Sets the tracking_number of this CreateLabelFromRateResponseBody.

        The tracking number for the package. Tracking number formats vary across carriers.

        :param tracking_number: The tracking_number of this CreateLabelFromRateResponseBody.
        :type tracking_number: str
        """
        if tracking_number is not None and len(tracking_number) < 1:
            raise ValueError("Invalid value for `tracking_number`, length must be greater than or equal to `1`")

        self._tracking_number = tracking_number

    @property
    def tracking_status(self):
        """Gets the tracking_status of this CreateLabelFromRateResponseBody.

        The current status of the package, such as `in_transit` or `delivered`

        :return: The tracking_status of this CreateLabelFromRateResponseBody.
        :rtype: TrackingStatus
        """
        return self._tracking_status

    @tracking_status.setter
    def tracking_status(self, tracking_status):
        """Sets the tracking_status of this CreateLabelFromRateResponseBody.

        The current status of the package, such as `in_transit` or `delivered`

        :param tracking_status: The tracking_status of this CreateLabelFromRateResponseBody.
        :type tracking_status: TrackingStatus
        """

        self._tracking_status = tracking_status

    @property
    def validate_address(self):
        """Gets the validate_address of this CreateLabelFromRateResponseBody.


        :return: The validate_address of this CreateLabelFromRateResponseBody.
        :rtype: ValidateAddress
        """
        return self._validate_address

    @validate_address.setter
    def validate_address(self, validate_address):
        """Sets the validate_address of this CreateLabelFromRateResponseBody.


        :param validate_address: The validate_address of this CreateLabelFromRateResponseBody.
        :type validate_address: ValidateAddress
        """

        self._validate_address = validate_address

    @property
    def voided(self):
        """Gets the voided of this CreateLabelFromRateResponseBody.

        Indicates whether the label has been [voided](https://www.shipengine.com/docs/labels/voiding/) 

        :return: The voided of this CreateLabelFromRateResponseBody.
        :rtype: bool
        """
        return self._voided

    @voided.setter
    def voided(self, voided):
        """Sets the voided of this CreateLabelFromRateResponseBody.

        Indicates whether the label has been [voided](https://www.shipengine.com/docs/labels/voiding/) 

        :param voided: The voided of this CreateLabelFromRateResponseBody.
        :type voided: bool
        """

        self._voided = voided

    @property
    def voided_at(self):
        """Gets the voided_at of this CreateLabelFromRateResponseBody.

        The date and time that the label was [voided](https://www.shipengine.com/docs/labels/voiding/), or `null` if the label has not been voided 

        :return: The voided_at of this CreateLabelFromRateResponseBody.
        :rtype: datetime
        """
        return self._voided_at

    @voided_at.setter
    def voided_at(self, voided_at):
        """Sets the voided_at of this CreateLabelFromRateResponseBody.

        The date and time that the label was [voided](https://www.shipengine.com/docs/labels/voiding/), or `null` if the label has not been voided 

        :param voided_at: The voided_at of this CreateLabelFromRateResponseBody.
        :type voided_at: datetime
        """
        if voided_at is not None and not re.search(r'^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d+)?(Z|[-+]\d{2}:\d{2})$', voided_at):
            raise ValueError("Invalid value for `voided_at`, must be a follow pattern or equal to `/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d+)?(Z|[-+]\d{2}:\d{2})$/`")

        self._voided_at = voided_at
