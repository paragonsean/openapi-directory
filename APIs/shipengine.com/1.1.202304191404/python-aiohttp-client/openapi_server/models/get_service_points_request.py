# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_service_points_request_body import GetServicePointsRequestBody
from openapi_server.models.get_service_points_request_body_address import GetServicePointsRequestBodyAddress
from openapi_server.models.get_service_points_request_body_providers_inner import GetServicePointsRequestBodyProvidersInner
from openapi_server import util


class GetServicePointsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: GetServicePointsRequestBodyAddress=None, address_query: str=None, lat: float=None, long: float=None, max_results: int=None, providers: List[GetServicePointsRequestBodyProvidersInner]=None, radius: int=None):
        """GetServicePointsRequest - a model defined in OpenAPI

        :param address: The address of this GetServicePointsRequest.
        :param address_query: The address_query of this GetServicePointsRequest.
        :param lat: The lat of this GetServicePointsRequest.
        :param long: The long of this GetServicePointsRequest.
        :param max_results: The max_results of this GetServicePointsRequest.
        :param providers: The providers of this GetServicePointsRequest.
        :param radius: The radius of this GetServicePointsRequest.
        """
        self.openapi_types = {
            'address': GetServicePointsRequestBodyAddress,
            'address_query': str,
            'lat': float,
            'long': float,
            'max_results': int,
            'providers': List[GetServicePointsRequestBodyProvidersInner],
            'radius': int
        }

        self.attribute_map = {
            'address': 'address',
            'address_query': 'address_query',
            'lat': 'lat',
            'long': 'long',
            'max_results': 'max_results',
            'providers': 'providers',
            'radius': 'radius'
        }

        self._address = address
        self._address_query = address_query
        self._lat = lat
        self._long = long
        self._max_results = max_results
        self._providers = providers
        self._radius = radius

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetServicePointsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The get_service_points_request of this GetServicePointsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this GetServicePointsRequest.


        :return: The address of this GetServicePointsRequest.
        :rtype: GetServicePointsRequestBodyAddress
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this GetServicePointsRequest.


        :param address: The address of this GetServicePointsRequest.
        :type address: GetServicePointsRequestBodyAddress
        """

        self._address = address

    @property
    def address_query(self):
        """Gets the address_query of this GetServicePointsRequest.

        Unstructured text to search for service points by.

        :return: The address_query of this GetServicePointsRequest.
        :rtype: str
        """
        return self._address_query

    @address_query.setter
    def address_query(self, address_query):
        """Sets the address_query of this GetServicePointsRequest.

        Unstructured text to search for service points by.

        :param address_query: The address_query of this GetServicePointsRequest.
        :type address_query: str
        """

        self._address_query = address_query

    @property
    def lat(self):
        """Gets the lat of this GetServicePointsRequest.

        The latitude of the point. Represented as signed degrees. Required if long is provided. http://www.geomidpoint.com/latlon.html

        :return: The lat of this GetServicePointsRequest.
        :rtype: float
        """
        return self._lat

    @lat.setter
    def lat(self, lat):
        """Sets the lat of this GetServicePointsRequest.

        The latitude of the point. Represented as signed degrees. Required if long is provided. http://www.geomidpoint.com/latlon.html

        :param lat: The lat of this GetServicePointsRequest.
        :type lat: float
        """

        self._lat = lat

    @property
    def long(self):
        """Gets the long of this GetServicePointsRequest.

        The longitude of the point. Represented as signed degrees. Required if lat is provided. http://www.geomidpoint.com/latlon.html

        :return: The long of this GetServicePointsRequest.
        :rtype: float
        """
        return self._long

    @long.setter
    def long(self, long):
        """Sets the long of this GetServicePointsRequest.

        The longitude of the point. Represented as signed degrees. Required if lat is provided. http://www.geomidpoint.com/latlon.html

        :param long: The long of this GetServicePointsRequest.
        :type long: float
        """

        self._long = long

    @property
    def max_results(self):
        """Gets the max_results of this GetServicePointsRequest.

        The maximum number of service points to return

        :return: The max_results of this GetServicePointsRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this GetServicePointsRequest.

        The maximum number of service points to return

        :param max_results: The max_results of this GetServicePointsRequest.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def providers(self):
        """Gets the providers of this GetServicePointsRequest.

        An array of shipping service providers and service codes

        :return: The providers of this GetServicePointsRequest.
        :rtype: List[GetServicePointsRequestBodyProvidersInner]
        """
        return self._providers

    @providers.setter
    def providers(self, providers):
        """Sets the providers of this GetServicePointsRequest.

        An array of shipping service providers and service codes

        :param providers: The providers of this GetServicePointsRequest.
        :type providers: List[GetServicePointsRequestBodyProvidersInner]
        """
        if providers is None:
            raise ValueError("Invalid value for `providers`, must not be `None`")

        self._providers = providers

    @property
    def radius(self):
        """Gets the radius of this GetServicePointsRequest.

        Search radius in kilometers

        :return: The radius of this GetServicePointsRequest.
        :rtype: int
        """
        return self._radius

    @radius.setter
    def radius(self, radius):
        """Sets the radius of this GetServicePointsRequest.

        Search radius in kilometers

        :param radius: The radius of this GetServicePointsRequest.
        :type radius: int
        """

        self._radius = radius
