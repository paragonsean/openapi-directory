# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class ConnectCarrierResponseBody(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, carrier_id: str=None):
        """ConnectCarrierResponseBody - a model defined in OpenAPI

        :param carrier_id: The carrier_id of this ConnectCarrierResponseBody.
        """
        self.openapi_types = {
            'carrier_id': str
        }

        self.attribute_map = {
            'carrier_id': 'carrier_id'
        }

        self._carrier_id = carrier_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConnectCarrierResponseBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The connect_carrier_response_body of this ConnectCarrierResponseBody.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def carrier_id(self):
        """Gets the carrier_id of this ConnectCarrierResponseBody.

        A string that uniquely identifies the carrier

        :return: The carrier_id of this ConnectCarrierResponseBody.
        :rtype: str
        """
        return self._carrier_id

    @carrier_id.setter
    def carrier_id(self, carrier_id):
        """Sets the carrier_id of this ConnectCarrierResponseBody.

        A string that uniquely identifies the carrier

        :param carrier_id: The carrier_id of this ConnectCarrierResponseBody.
        :type carrier_id: str
        """
        if carrier_id is None:
            raise ValueError("Invalid value for `carrier_id`, must not be `None`")
        if carrier_id is not None and len(carrier_id) > 25:
            raise ValueError("Invalid value for `carrier_id`, length must be less than or equal to `25`")
        if carrier_id is not None and len(carrier_id) < 1:
            raise ValueError("Invalid value for `carrier_id`, length must be greater than or equal to `1`")
        if carrier_id is not None and not re.search(r'^se(-[a-z0-9]+)+$', carrier_id):
            raise ValueError("Invalid value for `carrier_id`, must be a follow pattern or equal to `/^se(-[a-z0-9]+)+$/`")

        self._carrier_id = carrier_id
