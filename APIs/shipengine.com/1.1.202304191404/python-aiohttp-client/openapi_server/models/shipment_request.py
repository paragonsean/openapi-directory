# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.address_validating_shipment import AddressValidatingShipment
from openapi_server import util


class ShipmentRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, shipment: AddressValidatingShipment=None):
        """ShipmentRequest - a model defined in OpenAPI

        :param shipment: The shipment of this ShipmentRequest.
        """
        self.openapi_types = {
            'shipment': AddressValidatingShipment
        }

        self.attribute_map = {
            'shipment': 'shipment'
        }

        self._shipment = shipment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ShipmentRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The shipment_request of this ShipmentRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def shipment(self):
        """Gets the shipment of this ShipmentRequest.

        The shipment object

        :return: The shipment of this ShipmentRequest.
        :rtype: AddressValidatingShipment
        """
        return self._shipment

    @shipment.setter
    def shipment(self, shipment):
        """Sets the shipment of this ShipmentRequest.

        The shipment object

        :param shipment: The shipment of this ShipmentRequest.
        :type shipment: AddressValidatingShipment
        """

        self._shipment = shipment
