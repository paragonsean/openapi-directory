/**
 * ShipEngine API
 * ShipEngine's easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.  Each of ShipEngine's features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.  ## Getting Started If you're new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics.  Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.  Here are some step-by-step **tutorials** to get you started:    - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)   - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)   - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)   - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)   ## Shipping Labels for Every Major Carrier ShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).   ## Real-Time Package Tracking With ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.   ## Compare Shipping Costs Across Carriers Make sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don't know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.   ## Worldwide Address Validation ShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others. 
 *
 * The version of the OpenAPI document: 1.1.202304191404
 * Contact: sales@shipengine.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRate_estimate_options.h
 *
 * 
 */

#ifndef OAIRate_estimate_options_H
#define OAIRate_estimate_options_H

#include <QJsonObject>

#include "OAIAddress_residential_indicator.h"
#include "OAIDelivery_confirmation.h"
#include "OAIDimensions.h"
#include "OAIWeight.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDimensions;
class OAIWeight;

class OAIRate_estimate_options : public OAIObject {
public:
    OAIRate_estimate_options();
    OAIRate_estimate_options(QString json);
    ~OAIRate_estimate_options() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAddress_residential_indicator getAddressResidentialIndicator() const;
    void setAddressResidentialIndicator(const OAIAddress_residential_indicator &address_residential_indicator);
    bool is_address_residential_indicator_Set() const;
    bool is_address_residential_indicator_Valid() const;

    OAIDelivery_confirmation getConfirmation() const;
    void setConfirmation(const OAIDelivery_confirmation &confirmation);
    bool is_confirmation_Set() const;
    bool is_confirmation_Valid() const;

    OAIDimensions getDimensions() const;
    void setDimensions(const OAIDimensions &dimensions);
    bool is_dimensions_Set() const;
    bool is_dimensions_Valid() const;

    QString getFromCityLocality() const;
    void setFromCityLocality(const QString &from_city_locality);
    bool is_from_city_locality_Set() const;
    bool is_from_city_locality_Valid() const;

    QString getFromCountryCode() const;
    void setFromCountryCode(const QString &from_country_code);
    bool is_from_country_code_Set() const;
    bool is_from_country_code_Valid() const;

    QString getFromPostalCode() const;
    void setFromPostalCode(const QString &from_postal_code);
    bool is_from_postal_code_Set() const;
    bool is_from_postal_code_Valid() const;

    QString getFromStateProvince() const;
    void setFromStateProvince(const QString &from_state_province);
    bool is_from_state_province_Set() const;
    bool is_from_state_province_Valid() const;

    QDateTime getShipDate() const;
    void setShipDate(const QDateTime &ship_date);
    bool is_ship_date_Set() const;
    bool is_ship_date_Valid() const;

    QString getToCityLocality() const;
    void setToCityLocality(const QString &to_city_locality);
    bool is_to_city_locality_Set() const;
    bool is_to_city_locality_Valid() const;

    QString getToCountryCode() const;
    void setToCountryCode(const QString &to_country_code);
    bool is_to_country_code_Set() const;
    bool is_to_country_code_Valid() const;

    QString getToPostalCode() const;
    void setToPostalCode(const QString &to_postal_code);
    bool is_to_postal_code_Set() const;
    bool is_to_postal_code_Valid() const;

    QString getToStateProvince() const;
    void setToStateProvince(const QString &to_state_province);
    bool is_to_state_province_Set() const;
    bool is_to_state_province_Valid() const;

    OAIWeight getWeight() const;
    void setWeight(const OAIWeight &weight);
    bool is_weight_Set() const;
    bool is_weight_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAddress_residential_indicator m_address_residential_indicator;
    bool m_address_residential_indicator_isSet;
    bool m_address_residential_indicator_isValid;

    OAIDelivery_confirmation m_confirmation;
    bool m_confirmation_isSet;
    bool m_confirmation_isValid;

    OAIDimensions m_dimensions;
    bool m_dimensions_isSet;
    bool m_dimensions_isValid;

    QString m_from_city_locality;
    bool m_from_city_locality_isSet;
    bool m_from_city_locality_isValid;

    QString m_from_country_code;
    bool m_from_country_code_isSet;
    bool m_from_country_code_isValid;

    QString m_from_postal_code;
    bool m_from_postal_code_isSet;
    bool m_from_postal_code_isValid;

    QString m_from_state_province;
    bool m_from_state_province_isSet;
    bool m_from_state_province_isValid;

    QDateTime m_ship_date;
    bool m_ship_date_isSet;
    bool m_ship_date_isValid;

    QString m_to_city_locality;
    bool m_to_city_locality_isSet;
    bool m_to_city_locality_isValid;

    QString m_to_country_code;
    bool m_to_country_code_isSet;
    bool m_to_country_code_isValid;

    QString m_to_postal_code;
    bool m_to_postal_code_isSet;
    bool m_to_postal_code_isValid;

    QString m_to_state_province;
    bool m_to_state_province_isSet;
    bool m_to_state_province_isValid;

    OAIWeight m_weight;
    bool m_weight_isSet;
    bool m_weight_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRate_estimate_options)

#endif // OAIRate_estimate_options_H
