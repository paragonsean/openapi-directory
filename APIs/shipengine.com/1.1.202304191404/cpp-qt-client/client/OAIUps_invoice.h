/**
 * ShipEngine API
 * ShipEngine's easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.  Each of ShipEngine's features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.  ## Getting Started If you're new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics.  Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.  Here are some step-by-step **tutorials** to get you started:    - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)   - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)   - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)   - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)   ## Shipping Labels for Every Major Carrier ShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).   ## Real-Time Package Tracking With ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.   ## Compare Shipping Costs Across Carriers Make sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don't know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.   ## Worldwide Address Validation ShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others. 
 *
 * The version of the OpenAPI document: 1.1.202304191404
 * Contact: sales@shipengine.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUps_invoice.h
 *
 * UPS invoice
 */

#ifndef OAIUps_invoice_H
#define OAIUps_invoice_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUps_invoice : public OAIObject {
public:
    OAIUps_invoice();
    OAIUps_invoice(QString json);
    ~OAIUps_invoice() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getControlId() const;
    void setControlId(const QString &control_id);
    bool is_control_id_Set() const;
    bool is_control_id_Valid() const;

    double getInvoiceAmount() const;
    void setInvoiceAmount(const double &invoice_amount);
    bool is_invoice_amount_Set() const;
    bool is_invoice_amount_Valid() const;

    QString getInvoiceCurrencyCode() const;
    void setInvoiceCurrencyCode(const QString &invoice_currency_code);
    bool is_invoice_currency_code_Set() const;
    bool is_invoice_currency_code_Valid() const;

    QDateTime getInvoiceDate() const;
    void setInvoiceDate(const QDateTime &invoice_date);
    bool is_invoice_date_Set() const;
    bool is_invoice_date_Valid() const;

    QString getInvoiceNumber() const;
    void setInvoiceNumber(const QString &invoice_number);
    bool is_invoice_number_Set() const;
    bool is_invoice_number_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_control_id;
    bool m_control_id_isSet;
    bool m_control_id_isValid;

    double m_invoice_amount;
    bool m_invoice_amount_isSet;
    bool m_invoice_amount_isValid;

    QString m_invoice_currency_code;
    bool m_invoice_currency_code_isSet;
    bool m_invoice_currency_code_isValid;

    QDateTime m_invoice_date;
    bool m_invoice_date_isSet;
    bool m_invoice_date_isValid;

    QString m_invoice_number;
    bool m_invoice_number_isSet;
    bool m_invoice_number_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUps_invoice)

#endif // OAIUps_invoice_H
