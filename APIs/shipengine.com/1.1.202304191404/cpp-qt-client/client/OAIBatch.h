/**
 * ShipEngine API
 * ShipEngine's easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.  Each of ShipEngine's features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.  ## Getting Started If you're new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics.  Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.  Here are some step-by-step **tutorials** to get you started:    - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)   - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)   - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)   - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)   ## Shipping Labels for Every Major Carrier ShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).   ## Real-Time Package Tracking With ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.   ## Compare Shipping Costs Across Carriers Make sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don't know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.   ## Worldwide Address Validation ShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others. 
 *
 * The version of the OpenAPI document: 1.1.202304191404
 * Contact: sales@shipengine.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBatch.h
 *
 * Batches are an advanced feature of ShipEngine designed for users who need to generate hundreds or thousands of labels at a time. 
 */

#ifndef OAIBatch_H
#define OAIBatch_H

#include <QJsonObject>

#include "OAIBatch_status.h"
#include "OAILabel_download.h"
#include "OAILabel_format.h"
#include "OAILabel_layout.h"
#include "OAIOptional_link.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOptional_link;
class OAILabel_download;

class OAIBatch : public OAIObject {
public:
    OAIBatch();
    OAIBatch(QString json);
    ~OAIBatch() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIOptional_link getBatchErrorsUrl() const;
    void setBatchErrorsUrl(const OAIOptional_link &batch_errors_url);
    bool is_batch_errors_url_Set() const;
    bool is_batch_errors_url_Valid() const;

    QString getBatchId() const;
    void setBatchId(const QString &batch_id);
    bool is_batch_id_Set() const;
    bool is_batch_id_Valid() const;

    OAIOptional_link getBatchLabelsUrl() const;
    void setBatchLabelsUrl(const OAIOptional_link &batch_labels_url);
    bool is_batch_labels_url_Set() const;
    bool is_batch_labels_url_Valid() const;

    QString getBatchNotes() const;
    void setBatchNotes(const QString &batch_notes);
    bool is_batch_notes_Set() const;
    bool is_batch_notes_Valid() const;

    QString getBatchNumber() const;
    void setBatchNumber(const QString &batch_number);
    bool is_batch_number_Set() const;
    bool is_batch_number_Valid() const;

    OAIOptional_link getBatchShipmentsUrl() const;
    void setBatchShipmentsUrl(const OAIOptional_link &batch_shipments_url);
    bool is_batch_shipments_url_Set() const;
    bool is_batch_shipments_url_Valid() const;

    qint32 getCompleted() const;
    void setCompleted(const qint32 &completed);
    bool is_completed_Set() const;
    bool is_completed_Valid() const;

    qint32 getCount() const;
    void setCount(const qint32 &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    qint32 getErrors() const;
    void setErrors(const qint32 &errors);
    bool is_errors_Set() const;
    bool is_errors_Valid() const;

    QString getExternalBatchId() const;
    void setExternalBatchId(const QString &external_batch_id);
    bool is_external_batch_id_Set() const;
    bool is_external_batch_id_Valid() const;

    OAIOptional_link getFormDownload() const;
    void setFormDownload(const OAIOptional_link &form_download);
    bool is_form_download_Set() const;
    bool is_form_download_Valid() const;

    qint32 getForms() const;
    void setForms(const qint32 &forms);
    bool is_forms_Set() const;
    bool is_forms_Valid() const;

    OAILabel_download getLabelDownload() const;
    void setLabelDownload(const OAILabel_download &label_download);
    bool is_label_download_Set() const;
    bool is_label_download_Valid() const;

    OAILabel_format getLabelFormat() const;
    void setLabelFormat(const OAILabel_format &label_format);
    bool is_label_format_Set() const;
    bool is_label_format_Valid() const;

    OAILabel_layout getLabelLayout() const;
    void setLabelLayout(const OAILabel_layout &label_layout);
    bool is_label_layout_Set() const;
    bool is_label_layout_Valid() const;

    QDateTime getProcessedAt() const;
    void setProcessedAt(const QDateTime &processed_at);
    bool is_processed_at_Set() const;
    bool is_processed_at_Valid() const;

    OAIBatch_status getStatus() const;
    void setStatus(const OAIBatch_status &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    qint32 getWarnings() const;
    void setWarnings(const qint32 &warnings);
    bool is_warnings_Set() const;
    bool is_warnings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIOptional_link m_batch_errors_url;
    bool m_batch_errors_url_isSet;
    bool m_batch_errors_url_isValid;

    QString m_batch_id;
    bool m_batch_id_isSet;
    bool m_batch_id_isValid;

    OAIOptional_link m_batch_labels_url;
    bool m_batch_labels_url_isSet;
    bool m_batch_labels_url_isValid;

    QString m_batch_notes;
    bool m_batch_notes_isSet;
    bool m_batch_notes_isValid;

    QString m_batch_number;
    bool m_batch_number_isSet;
    bool m_batch_number_isValid;

    OAIOptional_link m_batch_shipments_url;
    bool m_batch_shipments_url_isSet;
    bool m_batch_shipments_url_isValid;

    qint32 m_completed;
    bool m_completed_isSet;
    bool m_completed_isValid;

    qint32 m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    qint32 m_errors;
    bool m_errors_isSet;
    bool m_errors_isValid;

    QString m_external_batch_id;
    bool m_external_batch_id_isSet;
    bool m_external_batch_id_isValid;

    OAIOptional_link m_form_download;
    bool m_form_download_isSet;
    bool m_form_download_isValid;

    qint32 m_forms;
    bool m_forms_isSet;
    bool m_forms_isValid;

    OAILabel_download m_label_download;
    bool m_label_download_isSet;
    bool m_label_download_isValid;

    OAILabel_format m_label_format;
    bool m_label_format_isSet;
    bool m_label_format_isValid;

    OAILabel_layout m_label_layout;
    bool m_label_layout_isSet;
    bool m_label_layout_isValid;

    QDateTime m_processed_at;
    bool m_processed_at_isSet;
    bool m_processed_at_isValid;

    OAIBatch_status m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    qint32 m_warnings;
    bool m_warnings_isSet;
    bool m_warnings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBatch)

#endif // OAIBatch_H
