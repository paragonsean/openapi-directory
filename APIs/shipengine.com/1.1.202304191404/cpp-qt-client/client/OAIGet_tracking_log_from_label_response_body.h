/**
 * ShipEngine API
 * ShipEngine's easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.  Each of ShipEngine's features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.  ## Getting Started If you're new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics.  Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.  Here are some step-by-step **tutorials** to get you started:    - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)   - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)   - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)   - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)   ## Shipping Labels for Every Major Carrier ShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).   ## Real-Time Package Tracking With ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.   ## Compare Shipping Costs Across Carriers Make sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don't know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.   ## Worldwide Address Validation ShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others. 
 *
 * The version of the OpenAPI document: 1.1.202304191404
 * Contact: sales@shipengine.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGet_tracking_log_from_label_response_body.h
 *
 * A get tracking log from label response body
 */

#ifndef OAIGet_tracking_log_from_label_response_body_H
#define OAIGet_tracking_log_from_label_response_body_H

#include <QJsonObject>

#include "OAIStatus_code.h"
#include "OAITrack_event.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITrack_event;

class OAIGet_tracking_log_from_label_response_body : public OAIObject {
public:
    OAIGet_tracking_log_from_label_response_body();
    OAIGet_tracking_log_from_label_response_body(QString json);
    ~OAIGet_tracking_log_from_label_response_body() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getActualDeliveryDate() const;
    void setActualDeliveryDate(const QDateTime &actual_delivery_date);
    bool is_actual_delivery_date_Set() const;
    bool is_actual_delivery_date_Valid() const;

    QString getCarrierCode() const;
    void setCarrierCode(const QString &carrier_code);
    bool is_carrier_code_Set() const;
    bool is_carrier_code_Valid() const;

    QString getCarrierDetailCode() const;
    void setCarrierDetailCode(const QString &carrier_detail_code);
    bool is_carrier_detail_code_Set() const;
    bool is_carrier_detail_code_Valid() const;

    QString getCarrierId() const;
    void setCarrierId(const QString &carrier_id);
    bool is_carrier_id_Set() const;
    bool is_carrier_id_Valid() const;

    QString getCarrierStatusCode() const;
    void setCarrierStatusCode(const QString &carrier_status_code);
    bool is_carrier_status_code_Set() const;
    bool is_carrier_status_code_Valid() const;

    QString getCarrierStatusDescription() const;
    void setCarrierStatusDescription(const QString &carrier_status_description);
    bool is_carrier_status_description_Set() const;
    bool is_carrier_status_description_Valid() const;

    QDateTime getEstimatedDeliveryDate() const;
    void setEstimatedDeliveryDate(const QDateTime &estimated_delivery_date);
    bool is_estimated_delivery_date_Set() const;
    bool is_estimated_delivery_date_Valid() const;

    QList<OAITrack_event> getEvents() const;
    void setEvents(const QList<OAITrack_event> &events);
    bool is_events_Set() const;
    bool is_events_Valid() const;

    QString getExceptionDescription() const;
    void setExceptionDescription(const QString &exception_description);
    bool is_exception_description_Set() const;
    bool is_exception_description_Valid() const;

    QDateTime getShipDate() const;
    void setShipDate(const QDateTime &ship_date);
    bool is_ship_date_Set() const;
    bool is_ship_date_Valid() const;

    OAIStatus_code getStatusCode() const;
    void setStatusCode(const OAIStatus_code &status_code);
    bool is_status_code_Set() const;
    bool is_status_code_Valid() const;

    QString getStatusDescription() const;
    void setStatusDescription(const QString &status_description);
    bool is_status_description_Set() const;
    bool is_status_description_Valid() const;

    QString getTrackingNumber() const;
    void setTrackingNumber(const QString &tracking_number);
    bool is_tracking_number_Set() const;
    bool is_tracking_number_Valid() const;

    QString getTrackingUrl() const;
    void setTrackingUrl(const QString &tracking_url);
    bool is_tracking_url_Set() const;
    bool is_tracking_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_actual_delivery_date;
    bool m_actual_delivery_date_isSet;
    bool m_actual_delivery_date_isValid;

    QString m_carrier_code;
    bool m_carrier_code_isSet;
    bool m_carrier_code_isValid;

    QString m_carrier_detail_code;
    bool m_carrier_detail_code_isSet;
    bool m_carrier_detail_code_isValid;

    QString m_carrier_id;
    bool m_carrier_id_isSet;
    bool m_carrier_id_isValid;

    QString m_carrier_status_code;
    bool m_carrier_status_code_isSet;
    bool m_carrier_status_code_isValid;

    QString m_carrier_status_description;
    bool m_carrier_status_description_isSet;
    bool m_carrier_status_description_isValid;

    QDateTime m_estimated_delivery_date;
    bool m_estimated_delivery_date_isSet;
    bool m_estimated_delivery_date_isValid;

    QList<OAITrack_event> m_events;
    bool m_events_isSet;
    bool m_events_isValid;

    QString m_exception_description;
    bool m_exception_description_isSet;
    bool m_exception_description_isValid;

    QDateTime m_ship_date;
    bool m_ship_date_isSet;
    bool m_ship_date_isValid;

    OAIStatus_code m_status_code;
    bool m_status_code_isSet;
    bool m_status_code_isValid;

    QString m_status_description;
    bool m_status_description_isSet;
    bool m_status_description_isValid;

    QString m_tracking_number;
    bool m_tracking_number_isSet;
    bool m_tracking_number_isValid;

    QString m_tracking_url;
    bool m_tracking_url_isSet;
    bool m_tracking_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGet_tracking_log_from_label_response_body)

#endif // OAIGet_tracking_log_from_label_response_body_H
