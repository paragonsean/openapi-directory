/**
 * ShipEngine API
 * ShipEngine's easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.  Each of ShipEngine's features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.  ## Getting Started If you're new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics.  Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.  Here are some step-by-step **tutorials** to get you started:    - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)   - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)   - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)   - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)   ## Shipping Labels for Every Major Carrier ShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).   ## Real-Time Package Tracking With ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.   ## Compare Shipping Costs Across Carriers Make sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don't know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.   ## Worldwide Address Validation ShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others. 
 *
 * The version of the OpenAPI document: 1.1.202304191404
 * Contact: sales@shipengine.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISchedule_pickup_response_body.h
 *
 * 
 */

#ifndef OAISchedule_pickup_response_body_H
#define OAISchedule_pickup_response_body_H

#include <QJsonObject>

#include "OAIAddress.h"
#include "OAIContact_details.h"
#include "OAIError.h"
#include "OAIPickup_window.h"
#include "OAIPickup_windows.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContact_details;
class OAIAddress;
class OAIPickup_window;
class OAIPickup_windows;
class OAIError;

class OAISchedule_pickup_response_body : public OAIObject {
public:
    OAISchedule_pickup_response_body();
    OAISchedule_pickup_response_body(QString json);
    ~OAISchedule_pickup_response_body() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCancelledAt() const;
    void setCancelledAt(const QDateTime &cancelled_at);
    bool is_cancelled_at_Set() const;
    bool is_cancelled_at_Valid() const;

    QString getCarrierId() const;
    void setCarrierId(const QString &carrier_id);
    bool is_carrier_id_Set() const;
    bool is_carrier_id_Valid() const;

    QString getConfirmationNumber() const;
    void setConfirmationNumber(const QString &confirmation_number);
    bool is_confirmation_number_Set() const;
    bool is_confirmation_number_Valid() const;

    OAIContact_details getContactDetails() const;
    void setContactDetails(const OAIContact_details &contact_details);
    bool is_contact_details_Set() const;
    bool is_contact_details_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QList<QString> getLabelIds() const;
    void setLabelIds(const QList<QString> &label_ids);
    bool is_label_ids_Set() const;
    bool is_label_ids_Valid() const;

    OAIAddress getPickupAddress() const;
    void setPickupAddress(const OAIAddress &pickup_address);
    bool is_pickup_address_Set() const;
    bool is_pickup_address_Valid() const;

    QString getPickupId() const;
    void setPickupId(const QString &pickup_id);
    bool is_pickup_id_Set() const;
    bool is_pickup_id_Valid() const;

    QString getPickupNotes() const;
    void setPickupNotes(const QString &pickup_notes);
    bool is_pickup_notes_Set() const;
    bool is_pickup_notes_Valid() const;

    OAIPickup_window getPickupWindow() const;
    void setPickupWindow(const OAIPickup_window &pickup_window);
    bool is_pickup_window_Set() const;
    bool is_pickup_window_Valid() const;

    QList<OAIPickup_windows> getPickupWindows() const;
    void setPickupWindows(const QList<OAIPickup_windows> &pickup_windows);
    bool is_pickup_windows_Set() const;
    bool is_pickup_windows_Valid() const;

    QString getWarehouseId() const;
    void setWarehouseId(const QString &warehouse_id);
    bool is_warehouse_id_Set() const;
    bool is_warehouse_id_Valid() const;

    QList<OAIError> getErrors() const;
    void setErrors(const QList<OAIError> &errors);
    bool is_errors_Set() const;
    bool is_errors_Valid() const;

    QString getRequestId() const;
    void setRequestId(const QString &request_id);
    bool is_request_id_Set() const;
    bool is_request_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_cancelled_at;
    bool m_cancelled_at_isSet;
    bool m_cancelled_at_isValid;

    QString m_carrier_id;
    bool m_carrier_id_isSet;
    bool m_carrier_id_isValid;

    QString m_confirmation_number;
    bool m_confirmation_number_isSet;
    bool m_confirmation_number_isValid;

    OAIContact_details m_contact_details;
    bool m_contact_details_isSet;
    bool m_contact_details_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QList<QString> m_label_ids;
    bool m_label_ids_isSet;
    bool m_label_ids_isValid;

    OAIAddress m_pickup_address;
    bool m_pickup_address_isSet;
    bool m_pickup_address_isValid;

    QString m_pickup_id;
    bool m_pickup_id_isSet;
    bool m_pickup_id_isValid;

    QString m_pickup_notes;
    bool m_pickup_notes_isSet;
    bool m_pickup_notes_isValid;

    OAIPickup_window m_pickup_window;
    bool m_pickup_window_isSet;
    bool m_pickup_window_isValid;

    QList<OAIPickup_windows> m_pickup_windows;
    bool m_pickup_windows_isSet;
    bool m_pickup_windows_isValid;

    QString m_warehouse_id;
    bool m_warehouse_id_isSet;
    bool m_warehouse_id_isValid;

    QList<OAIError> m_errors;
    bool m_errors_isSet;
    bool m_errors_isValid;

    QString m_request_id;
    bool m_request_id_isSet;
    bool m_request_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISchedule_pickup_response_body)

#endif // OAISchedule_pickup_response_body_H
