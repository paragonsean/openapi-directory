/**
 * ShipEngine API
 * ShipEngine's easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.  Each of ShipEngine's features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.  ## Getting Started If you're new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics.  Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.  Here are some step-by-step **tutorials** to get you started:    - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)   - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)   - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)   - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)   ## Shipping Labels for Every Major Carrier ShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).   ## Real-Time Package Tracking With ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.   ## Compare Shipping Costs Across Carriers Make sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don't know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.   ## Worldwide Address Validation ShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others. 
 *
 * The version of the OpenAPI document: 1.1.202304191404
 * Contact: sales@shipengine.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFedex_settings_response_body.h
 *
 * A Fedex settings response body
 */

#ifndef OAIFedex_settings_response_body_H
#define OAIFedex_settings_response_body_H

#include <QJsonObject>

#include "OAIAncillary_service_endorsement.h"
#include "OAIFedex_pickup_type.h"
#include "OAISmart_post_hub.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFedex_settings_response_body : public OAIObject {
public:
    OAIFedex_settings_response_body();
    OAIFedex_settings_response_body(QString json);
    ~OAIFedex_settings_response_body() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isIsPrimaryAccount() const;
    void setIsPrimaryAccount(const bool &is_primary_account);
    bool is_is_primary_account_Set() const;
    bool is_is_primary_account_Valid() const;

    QString getLetterheadImage() const;
    void setLetterheadImage(const QString &letterhead_image);
    bool is_letterhead_image_Set() const;
    bool is_letterhead_image_Valid() const;

    QString getNickname() const;
    void setNickname(const QString &nickname);
    bool is_nickname_Set() const;
    bool is_nickname_Valid() const;

    OAIFedex_pickup_type getPickupType() const;
    void setPickupType(const OAIFedex_pickup_type &pickup_type);
    bool is_pickup_type_Set() const;
    bool is_pickup_type_Valid() const;

    QString getSignatureImage() const;
    void setSignatureImage(const QString &signature_image);
    bool is_signature_image_Set() const;
    bool is_signature_image_Valid() const;

    OAIAncillary_service_endorsement getSmartPostEndorsement() const;
    void setSmartPostEndorsement(const OAIAncillary_service_endorsement &smart_post_endorsement);
    bool is_smart_post_endorsement_Set() const;
    bool is_smart_post_endorsement_Valid() const;

    OAISmart_post_hub getSmartPostHub() const;
    void setSmartPostHub(const OAISmart_post_hub &smart_post_hub);
    bool is_smart_post_hub_Set() const;
    bool is_smart_post_hub_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_is_primary_account;
    bool m_is_primary_account_isSet;
    bool m_is_primary_account_isValid;

    QString m_letterhead_image;
    bool m_letterhead_image_isSet;
    bool m_letterhead_image_isValid;

    QString m_nickname;
    bool m_nickname_isSet;
    bool m_nickname_isValid;

    OAIFedex_pickup_type m_pickup_type;
    bool m_pickup_type_isSet;
    bool m_pickup_type_isValid;

    QString m_signature_image;
    bool m_signature_image_isSet;
    bool m_signature_image_isValid;

    OAIAncillary_service_endorsement m_smart_post_endorsement;
    bool m_smart_post_endorsement_isSet;
    bool m_smart_post_endorsement_isValid;

    OAISmart_post_hub m_smart_post_hub;
    bool m_smart_post_hub_isSet;
    bool m_smart_post_hub_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFedex_settings_response_body)

#endif // OAIFedex_settings_response_body_H
