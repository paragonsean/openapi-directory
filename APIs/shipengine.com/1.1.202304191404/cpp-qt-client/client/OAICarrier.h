/**
 * ShipEngine API
 * ShipEngine's easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.  Each of ShipEngine's features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.  ## Getting Started If you're new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics.  Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.  Here are some step-by-step **tutorials** to get you started:    - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)   - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)   - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)   - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)   ## Shipping Labels for Every Major Carrier ShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).   ## Real-Time Package Tracking With ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.   ## Compare Shipping Costs Across Carriers Make sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don't know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.   ## Worldwide Address Validation ShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others. 
 *
 * The version of the OpenAPI document: 1.1.202304191404
 * Contact: sales@shipengine.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICarrier.h
 *
 * A carrier object that represents a provider such as UPS, USPS, DHL, etc that has been tied to the current account. 
 */

#ifndef OAICarrier_H
#define OAICarrier_H

#include <QJsonObject>

#include "OAICarrier_advanced_option.h"
#include "OAIPackage_type.h"
#include "OAIService.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICarrier_advanced_option;
class OAIPackage_type;
class OAIService;

class OAICarrier : public OAIObject {
public:
    OAICarrier();
    OAICarrier(QString json);
    ~OAICarrier() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountNumber() const;
    void setAccountNumber(const QString &account_number);
    bool is_account_number_Set() const;
    bool is_account_number_Valid() const;

    double getBalance() const;
    void setBalance(const double &balance);
    bool is_balance_Set() const;
    bool is_balance_Valid() const;

    QString getCarrierCode() const;
    void setCarrierCode(const QString &carrier_code);
    bool is_carrier_code_Set() const;
    bool is_carrier_code_Valid() const;

    QString getCarrierId() const;
    void setCarrierId(const QString &carrier_id);
    bool is_carrier_id_Set() const;
    bool is_carrier_id_Valid() const;

    QString getFriendlyName() const;
    void setFriendlyName(const QString &friendly_name);
    bool is_friendly_name_Set() const;
    bool is_friendly_name_Valid() const;

    bool isHasMultiPackageSupportingServices() const;
    void setHasMultiPackageSupportingServices(const bool &has_multi_package_supporting_services);
    bool is_has_multi_package_supporting_services_Set() const;
    bool is_has_multi_package_supporting_services_Valid() const;

    QString getNickname() const;
    void setNickname(const QString &nickname);
    bool is_nickname_Set() const;
    bool is_nickname_Valid() const;

    QList<OAICarrier_advanced_option> getOptions() const;
    void setOptions(const QList<OAICarrier_advanced_option> &options);
    bool is_options_Set() const;
    bool is_options_Valid() const;

    QList<OAIPackage_type> getPackages() const;
    void setPackages(const QList<OAIPackage_type> &packages);
    bool is_packages_Set() const;
    bool is_packages_Valid() const;

    bool isPrimary() const;
    void setPrimary(const bool &primary);
    bool is_primary_Set() const;
    bool is_primary_Valid() const;

    bool isRequiresFundedAmount() const;
    void setRequiresFundedAmount(const bool &requires_funded_amount);
    bool is_requires_funded_amount_Set() const;
    bool is_requires_funded_amount_Valid() const;

    QList<OAIService> getServices() const;
    void setServices(const QList<OAIService> &services);
    bool is_services_Set() const;
    bool is_services_Valid() const;

    bool isSupportsLabelMessages() const;
    void setSupportsLabelMessages(const bool &supports_label_messages);
    bool is_supports_label_messages_Set() const;
    bool is_supports_label_messages_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_number;
    bool m_account_number_isSet;
    bool m_account_number_isValid;

    double m_balance;
    bool m_balance_isSet;
    bool m_balance_isValid;

    QString m_carrier_code;
    bool m_carrier_code_isSet;
    bool m_carrier_code_isValid;

    QString m_carrier_id;
    bool m_carrier_id_isSet;
    bool m_carrier_id_isValid;

    QString m_friendly_name;
    bool m_friendly_name_isSet;
    bool m_friendly_name_isValid;

    bool m_has_multi_package_supporting_services;
    bool m_has_multi_package_supporting_services_isSet;
    bool m_has_multi_package_supporting_services_isValid;

    QString m_nickname;
    bool m_nickname_isSet;
    bool m_nickname_isValid;

    QList<OAICarrier_advanced_option> m_options;
    bool m_options_isSet;
    bool m_options_isValid;

    QList<OAIPackage_type> m_packages;
    bool m_packages_isSet;
    bool m_packages_isValid;

    bool m_primary;
    bool m_primary_isSet;
    bool m_primary_isValid;

    bool m_requires_funded_amount;
    bool m_requires_funded_amount_isSet;
    bool m_requires_funded_amount_isValid;

    QList<OAIService> m_services;
    bool m_services_isSet;
    bool m_services_isValid;

    bool m_supports_label_messages;
    bool m_supports_label_messages_isSet;
    bool m_supports_label_messages_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICarrier)

#endif // OAICarrier_H
