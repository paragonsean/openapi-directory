/**
 * ShipEngine API
 * ShipEngine's easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.  Each of ShipEngine's features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.  ## Getting Started If you're new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics.  Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.  Here are some step-by-step **tutorials** to get you started:    - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)   - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)   - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)   - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)   ## Shipping Labels for Every Major Carrier ShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).   ## Real-Time Package Tracking With ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.   ## Compare Shipping Costs Across Carriers Make sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don't know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.   ## Worldwide Address Validation ShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others. 
 *
 * The version of the OpenAPI document: 1.1.202304191404
 * Contact: sales@shipengine.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICustoms_item.h
 *
 * The customs declaration for a single item in the shipment.
 */

#ifndef OAICustoms_item_H
#define OAICustoms_item_H

#include <QJsonObject>

#include "OAIMonetary_value.h"
#include "OAIWeight.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMonetary_value;
class OAIWeight;

class OAICustoms_item : public OAIObject {
public:
    OAICustoms_item();
    OAICustoms_item(QString json);
    ~OAICustoms_item() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCountryOfOrigin() const;
    void setCountryOfOrigin(const QString &country_of_origin);
    bool is_country_of_origin_Set() const;
    bool is_country_of_origin_Valid() const;

    QString getCustomsItemId() const;
    void setCustomsItemId(const QString &customs_item_id);
    bool is_customs_item_id_Set() const;
    bool is_customs_item_id_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getHarmonizedTariffCode() const;
    void setHarmonizedTariffCode(const QString &harmonized_tariff_code);
    bool is_harmonized_tariff_code_Set() const;
    bool is_harmonized_tariff_code_Valid() const;

    qint32 getQuantity() const;
    void setQuantity(const qint32 &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    QString getSku() const;
    void setSku(const QString &sku);
    bool is_sku_Set() const;
    bool is_sku_Valid() const;

    QString getSkuDescription() const;
    void setSkuDescription(const QString &sku_description);
    bool is_sku_description_Set() const;
    bool is_sku_description_Valid() const;

    QString getUnitOfMeasure() const;
    void setUnitOfMeasure(const QString &unit_of_measure);
    bool is_unit_of_measure_Set() const;
    bool is_unit_of_measure_Valid() const;

    OAIMonetary_value getValue() const;
    void setValue(const OAIMonetary_value &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    OAIWeight getWeight() const;
    void setWeight(const OAIWeight &weight);
    bool is_weight_Set() const;
    bool is_weight_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_country_of_origin;
    bool m_country_of_origin_isSet;
    bool m_country_of_origin_isValid;

    QString m_customs_item_id;
    bool m_customs_item_id_isSet;
    bool m_customs_item_id_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_harmonized_tariff_code;
    bool m_harmonized_tariff_code_isSet;
    bool m_harmonized_tariff_code_isValid;

    qint32 m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    QString m_sku;
    bool m_sku_isSet;
    bool m_sku_isValid;

    QString m_sku_description;
    bool m_sku_description_isSet;
    bool m_sku_description_isValid;

    QString m_unit_of_measure;
    bool m_unit_of_measure_isSet;
    bool m_unit_of_measure_isValid;

    OAIMonetary_value m_value;
    bool m_value_isSet;
    bool m_value_isValid;

    OAIWeight m_weight;
    bool m_weight_isSet;
    bool m_weight_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICustoms_item)

#endif // OAICustoms_item_H
