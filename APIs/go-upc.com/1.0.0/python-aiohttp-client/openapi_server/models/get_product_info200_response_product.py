# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetProductInfo200ResponseProduct(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, brand: str=None, category: str=None, description: str=None, ean: int=None, image_url: str=None, name: str=None, region: str=None, specs: List[List[str]]=None, upc: int=None):
        """GetProductInfo200ResponseProduct - a model defined in OpenAPI

        :param brand: The brand of this GetProductInfo200ResponseProduct.
        :param category: The category of this GetProductInfo200ResponseProduct.
        :param description: The description of this GetProductInfo200ResponseProduct.
        :param ean: The ean of this GetProductInfo200ResponseProduct.
        :param image_url: The image_url of this GetProductInfo200ResponseProduct.
        :param name: The name of this GetProductInfo200ResponseProduct.
        :param region: The region of this GetProductInfo200ResponseProduct.
        :param specs: The specs of this GetProductInfo200ResponseProduct.
        :param upc: The upc of this GetProductInfo200ResponseProduct.
        """
        self.openapi_types = {
            'brand': str,
            'category': str,
            'description': str,
            'ean': int,
            'image_url': str,
            'name': str,
            'region': str,
            'specs': List[List[str]],
            'upc': int
        }

        self.attribute_map = {
            'brand': 'brand',
            'category': 'category',
            'description': 'description',
            'ean': 'ean',
            'image_url': 'imageUrl',
            'name': 'name',
            'region': 'region',
            'specs': 'specs',
            'upc': 'upc'
        }

        self._brand = brand
        self._category = category
        self._description = description
        self._ean = ean
        self._image_url = image_url
        self._name = name
        self._region = region
        self._specs = specs
        self._upc = upc

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetProductInfo200ResponseProduct':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getProductInfo_200_response_product of this GetProductInfo200ResponseProduct.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def brand(self):
        """Gets the brand of this GetProductInfo200ResponseProduct.

        The brand of the product (if available).

        :return: The brand of this GetProductInfo200ResponseProduct.
        :rtype: str
        """
        return self._brand

    @brand.setter
    def brand(self, brand):
        """Sets the brand of this GetProductInfo200ResponseProduct.

        The brand of the product (if available).

        :param brand: The brand of this GetProductInfo200ResponseProduct.
        :type brand: str
        """

        self._brand = brand

    @property
    def category(self):
        """Gets the category of this GetProductInfo200ResponseProduct.

        The category of the product (if available).

        :return: The category of this GetProductInfo200ResponseProduct.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this GetProductInfo200ResponseProduct.

        The category of the product (if available).

        :param category: The category of this GetProductInfo200ResponseProduct.
        :type category: str
        """

        self._category = category

    @property
    def description(self):
        """Gets the description of this GetProductInfo200ResponseProduct.

        A description of the product (if available).

        :return: The description of this GetProductInfo200ResponseProduct.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GetProductInfo200ResponseProduct.

        A description of the product (if available).

        :param description: The description of this GetProductInfo200ResponseProduct.
        :type description: str
        """

        self._description = description

    @property
    def ean(self):
        """Gets the ean of this GetProductInfo200ResponseProduct.

        The EAN code of the product.

        :return: The ean of this GetProductInfo200ResponseProduct.
        :rtype: int
        """
        return self._ean

    @ean.setter
    def ean(self, ean):
        """Sets the ean of this GetProductInfo200ResponseProduct.

        The EAN code of the product.

        :param ean: The ean of this GetProductInfo200ResponseProduct.
        :type ean: int
        """

        self._ean = ean

    @property
    def image_url(self):
        """Gets the image_url of this GetProductInfo200ResponseProduct.

        The URL for the product image.

        :return: The image_url of this GetProductInfo200ResponseProduct.
        :rtype: str
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url):
        """Sets the image_url of this GetProductInfo200ResponseProduct.

        The URL for the product image.

        :param image_url: The image_url of this GetProductInfo200ResponseProduct.
        :type image_url: str
        """

        self._image_url = image_url

    @property
    def name(self):
        """Gets the name of this GetProductInfo200ResponseProduct.

        The name of the product.

        :return: The name of this GetProductInfo200ResponseProduct.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetProductInfo200ResponseProduct.

        The name of the product.

        :param name: The name of this GetProductInfo200ResponseProduct.
        :type name: str
        """

        self._name = name

    @property
    def region(self):
        """Gets the region of this GetProductInfo200ResponseProduct.

        The region of the product.

        :return: The region of this GetProductInfo200ResponseProduct.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this GetProductInfo200ResponseProduct.

        The region of the product.

        :param region: The region of this GetProductInfo200ResponseProduct.
        :type region: str
        """

        self._region = region

    @property
    def specs(self):
        """Gets the specs of this GetProductInfo200ResponseProduct.

        A list of additional item specifications (if available).

        :return: The specs of this GetProductInfo200ResponseProduct.
        :rtype: List[List[str]]
        """
        return self._specs

    @specs.setter
    def specs(self, specs):
        """Sets the specs of this GetProductInfo200ResponseProduct.

        A list of additional item specifications (if available).

        :param specs: The specs of this GetProductInfo200ResponseProduct.
        :type specs: List[List[str]]
        """

        self._specs = specs

    @property
    def upc(self):
        """Gets the upc of this GetProductInfo200ResponseProduct.

        The UPC code of the product.

        :return: The upc of this GetProductInfo200ResponseProduct.
        :rtype: int
        """
        return self._upc

    @upc.setter
    def upc(self, upc):
        """Sets the upc of this GetProductInfo200ResponseProduct.

        The UPC code of the product.

        :param upc: The upc of this GetProductInfo200ResponseProduct.
        :type upc: int
        """

        self._upc = upc
