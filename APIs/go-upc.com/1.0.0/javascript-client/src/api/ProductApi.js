/**
 * Go-UPC Barcode-Lookup API
 * Find information on products from around the globe. The API supports UPC, EAN, and ISBN barcode numbers, and info returned includes product name, description, brand, image URL, and more.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error from '../model/Error';
import GetProductInfo200Response from '../model/GetProductInfo200Response';

/**
* Product service.
* @module api/ProductApi
* @version 1.0.0
*/
export default class ProductApi {

    /**
    * Constructs a new ProductApi. 
    * @alias module:api/ProductApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getProductInfo operation.
     * @callback module:api/ProductApi~getProductInfoCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetProductInfo200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve product info for a particular barcode number (UPC, EAN, or ISBN).
     * @param {String} code 
     * @param {module:api/ProductApi~getProductInfoCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetProductInfo200Response}
     */
    getProductInfo(code, callback) {
      let postBody = null;
      // verify the required parameter 'code' is set
      if (code === undefined || code === null) {
        throw new Error("Missing the required parameter 'code' when calling getProductInfo");
      }

      let pathParams = {
        'code': code
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetProductInfo200Response;
      return this.apiClient.callApi(
        '/code/{code}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
