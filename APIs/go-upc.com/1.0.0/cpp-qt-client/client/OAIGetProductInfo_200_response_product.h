/**
 * Go-UPC Barcode-Lookup API
 * Find information on products from around the globe. The API supports UPC, EAN, and ISBN barcode numbers, and info returned includes product name, description, brand, image URL, and more.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetProductInfo_200_response_product.h
 *
 * all matching product details.
 */

#ifndef OAIGetProductInfo_200_response_product_H
#define OAIGetProductInfo_200_response_product_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetProductInfo_200_response_product : public OAIObject {
public:
    OAIGetProductInfo_200_response_product();
    OAIGetProductInfo_200_response_product(QString json);
    ~OAIGetProductInfo_200_response_product() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBrand() const;
    void setBrand(const QString &brand);
    bool is_brand_Set() const;
    bool is_brand_Valid() const;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getEan() const;
    void setEan(const qint32 &ean);
    bool is_ean_Set() const;
    bool is_ean_Valid() const;

    QString getImageUrl() const;
    void setImageUrl(const QString &image_url);
    bool is_image_url_Set() const;
    bool is_image_url_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getRegion() const;
    void setRegion(const QString &region);
    bool is_region_Set() const;
    bool is_region_Valid() const;

    QList<QList<QString>> getSpecs() const;
    void setSpecs(const QList<QList<QString>> &specs);
    bool is_specs_Set() const;
    bool is_specs_Valid() const;

    qint32 getUpc() const;
    void setUpc(const qint32 &upc);
    bool is_upc_Set() const;
    bool is_upc_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_brand;
    bool m_brand_isSet;
    bool m_brand_isValid;

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_ean;
    bool m_ean_isSet;
    bool m_ean_isValid;

    QString m_image_url;
    bool m_image_url_isSet;
    bool m_image_url_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_region;
    bool m_region_isSet;
    bool m_region_isValid;

    QList<QList<QString>> m_specs;
    bool m_specs_isSet;
    bool m_specs_isValid;

    qint32 m_upc;
    bool m_upc_isSet;
    bool m_upc_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetProductInfo_200_response_product)

#endif // OAIGetProductInfo_200_response_product_H
