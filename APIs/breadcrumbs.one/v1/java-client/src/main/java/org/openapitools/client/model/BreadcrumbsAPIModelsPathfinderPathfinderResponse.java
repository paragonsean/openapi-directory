/*
 * Breadcrumbs One
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BreadcrumbsAPIModelsPathfinderPathfinderResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:09:42.266504-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BreadcrumbsAPIModelsPathfinderPathfinderResponse {
  public static final String SERIALIZED_NAME_PATH_FOUND = "path_found";
  @SerializedName(SERIALIZED_NAME_PATH_FOUND)
  private Boolean pathFound;

  public static final String SERIALIZED_NAME_RESULT_HOPS = "result_hops";
  @SerializedName(SERIALIZED_NAME_RESULT_HOPS)
  private Integer resultHops;

  public static final String SERIALIZED_NAME_RESULT_PATHS = "result_paths";
  @SerializedName(SERIALIZED_NAME_RESULT_PATHS)
  private List<List<String>> resultPaths;

  public BreadcrumbsAPIModelsPathfinderPathfinderResponse() {
  }

  public BreadcrumbsAPIModelsPathfinderPathfinderResponse pathFound(Boolean pathFound) {
    this.pathFound = pathFound;
    return this;
  }

  /**
   * Get pathFound
   * @return pathFound
   */
  @javax.annotation.Nullable
  public Boolean getPathFound() {
    return pathFound;
  }

  public void setPathFound(Boolean pathFound) {
    this.pathFound = pathFound;
  }


  public BreadcrumbsAPIModelsPathfinderPathfinderResponse resultHops(Integer resultHops) {
    this.resultHops = resultHops;
    return this;
  }

  /**
   * Get resultHops
   * @return resultHops
   */
  @javax.annotation.Nullable
  public Integer getResultHops() {
    return resultHops;
  }

  public void setResultHops(Integer resultHops) {
    this.resultHops = resultHops;
  }


  public BreadcrumbsAPIModelsPathfinderPathfinderResponse resultPaths(List<List<String>> resultPaths) {
    this.resultPaths = resultPaths;
    return this;
  }

  public BreadcrumbsAPIModelsPathfinderPathfinderResponse addResultPathsItem(List<String> resultPathsItem) {
    if (this.resultPaths == null) {
      this.resultPaths = new ArrayList<>();
    }
    this.resultPaths.add(resultPathsItem);
    return this;
  }

  /**
   * Get resultPaths
   * @return resultPaths
   */
  @javax.annotation.Nullable
  public List<List<String>> getResultPaths() {
    return resultPaths;
  }

  public void setResultPaths(List<List<String>> resultPaths) {
    this.resultPaths = resultPaths;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BreadcrumbsAPIModelsPathfinderPathfinderResponse breadcrumbsAPIModelsPathfinderPathfinderResponse = (BreadcrumbsAPIModelsPathfinderPathfinderResponse) o;
    return Objects.equals(this.pathFound, breadcrumbsAPIModelsPathfinderPathfinderResponse.pathFound) &&
        Objects.equals(this.resultHops, breadcrumbsAPIModelsPathfinderPathfinderResponse.resultHops) &&
        Objects.equals(this.resultPaths, breadcrumbsAPIModelsPathfinderPathfinderResponse.resultPaths);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(pathFound, resultHops, resultPaths);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BreadcrumbsAPIModelsPathfinderPathfinderResponse {\n");
    sb.append("    pathFound: ").append(toIndentedString(pathFound)).append("\n");
    sb.append("    resultHops: ").append(toIndentedString(resultHops)).append("\n");
    sb.append("    resultPaths: ").append(toIndentedString(resultPaths)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("path_found");
    openapiFields.add("result_hops");
    openapiFields.add("result_paths");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BreadcrumbsAPIModelsPathfinderPathfinderResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BreadcrumbsAPIModelsPathfinderPathfinderResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BreadcrumbsAPIModelsPathfinderPathfinderResponse is not found in the empty JSON string", BreadcrumbsAPIModelsPathfinderPathfinderResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BreadcrumbsAPIModelsPathfinderPathfinderResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BreadcrumbsAPIModelsPathfinderPathfinderResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("result_paths") != null && !jsonObj.get("result_paths").isJsonNull() && !jsonObj.get("result_paths").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `result_paths` to be an array in the JSON string but got `%s`", jsonObj.get("result_paths").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BreadcrumbsAPIModelsPathfinderPathfinderResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BreadcrumbsAPIModelsPathfinderPathfinderResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BreadcrumbsAPIModelsPathfinderPathfinderResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BreadcrumbsAPIModelsPathfinderPathfinderResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<BreadcrumbsAPIModelsPathfinderPathfinderResponse>() {
           @Override
           public void write(JsonWriter out, BreadcrumbsAPIModelsPathfinderPathfinderResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BreadcrumbsAPIModelsPathfinderPathfinderResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BreadcrumbsAPIModelsPathfinderPathfinderResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BreadcrumbsAPIModelsPathfinderPathfinderResponse
   * @throws IOException if the JSON string is invalid with respect to BreadcrumbsAPIModelsPathfinderPathfinderResponse
   */
  public static BreadcrumbsAPIModelsPathfinderPathfinderResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BreadcrumbsAPIModelsPathfinderPathfinderResponse.class);
  }

  /**
   * Convert an instance of BreadcrumbsAPIModelsPathfinderPathfinderResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

