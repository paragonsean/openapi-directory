/*
 * Breadcrumbs One
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BreadcrumbsAPIModelsAddressAddressResponse;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BreadcrumbsAPIModelsNodeNodeResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:09:42.266504-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BreadcrumbsAPIModelsNodeNodeResponse {
  public static final String SERIALIZED_NAME_ENTITY_TAGS = "entity_tags";
  @SerializedName(SERIALIZED_NAME_ENTITY_TAGS)
  private List<String> entityTags;

  public static final String SERIALIZED_NAME_INCOMING = "incoming";
  @SerializedName(SERIALIZED_NAME_INCOMING)
  private List<BreadcrumbsAPIModelsAddressAddressResponse> incoming;

  public static final String SERIALIZED_NAME_OUTGOING = "outgoing";
  @SerializedName(SERIALIZED_NAME_OUTGOING)
  private List<BreadcrumbsAPIModelsAddressAddressResponse> outgoing;

  public BreadcrumbsAPIModelsNodeNodeResponse() {
  }

  public BreadcrumbsAPIModelsNodeNodeResponse entityTags(List<String> entityTags) {
    this.entityTags = entityTags;
    return this;
  }

  public BreadcrumbsAPIModelsNodeNodeResponse addEntityTagsItem(String entityTagsItem) {
    if (this.entityTags == null) {
      this.entityTags = new ArrayList<>();
    }
    this.entityTags.add(entityTagsItem);
    return this;
  }

  /**
   * Get entityTags
   * @return entityTags
   */
  @javax.annotation.Nullable
  public List<String> getEntityTags() {
    return entityTags;
  }

  public void setEntityTags(List<String> entityTags) {
    this.entityTags = entityTags;
  }


  public BreadcrumbsAPIModelsNodeNodeResponse incoming(List<BreadcrumbsAPIModelsAddressAddressResponse> incoming) {
    this.incoming = incoming;
    return this;
  }

  public BreadcrumbsAPIModelsNodeNodeResponse addIncomingItem(BreadcrumbsAPIModelsAddressAddressResponse incomingItem) {
    if (this.incoming == null) {
      this.incoming = new ArrayList<>();
    }
    this.incoming.add(incomingItem);
    return this;
  }

  /**
   * Get incoming
   * @return incoming
   */
  @javax.annotation.Nullable
  public List<BreadcrumbsAPIModelsAddressAddressResponse> getIncoming() {
    return incoming;
  }

  public void setIncoming(List<BreadcrumbsAPIModelsAddressAddressResponse> incoming) {
    this.incoming = incoming;
  }


  public BreadcrumbsAPIModelsNodeNodeResponse outgoing(List<BreadcrumbsAPIModelsAddressAddressResponse> outgoing) {
    this.outgoing = outgoing;
    return this;
  }

  public BreadcrumbsAPIModelsNodeNodeResponse addOutgoingItem(BreadcrumbsAPIModelsAddressAddressResponse outgoingItem) {
    if (this.outgoing == null) {
      this.outgoing = new ArrayList<>();
    }
    this.outgoing.add(outgoingItem);
    return this;
  }

  /**
   * Get outgoing
   * @return outgoing
   */
  @javax.annotation.Nullable
  public List<BreadcrumbsAPIModelsAddressAddressResponse> getOutgoing() {
    return outgoing;
  }

  public void setOutgoing(List<BreadcrumbsAPIModelsAddressAddressResponse> outgoing) {
    this.outgoing = outgoing;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BreadcrumbsAPIModelsNodeNodeResponse breadcrumbsAPIModelsNodeNodeResponse = (BreadcrumbsAPIModelsNodeNodeResponse) o;
    return Objects.equals(this.entityTags, breadcrumbsAPIModelsNodeNodeResponse.entityTags) &&
        Objects.equals(this.incoming, breadcrumbsAPIModelsNodeNodeResponse.incoming) &&
        Objects.equals(this.outgoing, breadcrumbsAPIModelsNodeNodeResponse.outgoing);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(entityTags, incoming, outgoing);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BreadcrumbsAPIModelsNodeNodeResponse {\n");
    sb.append("    entityTags: ").append(toIndentedString(entityTags)).append("\n");
    sb.append("    incoming: ").append(toIndentedString(incoming)).append("\n");
    sb.append("    outgoing: ").append(toIndentedString(outgoing)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("entity_tags");
    openapiFields.add("incoming");
    openapiFields.add("outgoing");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BreadcrumbsAPIModelsNodeNodeResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BreadcrumbsAPIModelsNodeNodeResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BreadcrumbsAPIModelsNodeNodeResponse is not found in the empty JSON string", BreadcrumbsAPIModelsNodeNodeResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BreadcrumbsAPIModelsNodeNodeResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BreadcrumbsAPIModelsNodeNodeResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("entity_tags") != null && !jsonObj.get("entity_tags").isJsonNull() && !jsonObj.get("entity_tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `entity_tags` to be an array in the JSON string but got `%s`", jsonObj.get("entity_tags").toString()));
      }
      if (jsonObj.get("incoming") != null && !jsonObj.get("incoming").isJsonNull()) {
        JsonArray jsonArrayincoming = jsonObj.getAsJsonArray("incoming");
        if (jsonArrayincoming != null) {
          // ensure the json data is an array
          if (!jsonObj.get("incoming").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `incoming` to be an array in the JSON string but got `%s`", jsonObj.get("incoming").toString()));
          }

          // validate the optional field `incoming` (array)
          for (int i = 0; i < jsonArrayincoming.size(); i++) {
            BreadcrumbsAPIModelsAddressAddressResponse.validateJsonElement(jsonArrayincoming.get(i));
          };
        }
      }
      if (jsonObj.get("outgoing") != null && !jsonObj.get("outgoing").isJsonNull()) {
        JsonArray jsonArrayoutgoing = jsonObj.getAsJsonArray("outgoing");
        if (jsonArrayoutgoing != null) {
          // ensure the json data is an array
          if (!jsonObj.get("outgoing").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `outgoing` to be an array in the JSON string but got `%s`", jsonObj.get("outgoing").toString()));
          }

          // validate the optional field `outgoing` (array)
          for (int i = 0; i < jsonArrayoutgoing.size(); i++) {
            BreadcrumbsAPIModelsAddressAddressResponse.validateJsonElement(jsonArrayoutgoing.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BreadcrumbsAPIModelsNodeNodeResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BreadcrumbsAPIModelsNodeNodeResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BreadcrumbsAPIModelsNodeNodeResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BreadcrumbsAPIModelsNodeNodeResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<BreadcrumbsAPIModelsNodeNodeResponse>() {
           @Override
           public void write(JsonWriter out, BreadcrumbsAPIModelsNodeNodeResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BreadcrumbsAPIModelsNodeNodeResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BreadcrumbsAPIModelsNodeNodeResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BreadcrumbsAPIModelsNodeNodeResponse
   * @throws IOException if the JSON string is invalid with respect to BreadcrumbsAPIModelsNodeNodeResponse
   */
  public static BreadcrumbsAPIModelsNodeNodeResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BreadcrumbsAPIModelsNodeNodeResponse.class);
  }

  /**
   * Convert an instance of BreadcrumbsAPIModelsNodeNodeResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

