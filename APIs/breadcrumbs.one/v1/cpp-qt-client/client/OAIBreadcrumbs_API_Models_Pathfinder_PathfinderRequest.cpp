/**
 * Breadcrumbs One
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest::OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest::OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest() {
    this->initializeModel();
}

OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest::~OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest() {}

void OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest::initializeModel() {

    m_chain_isSet = false;
    m_chain_isValid = false;

    m_destination_addresses_isSet = false;
    m_destination_addresses_isValid = false;

    m_direction_type_isSet = false;
    m_direction_type_isValid = false;

    m_entity_tags_isSet = false;
    m_entity_tags_isValid = false;

    m_search_type_isSet = false;
    m_search_type_isValid = false;

    m_source_address_isSet = false;
    m_source_address_isValid = false;
}

void OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest::fromJsonObject(QJsonObject json) {

    m_chain_isValid = ::OpenAPI::fromJsonValue(m_chain, json[QString("chain")]);
    m_chain_isSet = !json[QString("chain")].isNull() && m_chain_isValid;

    m_destination_addresses_isValid = ::OpenAPI::fromJsonValue(m_destination_addresses, json[QString("destination_addresses")]);
    m_destination_addresses_isSet = !json[QString("destination_addresses")].isNull() && m_destination_addresses_isValid;

    m_direction_type_isValid = ::OpenAPI::fromJsonValue(m_direction_type, json[QString("direction_type")]);
    m_direction_type_isSet = !json[QString("direction_type")].isNull() && m_direction_type_isValid;

    m_entity_tags_isValid = ::OpenAPI::fromJsonValue(m_entity_tags, json[QString("entity_tags")]);
    m_entity_tags_isSet = !json[QString("entity_tags")].isNull() && m_entity_tags_isValid;

    m_search_type_isValid = ::OpenAPI::fromJsonValue(m_search_type, json[QString("search_type")]);
    m_search_type_isSet = !json[QString("search_type")].isNull() && m_search_type_isValid;

    m_source_address_isValid = ::OpenAPI::fromJsonValue(m_source_address, json[QString("source_address")]);
    m_source_address_isSet = !json[QString("source_address")].isNull() && m_source_address_isValid;
}

QString OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_chain_isSet) {
        obj.insert(QString("chain"), ::OpenAPI::toJsonValue(m_chain));
    }
    if (m_destination_addresses.size() > 0) {
        obj.insert(QString("destination_addresses"), ::OpenAPI::toJsonValue(m_destination_addresses));
    }
    if (m_direction_type_isSet) {
        obj.insert(QString("direction_type"), ::OpenAPI::toJsonValue(m_direction_type));
    }
    if (m_entity_tags.size() > 0) {
        obj.insert(QString("entity_tags"), ::OpenAPI::toJsonValue(m_entity_tags));
    }
    if (m_search_type_isSet) {
        obj.insert(QString("search_type"), ::OpenAPI::toJsonValue(m_search_type));
    }
    if (m_source_address_isSet) {
        obj.insert(QString("source_address"), ::OpenAPI::toJsonValue(m_source_address));
    }
    return obj;
}

QString OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest::getChain() const {
    return m_chain;
}
void OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest::setChain(const QString &chain) {
    m_chain = chain;
    m_chain_isSet = true;
}

bool OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest::is_chain_Set() const{
    return m_chain_isSet;
}

bool OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest::is_chain_Valid() const{
    return m_chain_isValid;
}

QList<QString> OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest::getDestinationAddresses() const {
    return m_destination_addresses;
}
void OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest::setDestinationAddresses(const QList<QString> &destination_addresses) {
    m_destination_addresses = destination_addresses;
    m_destination_addresses_isSet = true;
}

bool OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest::is_destination_addresses_Set() const{
    return m_destination_addresses_isSet;
}

bool OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest::is_destination_addresses_Valid() const{
    return m_destination_addresses_isValid;
}

QString OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest::getDirectionType() const {
    return m_direction_type;
}
void OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest::setDirectionType(const QString &direction_type) {
    m_direction_type = direction_type;
    m_direction_type_isSet = true;
}

bool OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest::is_direction_type_Set() const{
    return m_direction_type_isSet;
}

bool OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest::is_direction_type_Valid() const{
    return m_direction_type_isValid;
}

QList<QString> OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest::getEntityTags() const {
    return m_entity_tags;
}
void OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest::setEntityTags(const QList<QString> &entity_tags) {
    m_entity_tags = entity_tags;
    m_entity_tags_isSet = true;
}

bool OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest::is_entity_tags_Set() const{
    return m_entity_tags_isSet;
}

bool OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest::is_entity_tags_Valid() const{
    return m_entity_tags_isValid;
}

QString OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest::getSearchType() const {
    return m_search_type;
}
void OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest::setSearchType(const QString &search_type) {
    m_search_type = search_type;
    m_search_type_isSet = true;
}

bool OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest::is_search_type_Set() const{
    return m_search_type_isSet;
}

bool OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest::is_search_type_Valid() const{
    return m_search_type_isValid;
}

QString OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest::getSourceAddress() const {
    return m_source_address;
}
void OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest::setSourceAddress(const QString &source_address) {
    m_source_address = source_address;
    m_source_address_isSet = true;
}

bool OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest::is_source_address_Set() const{
    return m_source_address_isSet;
}

bool OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest::is_source_address_Valid() const{
    return m_source_address_isValid;
}

bool OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_chain_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_destination_addresses.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_direction_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_entity_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_search_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_address_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBreadcrumbs_API_Models_Pathfinder_PathfinderRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_chain_isValid && m_direction_type_isValid && m_search_type_isValid && m_source_address_isValid && true;
}

} // namespace OpenAPI
