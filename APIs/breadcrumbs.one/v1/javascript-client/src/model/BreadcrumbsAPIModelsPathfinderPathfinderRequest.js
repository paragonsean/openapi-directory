/**
 * Breadcrumbs One
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BreadcrumbsAPIModelsPathfinderPathfinderRequest model module.
 * @module model/BreadcrumbsAPIModelsPathfinderPathfinderRequest
 * @version v1
 */
class BreadcrumbsAPIModelsPathfinderPathfinderRequest {
    /**
     * Constructs a new <code>BreadcrumbsAPIModelsPathfinderPathfinderRequest</code>.
     * @alias module:model/BreadcrumbsAPIModelsPathfinderPathfinderRequest
     * @param chain {module:model/BreadcrumbsAPIModelsPathfinderPathfinderRequest.ChainEnum} Blockchain eg: ETH, BTC, SOL
     * @param directionType {module:model/BreadcrumbsAPIModelsPathfinderPathfinderRequest.DirectionTypeEnum} Direction type is what direction it should go. Accepts: 0 = Incoming and 1 = Outgoing only
     * @param searchType {module:model/BreadcrumbsAPIModelsPathfinderPathfinderRequest.SearchTypeEnum} Search type values: 1 = Shortest Path, 2 = Multiple Path, 3 = Closest Entity and 4 = Closest Illicit
     * @param sourceAddress {String} Source address is where you want to start your search
     */
    constructor(chain, directionType, searchType, sourceAddress) { 
        
        BreadcrumbsAPIModelsPathfinderPathfinderRequest.initialize(this, chain, directionType, searchType, sourceAddress);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, chain, directionType, searchType, sourceAddress) { 
        obj['chain'] = chain || 'ETH';
        obj['direction_type'] = directionType || 'Incoming';
        obj['search_type'] = searchType || 'ShortestPath';
        obj['source_address'] = sourceAddress;
    }

    /**
     * Constructs a <code>BreadcrumbsAPIModelsPathfinderPathfinderRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BreadcrumbsAPIModelsPathfinderPathfinderRequest} obj Optional instance to populate.
     * @return {module:model/BreadcrumbsAPIModelsPathfinderPathfinderRequest} The populated <code>BreadcrumbsAPIModelsPathfinderPathfinderRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BreadcrumbsAPIModelsPathfinderPathfinderRequest();

            if (data.hasOwnProperty('chain')) {
                obj['chain'] = ApiClient.convertToType(data['chain'], 'String');
            }
            if (data.hasOwnProperty('destination_addresses')) {
                obj['destination_addresses'] = ApiClient.convertToType(data['destination_addresses'], ['String']);
            }
            if (data.hasOwnProperty('direction_type')) {
                obj['direction_type'] = ApiClient.convertToType(data['direction_type'], 'String');
            }
            if (data.hasOwnProperty('entity_tags')) {
                obj['entity_tags'] = ApiClient.convertToType(data['entity_tags'], ['String']);
            }
            if (data.hasOwnProperty('search_type')) {
                obj['search_type'] = ApiClient.convertToType(data['search_type'], 'String');
            }
            if (data.hasOwnProperty('source_address')) {
                obj['source_address'] = ApiClient.convertToType(data['source_address'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BreadcrumbsAPIModelsPathfinderPathfinderRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BreadcrumbsAPIModelsPathfinderPathfinderRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BreadcrumbsAPIModelsPathfinderPathfinderRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['chain'] && !(typeof data['chain'] === 'string' || data['chain'] instanceof String)) {
            throw new Error("Expected the field `chain` to be a primitive type in the JSON string but got " + data['chain']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['destination_addresses'])) {
            throw new Error("Expected the field `destination_addresses` to be an array in the JSON data but got " + data['destination_addresses']);
        }
        // ensure the json data is a string
        if (data['direction_type'] && !(typeof data['direction_type'] === 'string' || data['direction_type'] instanceof String)) {
            throw new Error("Expected the field `direction_type` to be a primitive type in the JSON string but got " + data['direction_type']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['entity_tags'])) {
            throw new Error("Expected the field `entity_tags` to be an array in the JSON data but got " + data['entity_tags']);
        }
        // ensure the json data is a string
        if (data['search_type'] && !(typeof data['search_type'] === 'string' || data['search_type'] instanceof String)) {
            throw new Error("Expected the field `search_type` to be a primitive type in the JSON string but got " + data['search_type']);
        }
        // ensure the json data is a string
        if (data['source_address'] && !(typeof data['source_address'] === 'string' || data['source_address'] instanceof String)) {
            throw new Error("Expected the field `source_address` to be a primitive type in the JSON string but got " + data['source_address']);
        }

        return true;
    }


}

BreadcrumbsAPIModelsPathfinderPathfinderRequest.RequiredProperties = ["chain", "direction_type", "search_type", "source_address"];

/**
 * Blockchain eg: ETH, BTC, SOL
 * @member {module:model/BreadcrumbsAPIModelsPathfinderPathfinderRequest.ChainEnum} chain
 * @default 'ETH'
 */
BreadcrumbsAPIModelsPathfinderPathfinderRequest.prototype['chain'] = 'ETH';

/**
 * Required if search_type is either Shortest/Multiple Path.  If you know where did the money went or come from.
 * @member {Array.<String>} destination_addresses
 */
BreadcrumbsAPIModelsPathfinderPathfinderRequest.prototype['destination_addresses'] = undefined;

/**
 * Direction type is what direction it should go. Accepts: 0 = Incoming and 1 = Outgoing only
 * @member {module:model/BreadcrumbsAPIModelsPathfinderPathfinderRequest.DirectionTypeEnum} direction_type
 * @default 'Incoming'
 */
BreadcrumbsAPIModelsPathfinderPathfinderRequest.prototype['direction_type'] = 'Incoming';

/**
 * Required if search_type is Closest Entity.  Available values are: Exchange, DEX, Mining, ICO, Mixer
 * @member {Array.<module:model/BreadcrumbsAPIModelsPathfinderPathfinderRequest.EntityTagsEnum>} entity_tags
 */
BreadcrumbsAPIModelsPathfinderPathfinderRequest.prototype['entity_tags'] = undefined;

/**
 * Search type values: 1 = Shortest Path, 2 = Multiple Path, 3 = Closest Entity and 4 = Closest Illicit
 * @member {module:model/BreadcrumbsAPIModelsPathfinderPathfinderRequest.SearchTypeEnum} search_type
 * @default 'ShortestPath'
 */
BreadcrumbsAPIModelsPathfinderPathfinderRequest.prototype['search_type'] = 'ShortestPath';

/**
 * Source address is where you want to start your search
 * @member {String} source_address
 */
BreadcrumbsAPIModelsPathfinderPathfinderRequest.prototype['source_address'] = undefined;





/**
 * Allowed values for the <code>chain</code> property.
 * @enum {String}
 * @readonly
 */
BreadcrumbsAPIModelsPathfinderPathfinderRequest['ChainEnum'] = {

    /**
     * value: "ETH"
     * @const
     */
    "ETH": "ETH",

    /**
     * value: "BTC"
     * @const
     */
    "BTC": "BTC",

    /**
     * value: "SOL"
     * @const
     */
    "SOL": "SOL"
};


/**
 * Allowed values for the <code>direction_type</code> property.
 * @enum {String}
 * @readonly
 */
BreadcrumbsAPIModelsPathfinderPathfinderRequest['DirectionTypeEnum'] = {

    /**
     * value: "Incoming"
     * @const
     */
    "Incoming": "Incoming",

    /**
     * value: "Outgoing"
     * @const
     */
    "Outgoing": "Outgoing"
};


/**
 * Allowed values for the <code>entityTags</code> property.
 * @enum {String}
 * @readonly
 */
BreadcrumbsAPIModelsPathfinderPathfinderRequest['EntityTagsEnum'] = {

    /**
     * value: "Exchange"
     * @const
     */
    "Exchange": "Exchange",

    /**
     * value: "DEX"
     * @const
     */
    "DEX": "DEX",

    /**
     * value: "Mining"
     * @const
     */
    "Mining": "Mining",

    /**
     * value: "ICO"
     * @const
     */
    "ICO": "ICO",

    /**
     * value: "Mixer"
     * @const
     */
    "Mixer": "Mixer"
};


/**
 * Allowed values for the <code>search_type</code> property.
 * @enum {String}
 * @readonly
 */
BreadcrumbsAPIModelsPathfinderPathfinderRequest['SearchTypeEnum'] = {

    /**
     * value: "ShortestPath"
     * @const
     */
    "ShortestPath": "ShortestPath",

    /**
     * value: "MultiplePath"
     * @const
     */
    "MultiplePath": "MultiplePath",

    /**
     * value: "ClosestEntity"
     * @const
     */
    "ClosestEntity": "ClosestEntity",

    /**
     * value: "ClosestIllicit"
     * @const
     */
    "ClosestIllicit": "ClosestIllicit"
};



export default BreadcrumbsAPIModelsPathfinderPathfinderRequest;

