/**
 * Breadcrumbs One
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BreadcrumbsAPIModelsNodeNodeRequest model module.
 * @module model/BreadcrumbsAPIModelsNodeNodeRequest
 * @version v1
 */
class BreadcrumbsAPIModelsNodeNodeRequest {
    /**
     * Constructs a new <code>BreadcrumbsAPIModelsNodeNodeRequest</code>.
     * @alias module:model/BreadcrumbsAPIModelsNodeNodeRequest
     * @param address {String} Blockchain address
     * @param chain {module:model/BreadcrumbsAPIModelsNodeNodeRequest.ChainEnum} Blockchain eg: ETH, BTC, MATIC, RON, SOL, TRX
     */
    constructor(address, chain) { 
        
        BreadcrumbsAPIModelsNodeNodeRequest.initialize(this, address, chain);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, address, chain) { 
        obj['address'] = address;
        obj['chain'] = chain || 'ETH';
    }

    /**
     * Constructs a <code>BreadcrumbsAPIModelsNodeNodeRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BreadcrumbsAPIModelsNodeNodeRequest} obj Optional instance to populate.
     * @return {module:model/BreadcrumbsAPIModelsNodeNodeRequest} The populated <code>BreadcrumbsAPIModelsNodeNodeRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BreadcrumbsAPIModelsNodeNodeRequest();

            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
            if (data.hasOwnProperty('chain')) {
                obj['chain'] = ApiClient.convertToType(data['chain'], 'String');
            }
            if (data.hasOwnProperty('token_address')) {
                obj['token_address'] = ApiClient.convertToType(data['token_address'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BreadcrumbsAPIModelsNodeNodeRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BreadcrumbsAPIModelsNodeNodeRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BreadcrumbsAPIModelsNodeNodeRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['address'] && !(typeof data['address'] === 'string' || data['address'] instanceof String)) {
            throw new Error("Expected the field `address` to be a primitive type in the JSON string but got " + data['address']);
        }
        // ensure the json data is a string
        if (data['chain'] && !(typeof data['chain'] === 'string' || data['chain'] instanceof String)) {
            throw new Error("Expected the field `chain` to be a primitive type in the JSON string but got " + data['chain']);
        }
        // ensure the json data is a string
        if (data['token_address'] && !(typeof data['token_address'] === 'string' || data['token_address'] instanceof String)) {
            throw new Error("Expected the field `token_address` to be a primitive type in the JSON string but got " + data['token_address']);
        }

        return true;
    }


}

BreadcrumbsAPIModelsNodeNodeRequest.RequiredProperties = ["address", "chain"];

/**
 * Blockchain address
 * @member {String} address
 */
BreadcrumbsAPIModelsNodeNodeRequest.prototype['address'] = undefined;

/**
 * Blockchain eg: ETH, BTC, MATIC, RON, SOL, TRX
 * @member {module:model/BreadcrumbsAPIModelsNodeNodeRequest.ChainEnum} chain
 * @default 'ETH'
 */
BreadcrumbsAPIModelsNodeNodeRequest.prototype['chain'] = 'ETH';

/**
 * If set, will only show transactions from this token
 * @member {String} token_address
 */
BreadcrumbsAPIModelsNodeNodeRequest.prototype['token_address'] = undefined;





/**
 * Allowed values for the <code>chain</code> property.
 * @enum {String}
 * @readonly
 */
BreadcrumbsAPIModelsNodeNodeRequest['ChainEnum'] = {

    /**
     * value: "ETH"
     * @const
     */
    "ETH": "ETH",

    /**
     * value: "BTC"
     * @const
     */
    "BTC": "BTC",

    /**
     * value: "MATIC"
     * @const
     */
    "MATIC": "MATIC",

    /**
     * value: "RON"
     * @const
     */
    "RON": "RON",

    /**
     * value: "SOL"
     * @const
     */
    "SOL": "SOL",

    /**
     * value: "TRX"
     * @const
     */
    "TRX": "TRX"
};



export default BreadcrumbsAPIModelsNodeNodeRequest;

