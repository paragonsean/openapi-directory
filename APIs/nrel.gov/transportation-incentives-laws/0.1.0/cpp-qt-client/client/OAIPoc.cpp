/**
 * Transportation Laws and Incentives
 * Query our database of federal and state laws and incentives for alternative fuels and vehicles, air quality, fuel efficiency, and other transportation-related topics. This dataset powers the <a href=\"https://afdc.energy.gov/laws\">Federal and State Laws and Incentives</a> on the Alternative Fuels Data Center.
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPoc.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPoc::OAIPoc(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPoc::OAIPoc() {
    this->initializeModel();
}

OAIPoc::~OAIPoc() {}

void OAIPoc::initializeModel() {

    m_agency_isSet = false;
    m_agency_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_fax_isSet = false;
    m_fax_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_telephone_isSet = false;
    m_telephone_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_web_page_isSet = false;
    m_web_page_isValid = false;
}

void OAIPoc::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPoc::fromJsonObject(QJsonObject json) {

    m_agency_isValid = ::OpenAPI::fromJsonValue(m_agency, json[QString("agency")]);
    m_agency_isSet = !json[QString("agency")].isNull() && m_agency_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_fax_isValid = ::OpenAPI::fromJsonValue(m_fax, json[QString("fax")]);
    m_fax_isSet = !json[QString("fax")].isNull() && m_fax_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_telephone_isValid = ::OpenAPI::fromJsonValue(m_telephone, json[QString("telephone")]);
    m_telephone_isSet = !json[QString("telephone")].isNull() && m_telephone_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;

    m_web_page_isValid = ::OpenAPI::fromJsonValue(m_web_page, json[QString("web_page")]);
    m_web_page_isSet = !json[QString("web_page")].isNull() && m_web_page_isValid;
}

QString OAIPoc::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPoc::asJsonObject() const {
    QJsonObject obj;
    if (m_agency_isSet) {
        obj.insert(QString("agency"), ::OpenAPI::toJsonValue(m_agency));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_fax_isSet) {
        obj.insert(QString("fax"), ::OpenAPI::toJsonValue(m_fax));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_telephone_isSet) {
        obj.insert(QString("telephone"), ::OpenAPI::toJsonValue(m_telephone));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_web_page_isSet) {
        obj.insert(QString("web_page"), ::OpenAPI::toJsonValue(m_web_page));
    }
    return obj;
}

QString OAIPoc::getAgency() const {
    return m_agency;
}
void OAIPoc::setAgency(const QString &agency) {
    m_agency = agency;
    m_agency_isSet = true;
}

bool OAIPoc::is_agency_Set() const{
    return m_agency_isSet;
}

bool OAIPoc::is_agency_Valid() const{
    return m_agency_isValid;
}

QString OAIPoc::getEmail() const {
    return m_email;
}
void OAIPoc::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIPoc::is_email_Set() const{
    return m_email_isSet;
}

bool OAIPoc::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIPoc::getFax() const {
    return m_fax;
}
void OAIPoc::setFax(const QString &fax) {
    m_fax = fax;
    m_fax_isSet = true;
}

bool OAIPoc::is_fax_Set() const{
    return m_fax_isSet;
}

bool OAIPoc::is_fax_Valid() const{
    return m_fax_isValid;
}

QString OAIPoc::getName() const {
    return m_name;
}
void OAIPoc::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIPoc::is_name_Set() const{
    return m_name_isSet;
}

bool OAIPoc::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIPoc::getState() const {
    return m_state;
}
void OAIPoc::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIPoc::is_state_Set() const{
    return m_state_isSet;
}

bool OAIPoc::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIPoc::getTelephone() const {
    return m_telephone;
}
void OAIPoc::setTelephone(const QString &telephone) {
    m_telephone = telephone;
    m_telephone_isSet = true;
}

bool OAIPoc::is_telephone_Set() const{
    return m_telephone_isSet;
}

bool OAIPoc::is_telephone_Valid() const{
    return m_telephone_isValid;
}

QString OAIPoc::getTitle() const {
    return m_title;
}
void OAIPoc::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIPoc::is_title_Set() const{
    return m_title_isSet;
}

bool OAIPoc::is_title_Valid() const{
    return m_title_isValid;
}

QString OAIPoc::getWebPage() const {
    return m_web_page;
}
void OAIPoc::setWebPage(const QString &web_page) {
    m_web_page = web_page;
    m_web_page_isSet = true;
}

bool OAIPoc::is_web_page_Set() const{
    return m_web_page_isSet;
}

bool OAIPoc::is_web_page_Valid() const{
    return m_web_page_isValid;
}

bool OAIPoc::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_agency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_telephone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_web_page_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPoc::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && m_state_isValid && true;
}

} // namespace OpenAPI
