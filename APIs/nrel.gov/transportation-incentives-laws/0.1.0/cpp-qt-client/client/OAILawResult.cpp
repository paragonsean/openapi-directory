/**
 * Transportation Laws and Incentives
 * Query our database of federal and state laws and incentives for alternative fuels and vehicles, air quality, fuel efficiency, and other transportation-related topics. This dataset powers the <a href=\"https://afdc.energy.gov/laws\">Federal and State Laws and Incentives</a> on the Alternative Fuels Data Center.
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILawResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILawResult::OAILawResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILawResult::OAILawResult() {
    this->initializeModel();
}

OAILawResult::~OAILawResult() {}

void OAILawResult::initializeModel() {

    m_inputs_isSet = false;
    m_inputs_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;

    m_result_isSet = false;
    m_result_isValid = false;
}

void OAILawResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILawResult::fromJsonObject(QJsonObject json) {

    m_inputs_isValid = ::OpenAPI::fromJsonValue(m_inputs, json[QString("inputs")]);
    m_inputs_isSet = !json[QString("inputs")].isNull() && m_inputs_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;

    m_result_isValid = ::OpenAPI::fromJsonValue(m_result, json[QString("result")]);
    m_result_isSet = !json[QString("result")].isNull() && m_result_isValid;
}

QString OAILawResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILawResult::asJsonObject() const {
    QJsonObject obj;
    if (m_inputs_isSet) {
        obj.insert(QString("inputs"), ::OpenAPI::toJsonValue(m_inputs));
    }
    if (m_metadata.isSet()) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    if (m_result.isSet()) {
        obj.insert(QString("result"), ::OpenAPI::toJsonValue(m_result));
    }
    return obj;
}

QJsonValue OAILawResult::getInputs() const {
    return m_inputs;
}
void OAILawResult::setInputs(const QJsonValue &inputs) {
    m_inputs = inputs;
    m_inputs_isSet = true;
}

bool OAILawResult::is_inputs_Set() const{
    return m_inputs_isSet;
}

bool OAILawResult::is_inputs_Valid() const{
    return m_inputs_isValid;
}

OAIMetadata OAILawResult::getMetadata() const {
    return m_metadata;
}
void OAILawResult::setMetadata(const OAIMetadata &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAILawResult::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAILawResult::is_metadata_Valid() const{
    return m_metadata_isValid;
}

OAILaw OAILawResult::getResult() const {
    return m_result;
}
void OAILawResult::setResult(const OAILaw &result) {
    m_result = result;
    m_result_isSet = true;
}

bool OAILawResult::is_result_Set() const{
    return m_result_isSet;
}

bool OAILawResult::is_result_Valid() const{
    return m_result_isValid;
}

bool OAILawResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_inputs_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_result.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILawResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_inputs_isValid && m_metadata_isValid && m_result_isValid && true;
}

} // namespace OpenAPI
