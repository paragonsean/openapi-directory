/**
 * Transportation Laws and Incentives
 * Query our database of federal and state laws and incentives for alternative fuels and vehicles, air quality, fuel efficiency, and other transportation-related topics. This dataset powers the <a href=\"https://afdc.energy.gov/laws\">Federal and State Laws and Incentives</a> on the Alternative Fuels Data Center.
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILaw.h
 *
 * This is a Law
 */

#ifndef OAILaw_H
#define OAILaw_H

#include <QJsonObject>

#include "OAICategory.h"
#include "OAILawReference.h"
#include "OAILawTopics.h"
#include "OAILawType.h"
#include "OAIPoc.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICategory;
class OAIPoc;
class OAILawReference;
class OAILawTopics;
class OAILawType;

class OAILaw : public OAIObject {
public:
    OAILaw();
    OAILaw(QString json);
    ~OAILaw() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAgency() const;
    void setAgency(const QString &agency);
    bool is_agency_Set() const;
    bool is_agency_Valid() const;

    QDateTime getAmendedDate() const;
    void setAmendedDate(const QDateTime &amended_date);
    bool is_amended_date_Set() const;
    bool is_amended_date_Valid() const;

    QDateTime getArchivedDate() const;
    void setArchivedDate(const QDateTime &archived_date);
    bool is_archived_date_Set() const;
    bool is_archived_date_Valid() const;

    QList<OAICategory> getCategories() const;
    void setCategories(const QList<OAICategory> &categories);
    bool is_categories_Set() const;
    bool is_categories_Valid() const;

    QList<OAIPoc> getContacts() const;
    void setContacts(const QList<OAIPoc> &contacts);
    bool is_contacts_Set() const;
    bool is_contacts_Valid() const;

    QDateTime getEnactedDate() const;
    void setEnactedDate(const QDateTime &enacted_date);
    bool is_enacted_date_Set() const;
    bool is_enacted_date_Valid() const;

    QDateTime getExpiredDate() const;
    void setExpiredDate(const QDateTime &expired_date);
    bool is_expired_date_Set() const;
    bool is_expired_date_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsRecent() const;
    void setIsRecent(const bool &is_recent);
    bool is_is_recent_Set() const;
    bool is_is_recent_Valid() const;

    QString getPlaintext() const;
    void setPlaintext(const QString &plaintext);
    bool is_plaintext_Set() const;
    bool is_plaintext_Valid() const;

    QString getRecentUpdateOrNew() const;
    void setRecentUpdateOrNew(const QString &recent_update_or_new);
    bool is_recent_update_or_new_Set() const;
    bool is_recent_update_or_new_Valid() const;

    QList<OAILawReference> getReferences() const;
    void setReferences(const QList<OAILawReference> &references);
    bool is_references_Set() const;
    bool is_references_Valid() const;

    QDateTime getRepealedDate() const;
    void setRepealedDate(const QDateTime &repealed_date);
    bool is_repealed_date_Set() const;
    bool is_repealed_date_Valid() const;

    qint32 getSeqNum() const;
    void setSeqNum(const qint32 &seq_num);
    bool is_seq_num_Set() const;
    bool is_seq_num_Valid() const;

    QDateTime getSignificantUpdateDate() const;
    void setSignificantUpdateDate(const QDateTime &significant_update_date);
    bool is_significant_update_date_Set() const;
    bool is_significant_update_date_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QList<OAILawTopics> getTopics() const;
    void setTopics(const QList<OAILawTopics> &topics);
    bool is_topics_Set() const;
    bool is_topics_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QList<OAILawType> getTypes() const;
    void setTypes(const QList<OAILawType> &types);
    bool is_types_Set() const;
    bool is_types_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_agency;
    bool m_agency_isSet;
    bool m_agency_isValid;

    QDateTime m_amended_date;
    bool m_amended_date_isSet;
    bool m_amended_date_isValid;

    QDateTime m_archived_date;
    bool m_archived_date_isSet;
    bool m_archived_date_isValid;

    QList<OAICategory> m_categories;
    bool m_categories_isSet;
    bool m_categories_isValid;

    QList<OAIPoc> m_contacts;
    bool m_contacts_isSet;
    bool m_contacts_isValid;

    QDateTime m_enacted_date;
    bool m_enacted_date_isSet;
    bool m_enacted_date_isValid;

    QDateTime m_expired_date;
    bool m_expired_date_isSet;
    bool m_expired_date_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_recent;
    bool m_is_recent_isSet;
    bool m_is_recent_isValid;

    QString m_plaintext;
    bool m_plaintext_isSet;
    bool m_plaintext_isValid;

    QString m_recent_update_or_new;
    bool m_recent_update_or_new_isSet;
    bool m_recent_update_or_new_isValid;

    QList<OAILawReference> m_references;
    bool m_references_isSet;
    bool m_references_isValid;

    QDateTime m_repealed_date;
    bool m_repealed_date_isSet;
    bool m_repealed_date_isValid;

    qint32 m_seq_num;
    bool m_seq_num_isSet;
    bool m_seq_num_isValid;

    QDateTime m_significant_update_date;
    bool m_significant_update_date_isSet;
    bool m_significant_update_date_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QList<OAILawTopics> m_topics;
    bool m_topics_isSet;
    bool m_topics_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QList<OAILawType> m_types;
    bool m_types_isSet;
    bool m_types_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILaw)

#endif // OAILaw_H
