/**
 * Tradematic Cloud API
 * ### Overview Tradematic Cloud is a trading infrastructure for building investment services.  Itâ€™s a trading engine + API + ready-made adapters to stock and forex brokers, crypto exchanges, and market data providers.  You can use it as a cloud API, or you can deploy it on your servers.     ### How to use Tradematic Cloud API  Sign up at [tradematic.cloud](https://tradematic.cloud). After signing up, you will receive your API key.  ### Authorization  Add the 'X-API-KEY' header with your API key to each request.  ### Examples of writing code with Tradematic Cloud API  Examples are available at [tradematic.cloud](https://tradematic.cloud).   ### Swagger (.yaml) File Swagger (.yaml) file can be found [here](http://tradematic.cloud/sdk/swagger.yaml). 
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: support@tradematic.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAI_taskmanager_tasks__taskid__result2_get_200_response.h
 *
 * 
 */

#ifndef OAI_taskmanager_tasks__taskid__result2_get_200_response_H
#define OAI_taskmanager_tasks__taskid__result2_get_200_response_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAI_taskmanager_tasks__taskid__result2_get_200_response : public OAIObject {
public:
    OAI_taskmanager_tasks__taskid__result2_get_200_response();
    OAI_taskmanager_tasks__taskid__result2_get_200_response(QString json);
    ~OAI_taskmanager_tasks__taskid__result2_get_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApr() const;
    void setApr(const QString &apr);
    bool is_apr_Set() const;
    bool is_apr_Valid() const;

    QString getCurMonthProfit() const;
    void setCurMonthProfit(const QString &cur_month_profit);
    bool is_cur_month_profit_Set() const;
    bool is_cur_month_profit_Valid() const;

    QString getCurYearProfit() const;
    void setCurYearProfit(const QString &cur_year_profit);
    bool is_cur_year_profit_Set() const;
    bool is_cur_year_profit_Valid() const;

    QString getDrawdown() const;
    void setDrawdown(const QString &drawdown);
    bool is_drawdown_Set() const;
    bool is_drawdown_Valid() const;

    QString getHalfYearProfit() const;
    void setHalfYearProfit(const QString &half_year_profit);
    bool is_half_year_profit_Set() const;
    bool is_half_year_profit_Valid() const;

    QString getMonthProfit() const;
    void setMonthProfit(const QString &month_profit);
    bool is_month_profit_Set() const;
    bool is_month_profit_Valid() const;

    QString getPrevMonthProfit() const;
    void setPrevMonthProfit(const QString &prev_month_profit);
    bool is_prev_month_profit_Set() const;
    bool is_prev_month_profit_Valid() const;

    QString getTotalProfit() const;
    void setTotalProfit(const QString &total_profit);
    bool is_total_profit_Set() const;
    bool is_total_profit_Valid() const;

    QString getWeekProfit() const;
    void setWeekProfit(const QString &week_profit);
    bool is_week_profit_Set() const;
    bool is_week_profit_Valid() const;

    QString getYearProfit() const;
    void setYearProfit(const QString &year_profit);
    bool is_year_profit_Set() const;
    bool is_year_profit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_apr;
    bool m_apr_isSet;
    bool m_apr_isValid;

    QString m_cur_month_profit;
    bool m_cur_month_profit_isSet;
    bool m_cur_month_profit_isValid;

    QString m_cur_year_profit;
    bool m_cur_year_profit_isSet;
    bool m_cur_year_profit_isValid;

    QString m_drawdown;
    bool m_drawdown_isSet;
    bool m_drawdown_isValid;

    QString m_half_year_profit;
    bool m_half_year_profit_isSet;
    bool m_half_year_profit_isValid;

    QString m_month_profit;
    bool m_month_profit_isSet;
    bool m_month_profit_isValid;

    QString m_prev_month_profit;
    bool m_prev_month_profit_isSet;
    bool m_prev_month_profit_isValid;

    QString m_total_profit;
    bool m_total_profit_isSet;
    bool m_total_profit_isValid;

    QString m_week_profit;
    bool m_week_profit_isSet;
    bool m_week_profit_isValid;

    QString m_year_profit;
    bool m_year_profit_isSet;
    bool m_year_profit_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAI_taskmanager_tasks__taskid__result2_get_200_response)

#endif // OAI_taskmanager_tasks__taskid__result2_get_200_response_H
