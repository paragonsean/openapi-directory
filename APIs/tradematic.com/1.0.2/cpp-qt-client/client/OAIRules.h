/**
 * Tradematic Cloud API
 * ### Overview Tradematic Cloud is a trading infrastructure for building investment services.  Itâ€™s a trading engine + API + ready-made adapters to stock and forex brokers, crypto exchanges, and market data providers.  You can use it as a cloud API, or you can deploy it on your servers.     ### How to use Tradematic Cloud API  Sign up at [tradematic.cloud](https://tradematic.cloud). After signing up, you will receive your API key.  ### Authorization  Add the 'X-API-KEY' header with your API key to each request.  ### Examples of writing code with Tradematic Cloud API  Examples are available at [tradematic.cloud](https://tradematic.cloud).   ### Swagger (.yaml) File Swagger (.yaml) file can be found [here](http://tradematic.cloud/sdk/swagger.yaml). 
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: support@tradematic.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRules.h
 *
 * 
 */

#ifndef OAIRules_H
#define OAIRules_H

#include <QJsonObject>

#include "OAILongentry.h"
#include "OAILongexit.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILongentry;
class OAILongexit;

class OAIRules : public OAIObject {
public:
    OAIRules();
    OAIRules(QString json);
    ~OAIRules() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAILongentry> getLongentry() const;
    void setLongentry(const QList<OAILongentry> &longentry);
    bool is_longentry_Set() const;
    bool is_longentry_Valid() const;

    QList<OAILongexit> getLongexit() const;
    void setLongexit(const QList<OAILongexit> &longexit);
    bool is_longexit_Set() const;
    bool is_longexit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAILongentry> m_longentry;
    bool m_longentry_isSet;
    bool m_longentry_isValid;

    QList<OAILongexit> m_longexit;
    bool m_longexit_isSet;
    bool m_longexit_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRules)

#endif // OAIRules_H
