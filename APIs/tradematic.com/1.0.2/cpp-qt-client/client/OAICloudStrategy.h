/**
 * Tradematic Cloud API
 * ### Overview Tradematic Cloud is a trading infrastructure for building investment services.  Itâ€™s a trading engine + API + ready-made adapters to stock and forex brokers, crypto exchanges, and market data providers.  You can use it as a cloud API, or you can deploy it on your servers.     ### How to use Tradematic Cloud API  Sign up at [tradematic.cloud](https://tradematic.cloud). After signing up, you will receive your API key.  ### Authorization  Add the 'X-API-KEY' header with your API key to each request.  ### Examples of writing code with Tradematic Cloud API  Examples are available at [tradematic.cloud](https://tradematic.cloud).   ### Swagger (.yaml) File Swagger (.yaml) file can be found [here](http://tradematic.cloud/sdk/swagger.yaml). 
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: support@tradematic.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICloudStrategy.h
 *
 * 
 */

#ifndef OAICloudStrategy_H
#define OAICloudStrategy_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICloudStrategy : public OAIObject {
public:
    OAICloudStrategy();
    OAICloudStrategy(QString json);
    ~OAICloudStrategy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccount() const;
    void setAccount(const QString &account);
    bool is_account_Set() const;
    bool is_account_Valid() const;

    QString getComputer() const;
    void setComputer(const QString &computer);
    bool is_computer_Set() const;
    bool is_computer_Valid() const;

    QString getHwid() const;
    void setHwid(const QString &hwid);
    bool is_hwid_Set() const;
    bool is_hwid_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getStrategy() const;
    void setStrategy(const QString &strategy);
    bool is_strategy_Set() const;
    bool is_strategy_Valid() const;

    QString getStrategyid() const;
    void setStrategyid(const QString &strategyid);
    bool is_strategyid_Set() const;
    bool is_strategyid_Valid() const;

    QString getStrategystatusname() const;
    void setStrategystatusname(const QString &strategystatusname);
    bool is_strategystatusname_Set() const;
    bool is_strategystatusname_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account;
    bool m_account_isSet;
    bool m_account_isValid;

    QString m_computer;
    bool m_computer_isSet;
    bool m_computer_isValid;

    QString m_hwid;
    bool m_hwid_isSet;
    bool m_hwid_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_strategy;
    bool m_strategy_isSet;
    bool m_strategy_isValid;

    QString m_strategyid;
    bool m_strategyid_isSet;
    bool m_strategyid_isValid;

    QString m_strategystatusname;
    bool m_strategystatusname_isSet;
    bool m_strategystatusname_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICloudStrategy)

#endif // OAICloudStrategy_H
