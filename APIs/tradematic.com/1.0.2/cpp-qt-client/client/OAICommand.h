/**
 * Tradematic Cloud API
 * ### Overview Tradematic Cloud is a trading infrastructure for building investment services.  Itâ€™s a trading engine + API + ready-made adapters to stock and forex brokers, crypto exchanges, and market data providers.  You can use it as a cloud API, or you can deploy it on your servers.     ### How to use Tradematic Cloud API  Sign up at [tradematic.cloud](https://tradematic.cloud). After signing up, you will receive your API key.  ### Authorization  Add the 'X-API-KEY' header with your API key to each request.  ### Examples of writing code with Tradematic Cloud API  Examples are available at [tradematic.cloud](https://tradematic.cloud).   ### Swagger (.yaml) File Swagger (.yaml) file can be found [here](http://tradematic.cloud/sdk/swagger.yaml). 
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: support@tradematic.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICommand.h
 *
 * 
 */

#ifndef OAICommand_H
#define OAICommand_H

#include <QJsonObject>

#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICommand : public OAIObject {
public:
    OAICommand();
    OAICommand(QString json);
    ~OAICommand() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccount() const;
    void setAccount(const QString &account);
    bool is_account_Set() const;
    bool is_account_Valid() const;

    QString getAccountid() const;
    void setAccountid(const QString &accountid);
    bool is_accountid_Set() const;
    bool is_accountid_Valid() const;

    QDateTime getCommanddate() const;
    void setCommanddate(const QDateTime &commanddate);
    bool is_commanddate_Set() const;
    bool is_commanddate_Valid() const;

    QString getCommandid() const;
    void setCommandid(const QString &commandid);
    bool is_commandid_Set() const;
    bool is_commandid_Valid() const;

    QString getCommandstatusname() const;
    void setCommandstatusname(const QString &commandstatusname);
    bool is_commandstatusname_Set() const;
    bool is_commandstatusname_Valid() const;

    QString getCommandtypename() const;
    void setCommandtypename(const QString &commandtypename);
    bool is_commandtypename_Set() const;
    bool is_commandtypename_Valid() const;

    QString getComputer() const;
    void setComputer(const QString &computer);
    bool is_computer_Set() const;
    bool is_computer_Valid() const;

    QString getHwid() const;
    void setHwid(const QString &hwid);
    bool is_hwid_Set() const;
    bool is_hwid_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QMap<QString, QString> getParameters() const;
    void setParameters(const QMap<QString, QString> &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QDateTime getTimestamp() const;
    void setTimestamp(const QDateTime &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account;
    bool m_account_isSet;
    bool m_account_isValid;

    QString m_accountid;
    bool m_accountid_isSet;
    bool m_accountid_isValid;

    QDateTime m_commanddate;
    bool m_commanddate_isSet;
    bool m_commanddate_isValid;

    QString m_commandid;
    bool m_commandid_isSet;
    bool m_commandid_isValid;

    QString m_commandstatusname;
    bool m_commandstatusname_isSet;
    bool m_commandstatusname_isValid;

    QString m_commandtypename;
    bool m_commandtypename_isSet;
    bool m_commandtypename_isValid;

    QString m_computer;
    bool m_computer_isSet;
    bool m_computer_isValid;

    QString m_hwid;
    bool m_hwid_isSet;
    bool m_hwid_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QMap<QString, QString> m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QDateTime m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICommand)

#endif // OAICommand_H
