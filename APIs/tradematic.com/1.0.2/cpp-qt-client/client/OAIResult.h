/**
 * Tradematic Cloud API
 * ### Overview Tradematic Cloud is a trading infrastructure for building investment services.  Itâ€™s a trading engine + API + ready-made adapters to stock and forex brokers, crypto exchanges, and market data providers.  You can use it as a cloud API, or you can deploy it on your servers.     ### How to use Tradematic Cloud API  Sign up at [tradematic.cloud](https://tradematic.cloud). After signing up, you will receive your API key.  ### Authorization  Add the 'X-API-KEY' header with your API key to each request.  ### Examples of writing code with Tradematic Cloud API  Examples are available at [tradematic.cloud](https://tradematic.cloud).   ### Swagger (.yaml) File Swagger (.yaml) file can be found [here](http://tradematic.cloud/sdk/swagger.yaml). 
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: support@tradematic.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResult.h
 *
 * 
 */

#ifndef OAIResult_H
#define OAIResult_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIResult : public OAIObject {
public:
    OAIResult();
    OAIResult(QString json);
    ~OAIResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getC() const;
    void setC(const double &c);
    bool is_c_Set() const;
    bool is_c_Valid() const;

    double getH() const;
    void setH(const double &h);
    bool is_h_Set() const;
    bool is_h_Valid() const;

    double getL() const;
    void setL(const double &l);
    bool is_l_Set() const;
    bool is_l_Valid() const;

    qint32 getN() const;
    void setN(const qint32 &n);
    bool is_n_Set() const;
    bool is_n_Valid() const;

    double getO() const;
    void setO(const double &o);
    bool is_o_Set() const;
    bool is_o_Valid() const;

    qint32 getT() const;
    void setT(const qint32 &t);
    bool is_t_Set() const;
    bool is_t_Valid() const;

    qint32 getV() const;
    void setV(const qint32 &v);
    bool is_v_Set() const;
    bool is_v_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_c;
    bool m_c_isSet;
    bool m_c_isValid;

    double m_h;
    bool m_h_isSet;
    bool m_h_isValid;

    double m_l;
    bool m_l_isSet;
    bool m_l_isValid;

    qint32 m_n;
    bool m_n_isSet;
    bool m_n_isValid;

    double m_o;
    bool m_o_isSet;
    bool m_o_isValid;

    qint32 m_t;
    bool m_t_isSet;
    bool m_t_isValid;

    qint32 m_v;
    bool m_v_isSet;
    bool m_v_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResult)

#endif // OAIResult_H
