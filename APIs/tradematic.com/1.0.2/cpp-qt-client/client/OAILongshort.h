/**
 * Tradematic Cloud API
 * ### Overview Tradematic Cloud is a trading infrastructure for building investment services.  Itâ€™s a trading engine + API + ready-made adapters to stock and forex brokers, crypto exchanges, and market data providers.  You can use it as a cloud API, or you can deploy it on your servers.     ### How to use Tradematic Cloud API  Sign up at [tradematic.cloud](https://tradematic.cloud). After signing up, you will receive your API key.  ### Authorization  Add the 'X-API-KEY' header with your API key to each request.  ### Examples of writing code with Tradematic Cloud API  Examples are available at [tradematic.cloud](https://tradematic.cloud).   ### Swagger (.yaml) File Swagger (.yaml) file can be found [here](http://tradematic.cloud/sdk/swagger.yaml). 
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: support@tradematic.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILongshort.h
 *
 * 
 */

#ifndef OAILongshort_H
#define OAILongshort_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILongshort : public OAIObject {
public:
    OAILongshort();
    OAILongshort(QString json);
    ~OAILongshort() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApr() const;
    void setApr(const QString &apr);
    bool is_apr_Set() const;
    bool is_apr_Valid() const;

    QString getAvgbarsheld() const;
    void setAvgbarsheld(const QString &avgbarsheld);
    bool is_avgbarsheld_Set() const;
    bool is_avgbarsheld_Valid() const;

    QString getAvgloss() const;
    void setAvgloss(const QString &avgloss);
    bool is_avgloss_Set() const;
    bool is_avgloss_Valid() const;

    QString getAvglossbarsheld() const;
    void setAvglossbarsheld(const QString &avglossbarsheld);
    bool is_avglossbarsheld_Set() const;
    bool is_avglossbarsheld_Valid() const;

    QString getAvglosspct() const;
    void setAvglosspct(const QString &avglosspct);
    bool is_avglosspct_Set() const;
    bool is_avglosspct_Valid() const;

    QString getAvgprofit() const;
    void setAvgprofit(const QString &avgprofit);
    bool is_avgprofit_Set() const;
    bool is_avgprofit_Valid() const;

    QString getAvgprofitavgloss() const;
    void setAvgprofitavgloss(const QString &avgprofitavgloss);
    bool is_avgprofitavgloss_Set() const;
    bool is_avgprofitavgloss_Valid() const;

    QString getAvgprofitbarsheld() const;
    void setAvgprofitbarsheld(const QString &avgprofitbarsheld);
    bool is_avgprofitbarsheld_Set() const;
    bool is_avgprofitbarsheld_Valid() const;

    QString getAvgprofitpct() const;
    void setAvgprofitpct(const QString &avgprofitpct);
    bool is_avgprofitpct_Set() const;
    bool is_avgprofitpct_Valid() const;

    QString getEndcapital() const;
    void setEndcapital(const QString &endcapital);
    bool is_endcapital_Set() const;
    bool is_endcapital_Valid() const;

    QString getExposure() const;
    void setExposure(const QString &exposure);
    bool is_exposure_Set() const;
    bool is_exposure_Valid() const;

    QString getGrossloss() const;
    void setGrossloss(const QString &grossloss);
    bool is_grossloss_Set() const;
    bool is_grossloss_Valid() const;

    QString getGrossprofit() const;
    void setGrossprofit(const QString &grossprofit);
    bool is_grossprofit_Set() const;
    bool is_grossprofit_Valid() const;

    QString getLosingtrades() const;
    void setLosingtrades(const QString &losingtrades);
    bool is_losingtrades_Set() const;
    bool is_losingtrades_Valid() const;

    QString getLosingtradespct() const;
    void setLosingtradespct(const QString &losingtradespct);
    bool is_losingtradespct_Set() const;
    bool is_losingtradespct_Valid() const;

    QString getMar() const;
    void setMar(const QString &mar);
    bool is_mar_Set() const;
    bool is_mar_Valid() const;

    QString getMargininterest() const;
    void setMargininterest(const QString &margininterest);
    bool is_margininterest_Set() const;
    bool is_margininterest_Valid() const;

    QString getMaxconsecloss() const;
    void setMaxconsecloss(const QString &maxconsecloss);
    bool is_maxconsecloss_Set() const;
    bool is_maxconsecloss_Valid() const;

    QString getMaxconsecwin() const;
    void setMaxconsecwin(const QString &maxconsecwin);
    bool is_maxconsecwin_Set() const;
    bool is_maxconsecwin_Valid() const;

    QString getMaxdrawdown() const;
    void setMaxdrawdown(const QString &maxdrawdown);
    bool is_maxdrawdown_Set() const;
    bool is_maxdrawdown_Valid() const;

    QString getMaxdrawdowndate() const;
    void setMaxdrawdowndate(const QString &maxdrawdowndate);
    bool is_maxdrawdowndate_Set() const;
    bool is_maxdrawdowndate_Valid() const;

    QString getMaxdrawdownlength() const;
    void setMaxdrawdownlength(const QString &maxdrawdownlength);
    bool is_maxdrawdownlength_Set() const;
    bool is_maxdrawdownlength_Valid() const;

    QString getMaxdrawdownpct() const;
    void setMaxdrawdownpct(const QString &maxdrawdownpct);
    bool is_maxdrawdownpct_Set() const;
    bool is_maxdrawdownpct_Valid() const;

    QString getMaxdrawdownpctdate() const;
    void setMaxdrawdownpctdate(const QString &maxdrawdownpctdate);
    bool is_maxdrawdownpctdate_Set() const;
    bool is_maxdrawdownpctdate_Valid() const;

    QString getMpr() const;
    void setMpr(const QString &mpr);
    bool is_mpr_Set() const;
    bool is_mpr_Valid() const;

    QString getNetprofit() const;
    void setNetprofit(const QString &netprofit);
    bool is_netprofit_Set() const;
    bool is_netprofit_Valid() const;

    QString getNetprofitpct() const;
    void setNetprofitpct(const QString &netprofitpct);
    bool is_netprofitpct_Set() const;
    bool is_netprofitpct_Valid() const;

    QString getProfitabletrades() const;
    void setProfitabletrades(const QString &profitabletrades);
    bool is_profitabletrades_Set() const;
    bool is_profitabletrades_Valid() const;

    QString getProfitabletradespct() const;
    void setProfitabletradespct(const QString &profitabletradespct);
    bool is_profitabletradespct_Set() const;
    bool is_profitabletradespct_Valid() const;

    QString getProfitfactor() const;
    void setProfitfactor(const QString &profitfactor);
    bool is_profitfactor_Set() const;
    bool is_profitfactor_Valid() const;

    QString getProfitriskratio() const;
    void setProfitriskratio(const QString &profitriskratio);
    bool is_profitriskratio_Set() const;
    bool is_profitriskratio_Valid() const;

    QString getRar() const;
    void setRar(const QString &rar);
    bool is_rar_Set() const;
    bool is_rar_Valid() const;

    QString getRecoveryfactor() const;
    void setRecoveryfactor(const QString &recoveryfactor);
    bool is_recoveryfactor_Set() const;
    bool is_recoveryfactor_Valid() const;

    QString getSharperatio() const;
    void setSharperatio(const QString &sharperatio);
    bool is_sharperatio_Set() const;
    bool is_sharperatio_Valid() const;

    QString getSortinoratio() const;
    void setSortinoratio(const QString &sortinoratio);
    bool is_sortinoratio_Set() const;
    bool is_sortinoratio_Valid() const;

    QString getStartcapital() const;
    void setStartcapital(const QString &startcapital);
    bool is_startcapital_Set() const;
    bool is_startcapital_Valid() const;

    QString getTotalcommission() const;
    void setTotalcommission(const QString &totalcommission);
    bool is_totalcommission_Set() const;
    bool is_totalcommission_Valid() const;

    QString getTotaltrades() const;
    void setTotaltrades(const QString &totaltrades);
    bool is_totaltrades_Set() const;
    bool is_totaltrades_Valid() const;

    QString getTotalvolume() const;
    void setTotalvolume(const QString &totalvolume);
    bool is_totalvolume_Set() const;
    bool is_totalvolume_Valid() const;

    QString getTurnover() const;
    void setTurnover(const QString &turnover);
    bool is_turnover_Set() const;
    bool is_turnover_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_apr;
    bool m_apr_isSet;
    bool m_apr_isValid;

    QString m_avgbarsheld;
    bool m_avgbarsheld_isSet;
    bool m_avgbarsheld_isValid;

    QString m_avgloss;
    bool m_avgloss_isSet;
    bool m_avgloss_isValid;

    QString m_avglossbarsheld;
    bool m_avglossbarsheld_isSet;
    bool m_avglossbarsheld_isValid;

    QString m_avglosspct;
    bool m_avglosspct_isSet;
    bool m_avglosspct_isValid;

    QString m_avgprofit;
    bool m_avgprofit_isSet;
    bool m_avgprofit_isValid;

    QString m_avgprofitavgloss;
    bool m_avgprofitavgloss_isSet;
    bool m_avgprofitavgloss_isValid;

    QString m_avgprofitbarsheld;
    bool m_avgprofitbarsheld_isSet;
    bool m_avgprofitbarsheld_isValid;

    QString m_avgprofitpct;
    bool m_avgprofitpct_isSet;
    bool m_avgprofitpct_isValid;

    QString m_endcapital;
    bool m_endcapital_isSet;
    bool m_endcapital_isValid;

    QString m_exposure;
    bool m_exposure_isSet;
    bool m_exposure_isValid;

    QString m_grossloss;
    bool m_grossloss_isSet;
    bool m_grossloss_isValid;

    QString m_grossprofit;
    bool m_grossprofit_isSet;
    bool m_grossprofit_isValid;

    QString m_losingtrades;
    bool m_losingtrades_isSet;
    bool m_losingtrades_isValid;

    QString m_losingtradespct;
    bool m_losingtradespct_isSet;
    bool m_losingtradespct_isValid;

    QString m_mar;
    bool m_mar_isSet;
    bool m_mar_isValid;

    QString m_margininterest;
    bool m_margininterest_isSet;
    bool m_margininterest_isValid;

    QString m_maxconsecloss;
    bool m_maxconsecloss_isSet;
    bool m_maxconsecloss_isValid;

    QString m_maxconsecwin;
    bool m_maxconsecwin_isSet;
    bool m_maxconsecwin_isValid;

    QString m_maxdrawdown;
    bool m_maxdrawdown_isSet;
    bool m_maxdrawdown_isValid;

    QString m_maxdrawdowndate;
    bool m_maxdrawdowndate_isSet;
    bool m_maxdrawdowndate_isValid;

    QString m_maxdrawdownlength;
    bool m_maxdrawdownlength_isSet;
    bool m_maxdrawdownlength_isValid;

    QString m_maxdrawdownpct;
    bool m_maxdrawdownpct_isSet;
    bool m_maxdrawdownpct_isValid;

    QString m_maxdrawdownpctdate;
    bool m_maxdrawdownpctdate_isSet;
    bool m_maxdrawdownpctdate_isValid;

    QString m_mpr;
    bool m_mpr_isSet;
    bool m_mpr_isValid;

    QString m_netprofit;
    bool m_netprofit_isSet;
    bool m_netprofit_isValid;

    QString m_netprofitpct;
    bool m_netprofitpct_isSet;
    bool m_netprofitpct_isValid;

    QString m_profitabletrades;
    bool m_profitabletrades_isSet;
    bool m_profitabletrades_isValid;

    QString m_profitabletradespct;
    bool m_profitabletradespct_isSet;
    bool m_profitabletradespct_isValid;

    QString m_profitfactor;
    bool m_profitfactor_isSet;
    bool m_profitfactor_isValid;

    QString m_profitriskratio;
    bool m_profitriskratio_isSet;
    bool m_profitriskratio_isValid;

    QString m_rar;
    bool m_rar_isSet;
    bool m_rar_isValid;

    QString m_recoveryfactor;
    bool m_recoveryfactor_isSet;
    bool m_recoveryfactor_isValid;

    QString m_sharperatio;
    bool m_sharperatio_isSet;
    bool m_sharperatio_isValid;

    QString m_sortinoratio;
    bool m_sortinoratio_isSet;
    bool m_sortinoratio_isValid;

    QString m_startcapital;
    bool m_startcapital_isSet;
    bool m_startcapital_isValid;

    QString m_totalcommission;
    bool m_totalcommission_isSet;
    bool m_totalcommission_isValid;

    QString m_totaltrades;
    bool m_totaltrades_isSet;
    bool m_totaltrades_isValid;

    QString m_totalvolume;
    bool m_totalvolume_isSet;
    bool m_totalvolume_isValid;

    QString m_turnover;
    bool m_turnover_isSet;
    bool m_turnover_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILongshort)

#endif // OAILongshort_H
