/**
 * Tradematic Cloud API
 * ### Overview Tradematic Cloud is a trading infrastructure for building investment services.  Itâ€™s a trading engine + API + ready-made adapters to stock and forex brokers, crypto exchanges, and market data providers.  You can use it as a cloud API, or you can deploy it on your servers.     ### How to use Tradematic Cloud API  Sign up at [tradematic.cloud](https://tradematic.cloud). After signing up, you will receive your API key.  ### Authorization  Add the 'X-API-KEY' header with your API key to each request.  ### Examples of writing code with Tradematic Cloud API  Examples are available at [tradematic.cloud](https://tradematic.cloud).   ### Swagger (.yaml) File Swagger (.yaml) file can be found [here](http://tradematic.cloud/sdk/swagger.yaml). 
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: support@tradematic.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAI_taskmanager_tasks__taskid__result_get_200_response.h
 *
 * 
 */

#ifndef OAI_taskmanager_tasks__taskid__result_get_200_response_H
#define OAI_taskmanager_tasks__taskid__result_get_200_response_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAI_taskmanager_tasks__taskid__result_get_200_response : public OAIObject {
public:
    OAI_taskmanager_tasks__taskid__result_get_200_response();
    OAI_taskmanager_tasks__taskid__result_get_200_response(QString json);
    ~OAI_taskmanager_tasks__taskid__result_get_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBymonthsCsv() const;
    void setBymonthsCsv(const QString &bymonths_csv);
    bool is_bymonths_csv_Set() const;
    bool is_bymonths_csv_Valid() const;

    QString getBymonthsPng() const;
    void setBymonthsPng(const QString &bymonths_png);
    bool is_bymonths_png_Set() const;
    bool is_bymonths_png_Valid() const;

    QString getByquartersCsv() const;
    void setByquartersCsv(const QString &byquarters_csv);
    bool is_byquarters_csv_Set() const;
    bool is_byquarters_csv_Valid() const;

    QString getByquartersPng() const;
    void setByquartersPng(const QString &byquarters_png);
    bool is_byquarters_png_Set() const;
    bool is_byquarters_png_Valid() const;

    QString getByyearsCsv() const;
    void setByyearsCsv(const QString &byyears_csv);
    bool is_byyears_csv_Set() const;
    bool is_byyears_csv_Valid() const;

    QString getByyearsPng() const;
    void setByyearsPng(const QString &byyears_png);
    bool is_byyears_png_Set() const;
    bool is_byyears_png_Valid() const;

    QString getContributionCsv() const;
    void setContributionCsv(const QString &contribution_csv);
    bool is_contribution_csv_Set() const;
    bool is_contribution_csv_Valid() const;

    QString getContributionPng() const;
    void setContributionPng(const QString &contribution_png);
    bool is_contribution_png_Set() const;
    bool is_contribution_png_Valid() const;

    QString getDrawdownCsv() const;
    void setDrawdownCsv(const QString &drawdown_csv);
    bool is_drawdown_csv_Set() const;
    bool is_drawdown_csv_Valid() const;

    QString getDrawdownPng() const;
    void setDrawdownPng(const QString &drawdown_png);
    bool is_drawdown_png_Set() const;
    bool is_drawdown_png_Valid() const;

    QString getEquityCsv() const;
    void setEquityCsv(const QString &equity_csv);
    bool is_equity_csv_Set() const;
    bool is_equity_csv_Valid() const;

    QString getEquityPng() const;
    void setEquityPng(const QString &equity_png);
    bool is_equity_png_Set() const;
    bool is_equity_png_Valid() const;

    QString getEquitypctCsv() const;
    void setEquitypctCsv(const QString &equitypct_csv);
    bool is_equitypct_csv_Set() const;
    bool is_equitypct_csv_Valid() const;

    QString getEquitypctPng() const;
    void setEquitypctPng(const QString &equitypct_png);
    bool is_equitypct_png_Set() const;
    bool is_equitypct_png_Valid() const;

    QString getEquitypctnofillCsv() const;
    void setEquitypctnofillCsv(const QString &equitypctnofill_csv);
    bool is_equitypctnofill_csv_Set() const;
    bool is_equitypctnofill_csv_Valid() const;

    QString getEquitypctnofillPng() const;
    void setEquitypctnofillPng(const QString &equitypctnofill_png);
    bool is_equitypctnofill_png_Set() const;
    bool is_equitypctnofill_png_Valid() const;

    QString getEquitypctsm() const;
    void setEquitypctsm(const QString &equitypctsm);
    bool is_equitypctsm_Set() const;
    bool is_equitypctsm_Valid() const;

    QString getEquitypctsmCsv() const;
    void setEquitypctsmCsv(const QString &equitypctsm_csv);
    bool is_equitypctsm_csv_Set() const;
    bool is_equitypctsm_csv_Valid() const;

    QString getEquitypctsmPng() const;
    void setEquitypctsmPng(const QString &equitypctsm_png);
    bool is_equitypctsm_png_Set() const;
    bool is_equitypctsm_png_Valid() const;

    QString getPerformanceCsv() const;
    void setPerformanceCsv(const QString &performance_csv);
    bool is_performance_csv_Set() const;
    bool is_performance_csv_Valid() const;

    QString getPerformancePng() const;
    void setPerformancePng(const QString &performance_png);
    bool is_performance_png_Set() const;
    bool is_performance_png_Valid() const;

    QString getTradesCsv() const;
    void setTradesCsv(const QString &trades_csv);
    bool is_trades_csv_Set() const;
    bool is_trades_csv_Valid() const;

    QString getTradesPng() const;
    void setTradesPng(const QString &trades_png);
    bool is_trades_png_Set() const;
    bool is_trades_png_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_bymonths_csv;
    bool m_bymonths_csv_isSet;
    bool m_bymonths_csv_isValid;

    QString m_bymonths_png;
    bool m_bymonths_png_isSet;
    bool m_bymonths_png_isValid;

    QString m_byquarters_csv;
    bool m_byquarters_csv_isSet;
    bool m_byquarters_csv_isValid;

    QString m_byquarters_png;
    bool m_byquarters_png_isSet;
    bool m_byquarters_png_isValid;

    QString m_byyears_csv;
    bool m_byyears_csv_isSet;
    bool m_byyears_csv_isValid;

    QString m_byyears_png;
    bool m_byyears_png_isSet;
    bool m_byyears_png_isValid;

    QString m_contribution_csv;
    bool m_contribution_csv_isSet;
    bool m_contribution_csv_isValid;

    QString m_contribution_png;
    bool m_contribution_png_isSet;
    bool m_contribution_png_isValid;

    QString m_drawdown_csv;
    bool m_drawdown_csv_isSet;
    bool m_drawdown_csv_isValid;

    QString m_drawdown_png;
    bool m_drawdown_png_isSet;
    bool m_drawdown_png_isValid;

    QString m_equity_csv;
    bool m_equity_csv_isSet;
    bool m_equity_csv_isValid;

    QString m_equity_png;
    bool m_equity_png_isSet;
    bool m_equity_png_isValid;

    QString m_equitypct_csv;
    bool m_equitypct_csv_isSet;
    bool m_equitypct_csv_isValid;

    QString m_equitypct_png;
    bool m_equitypct_png_isSet;
    bool m_equitypct_png_isValid;

    QString m_equitypctnofill_csv;
    bool m_equitypctnofill_csv_isSet;
    bool m_equitypctnofill_csv_isValid;

    QString m_equitypctnofill_png;
    bool m_equitypctnofill_png_isSet;
    bool m_equitypctnofill_png_isValid;

    QString m_equitypctsm;
    bool m_equitypctsm_isSet;
    bool m_equitypctsm_isValid;

    QString m_equitypctsm_csv;
    bool m_equitypctsm_csv_isSet;
    bool m_equitypctsm_csv_isValid;

    QString m_equitypctsm_png;
    bool m_equitypctsm_png_isSet;
    bool m_equitypctsm_png_isValid;

    QString m_performance_csv;
    bool m_performance_csv_isSet;
    bool m_performance_csv_isValid;

    QString m_performance_png;
    bool m_performance_png_isSet;
    bool m_performance_png_isValid;

    QString m_trades_csv;
    bool m_trades_csv_isSet;
    bool m_trades_csv_isValid;

    QString m_trades_png;
    bool m_trades_png_isSet;
    bool m_trades_png_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAI_taskmanager_tasks__taskid__result_get_200_response)

#endif // OAI_taskmanager_tasks__taskid__result_get_200_response_H
