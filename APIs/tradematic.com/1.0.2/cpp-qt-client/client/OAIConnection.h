/**
 * Tradematic Cloud API
 * ### Overview Tradematic Cloud is a trading infrastructure for building investment services.  Itâ€™s a trading engine + API + ready-made adapters to stock and forex brokers, crypto exchanges, and market data providers.  You can use it as a cloud API, or you can deploy it on your servers.     ### How to use Tradematic Cloud API  Sign up at [tradematic.cloud](https://tradematic.cloud). After signing up, you will receive your API key.  ### Authorization  Add the 'X-API-KEY' header with your API key to each request.  ### Examples of writing code with Tradematic Cloud API  Examples are available at [tradematic.cloud](https://tradematic.cloud).   ### Swagger (.yaml) File Swagger (.yaml) file can be found [here](http://tradematic.cloud/sdk/swagger.yaml). 
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: support@tradematic.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConnection.h
 *
 * 
 */

#ifndef OAIConnection_H
#define OAIConnection_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIConnection : public OAIObject {
public:
    OAIConnection();
    OAIConnection(QString json);
    ~OAIConnection() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getActive() const;
    void setActive(const QString &active);
    bool is_active_Set() const;
    bool is_active_Valid() const;

    QString getConnectionid() const;
    void setConnectionid(const QString &connectionid);
    bool is_connectionid_Set() const;
    bool is_connectionid_Valid() const;

    QString getConnectionstring() const;
    void setConnectionstring(const QString &connectionstring);
    bool is_connectionstring_Set() const;
    bool is_connectionstring_Valid() const;

    QString getConnectorcode() const;
    void setConnectorcode(const QString &connectorcode);
    bool is_connectorcode_Set() const;
    bool is_connectorcode_Valid() const;

    QString getConnectorid() const;
    void setConnectorid(const QString &connectorid);
    bool is_connectorid_Set() const;
    bool is_connectorid_Valid() const;

    QString getConnectorname() const;
    void setConnectorname(const QString &connectorname);
    bool is_connectorname_Set() const;
    bool is_connectorname_Valid() const;

    QString getConnectortypename() const;
    void setConnectortypename(const QString &connectortypename);
    bool is_connectortypename_Set() const;
    bool is_connectortypename_Valid() const;

    QDateTime getCreationdate() const;
    void setCreationdate(const QDateTime &creationdate);
    bool is_creationdate_Set() const;
    bool is_creationdate_Valid() const;

    QString getHost() const;
    void setHost(const QString &host);
    bool is_host_Set() const;
    bool is_host_Valid() const;

    QString getLogin() const;
    void setLogin(const QString &login);
    bool is_login_Set() const;
    bool is_login_Valid() const;

    QString getPassword() const;
    void setPassword(const QString &password);
    bool is_password_Set() const;
    bool is_password_Valid() const;

    QString getPort() const;
    void setPort(const QString &port);
    bool is_port_Set() const;
    bool is_port_Valid() const;

    QString getSessionid() const;
    void setSessionid(const QString &sessionid);
    bool is_sessionid_Set() const;
    bool is_sessionid_Valid() const;

    QDateTime getUpdatedate() const;
    void setUpdatedate(const QDateTime &updatedate);
    bool is_updatedate_Set() const;
    bool is_updatedate_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_active;
    bool m_active_isSet;
    bool m_active_isValid;

    QString m_connectionid;
    bool m_connectionid_isSet;
    bool m_connectionid_isValid;

    QString m_connectionstring;
    bool m_connectionstring_isSet;
    bool m_connectionstring_isValid;

    QString m_connectorcode;
    bool m_connectorcode_isSet;
    bool m_connectorcode_isValid;

    QString m_connectorid;
    bool m_connectorid_isSet;
    bool m_connectorid_isValid;

    QString m_connectorname;
    bool m_connectorname_isSet;
    bool m_connectorname_isValid;

    QString m_connectortypename;
    bool m_connectortypename_isSet;
    bool m_connectortypename_isValid;

    QDateTime m_creationdate;
    bool m_creationdate_isSet;
    bool m_creationdate_isValid;

    QString m_host;
    bool m_host_isSet;
    bool m_host_isValid;

    QString m_login;
    bool m_login_isSet;
    bool m_login_isValid;

    QString m_password;
    bool m_password_isSet;
    bool m_password_isValid;

    QString m_port;
    bool m_port_isSet;
    bool m_port_isValid;

    QString m_sessionid;
    bool m_sessionid_isSet;
    bool m_sessionid_isValid;

    QDateTime m_updatedate;
    bool m_updatedate_isSet;
    bool m_updatedate_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConnection)

#endif // OAIConnection_H
