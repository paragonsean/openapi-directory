/*
 * Tradematic Cloud API
 * ### Overview Tradematic Cloud is a trading infrastructure for building investment services.  Itâ€™s a trading engine + API + ready-made adapters to stock and forex brokers, crypto exchanges, and market data providers.  You can use it as a cloud API, or you can deploy it on your servers.     ### How to use Tradematic Cloud API  Sign up at [tradematic.cloud](https://tradematic.cloud). After signing up, you will receive your API key.  ### Authorization  Add the 'X-API-KEY' header with your API key to each request.  ### Examples of writing code with Tradematic Cloud API  Examples are available at [tradematic.cloud](https://tradematic.cloud).   ### Swagger (.yaml) File Swagger (.yaml) file can be found [here](http://tradematic.cloud/sdk/swagger.yaml). 
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: support@tradematic.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Longshort
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:25:20.110152-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Longshort {
  public static final String SERIALIZED_NAME_APR = "apr";
  @SerializedName(SERIALIZED_NAME_APR)
  private String apr;

  public static final String SERIALIZED_NAME_AVGBARSHELD = "avgbarsheld";
  @SerializedName(SERIALIZED_NAME_AVGBARSHELD)
  private String avgbarsheld;

  public static final String SERIALIZED_NAME_AVGLOSS = "avgloss";
  @SerializedName(SERIALIZED_NAME_AVGLOSS)
  private String avgloss;

  public static final String SERIALIZED_NAME_AVGLOSSBARSHELD = "avglossbarsheld";
  @SerializedName(SERIALIZED_NAME_AVGLOSSBARSHELD)
  private String avglossbarsheld;

  public static final String SERIALIZED_NAME_AVGLOSSPCT = "avglosspct";
  @SerializedName(SERIALIZED_NAME_AVGLOSSPCT)
  private String avglosspct;

  public static final String SERIALIZED_NAME_AVGPROFIT = "avgprofit";
  @SerializedName(SERIALIZED_NAME_AVGPROFIT)
  private String avgprofit;

  public static final String SERIALIZED_NAME_AVGPROFITAVGLOSS = "avgprofitavgloss";
  @SerializedName(SERIALIZED_NAME_AVGPROFITAVGLOSS)
  private String avgprofitavgloss;

  public static final String SERIALIZED_NAME_AVGPROFITBARSHELD = "avgprofitbarsheld";
  @SerializedName(SERIALIZED_NAME_AVGPROFITBARSHELD)
  private String avgprofitbarsheld;

  public static final String SERIALIZED_NAME_AVGPROFITPCT = "avgprofitpct";
  @SerializedName(SERIALIZED_NAME_AVGPROFITPCT)
  private String avgprofitpct;

  public static final String SERIALIZED_NAME_ENDCAPITAL = "endcapital";
  @SerializedName(SERIALIZED_NAME_ENDCAPITAL)
  private String endcapital;

  public static final String SERIALIZED_NAME_EXPOSURE = "exposure";
  @SerializedName(SERIALIZED_NAME_EXPOSURE)
  private String exposure;

  public static final String SERIALIZED_NAME_GROSSLOSS = "grossloss";
  @SerializedName(SERIALIZED_NAME_GROSSLOSS)
  private String grossloss;

  public static final String SERIALIZED_NAME_GROSSPROFIT = "grossprofit";
  @SerializedName(SERIALIZED_NAME_GROSSPROFIT)
  private String grossprofit;

  public static final String SERIALIZED_NAME_LOSINGTRADES = "losingtrades";
  @SerializedName(SERIALIZED_NAME_LOSINGTRADES)
  private String losingtrades;

  public static final String SERIALIZED_NAME_LOSINGTRADESPCT = "losingtradespct";
  @SerializedName(SERIALIZED_NAME_LOSINGTRADESPCT)
  private String losingtradespct;

  public static final String SERIALIZED_NAME_MAR = "mar";
  @SerializedName(SERIALIZED_NAME_MAR)
  private String mar;

  public static final String SERIALIZED_NAME_MARGININTEREST = "margininterest";
  @SerializedName(SERIALIZED_NAME_MARGININTEREST)
  private String margininterest;

  public static final String SERIALIZED_NAME_MAXCONSECLOSS = "maxconsecloss";
  @SerializedName(SERIALIZED_NAME_MAXCONSECLOSS)
  private String maxconsecloss;

  public static final String SERIALIZED_NAME_MAXCONSECWIN = "maxconsecwin";
  @SerializedName(SERIALIZED_NAME_MAXCONSECWIN)
  private String maxconsecwin;

  public static final String SERIALIZED_NAME_MAXDRAWDOWN = "maxdrawdown";
  @SerializedName(SERIALIZED_NAME_MAXDRAWDOWN)
  private String maxdrawdown;

  public static final String SERIALIZED_NAME_MAXDRAWDOWNDATE = "maxdrawdowndate";
  @SerializedName(SERIALIZED_NAME_MAXDRAWDOWNDATE)
  private String maxdrawdowndate;

  public static final String SERIALIZED_NAME_MAXDRAWDOWNLENGTH = "maxdrawdownlength";
  @SerializedName(SERIALIZED_NAME_MAXDRAWDOWNLENGTH)
  private String maxdrawdownlength;

  public static final String SERIALIZED_NAME_MAXDRAWDOWNPCT = "maxdrawdownpct";
  @SerializedName(SERIALIZED_NAME_MAXDRAWDOWNPCT)
  private String maxdrawdownpct;

  public static final String SERIALIZED_NAME_MAXDRAWDOWNPCTDATE = "maxdrawdownpctdate";
  @SerializedName(SERIALIZED_NAME_MAXDRAWDOWNPCTDATE)
  private String maxdrawdownpctdate;

  public static final String SERIALIZED_NAME_MPR = "mpr";
  @SerializedName(SERIALIZED_NAME_MPR)
  private String mpr;

  public static final String SERIALIZED_NAME_NETPROFIT = "netprofit";
  @SerializedName(SERIALIZED_NAME_NETPROFIT)
  private String netprofit;

  public static final String SERIALIZED_NAME_NETPROFITPCT = "netprofitpct";
  @SerializedName(SERIALIZED_NAME_NETPROFITPCT)
  private String netprofitpct;

  public static final String SERIALIZED_NAME_PROFITABLETRADES = "profitabletrades";
  @SerializedName(SERIALIZED_NAME_PROFITABLETRADES)
  private String profitabletrades;

  public static final String SERIALIZED_NAME_PROFITABLETRADESPCT = "profitabletradespct";
  @SerializedName(SERIALIZED_NAME_PROFITABLETRADESPCT)
  private String profitabletradespct;

  public static final String SERIALIZED_NAME_PROFITFACTOR = "profitfactor";
  @SerializedName(SERIALIZED_NAME_PROFITFACTOR)
  private String profitfactor;

  public static final String SERIALIZED_NAME_PROFITRISKRATIO = "profitriskratio";
  @SerializedName(SERIALIZED_NAME_PROFITRISKRATIO)
  private String profitriskratio;

  public static final String SERIALIZED_NAME_RAR = "rar";
  @SerializedName(SERIALIZED_NAME_RAR)
  private String rar;

  public static final String SERIALIZED_NAME_RECOVERYFACTOR = "recoveryfactor";
  @SerializedName(SERIALIZED_NAME_RECOVERYFACTOR)
  private String recoveryfactor;

  public static final String SERIALIZED_NAME_SHARPERATIO = "sharperatio";
  @SerializedName(SERIALIZED_NAME_SHARPERATIO)
  private String sharperatio;

  public static final String SERIALIZED_NAME_SORTINORATIO = "sortinoratio";
  @SerializedName(SERIALIZED_NAME_SORTINORATIO)
  private String sortinoratio;

  public static final String SERIALIZED_NAME_STARTCAPITAL = "startcapital";
  @SerializedName(SERIALIZED_NAME_STARTCAPITAL)
  private String startcapital;

  public static final String SERIALIZED_NAME_TOTALCOMMISSION = "totalcommission";
  @SerializedName(SERIALIZED_NAME_TOTALCOMMISSION)
  private String totalcommission;

  public static final String SERIALIZED_NAME_TOTALTRADES = "totaltrades";
  @SerializedName(SERIALIZED_NAME_TOTALTRADES)
  private String totaltrades;

  public static final String SERIALIZED_NAME_TOTALVOLUME = "totalvolume";
  @SerializedName(SERIALIZED_NAME_TOTALVOLUME)
  private String totalvolume;

  public static final String SERIALIZED_NAME_TURNOVER = "turnover";
  @SerializedName(SERIALIZED_NAME_TURNOVER)
  private String turnover;

  public Longshort() {
  }

  public Longshort apr(String apr) {
    this.apr = apr;
    return this;
  }

  /**
   * Get apr
   * @return apr
   */
  @javax.annotation.Nullable
  public String getApr() {
    return apr;
  }

  public void setApr(String apr) {
    this.apr = apr;
  }


  public Longshort avgbarsheld(String avgbarsheld) {
    this.avgbarsheld = avgbarsheld;
    return this;
  }

  /**
   * Get avgbarsheld
   * @return avgbarsheld
   */
  @javax.annotation.Nullable
  public String getAvgbarsheld() {
    return avgbarsheld;
  }

  public void setAvgbarsheld(String avgbarsheld) {
    this.avgbarsheld = avgbarsheld;
  }


  public Longshort avgloss(String avgloss) {
    this.avgloss = avgloss;
    return this;
  }

  /**
   * Get avgloss
   * @return avgloss
   */
  @javax.annotation.Nullable
  public String getAvgloss() {
    return avgloss;
  }

  public void setAvgloss(String avgloss) {
    this.avgloss = avgloss;
  }


  public Longshort avglossbarsheld(String avglossbarsheld) {
    this.avglossbarsheld = avglossbarsheld;
    return this;
  }

  /**
   * Get avglossbarsheld
   * @return avglossbarsheld
   */
  @javax.annotation.Nullable
  public String getAvglossbarsheld() {
    return avglossbarsheld;
  }

  public void setAvglossbarsheld(String avglossbarsheld) {
    this.avglossbarsheld = avglossbarsheld;
  }


  public Longshort avglosspct(String avglosspct) {
    this.avglosspct = avglosspct;
    return this;
  }

  /**
   * Get avglosspct
   * @return avglosspct
   */
  @javax.annotation.Nullable
  public String getAvglosspct() {
    return avglosspct;
  }

  public void setAvglosspct(String avglosspct) {
    this.avglosspct = avglosspct;
  }


  public Longshort avgprofit(String avgprofit) {
    this.avgprofit = avgprofit;
    return this;
  }

  /**
   * Get avgprofit
   * @return avgprofit
   */
  @javax.annotation.Nullable
  public String getAvgprofit() {
    return avgprofit;
  }

  public void setAvgprofit(String avgprofit) {
    this.avgprofit = avgprofit;
  }


  public Longshort avgprofitavgloss(String avgprofitavgloss) {
    this.avgprofitavgloss = avgprofitavgloss;
    return this;
  }

  /**
   * Get avgprofitavgloss
   * @return avgprofitavgloss
   */
  @javax.annotation.Nullable
  public String getAvgprofitavgloss() {
    return avgprofitavgloss;
  }

  public void setAvgprofitavgloss(String avgprofitavgloss) {
    this.avgprofitavgloss = avgprofitavgloss;
  }


  public Longshort avgprofitbarsheld(String avgprofitbarsheld) {
    this.avgprofitbarsheld = avgprofitbarsheld;
    return this;
  }

  /**
   * Get avgprofitbarsheld
   * @return avgprofitbarsheld
   */
  @javax.annotation.Nullable
  public String getAvgprofitbarsheld() {
    return avgprofitbarsheld;
  }

  public void setAvgprofitbarsheld(String avgprofitbarsheld) {
    this.avgprofitbarsheld = avgprofitbarsheld;
  }


  public Longshort avgprofitpct(String avgprofitpct) {
    this.avgprofitpct = avgprofitpct;
    return this;
  }

  /**
   * Get avgprofitpct
   * @return avgprofitpct
   */
  @javax.annotation.Nullable
  public String getAvgprofitpct() {
    return avgprofitpct;
  }

  public void setAvgprofitpct(String avgprofitpct) {
    this.avgprofitpct = avgprofitpct;
  }


  public Longshort endcapital(String endcapital) {
    this.endcapital = endcapital;
    return this;
  }

  /**
   * Get endcapital
   * @return endcapital
   */
  @javax.annotation.Nullable
  public String getEndcapital() {
    return endcapital;
  }

  public void setEndcapital(String endcapital) {
    this.endcapital = endcapital;
  }


  public Longshort exposure(String exposure) {
    this.exposure = exposure;
    return this;
  }

  /**
   * Get exposure
   * @return exposure
   */
  @javax.annotation.Nullable
  public String getExposure() {
    return exposure;
  }

  public void setExposure(String exposure) {
    this.exposure = exposure;
  }


  public Longshort grossloss(String grossloss) {
    this.grossloss = grossloss;
    return this;
  }

  /**
   * Get grossloss
   * @return grossloss
   */
  @javax.annotation.Nullable
  public String getGrossloss() {
    return grossloss;
  }

  public void setGrossloss(String grossloss) {
    this.grossloss = grossloss;
  }


  public Longshort grossprofit(String grossprofit) {
    this.grossprofit = grossprofit;
    return this;
  }

  /**
   * Get grossprofit
   * @return grossprofit
   */
  @javax.annotation.Nullable
  public String getGrossprofit() {
    return grossprofit;
  }

  public void setGrossprofit(String grossprofit) {
    this.grossprofit = grossprofit;
  }


  public Longshort losingtrades(String losingtrades) {
    this.losingtrades = losingtrades;
    return this;
  }

  /**
   * Get losingtrades
   * @return losingtrades
   */
  @javax.annotation.Nullable
  public String getLosingtrades() {
    return losingtrades;
  }

  public void setLosingtrades(String losingtrades) {
    this.losingtrades = losingtrades;
  }


  public Longshort losingtradespct(String losingtradespct) {
    this.losingtradespct = losingtradespct;
    return this;
  }

  /**
   * Get losingtradespct
   * @return losingtradespct
   */
  @javax.annotation.Nullable
  public String getLosingtradespct() {
    return losingtradespct;
  }

  public void setLosingtradespct(String losingtradespct) {
    this.losingtradespct = losingtradespct;
  }


  public Longshort mar(String mar) {
    this.mar = mar;
    return this;
  }

  /**
   * Get mar
   * @return mar
   */
  @javax.annotation.Nullable
  public String getMar() {
    return mar;
  }

  public void setMar(String mar) {
    this.mar = mar;
  }


  public Longshort margininterest(String margininterest) {
    this.margininterest = margininterest;
    return this;
  }

  /**
   * Get margininterest
   * @return margininterest
   */
  @javax.annotation.Nullable
  public String getMargininterest() {
    return margininterest;
  }

  public void setMargininterest(String margininterest) {
    this.margininterest = margininterest;
  }


  public Longshort maxconsecloss(String maxconsecloss) {
    this.maxconsecloss = maxconsecloss;
    return this;
  }

  /**
   * Get maxconsecloss
   * @return maxconsecloss
   */
  @javax.annotation.Nullable
  public String getMaxconsecloss() {
    return maxconsecloss;
  }

  public void setMaxconsecloss(String maxconsecloss) {
    this.maxconsecloss = maxconsecloss;
  }


  public Longshort maxconsecwin(String maxconsecwin) {
    this.maxconsecwin = maxconsecwin;
    return this;
  }

  /**
   * Get maxconsecwin
   * @return maxconsecwin
   */
  @javax.annotation.Nullable
  public String getMaxconsecwin() {
    return maxconsecwin;
  }

  public void setMaxconsecwin(String maxconsecwin) {
    this.maxconsecwin = maxconsecwin;
  }


  public Longshort maxdrawdown(String maxdrawdown) {
    this.maxdrawdown = maxdrawdown;
    return this;
  }

  /**
   * Get maxdrawdown
   * @return maxdrawdown
   */
  @javax.annotation.Nullable
  public String getMaxdrawdown() {
    return maxdrawdown;
  }

  public void setMaxdrawdown(String maxdrawdown) {
    this.maxdrawdown = maxdrawdown;
  }


  public Longshort maxdrawdowndate(String maxdrawdowndate) {
    this.maxdrawdowndate = maxdrawdowndate;
    return this;
  }

  /**
   * Get maxdrawdowndate
   * @return maxdrawdowndate
   */
  @javax.annotation.Nullable
  public String getMaxdrawdowndate() {
    return maxdrawdowndate;
  }

  public void setMaxdrawdowndate(String maxdrawdowndate) {
    this.maxdrawdowndate = maxdrawdowndate;
  }


  public Longshort maxdrawdownlength(String maxdrawdownlength) {
    this.maxdrawdownlength = maxdrawdownlength;
    return this;
  }

  /**
   * Get maxdrawdownlength
   * @return maxdrawdownlength
   */
  @javax.annotation.Nullable
  public String getMaxdrawdownlength() {
    return maxdrawdownlength;
  }

  public void setMaxdrawdownlength(String maxdrawdownlength) {
    this.maxdrawdownlength = maxdrawdownlength;
  }


  public Longshort maxdrawdownpct(String maxdrawdownpct) {
    this.maxdrawdownpct = maxdrawdownpct;
    return this;
  }

  /**
   * Get maxdrawdownpct
   * @return maxdrawdownpct
   */
  @javax.annotation.Nullable
  public String getMaxdrawdownpct() {
    return maxdrawdownpct;
  }

  public void setMaxdrawdownpct(String maxdrawdownpct) {
    this.maxdrawdownpct = maxdrawdownpct;
  }


  public Longshort maxdrawdownpctdate(String maxdrawdownpctdate) {
    this.maxdrawdownpctdate = maxdrawdownpctdate;
    return this;
  }

  /**
   * Get maxdrawdownpctdate
   * @return maxdrawdownpctdate
   */
  @javax.annotation.Nullable
  public String getMaxdrawdownpctdate() {
    return maxdrawdownpctdate;
  }

  public void setMaxdrawdownpctdate(String maxdrawdownpctdate) {
    this.maxdrawdownpctdate = maxdrawdownpctdate;
  }


  public Longshort mpr(String mpr) {
    this.mpr = mpr;
    return this;
  }

  /**
   * Get mpr
   * @return mpr
   */
  @javax.annotation.Nullable
  public String getMpr() {
    return mpr;
  }

  public void setMpr(String mpr) {
    this.mpr = mpr;
  }


  public Longshort netprofit(String netprofit) {
    this.netprofit = netprofit;
    return this;
  }

  /**
   * Get netprofit
   * @return netprofit
   */
  @javax.annotation.Nullable
  public String getNetprofit() {
    return netprofit;
  }

  public void setNetprofit(String netprofit) {
    this.netprofit = netprofit;
  }


  public Longshort netprofitpct(String netprofitpct) {
    this.netprofitpct = netprofitpct;
    return this;
  }

  /**
   * Get netprofitpct
   * @return netprofitpct
   */
  @javax.annotation.Nullable
  public String getNetprofitpct() {
    return netprofitpct;
  }

  public void setNetprofitpct(String netprofitpct) {
    this.netprofitpct = netprofitpct;
  }


  public Longshort profitabletrades(String profitabletrades) {
    this.profitabletrades = profitabletrades;
    return this;
  }

  /**
   * Get profitabletrades
   * @return profitabletrades
   */
  @javax.annotation.Nullable
  public String getProfitabletrades() {
    return profitabletrades;
  }

  public void setProfitabletrades(String profitabletrades) {
    this.profitabletrades = profitabletrades;
  }


  public Longshort profitabletradespct(String profitabletradespct) {
    this.profitabletradespct = profitabletradespct;
    return this;
  }

  /**
   * Get profitabletradespct
   * @return profitabletradespct
   */
  @javax.annotation.Nullable
  public String getProfitabletradespct() {
    return profitabletradespct;
  }

  public void setProfitabletradespct(String profitabletradespct) {
    this.profitabletradespct = profitabletradespct;
  }


  public Longshort profitfactor(String profitfactor) {
    this.profitfactor = profitfactor;
    return this;
  }

  /**
   * Get profitfactor
   * @return profitfactor
   */
  @javax.annotation.Nullable
  public String getProfitfactor() {
    return profitfactor;
  }

  public void setProfitfactor(String profitfactor) {
    this.profitfactor = profitfactor;
  }


  public Longshort profitriskratio(String profitriskratio) {
    this.profitriskratio = profitriskratio;
    return this;
  }

  /**
   * Get profitriskratio
   * @return profitriskratio
   */
  @javax.annotation.Nullable
  public String getProfitriskratio() {
    return profitriskratio;
  }

  public void setProfitriskratio(String profitriskratio) {
    this.profitriskratio = profitriskratio;
  }


  public Longshort rar(String rar) {
    this.rar = rar;
    return this;
  }

  /**
   * Get rar
   * @return rar
   */
  @javax.annotation.Nullable
  public String getRar() {
    return rar;
  }

  public void setRar(String rar) {
    this.rar = rar;
  }


  public Longshort recoveryfactor(String recoveryfactor) {
    this.recoveryfactor = recoveryfactor;
    return this;
  }

  /**
   * Get recoveryfactor
   * @return recoveryfactor
   */
  @javax.annotation.Nullable
  public String getRecoveryfactor() {
    return recoveryfactor;
  }

  public void setRecoveryfactor(String recoveryfactor) {
    this.recoveryfactor = recoveryfactor;
  }


  public Longshort sharperatio(String sharperatio) {
    this.sharperatio = sharperatio;
    return this;
  }

  /**
   * Get sharperatio
   * @return sharperatio
   */
  @javax.annotation.Nullable
  public String getSharperatio() {
    return sharperatio;
  }

  public void setSharperatio(String sharperatio) {
    this.sharperatio = sharperatio;
  }


  public Longshort sortinoratio(String sortinoratio) {
    this.sortinoratio = sortinoratio;
    return this;
  }

  /**
   * Get sortinoratio
   * @return sortinoratio
   */
  @javax.annotation.Nullable
  public String getSortinoratio() {
    return sortinoratio;
  }

  public void setSortinoratio(String sortinoratio) {
    this.sortinoratio = sortinoratio;
  }


  public Longshort startcapital(String startcapital) {
    this.startcapital = startcapital;
    return this;
  }

  /**
   * Get startcapital
   * @return startcapital
   */
  @javax.annotation.Nullable
  public String getStartcapital() {
    return startcapital;
  }

  public void setStartcapital(String startcapital) {
    this.startcapital = startcapital;
  }


  public Longshort totalcommission(String totalcommission) {
    this.totalcommission = totalcommission;
    return this;
  }

  /**
   * Get totalcommission
   * @return totalcommission
   */
  @javax.annotation.Nullable
  public String getTotalcommission() {
    return totalcommission;
  }

  public void setTotalcommission(String totalcommission) {
    this.totalcommission = totalcommission;
  }


  public Longshort totaltrades(String totaltrades) {
    this.totaltrades = totaltrades;
    return this;
  }

  /**
   * Get totaltrades
   * @return totaltrades
   */
  @javax.annotation.Nullable
  public String getTotaltrades() {
    return totaltrades;
  }

  public void setTotaltrades(String totaltrades) {
    this.totaltrades = totaltrades;
  }


  public Longshort totalvolume(String totalvolume) {
    this.totalvolume = totalvolume;
    return this;
  }

  /**
   * Get totalvolume
   * @return totalvolume
   */
  @javax.annotation.Nullable
  public String getTotalvolume() {
    return totalvolume;
  }

  public void setTotalvolume(String totalvolume) {
    this.totalvolume = totalvolume;
  }


  public Longshort turnover(String turnover) {
    this.turnover = turnover;
    return this;
  }

  /**
   * Get turnover
   * @return turnover
   */
  @javax.annotation.Nullable
  public String getTurnover() {
    return turnover;
  }

  public void setTurnover(String turnover) {
    this.turnover = turnover;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Longshort longshort = (Longshort) o;
    return Objects.equals(this.apr, longshort.apr) &&
        Objects.equals(this.avgbarsheld, longshort.avgbarsheld) &&
        Objects.equals(this.avgloss, longshort.avgloss) &&
        Objects.equals(this.avglossbarsheld, longshort.avglossbarsheld) &&
        Objects.equals(this.avglosspct, longshort.avglosspct) &&
        Objects.equals(this.avgprofit, longshort.avgprofit) &&
        Objects.equals(this.avgprofitavgloss, longshort.avgprofitavgloss) &&
        Objects.equals(this.avgprofitbarsheld, longshort.avgprofitbarsheld) &&
        Objects.equals(this.avgprofitpct, longshort.avgprofitpct) &&
        Objects.equals(this.endcapital, longshort.endcapital) &&
        Objects.equals(this.exposure, longshort.exposure) &&
        Objects.equals(this.grossloss, longshort.grossloss) &&
        Objects.equals(this.grossprofit, longshort.grossprofit) &&
        Objects.equals(this.losingtrades, longshort.losingtrades) &&
        Objects.equals(this.losingtradespct, longshort.losingtradespct) &&
        Objects.equals(this.mar, longshort.mar) &&
        Objects.equals(this.margininterest, longshort.margininterest) &&
        Objects.equals(this.maxconsecloss, longshort.maxconsecloss) &&
        Objects.equals(this.maxconsecwin, longshort.maxconsecwin) &&
        Objects.equals(this.maxdrawdown, longshort.maxdrawdown) &&
        Objects.equals(this.maxdrawdowndate, longshort.maxdrawdowndate) &&
        Objects.equals(this.maxdrawdownlength, longshort.maxdrawdownlength) &&
        Objects.equals(this.maxdrawdownpct, longshort.maxdrawdownpct) &&
        Objects.equals(this.maxdrawdownpctdate, longshort.maxdrawdownpctdate) &&
        Objects.equals(this.mpr, longshort.mpr) &&
        Objects.equals(this.netprofit, longshort.netprofit) &&
        Objects.equals(this.netprofitpct, longshort.netprofitpct) &&
        Objects.equals(this.profitabletrades, longshort.profitabletrades) &&
        Objects.equals(this.profitabletradespct, longshort.profitabletradespct) &&
        Objects.equals(this.profitfactor, longshort.profitfactor) &&
        Objects.equals(this.profitriskratio, longshort.profitriskratio) &&
        Objects.equals(this.rar, longshort.rar) &&
        Objects.equals(this.recoveryfactor, longshort.recoveryfactor) &&
        Objects.equals(this.sharperatio, longshort.sharperatio) &&
        Objects.equals(this.sortinoratio, longshort.sortinoratio) &&
        Objects.equals(this.startcapital, longshort.startcapital) &&
        Objects.equals(this.totalcommission, longshort.totalcommission) &&
        Objects.equals(this.totaltrades, longshort.totaltrades) &&
        Objects.equals(this.totalvolume, longshort.totalvolume) &&
        Objects.equals(this.turnover, longshort.turnover);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apr, avgbarsheld, avgloss, avglossbarsheld, avglosspct, avgprofit, avgprofitavgloss, avgprofitbarsheld, avgprofitpct, endcapital, exposure, grossloss, grossprofit, losingtrades, losingtradespct, mar, margininterest, maxconsecloss, maxconsecwin, maxdrawdown, maxdrawdowndate, maxdrawdownlength, maxdrawdownpct, maxdrawdownpctdate, mpr, netprofit, netprofitpct, profitabletrades, profitabletradespct, profitfactor, profitriskratio, rar, recoveryfactor, sharperatio, sortinoratio, startcapital, totalcommission, totaltrades, totalvolume, turnover);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Longshort {\n");
    sb.append("    apr: ").append(toIndentedString(apr)).append("\n");
    sb.append("    avgbarsheld: ").append(toIndentedString(avgbarsheld)).append("\n");
    sb.append("    avgloss: ").append(toIndentedString(avgloss)).append("\n");
    sb.append("    avglossbarsheld: ").append(toIndentedString(avglossbarsheld)).append("\n");
    sb.append("    avglosspct: ").append(toIndentedString(avglosspct)).append("\n");
    sb.append("    avgprofit: ").append(toIndentedString(avgprofit)).append("\n");
    sb.append("    avgprofitavgloss: ").append(toIndentedString(avgprofitavgloss)).append("\n");
    sb.append("    avgprofitbarsheld: ").append(toIndentedString(avgprofitbarsheld)).append("\n");
    sb.append("    avgprofitpct: ").append(toIndentedString(avgprofitpct)).append("\n");
    sb.append("    endcapital: ").append(toIndentedString(endcapital)).append("\n");
    sb.append("    exposure: ").append(toIndentedString(exposure)).append("\n");
    sb.append("    grossloss: ").append(toIndentedString(grossloss)).append("\n");
    sb.append("    grossprofit: ").append(toIndentedString(grossprofit)).append("\n");
    sb.append("    losingtrades: ").append(toIndentedString(losingtrades)).append("\n");
    sb.append("    losingtradespct: ").append(toIndentedString(losingtradespct)).append("\n");
    sb.append("    mar: ").append(toIndentedString(mar)).append("\n");
    sb.append("    margininterest: ").append(toIndentedString(margininterest)).append("\n");
    sb.append("    maxconsecloss: ").append(toIndentedString(maxconsecloss)).append("\n");
    sb.append("    maxconsecwin: ").append(toIndentedString(maxconsecwin)).append("\n");
    sb.append("    maxdrawdown: ").append(toIndentedString(maxdrawdown)).append("\n");
    sb.append("    maxdrawdowndate: ").append(toIndentedString(maxdrawdowndate)).append("\n");
    sb.append("    maxdrawdownlength: ").append(toIndentedString(maxdrawdownlength)).append("\n");
    sb.append("    maxdrawdownpct: ").append(toIndentedString(maxdrawdownpct)).append("\n");
    sb.append("    maxdrawdownpctdate: ").append(toIndentedString(maxdrawdownpctdate)).append("\n");
    sb.append("    mpr: ").append(toIndentedString(mpr)).append("\n");
    sb.append("    netprofit: ").append(toIndentedString(netprofit)).append("\n");
    sb.append("    netprofitpct: ").append(toIndentedString(netprofitpct)).append("\n");
    sb.append("    profitabletrades: ").append(toIndentedString(profitabletrades)).append("\n");
    sb.append("    profitabletradespct: ").append(toIndentedString(profitabletradespct)).append("\n");
    sb.append("    profitfactor: ").append(toIndentedString(profitfactor)).append("\n");
    sb.append("    profitriskratio: ").append(toIndentedString(profitriskratio)).append("\n");
    sb.append("    rar: ").append(toIndentedString(rar)).append("\n");
    sb.append("    recoveryfactor: ").append(toIndentedString(recoveryfactor)).append("\n");
    sb.append("    sharperatio: ").append(toIndentedString(sharperatio)).append("\n");
    sb.append("    sortinoratio: ").append(toIndentedString(sortinoratio)).append("\n");
    sb.append("    startcapital: ").append(toIndentedString(startcapital)).append("\n");
    sb.append("    totalcommission: ").append(toIndentedString(totalcommission)).append("\n");
    sb.append("    totaltrades: ").append(toIndentedString(totaltrades)).append("\n");
    sb.append("    totalvolume: ").append(toIndentedString(totalvolume)).append("\n");
    sb.append("    turnover: ").append(toIndentedString(turnover)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("apr");
    openapiFields.add("avgbarsheld");
    openapiFields.add("avgloss");
    openapiFields.add("avglossbarsheld");
    openapiFields.add("avglosspct");
    openapiFields.add("avgprofit");
    openapiFields.add("avgprofitavgloss");
    openapiFields.add("avgprofitbarsheld");
    openapiFields.add("avgprofitpct");
    openapiFields.add("endcapital");
    openapiFields.add("exposure");
    openapiFields.add("grossloss");
    openapiFields.add("grossprofit");
    openapiFields.add("losingtrades");
    openapiFields.add("losingtradespct");
    openapiFields.add("mar");
    openapiFields.add("margininterest");
    openapiFields.add("maxconsecloss");
    openapiFields.add("maxconsecwin");
    openapiFields.add("maxdrawdown");
    openapiFields.add("maxdrawdowndate");
    openapiFields.add("maxdrawdownlength");
    openapiFields.add("maxdrawdownpct");
    openapiFields.add("maxdrawdownpctdate");
    openapiFields.add("mpr");
    openapiFields.add("netprofit");
    openapiFields.add("netprofitpct");
    openapiFields.add("profitabletrades");
    openapiFields.add("profitabletradespct");
    openapiFields.add("profitfactor");
    openapiFields.add("profitriskratio");
    openapiFields.add("rar");
    openapiFields.add("recoveryfactor");
    openapiFields.add("sharperatio");
    openapiFields.add("sortinoratio");
    openapiFields.add("startcapital");
    openapiFields.add("totalcommission");
    openapiFields.add("totaltrades");
    openapiFields.add("totalvolume");
    openapiFields.add("turnover");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Longshort
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Longshort.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Longshort is not found in the empty JSON string", Longshort.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Longshort.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Longshort` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("apr") != null && !jsonObj.get("apr").isJsonNull()) && !jsonObj.get("apr").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apr` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apr").toString()));
      }
      if ((jsonObj.get("avgbarsheld") != null && !jsonObj.get("avgbarsheld").isJsonNull()) && !jsonObj.get("avgbarsheld").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `avgbarsheld` to be a primitive type in the JSON string but got `%s`", jsonObj.get("avgbarsheld").toString()));
      }
      if ((jsonObj.get("avgloss") != null && !jsonObj.get("avgloss").isJsonNull()) && !jsonObj.get("avgloss").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `avgloss` to be a primitive type in the JSON string but got `%s`", jsonObj.get("avgloss").toString()));
      }
      if ((jsonObj.get("avglossbarsheld") != null && !jsonObj.get("avglossbarsheld").isJsonNull()) && !jsonObj.get("avglossbarsheld").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `avglossbarsheld` to be a primitive type in the JSON string but got `%s`", jsonObj.get("avglossbarsheld").toString()));
      }
      if ((jsonObj.get("avglosspct") != null && !jsonObj.get("avglosspct").isJsonNull()) && !jsonObj.get("avglosspct").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `avglosspct` to be a primitive type in the JSON string but got `%s`", jsonObj.get("avglosspct").toString()));
      }
      if ((jsonObj.get("avgprofit") != null && !jsonObj.get("avgprofit").isJsonNull()) && !jsonObj.get("avgprofit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `avgprofit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("avgprofit").toString()));
      }
      if ((jsonObj.get("avgprofitavgloss") != null && !jsonObj.get("avgprofitavgloss").isJsonNull()) && !jsonObj.get("avgprofitavgloss").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `avgprofitavgloss` to be a primitive type in the JSON string but got `%s`", jsonObj.get("avgprofitavgloss").toString()));
      }
      if ((jsonObj.get("avgprofitbarsheld") != null && !jsonObj.get("avgprofitbarsheld").isJsonNull()) && !jsonObj.get("avgprofitbarsheld").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `avgprofitbarsheld` to be a primitive type in the JSON string but got `%s`", jsonObj.get("avgprofitbarsheld").toString()));
      }
      if ((jsonObj.get("avgprofitpct") != null && !jsonObj.get("avgprofitpct").isJsonNull()) && !jsonObj.get("avgprofitpct").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `avgprofitpct` to be a primitive type in the JSON string but got `%s`", jsonObj.get("avgprofitpct").toString()));
      }
      if ((jsonObj.get("endcapital") != null && !jsonObj.get("endcapital").isJsonNull()) && !jsonObj.get("endcapital").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endcapital` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endcapital").toString()));
      }
      if ((jsonObj.get("exposure") != null && !jsonObj.get("exposure").isJsonNull()) && !jsonObj.get("exposure").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `exposure` to be a primitive type in the JSON string but got `%s`", jsonObj.get("exposure").toString()));
      }
      if ((jsonObj.get("grossloss") != null && !jsonObj.get("grossloss").isJsonNull()) && !jsonObj.get("grossloss").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `grossloss` to be a primitive type in the JSON string but got `%s`", jsonObj.get("grossloss").toString()));
      }
      if ((jsonObj.get("grossprofit") != null && !jsonObj.get("grossprofit").isJsonNull()) && !jsonObj.get("grossprofit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `grossprofit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("grossprofit").toString()));
      }
      if ((jsonObj.get("losingtrades") != null && !jsonObj.get("losingtrades").isJsonNull()) && !jsonObj.get("losingtrades").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `losingtrades` to be a primitive type in the JSON string but got `%s`", jsonObj.get("losingtrades").toString()));
      }
      if ((jsonObj.get("losingtradespct") != null && !jsonObj.get("losingtradespct").isJsonNull()) && !jsonObj.get("losingtradespct").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `losingtradespct` to be a primitive type in the JSON string but got `%s`", jsonObj.get("losingtradespct").toString()));
      }
      if ((jsonObj.get("mar") != null && !jsonObj.get("mar").isJsonNull()) && !jsonObj.get("mar").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mar` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mar").toString()));
      }
      if ((jsonObj.get("margininterest") != null && !jsonObj.get("margininterest").isJsonNull()) && !jsonObj.get("margininterest").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `margininterest` to be a primitive type in the JSON string but got `%s`", jsonObj.get("margininterest").toString()));
      }
      if ((jsonObj.get("maxconsecloss") != null && !jsonObj.get("maxconsecloss").isJsonNull()) && !jsonObj.get("maxconsecloss").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maxconsecloss` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maxconsecloss").toString()));
      }
      if ((jsonObj.get("maxconsecwin") != null && !jsonObj.get("maxconsecwin").isJsonNull()) && !jsonObj.get("maxconsecwin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maxconsecwin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maxconsecwin").toString()));
      }
      if ((jsonObj.get("maxdrawdown") != null && !jsonObj.get("maxdrawdown").isJsonNull()) && !jsonObj.get("maxdrawdown").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maxdrawdown` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maxdrawdown").toString()));
      }
      if ((jsonObj.get("maxdrawdowndate") != null && !jsonObj.get("maxdrawdowndate").isJsonNull()) && !jsonObj.get("maxdrawdowndate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maxdrawdowndate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maxdrawdowndate").toString()));
      }
      if ((jsonObj.get("maxdrawdownlength") != null && !jsonObj.get("maxdrawdownlength").isJsonNull()) && !jsonObj.get("maxdrawdownlength").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maxdrawdownlength` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maxdrawdownlength").toString()));
      }
      if ((jsonObj.get("maxdrawdownpct") != null && !jsonObj.get("maxdrawdownpct").isJsonNull()) && !jsonObj.get("maxdrawdownpct").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maxdrawdownpct` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maxdrawdownpct").toString()));
      }
      if ((jsonObj.get("maxdrawdownpctdate") != null && !jsonObj.get("maxdrawdownpctdate").isJsonNull()) && !jsonObj.get("maxdrawdownpctdate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maxdrawdownpctdate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maxdrawdownpctdate").toString()));
      }
      if ((jsonObj.get("mpr") != null && !jsonObj.get("mpr").isJsonNull()) && !jsonObj.get("mpr").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mpr` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mpr").toString()));
      }
      if ((jsonObj.get("netprofit") != null && !jsonObj.get("netprofit").isJsonNull()) && !jsonObj.get("netprofit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `netprofit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("netprofit").toString()));
      }
      if ((jsonObj.get("netprofitpct") != null && !jsonObj.get("netprofitpct").isJsonNull()) && !jsonObj.get("netprofitpct").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `netprofitpct` to be a primitive type in the JSON string but got `%s`", jsonObj.get("netprofitpct").toString()));
      }
      if ((jsonObj.get("profitabletrades") != null && !jsonObj.get("profitabletrades").isJsonNull()) && !jsonObj.get("profitabletrades").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `profitabletrades` to be a primitive type in the JSON string but got `%s`", jsonObj.get("profitabletrades").toString()));
      }
      if ((jsonObj.get("profitabletradespct") != null && !jsonObj.get("profitabletradespct").isJsonNull()) && !jsonObj.get("profitabletradespct").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `profitabletradespct` to be a primitive type in the JSON string but got `%s`", jsonObj.get("profitabletradespct").toString()));
      }
      if ((jsonObj.get("profitfactor") != null && !jsonObj.get("profitfactor").isJsonNull()) && !jsonObj.get("profitfactor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `profitfactor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("profitfactor").toString()));
      }
      if ((jsonObj.get("profitriskratio") != null && !jsonObj.get("profitriskratio").isJsonNull()) && !jsonObj.get("profitriskratio").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `profitriskratio` to be a primitive type in the JSON string but got `%s`", jsonObj.get("profitriskratio").toString()));
      }
      if ((jsonObj.get("rar") != null && !jsonObj.get("rar").isJsonNull()) && !jsonObj.get("rar").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rar` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rar").toString()));
      }
      if ((jsonObj.get("recoveryfactor") != null && !jsonObj.get("recoveryfactor").isJsonNull()) && !jsonObj.get("recoveryfactor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recoveryfactor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recoveryfactor").toString()));
      }
      if ((jsonObj.get("sharperatio") != null && !jsonObj.get("sharperatio").isJsonNull()) && !jsonObj.get("sharperatio").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sharperatio` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sharperatio").toString()));
      }
      if ((jsonObj.get("sortinoratio") != null && !jsonObj.get("sortinoratio").isJsonNull()) && !jsonObj.get("sortinoratio").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sortinoratio` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sortinoratio").toString()));
      }
      if ((jsonObj.get("startcapital") != null && !jsonObj.get("startcapital").isJsonNull()) && !jsonObj.get("startcapital").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startcapital` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startcapital").toString()));
      }
      if ((jsonObj.get("totalcommission") != null && !jsonObj.get("totalcommission").isJsonNull()) && !jsonObj.get("totalcommission").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `totalcommission` to be a primitive type in the JSON string but got `%s`", jsonObj.get("totalcommission").toString()));
      }
      if ((jsonObj.get("totaltrades") != null && !jsonObj.get("totaltrades").isJsonNull()) && !jsonObj.get("totaltrades").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `totaltrades` to be a primitive type in the JSON string but got `%s`", jsonObj.get("totaltrades").toString()));
      }
      if ((jsonObj.get("totalvolume") != null && !jsonObj.get("totalvolume").isJsonNull()) && !jsonObj.get("totalvolume").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `totalvolume` to be a primitive type in the JSON string but got `%s`", jsonObj.get("totalvolume").toString()));
      }
      if ((jsonObj.get("turnover") != null && !jsonObj.get("turnover").isJsonNull()) && !jsonObj.get("turnover").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `turnover` to be a primitive type in the JSON string but got `%s`", jsonObj.get("turnover").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Longshort.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Longshort' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Longshort> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Longshort.class));

       return (TypeAdapter<T>) new TypeAdapter<Longshort>() {
           @Override
           public void write(JsonWriter out, Longshort value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Longshort read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Longshort given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Longshort
   * @throws IOException if the JSON string is invalid with respect to Longshort
   */
  public static Longshort fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Longshort.class);
  }

  /**
   * Convert an instance of Longshort to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

