/*
 * Tradematic Cloud API
 * ### Overview Tradematic Cloud is a trading infrastructure for building investment services.  Itâ€™s a trading engine + API + ready-made adapters to stock and forex brokers, crypto exchanges, and market data providers.  You can use it as a cloud API, or you can deploy it on your servers.     ### How to use Tradematic Cloud API  Sign up at [tradematic.cloud](https://tradematic.cloud). After signing up, you will receive your API key.  ### Authorization  Add the 'X-API-KEY' header with your API key to each request.  ### Examples of writing code with Tradematic Cloud API  Examples are available at [tradematic.cloud](https://tradematic.cloud).   ### Swagger (.yaml) File Swagger (.yaml) file can be found [here](http://tradematic.cloud/sdk/swagger.yaml). 
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: support@tradematic.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.APIKey;
import org.openapitools.client.model.ClientApikeysKeyidDelete200Response;
import org.openapitools.client.model.ClientApikeysPost200Response;
import org.openapitools.client.model.ClientUsersLoginPost200Response;
import org.openapitools.client.model.ClientUsersRegisterPost200Response;
import org.openapitools.client.model.ClientUsersRegisterPostRequest;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.User;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ClientApiApi
 */
@Disabled
public class ClientApiApiTest {

    private final ClientApiApi api = new ClientApiApi();

    /**
     * Get API keys
     *
     * Get API keys
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clientApikeysGetTest() throws ApiException {
        List<APIKey> response = api.clientApikeysGet();
        // TODO: test validations
    }

    /**
     * Delete API key
     *
     * Delete API key
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clientApikeysKeyidDeleteTest() throws ApiException {
        Long keyid = null;
        ClientApikeysKeyidDelete200Response response = api.clientApikeysKeyidDelete(keyid);
        // TODO: test validations
    }

    /**
     * Create new API key
     *
     * Create new API key
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clientApikeysPostTest() throws ApiException {
        ClientApikeysPost200Response response = api.clientApikeysPost();
        // TODO: test validations
    }

    /**
     * Get users list
     *
     * Get users list
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clientUsersGetTest() throws ApiException {
        List<User> response = api.clientUsersGet();
        // TODO: test validations
    }

    /**
     * Logs user into the system
     *
     * Logs user into the system
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clientUsersLoginPostTest() throws ApiException {
        ClientUsersLoginPost200Response response = api.clientUsersLoginPost();
        // TODO: test validations
    }

    /**
     * Register a new user
     *
     * Register a new user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clientUsersRegisterPostTest() throws ApiException {
        ClientUsersRegisterPostRequest body = null;
        ClientUsersRegisterPost200Response response = api.clientUsersRegisterPost(body);
        // TODO: test validations
    }

    /**
     * Get user by ID
     *
     * Get user by ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clientUsersUseridGetTest() throws ApiException {
        Long userid = null;
        User response = api.clientUsersUseridGet(userid);
        // TODO: test validations
    }

}
