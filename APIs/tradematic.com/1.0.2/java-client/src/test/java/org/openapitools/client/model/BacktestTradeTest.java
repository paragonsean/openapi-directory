/*
 * Tradematic Cloud API
 * ### Overview Tradematic Cloud is a trading infrastructure for building investment services.  Itâ€™s a trading engine + API + ready-made adapters to stock and forex brokers, crypto exchanges, and market data providers.  You can use it as a cloud API, or you can deploy it on your servers.     ### How to use Tradematic Cloud API  Sign up at [tradematic.cloud](https://tradematic.cloud). After signing up, you will receive your API key.  ### Authorization  Add the 'X-API-KEY' header with your API key to each request.  ### Examples of writing code with Tradematic Cloud API  Examples are available at [tradematic.cloud](https://tradematic.cloud).   ### Swagger (.yaml) File Swagger (.yaml) file can be found [here](http://tradematic.cloud/sdk/swagger.yaml). 
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: support@tradematic.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for BacktestTrade
 */
public class BacktestTradeTest {
    private final BacktestTrade model = new BacktestTrade();

    /**
     * Model tests for BacktestTrade
     */
    @Test
    public void testBacktestTrade() {
        // TODO: test BacktestTrade
    }

    /**
     * Test the property 'barsheld'
     */
    @Test
    public void barsheldTest() {
        // TODO: test barsheld
    }

    /**
     * Test the property 'changepct'
     */
    @Test
    public void changepctTest() {
        // TODO: test changepct
    }

    /**
     * Test the property 'commission'
     */
    @Test
    public void commissionTest() {
        // TODO: test commission
    }

    /**
     * Test the property 'entrydatetime'
     */
    @Test
    public void entrydatetimeTest() {
        // TODO: test entrydatetime
    }

    /**
     * Test the property 'entryprice'
     */
    @Test
    public void entrypriceTest() {
        // TODO: test entryprice
    }

    /**
     * Test the property 'entrysignal'
     */
    @Test
    public void entrysignalTest() {
        // TODO: test entrysignal
    }

    /**
     * Test the property 'exitdatetime'
     */
    @Test
    public void exitdatetimeTest() {
        // TODO: test exitdatetime
    }

    /**
     * Test the property 'exitprice'
     */
    @Test
    public void exitpriceTest() {
        // TODO: test exitprice
    }

    /**
     * Test the property 'exitsignal'
     */
    @Test
    public void exitsignalTest() {
        // TODO: test exitsignal
    }

    /**
     * Test the property 'mae'
     */
    @Test
    public void maeTest() {
        // TODO: test mae
    }

    /**
     * Test the property 'mfe'
     */
    @Test
    public void mfeTest() {
        // TODO: test mfe
    }

    /**
     * Test the property 'pandl'
     */
    @Test
    public void pandlTest() {
        // TODO: test pandl
    }

    /**
     * Test the property 'position'
     */
    @Test
    public void positionTest() {
        // TODO: test position
    }

    /**
     * Test the property 'shares'
     */
    @Test
    public void sharesTest() {
        // TODO: test shares
    }

    /**
     * Test the property 'size'
     */
    @Test
    public void sizeTest() {
        // TODO: test size
    }

    /**
     * Test the property 'symbol'
     */
    @Test
    public void symbolTest() {
        // TODO: test symbol
    }

}
