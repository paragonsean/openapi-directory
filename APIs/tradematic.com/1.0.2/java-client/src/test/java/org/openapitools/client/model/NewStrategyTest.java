/*
 * Tradematic Cloud API
 * ### Overview Tradematic Cloud is a trading infrastructure for building investment services.  Itâ€™s a trading engine + API + ready-made adapters to stock and forex brokers, crypto exchanges, and market data providers.  You can use it as a cloud API, or you can deploy it on your servers.     ### How to use Tradematic Cloud API  Sign up at [tradematic.cloud](https://tradematic.cloud). After signing up, you will receive your API key.  ### Authorization  Add the 'X-API-KEY' header with your API key to each request.  ### Examples of writing code with Tradematic Cloud API  Examples are available at [tradematic.cloud](https://tradematic.cloud).   ### Swagger (.yaml) File Swagger (.yaml) file can be found [here](http://tradematic.cloud/sdk/swagger.yaml). 
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: support@tradematic.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for NewStrategy
 */
public class NewStrategyTest {
    private final NewStrategy model = new NewStrategy();

    /**
     * Model tests for NewStrategy
     */
    @Test
    public void testNewStrategy() {
        // TODO: test NewStrategy
    }

    /**
     * Test the property 'apr'
     */
    @Test
    public void aprTest() {
        // TODO: test apr
    }

    /**
     * Test the property 'author'
     */
    @Test
    public void authorTest() {
        // TODO: test author
    }

    /**
     * Test the property 'content'
     */
    @Test
    public void contentTest() {
        // TODO: test content
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'drawdown'
     */
    @Test
    public void drawdownTest() {
        // TODO: test drawdown
    }

    /**
     * Test the property 'guid'
     */
    @Test
    public void guidTest() {
        // TODO: test guid
    }

    /**
     * Test the property 'limitorder'
     */
    @Test
    public void limitorderTest() {
        // TODO: test limitorder
    }

    /**
     * Test the property 'marketname'
     */
    @Test
    public void marketnameTest() {
        // TODO: test marketname
    }

    /**
     * Test the property 'multiposition'
     */
    @Test
    public void multipositionTest() {
        // TODO: test multiposition
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'positionsize'
     */
    @Test
    public void positionsizeTest() {
        // TODO: test positionsize
    }

    /**
     * Test the property 'strategytypeid'
     */
    @Test
    public void strategytypeidTest() {
        // TODO: test strategytypeid
    }

    /**
     * Test the property 'symbols'
     */
    @Test
    public void symbolsTest() {
        // TODO: test symbols
    }

    /**
     * Test the property 'timeframe'
     */
    @Test
    public void timeframeTest() {
        // TODO: test timeframe
    }

}
