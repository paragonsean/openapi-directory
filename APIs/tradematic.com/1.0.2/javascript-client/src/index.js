/**
 * Tradematic Cloud API
 * ### Overview Tradematic Cloud is a trading infrastructure for building investment services.  It’s a trading engine + API + ready-made adapters to stock and forex brokers, crypto exchanges, and market data providers.  You can use it as a cloud API, or you can deploy it on your servers.     ### How to use Tradematic Cloud API  Sign up at [tradematic.cloud](https://tradematic.cloud). After signing up, you will receive your API key.  ### Authorization  Add the 'X-API-KEY' header with your API key to each request.  ### Examples of writing code with Tradematic Cloud API  Examples are available at [tradematic.cloud](https://tradematic.cloud).   ### Swagger (.yaml) File Swagger (.yaml) file can be found [here](http://tradematic.cloud/sdk/swagger.yaml). 
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: support@tradematic.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import APIKey from './model/APIKey';
import Account from './model/Account';
import AutofollowStrategiesPost200Response from './model/AutofollowStrategiesPost200Response';
import AutofollowStrategiesPostRequest from './model/AutofollowStrategiesPostRequest';
import AutofollowStrategiesStrategyidContentPut200Response from './model/AutofollowStrategiesStrategyidContentPut200Response';
import AutofollowStrategiesStrategyidContentPutRequest from './model/AutofollowStrategiesStrategyidContentPutRequest';
import AutofollowStrategiesStrategyidPut200Response from './model/AutofollowStrategiesStrategyidPut200Response';
import AutofollowStrategiesStrategyidPutRequest from './model/AutofollowStrategiesStrategyidPutRequest';
import AutofollowStrategiesStrategyidSignalsPost200Response from './model/AutofollowStrategiesStrategyidSignalsPost200Response';
import AutofollowStrategiesStrategyidSignalsPostRequest from './model/AutofollowStrategiesStrategyidSignalsPostRequest';
import BacktestTrade from './model/BacktestTrade';
import ByMonths from './model/ByMonths';
import ByQuarters from './model/ByQuarters';
import ByYears from './model/ByYears';
import ClientApikeysKeyidDelete200Response from './model/ClientApikeysKeyidDelete200Response';
import ClientApikeysPost200Response from './model/ClientApikeysPost200Response';
import ClientUsersLoginPost200Response from './model/ClientUsersLoginPost200Response';
import ClientUsersRegisterPost200Response from './model/ClientUsersRegisterPost200Response';
import ClientUsersRegisterPostRequest from './model/ClientUsersRegisterPostRequest';
import CloudAccountsAccountidCloseallPost202Response from './model/CloudAccountsAccountidCloseallPost202Response';
import CloudAccountsAccountidOrdersPostRequest from './model/CloudAccountsAccountidOrdersPostRequest';
import CloudConnectionsPost200Response from './model/CloudConnectionsPost200Response';
import CloudConnectionsPostRequest from './model/CloudConnectionsPostRequest';
import CloudStrategiesStartPostRequest from './model/CloudStrategiesStartPostRequest';
import CloudStrategy from './model/CloudStrategy';
import Command from './model/Command';
import Connection from './model/Connection';
import Connector from './model/Connector';
import Contribution from './model/Contribution';
import DrawdownItem from './model/DrawdownItem';
import EquityItem from './model/EquityItem';
import EquityPctItem from './model/EquityPctItem';
import EquityPctSmItem from './model/EquityPctSmItem';
import Error from './model/Error';
import Longentry from './model/Longentry';
import Longexit from './model/Longexit';
import Longshort from './model/Longshort';
import Market from './model/Market';
import MarketdataSymbolsSymbolidHistdataGet200Response from './model/MarketdataSymbolsSymbolidHistdataGet200Response';
import NewOrder from './model/NewOrder';
import NewSignal from './model/NewSignal';
import NewStrategy from './model/NewStrategy';
import NewTask from './model/NewTask';
import NewUser from './model/NewUser';
import News from './model/News';
import Order from './model/Order';
import Parameter from './model/Parameter';
import Result from './model/Result';
import Rule from './model/Rule';
import Rules from './model/Rules';
import Session from './model/Session';
import Signal from './model/Signal';
import Snapshot from './model/Snapshot';
import StartStrategyData from './model/StartStrategyData';
import Strategy from './model/Strategy';
import StrategyPosition from './model/StrategyPosition';
import Task from './model/Task';
import TaskmanagerTasksPost202Response from './model/TaskmanagerTasksPost202Response';
import TaskmanagerTasksPostRequest from './model/TaskmanagerTasksPostRequest';
import TaskmanagerTasksTaskidFolderGet200Response from './model/TaskmanagerTasksTaskidFolderGet200Response';
import TaskmanagerTasksTaskidPerformanceGet200Response from './model/TaskmanagerTasksTaskidPerformanceGet200Response';
import TaskmanagerTasksTaskidResult2Get200Response from './model/TaskmanagerTasksTaskidResult2Get200Response';
import TaskmanagerTasksTaskidResultGet200Response from './model/TaskmanagerTasksTaskidResultGet200Response';
import TaskmanagerTasksTaskidStatusGet200Response from './model/TaskmanagerTasksTaskidStatusGet200Response';
import Taskresult from './model/Taskresult';
import TimeGet200Response from './model/TimeGet200Response';
import Trade from './model/Trade';
import UpdatedConnection from './model/UpdatedConnection';
import UpdatedStrategy from './model/UpdatedStrategy';
import UpdatedStrategyContent from './model/UpdatedStrategyContent';
import User from './model/User';
import AutofollowAPIApi from './api/AutofollowAPIApi';
import BuilderAPIApi from './api/BuilderAPIApi';
import ClientAPIApi from './api/ClientAPIApi';
import CloudAPIApi from './api/CloudAPIApi';
import MarketDataAPIApi from './api/MarketDataAPIApi';
import NewsAPIApi from './api/NewsAPIApi';
import StatusAPIApi from './api/StatusAPIApi';
import TaskManagerAPIApi from './api/TaskManagerAPIApi';


/**
* ### Overview Tradematic Cloud is a trading infrastructure for building investment services.  It’s a trading engine + API + ready-made adapters to stock and forex brokers, crypto exchanges, and market data providers.  You can use it as a cloud API, or you can deploy it on your servers.     ### How to use Tradematic Cloud API  Sign up at [tradematic.cloud](https://tradematic.cloud). After signing up, you will receive your API key.  ### Authorization  Add the &#39;X-API-KEY&#39; header with your API key to each request.  ### Examples of writing code with Tradematic Cloud API  Examples are available at [tradematic.cloud](https://tradematic.cloud).   ### Swagger (.yaml) File Swagger (.yaml) file can be found [here](http://tradematic.cloud/sdk/swagger.yaml). .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var TradematicCloudApi = require('index'); // See note below*.
* var xxxSvc = new TradematicCloudApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new TradematicCloudApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new TradematicCloudApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new TradematicCloudApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.2
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The APIKey model constructor.
     * @property {module:model/APIKey}
     */
    APIKey,

    /**
     * The Account model constructor.
     * @property {module:model/Account}
     */
    Account,

    /**
     * The AutofollowStrategiesPost200Response model constructor.
     * @property {module:model/AutofollowStrategiesPost200Response}
     */
    AutofollowStrategiesPost200Response,

    /**
     * The AutofollowStrategiesPostRequest model constructor.
     * @property {module:model/AutofollowStrategiesPostRequest}
     */
    AutofollowStrategiesPostRequest,

    /**
     * The AutofollowStrategiesStrategyidContentPut200Response model constructor.
     * @property {module:model/AutofollowStrategiesStrategyidContentPut200Response}
     */
    AutofollowStrategiesStrategyidContentPut200Response,

    /**
     * The AutofollowStrategiesStrategyidContentPutRequest model constructor.
     * @property {module:model/AutofollowStrategiesStrategyidContentPutRequest}
     */
    AutofollowStrategiesStrategyidContentPutRequest,

    /**
     * The AutofollowStrategiesStrategyidPut200Response model constructor.
     * @property {module:model/AutofollowStrategiesStrategyidPut200Response}
     */
    AutofollowStrategiesStrategyidPut200Response,

    /**
     * The AutofollowStrategiesStrategyidPutRequest model constructor.
     * @property {module:model/AutofollowStrategiesStrategyidPutRequest}
     */
    AutofollowStrategiesStrategyidPutRequest,

    /**
     * The AutofollowStrategiesStrategyidSignalsPost200Response model constructor.
     * @property {module:model/AutofollowStrategiesStrategyidSignalsPost200Response}
     */
    AutofollowStrategiesStrategyidSignalsPost200Response,

    /**
     * The AutofollowStrategiesStrategyidSignalsPostRequest model constructor.
     * @property {module:model/AutofollowStrategiesStrategyidSignalsPostRequest}
     */
    AutofollowStrategiesStrategyidSignalsPostRequest,

    /**
     * The BacktestTrade model constructor.
     * @property {module:model/BacktestTrade}
     */
    BacktestTrade,

    /**
     * The ByMonths model constructor.
     * @property {module:model/ByMonths}
     */
    ByMonths,

    /**
     * The ByQuarters model constructor.
     * @property {module:model/ByQuarters}
     */
    ByQuarters,

    /**
     * The ByYears model constructor.
     * @property {module:model/ByYears}
     */
    ByYears,

    /**
     * The ClientApikeysKeyidDelete200Response model constructor.
     * @property {module:model/ClientApikeysKeyidDelete200Response}
     */
    ClientApikeysKeyidDelete200Response,

    /**
     * The ClientApikeysPost200Response model constructor.
     * @property {module:model/ClientApikeysPost200Response}
     */
    ClientApikeysPost200Response,

    /**
     * The ClientUsersLoginPost200Response model constructor.
     * @property {module:model/ClientUsersLoginPost200Response}
     */
    ClientUsersLoginPost200Response,

    /**
     * The ClientUsersRegisterPost200Response model constructor.
     * @property {module:model/ClientUsersRegisterPost200Response}
     */
    ClientUsersRegisterPost200Response,

    /**
     * The ClientUsersRegisterPostRequest model constructor.
     * @property {module:model/ClientUsersRegisterPostRequest}
     */
    ClientUsersRegisterPostRequest,

    /**
     * The CloudAccountsAccountidCloseallPost202Response model constructor.
     * @property {module:model/CloudAccountsAccountidCloseallPost202Response}
     */
    CloudAccountsAccountidCloseallPost202Response,

    /**
     * The CloudAccountsAccountidOrdersPostRequest model constructor.
     * @property {module:model/CloudAccountsAccountidOrdersPostRequest}
     */
    CloudAccountsAccountidOrdersPostRequest,

    /**
     * The CloudConnectionsPost200Response model constructor.
     * @property {module:model/CloudConnectionsPost200Response}
     */
    CloudConnectionsPost200Response,

    /**
     * The CloudConnectionsPostRequest model constructor.
     * @property {module:model/CloudConnectionsPostRequest}
     */
    CloudConnectionsPostRequest,

    /**
     * The CloudStrategiesStartPostRequest model constructor.
     * @property {module:model/CloudStrategiesStartPostRequest}
     */
    CloudStrategiesStartPostRequest,

    /**
     * The CloudStrategy model constructor.
     * @property {module:model/CloudStrategy}
     */
    CloudStrategy,

    /**
     * The Command model constructor.
     * @property {module:model/Command}
     */
    Command,

    /**
     * The Connection model constructor.
     * @property {module:model/Connection}
     */
    Connection,

    /**
     * The Connector model constructor.
     * @property {module:model/Connector}
     */
    Connector,

    /**
     * The Contribution model constructor.
     * @property {module:model/Contribution}
     */
    Contribution,

    /**
     * The DrawdownItem model constructor.
     * @property {module:model/DrawdownItem}
     */
    DrawdownItem,

    /**
     * The EquityItem model constructor.
     * @property {module:model/EquityItem}
     */
    EquityItem,

    /**
     * The EquityPctItem model constructor.
     * @property {module:model/EquityPctItem}
     */
    EquityPctItem,

    /**
     * The EquityPctSmItem model constructor.
     * @property {module:model/EquityPctSmItem}
     */
    EquityPctSmItem,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The Longentry model constructor.
     * @property {module:model/Longentry}
     */
    Longentry,

    /**
     * The Longexit model constructor.
     * @property {module:model/Longexit}
     */
    Longexit,

    /**
     * The Longshort model constructor.
     * @property {module:model/Longshort}
     */
    Longshort,

    /**
     * The Market model constructor.
     * @property {module:model/Market}
     */
    Market,

    /**
     * The MarketdataSymbolsSymbolidHistdataGet200Response model constructor.
     * @property {module:model/MarketdataSymbolsSymbolidHistdataGet200Response}
     */
    MarketdataSymbolsSymbolidHistdataGet200Response,

    /**
     * The NewOrder model constructor.
     * @property {module:model/NewOrder}
     */
    NewOrder,

    /**
     * The NewSignal model constructor.
     * @property {module:model/NewSignal}
     */
    NewSignal,

    /**
     * The NewStrategy model constructor.
     * @property {module:model/NewStrategy}
     */
    NewStrategy,

    /**
     * The NewTask model constructor.
     * @property {module:model/NewTask}
     */
    NewTask,

    /**
     * The NewUser model constructor.
     * @property {module:model/NewUser}
     */
    NewUser,

    /**
     * The News model constructor.
     * @property {module:model/News}
     */
    News,

    /**
     * The Order model constructor.
     * @property {module:model/Order}
     */
    Order,

    /**
     * The Parameter model constructor.
     * @property {module:model/Parameter}
     */
    Parameter,

    /**
     * The Result model constructor.
     * @property {module:model/Result}
     */
    Result,

    /**
     * The Rule model constructor.
     * @property {module:model/Rule}
     */
    Rule,

    /**
     * The Rules model constructor.
     * @property {module:model/Rules}
     */
    Rules,

    /**
     * The Session model constructor.
     * @property {module:model/Session}
     */
    Session,

    /**
     * The Signal model constructor.
     * @property {module:model/Signal}
     */
    Signal,

    /**
     * The Snapshot model constructor.
     * @property {module:model/Snapshot}
     */
    Snapshot,

    /**
     * The StartStrategyData model constructor.
     * @property {module:model/StartStrategyData}
     */
    StartStrategyData,

    /**
     * The Strategy model constructor.
     * @property {module:model/Strategy}
     */
    Strategy,

    /**
     * The StrategyPosition model constructor.
     * @property {module:model/StrategyPosition}
     */
    StrategyPosition,

    /**
     * The Task model constructor.
     * @property {module:model/Task}
     */
    Task,

    /**
     * The TaskmanagerTasksPost202Response model constructor.
     * @property {module:model/TaskmanagerTasksPost202Response}
     */
    TaskmanagerTasksPost202Response,

    /**
     * The TaskmanagerTasksPostRequest model constructor.
     * @property {module:model/TaskmanagerTasksPostRequest}
     */
    TaskmanagerTasksPostRequest,

    /**
     * The TaskmanagerTasksTaskidFolderGet200Response model constructor.
     * @property {module:model/TaskmanagerTasksTaskidFolderGet200Response}
     */
    TaskmanagerTasksTaskidFolderGet200Response,

    /**
     * The TaskmanagerTasksTaskidPerformanceGet200Response model constructor.
     * @property {module:model/TaskmanagerTasksTaskidPerformanceGet200Response}
     */
    TaskmanagerTasksTaskidPerformanceGet200Response,

    /**
     * The TaskmanagerTasksTaskidResult2Get200Response model constructor.
     * @property {module:model/TaskmanagerTasksTaskidResult2Get200Response}
     */
    TaskmanagerTasksTaskidResult2Get200Response,

    /**
     * The TaskmanagerTasksTaskidResultGet200Response model constructor.
     * @property {module:model/TaskmanagerTasksTaskidResultGet200Response}
     */
    TaskmanagerTasksTaskidResultGet200Response,

    /**
     * The TaskmanagerTasksTaskidStatusGet200Response model constructor.
     * @property {module:model/TaskmanagerTasksTaskidStatusGet200Response}
     */
    TaskmanagerTasksTaskidStatusGet200Response,

    /**
     * The Taskresult model constructor.
     * @property {module:model/Taskresult}
     */
    Taskresult,

    /**
     * The TimeGet200Response model constructor.
     * @property {module:model/TimeGet200Response}
     */
    TimeGet200Response,

    /**
     * The Trade model constructor.
     * @property {module:model/Trade}
     */
    Trade,

    /**
     * The UpdatedConnection model constructor.
     * @property {module:model/UpdatedConnection}
     */
    UpdatedConnection,

    /**
     * The UpdatedStrategy model constructor.
     * @property {module:model/UpdatedStrategy}
     */
    UpdatedStrategy,

    /**
     * The UpdatedStrategyContent model constructor.
     * @property {module:model/UpdatedStrategyContent}
     */
    UpdatedStrategyContent,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
    * The AutofollowAPIApi service constructor.
    * @property {module:api/AutofollowAPIApi}
    */
    AutofollowAPIApi,

    /**
    * The BuilderAPIApi service constructor.
    * @property {module:api/BuilderAPIApi}
    */
    BuilderAPIApi,

    /**
    * The ClientAPIApi service constructor.
    * @property {module:api/ClientAPIApi}
    */
    ClientAPIApi,

    /**
    * The CloudAPIApi service constructor.
    * @property {module:api/CloudAPIApi}
    */
    CloudAPIApi,

    /**
    * The MarketDataAPIApi service constructor.
    * @property {module:api/MarketDataAPIApi}
    */
    MarketDataAPIApi,

    /**
    * The NewsAPIApi service constructor.
    * @property {module:api/NewsAPIApi}
    */
    NewsAPIApi,

    /**
    * The StatusAPIApi service constructor.
    * @property {module:api/StatusAPIApi}
    */
    StatusAPIApi,

    /**
    * The TaskManagerAPIApi service constructor.
    * @property {module:api/TaskManagerAPIApi}
    */
    TaskManagerAPIApi
};
