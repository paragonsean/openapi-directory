/**
 * Tradematic Cloud API
 * ### Overview Tradematic Cloud is a trading infrastructure for building investment services.  Itâ€™s a trading engine + API + ready-made adapters to stock and forex brokers, crypto exchanges, and market data providers.  You can use it as a cloud API, or you can deploy it on your servers.     ### How to use Tradematic Cloud API  Sign up at [tradematic.cloud](https://tradematic.cloud). After signing up, you will receive your API key.  ### Authorization  Add the 'X-API-KEY' header with your API key to each request.  ### Examples of writing code with Tradematic Cloud API  Examples are available at [tradematic.cloud](https://tradematic.cloud).   ### Swagger (.yaml) File Swagger (.yaml) file can be found [here](http://tradematic.cloud/sdk/swagger.yaml). 
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: support@tradematic.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Longshort model module.
 * @module model/Longshort
 * @version 1.0.2
 */
class Longshort {
    /**
     * Constructs a new <code>Longshort</code>.
     * @alias module:model/Longshort
     */
    constructor() { 
        
        Longshort.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Longshort</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Longshort} obj Optional instance to populate.
     * @return {module:model/Longshort} The populated <code>Longshort</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Longshort();

            if (data.hasOwnProperty('apr')) {
                obj['apr'] = ApiClient.convertToType(data['apr'], 'String');
            }
            if (data.hasOwnProperty('avgbarsheld')) {
                obj['avgbarsheld'] = ApiClient.convertToType(data['avgbarsheld'], 'String');
            }
            if (data.hasOwnProperty('avgloss')) {
                obj['avgloss'] = ApiClient.convertToType(data['avgloss'], 'String');
            }
            if (data.hasOwnProperty('avglossbarsheld')) {
                obj['avglossbarsheld'] = ApiClient.convertToType(data['avglossbarsheld'], 'String');
            }
            if (data.hasOwnProperty('avglosspct')) {
                obj['avglosspct'] = ApiClient.convertToType(data['avglosspct'], 'String');
            }
            if (data.hasOwnProperty('avgprofit')) {
                obj['avgprofit'] = ApiClient.convertToType(data['avgprofit'], 'String');
            }
            if (data.hasOwnProperty('avgprofitavgloss')) {
                obj['avgprofitavgloss'] = ApiClient.convertToType(data['avgprofitavgloss'], 'String');
            }
            if (data.hasOwnProperty('avgprofitbarsheld')) {
                obj['avgprofitbarsheld'] = ApiClient.convertToType(data['avgprofitbarsheld'], 'String');
            }
            if (data.hasOwnProperty('avgprofitpct')) {
                obj['avgprofitpct'] = ApiClient.convertToType(data['avgprofitpct'], 'String');
            }
            if (data.hasOwnProperty('endcapital')) {
                obj['endcapital'] = ApiClient.convertToType(data['endcapital'], 'String');
            }
            if (data.hasOwnProperty('exposure')) {
                obj['exposure'] = ApiClient.convertToType(data['exposure'], 'String');
            }
            if (data.hasOwnProperty('grossloss')) {
                obj['grossloss'] = ApiClient.convertToType(data['grossloss'], 'String');
            }
            if (data.hasOwnProperty('grossprofit')) {
                obj['grossprofit'] = ApiClient.convertToType(data['grossprofit'], 'String');
            }
            if (data.hasOwnProperty('losingtrades')) {
                obj['losingtrades'] = ApiClient.convertToType(data['losingtrades'], 'String');
            }
            if (data.hasOwnProperty('losingtradespct')) {
                obj['losingtradespct'] = ApiClient.convertToType(data['losingtradespct'], 'String');
            }
            if (data.hasOwnProperty('mar')) {
                obj['mar'] = ApiClient.convertToType(data['mar'], 'String');
            }
            if (data.hasOwnProperty('margininterest')) {
                obj['margininterest'] = ApiClient.convertToType(data['margininterest'], 'String');
            }
            if (data.hasOwnProperty('maxconsecloss')) {
                obj['maxconsecloss'] = ApiClient.convertToType(data['maxconsecloss'], 'String');
            }
            if (data.hasOwnProperty('maxconsecwin')) {
                obj['maxconsecwin'] = ApiClient.convertToType(data['maxconsecwin'], 'String');
            }
            if (data.hasOwnProperty('maxdrawdown')) {
                obj['maxdrawdown'] = ApiClient.convertToType(data['maxdrawdown'], 'String');
            }
            if (data.hasOwnProperty('maxdrawdowndate')) {
                obj['maxdrawdowndate'] = ApiClient.convertToType(data['maxdrawdowndate'], 'String');
            }
            if (data.hasOwnProperty('maxdrawdownlength')) {
                obj['maxdrawdownlength'] = ApiClient.convertToType(data['maxdrawdownlength'], 'String');
            }
            if (data.hasOwnProperty('maxdrawdownpct')) {
                obj['maxdrawdownpct'] = ApiClient.convertToType(data['maxdrawdownpct'], 'String');
            }
            if (data.hasOwnProperty('maxdrawdownpctdate')) {
                obj['maxdrawdownpctdate'] = ApiClient.convertToType(data['maxdrawdownpctdate'], 'String');
            }
            if (data.hasOwnProperty('mpr')) {
                obj['mpr'] = ApiClient.convertToType(data['mpr'], 'String');
            }
            if (data.hasOwnProperty('netprofit')) {
                obj['netprofit'] = ApiClient.convertToType(data['netprofit'], 'String');
            }
            if (data.hasOwnProperty('netprofitpct')) {
                obj['netprofitpct'] = ApiClient.convertToType(data['netprofitpct'], 'String');
            }
            if (data.hasOwnProperty('profitabletrades')) {
                obj['profitabletrades'] = ApiClient.convertToType(data['profitabletrades'], 'String');
            }
            if (data.hasOwnProperty('profitabletradespct')) {
                obj['profitabletradespct'] = ApiClient.convertToType(data['profitabletradespct'], 'String');
            }
            if (data.hasOwnProperty('profitfactor')) {
                obj['profitfactor'] = ApiClient.convertToType(data['profitfactor'], 'String');
            }
            if (data.hasOwnProperty('profitriskratio')) {
                obj['profitriskratio'] = ApiClient.convertToType(data['profitriskratio'], 'String');
            }
            if (data.hasOwnProperty('rar')) {
                obj['rar'] = ApiClient.convertToType(data['rar'], 'String');
            }
            if (data.hasOwnProperty('recoveryfactor')) {
                obj['recoveryfactor'] = ApiClient.convertToType(data['recoveryfactor'], 'String');
            }
            if (data.hasOwnProperty('sharperatio')) {
                obj['sharperatio'] = ApiClient.convertToType(data['sharperatio'], 'String');
            }
            if (data.hasOwnProperty('sortinoratio')) {
                obj['sortinoratio'] = ApiClient.convertToType(data['sortinoratio'], 'String');
            }
            if (data.hasOwnProperty('startcapital')) {
                obj['startcapital'] = ApiClient.convertToType(data['startcapital'], 'String');
            }
            if (data.hasOwnProperty('totalcommission')) {
                obj['totalcommission'] = ApiClient.convertToType(data['totalcommission'], 'String');
            }
            if (data.hasOwnProperty('totaltrades')) {
                obj['totaltrades'] = ApiClient.convertToType(data['totaltrades'], 'String');
            }
            if (data.hasOwnProperty('totalvolume')) {
                obj['totalvolume'] = ApiClient.convertToType(data['totalvolume'], 'String');
            }
            if (data.hasOwnProperty('turnover')) {
                obj['turnover'] = ApiClient.convertToType(data['turnover'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Longshort</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Longshort</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['apr'] && !(typeof data['apr'] === 'string' || data['apr'] instanceof String)) {
            throw new Error("Expected the field `apr` to be a primitive type in the JSON string but got " + data['apr']);
        }
        // ensure the json data is a string
        if (data['avgbarsheld'] && !(typeof data['avgbarsheld'] === 'string' || data['avgbarsheld'] instanceof String)) {
            throw new Error("Expected the field `avgbarsheld` to be a primitive type in the JSON string but got " + data['avgbarsheld']);
        }
        // ensure the json data is a string
        if (data['avgloss'] && !(typeof data['avgloss'] === 'string' || data['avgloss'] instanceof String)) {
            throw new Error("Expected the field `avgloss` to be a primitive type in the JSON string but got " + data['avgloss']);
        }
        // ensure the json data is a string
        if (data['avglossbarsheld'] && !(typeof data['avglossbarsheld'] === 'string' || data['avglossbarsheld'] instanceof String)) {
            throw new Error("Expected the field `avglossbarsheld` to be a primitive type in the JSON string but got " + data['avglossbarsheld']);
        }
        // ensure the json data is a string
        if (data['avglosspct'] && !(typeof data['avglosspct'] === 'string' || data['avglosspct'] instanceof String)) {
            throw new Error("Expected the field `avglosspct` to be a primitive type in the JSON string but got " + data['avglosspct']);
        }
        // ensure the json data is a string
        if (data['avgprofit'] && !(typeof data['avgprofit'] === 'string' || data['avgprofit'] instanceof String)) {
            throw new Error("Expected the field `avgprofit` to be a primitive type in the JSON string but got " + data['avgprofit']);
        }
        // ensure the json data is a string
        if (data['avgprofitavgloss'] && !(typeof data['avgprofitavgloss'] === 'string' || data['avgprofitavgloss'] instanceof String)) {
            throw new Error("Expected the field `avgprofitavgloss` to be a primitive type in the JSON string but got " + data['avgprofitavgloss']);
        }
        // ensure the json data is a string
        if (data['avgprofitbarsheld'] && !(typeof data['avgprofitbarsheld'] === 'string' || data['avgprofitbarsheld'] instanceof String)) {
            throw new Error("Expected the field `avgprofitbarsheld` to be a primitive type in the JSON string but got " + data['avgprofitbarsheld']);
        }
        // ensure the json data is a string
        if (data['avgprofitpct'] && !(typeof data['avgprofitpct'] === 'string' || data['avgprofitpct'] instanceof String)) {
            throw new Error("Expected the field `avgprofitpct` to be a primitive type in the JSON string but got " + data['avgprofitpct']);
        }
        // ensure the json data is a string
        if (data['endcapital'] && !(typeof data['endcapital'] === 'string' || data['endcapital'] instanceof String)) {
            throw new Error("Expected the field `endcapital` to be a primitive type in the JSON string but got " + data['endcapital']);
        }
        // ensure the json data is a string
        if (data['exposure'] && !(typeof data['exposure'] === 'string' || data['exposure'] instanceof String)) {
            throw new Error("Expected the field `exposure` to be a primitive type in the JSON string but got " + data['exposure']);
        }
        // ensure the json data is a string
        if (data['grossloss'] && !(typeof data['grossloss'] === 'string' || data['grossloss'] instanceof String)) {
            throw new Error("Expected the field `grossloss` to be a primitive type in the JSON string but got " + data['grossloss']);
        }
        // ensure the json data is a string
        if (data['grossprofit'] && !(typeof data['grossprofit'] === 'string' || data['grossprofit'] instanceof String)) {
            throw new Error("Expected the field `grossprofit` to be a primitive type in the JSON string but got " + data['grossprofit']);
        }
        // ensure the json data is a string
        if (data['losingtrades'] && !(typeof data['losingtrades'] === 'string' || data['losingtrades'] instanceof String)) {
            throw new Error("Expected the field `losingtrades` to be a primitive type in the JSON string but got " + data['losingtrades']);
        }
        // ensure the json data is a string
        if (data['losingtradespct'] && !(typeof data['losingtradespct'] === 'string' || data['losingtradespct'] instanceof String)) {
            throw new Error("Expected the field `losingtradespct` to be a primitive type in the JSON string but got " + data['losingtradespct']);
        }
        // ensure the json data is a string
        if (data['mar'] && !(typeof data['mar'] === 'string' || data['mar'] instanceof String)) {
            throw new Error("Expected the field `mar` to be a primitive type in the JSON string but got " + data['mar']);
        }
        // ensure the json data is a string
        if (data['margininterest'] && !(typeof data['margininterest'] === 'string' || data['margininterest'] instanceof String)) {
            throw new Error("Expected the field `margininterest` to be a primitive type in the JSON string but got " + data['margininterest']);
        }
        // ensure the json data is a string
        if (data['maxconsecloss'] && !(typeof data['maxconsecloss'] === 'string' || data['maxconsecloss'] instanceof String)) {
            throw new Error("Expected the field `maxconsecloss` to be a primitive type in the JSON string but got " + data['maxconsecloss']);
        }
        // ensure the json data is a string
        if (data['maxconsecwin'] && !(typeof data['maxconsecwin'] === 'string' || data['maxconsecwin'] instanceof String)) {
            throw new Error("Expected the field `maxconsecwin` to be a primitive type in the JSON string but got " + data['maxconsecwin']);
        }
        // ensure the json data is a string
        if (data['maxdrawdown'] && !(typeof data['maxdrawdown'] === 'string' || data['maxdrawdown'] instanceof String)) {
            throw new Error("Expected the field `maxdrawdown` to be a primitive type in the JSON string but got " + data['maxdrawdown']);
        }
        // ensure the json data is a string
        if (data['maxdrawdowndate'] && !(typeof data['maxdrawdowndate'] === 'string' || data['maxdrawdowndate'] instanceof String)) {
            throw new Error("Expected the field `maxdrawdowndate` to be a primitive type in the JSON string but got " + data['maxdrawdowndate']);
        }
        // ensure the json data is a string
        if (data['maxdrawdownlength'] && !(typeof data['maxdrawdownlength'] === 'string' || data['maxdrawdownlength'] instanceof String)) {
            throw new Error("Expected the field `maxdrawdownlength` to be a primitive type in the JSON string but got " + data['maxdrawdownlength']);
        }
        // ensure the json data is a string
        if (data['maxdrawdownpct'] && !(typeof data['maxdrawdownpct'] === 'string' || data['maxdrawdownpct'] instanceof String)) {
            throw new Error("Expected the field `maxdrawdownpct` to be a primitive type in the JSON string but got " + data['maxdrawdownpct']);
        }
        // ensure the json data is a string
        if (data['maxdrawdownpctdate'] && !(typeof data['maxdrawdownpctdate'] === 'string' || data['maxdrawdownpctdate'] instanceof String)) {
            throw new Error("Expected the field `maxdrawdownpctdate` to be a primitive type in the JSON string but got " + data['maxdrawdownpctdate']);
        }
        // ensure the json data is a string
        if (data['mpr'] && !(typeof data['mpr'] === 'string' || data['mpr'] instanceof String)) {
            throw new Error("Expected the field `mpr` to be a primitive type in the JSON string but got " + data['mpr']);
        }
        // ensure the json data is a string
        if (data['netprofit'] && !(typeof data['netprofit'] === 'string' || data['netprofit'] instanceof String)) {
            throw new Error("Expected the field `netprofit` to be a primitive type in the JSON string but got " + data['netprofit']);
        }
        // ensure the json data is a string
        if (data['netprofitpct'] && !(typeof data['netprofitpct'] === 'string' || data['netprofitpct'] instanceof String)) {
            throw new Error("Expected the field `netprofitpct` to be a primitive type in the JSON string but got " + data['netprofitpct']);
        }
        // ensure the json data is a string
        if (data['profitabletrades'] && !(typeof data['profitabletrades'] === 'string' || data['profitabletrades'] instanceof String)) {
            throw new Error("Expected the field `profitabletrades` to be a primitive type in the JSON string but got " + data['profitabletrades']);
        }
        // ensure the json data is a string
        if (data['profitabletradespct'] && !(typeof data['profitabletradespct'] === 'string' || data['profitabletradespct'] instanceof String)) {
            throw new Error("Expected the field `profitabletradespct` to be a primitive type in the JSON string but got " + data['profitabletradespct']);
        }
        // ensure the json data is a string
        if (data['profitfactor'] && !(typeof data['profitfactor'] === 'string' || data['profitfactor'] instanceof String)) {
            throw new Error("Expected the field `profitfactor` to be a primitive type in the JSON string but got " + data['profitfactor']);
        }
        // ensure the json data is a string
        if (data['profitriskratio'] && !(typeof data['profitriskratio'] === 'string' || data['profitriskratio'] instanceof String)) {
            throw new Error("Expected the field `profitriskratio` to be a primitive type in the JSON string but got " + data['profitriskratio']);
        }
        // ensure the json data is a string
        if (data['rar'] && !(typeof data['rar'] === 'string' || data['rar'] instanceof String)) {
            throw new Error("Expected the field `rar` to be a primitive type in the JSON string but got " + data['rar']);
        }
        // ensure the json data is a string
        if (data['recoveryfactor'] && !(typeof data['recoveryfactor'] === 'string' || data['recoveryfactor'] instanceof String)) {
            throw new Error("Expected the field `recoveryfactor` to be a primitive type in the JSON string but got " + data['recoveryfactor']);
        }
        // ensure the json data is a string
        if (data['sharperatio'] && !(typeof data['sharperatio'] === 'string' || data['sharperatio'] instanceof String)) {
            throw new Error("Expected the field `sharperatio` to be a primitive type in the JSON string but got " + data['sharperatio']);
        }
        // ensure the json data is a string
        if (data['sortinoratio'] && !(typeof data['sortinoratio'] === 'string' || data['sortinoratio'] instanceof String)) {
            throw new Error("Expected the field `sortinoratio` to be a primitive type in the JSON string but got " + data['sortinoratio']);
        }
        // ensure the json data is a string
        if (data['startcapital'] && !(typeof data['startcapital'] === 'string' || data['startcapital'] instanceof String)) {
            throw new Error("Expected the field `startcapital` to be a primitive type in the JSON string but got " + data['startcapital']);
        }
        // ensure the json data is a string
        if (data['totalcommission'] && !(typeof data['totalcommission'] === 'string' || data['totalcommission'] instanceof String)) {
            throw new Error("Expected the field `totalcommission` to be a primitive type in the JSON string but got " + data['totalcommission']);
        }
        // ensure the json data is a string
        if (data['totaltrades'] && !(typeof data['totaltrades'] === 'string' || data['totaltrades'] instanceof String)) {
            throw new Error("Expected the field `totaltrades` to be a primitive type in the JSON string but got " + data['totaltrades']);
        }
        // ensure the json data is a string
        if (data['totalvolume'] && !(typeof data['totalvolume'] === 'string' || data['totalvolume'] instanceof String)) {
            throw new Error("Expected the field `totalvolume` to be a primitive type in the JSON string but got " + data['totalvolume']);
        }
        // ensure the json data is a string
        if (data['turnover'] && !(typeof data['turnover'] === 'string' || data['turnover'] instanceof String)) {
            throw new Error("Expected the field `turnover` to be a primitive type in the JSON string but got " + data['turnover']);
        }

        return true;
    }


}



/**
 * @member {String} apr
 */
Longshort.prototype['apr'] = undefined;

/**
 * @member {String} avgbarsheld
 */
Longshort.prototype['avgbarsheld'] = undefined;

/**
 * @member {String} avgloss
 */
Longshort.prototype['avgloss'] = undefined;

/**
 * @member {String} avglossbarsheld
 */
Longshort.prototype['avglossbarsheld'] = undefined;

/**
 * @member {String} avglosspct
 */
Longshort.prototype['avglosspct'] = undefined;

/**
 * @member {String} avgprofit
 */
Longshort.prototype['avgprofit'] = undefined;

/**
 * @member {String} avgprofitavgloss
 */
Longshort.prototype['avgprofitavgloss'] = undefined;

/**
 * @member {String} avgprofitbarsheld
 */
Longshort.prototype['avgprofitbarsheld'] = undefined;

/**
 * @member {String} avgprofitpct
 */
Longshort.prototype['avgprofitpct'] = undefined;

/**
 * @member {String} endcapital
 */
Longshort.prototype['endcapital'] = undefined;

/**
 * @member {String} exposure
 */
Longshort.prototype['exposure'] = undefined;

/**
 * @member {String} grossloss
 */
Longshort.prototype['grossloss'] = undefined;

/**
 * @member {String} grossprofit
 */
Longshort.prototype['grossprofit'] = undefined;

/**
 * @member {String} losingtrades
 */
Longshort.prototype['losingtrades'] = undefined;

/**
 * @member {String} losingtradespct
 */
Longshort.prototype['losingtradespct'] = undefined;

/**
 * @member {String} mar
 */
Longshort.prototype['mar'] = undefined;

/**
 * @member {String} margininterest
 */
Longshort.prototype['margininterest'] = undefined;

/**
 * @member {String} maxconsecloss
 */
Longshort.prototype['maxconsecloss'] = undefined;

/**
 * @member {String} maxconsecwin
 */
Longshort.prototype['maxconsecwin'] = undefined;

/**
 * @member {String} maxdrawdown
 */
Longshort.prototype['maxdrawdown'] = undefined;

/**
 * @member {String} maxdrawdowndate
 */
Longshort.prototype['maxdrawdowndate'] = undefined;

/**
 * @member {String} maxdrawdownlength
 */
Longshort.prototype['maxdrawdownlength'] = undefined;

/**
 * @member {String} maxdrawdownpct
 */
Longshort.prototype['maxdrawdownpct'] = undefined;

/**
 * @member {String} maxdrawdownpctdate
 */
Longshort.prototype['maxdrawdownpctdate'] = undefined;

/**
 * @member {String} mpr
 */
Longshort.prototype['mpr'] = undefined;

/**
 * @member {String} netprofit
 */
Longshort.prototype['netprofit'] = undefined;

/**
 * @member {String} netprofitpct
 */
Longshort.prototype['netprofitpct'] = undefined;

/**
 * @member {String} profitabletrades
 */
Longshort.prototype['profitabletrades'] = undefined;

/**
 * @member {String} profitabletradespct
 */
Longshort.prototype['profitabletradespct'] = undefined;

/**
 * @member {String} profitfactor
 */
Longshort.prototype['profitfactor'] = undefined;

/**
 * @member {String} profitriskratio
 */
Longshort.prototype['profitriskratio'] = undefined;

/**
 * @member {String} rar
 */
Longshort.prototype['rar'] = undefined;

/**
 * @member {String} recoveryfactor
 */
Longshort.prototype['recoveryfactor'] = undefined;

/**
 * @member {String} sharperatio
 */
Longshort.prototype['sharperatio'] = undefined;

/**
 * @member {String} sortinoratio
 */
Longshort.prototype['sortinoratio'] = undefined;

/**
 * @member {String} startcapital
 */
Longshort.prototype['startcapital'] = undefined;

/**
 * @member {String} totalcommission
 */
Longshort.prototype['totalcommission'] = undefined;

/**
 * @member {String} totaltrades
 */
Longshort.prototype['totaltrades'] = undefined;

/**
 * @member {String} totalvolume
 */
Longshort.prototype['totalvolume'] = undefined;

/**
 * @member {String} turnover
 */
Longshort.prototype['turnover'] = undefined;






export default Longshort;

