/**
 * Tradematic Cloud API
 * ### Overview Tradematic Cloud is a trading infrastructure for building investment services.  Itâ€™s a trading engine + API + ready-made adapters to stock and forex brokers, crypto exchanges, and market data providers.  You can use it as a cloud API, or you can deploy it on your servers.     ### How to use Tradematic Cloud API  Sign up at [tradematic.cloud](https://tradematic.cloud). After signing up, you will receive your API key.  ### Authorization  Add the 'X-API-KEY' header with your API key to each request.  ### Examples of writing code with Tradematic Cloud API  Examples are available at [tradematic.cloud](https://tradematic.cloud).   ### Swagger (.yaml) File Swagger (.yaml) file can be found [here](http://tradematic.cloud/sdk/swagger.yaml). 
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: support@tradematic.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TaskmanagerTasksTaskidResult2Get200Response model module.
 * @module model/TaskmanagerTasksTaskidResult2Get200Response
 * @version 1.0.2
 */
class TaskmanagerTasksTaskidResult2Get200Response {
    /**
     * Constructs a new <code>TaskmanagerTasksTaskidResult2Get200Response</code>.
     * @alias module:model/TaskmanagerTasksTaskidResult2Get200Response
     */
    constructor() { 
        
        TaskmanagerTasksTaskidResult2Get200Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TaskmanagerTasksTaskidResult2Get200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TaskmanagerTasksTaskidResult2Get200Response} obj Optional instance to populate.
     * @return {module:model/TaskmanagerTasksTaskidResult2Get200Response} The populated <code>TaskmanagerTasksTaskidResult2Get200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TaskmanagerTasksTaskidResult2Get200Response();

            if (data.hasOwnProperty('apr')) {
                obj['apr'] = ApiClient.convertToType(data['apr'], 'String');
            }
            if (data.hasOwnProperty('curMonthProfit')) {
                obj['curMonthProfit'] = ApiClient.convertToType(data['curMonthProfit'], 'String');
            }
            if (data.hasOwnProperty('curYearProfit')) {
                obj['curYearProfit'] = ApiClient.convertToType(data['curYearProfit'], 'String');
            }
            if (data.hasOwnProperty('drawdown')) {
                obj['drawdown'] = ApiClient.convertToType(data['drawdown'], 'String');
            }
            if (data.hasOwnProperty('halfYearProfit')) {
                obj['halfYearProfit'] = ApiClient.convertToType(data['halfYearProfit'], 'String');
            }
            if (data.hasOwnProperty('monthProfit')) {
                obj['monthProfit'] = ApiClient.convertToType(data['monthProfit'], 'String');
            }
            if (data.hasOwnProperty('prevMonthProfit')) {
                obj['prevMonthProfit'] = ApiClient.convertToType(data['prevMonthProfit'], 'String');
            }
            if (data.hasOwnProperty('totalProfit')) {
                obj['totalProfit'] = ApiClient.convertToType(data['totalProfit'], 'String');
            }
            if (data.hasOwnProperty('weekProfit')) {
                obj['weekProfit'] = ApiClient.convertToType(data['weekProfit'], 'String');
            }
            if (data.hasOwnProperty('yearProfit')) {
                obj['yearProfit'] = ApiClient.convertToType(data['yearProfit'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TaskmanagerTasksTaskidResult2Get200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TaskmanagerTasksTaskidResult2Get200Response</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['apr'] && !(typeof data['apr'] === 'string' || data['apr'] instanceof String)) {
            throw new Error("Expected the field `apr` to be a primitive type in the JSON string but got " + data['apr']);
        }
        // ensure the json data is a string
        if (data['curMonthProfit'] && !(typeof data['curMonthProfit'] === 'string' || data['curMonthProfit'] instanceof String)) {
            throw new Error("Expected the field `curMonthProfit` to be a primitive type in the JSON string but got " + data['curMonthProfit']);
        }
        // ensure the json data is a string
        if (data['curYearProfit'] && !(typeof data['curYearProfit'] === 'string' || data['curYearProfit'] instanceof String)) {
            throw new Error("Expected the field `curYearProfit` to be a primitive type in the JSON string but got " + data['curYearProfit']);
        }
        // ensure the json data is a string
        if (data['drawdown'] && !(typeof data['drawdown'] === 'string' || data['drawdown'] instanceof String)) {
            throw new Error("Expected the field `drawdown` to be a primitive type in the JSON string but got " + data['drawdown']);
        }
        // ensure the json data is a string
        if (data['halfYearProfit'] && !(typeof data['halfYearProfit'] === 'string' || data['halfYearProfit'] instanceof String)) {
            throw new Error("Expected the field `halfYearProfit` to be a primitive type in the JSON string but got " + data['halfYearProfit']);
        }
        // ensure the json data is a string
        if (data['monthProfit'] && !(typeof data['monthProfit'] === 'string' || data['monthProfit'] instanceof String)) {
            throw new Error("Expected the field `monthProfit` to be a primitive type in the JSON string but got " + data['monthProfit']);
        }
        // ensure the json data is a string
        if (data['prevMonthProfit'] && !(typeof data['prevMonthProfit'] === 'string' || data['prevMonthProfit'] instanceof String)) {
            throw new Error("Expected the field `prevMonthProfit` to be a primitive type in the JSON string but got " + data['prevMonthProfit']);
        }
        // ensure the json data is a string
        if (data['totalProfit'] && !(typeof data['totalProfit'] === 'string' || data['totalProfit'] instanceof String)) {
            throw new Error("Expected the field `totalProfit` to be a primitive type in the JSON string but got " + data['totalProfit']);
        }
        // ensure the json data is a string
        if (data['weekProfit'] && !(typeof data['weekProfit'] === 'string' || data['weekProfit'] instanceof String)) {
            throw new Error("Expected the field `weekProfit` to be a primitive type in the JSON string but got " + data['weekProfit']);
        }
        // ensure the json data is a string
        if (data['yearProfit'] && !(typeof data['yearProfit'] === 'string' || data['yearProfit'] instanceof String)) {
            throw new Error("Expected the field `yearProfit` to be a primitive type in the JSON string but got " + data['yearProfit']);
        }

        return true;
    }


}



/**
 * @member {String} apr
 */
TaskmanagerTasksTaskidResult2Get200Response.prototype['apr'] = undefined;

/**
 * @member {String} curMonthProfit
 */
TaskmanagerTasksTaskidResult2Get200Response.prototype['curMonthProfit'] = undefined;

/**
 * @member {String} curYearProfit
 */
TaskmanagerTasksTaskidResult2Get200Response.prototype['curYearProfit'] = undefined;

/**
 * @member {String} drawdown
 */
TaskmanagerTasksTaskidResult2Get200Response.prototype['drawdown'] = undefined;

/**
 * @member {String} halfYearProfit
 */
TaskmanagerTasksTaskidResult2Get200Response.prototype['halfYearProfit'] = undefined;

/**
 * @member {String} monthProfit
 */
TaskmanagerTasksTaskidResult2Get200Response.prototype['monthProfit'] = undefined;

/**
 * @member {String} prevMonthProfit
 */
TaskmanagerTasksTaskidResult2Get200Response.prototype['prevMonthProfit'] = undefined;

/**
 * @member {String} totalProfit
 */
TaskmanagerTasksTaskidResult2Get200Response.prototype['totalProfit'] = undefined;

/**
 * @member {String} weekProfit
 */
TaskmanagerTasksTaskidResult2Get200Response.prototype['weekProfit'] = undefined;

/**
 * @member {String} yearProfit
 */
TaskmanagerTasksTaskidResult2Get200Response.prototype['yearProfit'] = undefined;






export default TaskmanagerTasksTaskidResult2Get200Response;

