/**
 * Tradematic Cloud API
 * ### Overview Tradematic Cloud is a trading infrastructure for building investment services.  Itâ€™s a trading engine + API + ready-made adapters to stock and forex brokers, crypto exchanges, and market data providers.  You can use it as a cloud API, or you can deploy it on your servers.     ### How to use Tradematic Cloud API  Sign up at [tradematic.cloud](https://tradematic.cloud). After signing up, you will receive your API key.  ### Authorization  Add the 'X-API-KEY' header with your API key to each request.  ### Examples of writing code with Tradematic Cloud API  Examples are available at [tradematic.cloud](https://tradematic.cloud).   ### Swagger (.yaml) File Swagger (.yaml) file can be found [here](http://tradematic.cloud/sdk/swagger.yaml). 
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: support@tradematic.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UpdatedStrategyContent from './UpdatedStrategyContent';

/**
 * The AutofollowStrategiesStrategyidContentPutRequest model module.
 * @module model/AutofollowStrategiesStrategyidContentPutRequest
 * @version 1.0.2
 */
class AutofollowStrategiesStrategyidContentPutRequest {
    /**
     * Constructs a new <code>AutofollowStrategiesStrategyidContentPutRequest</code>.
     * @alias module:model/AutofollowStrategiesStrategyidContentPutRequest
     */
    constructor() { 
        
        AutofollowStrategiesStrategyidContentPutRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AutofollowStrategiesStrategyidContentPutRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AutofollowStrategiesStrategyidContentPutRequest} obj Optional instance to populate.
     * @return {module:model/AutofollowStrategiesStrategyidContentPutRequest} The populated <code>AutofollowStrategiesStrategyidContentPutRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AutofollowStrategiesStrategyidContentPutRequest();

            if (data.hasOwnProperty('strategy')) {
                obj['strategy'] = UpdatedStrategyContent.constructFromObject(data['strategy']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AutofollowStrategiesStrategyidContentPutRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AutofollowStrategiesStrategyidContentPutRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `strategy`
        if (data['strategy']) { // data not null
          UpdatedStrategyContent.validateJSON(data['strategy']);
        }

        return true;
    }


}



/**
 * @member {module:model/UpdatedStrategyContent} strategy
 */
AutofollowStrategiesStrategyidContentPutRequest.prototype['strategy'] = undefined;






export default AutofollowStrategiesStrategyidContentPutRequest;

