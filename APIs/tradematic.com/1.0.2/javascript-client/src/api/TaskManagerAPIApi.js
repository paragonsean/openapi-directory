/**
 * Tradematic Cloud API
 * ### Overview Tradematic Cloud is a trading infrastructure for building investment services.  Itâ€™s a trading engine + API + ready-made adapters to stock and forex brokers, crypto exchanges, and market data providers.  You can use it as a cloud API, or you can deploy it on your servers.     ### How to use Tradematic Cloud API  Sign up at [tradematic.cloud](https://tradematic.cloud). After signing up, you will receive your API key.  ### Authorization  Add the 'X-API-KEY' header with your API key to each request.  ### Examples of writing code with Tradematic Cloud API  Examples are available at [tradematic.cloud](https://tradematic.cloud).   ### Swagger (.yaml) File Swagger (.yaml) file can be found [here](http://tradematic.cloud/sdk/swagger.yaml). 
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: support@tradematic.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BacktestTrade from '../model/BacktestTrade';
import ByMonths from '../model/ByMonths';
import ByQuarters from '../model/ByQuarters';
import ByYears from '../model/ByYears';
import Contribution from '../model/Contribution';
import DrawdownItem from '../model/DrawdownItem';
import EquityItem from '../model/EquityItem';
import EquityPctItem from '../model/EquityPctItem';
import EquityPctSmItem from '../model/EquityPctSmItem';
import Error from '../model/Error';
import Task from '../model/Task';
import TaskmanagerTasksPost202Response from '../model/TaskmanagerTasksPost202Response';
import TaskmanagerTasksPostRequest from '../model/TaskmanagerTasksPostRequest';
import TaskmanagerTasksTaskidFolderGet200Response from '../model/TaskmanagerTasksTaskidFolderGet200Response';
import TaskmanagerTasksTaskidPerformanceGet200Response from '../model/TaskmanagerTasksTaskidPerformanceGet200Response';
import TaskmanagerTasksTaskidResult2Get200Response from '../model/TaskmanagerTasksTaskidResult2Get200Response';
import TaskmanagerTasksTaskidResultGet200Response from '../model/TaskmanagerTasksTaskidResultGet200Response';
import TaskmanagerTasksTaskidStatusGet200Response from '../model/TaskmanagerTasksTaskidStatusGet200Response';

/**
* TaskManagerAPI service.
* @module api/TaskManagerAPIApi
* @version 1.0.2
*/
export default class TaskManagerAPIApi {

    /**
    * Constructs a new TaskManagerAPIApi. 
    * @alias module:api/TaskManagerAPIApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the taskmanagerTasksGet operation.
     * @callback module:api/TaskManagerAPIApi~taskmanagerTasksGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Task>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get tasks list
     * Get tasks list
     * @param {module:api/TaskManagerAPIApi~taskmanagerTasksGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Task>}
     */
    taskmanagerTasksGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Secured'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Task];
      return this.apiClient.callApi(
        '/taskmanager/tasks', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the taskmanagerTasksPost operation.
     * @callback module:api/TaskManagerAPIApi~taskmanagerTasksPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TaskmanagerTasksPost202Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new task
     * Create a new task
     * @param {module:model/TaskmanagerTasksPostRequest} body 
     * @param {module:api/TaskManagerAPIApi~taskmanagerTasksPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TaskmanagerTasksPost202Response}
     */
    taskmanagerTasksPost(body, callback) {
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling taskmanagerTasksPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Secured'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TaskmanagerTasksPost202Response;
      return this.apiClient.callApi(
        '/taskmanager/tasks', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the taskmanagerTasksTaskidBymonthsGet operation.
     * @callback module:api/TaskManagerAPIApi~taskmanagerTasksTaskidBymonthsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ByMonths>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get backtest data for equity chart, grouped by months
     * Get backtest data for equity chart, grouped by months
     * @param {Number} taskid 
     * @param {module:api/TaskManagerAPIApi~taskmanagerTasksTaskidBymonthsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ByMonths>}
     */
    taskmanagerTasksTaskidBymonthsGet(taskid, callback) {
      let postBody = null;
      // verify the required parameter 'taskid' is set
      if (taskid === undefined || taskid === null) {
        throw new Error("Missing the required parameter 'taskid' when calling taskmanagerTasksTaskidBymonthsGet");
      }

      let pathParams = {
        'taskid': taskid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Secured'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ByMonths];
      return this.apiClient.callApi(
        '/taskmanager/tasks/{taskid}/bymonths', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the taskmanagerTasksTaskidByquartersGet operation.
     * @callback module:api/TaskManagerAPIApi~taskmanagerTasksTaskidByquartersGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ByQuarters>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get backtest data for equity chart, grouped by quarters
     * Get backtest data for equity chart, grouped by quarters
     * @param {Number} taskid 
     * @param {module:api/TaskManagerAPIApi~taskmanagerTasksTaskidByquartersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ByQuarters>}
     */
    taskmanagerTasksTaskidByquartersGet(taskid, callback) {
      let postBody = null;
      // verify the required parameter 'taskid' is set
      if (taskid === undefined || taskid === null) {
        throw new Error("Missing the required parameter 'taskid' when calling taskmanagerTasksTaskidByquartersGet");
      }

      let pathParams = {
        'taskid': taskid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Secured'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ByQuarters];
      return this.apiClient.callApi(
        '/taskmanager/tasks/{taskid}/byquarters', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the taskmanagerTasksTaskidByyearsGet operation.
     * @callback module:api/TaskManagerAPIApi~taskmanagerTasksTaskidByyearsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ByYears>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get backtest data for equity chart, grouped by years
     * Get backtest data for equity chart, grouped by years
     * @param {Number} taskid 
     * @param {module:api/TaskManagerAPIApi~taskmanagerTasksTaskidByyearsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ByYears>}
     */
    taskmanagerTasksTaskidByyearsGet(taskid, callback) {
      let postBody = null;
      // verify the required parameter 'taskid' is set
      if (taskid === undefined || taskid === null) {
        throw new Error("Missing the required parameter 'taskid' when calling taskmanagerTasksTaskidByyearsGet");
      }

      let pathParams = {
        'taskid': taskid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Secured'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ByYears];
      return this.apiClient.callApi(
        '/taskmanager/tasks/{taskid}/byyears', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the taskmanagerTasksTaskidContributionGet operation.
     * @callback module:api/TaskManagerAPIApi~taskmanagerTasksTaskidContributionGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Contribution>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get backtest symbol contribution data
     * Get backtest symbol contribution data
     * @param {Number} taskid 
     * @param {module:api/TaskManagerAPIApi~taskmanagerTasksTaskidContributionGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Contribution>}
     */
    taskmanagerTasksTaskidContributionGet(taskid, callback) {
      let postBody = null;
      // verify the required parameter 'taskid' is set
      if (taskid === undefined || taskid === null) {
        throw new Error("Missing the required parameter 'taskid' when calling taskmanagerTasksTaskidContributionGet");
      }

      let pathParams = {
        'taskid': taskid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Secured'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Contribution];
      return this.apiClient.callApi(
        '/taskmanager/tasks/{taskid}/contribution', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the taskmanagerTasksTaskidDrawdownGet operation.
     * @callback module:api/TaskManagerAPIApi~taskmanagerTasksTaskidDrawdownGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/DrawdownItem>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get data for drawdown chart
     * Get data for drawdown chart
     * @param {Number} taskid 
     * @param {module:api/TaskManagerAPIApi~taskmanagerTasksTaskidDrawdownGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/DrawdownItem>}
     */
    taskmanagerTasksTaskidDrawdownGet(taskid, callback) {
      let postBody = null;
      // verify the required parameter 'taskid' is set
      if (taskid === undefined || taskid === null) {
        throw new Error("Missing the required parameter 'taskid' when calling taskmanagerTasksTaskidDrawdownGet");
      }

      let pathParams = {
        'taskid': taskid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Secured'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [DrawdownItem];
      return this.apiClient.callApi(
        '/taskmanager/tasks/{taskid}/drawdown', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the taskmanagerTasksTaskidEquityGet operation.
     * @callback module:api/TaskManagerAPIApi~taskmanagerTasksTaskidEquityGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/EquityItem>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get data for equity chart
     * Get data for equity chart
     * @param {Number} taskid 
     * @param {module:api/TaskManagerAPIApi~taskmanagerTasksTaskidEquityGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/EquityItem>}
     */
    taskmanagerTasksTaskidEquityGet(taskid, callback) {
      let postBody = null;
      // verify the required parameter 'taskid' is set
      if (taskid === undefined || taskid === null) {
        throw new Error("Missing the required parameter 'taskid' when calling taskmanagerTasksTaskidEquityGet");
      }

      let pathParams = {
        'taskid': taskid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Secured'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [EquityItem];
      return this.apiClient.callApi(
        '/taskmanager/tasks/{taskid}/equity', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the taskmanagerTasksTaskidEquitypctGet operation.
     * @callback module:api/TaskManagerAPIApi~taskmanagerTasksTaskidEquitypctGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/EquityPctItem>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get data for equity chart (%)
     * Get data for equity chart (%)
     * @param {Number} taskid 
     * @param {module:api/TaskManagerAPIApi~taskmanagerTasksTaskidEquitypctGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/EquityPctItem>}
     */
    taskmanagerTasksTaskidEquitypctGet(taskid, callback) {
      let postBody = null;
      // verify the required parameter 'taskid' is set
      if (taskid === undefined || taskid === null) {
        throw new Error("Missing the required parameter 'taskid' when calling taskmanagerTasksTaskidEquitypctGet");
      }

      let pathParams = {
        'taskid': taskid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Secured'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [EquityPctItem];
      return this.apiClient.callApi(
        '/taskmanager/tasks/{taskid}/equitypct', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the taskmanagerTasksTaskidEquitypctsmGet operation.
     * @callback module:api/TaskManagerAPIApi~taskmanagerTasksTaskidEquitypctsmGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/EquityPctSmItem>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get spared data for equity chart (%)
     * Get spared data for equity chart (%)
     * @param {Number} taskid 
     * @param {module:api/TaskManagerAPIApi~taskmanagerTasksTaskidEquitypctsmGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/EquityPctSmItem>}
     */
    taskmanagerTasksTaskidEquitypctsmGet(taskid, callback) {
      let postBody = null;
      // verify the required parameter 'taskid' is set
      if (taskid === undefined || taskid === null) {
        throw new Error("Missing the required parameter 'taskid' when calling taskmanagerTasksTaskidEquitypctsmGet");
      }

      let pathParams = {
        'taskid': taskid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Secured'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [EquityPctSmItem];
      return this.apiClient.callApi(
        '/taskmanager/tasks/{taskid}/equitypctsm', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the taskmanagerTasksTaskidFolderGet operation.
     * @callback module:api/TaskManagerAPIApi~taskmanagerTasksTaskidFolderGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TaskmanagerTasksTaskidFolderGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get task result folder name
     * Get task result folder name
     * @param {Number} taskid 
     * @param {module:api/TaskManagerAPIApi~taskmanagerTasksTaskidFolderGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TaskmanagerTasksTaskidFolderGet200Response}
     */
    taskmanagerTasksTaskidFolderGet(taskid, callback) {
      let postBody = null;
      // verify the required parameter 'taskid' is set
      if (taskid === undefined || taskid === null) {
        throw new Error("Missing the required parameter 'taskid' when calling taskmanagerTasksTaskidFolderGet");
      }

      let pathParams = {
        'taskid': taskid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Secured'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TaskmanagerTasksTaskidFolderGet200Response;
      return this.apiClient.callApi(
        '/taskmanager/tasks/{taskid}/folder', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the taskmanagerTasksTaskidGet operation.
     * @callback module:api/TaskManagerAPIApi~taskmanagerTasksTaskidGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Task} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get task by ID
     * Get task by ID
     * @param {Number} taskid 
     * @param {module:api/TaskManagerAPIApi~taskmanagerTasksTaskidGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Task}
     */
    taskmanagerTasksTaskidGet(taskid, callback) {
      let postBody = null;
      // verify the required parameter 'taskid' is set
      if (taskid === undefined || taskid === null) {
        throw new Error("Missing the required parameter 'taskid' when calling taskmanagerTasksTaskidGet");
      }

      let pathParams = {
        'taskid': taskid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Secured'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Task;
      return this.apiClient.callApi(
        '/taskmanager/tasks/{taskid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the taskmanagerTasksTaskidPerformanceGet operation.
     * @callback module:api/TaskManagerAPIApi~taskmanagerTasksTaskidPerformanceGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TaskmanagerTasksTaskidPerformanceGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get backtest statistics
     * Get backtest statistics
     * @param {Number} taskid 
     * @param {module:api/TaskManagerAPIApi~taskmanagerTasksTaskidPerformanceGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TaskmanagerTasksTaskidPerformanceGet200Response}
     */
    taskmanagerTasksTaskidPerformanceGet(taskid, callback) {
      let postBody = null;
      // verify the required parameter 'taskid' is set
      if (taskid === undefined || taskid === null) {
        throw new Error("Missing the required parameter 'taskid' when calling taskmanagerTasksTaskidPerformanceGet");
      }

      let pathParams = {
        'taskid': taskid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Secured'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TaskmanagerTasksTaskidPerformanceGet200Response;
      return this.apiClient.callApi(
        '/taskmanager/tasks/{taskid}/performance', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the taskmanagerTasksTaskidResult2Get operation.
     * @callback module:api/TaskManagerAPIApi~taskmanagerTasksTaskidResult2GetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TaskmanagerTasksTaskidResult2Get200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get task result (version 2)
     * Get task result (version 2)
     * @param {Number} taskid 
     * @param {module:api/TaskManagerAPIApi~taskmanagerTasksTaskidResult2GetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TaskmanagerTasksTaskidResult2Get200Response}
     */
    taskmanagerTasksTaskidResult2Get(taskid, callback) {
      let postBody = null;
      // verify the required parameter 'taskid' is set
      if (taskid === undefined || taskid === null) {
        throw new Error("Missing the required parameter 'taskid' when calling taskmanagerTasksTaskidResult2Get");
      }

      let pathParams = {
        'taskid': taskid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Secured'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TaskmanagerTasksTaskidResult2Get200Response;
      return this.apiClient.callApi(
        '/taskmanager/tasks/{taskid}/result2', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the taskmanagerTasksTaskidResultGet operation.
     * @callback module:api/TaskManagerAPIApi~taskmanagerTasksTaskidResultGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TaskmanagerTasksTaskidResultGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get task result
     * Get task result
     * @param {Number} taskid 
     * @param {module:api/TaskManagerAPIApi~taskmanagerTasksTaskidResultGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TaskmanagerTasksTaskidResultGet200Response}
     */
    taskmanagerTasksTaskidResultGet(taskid, callback) {
      let postBody = null;
      // verify the required parameter 'taskid' is set
      if (taskid === undefined || taskid === null) {
        throw new Error("Missing the required parameter 'taskid' when calling taskmanagerTasksTaskidResultGet");
      }

      let pathParams = {
        'taskid': taskid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Secured'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TaskmanagerTasksTaskidResultGet200Response;
      return this.apiClient.callApi(
        '/taskmanager/tasks/{taskid}/result', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the taskmanagerTasksTaskidStatusGet operation.
     * @callback module:api/TaskManagerAPIApi~taskmanagerTasksTaskidStatusGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TaskmanagerTasksTaskidStatusGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get task status
     * Get task status
     * @param {Number} taskid 
     * @param {module:api/TaskManagerAPIApi~taskmanagerTasksTaskidStatusGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TaskmanagerTasksTaskidStatusGet200Response}
     */
    taskmanagerTasksTaskidStatusGet(taskid, callback) {
      let postBody = null;
      // verify the required parameter 'taskid' is set
      if (taskid === undefined || taskid === null) {
        throw new Error("Missing the required parameter 'taskid' when calling taskmanagerTasksTaskidStatusGet");
      }

      let pathParams = {
        'taskid': taskid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Secured'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TaskmanagerTasksTaskidStatusGet200Response;
      return this.apiClient.callApi(
        '/taskmanager/tasks/{taskid}/status', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the taskmanagerTasksTaskidTradesGet operation.
     * @callback module:api/TaskManagerAPIApi~taskmanagerTasksTaskidTradesGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/BacktestTrade>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get backtest trades list
     * Get backtest trades list
     * @param {Number} taskid 
     * @param {module:api/TaskManagerAPIApi~taskmanagerTasksTaskidTradesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/BacktestTrade>}
     */
    taskmanagerTasksTaskidTradesGet(taskid, callback) {
      let postBody = null;
      // verify the required parameter 'taskid' is set
      if (taskid === undefined || taskid === null) {
        throw new Error("Missing the required parameter 'taskid' when calling taskmanagerTasksTaskidTradesGet");
      }

      let pathParams = {
        'taskid': taskid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Secured'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [BacktestTrade];
      return this.apiClient.callApi(
        '/taskmanager/tasks/{taskid}/trades', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
