/**
 * Tradematic Cloud API
 * ### Overview Tradematic Cloud is a trading infrastructure for building investment services.  Itâ€™s a trading engine + API + ready-made adapters to stock and forex brokers, crypto exchanges, and market data providers.  You can use it as a cloud API, or you can deploy it on your servers.     ### How to use Tradematic Cloud API  Sign up at [tradematic.cloud](https://tradematic.cloud). After signing up, you will receive your API key.  ### Authorization  Add the 'X-API-KEY' header with your API key to each request.  ### Examples of writing code with Tradematic Cloud API  Examples are available at [tradematic.cloud](https://tradematic.cloud).   ### Swagger (.yaml) File Swagger (.yaml) file can be found [here](http://tradematic.cloud/sdk/swagger.yaml). 
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: support@tradematic.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TradematicCloudApi);
  }
}(this, function(expect, TradematicCloudApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TradematicCloudApi.AutofollowAPIApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AutofollowAPIApi', function() {
    describe('autofollowStrategiesGet', function() {
      it('should call autofollowStrategiesGet successfully', function(done) {
        //uncomment below and update the code to test autofollowStrategiesGet
        //instance.autofollowStrategiesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('autofollowStrategiesPost', function() {
      it('should call autofollowStrategiesPost successfully', function(done) {
        //uncomment below and update the code to test autofollowStrategiesPost
        //instance.autofollowStrategiesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('autofollowStrategiesStrategyidContentPut', function() {
      it('should call autofollowStrategiesStrategyidContentPut successfully', function(done) {
        //uncomment below and update the code to test autofollowStrategiesStrategyidContentPut
        //instance.autofollowStrategiesStrategyidContentPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('autofollowStrategiesStrategyidGet', function() {
      it('should call autofollowStrategiesStrategyidGet successfully', function(done) {
        //uncomment below and update the code to test autofollowStrategiesStrategyidGet
        //instance.autofollowStrategiesStrategyidGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('autofollowStrategiesStrategyidPositionsGet', function() {
      it('should call autofollowStrategiesStrategyidPositionsGet successfully', function(done) {
        //uncomment below and update the code to test autofollowStrategiesStrategyidPositionsGet
        //instance.autofollowStrategiesStrategyidPositionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('autofollowStrategiesStrategyidPut', function() {
      it('should call autofollowStrategiesStrategyidPut successfully', function(done) {
        //uncomment below and update the code to test autofollowStrategiesStrategyidPut
        //instance.autofollowStrategiesStrategyidPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('autofollowStrategiesStrategyidSignalsGet', function() {
      it('should call autofollowStrategiesStrategyidSignalsGet successfully', function(done) {
        //uncomment below and update the code to test autofollowStrategiesStrategyidSignalsGet
        //instance.autofollowStrategiesStrategyidSignalsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('autofollowStrategiesStrategyidSignalsPost', function() {
      it('should call autofollowStrategiesStrategyidSignalsPost successfully', function(done) {
        //uncomment below and update the code to test autofollowStrategiesStrategyidSignalsPost
        //instance.autofollowStrategiesStrategyidSignalsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
