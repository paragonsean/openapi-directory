openapi: 3.0.1
info:
  contact:
    email: support@tradematic.com
  description: "### Overview\nTradematic Cloud is a trading infrastructure for building\
    \ investment services.\n\nItâ€™s a trading engine + API + ready-made adapters to\
    \ stock and forex brokers, crypto exchanges, and market data providers.\n\nYou\
    \ can use it as a cloud API, or you can deploy it on your servers. \n\n\n\n###\
    \ How to use Tradematic Cloud API\n\nSign up at [tradematic.cloud](https://tradematic.cloud).\
    \ After signing up, you will receive your API key.\n\n### Authorization\n\nAdd\
    \ the 'X-API-KEY' header with your API key to each request.\n\n### Examples of\
    \ writing code with Tradematic Cloud API\n\nExamples are available at [tradematic.cloud](https://tradematic.cloud).\
    \ \n\n### Swagger (.yaml) File\nSwagger (.yaml) file can be found [here](http://tradematic.cloud/sdk/swagger.yaml).\n"
  title: Tradematic Cloud API
  version: 1.0.2
  x-apisguru-categories:
  - financial
  x-logo:
    backgroundColor: '#FFFFFF'
    url: https://tradematic.cloud/img/logo-dark.png
  x-origin:
  - format: swagger
    url: https://tradematic.cloud/sdk/swagger.yaml
    version: "2.0"
  x-providerName: tradematic.com
servers:
- url: https://api.tradematic.com/
tags:
- description: Server status
  name: Status API
- description: Clients management
  name: Client API
- description: Trading signals and copy trading
  name: Autofollow API
- description: Backtest and optimization tasks management
  name: TaskManager API
- description: Strategy builder
  name: Builder API
- description: News
  name: News API
- description: Market data
  name: MarketData API
- description: Trading
  name: Cloud API
paths:
  /autofollow/strategies:
    get:
      description: Get autofollow strategies list
      operationId: autofollow_strategies_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Strategy'
                type: array
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get autofollow strategies list
      tags:
      - Autofollow API
      x-openapi-router-controller: openapi_server.controllers.autofollow_api_controller
    post:
      description: Create new autofollow strategy
      operationId: autofollow_strategies_post
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/_autofollow_strategies_post_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_autofollow_strategies_post_200_response'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Create new autofollow strategy
      tags:
      - Autofollow API
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.autofollow_api_controller
  /autofollow/strategies/{strategyid}:
    get:
      description: Get autofollow strategy by ID
      operationId: autofollow_strategies_strategyid_get
      parameters:
      - in: path
        name: strategyid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Strategy'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get autofollow strategy by ID
      tags:
      - Autofollow API
      x-openapi-router-controller: openapi_server.controllers.autofollow_api_controller
    put:
      description: Update autofollow strategy
      operationId: autofollow_strategies_strategyid_put
      parameters:
      - in: path
        name: strategyid
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/_autofollow_strategies__strategyid__put_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_autofollow_strategies__strategyid__put_200_response'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Update autofollow strategy
      tags:
      - Autofollow API
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.autofollow_api_controller
  /autofollow/strategies/{strategyid}/content:
    put:
      description: Update rules for strategy that was created with strategy builder
      operationId: autofollow_strategies_strategyid_content_put
      parameters:
      - in: path
        name: strategyid
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/_autofollow_strategies__strategyid__content_put_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_autofollow_strategies__strategyid__content_put_200_response'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Update rules for strategy that was created with strategy builder
      tags:
      - Autofollow API
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.autofollow_api_controller
  /autofollow/strategies/{strategyid}/positions:
    get:
      description: Get positions for strategy
      operationId: autofollow_strategies_strategyid_positions_get
      parameters:
      - in: path
        name: strategyid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/StrategyPosition'
                type: array
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get positions for strategy
      tags:
      - Autofollow API
      x-openapi-router-controller: openapi_server.controllers.autofollow_api_controller
  /autofollow/strategies/{strategyid}/signals:
    get:
      description: Get trading signals for strategy
      operationId: autofollow_strategies_strategyid_signals_get
      parameters:
      - in: path
        name: strategyid
        required: true
        schema:
          format: int64
          type: integer
      - in: query
        name: count
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Signal'
                type: array
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get trading signals for strategy
      tags:
      - Autofollow API
      x-openapi-router-controller: openapi_server.controllers.autofollow_api_controller
    post:
      description: Send a new signal for autofollow strategy
      operationId: autofollow_strategies_strategyid_signals_post
      parameters:
      - in: path
        name: strategyid
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/_autofollow_strategies__strategyid__signals_post_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_autofollow_strategies__strategyid__signals_post_200_response'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Send a new signal for autofollow strategy
      tags:
      - Autofollow API
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.autofollow_api_controller
  /builder/rules:
    get:
      description: Get strategy builder rules list
      operationId: builder_rules_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Rule'
                type: array
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get strategy builder rules list
      tags:
      - Builder API
      x-openapi-router-controller: openapi_server.controllers.builder_api_controller
  /builder/rules/{ruleid}:
    get:
      description: Get strategy builder rules by ID
      operationId: builder_rules_ruleid_get
      parameters:
      - in: path
        name: ruleid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Rule'
                type: array
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get strategy builder rules by ID
      tags:
      - Builder API
      x-openapi-router-controller: openapi_server.controllers.builder_api_controller
  /client/apikeys:
    get:
      description: Get API keys
      operationId: client_apikeys_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/APIKey'
                type: array
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get API keys
      tags:
      - Client API
      x-openapi-router-controller: openapi_server.controllers.client_api_controller
    post:
      description: Create new API key
      operationId: client_apikeys_post
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_client_apikeys_post_200_response'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Create new API key
      tags:
      - Client API
      x-openapi-router-controller: openapi_server.controllers.client_api_controller
  /client/apikeys/{keyid}:
    delete:
      description: Delete API key
      operationId: client_apikeys_keyid_delete
      parameters:
      - in: path
        name: keyid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_client_apikeys__keyid__delete_200_response'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Delete API key
      tags:
      - Client API
      x-openapi-router-controller: openapi_server.controllers.client_api_controller
  /client/users:
    get:
      description: Get users list
      operationId: client_users_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get users list
      tags:
      - Client API
      x-openapi-router-controller: openapi_server.controllers.client_api_controller
  /client/users/login:
    post:
      description: Logs user into the system
      operationId: client_users_login_post
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_client_users_login_post_200_response'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Logs user into the system
      tags:
      - Client API
      x-openapi-router-controller: openapi_server.controllers.client_api_controller
  /client/users/register:
    post:
      description: Register a new user
      operationId: client_users_register_post
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/_client_users_register_post_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_client_users_register_post_200_response'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Register a new user
      tags:
      - Client API
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.client_api_controller
  /client/users/{userid}:
    get:
      description: Get user by ID
      operationId: client_users_userid_get
      parameters:
      - in: path
        name: userid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get user by ID
      tags:
      - Client API
      x-openapi-router-controller: openapi_server.controllers.client_api_controller
  /cloud/accounts:
    get:
      description: Get trading accounts list
      operationId: cloud_accounts_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Account'
                type: array
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get trading accounts list
      tags:
      - Cloud API
      x-openapi-router-controller: openapi_server.controllers.cloud_api_controller
  /cloud/accounts/{accountid}:
    get:
      description: Get trading account by ID
      operationId: cloud_accounts_accountid_get
      parameters:
      - in: path
        name: accountid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get trading account by ID
      tags:
      - Cloud API
      x-openapi-router-controller: openapi_server.controllers.cloud_api_controller
  /cloud/accounts/{accountid}/closeall:
    post:
      description: Close all positions by account
      operationId: cloud_accounts_accountid_closeall_post
      parameters:
      - in: path
        name: accountid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_cloud_accounts__accountid__closeall_post_202_response'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Close all positions by account
      tags:
      - Cloud API
      x-openapi-router-controller: openapi_server.controllers.cloud_api_controller
  /cloud/accounts/{accountid}/orders:
    get:
      description: Get orders list by account
      operationId: cloud_accounts_accountid_orders_get
      parameters:
      - in: path
        name: accountid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Order'
                type: array
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get orders list by account
      tags:
      - Cloud API
      x-openapi-router-controller: openapi_server.controllers.cloud_api_controller
    post:
      description: Place a new order
      operationId: cloud_accounts_accountid_orders_post
      parameters:
      - in: path
        name: accountid
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/_cloud_accounts__accountid__orders_post_request'
        required: true
        x-body-name: body
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_cloud_accounts__accountid__closeall_post_202_response'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Place a new order
      tags:
      - Cloud API
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.cloud_api_controller
  /cloud/accounts/{accountid}/orders/{orderid}:
    delete:
      description: Cancel an order by ID
      operationId: cloud_accounts_accountid_orders_orderid_delete
      parameters:
      - in: path
        name: accountid
        required: true
        schema:
          format: int64
          type: integer
      - in: path
        name: orderid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_cloud_accounts__accountid__closeall_post_202_response'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Cancel an order by ID
      tags:
      - Cloud API
      x-openapi-router-controller: openapi_server.controllers.cloud_api_controller
  /cloud/accounts/{accountid}/snapshots:
    get:
      description: Get account equity and cash snapshots
      operationId: cloud_accounts_accountid_snapshots_get
      parameters:
      - in: path
        name: accountid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Snapshot'
                type: array
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get account equity and cash snapshots
      tags:
      - Cloud API
      x-openapi-router-controller: openapi_server.controllers.cloud_api_controller
  /cloud/accounts/{accountid}/sync:
    post:
      description: Syhchronize an account with account active strategies
      operationId: cloud_accounts_accountid_sync_post
      parameters:
      - in: path
        name: accountid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_cloud_accounts__accountid__closeall_post_202_response'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Syhchronize an account with account active strategies
      tags:
      - Cloud API
      x-openapi-router-controller: openapi_server.controllers.cloud_api_controller
  /cloud/accounts/{accountid}/trades:
    get:
      description: Get trades list by account
      operationId: cloud_accounts_accountid_trades_get
      parameters:
      - in: path
        name: accountid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Trade'
                type: array
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get trades list by account
      tags:
      - Cloud API
      x-openapi-router-controller: openapi_server.controllers.cloud_api_controller
  /cloud/commands:
    get:
      description: Get commands list
      operationId: cloud_commands_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Command'
                type: array
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get commands list
      tags:
      - Cloud API
      x-openapi-router-controller: openapi_server.controllers.cloud_api_controller
  /cloud/commands/{commandid}:
    get:
      description: Get command by ID
      operationId: cloud_commands_commandid_get
      parameters:
      - in: path
        name: commandid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Command'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get command by ID
      tags:
      - Cloud API
      x-openapi-router-controller: openapi_server.controllers.cloud_api_controller
  /cloud/connections:
    get:
      description: Get connections list
      operationId: cloud_connections_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Connection'
                type: array
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get connections list
      tags:
      - Cloud API
      x-openapi-router-controller: openapi_server.controllers.cloud_api_controller
    post:
      description: Create a new connection
      operationId: cloud_connections_post
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/_cloud_connections_post_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_cloud_connections_post_200_response'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Create a new connection
      tags:
      - Cloud API
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.cloud_api_controller
  /cloud/connections/{connectionid}:
    delete:
      description: Delete connection by ID
      operationId: cloud_connections_connectionid_delete
      parameters:
      - in: path
        name: connectionid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_cloud_connections_post_200_response'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Delete connection by ID
      tags:
      - Cloud API
      x-openapi-router-controller: openapi_server.controllers.cloud_api_controller
    get:
      description: Get connection by ID
      operationId: cloud_connections_connectionid_get
      parameters:
      - in: path
        name: connectionid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get connection by ID
      tags:
      - Cloud API
      x-openapi-router-controller: openapi_server.controllers.cloud_api_controller
    put:
      description: Update existing connection
      operationId: cloud_connections_connectionid_put
      parameters:
      - in: path
        name: connectionid
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/_cloud_connections_post_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_cloud_connections_post_200_response'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Update existing connection
      tags:
      - Cloud API
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.cloud_api_controller
  /cloud/connectors:
    get:
      description: Get available connectors list
      operationId: cloud_connectors_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Connector'
                type: array
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get available connectors list
      tags:
      - Cloud API
      x-openapi-router-controller: openapi_server.controllers.cloud_api_controller
  /cloud/connectors/{connectorid}:
    get:
      description: Get connector by ID
      operationId: cloud_connectors_connectorid_get
      parameters:
      - in: path
        name: connectorid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connector'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get connector by ID
      tags:
      - Cloud API
      x-openapi-router-controller: openapi_server.controllers.cloud_api_controller
  /cloud/sessions:
    get:
      description: Get sessions list
      operationId: cloud_sessions_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Session'
                type: array
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get sessions list
      tags:
      - Cloud API
      x-openapi-router-controller: openapi_server.controllers.cloud_api_controller
  /cloud/sessions/{sessionid}:
    get:
      description: Get session by ID
      operationId: cloud_sessions_sessionid_get
      parameters:
      - in: path
        name: sessionid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get session by ID
      tags:
      - Cloud API
      x-openapi-router-controller: openapi_server.controllers.cloud_api_controller
  /cloud/strategies:
    get:
      description: Get list of active (executing) strategies
      operationId: cloud_strategies_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CloudStrategy'
                type: array
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get list of active (executing) strategies
      tags:
      - Cloud API
      x-openapi-router-controller: openapi_server.controllers.cloud_api_controller
  /cloud/strategies/start:
    post:
      description: Start a strategy execution for account
      operationId: cloud_strategies_start_post
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/_cloud_strategies_start_post_request'
        required: true
        x-body-name: body
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_cloud_accounts__accountid__closeall_post_202_response'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Start a strategy execution for account
      tags:
      - Cloud API
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.cloud_api_controller
  /cloud/strategies/{strategyid}:
    get:
      description: Get active (executing) strategy by ID
      operationId: cloud_strategies_strategyid_get
      parameters:
      - in: path
        name: strategyid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CloudStrategy'
                type: array
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get active (executing) strategy by ID
      tags:
      - Cloud API
      x-openapi-router-controller: openapi_server.controllers.cloud_api_controller
  /cloud/strategies/{strategyid}/stop:
    post:
      description: Stop a strategy execution by ID
      operationId: cloud_strategies_strategyid_stop_post
      parameters:
      - in: path
        name: strategyid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_cloud_accounts__accountid__closeall_post_202_response'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Stop a strategy execution by ID
      tags:
      - Cloud API
      x-openapi-router-controller: openapi_server.controllers.cloud_api_controller
  /marketdata/markets:
    get:
      description: Get markets list
      operationId: marketdata_markets_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Market'
                type: array
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get markets list
      tags:
      - MarketData API
      x-openapi-router-controller: openapi_server.controllers.market_data_api_controller
  /marketdata/markets/{marketid}:
    get:
      description: Get market by ID
      operationId: marketdata_markets_marketid_get
      parameters:
      - in: path
        name: marketid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Market'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get market by ID
      tags:
      - MarketData API
      x-openapi-router-controller: openapi_server.controllers.market_data_api_controller
  /marketdata/symbols:
    get:
      description: Get symbols list
      operationId: marketdata_symbols_get
      parameters:
      - in: query
        name: marketid
        required: true
        schema:
          format: int64
          type: integer
      - in: query
        name: filter
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Symbol'
                type: array
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get symbols list
      tags:
      - MarketData API
      x-openapi-router-controller: openapi_server.controllers.market_data_api_controller
  /marketdata/symbols/{symbolid}:
    get:
      description: Get symbol by ID
      operationId: marketdata_symbols_symbolid_get
      parameters:
      - in: path
        name: symbolid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Symbol'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get symbol by ID
      tags:
      - MarketData API
      x-openapi-router-controller: openapi_server.controllers.market_data_api_controller
  /marketdata/symbols/{symbolid}/histdata:
    get:
      description: Get historical data for instrument
      operationId: marketdata_symbols_symbolid_histdata_get
      parameters:
      - in: path
        name: symbolid
        required: true
        schema:
          format: int64
          type: integer
      - in: query
        name: tf
        required: true
        schema:
          format: int64
          type: integer
      - in: query
        name: from
        required: true
        schema:
          format: int64
          type: integer
      - in: query
        name: to
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_marketdata_symbols__symbolid__histdata_get_200_response'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get historical data for instrument
      tags:
      - MarketData API
      x-openapi-router-controller: openapi_server.controllers.market_data_api_controller
  /news/news:
    get:
      description: Get news list
      operationId: news_news_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/News'
                type: array
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get news list
      tags:
      - News API
      x-openapi-router-controller: openapi_server.controllers.news_api_controller
  /news/news/{newsid}:
    get:
      description: Get news by ID
      operationId: news_news_newsid_get
      parameters:
      - in: path
        name: newsid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/News'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get news by ID
      tags:
      - News API
      x-openapi-router-controller: openapi_server.controllers.news_api_controller
  /ping:
    get:
      description: Ping
      operationId: ping_get
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Ping
      tags:
      - Status API
      x-openapi-router-controller: openapi_server.controllers.status_api_controller
  /taskmanager/tasks:
    get:
      description: Get tasks list
      operationId: taskmanager_tasks_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Task'
                type: array
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get tasks list
      tags:
      - TaskManager API
      x-openapi-router-controller: openapi_server.controllers.task_manager_api_controller
    post:
      description: Create a new task
      operationId: taskmanager_tasks_post
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/_taskmanager_tasks_post_request'
        required: true
        x-body-name: body
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_taskmanager_tasks_post_202_response'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Create a new task
      tags:
      - TaskManager API
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.task_manager_api_controller
  /taskmanager/tasks/{taskid}:
    get:
      description: Get task by ID
      operationId: taskmanager_tasks_taskid_get
      parameters:
      - in: path
        name: taskid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get task by ID
      tags:
      - TaskManager API
      x-openapi-router-controller: openapi_server.controllers.task_manager_api_controller
  /taskmanager/tasks/{taskid}/bymonths:
    get:
      description: "Get backtest data for equity chart, grouped by months"
      operationId: taskmanager_tasks_taskid_bymonths_get
      parameters:
      - in: path
        name: taskid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ByMonths'
                type: array
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: "Get backtest data for equity chart, grouped by months"
      tags:
      - TaskManager API
      x-openapi-router-controller: openapi_server.controllers.task_manager_api_controller
  /taskmanager/tasks/{taskid}/byquarters:
    get:
      description: "Get backtest data for equity chart, grouped by quarters"
      operationId: taskmanager_tasks_taskid_byquarters_get
      parameters:
      - in: path
        name: taskid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ByQuarters'
                type: array
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: "Get backtest data for equity chart, grouped by quarters"
      tags:
      - TaskManager API
      x-openapi-router-controller: openapi_server.controllers.task_manager_api_controller
  /taskmanager/tasks/{taskid}/byyears:
    get:
      description: "Get backtest data for equity chart, grouped by years"
      operationId: taskmanager_tasks_taskid_byyears_get
      parameters:
      - in: path
        name: taskid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ByYears'
                type: array
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: "Get backtest data for equity chart, grouped by years"
      tags:
      - TaskManager API
      x-openapi-router-controller: openapi_server.controllers.task_manager_api_controller
  /taskmanager/tasks/{taskid}/contribution:
    get:
      description: Get backtest symbol contribution data
      operationId: taskmanager_tasks_taskid_contribution_get
      parameters:
      - in: path
        name: taskid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Contribution'
                type: array
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get backtest symbol contribution data
      tags:
      - TaskManager API
      x-openapi-router-controller: openapi_server.controllers.task_manager_api_controller
  /taskmanager/tasks/{taskid}/drawdown:
    get:
      description: Get data for drawdown chart
      operationId: taskmanager_tasks_taskid_drawdown_get
      parameters:
      - in: path
        name: taskid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DrawdownItem'
                type: array
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get data for drawdown chart
      tags:
      - TaskManager API
      x-openapi-router-controller: openapi_server.controllers.task_manager_api_controller
  /taskmanager/tasks/{taskid}/equity:
    get:
      description: Get data for equity chart
      operationId: taskmanager_tasks_taskid_equity_get
      parameters:
      - in: path
        name: taskid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EquityItem'
                type: array
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get data for equity chart
      tags:
      - TaskManager API
      x-openapi-router-controller: openapi_server.controllers.task_manager_api_controller
  /taskmanager/tasks/{taskid}/equitypct:
    get:
      description: Get data for equity chart (%)
      operationId: taskmanager_tasks_taskid_equitypct_get
      parameters:
      - in: path
        name: taskid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EquityPctItem'
                type: array
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get data for equity chart (%)
      tags:
      - TaskManager API
      x-openapi-router-controller: openapi_server.controllers.task_manager_api_controller
  /taskmanager/tasks/{taskid}/equitypctsm:
    get:
      description: Get spared data for equity chart (%)
      operationId: taskmanager_tasks_taskid_equitypctsm_get
      parameters:
      - in: path
        name: taskid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EquityPctSmItem'
                type: array
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get spared data for equity chart (%)
      tags:
      - TaskManager API
      x-openapi-router-controller: openapi_server.controllers.task_manager_api_controller
  /taskmanager/tasks/{taskid}/folder:
    get:
      description: Get task result folder name
      operationId: taskmanager_tasks_taskid_folder_get
      parameters:
      - in: path
        name: taskid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_taskmanager_tasks__taskid__folder_get_200_response'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get task result folder name
      tags:
      - TaskManager API
      x-openapi-router-controller: openapi_server.controllers.task_manager_api_controller
  /taskmanager/tasks/{taskid}/performance:
    get:
      description: Get backtest statistics
      operationId: taskmanager_tasks_taskid_performance_get
      parameters:
      - in: path
        name: taskid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_taskmanager_tasks__taskid__performance_get_200_response'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get backtest statistics
      tags:
      - TaskManager API
      x-openapi-router-controller: openapi_server.controllers.task_manager_api_controller
  /taskmanager/tasks/{taskid}/result:
    get:
      description: Get task result
      operationId: taskmanager_tasks_taskid_result_get
      parameters:
      - in: path
        name: taskid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_taskmanager_tasks__taskid__result_get_200_response'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get task result
      tags:
      - TaskManager API
      x-openapi-router-controller: openapi_server.controllers.task_manager_api_controller
  /taskmanager/tasks/{taskid}/result2:
    get:
      description: Get task result (version 2)
      operationId: taskmanager_tasks_taskid_result2_get
      parameters:
      - in: path
        name: taskid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_taskmanager_tasks__taskid__result2_get_200_response'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get task result (version 2)
      tags:
      - TaskManager API
      x-openapi-router-controller: openapi_server.controllers.task_manager_api_controller
  /taskmanager/tasks/{taskid}/status:
    get:
      description: Get task status
      operationId: taskmanager_tasks_taskid_status_get
      parameters:
      - in: path
        name: taskid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_taskmanager_tasks__taskid__status_get_200_response'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get task status
      tags:
      - TaskManager API
      x-openapi-router-controller: openapi_server.controllers.task_manager_api_controller
  /taskmanager/tasks/{taskid}/trades:
    get:
      description: Get backtest trades list
      operationId: taskmanager_tasks_taskid_trades_get
      parameters:
      - in: path
        name: taskid
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BacktestTrade'
                type: array
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get backtest trades list
      tags:
      - TaskManager API
      x-openapi-router-controller: openapi_server.controllers.task_manager_api_controller
  /time:
    get:
      description: Get current server time
      operationId: time_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_time_get_200_response'
          description: Successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
      - Secured: []
      summary: Get current server time
      tags:
      - Status API
      x-openapi-router-controller: openapi_server.controllers.status_api_controller
components:
  schemas:
    APIKey:
      example:
        permissions: permissions
        keyid: keyid
        key: key
      properties:
        key:
          title: key
          type: string
        keyid:
          title: keyid
          type: string
        permissions:
          title: permissions
          type: string
      title: APIKey
      type: object
    Account:
      example:
        changepercent: changepercent
        comments: comments
        change: change
        currencytext: currencytext
        positions:
          key: positions
        sessionid: sessionid
        accountid: accountid
        computer: computer
        positionspercent:
          key: positionspercent
        typeid: typeid
        hwid: hwid
        currencyid: currencyid
        cash: cash
        value: value
        account: account
        accounttypename: accounttypename
      properties:
        account:
          title: account
          type: string
        accountid:
          title: accountid
          type: string
        accounttypename:
          title: accounttypename
          type: string
        cash:
          title: cash
          type: string
        change:
          title: change
          type: string
        changepercent:
          title: changepercent
          type: string
        comments:
          title: comments
          type: string
        computer:
          title: computer
          type: string
        currencyid:
          title: currencyid
          type: string
        currencytext:
          title: currencytext
          type: string
        hwid:
          title: hwid
          type: string
        positions:
          additionalProperties:
            type: string
          title: positions
          type: object
        positionspercent:
          additionalProperties:
            type: string
          title: positions
          type: object
        sessionid:
          title: sessionid
          type: string
        typeid:
          title: typeid
          type: string
        value:
          title: value
          type: string
      title: Account
      type: object
    BacktestTrade:
      example:
        symbol: symbol
        entrysignal: entrysignal
        exitprice: exitprice
        barsheld: barsheld
        changepct: changepct
        exitdatetime: exitdatetime
        mfe: mfe
        mae: mae
        shares: shares
        entrydatetime: entrydatetime
        size: size
        exitsignal: exitsignal
        commission: commission
        position: position
        entryprice: entryprice
        pandl: pandl
      properties:
        barsheld:
          title: barsheld
          type: string
        changepct:
          title: changepct
          type: string
        commission:
          title: commission
          type: string
        entrydatetime:
          title: entrydatetime
          type: string
        entryprice:
          title: entryprice
          type: string
        entrysignal:
          title: entrysignal
          type: string
        exitdatetime:
          title: exitdatetime
          type: string
        exitprice:
          title: exitprice
          type: string
        exitsignal:
          title: exitsignal
          type: string
        mae:
          title: mae
          type: string
        mfe:
          title: mfe
          type: string
        pandl:
          title: pandl
          type: string
        position:
          title: position
          type: string
        shares:
          title: shares
          type: string
        size:
          title: size
          type: string
        symbol:
          title: symbol
          type: string
      title: BacktestTrade
      type: object
    ByMonths:
      example:
        period: period
        equitypct: equitypct
      properties:
        equitypct:
          title: equitypct
          type: string
        period:
          title: period
          type: string
      title: ByMonths
      type: object
    ByQuarters:
      example:
        period: period
        equitypct: equitypct
      properties:
        equitypct:
          title: equitypct
          type: string
        period:
          title: period
          type: string
      title: ByQuarters
      type: object
    ByYears:
      example:
        period: period
        equitypct: equitypct
      properties:
        equitypct:
          title: equitypct
          type: string
        period:
          title: period
          type: string
      title: ByYears
      type: object
    CloudStrategy:
      example:
        strategystatusname: strategystatusname
        computer: computer
        strategyid: strategyid
        hwid: hwid
        message: message
        strategy: strategy
        account: account
        status: status
      properties:
        account:
          title: account
          type: string
        computer:
          title: computer
          type: string
        hwid:
          title: hwid
          type: string
        message:
          title: message
          type: string
        status:
          title: status
          type: string
        strategy:
          title: strategy
          type: string
        strategyid:
          title: strategyid
          type: string
        strategystatusname:
          title: strategystatusname
          type: string
      title: CloudStrategy
      type: object
    Command:
      example:
        commandstatusname: commandstatusname
        message: message
        type: type
        commandid: commandid
        commandtypename: commandtypename
        accountid: accountid
        computer: computer
        commanddate: 2000-01-23T04:56:07.000+00:00
        hwid: hwid
        parameters:
          key: parameters
        account: account
        status: status
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        account:
          title: account
          type: string
        accountid:
          title: accountid
          type: string
        commanddate:
          format: date-time
          title: commanddate
          type: string
        commandid:
          title: commandid
          type: string
        commandstatusname:
          title: commandstatusname
          type: string
        commandtypename:
          title: commandtypename
          type: string
        computer:
          title: computer
          type: string
        hwid:
          title: hwid
          type: string
        message:
          title: message
          type: string
        parameters:
          additionalProperties:
            type: string
          title: parameters
          type: object
        status:
          title: status
          type: string
        timestamp:
          format: date-time
          title: timestamp
          type: string
        type:
          title: type
          type: string
      title: Command
      type: object
    Connection:
      example:
        creationdate: 2000-01-23T04:56:07.000+00:00
        connectionstring: connectionstring
        connectortypename: connectortypename
        connectorid: connectorid
        connectorname: connectorname
        active: active
        sessionid: sessionid
        login: login
        connectorcode: connectorcode
        password: password
        updatedate: 2000-01-23T04:56:07.000+00:00
        port: port
        host: host
        connectionid: connectionid
      properties:
        active:
          title: active
          type: string
        connectionid:
          title: connectionid
          type: string
        connectionstring:
          title: connectionstring
          type: string
        connectorcode:
          title: connectorcode
          type: string
        connectorid:
          title: connectorid
          type: string
        connectorname:
          title: connectorname
          type: string
        connectortypename:
          title: connectortypename
          type: string
        creationdate:
          format: date-time
          title: creationdate
          type: string
        host:
          title: host
          type: string
        login:
          title: login
          type: string
        password:
          title: password
          type: string
        port:
          title: port
          type: string
        sessionid:
          title: sessionid
          type: string
        updatedate:
          format: date-time
          title: updatedate
          type: string
      title: Connection
      type: object
    Connector:
      example:
        code: code
        connectortypename: connectortypename
        connectorid: connectorid
        name: name
        typeid: typeid
      properties:
        code:
          title: code
          type: string
        connectorid:
          title: connectorid
          type: string
        connectortypename:
          title: connectortypename
          type: string
        name:
          title: name
          type: string
        typeid:
          title: typeid
          type: string
      title: Connector
      type: object
    Contribution:
      example:
        symbol: symbol
        share: share
        pandl: pandl
      properties:
        pandl:
          title: pandl
          type: string
        share:
          title: share
          type: string
        symbol:
          title: symbol
          type: string
      title: Contribution
      type: object
    DrawdownItem:
      example:
        drawdownpct: drawdownpct
        timestamp: timestamp
      properties:
        drawdownpct:
          title: drawdownpct
          type: string
        timestamp:
          title: timestamp
          type: string
      title: DrawdownItem
      type: object
    EquityItem:
      example:
        cash: cash
        equity: equity
        timestamp: timestamp
      properties:
        cash:
          title: cash
          type: string
        equity:
          title: equity
          type: string
        timestamp:
          title: timestamp
          type: string
      title: EquityItem
      type: object
    EquityPctItem:
      example:
        buyandhold: buyandhold
        equity: equity
        timestamp: timestamp
      properties:
        buyandhold:
          title: buyandhold
          type: string
        equity:
          title: equity
          type: string
        timestamp:
          title: timestamp
          type: string
      title: EquityPctItem
      type: object
    EquityPctSmItem:
      example:
        buyandhold: buyandhold
        equity: equity
        timestamp: timestamp
      properties:
        buyandhold:
          title: buyandhold
          type: string
        equity:
          title: equity
          type: string
        timestamp:
          title: timestamp
          type: string
      title: EquityPctSmItem
      type: object
    Error:
      example:
        message: message
        status: 0
      properties:
        message:
          title: message
          type: string
        status:
          title: status
          type: integer
      title: Error
      type: object
    Longentry:
      example:
        validor: validor
        name: name
        id: id
        parameters:
        - default: default
          stop: stop
          name: name
          start: start
          step: step
          type: type
        - default: default
          stop: stop
          name: name
          start: start
          step: step
          type: type
        validnot: validnot
      properties:
        id:
          title: id
          type: string
        name:
          title: name
          type: string
        parameters:
          items:
            $ref: '#/components/schemas/Parameter'
          title: parameters
          type: array
        validnot:
          title: validnot
          type: string
        validor:
          title: validor
          type: string
      title: Longentry
      type: object
    Longexit:
      example:
        validor: validor
        name: name
        id: id
        parameters:
        - default: default
          stop: stop
          name: name
          start: start
          step: step
          type: type
        - default: default
          stop: stop
          name: name
          start: start
          step: step
          type: type
        validnot: validnot
      properties:
        id:
          title: id
          type: string
        name:
          title: name
          type: string
        parameters:
          items:
            $ref: '#/components/schemas/Parameter'
          title: parameters
          type: array
        validnot:
          title: validnot
          type: string
        validor:
          title: validor
          type: string
      title: Longexit
      type: object
    Longshort:
      example:
        avgbarsheld: avgbarsheld
        avglossbarsheld: avglossbarsheld
        maxdrawdownpct: maxdrawdownpct
        avglosspct: avglosspct
        grossloss: grossloss
        maxdrawdownpctdate: maxdrawdownpctdate
        avgloss: avgloss
        totaltrades: totaltrades
        totalvolume: totalvolume
        profitabletrades: profitabletrades
        netprofit: netprofit
        avgprofitbarsheld: avgprofitbarsheld
        maxdrawdown: maxdrawdown
        netprofitpct: netprofitpct
        avgprofitavgloss: avgprofitavgloss
        losingtrades: losingtrades
        losingtradespct: losingtradespct
        avgprofitpct: avgprofitpct
        grossprofit: grossprofit
        maxconsecloss: maxconsecloss
        profitabletradespct: profitabletradespct
        totalcommission: totalcommission
        turnover: turnover
        mar: mar
        maxdrawdownlength: maxdrawdownlength
        apr: apr
        margininterest: margininterest
        profitriskratio: profitriskratio
        rar: rar
        avgprofit: avgprofit
        startcapital: startcapital
        sortinoratio: sortinoratio
        endcapital: endcapital
        mpr: mpr
        maxdrawdowndate: maxdrawdowndate
        maxconsecwin: maxconsecwin
        recoveryfactor: recoveryfactor
        exposure: exposure
        profitfactor: profitfactor
        sharperatio: sharperatio
      properties:
        apr:
          title: apr
          type: string
        avgbarsheld:
          title: avgbarsheld
          type: string
        avgloss:
          title: avgloss
          type: string
        avglossbarsheld:
          title: avglossbarsheld
          type: string
        avglosspct:
          title: avglosspct
          type: string
        avgprofit:
          title: avgprofit
          type: string
        avgprofitavgloss:
          title: avgprofitavgloss
          type: string
        avgprofitbarsheld:
          title: avgprofitbarsheld
          type: string
        avgprofitpct:
          title: avgprofitpct
          type: string
        endcapital:
          title: endcapital
          type: string
        exposure:
          title: exposure
          type: string
        grossloss:
          title: grossloss
          type: string
        grossprofit:
          title: grossprofit
          type: string
        losingtrades:
          title: losingtrades
          type: string
        losingtradespct:
          title: losingtradespct
          type: string
        mar:
          title: mar
          type: string
        margininterest:
          title: margininterest
          type: string
        maxconsecloss:
          title: maxconsecloss
          type: string
        maxconsecwin:
          title: maxconsecwin
          type: string
        maxdrawdown:
          title: maxdrawdown
          type: string
        maxdrawdowndate:
          title: maxdrawdowndate
          type: string
        maxdrawdownlength:
          title: maxdrawdownlength
          type: string
        maxdrawdownpct:
          title: maxdrawdownpct
          type: string
        maxdrawdownpctdate:
          title: maxdrawdownpctdate
          type: string
        mpr:
          title: mpr
          type: string
        netprofit:
          title: netprofit
          type: string
        netprofitpct:
          title: netprofitpct
          type: string
        profitabletrades:
          title: profitabletrades
          type: string
        profitabletradespct:
          title: profitabletradespct
          type: string
        profitfactor:
          title: profitfactor
          type: string
        profitriskratio:
          title: profitriskratio
          type: string
        rar:
          title: rar
          type: string
        recoveryfactor:
          title: recoveryfactor
          type: string
        sharperatio:
          title: sharperatio
          type: string
        sortinoratio:
          title: sortinoratio
          type: string
        startcapital:
          title: startcapital
          type: string
        totalcommission:
          title: totalcommission
          type: string
        totaltrades:
          title: totaltrades
          type: string
        totalvolume:
          title: totalvolume
          type: string
        turnover:
          title: turnover
          type: string
      title: Longshort
      type: object
    Market:
      example:
        code: code
        name: name
        countryid: countryid
        marketid: marketid
      properties:
        code:
          title: code
          type: string
        countryid:
          title: countryid
          type: string
        marketid:
          title: marketid
          type: string
        name:
          title: name
          type: string
      title: Market
      type: object
    NewOrder:
      properties:
        buy:
          title: buy
          type: string
        price:
          title: price
          type: string
        shares:
          title: shares
          type: string
        symbol:
          title: symbol
          type: string
        type:
          title: type
          type: string
      title: NewOrder
      type: object
    NewSignal:
      properties:
        position:
          title: position
          type: string
        price:
          title: price
          type: string
        shares:
          title: shares
          type: string
        size:
          title: size
          type: string
        symbol:
          title: symbol
          type: string
        timestamp:
          format: date-time
          title: timestamp
          type: string
        type:
          title: type
          type: string
      title: NewSignal
      type: object
    NewStrategy:
      properties:
        apr:
          title: apr
          type: string
        author:
          title: author
          type: string
        content:
          title: content
          type: string
        description:
          title: description
          type: string
        drawdown:
          title: drawdown
          type: string
        guid:
          title: guid
          type: string
        limitorder:
          title: limitorder
          type: string
        marketname:
          title: marketname
          type: string
        multiposition:
          title: multiposition
          type: string
        name:
          title: name
          type: string
        positionsize:
          title: positionsize
          type: string
        strategytypeid:
          title: strategytypeid
          type: string
        symbols:
          title: symbols
          type: string
        timeframe:
          title: timeframe
          type: string
      title: NewStrategy
      type: object
    NewTask:
      properties:
        isbenchmark:
          title: isbenchmark
          type: string
        strategyid:
          title: strategyid
          type: string
        tasktypeid:
          title: tasktypeid
          type: string
        userid2:
          title: userid2
          type: string
      title: NewTask
      type: object
    NewUser:
      properties:
        name:
          title: name
          type: string
        password:
          title: password
          type: string
        username:
          title: username
          type: string
      title: NewUser
      type: object
    News:
      example:
        newsid: newsid
        source: source
        body: body
        title: title
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        body:
          title: body
          type: string
        newsid:
          title: newsid
          type: string
        source:
          title: source
          type: string
        timestamp:
          format: date-time
          title: timestamp
          type: string
        title:
          title: title
          type: string
      title: News
      type: object
    Order:
      example:
        shares: shares
        number: number
        symbol: symbol
        orderid: orderid
        price: price
        buy: buy
        statusname: statusname
        message: message
        account: account
        status: status
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        account:
          title: account
          type: string
        buy:
          title: buy
          type: string
        message:
          title: message
          type: string
        number:
          title: number
          type: string
        orderid:
          title: orderid
          type: string
        price:
          title: price
          type: string
        shares:
          title: shares
          type: string
        status:
          title: status
          type: string
        statusname:
          title: statusname
          type: string
        symbol:
          title: symbol
          type: string
        timestamp:
          format: date-time
          title: timestamp
          type: string
      title: Order
      type: object
    Parameter:
      example:
        default: default
        stop: stop
        name: name
        start: start
        step: step
        type: type
      properties:
        default:
          title: default
          type: string
        name:
          title: name
          type: string
        start:
          title: start
          type: string
        step:
          title: step
          type: string
        stop:
          title: stop
          type: string
        type:
          title: type
          type: string
      title: Parameter
      type: object
    Parameters:
      additionalProperties:
        type: string
      title: parameters
      type: object
    Positions:
      additionalProperties:
        type: string
      title: positions
      type: object
    Result:
      example:
        c: 6.027456183070403
        t: 7
        v: 9
        h: 1.4658129805029452
        l: 5.962133916683182
        "n": 5
        o: 2.3021358869347655
      properties:
        c:
          title: c
          type: number
        h:
          title: h
          type: number
        l:
          title: l
          type: number
        "n":
          title: "n"
          type: integer
        o:
          title: o
          type: number
        t:
          title: t
          type: integer
        v:
          title: v
          type: integer
      title: Result
      type: object
    Rule:
      example:
        ruletype: ruletype
        validor: validor
        name: name
        description: description
        guid: guid
        category: category
        parameters:
        - default: default
          stop: stop
          name: name
          start: start
          step: step
          type: type
        - default: default
          stop: stop
          name: name
          start: start
          step: step
          type: type
        validnot: validnot
      properties:
        category:
          title: category
          type: string
        description:
          title: description
          type: string
        guid:
          title: guid
          type: string
        name:
          title: name
          type: string
        parameters:
          items:
            $ref: '#/components/schemas/Parameter'
          title: parameters
          type: array
        ruletype:
          title: ruletype
          type: string
        validnot:
          title: validnot
          type: string
        validor:
          title: validor
          type: string
      title: Rule
      type: object
    Rules:
      example:
        longentry:
        - validor: validor
          name: name
          id: id
          parameters:
          - default: default
            stop: stop
            name: name
            start: start
            step: step
            type: type
          - default: default
            stop: stop
            name: name
            start: start
            step: step
            type: type
          validnot: validnot
        - validor: validor
          name: name
          id: id
          parameters:
          - default: default
            stop: stop
            name: name
            start: start
            step: step
            type: type
          - default: default
            stop: stop
            name: name
            start: start
            step: step
            type: type
          validnot: validnot
        longexit:
        - validor: validor
          name: name
          id: id
          parameters:
          - default: default
            stop: stop
            name: name
            start: start
            step: step
            type: type
          - default: default
            stop: stop
            name: name
            start: start
            step: step
            type: type
          validnot: validnot
        - validor: validor
          name: name
          id: id
          parameters:
          - default: default
            stop: stop
            name: name
            start: start
            step: step
            type: type
          - default: default
            stop: stop
            name: name
            start: start
            step: step
            type: type
          validnot: validnot
      properties:
        longentry:
          items:
            $ref: '#/components/schemas/Longentry'
          title: longentry
          type: array
        longexit:
          items:
            $ref: '#/components/schemas/Longexit'
          title: longexit
          type: array
      title: Rules
      type: object
    Session:
      example:
        mode: mode
        computer: computer
        sessionmodename: sessionmodename
        sessionstatusname: sessionstatusname
        hwid: hwid
        sessionid: sessionid
        login: login
        type: type
        userid: userid
        status: status
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        computer:
          title: computer
          type: string
        hwid:
          title: hwid
          type: string
        login:
          title: login
          type: string
        mode:
          title: mode
          type: string
        sessionid:
          title: sessionid
          type: string
        sessionmodename:
          title: sessionmodename
          type: string
        sessionstatusname:
          title: sessionstatusname
          type: string
        status:
          title: status
          type: string
        timestamp:
          format: date-time
          title: timestamp
          type: string
        type:
          title: type
          type: string
        userid:
          title: userid
          type: string
      title: Session
      type: object
    Signal:
      example:
        shares: shares
        symbol: symbol
        size: size
        price: price
        signalid: signalid
        position: position
        type: type
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        position:
          title: position
          type: string
        price:
          title: price
          type: string
        shares:
          title: shares
          type: string
        signalid:
          title: signalid
          type: string
        size:
          title: size
          type: string
        symbol:
          title: symbol
          type: string
        timestamp:
          format: date-time
          title: timestamp
          type: string
        type:
          title: type
          type: string
      title: Signal
      type: object
    Snapshot:
      example:
        snapshotid: snapshotid
        cash: cash
        value: value
        daynum: daynum
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        cash:
          title: cash
          type: string
        daynum:
          title: daynum
          type: string
        snapshotid:
          title: snapshotid
          type: string
        timestamp:
          format: date-time
          title: timestamp
          type: string
        value:
          title: value
          type: string
      title: Snapshot
      type: object
    StartStrategyData:
      properties:
        accountid:
          title: accountid
          type: string
        strategyid:
          title: strategyid
          type: string
      title: StartStrategyData
      type: object
    Strategy:
      example:
        code: code
        multiposition: multiposition
        taskfolder: taskfolder
        taskresult:
          apr: apr
          curYearProfit: curYearProfit
          totalProfit: totalProfit
          drawdown: drawdown
          monthProfit: monthProfit
          halfYearProfit: halfYearProfit
          weekProfit: weekProfit
          yearProfit: yearProfit
          curMonthProfit: curMonthProfit
          prevMonthProfit: prevMonthProfit
        datascale: datascale
        description: description
        rules:
          longentry:
          - validor: validor
            name: name
            id: id
            parameters:
            - default: default
              stop: stop
              name: name
              start: start
              step: step
              type: type
            - default: default
              stop: stop
              name: name
              start: start
              step: step
              type: type
            validnot: validnot
          - validor: validor
            name: name
            id: id
            parameters:
            - default: default
              stop: stop
              name: name
              start: start
              step: step
              type: type
            - default: default
              stop: stop
              name: name
              start: start
              step: step
              type: type
            validnot: validnot
          longexit:
          - validor: validor
            name: name
            id: id
            parameters:
            - default: default
              stop: stop
              name: name
              start: start
              step: step
              type: type
            - default: default
              stop: stop
              name: name
              start: start
              step: step
              type: type
            validnot: validnot
          - validor: validor
            name: name
            id: id
            parameters:
            - default: default
              stop: stop
              name: name
              start: start
              step: step
              type: type
            - default: default
              stop: stop
              name: name
              start: start
              step: step
              type: type
            validnot: validnot
        risklevelid: risklevelid
        strategytypeid: strategytypeid
        symbols:
        - null
        - null
        timeframe: timeframe
        updatedate: 2000-01-23T04:56:07.000+00:00
        permissions: permissions
        drawdown: drawdown
        risklevelname: risklevelname
        taskid: taskid
        owner: owner
        image: image
        apr: apr
        brokername: brokername
        marketname: marketname
        author: author
        limitorder: limitorder
        url: url
        risklevelcode: risklevelcode
        folder: folder
        name: name
        guid: guid
        strategyid: strategyid
        positionsize: positionsize
      properties:
        apr:
          title: apr
          type: string
        author:
          title: author
          type: string
        brokername:
          title: brokername
          type: string
        code:
          title: code
          type: string
        datascale:
          title: datascale
          type: string
        description:
          title: description
          type: string
        drawdown:
          title: drawdown
          type: string
        folder:
          title: folder
          type: string
        guid:
          title: guid
          type: string
        image:
          title: image
          type: string
        limitorder:
          title: limitorder
          type: string
        marketname:
          title: marketname
          type: string
        multiposition:
          title: multiposition
          type: string
        name:
          title: name
          type: string
        owner:
          title: owner
          type: string
        permissions:
          title: permissions
          type: string
        positionsize:
          title: positionsize
          type: string
        risklevelcode:
          title: risklevelcode
          type: string
        risklevelid:
          title: risklevelid
          type: string
        risklevelname:
          title: risklevelname
          type: string
        rules:
          $ref: '#/components/schemas/Rules'
        strategyid:
          title: strategyid
          type: string
        strategytypeid:
          title: strategytypeid
          type: string
        symbols:
          items:
            $ref: '#/components/schemas/Symbol'
          title: symbols
          type: array
        taskfolder:
          title: taskfolder
          type: string
        taskid:
          title: taskid
          type: string
        taskresult:
          $ref: '#/components/schemas/Taskresult'
        timeframe:
          title: timeframe
          type: string
        updatedate:
          format: date-time
          title: updatedate
          type: string
        url:
          title: url
          type: string
      title: Strategy
      type: object
    StrategyPosition:
      example:
        date: 2000-01-23T04:56:07.000+00:00
        symbol: symbol
        size: size
        price: price
      properties:
        date:
          format: date-time
          title: date
          type: string
        price:
          title: price
          type: string
        size:
          title: size
          type: string
        symbol:
          title: symbol
          type: string
      title: StrategyPosition
      type: object
    Symbol:
      title: Symbol
      type: string
    Task:
      example:
        statusupdatedate: 2000-01-23T04:56:07.000+00:00
        usestaticdata: usestaticdata
        name: name
        strategyid: strategyid
        isbenchmark: isbenchmark
        taskid: taskid
        status: status
      properties:
        isbenchmark:
          title: isbenchmark
          type: string
        name:
          title: name
          type: string
        status:
          title: status
          type: string
        statusupdatedate:
          format: date-time
          title: statusupdatedate
          type: string
        strategyid:
          title: strategyid
          type: string
        taskid:
          title: taskid
          type: string
        usestaticdata:
          title: usestaticdata
          type: string
      title: Task
      type: object
    Taskresult:
      example:
        apr: apr
        curYearProfit: curYearProfit
        totalProfit: totalProfit
        drawdown: drawdown
        monthProfit: monthProfit
        halfYearProfit: halfYearProfit
        weekProfit: weekProfit
        yearProfit: yearProfit
        curMonthProfit: curMonthProfit
        prevMonthProfit: prevMonthProfit
      properties:
        apr:
          title: apr
          type: string
        curMonthProfit:
          title: curMonthProfit
          type: string
        curYearProfit:
          title: curYearProfit
          type: string
        drawdown:
          title: drawdown
          type: string
        halfYearProfit:
          title: halfYearProfit
          type: string
        monthProfit:
          title: monthProfit
          type: string
        prevMonthProfit:
          title: prevMonthProfit
          type: string
        totalProfit:
          title: totalProfit
          type: string
        weekProfit:
          title: weekProfit
          type: string
        yearProfit:
          title: yearProfit
          type: string
      title: Taskresult
      type: object
    Trade:
      example:
        shares: shares
        number: number
        symbol: symbol
        price: price
        buy: buy
        account: account
        tradeid: tradeid
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        account:
          title: account
          type: string
        buy:
          title: buy
          type: string
        number:
          title: number
          type: string
        price:
          title: price
          type: string
        shares:
          title: shares
          type: string
        symbol:
          title: symbol
          type: string
        timestamp:
          format: date-time
          title: timestamp
          type: string
        tradeid:
          title: tradeid
          type: string
      title: Trade
      type: object
    UpdatedConnection:
      properties:
        active:
          title: active
          type: string
        connectorid:
          title: connectorid
          type: string
        host:
          title: host
          type: string
        login:
          title: login
          type: string
        password:
          title: password
          type: string
        port:
          title: port
          type: string
      title: UpdatedConnection
      type: object
    UpdatedStrategy:
      properties:
        author:
          title: author
          type: string
        description:
          title: description
          type: string
        limitorder:
          title: limitorder
          type: string
        marketname:
          title: marketname
          type: string
        multiposition:
          title: multiposition
          type: string
        name:
          title: name
          type: string
        symbols:
          title: symbols
          type: string
      title: UpdatedStrategy
      type: object
    UpdatedStrategyContent:
      properties:
        rules:
          $ref: '#/components/schemas/Rules'
      title: UpdatedStrategyContent
      type: object
    User:
      example:
        comments: comments
        createdby: createdby
        name: name
        regdate: regdate
        userid: userid
        username: username
      properties:
        comments:
          title: comments
          type: string
        createdby:
          title: createdby
          type: string
        name:
          title: name
          type: string
        regdate:
          title: regdate
          type: string
        userid:
          title: userid
          type: string
        username:
          title: username
          type: string
      title: User
      type: object
    _autofollow_strategies_post_request:
      properties:
        strategy:
          $ref: '#/components/schemas/NewStrategy'
      title: _autofollow_strategies_post_request
      type: object
    _autofollow_strategies_post_200_response:
      example:
        strategyid: 0
      properties:
        strategyid:
          title: strategyid
          type: integer
      title: _autofollow_strategies_post_200_response
      type: object
    _autofollow_strategies__strategyid__put_request:
      properties:
        strategy:
          $ref: '#/components/schemas/UpdatedStrategy'
      title: _autofollow_strategies__strategyid__put_request
      type: object
    _autofollow_strategies__strategyid__put_200_response:
      example:
        result: result
      properties:
        result:
          title: result
          type: string
      title: _autofollow_strategies__strategyid__put_200_response
      type: object
    _autofollow_strategies__strategyid__content_put_request:
      properties:
        strategy:
          $ref: '#/components/schemas/UpdatedStrategyContent'
      title: _autofollow_strategies__strategyid__content_put_request
      type: object
    _autofollow_strategies__strategyid__content_put_200_response:
      example:
        strategyid: strategyid
      properties:
        strategyid:
          title: strategyid
          type: string
      title: _autofollow_strategies__strategyid__content_put_200_response
      type: object
    _autofollow_strategies__strategyid__signals_post_request:
      properties:
        signal:
          $ref: '#/components/schemas/NewSignal'
      title: _autofollow_strategies__strategyid__signals_post_request
      type: object
    _autofollow_strategies__strategyid__signals_post_200_response:
      example:
        signalid: signalid
      properties:
        signalid:
          title: signalid
          type: string
      title: _autofollow_strategies__strategyid__signals_post_200_response
      type: object
    _client_apikeys_post_200_response:
      example:
        keyid: 0
        key: key
      properties:
        key:
          title: key
          type: string
        keyid:
          title: keyid
          type: integer
      title: _client_apikeys_post_200_response
      type: object
    _client_apikeys__keyid__delete_200_response:
      example:
        keyid: 0
      properties:
        keyid:
          title: keyid
          type: integer
      title: _client_apikeys__keyid__delete_200_response
      type: object
    _client_users_login_post_200_response:
      example:
        name: name
        userid: 0
      properties:
        name:
          title: name
          type: string
        userid:
          title: userid
          type: integer
      title: _client_users_login_post_200_response
      type: object
    _client_users_register_post_request:
      properties:
        user:
          $ref: '#/components/schemas/NewUser'
      title: _client_users_register_post_request
      type: object
    _client_users_register_post_200_response:
      example:
        userid: 0
      properties:
        userid:
          title: userid
          type: integer
      title: _client_users_register_post_200_response
      type: object
    _cloud_accounts__accountid__closeall_post_202_response:
      example:
        commandid: 0
      properties:
        commandid:
          title: commandid
          type: integer
      title: _cloud_accounts__accountid__closeall_post_202_response
      type: object
    _cloud_accounts__accountid__orders_post_request:
      properties:
        order:
          $ref: '#/components/schemas/NewOrder'
      title: _cloud_accounts__accountid__orders_post_request
      type: object
    _cloud_connections_post_request:
      properties:
        connection:
          $ref: '#/components/schemas/UpdatedConnection'
      title: _cloud_connections_post_request
      type: object
    _cloud_connections_post_200_response:
      example:
        connectionid: 0
      properties:
        connectionid:
          title: connectionid
          type: integer
      title: _cloud_connections_post_200_response
      type: object
    _cloud_strategies_start_post_request:
      properties:
        data:
          $ref: '#/components/schemas/StartStrategyData'
      title: _cloud_strategies_start_post_request
      type: object
    _marketdata_symbols__symbolid__histdata_get_200_response:
      example:
        ticker: ticker
        adjusted: true
        resultsCount: 3
        queryCount: 0
        results:
        - c: 6.027456183070403
          t: 7
          v: 9
          h: 1.4658129805029452
          l: 5.962133916683182
          "n": 5
          o: 2.3021358869347655
        - c: 6.027456183070403
          t: 7
          v: 9
          h: 1.4658129805029452
          l: 5.962133916683182
          "n": 5
          o: 2.3021358869347655
        status: status
      properties:
        adjusted:
          title: adjusted
          type: boolean
        queryCount:
          title: queryCount
          type: integer
        results:
          items:
            $ref: '#/components/schemas/Result'
          title: results
          type: array
        resultsCount:
          title: resultsCount
          type: integer
        status:
          title: status
          type: string
        ticker:
          title: ticker
          type: string
      title: _marketdata_symbols__symbolid__histdata_get_200_response
      type: object
    _taskmanager_tasks_post_request:
      properties:
        task:
          $ref: '#/components/schemas/NewTask'
      title: _taskmanager_tasks_post_request
      type: object
    _taskmanager_tasks_post_202_response:
      example:
        taskid: taskid
      properties:
        taskid:
          title: taskid
          type: string
      title: _taskmanager_tasks_post_202_response
      type: object
    _taskmanager_tasks__taskid__folder_get_200_response:
      example:
        folder: folder
      properties:
        folder:
          title: folder
          type: string
      title: _taskmanager_tasks__taskid__folder_get_200_response
      type: object
    _taskmanager_tasks__taskid__performance_get_200_response:
      example:
        buyandhold:
          avgbarsheld: avgbarsheld
          avglossbarsheld: avglossbarsheld
          maxdrawdownpct: maxdrawdownpct
          avglosspct: avglosspct
          grossloss: grossloss
          maxdrawdownpctdate: maxdrawdownpctdate
          avgloss: avgloss
          totaltrades: totaltrades
          totalvolume: totalvolume
          profitabletrades: profitabletrades
          netprofit: netprofit
          avgprofitbarsheld: avgprofitbarsheld
          maxdrawdown: maxdrawdown
          netprofitpct: netprofitpct
          avgprofitavgloss: avgprofitavgloss
          losingtrades: losingtrades
          losingtradespct: losingtradespct
          avgprofitpct: avgprofitpct
          grossprofit: grossprofit
          maxconsecloss: maxconsecloss
          profitabletradespct: profitabletradespct
          totalcommission: totalcommission
          turnover: turnover
          mar: mar
          maxdrawdownlength: maxdrawdownlength
          apr: apr
          margininterest: margininterest
          profitriskratio: profitriskratio
          rar: rar
          avgprofit: avgprofit
          startcapital: startcapital
          sortinoratio: sortinoratio
          endcapital: endcapital
          mpr: mpr
          maxdrawdowndate: maxdrawdowndate
          maxconsecwin: maxconsecwin
          recoveryfactor: recoveryfactor
          exposure: exposure
          profitfactor: profitfactor
          sharperatio: sharperatio
        longshort:
          avgbarsheld: avgbarsheld
          avglossbarsheld: avglossbarsheld
          maxdrawdownpct: maxdrawdownpct
          avglosspct: avglosspct
          grossloss: grossloss
          maxdrawdownpctdate: maxdrawdownpctdate
          avgloss: avgloss
          totaltrades: totaltrades
          totalvolume: totalvolume
          profitabletrades: profitabletrades
          netprofit: netprofit
          avgprofitbarsheld: avgprofitbarsheld
          maxdrawdown: maxdrawdown
          netprofitpct: netprofitpct
          avgprofitavgloss: avgprofitavgloss
          losingtrades: losingtrades
          losingtradespct: losingtradespct
          avgprofitpct: avgprofitpct
          grossprofit: grossprofit
          maxconsecloss: maxconsecloss
          profitabletradespct: profitabletradespct
          totalcommission: totalcommission
          turnover: turnover
          mar: mar
          maxdrawdownlength: maxdrawdownlength
          apr: apr
          margininterest: margininterest
          profitriskratio: profitriskratio
          rar: rar
          avgprofit: avgprofit
          startcapital: startcapital
          sortinoratio: sortinoratio
          endcapital: endcapital
          mpr: mpr
          maxdrawdowndate: maxdrawdowndate
          maxconsecwin: maxconsecwin
          recoveryfactor: recoveryfactor
          exposure: exposure
          profitfactor: profitfactor
          sharperatio: sharperatio
        short:
          avgbarsheld: avgbarsheld
          avglossbarsheld: avglossbarsheld
          maxdrawdownpct: maxdrawdownpct
          avglosspct: avglosspct
          grossloss: grossloss
          maxdrawdownpctdate: maxdrawdownpctdate
          avgloss: avgloss
          totaltrades: totaltrades
          totalvolume: totalvolume
          profitabletrades: profitabletrades
          netprofit: netprofit
          avgprofitbarsheld: avgprofitbarsheld
          maxdrawdown: maxdrawdown
          netprofitpct: netprofitpct
          avgprofitavgloss: avgprofitavgloss
          losingtrades: losingtrades
          losingtradespct: losingtradespct
          avgprofitpct: avgprofitpct
          grossprofit: grossprofit
          maxconsecloss: maxconsecloss
          profitabletradespct: profitabletradespct
          totalcommission: totalcommission
          turnover: turnover
          mar: mar
          maxdrawdownlength: maxdrawdownlength
          apr: apr
          margininterest: margininterest
          profitriskratio: profitriskratio
          rar: rar
          avgprofit: avgprofit
          startcapital: startcapital
          sortinoratio: sortinoratio
          endcapital: endcapital
          mpr: mpr
          maxdrawdowndate: maxdrawdowndate
          maxconsecwin: maxconsecwin
          recoveryfactor: recoveryfactor
          exposure: exposure
          profitfactor: profitfactor
          sharperatio: sharperatio
        long:
          avgbarsheld: avgbarsheld
          avglossbarsheld: avglossbarsheld
          maxdrawdownpct: maxdrawdownpct
          avglosspct: avglosspct
          grossloss: grossloss
          maxdrawdownpctdate: maxdrawdownpctdate
          avgloss: avgloss
          totaltrades: totaltrades
          totalvolume: totalvolume
          profitabletrades: profitabletrades
          netprofit: netprofit
          avgprofitbarsheld: avgprofitbarsheld
          maxdrawdown: maxdrawdown
          netprofitpct: netprofitpct
          avgprofitavgloss: avgprofitavgloss
          losingtrades: losingtrades
          losingtradespct: losingtradespct
          avgprofitpct: avgprofitpct
          grossprofit: grossprofit
          maxconsecloss: maxconsecloss
          profitabletradespct: profitabletradespct
          totalcommission: totalcommission
          turnover: turnover
          mar: mar
          maxdrawdownlength: maxdrawdownlength
          apr: apr
          margininterest: margininterest
          profitriskratio: profitriskratio
          rar: rar
          avgprofit: avgprofit
          startcapital: startcapital
          sortinoratio: sortinoratio
          endcapital: endcapital
          mpr: mpr
          maxdrawdowndate: maxdrawdowndate
          maxconsecwin: maxconsecwin
          recoveryfactor: recoveryfactor
          exposure: exposure
          profitfactor: profitfactor
          sharperatio: sharperatio
      properties:
        buyandhold:
          $ref: '#/components/schemas/Longshort'
        long:
          $ref: '#/components/schemas/Longshort'
        longshort:
          $ref: '#/components/schemas/Longshort'
        short:
          $ref: '#/components/schemas/Longshort'
      title: _taskmanager_tasks__taskid__performance_get_200_response
      type: object
    _taskmanager_tasks__taskid__result_get_200_response:
      example:
        equity_png: equity_png
        equity_csv: equity_csv
        equitypctnofill_csv: equitypctnofill_csv
        drawdown_png: drawdown_png
        contribution_png: contribution_png
        trades_png: trades_png
        contribution_csv: contribution_csv
        bymonths_csv: bymonths_csv
        equitypct_csv: equitypct_csv
        trades_csv: trades_csv
        bymonths_png: bymonths_png
        equitypct_png: equitypct_png
        equitypctnofill_png: equitypctnofill_png
        equitypctsm_png: equitypctsm_png
        byquarters_png: byquarters_png
        byyears_png: byyears_png
        equitypctsm_csv: equitypctsm_csv
        performance_png: performance_png
        drawdown_csv: drawdown_csv
        equitypctsm: equitypctsm
        performance_csv: performance_csv
        byquarters_csv: byquarters_csv
        byyears_csv: byyears_csv
      properties:
        bymonths_csv:
          title: bymonths_csv
          type: string
        bymonths_png:
          title: bymonths_png
          type: string
        byquarters_csv:
          title: byquarters_csv
          type: string
        byquarters_png:
          title: byquarters_png
          type: string
        byyears_csv:
          title: byyears_csv
          type: string
        byyears_png:
          title: byyears_png
          type: string
        contribution_csv:
          title: contribution_csv
          type: string
        contribution_png:
          title: contribution_png
          type: string
        drawdown_csv:
          title: drawdown_csv
          type: string
        drawdown_png:
          title: drawdown_png
          type: string
        equity_csv:
          title: equity_csv
          type: string
        equity_png:
          title: equity_png
          type: string
        equitypct_csv:
          title: equitypct_csv
          type: string
        equitypct_png:
          title: equitypct_png
          type: string
        equitypctnofill_csv:
          title: equitypctnofill_csv
          type: string
        equitypctnofill_png:
          title: equitypctnofill_png
          type: string
        equitypctsm:
          title: equitypctsm
          type: string
        equitypctsm_csv:
          title: equitypctsm_csv
          type: string
        equitypctsm_png:
          title: equitypctsm_png
          type: string
        performance_csv:
          title: performance_csv
          type: string
        performance_png:
          title: performance_png
          type: string
        trades_csv:
          title: trades_csv
          type: string
        trades_png:
          title: trades_png
          type: string
      title: _taskmanager_tasks__taskid__result_get_200_response
      type: object
    _taskmanager_tasks__taskid__result2_get_200_response:
      example:
        apr: apr
        curYearProfit: curYearProfit
        totalProfit: totalProfit
        drawdown: drawdown
        monthProfit: monthProfit
        halfYearProfit: halfYearProfit
        weekProfit: weekProfit
        yearProfit: yearProfit
        curMonthProfit: curMonthProfit
        prevMonthProfit: prevMonthProfit
      properties:
        apr:
          title: apr
          type: string
        curMonthProfit:
          title: curMonthProfit
          type: string
        curYearProfit:
          title: curYearProfit
          type: string
        drawdown:
          title: drawdown
          type: string
        halfYearProfit:
          title: halfYearProfit
          type: string
        monthProfit:
          title: monthProfit
          type: string
        prevMonthProfit:
          title: prevMonthProfit
          type: string
        totalProfit:
          title: totalProfit
          type: string
        weekProfit:
          title: weekProfit
          type: string
        yearProfit:
          title: yearProfit
          type: string
      title: _taskmanager_tasks__taskid__result2_get_200_response
      type: object
    _taskmanager_tasks__taskid__status_get_200_response:
      example:
        status: status
      properties:
        status:
          title: status
          type: string
      title: _taskmanager_tasks__taskid__status_get_200_response
      type: object
    _time_get_200_response:
      example:
        servertime: 0
      properties:
        servertime:
          title: servertime
          type: integer
      title: _time_get_200_response
      type: object
  securitySchemes:
    Secured:
      in: header
      name: X-API-Key
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_Secured
x-original-swagger-version: "2.0"
