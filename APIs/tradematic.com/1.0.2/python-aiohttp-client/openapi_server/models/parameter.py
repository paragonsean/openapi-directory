# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Parameter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default: str=None, name: str=None, start: str=None, step: str=None, stop: str=None, type: str=None):
        """Parameter - a model defined in OpenAPI

        :param default: The default of this Parameter.
        :param name: The name of this Parameter.
        :param start: The start of this Parameter.
        :param step: The step of this Parameter.
        :param stop: The stop of this Parameter.
        :param type: The type of this Parameter.
        """
        self.openapi_types = {
            'default': str,
            'name': str,
            'start': str,
            'step': str,
            'stop': str,
            'type': str
        }

        self.attribute_map = {
            'default': 'default',
            'name': 'name',
            'start': 'start',
            'step': 'step',
            'stop': 'stop',
            'type': 'type'
        }

        self._default = default
        self._name = name
        self._start = start
        self._step = step
        self._stop = stop
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Parameter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Parameter of this Parameter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default(self):
        """Gets the default of this Parameter.


        :return: The default of this Parameter.
        :rtype: str
        """
        return self._default

    @default.setter
    def default(self, default):
        """Sets the default of this Parameter.


        :param default: The default of this Parameter.
        :type default: str
        """

        self._default = default

    @property
    def name(self):
        """Gets the name of this Parameter.


        :return: The name of this Parameter.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Parameter.


        :param name: The name of this Parameter.
        :type name: str
        """

        self._name = name

    @property
    def start(self):
        """Gets the start of this Parameter.


        :return: The start of this Parameter.
        :rtype: str
        """
        return self._start

    @start.setter
    def start(self, start):
        """Sets the start of this Parameter.


        :param start: The start of this Parameter.
        :type start: str
        """

        self._start = start

    @property
    def step(self):
        """Gets the step of this Parameter.


        :return: The step of this Parameter.
        :rtype: str
        """
        return self._step

    @step.setter
    def step(self, step):
        """Sets the step of this Parameter.


        :param step: The step of this Parameter.
        :type step: str
        """

        self._step = step

    @property
    def stop(self):
        """Gets the stop of this Parameter.


        :return: The stop of this Parameter.
        :rtype: str
        """
        return self._stop

    @stop.setter
    def stop(self, stop):
        """Sets the stop of this Parameter.


        :param stop: The stop of this Parameter.
        :type stop: str
        """

        self._stop = stop

    @property
    def type(self):
        """Gets the type of this Parameter.


        :return: The type of this Parameter.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Parameter.


        :param type: The type of this Parameter.
        :type type: str
        """

        self._type = type
