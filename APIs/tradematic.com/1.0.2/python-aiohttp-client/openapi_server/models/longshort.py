# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Longshort(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, apr: str=None, avgbarsheld: str=None, avgloss: str=None, avglossbarsheld: str=None, avglosspct: str=None, avgprofit: str=None, avgprofitavgloss: str=None, avgprofitbarsheld: str=None, avgprofitpct: str=None, endcapital: str=None, exposure: str=None, grossloss: str=None, grossprofit: str=None, losingtrades: str=None, losingtradespct: str=None, mar: str=None, margininterest: str=None, maxconsecloss: str=None, maxconsecwin: str=None, maxdrawdown: str=None, maxdrawdowndate: str=None, maxdrawdownlength: str=None, maxdrawdownpct: str=None, maxdrawdownpctdate: str=None, mpr: str=None, netprofit: str=None, netprofitpct: str=None, profitabletrades: str=None, profitabletradespct: str=None, profitfactor: str=None, profitriskratio: str=None, rar: str=None, recoveryfactor: str=None, sharperatio: str=None, sortinoratio: str=None, startcapital: str=None, totalcommission: str=None, totaltrades: str=None, totalvolume: str=None, turnover: str=None):
        """Longshort - a model defined in OpenAPI

        :param apr: The apr of this Longshort.
        :param avgbarsheld: The avgbarsheld of this Longshort.
        :param avgloss: The avgloss of this Longshort.
        :param avglossbarsheld: The avglossbarsheld of this Longshort.
        :param avglosspct: The avglosspct of this Longshort.
        :param avgprofit: The avgprofit of this Longshort.
        :param avgprofitavgloss: The avgprofitavgloss of this Longshort.
        :param avgprofitbarsheld: The avgprofitbarsheld of this Longshort.
        :param avgprofitpct: The avgprofitpct of this Longshort.
        :param endcapital: The endcapital of this Longshort.
        :param exposure: The exposure of this Longshort.
        :param grossloss: The grossloss of this Longshort.
        :param grossprofit: The grossprofit of this Longshort.
        :param losingtrades: The losingtrades of this Longshort.
        :param losingtradespct: The losingtradespct of this Longshort.
        :param mar: The mar of this Longshort.
        :param margininterest: The margininterest of this Longshort.
        :param maxconsecloss: The maxconsecloss of this Longshort.
        :param maxconsecwin: The maxconsecwin of this Longshort.
        :param maxdrawdown: The maxdrawdown of this Longshort.
        :param maxdrawdowndate: The maxdrawdowndate of this Longshort.
        :param maxdrawdownlength: The maxdrawdownlength of this Longshort.
        :param maxdrawdownpct: The maxdrawdownpct of this Longshort.
        :param maxdrawdownpctdate: The maxdrawdownpctdate of this Longshort.
        :param mpr: The mpr of this Longshort.
        :param netprofit: The netprofit of this Longshort.
        :param netprofitpct: The netprofitpct of this Longshort.
        :param profitabletrades: The profitabletrades of this Longshort.
        :param profitabletradespct: The profitabletradespct of this Longshort.
        :param profitfactor: The profitfactor of this Longshort.
        :param profitriskratio: The profitriskratio of this Longshort.
        :param rar: The rar of this Longshort.
        :param recoveryfactor: The recoveryfactor of this Longshort.
        :param sharperatio: The sharperatio of this Longshort.
        :param sortinoratio: The sortinoratio of this Longshort.
        :param startcapital: The startcapital of this Longshort.
        :param totalcommission: The totalcommission of this Longshort.
        :param totaltrades: The totaltrades of this Longshort.
        :param totalvolume: The totalvolume of this Longshort.
        :param turnover: The turnover of this Longshort.
        """
        self.openapi_types = {
            'apr': str,
            'avgbarsheld': str,
            'avgloss': str,
            'avglossbarsheld': str,
            'avglosspct': str,
            'avgprofit': str,
            'avgprofitavgloss': str,
            'avgprofitbarsheld': str,
            'avgprofitpct': str,
            'endcapital': str,
            'exposure': str,
            'grossloss': str,
            'grossprofit': str,
            'losingtrades': str,
            'losingtradespct': str,
            'mar': str,
            'margininterest': str,
            'maxconsecloss': str,
            'maxconsecwin': str,
            'maxdrawdown': str,
            'maxdrawdowndate': str,
            'maxdrawdownlength': str,
            'maxdrawdownpct': str,
            'maxdrawdownpctdate': str,
            'mpr': str,
            'netprofit': str,
            'netprofitpct': str,
            'profitabletrades': str,
            'profitabletradespct': str,
            'profitfactor': str,
            'profitriskratio': str,
            'rar': str,
            'recoveryfactor': str,
            'sharperatio': str,
            'sortinoratio': str,
            'startcapital': str,
            'totalcommission': str,
            'totaltrades': str,
            'totalvolume': str,
            'turnover': str
        }

        self.attribute_map = {
            'apr': 'apr',
            'avgbarsheld': 'avgbarsheld',
            'avgloss': 'avgloss',
            'avglossbarsheld': 'avglossbarsheld',
            'avglosspct': 'avglosspct',
            'avgprofit': 'avgprofit',
            'avgprofitavgloss': 'avgprofitavgloss',
            'avgprofitbarsheld': 'avgprofitbarsheld',
            'avgprofitpct': 'avgprofitpct',
            'endcapital': 'endcapital',
            'exposure': 'exposure',
            'grossloss': 'grossloss',
            'grossprofit': 'grossprofit',
            'losingtrades': 'losingtrades',
            'losingtradespct': 'losingtradespct',
            'mar': 'mar',
            'margininterest': 'margininterest',
            'maxconsecloss': 'maxconsecloss',
            'maxconsecwin': 'maxconsecwin',
            'maxdrawdown': 'maxdrawdown',
            'maxdrawdowndate': 'maxdrawdowndate',
            'maxdrawdownlength': 'maxdrawdownlength',
            'maxdrawdownpct': 'maxdrawdownpct',
            'maxdrawdownpctdate': 'maxdrawdownpctdate',
            'mpr': 'mpr',
            'netprofit': 'netprofit',
            'netprofitpct': 'netprofitpct',
            'profitabletrades': 'profitabletrades',
            'profitabletradespct': 'profitabletradespct',
            'profitfactor': 'profitfactor',
            'profitriskratio': 'profitriskratio',
            'rar': 'rar',
            'recoveryfactor': 'recoveryfactor',
            'sharperatio': 'sharperatio',
            'sortinoratio': 'sortinoratio',
            'startcapital': 'startcapital',
            'totalcommission': 'totalcommission',
            'totaltrades': 'totaltrades',
            'totalvolume': 'totalvolume',
            'turnover': 'turnover'
        }

        self._apr = apr
        self._avgbarsheld = avgbarsheld
        self._avgloss = avgloss
        self._avglossbarsheld = avglossbarsheld
        self._avglosspct = avglosspct
        self._avgprofit = avgprofit
        self._avgprofitavgloss = avgprofitavgloss
        self._avgprofitbarsheld = avgprofitbarsheld
        self._avgprofitpct = avgprofitpct
        self._endcapital = endcapital
        self._exposure = exposure
        self._grossloss = grossloss
        self._grossprofit = grossprofit
        self._losingtrades = losingtrades
        self._losingtradespct = losingtradespct
        self._mar = mar
        self._margininterest = margininterest
        self._maxconsecloss = maxconsecloss
        self._maxconsecwin = maxconsecwin
        self._maxdrawdown = maxdrawdown
        self._maxdrawdowndate = maxdrawdowndate
        self._maxdrawdownlength = maxdrawdownlength
        self._maxdrawdownpct = maxdrawdownpct
        self._maxdrawdownpctdate = maxdrawdownpctdate
        self._mpr = mpr
        self._netprofit = netprofit
        self._netprofitpct = netprofitpct
        self._profitabletrades = profitabletrades
        self._profitabletradespct = profitabletradespct
        self._profitfactor = profitfactor
        self._profitriskratio = profitriskratio
        self._rar = rar
        self._recoveryfactor = recoveryfactor
        self._sharperatio = sharperatio
        self._sortinoratio = sortinoratio
        self._startcapital = startcapital
        self._totalcommission = totalcommission
        self._totaltrades = totaltrades
        self._totalvolume = totalvolume
        self._turnover = turnover

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Longshort':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Longshort of this Longshort.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def apr(self):
        """Gets the apr of this Longshort.


        :return: The apr of this Longshort.
        :rtype: str
        """
        return self._apr

    @apr.setter
    def apr(self, apr):
        """Sets the apr of this Longshort.


        :param apr: The apr of this Longshort.
        :type apr: str
        """

        self._apr = apr

    @property
    def avgbarsheld(self):
        """Gets the avgbarsheld of this Longshort.


        :return: The avgbarsheld of this Longshort.
        :rtype: str
        """
        return self._avgbarsheld

    @avgbarsheld.setter
    def avgbarsheld(self, avgbarsheld):
        """Sets the avgbarsheld of this Longshort.


        :param avgbarsheld: The avgbarsheld of this Longshort.
        :type avgbarsheld: str
        """

        self._avgbarsheld = avgbarsheld

    @property
    def avgloss(self):
        """Gets the avgloss of this Longshort.


        :return: The avgloss of this Longshort.
        :rtype: str
        """
        return self._avgloss

    @avgloss.setter
    def avgloss(self, avgloss):
        """Sets the avgloss of this Longshort.


        :param avgloss: The avgloss of this Longshort.
        :type avgloss: str
        """

        self._avgloss = avgloss

    @property
    def avglossbarsheld(self):
        """Gets the avglossbarsheld of this Longshort.


        :return: The avglossbarsheld of this Longshort.
        :rtype: str
        """
        return self._avglossbarsheld

    @avglossbarsheld.setter
    def avglossbarsheld(self, avglossbarsheld):
        """Sets the avglossbarsheld of this Longshort.


        :param avglossbarsheld: The avglossbarsheld of this Longshort.
        :type avglossbarsheld: str
        """

        self._avglossbarsheld = avglossbarsheld

    @property
    def avglosspct(self):
        """Gets the avglosspct of this Longshort.


        :return: The avglosspct of this Longshort.
        :rtype: str
        """
        return self._avglosspct

    @avglosspct.setter
    def avglosspct(self, avglosspct):
        """Sets the avglosspct of this Longshort.


        :param avglosspct: The avglosspct of this Longshort.
        :type avglosspct: str
        """

        self._avglosspct = avglosspct

    @property
    def avgprofit(self):
        """Gets the avgprofit of this Longshort.


        :return: The avgprofit of this Longshort.
        :rtype: str
        """
        return self._avgprofit

    @avgprofit.setter
    def avgprofit(self, avgprofit):
        """Sets the avgprofit of this Longshort.


        :param avgprofit: The avgprofit of this Longshort.
        :type avgprofit: str
        """

        self._avgprofit = avgprofit

    @property
    def avgprofitavgloss(self):
        """Gets the avgprofitavgloss of this Longshort.


        :return: The avgprofitavgloss of this Longshort.
        :rtype: str
        """
        return self._avgprofitavgloss

    @avgprofitavgloss.setter
    def avgprofitavgloss(self, avgprofitavgloss):
        """Sets the avgprofitavgloss of this Longshort.


        :param avgprofitavgloss: The avgprofitavgloss of this Longshort.
        :type avgprofitavgloss: str
        """

        self._avgprofitavgloss = avgprofitavgloss

    @property
    def avgprofitbarsheld(self):
        """Gets the avgprofitbarsheld of this Longshort.


        :return: The avgprofitbarsheld of this Longshort.
        :rtype: str
        """
        return self._avgprofitbarsheld

    @avgprofitbarsheld.setter
    def avgprofitbarsheld(self, avgprofitbarsheld):
        """Sets the avgprofitbarsheld of this Longshort.


        :param avgprofitbarsheld: The avgprofitbarsheld of this Longshort.
        :type avgprofitbarsheld: str
        """

        self._avgprofitbarsheld = avgprofitbarsheld

    @property
    def avgprofitpct(self):
        """Gets the avgprofitpct of this Longshort.


        :return: The avgprofitpct of this Longshort.
        :rtype: str
        """
        return self._avgprofitpct

    @avgprofitpct.setter
    def avgprofitpct(self, avgprofitpct):
        """Sets the avgprofitpct of this Longshort.


        :param avgprofitpct: The avgprofitpct of this Longshort.
        :type avgprofitpct: str
        """

        self._avgprofitpct = avgprofitpct

    @property
    def endcapital(self):
        """Gets the endcapital of this Longshort.


        :return: The endcapital of this Longshort.
        :rtype: str
        """
        return self._endcapital

    @endcapital.setter
    def endcapital(self, endcapital):
        """Sets the endcapital of this Longshort.


        :param endcapital: The endcapital of this Longshort.
        :type endcapital: str
        """

        self._endcapital = endcapital

    @property
    def exposure(self):
        """Gets the exposure of this Longshort.


        :return: The exposure of this Longshort.
        :rtype: str
        """
        return self._exposure

    @exposure.setter
    def exposure(self, exposure):
        """Sets the exposure of this Longshort.


        :param exposure: The exposure of this Longshort.
        :type exposure: str
        """

        self._exposure = exposure

    @property
    def grossloss(self):
        """Gets the grossloss of this Longshort.


        :return: The grossloss of this Longshort.
        :rtype: str
        """
        return self._grossloss

    @grossloss.setter
    def grossloss(self, grossloss):
        """Sets the grossloss of this Longshort.


        :param grossloss: The grossloss of this Longshort.
        :type grossloss: str
        """

        self._grossloss = grossloss

    @property
    def grossprofit(self):
        """Gets the grossprofit of this Longshort.


        :return: The grossprofit of this Longshort.
        :rtype: str
        """
        return self._grossprofit

    @grossprofit.setter
    def grossprofit(self, grossprofit):
        """Sets the grossprofit of this Longshort.


        :param grossprofit: The grossprofit of this Longshort.
        :type grossprofit: str
        """

        self._grossprofit = grossprofit

    @property
    def losingtrades(self):
        """Gets the losingtrades of this Longshort.


        :return: The losingtrades of this Longshort.
        :rtype: str
        """
        return self._losingtrades

    @losingtrades.setter
    def losingtrades(self, losingtrades):
        """Sets the losingtrades of this Longshort.


        :param losingtrades: The losingtrades of this Longshort.
        :type losingtrades: str
        """

        self._losingtrades = losingtrades

    @property
    def losingtradespct(self):
        """Gets the losingtradespct of this Longshort.


        :return: The losingtradespct of this Longshort.
        :rtype: str
        """
        return self._losingtradespct

    @losingtradespct.setter
    def losingtradespct(self, losingtradespct):
        """Sets the losingtradespct of this Longshort.


        :param losingtradespct: The losingtradespct of this Longshort.
        :type losingtradespct: str
        """

        self._losingtradespct = losingtradespct

    @property
    def mar(self):
        """Gets the mar of this Longshort.


        :return: The mar of this Longshort.
        :rtype: str
        """
        return self._mar

    @mar.setter
    def mar(self, mar):
        """Sets the mar of this Longshort.


        :param mar: The mar of this Longshort.
        :type mar: str
        """

        self._mar = mar

    @property
    def margininterest(self):
        """Gets the margininterest of this Longshort.


        :return: The margininterest of this Longshort.
        :rtype: str
        """
        return self._margininterest

    @margininterest.setter
    def margininterest(self, margininterest):
        """Sets the margininterest of this Longshort.


        :param margininterest: The margininterest of this Longshort.
        :type margininterest: str
        """

        self._margininterest = margininterest

    @property
    def maxconsecloss(self):
        """Gets the maxconsecloss of this Longshort.


        :return: The maxconsecloss of this Longshort.
        :rtype: str
        """
        return self._maxconsecloss

    @maxconsecloss.setter
    def maxconsecloss(self, maxconsecloss):
        """Sets the maxconsecloss of this Longshort.


        :param maxconsecloss: The maxconsecloss of this Longshort.
        :type maxconsecloss: str
        """

        self._maxconsecloss = maxconsecloss

    @property
    def maxconsecwin(self):
        """Gets the maxconsecwin of this Longshort.


        :return: The maxconsecwin of this Longshort.
        :rtype: str
        """
        return self._maxconsecwin

    @maxconsecwin.setter
    def maxconsecwin(self, maxconsecwin):
        """Sets the maxconsecwin of this Longshort.


        :param maxconsecwin: The maxconsecwin of this Longshort.
        :type maxconsecwin: str
        """

        self._maxconsecwin = maxconsecwin

    @property
    def maxdrawdown(self):
        """Gets the maxdrawdown of this Longshort.


        :return: The maxdrawdown of this Longshort.
        :rtype: str
        """
        return self._maxdrawdown

    @maxdrawdown.setter
    def maxdrawdown(self, maxdrawdown):
        """Sets the maxdrawdown of this Longshort.


        :param maxdrawdown: The maxdrawdown of this Longshort.
        :type maxdrawdown: str
        """

        self._maxdrawdown = maxdrawdown

    @property
    def maxdrawdowndate(self):
        """Gets the maxdrawdowndate of this Longshort.


        :return: The maxdrawdowndate of this Longshort.
        :rtype: str
        """
        return self._maxdrawdowndate

    @maxdrawdowndate.setter
    def maxdrawdowndate(self, maxdrawdowndate):
        """Sets the maxdrawdowndate of this Longshort.


        :param maxdrawdowndate: The maxdrawdowndate of this Longshort.
        :type maxdrawdowndate: str
        """

        self._maxdrawdowndate = maxdrawdowndate

    @property
    def maxdrawdownlength(self):
        """Gets the maxdrawdownlength of this Longshort.


        :return: The maxdrawdownlength of this Longshort.
        :rtype: str
        """
        return self._maxdrawdownlength

    @maxdrawdownlength.setter
    def maxdrawdownlength(self, maxdrawdownlength):
        """Sets the maxdrawdownlength of this Longshort.


        :param maxdrawdownlength: The maxdrawdownlength of this Longshort.
        :type maxdrawdownlength: str
        """

        self._maxdrawdownlength = maxdrawdownlength

    @property
    def maxdrawdownpct(self):
        """Gets the maxdrawdownpct of this Longshort.


        :return: The maxdrawdownpct of this Longshort.
        :rtype: str
        """
        return self._maxdrawdownpct

    @maxdrawdownpct.setter
    def maxdrawdownpct(self, maxdrawdownpct):
        """Sets the maxdrawdownpct of this Longshort.


        :param maxdrawdownpct: The maxdrawdownpct of this Longshort.
        :type maxdrawdownpct: str
        """

        self._maxdrawdownpct = maxdrawdownpct

    @property
    def maxdrawdownpctdate(self):
        """Gets the maxdrawdownpctdate of this Longshort.


        :return: The maxdrawdownpctdate of this Longshort.
        :rtype: str
        """
        return self._maxdrawdownpctdate

    @maxdrawdownpctdate.setter
    def maxdrawdownpctdate(self, maxdrawdownpctdate):
        """Sets the maxdrawdownpctdate of this Longshort.


        :param maxdrawdownpctdate: The maxdrawdownpctdate of this Longshort.
        :type maxdrawdownpctdate: str
        """

        self._maxdrawdownpctdate = maxdrawdownpctdate

    @property
    def mpr(self):
        """Gets the mpr of this Longshort.


        :return: The mpr of this Longshort.
        :rtype: str
        """
        return self._mpr

    @mpr.setter
    def mpr(self, mpr):
        """Sets the mpr of this Longshort.


        :param mpr: The mpr of this Longshort.
        :type mpr: str
        """

        self._mpr = mpr

    @property
    def netprofit(self):
        """Gets the netprofit of this Longshort.


        :return: The netprofit of this Longshort.
        :rtype: str
        """
        return self._netprofit

    @netprofit.setter
    def netprofit(self, netprofit):
        """Sets the netprofit of this Longshort.


        :param netprofit: The netprofit of this Longshort.
        :type netprofit: str
        """

        self._netprofit = netprofit

    @property
    def netprofitpct(self):
        """Gets the netprofitpct of this Longshort.


        :return: The netprofitpct of this Longshort.
        :rtype: str
        """
        return self._netprofitpct

    @netprofitpct.setter
    def netprofitpct(self, netprofitpct):
        """Sets the netprofitpct of this Longshort.


        :param netprofitpct: The netprofitpct of this Longshort.
        :type netprofitpct: str
        """

        self._netprofitpct = netprofitpct

    @property
    def profitabletrades(self):
        """Gets the profitabletrades of this Longshort.


        :return: The profitabletrades of this Longshort.
        :rtype: str
        """
        return self._profitabletrades

    @profitabletrades.setter
    def profitabletrades(self, profitabletrades):
        """Sets the profitabletrades of this Longshort.


        :param profitabletrades: The profitabletrades of this Longshort.
        :type profitabletrades: str
        """

        self._profitabletrades = profitabletrades

    @property
    def profitabletradespct(self):
        """Gets the profitabletradespct of this Longshort.


        :return: The profitabletradespct of this Longshort.
        :rtype: str
        """
        return self._profitabletradespct

    @profitabletradespct.setter
    def profitabletradespct(self, profitabletradespct):
        """Sets the profitabletradespct of this Longshort.


        :param profitabletradespct: The profitabletradespct of this Longshort.
        :type profitabletradespct: str
        """

        self._profitabletradespct = profitabletradespct

    @property
    def profitfactor(self):
        """Gets the profitfactor of this Longshort.


        :return: The profitfactor of this Longshort.
        :rtype: str
        """
        return self._profitfactor

    @profitfactor.setter
    def profitfactor(self, profitfactor):
        """Sets the profitfactor of this Longshort.


        :param profitfactor: The profitfactor of this Longshort.
        :type profitfactor: str
        """

        self._profitfactor = profitfactor

    @property
    def profitriskratio(self):
        """Gets the profitriskratio of this Longshort.


        :return: The profitriskratio of this Longshort.
        :rtype: str
        """
        return self._profitriskratio

    @profitriskratio.setter
    def profitriskratio(self, profitriskratio):
        """Sets the profitriskratio of this Longshort.


        :param profitriskratio: The profitriskratio of this Longshort.
        :type profitriskratio: str
        """

        self._profitriskratio = profitriskratio

    @property
    def rar(self):
        """Gets the rar of this Longshort.


        :return: The rar of this Longshort.
        :rtype: str
        """
        return self._rar

    @rar.setter
    def rar(self, rar):
        """Sets the rar of this Longshort.


        :param rar: The rar of this Longshort.
        :type rar: str
        """

        self._rar = rar

    @property
    def recoveryfactor(self):
        """Gets the recoveryfactor of this Longshort.


        :return: The recoveryfactor of this Longshort.
        :rtype: str
        """
        return self._recoveryfactor

    @recoveryfactor.setter
    def recoveryfactor(self, recoveryfactor):
        """Sets the recoveryfactor of this Longshort.


        :param recoveryfactor: The recoveryfactor of this Longshort.
        :type recoveryfactor: str
        """

        self._recoveryfactor = recoveryfactor

    @property
    def sharperatio(self):
        """Gets the sharperatio of this Longshort.


        :return: The sharperatio of this Longshort.
        :rtype: str
        """
        return self._sharperatio

    @sharperatio.setter
    def sharperatio(self, sharperatio):
        """Sets the sharperatio of this Longshort.


        :param sharperatio: The sharperatio of this Longshort.
        :type sharperatio: str
        """

        self._sharperatio = sharperatio

    @property
    def sortinoratio(self):
        """Gets the sortinoratio of this Longshort.


        :return: The sortinoratio of this Longshort.
        :rtype: str
        """
        return self._sortinoratio

    @sortinoratio.setter
    def sortinoratio(self, sortinoratio):
        """Sets the sortinoratio of this Longshort.


        :param sortinoratio: The sortinoratio of this Longshort.
        :type sortinoratio: str
        """

        self._sortinoratio = sortinoratio

    @property
    def startcapital(self):
        """Gets the startcapital of this Longshort.


        :return: The startcapital of this Longshort.
        :rtype: str
        """
        return self._startcapital

    @startcapital.setter
    def startcapital(self, startcapital):
        """Sets the startcapital of this Longshort.


        :param startcapital: The startcapital of this Longshort.
        :type startcapital: str
        """

        self._startcapital = startcapital

    @property
    def totalcommission(self):
        """Gets the totalcommission of this Longshort.


        :return: The totalcommission of this Longshort.
        :rtype: str
        """
        return self._totalcommission

    @totalcommission.setter
    def totalcommission(self, totalcommission):
        """Sets the totalcommission of this Longshort.


        :param totalcommission: The totalcommission of this Longshort.
        :type totalcommission: str
        """

        self._totalcommission = totalcommission

    @property
    def totaltrades(self):
        """Gets the totaltrades of this Longshort.


        :return: The totaltrades of this Longshort.
        :rtype: str
        """
        return self._totaltrades

    @totaltrades.setter
    def totaltrades(self, totaltrades):
        """Sets the totaltrades of this Longshort.


        :param totaltrades: The totaltrades of this Longshort.
        :type totaltrades: str
        """

        self._totaltrades = totaltrades

    @property
    def totalvolume(self):
        """Gets the totalvolume of this Longshort.


        :return: The totalvolume of this Longshort.
        :rtype: str
        """
        return self._totalvolume

    @totalvolume.setter
    def totalvolume(self, totalvolume):
        """Sets the totalvolume of this Longshort.


        :param totalvolume: The totalvolume of this Longshort.
        :type totalvolume: str
        """

        self._totalvolume = totalvolume

    @property
    def turnover(self):
        """Gets the turnover of this Longshort.


        :return: The turnover of this Longshort.
        :rtype: str
        """
        return self._turnover

    @turnover.setter
    def turnover(self, turnover):
        """Sets the turnover of this Longshort.


        :param turnover: The turnover of this Longshort.
        :type turnover: str
        """

        self._turnover = turnover
