# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Result(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, c: float=None, h: float=None, l: float=None, n: int=None, o: float=None, t: int=None, v: int=None):
        """Result - a model defined in OpenAPI

        :param c: The c of this Result.
        :param h: The h of this Result.
        :param l: The l of this Result.
        :param n: The n of this Result.
        :param o: The o of this Result.
        :param t: The t of this Result.
        :param v: The v of this Result.
        """
        self.openapi_types = {
            'c': float,
            'h': float,
            'l': float,
            'n': int,
            'o': float,
            't': int,
            'v': int
        }

        self.attribute_map = {
            'c': 'c',
            'h': 'h',
            'l': 'l',
            'n': 'n',
            'o': 'o',
            't': 't',
            'v': 'v'
        }

        self._c = c
        self._h = h
        self._l = l
        self._n = n
        self._o = o
        self._t = t
        self._v = v

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Result':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Result of this Result.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def c(self):
        """Gets the c of this Result.


        :return: The c of this Result.
        :rtype: float
        """
        return self._c

    @c.setter
    def c(self, c):
        """Sets the c of this Result.


        :param c: The c of this Result.
        :type c: float
        """

        self._c = c

    @property
    def h(self):
        """Gets the h of this Result.


        :return: The h of this Result.
        :rtype: float
        """
        return self._h

    @h.setter
    def h(self, h):
        """Sets the h of this Result.


        :param h: The h of this Result.
        :type h: float
        """

        self._h = h

    @property
    def l(self):
        """Gets the l of this Result.


        :return: The l of this Result.
        :rtype: float
        """
        return self._l

    @l.setter
    def l(self, l):
        """Sets the l of this Result.


        :param l: The l of this Result.
        :type l: float
        """

        self._l = l

    @property
    def n(self):
        """Gets the n of this Result.


        :return: The n of this Result.
        :rtype: int
        """
        return self._n

    @n.setter
    def n(self, n):
        """Sets the n of this Result.


        :param n: The n of this Result.
        :type n: int
        """

        self._n = n

    @property
    def o(self):
        """Gets the o of this Result.


        :return: The o of this Result.
        :rtype: float
        """
        return self._o

    @o.setter
    def o(self, o):
        """Sets the o of this Result.


        :param o: The o of this Result.
        :type o: float
        """

        self._o = o

    @property
    def t(self):
        """Gets the t of this Result.


        :return: The t of this Result.
        :rtype: int
        """
        return self._t

    @t.setter
    def t(self, t):
        """Sets the t of this Result.


        :param t: The t of this Result.
        :type t: int
        """

        self._t = t

    @property
    def v(self):
        """Gets the v of this Result.


        :return: The v of this Result.
        :rtype: int
        """
        return self._v

    @v.setter
    def v(self, v):
        """Sets the v of this Result.


        :param v: The v of this Result.
        :type v: int
        """

        self._v = v
