# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class User(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, comments: str=None, createdby: str=None, name: str=None, regdate: str=None, userid: str=None, username: str=None):
        """User - a model defined in OpenAPI

        :param comments: The comments of this User.
        :param createdby: The createdby of this User.
        :param name: The name of this User.
        :param regdate: The regdate of this User.
        :param userid: The userid of this User.
        :param username: The username of this User.
        """
        self.openapi_types = {
            'comments': str,
            'createdby': str,
            'name': str,
            'regdate': str,
            'userid': str,
            'username': str
        }

        self.attribute_map = {
            'comments': 'comments',
            'createdby': 'createdby',
            'name': 'name',
            'regdate': 'regdate',
            'userid': 'userid',
            'username': 'username'
        }

        self._comments = comments
        self._createdby = createdby
        self._name = name
        self._regdate = regdate
        self._userid = userid
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'User':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The User of this User.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def comments(self):
        """Gets the comments of this User.


        :return: The comments of this User.
        :rtype: str
        """
        return self._comments

    @comments.setter
    def comments(self, comments):
        """Sets the comments of this User.


        :param comments: The comments of this User.
        :type comments: str
        """

        self._comments = comments

    @property
    def createdby(self):
        """Gets the createdby of this User.


        :return: The createdby of this User.
        :rtype: str
        """
        return self._createdby

    @createdby.setter
    def createdby(self, createdby):
        """Sets the createdby of this User.


        :param createdby: The createdby of this User.
        :type createdby: str
        """

        self._createdby = createdby

    @property
    def name(self):
        """Gets the name of this User.


        :return: The name of this User.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this User.


        :param name: The name of this User.
        :type name: str
        """

        self._name = name

    @property
    def regdate(self):
        """Gets the regdate of this User.


        :return: The regdate of this User.
        :rtype: str
        """
        return self._regdate

    @regdate.setter
    def regdate(self, regdate):
        """Sets the regdate of this User.


        :param regdate: The regdate of this User.
        :type regdate: str
        """

        self._regdate = regdate

    @property
    def userid(self):
        """Gets the userid of this User.


        :return: The userid of this User.
        :rtype: str
        """
        return self._userid

    @userid.setter
    def userid(self, userid):
        """Sets the userid of this User.


        :param userid: The userid of this User.
        :type userid: str
        """

        self._userid = userid

    @property
    def username(self):
        """Gets the username of this User.


        :return: The username of this User.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this User.


        :param username: The username of this User.
        :type username: str
        """

        self._username = username
