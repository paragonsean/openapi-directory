# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Snapshot(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cash: str=None, daynum: str=None, snapshotid: str=None, timestamp: datetime=None, value: str=None):
        """Snapshot - a model defined in OpenAPI

        :param cash: The cash of this Snapshot.
        :param daynum: The daynum of this Snapshot.
        :param snapshotid: The snapshotid of this Snapshot.
        :param timestamp: The timestamp of this Snapshot.
        :param value: The value of this Snapshot.
        """
        self.openapi_types = {
            'cash': str,
            'daynum': str,
            'snapshotid': str,
            'timestamp': datetime,
            'value': str
        }

        self.attribute_map = {
            'cash': 'cash',
            'daynum': 'daynum',
            'snapshotid': 'snapshotid',
            'timestamp': 'timestamp',
            'value': 'value'
        }

        self._cash = cash
        self._daynum = daynum
        self._snapshotid = snapshotid
        self._timestamp = timestamp
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Snapshot':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Snapshot of this Snapshot.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cash(self):
        """Gets the cash of this Snapshot.


        :return: The cash of this Snapshot.
        :rtype: str
        """
        return self._cash

    @cash.setter
    def cash(self, cash):
        """Sets the cash of this Snapshot.


        :param cash: The cash of this Snapshot.
        :type cash: str
        """

        self._cash = cash

    @property
    def daynum(self):
        """Gets the daynum of this Snapshot.


        :return: The daynum of this Snapshot.
        :rtype: str
        """
        return self._daynum

    @daynum.setter
    def daynum(self, daynum):
        """Sets the daynum of this Snapshot.


        :param daynum: The daynum of this Snapshot.
        :type daynum: str
        """

        self._daynum = daynum

    @property
    def snapshotid(self):
        """Gets the snapshotid of this Snapshot.


        :return: The snapshotid of this Snapshot.
        :rtype: str
        """
        return self._snapshotid

    @snapshotid.setter
    def snapshotid(self, snapshotid):
        """Sets the snapshotid of this Snapshot.


        :param snapshotid: The snapshotid of this Snapshot.
        :type snapshotid: str
        """

        self._snapshotid = snapshotid

    @property
    def timestamp(self):
        """Gets the timestamp of this Snapshot.


        :return: The timestamp of this Snapshot.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this Snapshot.


        :param timestamp: The timestamp of this Snapshot.
        :type timestamp: datetime
        """

        self._timestamp = timestamp

    @property
    def value(self):
        """Gets the value of this Snapshot.


        :return: The value of this Snapshot.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this Snapshot.


        :param value: The value of this Snapshot.
        :type value: str
        """

        self._value = value
