# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class News(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, body: str=None, newsid: str=None, source: str=None, timestamp: datetime=None, title: str=None):
        """News - a model defined in OpenAPI

        :param body: The body of this News.
        :param newsid: The newsid of this News.
        :param source: The source of this News.
        :param timestamp: The timestamp of this News.
        :param title: The title of this News.
        """
        self.openapi_types = {
            'body': str,
            'newsid': str,
            'source': str,
            'timestamp': datetime,
            'title': str
        }

        self.attribute_map = {
            'body': 'body',
            'newsid': 'newsid',
            'source': 'source',
            'timestamp': 'timestamp',
            'title': 'title'
        }

        self._body = body
        self._newsid = newsid
        self._source = source
        self._timestamp = timestamp
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'News':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The News of this News.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def body(self):
        """Gets the body of this News.


        :return: The body of this News.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this News.


        :param body: The body of this News.
        :type body: str
        """

        self._body = body

    @property
    def newsid(self):
        """Gets the newsid of this News.


        :return: The newsid of this News.
        :rtype: str
        """
        return self._newsid

    @newsid.setter
    def newsid(self, newsid):
        """Sets the newsid of this News.


        :param newsid: The newsid of this News.
        :type newsid: str
        """

        self._newsid = newsid

    @property
    def source(self):
        """Gets the source of this News.


        :return: The source of this News.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this News.


        :param source: The source of this News.
        :type source: str
        """

        self._source = source

    @property
    def timestamp(self):
        """Gets the timestamp of this News.


        :return: The timestamp of this News.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this News.


        :param timestamp: The timestamp of this News.
        :type timestamp: datetime
        """

        self._timestamp = timestamp

    @property
    def title(self):
        """Gets the title of this News.


        :return: The title of this News.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this News.


        :param title: The title of this News.
        :type title: str
        """

        self._title = title
