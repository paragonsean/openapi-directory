# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ByQuarters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, equitypct: str=None, period: str=None):
        """ByQuarters - a model defined in OpenAPI

        :param equitypct: The equitypct of this ByQuarters.
        :param period: The period of this ByQuarters.
        """
        self.openapi_types = {
            'equitypct': str,
            'period': str
        }

        self.attribute_map = {
            'equitypct': 'equitypct',
            'period': 'period'
        }

        self._equitypct = equitypct
        self._period = period

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ByQuarters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ByQuarters of this ByQuarters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def equitypct(self):
        """Gets the equitypct of this ByQuarters.


        :return: The equitypct of this ByQuarters.
        :rtype: str
        """
        return self._equitypct

    @equitypct.setter
    def equitypct(self, equitypct):
        """Sets the equitypct of this ByQuarters.


        :param equitypct: The equitypct of this ByQuarters.
        :type equitypct: str
        """

        self._equitypct = equitypct

    @property
    def period(self):
        """Gets the period of this ByQuarters.


        :return: The period of this ByQuarters.
        :rtype: str
        """
        return self._period

    @period.setter
    def period(self, period):
        """Sets the period of this ByQuarters.


        :param period: The period of this ByQuarters.
        :type period: str
        """

        self._period = period
