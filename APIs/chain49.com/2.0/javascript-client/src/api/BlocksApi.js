/**
 * Chain49 API
 * Kickstart your next crypto project - extended trezor/blockbook API with 10+ blockchains available instantly and 50+ possible on request running on the finest hardware in Germany's best datacenters at Hetzner  Websocket only via api.chain49.com endpoint possible (RapidAPI does not support it yet)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: contact@chain49.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GetBlockHashV2200Response from '../model/GetBlockHashV2200Response';
import GetBlockV2200Response from '../model/GetBlockV2200Response';
import GetRawBlockV2200Response from '../model/GetRawBlockV2200Response';

/**
* Blocks service.
* @module api/BlocksApi
* @version 2.0
*/
export default class BlocksApi {

    /**
    * Constructs a new BlocksApi. 
    * @alias module:api/BlocksApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getBlockHashV2 operation.
     * @callback module:api/BlocksApi~getBlockHashV2Callback
     * @param {String} error Error message, if any.
     * @param {module:model/GetBlockHashV2200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get block hash V2
     * Get block hash by its height  Note: Blockbook always follows the main chain of the backend it is attached to.
     * @param {String} blockchain Blockchain name
     * @param {Number} blockHeight Block height/index
     * @param {module:api/BlocksApi~getBlockHashV2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetBlockHashV2200Response}
     */
    getBlockHashV2(blockchain, blockHeight, callback) {
      let postBody = null;
      // verify the required parameter 'blockchain' is set
      if (blockchain === undefined || blockchain === null) {
        throw new Error("Missing the required parameter 'blockchain' when calling getBlockHashV2");
      }
      // verify the required parameter 'blockHeight' is set
      if (blockHeight === undefined || blockHeight === null) {
        throw new Error("Missing the required parameter 'blockHeight' when calling getBlockHashV2");
      }

      let pathParams = {
        'blockchain': blockchain,
        'blockHeight': blockHeight
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-RapidAPI-Host', 'X-API-Key', 'X-RapidAPI-Key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetBlockHashV2200Response;
      return this.apiClient.callApi(
        '/{blockchain}/v2/block-index/{blockHeight}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getBlockV2 operation.
     * @callback module:api/BlocksApi~getBlockV2Callback
     * @param {String} error Error message, if any.
     * @param {module:model/GetBlockV2200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Block V2
     * Returns information about block with transactions, subject to paging.  Note: Blockbook always follows the main chain of the backend it is attached to. If there is a rollback-reorg in the backend, Blockbook will also do rollback. When you ask for block by height, you will always get the main chain block. If you ask for block by hash, you may get the block from another fork but it is not guaranteed (backend may not keep it)
     * @param {String} blockchain Blockchain name
     * @param {String} blockHashOrHeight Block hash or height
     * @param {Object} opts Optional parameters
     * @param {Number} [page] specifies page of returned transactions, starting from 1. If out of range, Blockbook returns the closest possible page.
     * @param {Number} [pageSize] number of transactions returned by call (default and maximum 1000)
     * @param {module:api/BlocksApi~getBlockV2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetBlockV2200Response}
     */
    getBlockV2(blockchain, blockHashOrHeight, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'blockchain' is set
      if (blockchain === undefined || blockchain === null) {
        throw new Error("Missing the required parameter 'blockchain' when calling getBlockV2");
      }
      // verify the required parameter 'blockHashOrHeight' is set
      if (blockHashOrHeight === undefined || blockHashOrHeight === null) {
        throw new Error("Missing the required parameter 'blockHashOrHeight' when calling getBlockV2");
      }

      let pathParams = {
        'blockchain': blockchain,
        'blockHashOrHeight': blockHashOrHeight
      };
      let queryParams = {
        'page': opts['page'],
        'pageSize': opts['pageSize']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-RapidAPI-Host', 'X-API-Key', 'X-RapidAPI-Key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetBlockV2200Response;
      return this.apiClient.callApi(
        '/{blockchain}/v2/block/{blockHashOrHeight}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getRawBlockV2 operation.
     * @callback module:api/BlocksApi~getRawBlockV2Callback
     * @param {String} error Error message, if any.
     * @param {module:model/GetRawBlockV2200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get raw block data V2
     * Returns the raw hex-encoded block data for a given block hash or height
     * @param {String} blockchain Blockchain name
     * @param {String} blockHashOrHeight Block hash or height
     * @param {module:api/BlocksApi~getRawBlockV2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetRawBlockV2200Response}
     */
    getRawBlockV2(blockchain, blockHashOrHeight, callback) {
      let postBody = null;
      // verify the required parameter 'blockchain' is set
      if (blockchain === undefined || blockchain === null) {
        throw new Error("Missing the required parameter 'blockchain' when calling getRawBlockV2");
      }
      // verify the required parameter 'blockHashOrHeight' is set
      if (blockHashOrHeight === undefined || blockHashOrHeight === null) {
        throw new Error("Missing the required parameter 'blockHashOrHeight' when calling getRawBlockV2");
      }

      let pathParams = {
        'blockchain': blockchain,
        'blockHashOrHeight': blockHashOrHeight
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-RapidAPI-Host', 'X-API-Key', 'X-RapidAPI-Key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetRawBlockV2200Response;
      return this.apiClient.callApi(
        '/{blockchain}/v2/rawblock/{blockHashOrHeight}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
