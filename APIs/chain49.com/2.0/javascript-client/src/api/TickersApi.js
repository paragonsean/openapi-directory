/**
 * Chain49 API
 * Kickstart your next crypto project - extended trezor/blockbook API with 10+ blockchains available instantly and 50+ possible on request running on the finest hardware in Germany's best datacenters at Hetzner  Websocket only via api.chain49.com endpoint possible (RapidAPI does not support it yet)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: contact@chain49.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GetTickersListV2200Response from '../model/GetTickersListV2200Response';
import GetTickersV2200Response from '../model/GetTickersV2200Response';

/**
* Tickers service.
* @module api/TickersApi
* @version 2.0
*/
export default class TickersApi {

    /**
    * Constructs a new TickersApi. 
    * @alias module:api/TickersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getTickersListV2 operation.
     * @callback module:api/TickersApi~getTickersListV2Callback
     * @param {String} error Error message, if any.
     * @param {module:model/GetTickersListV2200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Tickers list V2
     * Returns a list of available currency rate tickers (secondary currencies) for the specified date, along with an actual data timestamp.  Trailing slash '/' is mandatory
     * @param {String} blockchain Blockchain name
     * @param {Object} opts Optional parameters
     * @param {String} [timestamp] specifies a Unix timestamp to (/tickers-list) return available tickers for or (/tickers) that specifies a date to return currency rates for. If not specified, the last available rate will be returned.
     * @param {module:api/TickersApi~getTickersListV2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetTickersListV2200Response}
     */
    getTickersListV2(blockchain, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'blockchain' is set
      if (blockchain === undefined || blockchain === null) {
        throw new Error("Missing the required parameter 'blockchain' when calling getTickersListV2");
      }

      let pathParams = {
        'blockchain': blockchain
      };
      let queryParams = {
        'timestamp': opts['timestamp']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-RapidAPI-Host', 'X-API-Key', 'X-RapidAPI-Key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetTickersListV2200Response;
      return this.apiClient.callApi(
        '/{blockchain}/v2/tickers-list/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getTickersV2 operation.
     * @callback module:api/TickersApi~getTickersV2Callback
     * @param {String} error Error message, if any.
     * @param {module:model/GetTickersV2200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Tickers V2
     * Returns currency rate for the specified currency and date. If the currency is not available for that specific timestamp, the next closest rate will be returned. All responses contain an actual rate timestamp.
     * @param {String} blockchain Blockchain name
     * @param {Object} opts Optional parameters
     * @param {String} [timestamp] specifies a Unix timestamp to (/tickers-list) return available tickers for or (/tickers) that specifies a date to return currency rates for. If not specified, the last available rate will be returned.
     * @param {String} [currency] specifies a currency of returned rate (\"usd\", \"eur\", \"eth\"...). If not specified, all available currencies will be returned
     * @param {module:api/TickersApi~getTickersV2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetTickersV2200Response}
     */
    getTickersV2(blockchain, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'blockchain' is set
      if (blockchain === undefined || blockchain === null) {
        throw new Error("Missing the required parameter 'blockchain' when calling getTickersV2");
      }

      let pathParams = {
        'blockchain': blockchain
      };
      let queryParams = {
        'timestamp': opts['timestamp'],
        'currency': opts['currency']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-RapidAPI-Host', 'X-API-Key', 'X-RapidAPI-Key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetTickersV2200Response;
      return this.apiClient.callApi(
        '/{blockchain}/v2/tickers/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
