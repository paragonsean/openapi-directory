/**
 * Chain49 API
 * Kickstart your next crypto project - extended trezor/blockbook API with 10+ blockchains available instantly and 50+ possible on request running on the finest hardware in Germany's best datacenters at Hetzner  Websocket only via api.chain49.com endpoint possible (RapidAPI does not support it yet)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: contact@chain49.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetBlockchain200ResponseBlockbook model module.
 * @module model/GetBlockchain200ResponseBlockbook
 * @version 2.0
 */
class GetBlockchain200ResponseBlockbook {
    /**
     * Constructs a new <code>GetBlockchain200ResponseBlockbook</code>.
     * @alias module:model/GetBlockchain200ResponseBlockbook
     */
    constructor() { 
        
        GetBlockchain200ResponseBlockbook.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetBlockchain200ResponseBlockbook</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetBlockchain200ResponseBlockbook} obj Optional instance to populate.
     * @return {module:model/GetBlockchain200ResponseBlockbook} The populated <code>GetBlockchain200ResponseBlockbook</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetBlockchain200ResponseBlockbook();

            if (data.hasOwnProperty('about')) {
                obj['about'] = ApiClient.convertToType(data['about'], 'String');
            }
            if (data.hasOwnProperty('bestHeight')) {
                obj['bestHeight'] = ApiClient.convertToType(data['bestHeight'], 'Number');
            }
            if (data.hasOwnProperty('buildTime')) {
                obj['buildTime'] = ApiClient.convertToType(data['buildTime'], 'String');
            }
            if (data.hasOwnProperty('coin')) {
                obj['coin'] = ApiClient.convertToType(data['coin'], 'String');
            }
            if (data.hasOwnProperty('currentFiatRatesTime')) {
                obj['currentFiatRatesTime'] = ApiClient.convertToType(data['currentFiatRatesTime'], 'String');
            }
            if (data.hasOwnProperty('dbSize')) {
                obj['dbSize'] = ApiClient.convertToType(data['dbSize'], 'Number');
            }
            if (data.hasOwnProperty('decimals')) {
                obj['decimals'] = ApiClient.convertToType(data['decimals'], 'Number');
            }
            if (data.hasOwnProperty('gitCommit')) {
                obj['gitCommit'] = ApiClient.convertToType(data['gitCommit'], 'String');
            }
            if (data.hasOwnProperty('hasFiatRates')) {
                obj['hasFiatRates'] = ApiClient.convertToType(data['hasFiatRates'], 'Boolean');
            }
            if (data.hasOwnProperty('historicalFiatRatesTime')) {
                obj['historicalFiatRatesTime'] = ApiClient.convertToType(data['historicalFiatRatesTime'], 'String');
            }
            if (data.hasOwnProperty('host')) {
                obj['host'] = ApiClient.convertToType(data['host'], 'String');
            }
            if (data.hasOwnProperty('inSync')) {
                obj['inSync'] = ApiClient.convertToType(data['inSync'], 'Boolean');
            }
            if (data.hasOwnProperty('inSyncMempool')) {
                obj['inSyncMempool'] = ApiClient.convertToType(data['inSyncMempool'], 'Boolean');
            }
            if (data.hasOwnProperty('initialSync')) {
                obj['initialSync'] = ApiClient.convertToType(data['initialSync'], 'Boolean');
            }
            if (data.hasOwnProperty('lastBlockTime')) {
                obj['lastBlockTime'] = ApiClient.convertToType(data['lastBlockTime'], 'String');
            }
            if (data.hasOwnProperty('lastMempoolTime')) {
                obj['lastMempoolTime'] = ApiClient.convertToType(data['lastMempoolTime'], 'String');
            }
            if (data.hasOwnProperty('mempoolSize')) {
                obj['mempoolSize'] = ApiClient.convertToType(data['mempoolSize'], 'Number');
            }
            if (data.hasOwnProperty('syncMode')) {
                obj['syncMode'] = ApiClient.convertToType(data['syncMode'], 'Boolean');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetBlockchain200ResponseBlockbook</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetBlockchain200ResponseBlockbook</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['about'] && !(typeof data['about'] === 'string' || data['about'] instanceof String)) {
            throw new Error("Expected the field `about` to be a primitive type in the JSON string but got " + data['about']);
        }
        // ensure the json data is a string
        if (data['buildTime'] && !(typeof data['buildTime'] === 'string' || data['buildTime'] instanceof String)) {
            throw new Error("Expected the field `buildTime` to be a primitive type in the JSON string but got " + data['buildTime']);
        }
        // ensure the json data is a string
        if (data['coin'] && !(typeof data['coin'] === 'string' || data['coin'] instanceof String)) {
            throw new Error("Expected the field `coin` to be a primitive type in the JSON string but got " + data['coin']);
        }
        // ensure the json data is a string
        if (data['currentFiatRatesTime'] && !(typeof data['currentFiatRatesTime'] === 'string' || data['currentFiatRatesTime'] instanceof String)) {
            throw new Error("Expected the field `currentFiatRatesTime` to be a primitive type in the JSON string but got " + data['currentFiatRatesTime']);
        }
        // ensure the json data is a string
        if (data['gitCommit'] && !(typeof data['gitCommit'] === 'string' || data['gitCommit'] instanceof String)) {
            throw new Error("Expected the field `gitCommit` to be a primitive type in the JSON string but got " + data['gitCommit']);
        }
        // ensure the json data is a string
        if (data['historicalFiatRatesTime'] && !(typeof data['historicalFiatRatesTime'] === 'string' || data['historicalFiatRatesTime'] instanceof String)) {
            throw new Error("Expected the field `historicalFiatRatesTime` to be a primitive type in the JSON string but got " + data['historicalFiatRatesTime']);
        }
        // ensure the json data is a string
        if (data['host'] && !(typeof data['host'] === 'string' || data['host'] instanceof String)) {
            throw new Error("Expected the field `host` to be a primitive type in the JSON string but got " + data['host']);
        }
        // ensure the json data is a string
        if (data['lastBlockTime'] && !(typeof data['lastBlockTime'] === 'string' || data['lastBlockTime'] instanceof String)) {
            throw new Error("Expected the field `lastBlockTime` to be a primitive type in the JSON string but got " + data['lastBlockTime']);
        }
        // ensure the json data is a string
        if (data['lastMempoolTime'] && !(typeof data['lastMempoolTime'] === 'string' || data['lastMempoolTime'] instanceof String)) {
            throw new Error("Expected the field `lastMempoolTime` to be a primitive type in the JSON string but got " + data['lastMempoolTime']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }

        return true;
    }


}



/**
 * @member {String} about
 */
GetBlockchain200ResponseBlockbook.prototype['about'] = undefined;

/**
 * @member {Number} bestHeight
 */
GetBlockchain200ResponseBlockbook.prototype['bestHeight'] = undefined;

/**
 * @member {String} buildTime
 */
GetBlockchain200ResponseBlockbook.prototype['buildTime'] = undefined;

/**
 * @member {String} coin
 */
GetBlockchain200ResponseBlockbook.prototype['coin'] = undefined;

/**
 * @member {String} currentFiatRatesTime
 */
GetBlockchain200ResponseBlockbook.prototype['currentFiatRatesTime'] = undefined;

/**
 * @member {Number} dbSize
 */
GetBlockchain200ResponseBlockbook.prototype['dbSize'] = undefined;

/**
 * @member {Number} decimals
 */
GetBlockchain200ResponseBlockbook.prototype['decimals'] = undefined;

/**
 * @member {String} gitCommit
 */
GetBlockchain200ResponseBlockbook.prototype['gitCommit'] = undefined;

/**
 * @member {Boolean} hasFiatRates
 */
GetBlockchain200ResponseBlockbook.prototype['hasFiatRates'] = undefined;

/**
 * @member {String} historicalFiatRatesTime
 */
GetBlockchain200ResponseBlockbook.prototype['historicalFiatRatesTime'] = undefined;

/**
 * @member {String} host
 */
GetBlockchain200ResponseBlockbook.prototype['host'] = undefined;

/**
 * @member {Boolean} inSync
 */
GetBlockchain200ResponseBlockbook.prototype['inSync'] = undefined;

/**
 * @member {Boolean} inSyncMempool
 */
GetBlockchain200ResponseBlockbook.prototype['inSyncMempool'] = undefined;

/**
 * @member {Boolean} initialSync
 */
GetBlockchain200ResponseBlockbook.prototype['initialSync'] = undefined;

/**
 * @member {String} lastBlockTime
 */
GetBlockchain200ResponseBlockbook.prototype['lastBlockTime'] = undefined;

/**
 * @member {String} lastMempoolTime
 */
GetBlockchain200ResponseBlockbook.prototype['lastMempoolTime'] = undefined;

/**
 * @member {Number} mempoolSize
 */
GetBlockchain200ResponseBlockbook.prototype['mempoolSize'] = undefined;

/**
 * @member {Boolean} syncMode
 */
GetBlockchain200ResponseBlockbook.prototype['syncMode'] = undefined;

/**
 * @member {String} version
 */
GetBlockchain200ResponseBlockbook.prototype['version'] = undefined;






export default GetBlockchain200ResponseBlockbook;

