/**
 * Chain49 API
 * Kickstart your next crypto project - extended trezor/blockbook API with 10+ blockchains available instantly and 50+ possible on request running on the finest hardware in Germany's best datacenters at Hetzner  Websocket only via api.chain49.com endpoint possible (RapidAPI does not support it yet)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: contact@chain49.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetNFTMetaV2200ResponseContractInfo model module.
 * @module model/GetNFTMetaV2200ResponseContractInfo
 * @version 2.0
 */
class GetNFTMetaV2200ResponseContractInfo {
    /**
     * Constructs a new <code>GetNFTMetaV2200ResponseContractInfo</code>.
     * @alias module:model/GetNFTMetaV2200ResponseContractInfo
     */
    constructor() { 
        
        GetNFTMetaV2200ResponseContractInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetNFTMetaV2200ResponseContractInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetNFTMetaV2200ResponseContractInfo} obj Optional instance to populate.
     * @return {module:model/GetNFTMetaV2200ResponseContractInfo} The populated <code>GetNFTMetaV2200ResponseContractInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetNFTMetaV2200ResponseContractInfo();

            if (data.hasOwnProperty('contract')) {
                obj['contract'] = ApiClient.convertToType(data['contract'], 'String');
            }
            if (data.hasOwnProperty('decimals')) {
                obj['decimals'] = ApiClient.convertToType(data['decimals'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('symbol')) {
                obj['symbol'] = ApiClient.convertToType(data['symbol'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetNFTMetaV2200ResponseContractInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetNFTMetaV2200ResponseContractInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['contract'] && !(typeof data['contract'] === 'string' || data['contract'] instanceof String)) {
            throw new Error("Expected the field `contract` to be a primitive type in the JSON string but got " + data['contract']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['symbol'] && !(typeof data['symbol'] === 'string' || data['symbol'] instanceof String)) {
            throw new Error("Expected the field `symbol` to be a primitive type in the JSON string but got " + data['symbol']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * @member {String} contract
 */
GetNFTMetaV2200ResponseContractInfo.prototype['contract'] = undefined;

/**
 * @member {Number} decimals
 */
GetNFTMetaV2200ResponseContractInfo.prototype['decimals'] = undefined;

/**
 * @member {String} name
 */
GetNFTMetaV2200ResponseContractInfo.prototype['name'] = undefined;

/**
 * @member {String} symbol
 */
GetNFTMetaV2200ResponseContractInfo.prototype['symbol'] = undefined;

/**
 * @member {String} type
 */
GetNFTMetaV2200ResponseContractInfo.prototype['type'] = undefined;






export default GetNFTMetaV2200ResponseContractInfo;

