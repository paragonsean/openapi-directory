/**
 * Chain49 API
 * Kickstart your next crypto project - extended trezor/blockbook API with 10+ blockchains available instantly and 50+ possible on request running on the finest hardware in Germany's best datacenters at Hetzner  Websocket only via api.chain49.com endpoint possible (RapidAPI does not support it yet)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: contact@chain49.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetXpubV2200ResponseTokensInner from './GetXpubV2200ResponseTokensInner';

/**
 * The GetXpubV2200Response model module.
 * @module model/GetXpubV2200Response
 * @version 2.0
 */
class GetXpubV2200Response {
    /**
     * Constructs a new <code>GetXpubV2200Response</code>.
     * @alias module:model/GetXpubV2200Response
     */
    constructor() { 
        
        GetXpubV2200Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetXpubV2200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetXpubV2200Response} obj Optional instance to populate.
     * @return {module:model/GetXpubV2200Response} The populated <code>GetXpubV2200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetXpubV2200Response();

            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
            if (data.hasOwnProperty('balance')) {
                obj['balance'] = ApiClient.convertToType(data['balance'], 'String');
            }
            if (data.hasOwnProperty('itemsOnPage')) {
                obj['itemsOnPage'] = ApiClient.convertToType(data['itemsOnPage'], 'Number');
            }
            if (data.hasOwnProperty('page')) {
                obj['page'] = ApiClient.convertToType(data['page'], 'Number');
            }
            if (data.hasOwnProperty('secondaryValue')) {
                obj['secondaryValue'] = ApiClient.convertToType(data['secondaryValue'], 'Number');
            }
            if (data.hasOwnProperty('tokens')) {
                obj['tokens'] = ApiClient.convertToType(data['tokens'], [GetXpubV2200ResponseTokensInner]);
            }
            if (data.hasOwnProperty('totalPages')) {
                obj['totalPages'] = ApiClient.convertToType(data['totalPages'], 'Number');
            }
            if (data.hasOwnProperty('totalReceived')) {
                obj['totalReceived'] = ApiClient.convertToType(data['totalReceived'], 'String');
            }
            if (data.hasOwnProperty('totalSent')) {
                obj['totalSent'] = ApiClient.convertToType(data['totalSent'], 'String');
            }
            if (data.hasOwnProperty('txids')) {
                obj['txids'] = ApiClient.convertToType(data['txids'], ['String']);
            }
            if (data.hasOwnProperty('txs')) {
                obj['txs'] = ApiClient.convertToType(data['txs'], 'Number');
            }
            if (data.hasOwnProperty('unconfirmedBalance')) {
                obj['unconfirmedBalance'] = ApiClient.convertToType(data['unconfirmedBalance'], 'String');
            }
            if (data.hasOwnProperty('unconfirmedTxs')) {
                obj['unconfirmedTxs'] = ApiClient.convertToType(data['unconfirmedTxs'], 'Number');
            }
            if (data.hasOwnProperty('usedTokens')) {
                obj['usedTokens'] = ApiClient.convertToType(data['usedTokens'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetXpubV2200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetXpubV2200Response</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['address'] && !(typeof data['address'] === 'string' || data['address'] instanceof String)) {
            throw new Error("Expected the field `address` to be a primitive type in the JSON string but got " + data['address']);
        }
        // ensure the json data is a string
        if (data['balance'] && !(typeof data['balance'] === 'string' || data['balance'] instanceof String)) {
            throw new Error("Expected the field `balance` to be a primitive type in the JSON string but got " + data['balance']);
        }
        if (data['tokens']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['tokens'])) {
                throw new Error("Expected the field `tokens` to be an array in the JSON data but got " + data['tokens']);
            }
            // validate the optional field `tokens` (array)
            for (const item of data['tokens']) {
                GetXpubV2200ResponseTokensInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['totalReceived'] && !(typeof data['totalReceived'] === 'string' || data['totalReceived'] instanceof String)) {
            throw new Error("Expected the field `totalReceived` to be a primitive type in the JSON string but got " + data['totalReceived']);
        }
        // ensure the json data is a string
        if (data['totalSent'] && !(typeof data['totalSent'] === 'string' || data['totalSent'] instanceof String)) {
            throw new Error("Expected the field `totalSent` to be a primitive type in the JSON string but got " + data['totalSent']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['txids'])) {
            throw new Error("Expected the field `txids` to be an array in the JSON data but got " + data['txids']);
        }
        // ensure the json data is a string
        if (data['unconfirmedBalance'] && !(typeof data['unconfirmedBalance'] === 'string' || data['unconfirmedBalance'] instanceof String)) {
            throw new Error("Expected the field `unconfirmedBalance` to be a primitive type in the JSON string but got " + data['unconfirmedBalance']);
        }

        return true;
    }


}



/**
 * @member {String} address
 */
GetXpubV2200Response.prototype['address'] = undefined;

/**
 * @member {String} balance
 */
GetXpubV2200Response.prototype['balance'] = undefined;

/**
 * @member {Number} itemsOnPage
 */
GetXpubV2200Response.prototype['itemsOnPage'] = undefined;

/**
 * @member {Number} page
 */
GetXpubV2200Response.prototype['page'] = undefined;

/**
 * @member {Number} secondaryValue
 */
GetXpubV2200Response.prototype['secondaryValue'] = undefined;

/**
 * @member {Array.<module:model/GetXpubV2200ResponseTokensInner>} tokens
 */
GetXpubV2200Response.prototype['tokens'] = undefined;

/**
 * @member {Number} totalPages
 */
GetXpubV2200Response.prototype['totalPages'] = undefined;

/**
 * @member {String} totalReceived
 */
GetXpubV2200Response.prototype['totalReceived'] = undefined;

/**
 * @member {String} totalSent
 */
GetXpubV2200Response.prototype['totalSent'] = undefined;

/**
 * @member {Array.<String>} txids
 */
GetXpubV2200Response.prototype['txids'] = undefined;

/**
 * @member {Number} txs
 */
GetXpubV2200Response.prototype['txs'] = undefined;

/**
 * @member {String} unconfirmedBalance
 */
GetXpubV2200Response.prototype['unconfirmedBalance'] = undefined;

/**
 * @member {Number} unconfirmedTxs
 */
GetXpubV2200Response.prototype['unconfirmedTxs'] = undefined;

/**
 * @member {Number} usedTokens
 */
GetXpubV2200Response.prototype['usedTokens'] = undefined;






export default GetXpubV2200Response;

