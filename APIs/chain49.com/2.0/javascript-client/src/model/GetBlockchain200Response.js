/**
 * Chain49 API
 * Kickstart your next crypto project - extended trezor/blockbook API with 10+ blockchains available instantly and 50+ possible on request running on the finest hardware in Germany's best datacenters at Hetzner  Websocket only via api.chain49.com endpoint possible (RapidAPI does not support it yet)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: contact@chain49.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetBlockchain200ResponseBackend from './GetBlockchain200ResponseBackend';
import GetBlockchain200ResponseBlockbook from './GetBlockchain200ResponseBlockbook';

/**
 * The GetBlockchain200Response model module.
 * @module model/GetBlockchain200Response
 * @version 2.0
 */
class GetBlockchain200Response {
    /**
     * Constructs a new <code>GetBlockchain200Response</code>.
     * @alias module:model/GetBlockchain200Response
     */
    constructor() { 
        
        GetBlockchain200Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetBlockchain200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetBlockchain200Response} obj Optional instance to populate.
     * @return {module:model/GetBlockchain200Response} The populated <code>GetBlockchain200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetBlockchain200Response();

            if (data.hasOwnProperty('backend')) {
                obj['backend'] = GetBlockchain200ResponseBackend.constructFromObject(data['backend']);
            }
            if (data.hasOwnProperty('blockbook')) {
                obj['blockbook'] = GetBlockchain200ResponseBlockbook.constructFromObject(data['blockbook']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetBlockchain200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetBlockchain200Response</code>.
     */
    static validateJSON(data) {
        // validate the optional field `backend`
        if (data['backend']) { // data not null
          GetBlockchain200ResponseBackend.validateJSON(data['backend']);
        }
        // validate the optional field `blockbook`
        if (data['blockbook']) { // data not null
          GetBlockchain200ResponseBlockbook.validateJSON(data['blockbook']);
        }

        return true;
    }


}



/**
 * @member {module:model/GetBlockchain200ResponseBackend} backend
 */
GetBlockchain200Response.prototype['backend'] = undefined;

/**
 * @member {module:model/GetBlockchain200ResponseBlockbook} blockbook
 */
GetBlockchain200Response.prototype['blockbook'] = undefined;






export default GetBlockchain200Response;

