/**
 * Chain49 API
 * Kickstart your next crypto project - extended trezor/blockbook API with 10+ blockchains available instantly and 50+ possible on request running on the finest hardware in Germany's best datacenters at Hetzner  Websocket only via api.chain49.com endpoint possible (RapidAPI does not support it yet)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: contact@chain49.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetBlockV2200ResponseTxsInnerVoutInner model module.
 * @module model/GetBlockV2200ResponseTxsInnerVoutInner
 * @version 2.0
 */
class GetBlockV2200ResponseTxsInnerVoutInner {
    /**
     * Constructs a new <code>GetBlockV2200ResponseTxsInnerVoutInner</code>.
     * @alias module:model/GetBlockV2200ResponseTxsInnerVoutInner
     */
    constructor() { 
        
        GetBlockV2200ResponseTxsInnerVoutInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetBlockV2200ResponseTxsInnerVoutInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetBlockV2200ResponseTxsInnerVoutInner} obj Optional instance to populate.
     * @return {module:model/GetBlockV2200ResponseTxsInnerVoutInner} The populated <code>GetBlockV2200ResponseTxsInnerVoutInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetBlockV2200ResponseTxsInnerVoutInner();

            if (data.hasOwnProperty('addresses')) {
                obj['addresses'] = ApiClient.convertToType(data['addresses'], ['String']);
            }
            if (data.hasOwnProperty('isAddress')) {
                obj['isAddress'] = ApiClient.convertToType(data['isAddress'], 'Boolean');
            }
            if (data.hasOwnProperty('n')) {
                obj['n'] = ApiClient.convertToType(data['n'], 'Number');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetBlockV2200ResponseTxsInnerVoutInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetBlockV2200ResponseTxsInnerVoutInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['addresses'])) {
            throw new Error("Expected the field `addresses` to be an array in the JSON data but got " + data['addresses']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }

        return true;
    }


}



/**
 * @member {Array.<String>} addresses
 */
GetBlockV2200ResponseTxsInnerVoutInner.prototype['addresses'] = undefined;

/**
 * @member {Boolean} isAddress
 */
GetBlockV2200ResponseTxsInnerVoutInner.prototype['isAddress'] = undefined;

/**
 * @member {Number} n
 */
GetBlockV2200ResponseTxsInnerVoutInner.prototype['n'] = undefined;

/**
 * @member {String} value
 */
GetBlockV2200ResponseTxsInnerVoutInner.prototype['value'] = undefined;






export default GetBlockV2200ResponseTxsInnerVoutInner;

