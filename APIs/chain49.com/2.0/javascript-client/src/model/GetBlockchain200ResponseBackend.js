/**
 * Chain49 API
 * Kickstart your next crypto project - extended trezor/blockbook API with 10+ blockchains available instantly and 50+ possible on request running on the finest hardware in Germany's best datacenters at Hetzner  Websocket only via api.chain49.com endpoint possible (RapidAPI does not support it yet)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: contact@chain49.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetBlockchain200ResponseBackend model module.
 * @module model/GetBlockchain200ResponseBackend
 * @version 2.0
 */
class GetBlockchain200ResponseBackend {
    /**
     * Constructs a new <code>GetBlockchain200ResponseBackend</code>.
     * @alias module:model/GetBlockchain200ResponseBackend
     */
    constructor() { 
        
        GetBlockchain200ResponseBackend.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetBlockchain200ResponseBackend</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetBlockchain200ResponseBackend} obj Optional instance to populate.
     * @return {module:model/GetBlockchain200ResponseBackend} The populated <code>GetBlockchain200ResponseBackend</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetBlockchain200ResponseBackend();

            if (data.hasOwnProperty('bestBlockHash')) {
                obj['bestBlockHash'] = ApiClient.convertToType(data['bestBlockHash'], 'String');
            }
            if (data.hasOwnProperty('blocks')) {
                obj['blocks'] = ApiClient.convertToType(data['blocks'], 'Number');
            }
            if (data.hasOwnProperty('chain')) {
                obj['chain'] = ApiClient.convertToType(data['chain'], 'String');
            }
            if (data.hasOwnProperty('difficulty')) {
                obj['difficulty'] = ApiClient.convertToType(data['difficulty'], 'String');
            }
            if (data.hasOwnProperty('headers')) {
                obj['headers'] = ApiClient.convertToType(data['headers'], 'Number');
            }
            if (data.hasOwnProperty('protocolVersion')) {
                obj['protocolVersion'] = ApiClient.convertToType(data['protocolVersion'], 'String');
            }
            if (data.hasOwnProperty('sizeOnDisk')) {
                obj['sizeOnDisk'] = ApiClient.convertToType(data['sizeOnDisk'], 'Number');
            }
            if (data.hasOwnProperty('subversion')) {
                obj['subversion'] = ApiClient.convertToType(data['subversion'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetBlockchain200ResponseBackend</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetBlockchain200ResponseBackend</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['bestBlockHash'] && !(typeof data['bestBlockHash'] === 'string' || data['bestBlockHash'] instanceof String)) {
            throw new Error("Expected the field `bestBlockHash` to be a primitive type in the JSON string but got " + data['bestBlockHash']);
        }
        // ensure the json data is a string
        if (data['chain'] && !(typeof data['chain'] === 'string' || data['chain'] instanceof String)) {
            throw new Error("Expected the field `chain` to be a primitive type in the JSON string but got " + data['chain']);
        }
        // ensure the json data is a string
        if (data['difficulty'] && !(typeof data['difficulty'] === 'string' || data['difficulty'] instanceof String)) {
            throw new Error("Expected the field `difficulty` to be a primitive type in the JSON string but got " + data['difficulty']);
        }
        // ensure the json data is a string
        if (data['protocolVersion'] && !(typeof data['protocolVersion'] === 'string' || data['protocolVersion'] instanceof String)) {
            throw new Error("Expected the field `protocolVersion` to be a primitive type in the JSON string but got " + data['protocolVersion']);
        }
        // ensure the json data is a string
        if (data['subversion'] && !(typeof data['subversion'] === 'string' || data['subversion'] instanceof String)) {
            throw new Error("Expected the field `subversion` to be a primitive type in the JSON string but got " + data['subversion']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }

        return true;
    }


}



/**
 * @member {String} bestBlockHash
 */
GetBlockchain200ResponseBackend.prototype['bestBlockHash'] = undefined;

/**
 * @member {Number} blocks
 */
GetBlockchain200ResponseBackend.prototype['blocks'] = undefined;

/**
 * @member {String} chain
 */
GetBlockchain200ResponseBackend.prototype['chain'] = undefined;

/**
 * @member {String} difficulty
 */
GetBlockchain200ResponseBackend.prototype['difficulty'] = undefined;

/**
 * @member {Number} headers
 */
GetBlockchain200ResponseBackend.prototype['headers'] = undefined;

/**
 * @member {String} protocolVersion
 */
GetBlockchain200ResponseBackend.prototype['protocolVersion'] = undefined;

/**
 * @member {Number} sizeOnDisk
 */
GetBlockchain200ResponseBackend.prototype['sizeOnDisk'] = undefined;

/**
 * @member {String} subversion
 */
GetBlockchain200ResponseBackend.prototype['subversion'] = undefined;

/**
 * @member {String} version
 */
GetBlockchain200ResponseBackend.prototype['version'] = undefined;






export default GetBlockchain200ResponseBackend;

