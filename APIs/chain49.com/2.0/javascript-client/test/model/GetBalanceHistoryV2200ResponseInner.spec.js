/**
 * Chain49 API
 * Kickstart your next crypto project - extended trezor/blockbook API with 10+ blockchains available instantly and 50+ possible on request running on the finest hardware in Germany's best datacenters at Hetzner  Websocket only via api.chain49.com endpoint possible (RapidAPI does not support it yet)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: contact@chain49.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Chain49Api);
  }
}(this, function(expect, Chain49Api) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Chain49Api.GetBalanceHistoryV2200ResponseInner();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GetBalanceHistoryV2200ResponseInner', function() {
    it('should create an instance of GetBalanceHistoryV2200ResponseInner', function() {
      // uncomment below and update the code to test GetBalanceHistoryV2200ResponseInner
      //var instance = new Chain49Api.GetBalanceHistoryV2200ResponseInner();
      //expect(instance).to.be.a(Chain49Api.GetBalanceHistoryV2200ResponseInner);
    });

    it('should have the property rates (base name: "rates")', function() {
      // uncomment below and update the code to test the property rates
      //var instance = new Chain49Api.GetBalanceHistoryV2200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property received (base name: "received")', function() {
      // uncomment below and update the code to test the property received
      //var instance = new Chain49Api.GetBalanceHistoryV2200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property sent (base name: "sent")', function() {
      // uncomment below and update the code to test the property sent
      //var instance = new Chain49Api.GetBalanceHistoryV2200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property sentToSelf (base name: "sentToSelf")', function() {
      // uncomment below and update the code to test the property sentToSelf
      //var instance = new Chain49Api.GetBalanceHistoryV2200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property time (base name: "time")', function() {
      // uncomment below and update the code to test the property time
      //var instance = new Chain49Api.GetBalanceHistoryV2200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property txs (base name: "txs")', function() {
      // uncomment below and update the code to test the property txs
      //var instance = new Chain49Api.GetBalanceHistoryV2200ResponseInner();
      //expect(instance).to.be();
    });

  });

}));
