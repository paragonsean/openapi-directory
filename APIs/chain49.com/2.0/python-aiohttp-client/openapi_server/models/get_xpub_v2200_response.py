# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_xpub_v2200_response_tokens_inner import GetXpubV2200ResponseTokensInner
from openapi_server import util


class GetXpubV2200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: str=None, balance: str=None, items_on_page: int=None, page: int=None, secondary_value: float=None, tokens: List[GetXpubV2200ResponseTokensInner]=None, total_pages: int=None, total_received: str=None, total_sent: str=None, txids: List[str]=None, txs: int=None, unconfirmed_balance: str=None, unconfirmed_txs: int=None, used_tokens: int=None):
        """GetXpubV2200Response - a model defined in OpenAPI

        :param address: The address of this GetXpubV2200Response.
        :param balance: The balance of this GetXpubV2200Response.
        :param items_on_page: The items_on_page of this GetXpubV2200Response.
        :param page: The page of this GetXpubV2200Response.
        :param secondary_value: The secondary_value of this GetXpubV2200Response.
        :param tokens: The tokens of this GetXpubV2200Response.
        :param total_pages: The total_pages of this GetXpubV2200Response.
        :param total_received: The total_received of this GetXpubV2200Response.
        :param total_sent: The total_sent of this GetXpubV2200Response.
        :param txids: The txids of this GetXpubV2200Response.
        :param txs: The txs of this GetXpubV2200Response.
        :param unconfirmed_balance: The unconfirmed_balance of this GetXpubV2200Response.
        :param unconfirmed_txs: The unconfirmed_txs of this GetXpubV2200Response.
        :param used_tokens: The used_tokens of this GetXpubV2200Response.
        """
        self.openapi_types = {
            'address': str,
            'balance': str,
            'items_on_page': int,
            'page': int,
            'secondary_value': float,
            'tokens': List[GetXpubV2200ResponseTokensInner],
            'total_pages': int,
            'total_received': str,
            'total_sent': str,
            'txids': List[str],
            'txs': int,
            'unconfirmed_balance': str,
            'unconfirmed_txs': int,
            'used_tokens': int
        }

        self.attribute_map = {
            'address': 'address',
            'balance': 'balance',
            'items_on_page': 'itemsOnPage',
            'page': 'page',
            'secondary_value': 'secondaryValue',
            'tokens': 'tokens',
            'total_pages': 'totalPages',
            'total_received': 'totalReceived',
            'total_sent': 'totalSent',
            'txids': 'txids',
            'txs': 'txs',
            'unconfirmed_balance': 'unconfirmedBalance',
            'unconfirmed_txs': 'unconfirmedTxs',
            'used_tokens': 'usedTokens'
        }

        self._address = address
        self._balance = balance
        self._items_on_page = items_on_page
        self._page = page
        self._secondary_value = secondary_value
        self._tokens = tokens
        self._total_pages = total_pages
        self._total_received = total_received
        self._total_sent = total_sent
        self._txids = txids
        self._txs = txs
        self._unconfirmed_balance = unconfirmed_balance
        self._unconfirmed_txs = unconfirmed_txs
        self._used_tokens = used_tokens

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetXpubV2200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getXpubV2_200_response of this GetXpubV2200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this GetXpubV2200Response.


        :return: The address of this GetXpubV2200Response.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this GetXpubV2200Response.


        :param address: The address of this GetXpubV2200Response.
        :type address: str
        """

        self._address = address

    @property
    def balance(self):
        """Gets the balance of this GetXpubV2200Response.


        :return: The balance of this GetXpubV2200Response.
        :rtype: str
        """
        return self._balance

    @balance.setter
    def balance(self, balance):
        """Sets the balance of this GetXpubV2200Response.


        :param balance: The balance of this GetXpubV2200Response.
        :type balance: str
        """

        self._balance = balance

    @property
    def items_on_page(self):
        """Gets the items_on_page of this GetXpubV2200Response.


        :return: The items_on_page of this GetXpubV2200Response.
        :rtype: int
        """
        return self._items_on_page

    @items_on_page.setter
    def items_on_page(self, items_on_page):
        """Sets the items_on_page of this GetXpubV2200Response.


        :param items_on_page: The items_on_page of this GetXpubV2200Response.
        :type items_on_page: int
        """

        self._items_on_page = items_on_page

    @property
    def page(self):
        """Gets the page of this GetXpubV2200Response.


        :return: The page of this GetXpubV2200Response.
        :rtype: int
        """
        return self._page

    @page.setter
    def page(self, page):
        """Sets the page of this GetXpubV2200Response.


        :param page: The page of this GetXpubV2200Response.
        :type page: int
        """

        self._page = page

    @property
    def secondary_value(self):
        """Gets the secondary_value of this GetXpubV2200Response.


        :return: The secondary_value of this GetXpubV2200Response.
        :rtype: float
        """
        return self._secondary_value

    @secondary_value.setter
    def secondary_value(self, secondary_value):
        """Sets the secondary_value of this GetXpubV2200Response.


        :param secondary_value: The secondary_value of this GetXpubV2200Response.
        :type secondary_value: float
        """

        self._secondary_value = secondary_value

    @property
    def tokens(self):
        """Gets the tokens of this GetXpubV2200Response.


        :return: The tokens of this GetXpubV2200Response.
        :rtype: List[GetXpubV2200ResponseTokensInner]
        """
        return self._tokens

    @tokens.setter
    def tokens(self, tokens):
        """Sets the tokens of this GetXpubV2200Response.


        :param tokens: The tokens of this GetXpubV2200Response.
        :type tokens: List[GetXpubV2200ResponseTokensInner]
        """

        self._tokens = tokens

    @property
    def total_pages(self):
        """Gets the total_pages of this GetXpubV2200Response.


        :return: The total_pages of this GetXpubV2200Response.
        :rtype: int
        """
        return self._total_pages

    @total_pages.setter
    def total_pages(self, total_pages):
        """Sets the total_pages of this GetXpubV2200Response.


        :param total_pages: The total_pages of this GetXpubV2200Response.
        :type total_pages: int
        """

        self._total_pages = total_pages

    @property
    def total_received(self):
        """Gets the total_received of this GetXpubV2200Response.


        :return: The total_received of this GetXpubV2200Response.
        :rtype: str
        """
        return self._total_received

    @total_received.setter
    def total_received(self, total_received):
        """Sets the total_received of this GetXpubV2200Response.


        :param total_received: The total_received of this GetXpubV2200Response.
        :type total_received: str
        """

        self._total_received = total_received

    @property
    def total_sent(self):
        """Gets the total_sent of this GetXpubV2200Response.


        :return: The total_sent of this GetXpubV2200Response.
        :rtype: str
        """
        return self._total_sent

    @total_sent.setter
    def total_sent(self, total_sent):
        """Sets the total_sent of this GetXpubV2200Response.


        :param total_sent: The total_sent of this GetXpubV2200Response.
        :type total_sent: str
        """

        self._total_sent = total_sent

    @property
    def txids(self):
        """Gets the txids of this GetXpubV2200Response.


        :return: The txids of this GetXpubV2200Response.
        :rtype: List[str]
        """
        return self._txids

    @txids.setter
    def txids(self, txids):
        """Sets the txids of this GetXpubV2200Response.


        :param txids: The txids of this GetXpubV2200Response.
        :type txids: List[str]
        """

        self._txids = txids

    @property
    def txs(self):
        """Gets the txs of this GetXpubV2200Response.


        :return: The txs of this GetXpubV2200Response.
        :rtype: int
        """
        return self._txs

    @txs.setter
    def txs(self, txs):
        """Sets the txs of this GetXpubV2200Response.


        :param txs: The txs of this GetXpubV2200Response.
        :type txs: int
        """

        self._txs = txs

    @property
    def unconfirmed_balance(self):
        """Gets the unconfirmed_balance of this GetXpubV2200Response.


        :return: The unconfirmed_balance of this GetXpubV2200Response.
        :rtype: str
        """
        return self._unconfirmed_balance

    @unconfirmed_balance.setter
    def unconfirmed_balance(self, unconfirmed_balance):
        """Sets the unconfirmed_balance of this GetXpubV2200Response.


        :param unconfirmed_balance: The unconfirmed_balance of this GetXpubV2200Response.
        :type unconfirmed_balance: str
        """

        self._unconfirmed_balance = unconfirmed_balance

    @property
    def unconfirmed_txs(self):
        """Gets the unconfirmed_txs of this GetXpubV2200Response.


        :return: The unconfirmed_txs of this GetXpubV2200Response.
        :rtype: int
        """
        return self._unconfirmed_txs

    @unconfirmed_txs.setter
    def unconfirmed_txs(self, unconfirmed_txs):
        """Sets the unconfirmed_txs of this GetXpubV2200Response.


        :param unconfirmed_txs: The unconfirmed_txs of this GetXpubV2200Response.
        :type unconfirmed_txs: int
        """

        self._unconfirmed_txs = unconfirmed_txs

    @property
    def used_tokens(self):
        """Gets the used_tokens of this GetXpubV2200Response.


        :return: The used_tokens of this GetXpubV2200Response.
        :rtype: int
        """
        return self._used_tokens

    @used_tokens.setter
    def used_tokens(self, used_tokens):
        """Sets the used_tokens of this GetXpubV2200Response.


        :param used_tokens: The used_tokens of this GetXpubV2200Response.
        :type used_tokens: int
        """

        self._used_tokens = used_tokens
