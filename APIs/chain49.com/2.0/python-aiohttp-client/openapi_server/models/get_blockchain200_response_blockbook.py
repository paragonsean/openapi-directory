# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetBlockchain200ResponseBlockbook(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, about: str=None, best_height: int=None, build_time: str=None, coin: str=None, current_fiat_rates_time: str=None, db_size: int=None, decimals: int=None, git_commit: str=None, has_fiat_rates: bool=None, historical_fiat_rates_time: str=None, host: str=None, in_sync: bool=None, in_sync_mempool: bool=None, initial_sync: bool=None, last_block_time: str=None, last_mempool_time: str=None, mempool_size: int=None, sync_mode: bool=None, version: str=None):
        """GetBlockchain200ResponseBlockbook - a model defined in OpenAPI

        :param about: The about of this GetBlockchain200ResponseBlockbook.
        :param best_height: The best_height of this GetBlockchain200ResponseBlockbook.
        :param build_time: The build_time of this GetBlockchain200ResponseBlockbook.
        :param coin: The coin of this GetBlockchain200ResponseBlockbook.
        :param current_fiat_rates_time: The current_fiat_rates_time of this GetBlockchain200ResponseBlockbook.
        :param db_size: The db_size of this GetBlockchain200ResponseBlockbook.
        :param decimals: The decimals of this GetBlockchain200ResponseBlockbook.
        :param git_commit: The git_commit of this GetBlockchain200ResponseBlockbook.
        :param has_fiat_rates: The has_fiat_rates of this GetBlockchain200ResponseBlockbook.
        :param historical_fiat_rates_time: The historical_fiat_rates_time of this GetBlockchain200ResponseBlockbook.
        :param host: The host of this GetBlockchain200ResponseBlockbook.
        :param in_sync: The in_sync of this GetBlockchain200ResponseBlockbook.
        :param in_sync_mempool: The in_sync_mempool of this GetBlockchain200ResponseBlockbook.
        :param initial_sync: The initial_sync of this GetBlockchain200ResponseBlockbook.
        :param last_block_time: The last_block_time of this GetBlockchain200ResponseBlockbook.
        :param last_mempool_time: The last_mempool_time of this GetBlockchain200ResponseBlockbook.
        :param mempool_size: The mempool_size of this GetBlockchain200ResponseBlockbook.
        :param sync_mode: The sync_mode of this GetBlockchain200ResponseBlockbook.
        :param version: The version of this GetBlockchain200ResponseBlockbook.
        """
        self.openapi_types = {
            'about': str,
            'best_height': int,
            'build_time': str,
            'coin': str,
            'current_fiat_rates_time': str,
            'db_size': int,
            'decimals': int,
            'git_commit': str,
            'has_fiat_rates': bool,
            'historical_fiat_rates_time': str,
            'host': str,
            'in_sync': bool,
            'in_sync_mempool': bool,
            'initial_sync': bool,
            'last_block_time': str,
            'last_mempool_time': str,
            'mempool_size': int,
            'sync_mode': bool,
            'version': str
        }

        self.attribute_map = {
            'about': 'about',
            'best_height': 'bestHeight',
            'build_time': 'buildTime',
            'coin': 'coin',
            'current_fiat_rates_time': 'currentFiatRatesTime',
            'db_size': 'dbSize',
            'decimals': 'decimals',
            'git_commit': 'gitCommit',
            'has_fiat_rates': 'hasFiatRates',
            'historical_fiat_rates_time': 'historicalFiatRatesTime',
            'host': 'host',
            'in_sync': 'inSync',
            'in_sync_mempool': 'inSyncMempool',
            'initial_sync': 'initialSync',
            'last_block_time': 'lastBlockTime',
            'last_mempool_time': 'lastMempoolTime',
            'mempool_size': 'mempoolSize',
            'sync_mode': 'syncMode',
            'version': 'version'
        }

        self._about = about
        self._best_height = best_height
        self._build_time = build_time
        self._coin = coin
        self._current_fiat_rates_time = current_fiat_rates_time
        self._db_size = db_size
        self._decimals = decimals
        self._git_commit = git_commit
        self._has_fiat_rates = has_fiat_rates
        self._historical_fiat_rates_time = historical_fiat_rates_time
        self._host = host
        self._in_sync = in_sync
        self._in_sync_mempool = in_sync_mempool
        self._initial_sync = initial_sync
        self._last_block_time = last_block_time
        self._last_mempool_time = last_mempool_time
        self._mempool_size = mempool_size
        self._sync_mode = sync_mode
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetBlockchain200ResponseBlockbook':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getBlockchain_200_response_blockbook of this GetBlockchain200ResponseBlockbook.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def about(self):
        """Gets the about of this GetBlockchain200ResponseBlockbook.


        :return: The about of this GetBlockchain200ResponseBlockbook.
        :rtype: str
        """
        return self._about

    @about.setter
    def about(self, about):
        """Sets the about of this GetBlockchain200ResponseBlockbook.


        :param about: The about of this GetBlockchain200ResponseBlockbook.
        :type about: str
        """

        self._about = about

    @property
    def best_height(self):
        """Gets the best_height of this GetBlockchain200ResponseBlockbook.


        :return: The best_height of this GetBlockchain200ResponseBlockbook.
        :rtype: int
        """
        return self._best_height

    @best_height.setter
    def best_height(self, best_height):
        """Sets the best_height of this GetBlockchain200ResponseBlockbook.


        :param best_height: The best_height of this GetBlockchain200ResponseBlockbook.
        :type best_height: int
        """

        self._best_height = best_height

    @property
    def build_time(self):
        """Gets the build_time of this GetBlockchain200ResponseBlockbook.


        :return: The build_time of this GetBlockchain200ResponseBlockbook.
        :rtype: str
        """
        return self._build_time

    @build_time.setter
    def build_time(self, build_time):
        """Sets the build_time of this GetBlockchain200ResponseBlockbook.


        :param build_time: The build_time of this GetBlockchain200ResponseBlockbook.
        :type build_time: str
        """

        self._build_time = build_time

    @property
    def coin(self):
        """Gets the coin of this GetBlockchain200ResponseBlockbook.


        :return: The coin of this GetBlockchain200ResponseBlockbook.
        :rtype: str
        """
        return self._coin

    @coin.setter
    def coin(self, coin):
        """Sets the coin of this GetBlockchain200ResponseBlockbook.


        :param coin: The coin of this GetBlockchain200ResponseBlockbook.
        :type coin: str
        """

        self._coin = coin

    @property
    def current_fiat_rates_time(self):
        """Gets the current_fiat_rates_time of this GetBlockchain200ResponseBlockbook.


        :return: The current_fiat_rates_time of this GetBlockchain200ResponseBlockbook.
        :rtype: str
        """
        return self._current_fiat_rates_time

    @current_fiat_rates_time.setter
    def current_fiat_rates_time(self, current_fiat_rates_time):
        """Sets the current_fiat_rates_time of this GetBlockchain200ResponseBlockbook.


        :param current_fiat_rates_time: The current_fiat_rates_time of this GetBlockchain200ResponseBlockbook.
        :type current_fiat_rates_time: str
        """

        self._current_fiat_rates_time = current_fiat_rates_time

    @property
    def db_size(self):
        """Gets the db_size of this GetBlockchain200ResponseBlockbook.


        :return: The db_size of this GetBlockchain200ResponseBlockbook.
        :rtype: int
        """
        return self._db_size

    @db_size.setter
    def db_size(self, db_size):
        """Sets the db_size of this GetBlockchain200ResponseBlockbook.


        :param db_size: The db_size of this GetBlockchain200ResponseBlockbook.
        :type db_size: int
        """

        self._db_size = db_size

    @property
    def decimals(self):
        """Gets the decimals of this GetBlockchain200ResponseBlockbook.


        :return: The decimals of this GetBlockchain200ResponseBlockbook.
        :rtype: int
        """
        return self._decimals

    @decimals.setter
    def decimals(self, decimals):
        """Sets the decimals of this GetBlockchain200ResponseBlockbook.


        :param decimals: The decimals of this GetBlockchain200ResponseBlockbook.
        :type decimals: int
        """

        self._decimals = decimals

    @property
    def git_commit(self):
        """Gets the git_commit of this GetBlockchain200ResponseBlockbook.


        :return: The git_commit of this GetBlockchain200ResponseBlockbook.
        :rtype: str
        """
        return self._git_commit

    @git_commit.setter
    def git_commit(self, git_commit):
        """Sets the git_commit of this GetBlockchain200ResponseBlockbook.


        :param git_commit: The git_commit of this GetBlockchain200ResponseBlockbook.
        :type git_commit: str
        """

        self._git_commit = git_commit

    @property
    def has_fiat_rates(self):
        """Gets the has_fiat_rates of this GetBlockchain200ResponseBlockbook.


        :return: The has_fiat_rates of this GetBlockchain200ResponseBlockbook.
        :rtype: bool
        """
        return self._has_fiat_rates

    @has_fiat_rates.setter
    def has_fiat_rates(self, has_fiat_rates):
        """Sets the has_fiat_rates of this GetBlockchain200ResponseBlockbook.


        :param has_fiat_rates: The has_fiat_rates of this GetBlockchain200ResponseBlockbook.
        :type has_fiat_rates: bool
        """

        self._has_fiat_rates = has_fiat_rates

    @property
    def historical_fiat_rates_time(self):
        """Gets the historical_fiat_rates_time of this GetBlockchain200ResponseBlockbook.


        :return: The historical_fiat_rates_time of this GetBlockchain200ResponseBlockbook.
        :rtype: str
        """
        return self._historical_fiat_rates_time

    @historical_fiat_rates_time.setter
    def historical_fiat_rates_time(self, historical_fiat_rates_time):
        """Sets the historical_fiat_rates_time of this GetBlockchain200ResponseBlockbook.


        :param historical_fiat_rates_time: The historical_fiat_rates_time of this GetBlockchain200ResponseBlockbook.
        :type historical_fiat_rates_time: str
        """

        self._historical_fiat_rates_time = historical_fiat_rates_time

    @property
    def host(self):
        """Gets the host of this GetBlockchain200ResponseBlockbook.


        :return: The host of this GetBlockchain200ResponseBlockbook.
        :rtype: str
        """
        return self._host

    @host.setter
    def host(self, host):
        """Sets the host of this GetBlockchain200ResponseBlockbook.


        :param host: The host of this GetBlockchain200ResponseBlockbook.
        :type host: str
        """

        self._host = host

    @property
    def in_sync(self):
        """Gets the in_sync of this GetBlockchain200ResponseBlockbook.


        :return: The in_sync of this GetBlockchain200ResponseBlockbook.
        :rtype: bool
        """
        return self._in_sync

    @in_sync.setter
    def in_sync(self, in_sync):
        """Sets the in_sync of this GetBlockchain200ResponseBlockbook.


        :param in_sync: The in_sync of this GetBlockchain200ResponseBlockbook.
        :type in_sync: bool
        """

        self._in_sync = in_sync

    @property
    def in_sync_mempool(self):
        """Gets the in_sync_mempool of this GetBlockchain200ResponseBlockbook.


        :return: The in_sync_mempool of this GetBlockchain200ResponseBlockbook.
        :rtype: bool
        """
        return self._in_sync_mempool

    @in_sync_mempool.setter
    def in_sync_mempool(self, in_sync_mempool):
        """Sets the in_sync_mempool of this GetBlockchain200ResponseBlockbook.


        :param in_sync_mempool: The in_sync_mempool of this GetBlockchain200ResponseBlockbook.
        :type in_sync_mempool: bool
        """

        self._in_sync_mempool = in_sync_mempool

    @property
    def initial_sync(self):
        """Gets the initial_sync of this GetBlockchain200ResponseBlockbook.


        :return: The initial_sync of this GetBlockchain200ResponseBlockbook.
        :rtype: bool
        """
        return self._initial_sync

    @initial_sync.setter
    def initial_sync(self, initial_sync):
        """Sets the initial_sync of this GetBlockchain200ResponseBlockbook.


        :param initial_sync: The initial_sync of this GetBlockchain200ResponseBlockbook.
        :type initial_sync: bool
        """

        self._initial_sync = initial_sync

    @property
    def last_block_time(self):
        """Gets the last_block_time of this GetBlockchain200ResponseBlockbook.


        :return: The last_block_time of this GetBlockchain200ResponseBlockbook.
        :rtype: str
        """
        return self._last_block_time

    @last_block_time.setter
    def last_block_time(self, last_block_time):
        """Sets the last_block_time of this GetBlockchain200ResponseBlockbook.


        :param last_block_time: The last_block_time of this GetBlockchain200ResponseBlockbook.
        :type last_block_time: str
        """

        self._last_block_time = last_block_time

    @property
    def last_mempool_time(self):
        """Gets the last_mempool_time of this GetBlockchain200ResponseBlockbook.


        :return: The last_mempool_time of this GetBlockchain200ResponseBlockbook.
        :rtype: str
        """
        return self._last_mempool_time

    @last_mempool_time.setter
    def last_mempool_time(self, last_mempool_time):
        """Sets the last_mempool_time of this GetBlockchain200ResponseBlockbook.


        :param last_mempool_time: The last_mempool_time of this GetBlockchain200ResponseBlockbook.
        :type last_mempool_time: str
        """

        self._last_mempool_time = last_mempool_time

    @property
    def mempool_size(self):
        """Gets the mempool_size of this GetBlockchain200ResponseBlockbook.


        :return: The mempool_size of this GetBlockchain200ResponseBlockbook.
        :rtype: int
        """
        return self._mempool_size

    @mempool_size.setter
    def mempool_size(self, mempool_size):
        """Sets the mempool_size of this GetBlockchain200ResponseBlockbook.


        :param mempool_size: The mempool_size of this GetBlockchain200ResponseBlockbook.
        :type mempool_size: int
        """

        self._mempool_size = mempool_size

    @property
    def sync_mode(self):
        """Gets the sync_mode of this GetBlockchain200ResponseBlockbook.


        :return: The sync_mode of this GetBlockchain200ResponseBlockbook.
        :rtype: bool
        """
        return self._sync_mode

    @sync_mode.setter
    def sync_mode(self, sync_mode):
        """Sets the sync_mode of this GetBlockchain200ResponseBlockbook.


        :param sync_mode: The sync_mode of this GetBlockchain200ResponseBlockbook.
        :type sync_mode: bool
        """

        self._sync_mode = sync_mode

    @property
    def version(self):
        """Gets the version of this GetBlockchain200ResponseBlockbook.


        :return: The version of this GetBlockchain200ResponseBlockbook.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this GetBlockchain200ResponseBlockbook.


        :param version: The version of this GetBlockchain200ResponseBlockbook.
        :type version: str
        """

        self._version = version
