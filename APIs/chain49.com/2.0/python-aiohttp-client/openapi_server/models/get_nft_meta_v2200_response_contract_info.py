# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetNFTMetaV2200ResponseContractInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, contract: str=None, decimals: int=None, name: str=None, symbol: str=None, type: str=None):
        """GetNFTMetaV2200ResponseContractInfo - a model defined in OpenAPI

        :param contract: The contract of this GetNFTMetaV2200ResponseContractInfo.
        :param decimals: The decimals of this GetNFTMetaV2200ResponseContractInfo.
        :param name: The name of this GetNFTMetaV2200ResponseContractInfo.
        :param symbol: The symbol of this GetNFTMetaV2200ResponseContractInfo.
        :param type: The type of this GetNFTMetaV2200ResponseContractInfo.
        """
        self.openapi_types = {
            'contract': str,
            'decimals': int,
            'name': str,
            'symbol': str,
            'type': str
        }

        self.attribute_map = {
            'contract': 'contract',
            'decimals': 'decimals',
            'name': 'name',
            'symbol': 'symbol',
            'type': 'type'
        }

        self._contract = contract
        self._decimals = decimals
        self._name = name
        self._symbol = symbol
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetNFTMetaV2200ResponseContractInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getNFTMetaV2_200_response_contractInfo of this GetNFTMetaV2200ResponseContractInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def contract(self):
        """Gets the contract of this GetNFTMetaV2200ResponseContractInfo.


        :return: The contract of this GetNFTMetaV2200ResponseContractInfo.
        :rtype: str
        """
        return self._contract

    @contract.setter
    def contract(self, contract):
        """Sets the contract of this GetNFTMetaV2200ResponseContractInfo.


        :param contract: The contract of this GetNFTMetaV2200ResponseContractInfo.
        :type contract: str
        """

        self._contract = contract

    @property
    def decimals(self):
        """Gets the decimals of this GetNFTMetaV2200ResponseContractInfo.


        :return: The decimals of this GetNFTMetaV2200ResponseContractInfo.
        :rtype: int
        """
        return self._decimals

    @decimals.setter
    def decimals(self, decimals):
        """Sets the decimals of this GetNFTMetaV2200ResponseContractInfo.


        :param decimals: The decimals of this GetNFTMetaV2200ResponseContractInfo.
        :type decimals: int
        """

        self._decimals = decimals

    @property
    def name(self):
        """Gets the name of this GetNFTMetaV2200ResponseContractInfo.


        :return: The name of this GetNFTMetaV2200ResponseContractInfo.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetNFTMetaV2200ResponseContractInfo.


        :param name: The name of this GetNFTMetaV2200ResponseContractInfo.
        :type name: str
        """

        self._name = name

    @property
    def symbol(self):
        """Gets the symbol of this GetNFTMetaV2200ResponseContractInfo.


        :return: The symbol of this GetNFTMetaV2200ResponseContractInfo.
        :rtype: str
        """
        return self._symbol

    @symbol.setter
    def symbol(self, symbol):
        """Sets the symbol of this GetNFTMetaV2200ResponseContractInfo.


        :param symbol: The symbol of this GetNFTMetaV2200ResponseContractInfo.
        :type symbol: str
        """

        self._symbol = symbol

    @property
    def type(self):
        """Gets the type of this GetNFTMetaV2200ResponseContractInfo.


        :return: The type of this GetNFTMetaV2200ResponseContractInfo.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GetNFTMetaV2200ResponseContractInfo.


        :param type: The type of this GetNFTMetaV2200ResponseContractInfo.
        :type type: str
        """

        self._type = type
