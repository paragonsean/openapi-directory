/**
 * Chain49 API
 * Kickstart your next crypto project - extended trezor/blockbook API with 10+ blockchains available instantly and 50+ possible on request running on the finest hardware in Germany's best datacenters at Hetzner  Websocket only via api.chain49.com endpoint possible (RapidAPI does not support it yet)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: contact@chain49.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetRawBlockV2_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetRawBlockV2_200_response::OAIGetRawBlockV2_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetRawBlockV2_200_response::OAIGetRawBlockV2_200_response() {
    this->initializeModel();
}

OAIGetRawBlockV2_200_response::~OAIGetRawBlockV2_200_response() {}

void OAIGetRawBlockV2_200_response::initializeModel() {

    m_hex_isSet = false;
    m_hex_isValid = false;
}

void OAIGetRawBlockV2_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetRawBlockV2_200_response::fromJsonObject(QJsonObject json) {

    m_hex_isValid = ::OpenAPI::fromJsonValue(m_hex, json[QString("hex")]);
    m_hex_isSet = !json[QString("hex")].isNull() && m_hex_isValid;
}

QString OAIGetRawBlockV2_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetRawBlockV2_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_hex_isSet) {
        obj.insert(QString("hex"), ::OpenAPI::toJsonValue(m_hex));
    }
    return obj;
}

QString OAIGetRawBlockV2_200_response::getHex() const {
    return m_hex;
}
void OAIGetRawBlockV2_200_response::setHex(const QString &hex) {
    m_hex = hex;
    m_hex_isSet = true;
}

bool OAIGetRawBlockV2_200_response::is_hex_Set() const{
    return m_hex_isSet;
}

bool OAIGetRawBlockV2_200_response::is_hex_Valid() const{
    return m_hex_isValid;
}

bool OAIGetRawBlockV2_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_hex_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetRawBlockV2_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
