/**
 * Chain49 API
 * Kickstart your next crypto project - extended trezor/blockbook API with 10+ blockchains available instantly and 50+ possible on request running on the finest hardware in Germany's best datacenters at Hetzner  Websocket only via api.chain49.com endpoint possible (RapidAPI does not support it yet)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: contact@chain49.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetBlockV2_200_response_txs_inner.h
 *
 * 
 */

#ifndef OAIGetBlockV2_200_response_txs_inner_H
#define OAIGetBlockV2_200_response_txs_inner_H

#include <QJsonObject>

#include "OAIGetBlockV2_200_response_txs_inner_vin_inner.h"
#include "OAIGetBlockV2_200_response_txs_inner_vout_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetBlockV2_200_response_txs_inner_vin_inner;
class OAIGetBlockV2_200_response_txs_inner_vout_inner;

class OAIGetBlockV2_200_response_txs_inner : public OAIObject {
public:
    OAIGetBlockV2_200_response_txs_inner();
    OAIGetBlockV2_200_response_txs_inner(QString json);
    ~OAIGetBlockV2_200_response_txs_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBlockHash() const;
    void setBlockHash(const QString &block_hash);
    bool is_block_hash_Set() const;
    bool is_block_hash_Valid() const;

    qint32 getBlockHeight() const;
    void setBlockHeight(const qint32 &block_height);
    bool is_block_height_Set() const;
    bool is_block_height_Valid() const;

    qint32 getBlockTime() const;
    void setBlockTime(const qint32 &block_time);
    bool is_block_time_Set() const;
    bool is_block_time_Valid() const;

    qint32 getConfirmations() const;
    void setConfirmations(const qint32 &confirmations);
    bool is_confirmations_Set() const;
    bool is_confirmations_Valid() const;

    QString getFees() const;
    void setFees(const QString &fees);
    bool is_fees_Set() const;
    bool is_fees_Valid() const;

    QString getTxid() const;
    void setTxid(const QString &txid);
    bool is_txid_Set() const;
    bool is_txid_Valid() const;

    QString getValue() const;
    void setValue(const QString &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    QString getValueIn() const;
    void setValueIn(const QString &value_in);
    bool is_value_in_Set() const;
    bool is_value_in_Valid() const;

    QList<OAIGetBlockV2_200_response_txs_inner_vin_inner> getVin() const;
    void setVin(const QList<OAIGetBlockV2_200_response_txs_inner_vin_inner> &vin);
    bool is_vin_Set() const;
    bool is_vin_Valid() const;

    QList<OAIGetBlockV2_200_response_txs_inner_vout_inner> getVout() const;
    void setVout(const QList<OAIGetBlockV2_200_response_txs_inner_vout_inner> &vout);
    bool is_vout_Set() const;
    bool is_vout_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_block_hash;
    bool m_block_hash_isSet;
    bool m_block_hash_isValid;

    qint32 m_block_height;
    bool m_block_height_isSet;
    bool m_block_height_isValid;

    qint32 m_block_time;
    bool m_block_time_isSet;
    bool m_block_time_isValid;

    qint32 m_confirmations;
    bool m_confirmations_isSet;
    bool m_confirmations_isValid;

    QString m_fees;
    bool m_fees_isSet;
    bool m_fees_isValid;

    QString m_txid;
    bool m_txid_isSet;
    bool m_txid_isValid;

    QString m_value;
    bool m_value_isSet;
    bool m_value_isValid;

    QString m_value_in;
    bool m_value_in_isSet;
    bool m_value_in_isValid;

    QList<OAIGetBlockV2_200_response_txs_inner_vin_inner> m_vin;
    bool m_vin_isSet;
    bool m_vin_isValid;

    QList<OAIGetBlockV2_200_response_txs_inner_vout_inner> m_vout;
    bool m_vout_isSet;
    bool m_vout_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetBlockV2_200_response_txs_inner)

#endif // OAIGetBlockV2_200_response_txs_inner_H
