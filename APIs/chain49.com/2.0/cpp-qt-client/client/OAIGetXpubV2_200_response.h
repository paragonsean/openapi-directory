/**
 * Chain49 API
 * Kickstart your next crypto project - extended trezor/blockbook API with 10+ blockchains available instantly and 50+ possible on request running on the finest hardware in Germany's best datacenters at Hetzner  Websocket only via api.chain49.com endpoint possible (RapidAPI does not support it yet)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: contact@chain49.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetXpubV2_200_response.h
 *
 * 
 */

#ifndef OAIGetXpubV2_200_response_H
#define OAIGetXpubV2_200_response_H

#include <QJsonObject>

#include "OAIGetXpubV2_200_response_tokens_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetXpubV2_200_response_tokens_inner;

class OAIGetXpubV2_200_response : public OAIObject {
public:
    OAIGetXpubV2_200_response();
    OAIGetXpubV2_200_response(QString json);
    ~OAIGetXpubV2_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAddress() const;
    void setAddress(const QString &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    QString getBalance() const;
    void setBalance(const QString &balance);
    bool is_balance_Set() const;
    bool is_balance_Valid() const;

    qint32 getItemsOnPage() const;
    void setItemsOnPage(const qint32 &items_on_page);
    bool is_items_on_page_Set() const;
    bool is_items_on_page_Valid() const;

    qint32 getPage() const;
    void setPage(const qint32 &page);
    bool is_page_Set() const;
    bool is_page_Valid() const;

    double getSecondaryValue() const;
    void setSecondaryValue(const double &secondary_value);
    bool is_secondary_value_Set() const;
    bool is_secondary_value_Valid() const;

    QList<OAIGetXpubV2_200_response_tokens_inner> getTokens() const;
    void setTokens(const QList<OAIGetXpubV2_200_response_tokens_inner> &tokens);
    bool is_tokens_Set() const;
    bool is_tokens_Valid() const;

    qint32 getTotalPages() const;
    void setTotalPages(const qint32 &total_pages);
    bool is_total_pages_Set() const;
    bool is_total_pages_Valid() const;

    QString getTotalReceived() const;
    void setTotalReceived(const QString &total_received);
    bool is_total_received_Set() const;
    bool is_total_received_Valid() const;

    QString getTotalSent() const;
    void setTotalSent(const QString &total_sent);
    bool is_total_sent_Set() const;
    bool is_total_sent_Valid() const;

    QList<QString> getTxids() const;
    void setTxids(const QList<QString> &txids);
    bool is_txids_Set() const;
    bool is_txids_Valid() const;

    qint32 getTxs() const;
    void setTxs(const qint32 &txs);
    bool is_txs_Set() const;
    bool is_txs_Valid() const;

    QString getUnconfirmedBalance() const;
    void setUnconfirmedBalance(const QString &unconfirmed_balance);
    bool is_unconfirmed_balance_Set() const;
    bool is_unconfirmed_balance_Valid() const;

    qint32 getUnconfirmedTxs() const;
    void setUnconfirmedTxs(const qint32 &unconfirmed_txs);
    bool is_unconfirmed_txs_Set() const;
    bool is_unconfirmed_txs_Valid() const;

    qint32 getUsedTokens() const;
    void setUsedTokens(const qint32 &used_tokens);
    bool is_used_tokens_Set() const;
    bool is_used_tokens_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    QString m_balance;
    bool m_balance_isSet;
    bool m_balance_isValid;

    qint32 m_items_on_page;
    bool m_items_on_page_isSet;
    bool m_items_on_page_isValid;

    qint32 m_page;
    bool m_page_isSet;
    bool m_page_isValid;

    double m_secondary_value;
    bool m_secondary_value_isSet;
    bool m_secondary_value_isValid;

    QList<OAIGetXpubV2_200_response_tokens_inner> m_tokens;
    bool m_tokens_isSet;
    bool m_tokens_isValid;

    qint32 m_total_pages;
    bool m_total_pages_isSet;
    bool m_total_pages_isValid;

    QString m_total_received;
    bool m_total_received_isSet;
    bool m_total_received_isValid;

    QString m_total_sent;
    bool m_total_sent_isSet;
    bool m_total_sent_isValid;

    QList<QString> m_txids;
    bool m_txids_isSet;
    bool m_txids_isValid;

    qint32 m_txs;
    bool m_txs_isSet;
    bool m_txs_isValid;

    QString m_unconfirmed_balance;
    bool m_unconfirmed_balance_isSet;
    bool m_unconfirmed_balance_isValid;

    qint32 m_unconfirmed_txs;
    bool m_unconfirmed_txs_isSet;
    bool m_unconfirmed_txs_isValid;

    qint32 m_used_tokens;
    bool m_used_tokens_isSet;
    bool m_used_tokens_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetXpubV2_200_response)

#endif // OAIGetXpubV2_200_response_H
