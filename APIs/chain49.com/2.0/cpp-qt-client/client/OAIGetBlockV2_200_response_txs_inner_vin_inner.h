/**
 * Chain49 API
 * Kickstart your next crypto project - extended trezor/blockbook API with 10+ blockchains available instantly and 50+ possible on request running on the finest hardware in Germany's best datacenters at Hetzner  Websocket only via api.chain49.com endpoint possible (RapidAPI does not support it yet)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: contact@chain49.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetBlockV2_200_response_txs_inner_vin_inner.h
 *
 * 
 */

#ifndef OAIGetBlockV2_200_response_txs_inner_vin_inner_H
#define OAIGetBlockV2_200_response_txs_inner_vin_inner_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetBlockV2_200_response_txs_inner_vin_inner : public OAIObject {
public:
    OAIGetBlockV2_200_response_txs_inner_vin_inner();
    OAIGetBlockV2_200_response_txs_inner_vin_inner(QString json);
    ~OAIGetBlockV2_200_response_txs_inner_vin_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isIsAddress() const;
    void setIsAddress(const bool &is_address);
    bool is_is_address_Set() const;
    bool is_is_address_Valid() const;

    qint32 getN() const;
    void setN(const qint32 &n);
    bool is_n_Set() const;
    bool is_n_Valid() const;

    QString getValue() const;
    void setValue(const QString &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_is_address;
    bool m_is_address_isSet;
    bool m_is_address_isValid;

    qint32 m_n;
    bool m_n_isSet;
    bool m_n_isValid;

    QString m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetBlockV2_200_response_txs_inner_vin_inner)

#endif // OAIGetBlockV2_200_response_txs_inner_vin_inner_H
