/**
 * Chain49 API
 * Kickstart your next crypto project - extended trezor/blockbook API with 10+ blockchains available instantly and 50+ possible on request running on the finest hardware in Germany's best datacenters at Hetzner  Websocket only via api.chain49.com endpoint possible (RapidAPI does not support it yet)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: contact@chain49.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetBlockHashV2_200_response.h
 *
 * 
 */

#ifndef OAIGetBlockHashV2_200_response_H
#define OAIGetBlockHashV2_200_response_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetBlockHashV2_200_response : public OAIObject {
public:
    OAIGetBlockHashV2_200_response();
    OAIGetBlockHashV2_200_response(QString json);
    ~OAIGetBlockHashV2_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBlockHash() const;
    void setBlockHash(const QString &block_hash);
    bool is_block_hash_Set() const;
    bool is_block_hash_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_block_hash;
    bool m_block_hash_isSet;
    bool m_block_hash_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetBlockHashV2_200_response)

#endif // OAIGetBlockHashV2_200_response_H
