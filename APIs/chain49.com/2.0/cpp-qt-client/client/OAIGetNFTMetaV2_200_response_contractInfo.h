/**
 * Chain49 API
 * Kickstart your next crypto project - extended trezor/blockbook API with 10+ blockchains available instantly and 50+ possible on request running on the finest hardware in Germany's best datacenters at Hetzner  Websocket only via api.chain49.com endpoint possible (RapidAPI does not support it yet)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: contact@chain49.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetNFTMetaV2_200_response_contractInfo.h
 *
 * 
 */

#ifndef OAIGetNFTMetaV2_200_response_contractInfo_H
#define OAIGetNFTMetaV2_200_response_contractInfo_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetNFTMetaV2_200_response_contractInfo : public OAIObject {
public:
    OAIGetNFTMetaV2_200_response_contractInfo();
    OAIGetNFTMetaV2_200_response_contractInfo(QString json);
    ~OAIGetNFTMetaV2_200_response_contractInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getContract() const;
    void setContract(const QString &contract);
    bool is_contract_Set() const;
    bool is_contract_Valid() const;

    qint32 getDecimals() const;
    void setDecimals(const qint32 &decimals);
    bool is_decimals_Set() const;
    bool is_decimals_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getSymbol() const;
    void setSymbol(const QString &symbol);
    bool is_symbol_Set() const;
    bool is_symbol_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_contract;
    bool m_contract_isSet;
    bool m_contract_isValid;

    qint32 m_decimals;
    bool m_decimals_isSet;
    bool m_decimals_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_symbol;
    bool m_symbol_isSet;
    bool m_symbol_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetNFTMetaV2_200_response_contractInfo)

#endif // OAIGetNFTMetaV2_200_response_contractInfo_H
