/*
 * Chain49 API
 * Kickstart your next crypto project - extended trezor/blockbook API with 10+ blockchains available instantly and 50+ possible on request running on the finest hardware in Germany's best datacenters at Hetzner  Websocket only via api.chain49.com endpoint possible (RapidAPI does not support it yet)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: contact@chain49.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GetBlockchain200ResponseBackend
 */
public class GetBlockchain200ResponseBackendTest {
    private final GetBlockchain200ResponseBackend model = new GetBlockchain200ResponseBackend();

    /**
     * Model tests for GetBlockchain200ResponseBackend
     */
    @Test
    public void testGetBlockchain200ResponseBackend() {
        // TODO: test GetBlockchain200ResponseBackend
    }

    /**
     * Test the property 'bestBlockHash'
     */
    @Test
    public void bestBlockHashTest() {
        // TODO: test bestBlockHash
    }

    /**
     * Test the property 'blocks'
     */
    @Test
    public void blocksTest() {
        // TODO: test blocks
    }

    /**
     * Test the property 'chain'
     */
    @Test
    public void chainTest() {
        // TODO: test chain
    }

    /**
     * Test the property 'difficulty'
     */
    @Test
    public void difficultyTest() {
        // TODO: test difficulty
    }

    /**
     * Test the property 'headers'
     */
    @Test
    public void headersTest() {
        // TODO: test headers
    }

    /**
     * Test the property 'protocolVersion'
     */
    @Test
    public void protocolVersionTest() {
        // TODO: test protocolVersion
    }

    /**
     * Test the property 'sizeOnDisk'
     */
    @Test
    public void sizeOnDiskTest() {
        // TODO: test sizeOnDisk
    }

    /**
     * Test the property 'subversion'
     */
    @Test
    public void subversionTest() {
        // TODO: test subversion
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

}
