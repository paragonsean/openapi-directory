/*
 * Chain49 API
 * Kickstart your next crypto project - extended trezor/blockbook API with 10+ blockchains available instantly and 50+ possible on request running on the finest hardware in Germany's best datacenters at Hetzner  Websocket only via api.chain49.com endpoint possible (RapidAPI does not support it yet)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: contact@chain49.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.math.BigDecimal;
import org.openapitools.client.model.GetBalanceHistoryV2200ResponseInner;
import org.openapitools.client.model.GetXpubV2200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AddressesApi
 */
@Disabled
public class AddressesApiTest {

    private final AddressesApi api = new AddressesApi();

    /**
     * Get address V2
     *
     * Returns balances and transactions of an address. The returned transactions are sorted by block height, newest blocks first.  The **details** query parameter can specify the level of details returned by the request (default: \&quot;txids\&quot;). Possible values are:  **basic**: return only xpub balances, without any derived addresses and transactions  **tokens**: basic + tokens (addresses) derived from the xpub, subject to tokens parameter  **tokenBalances**: basic + tokens (addresses) derived from the xpub with balances, subject to tokens parameter  **txids**: tokenBalances + list of txids, subject to from, to filter and paging  **txs**: tokenBalances + list of transaction with details, subject to from, to filter and paging 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAddressV2Test() throws ApiException {
        String blockchain = null;
        String address = null;
        Integer page = null;
        Integer pageSize = null;
        Integer fromBlock = null;
        Integer toBlock = null;
        String details = null;
        String contract = null;
        String secondary = null;
        Object response = api.getAddressV2(blockchain, address, page, pageSize, fromBlock, toBlock, details, contract, secondary);
        // TODO: test validations
    }

    /**
     * Get Balance History V2
     *
     * Returns a balance history for the specified XPUB or address  The value of sentToSelf is the amount sent from the same address to the same address or within addresses of xpub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBalanceHistoryV2Test() throws ApiException {
        String blockchain = null;
        String addressOrXpub = null;
        String fromDate = null;
        String toDate = null;
        String fiatcurrency = null;
        BigDecimal groupBy = null;
        List<GetBalanceHistoryV2200ResponseInner> response = api.getBalanceHistoryV2(blockchain, addressOrXpub, fromDate, toDate, fiatcurrency, groupBy);
        // TODO: test validations
    }

    /**
     * Get UTXO V2
     *
     * Returns array of unspent transaction outputs of address or xpub, applicable only for Bitcoin-type coins. By default, the list contains both confirmed and unconfirmed transactions. The query parameter confirmed&#x3D;true disables return of unconfirmed transactions. The returned utxos are sorted by block height, newest blocks first. For xpubs or output descriptors, the response also contains address and derivation path of the utxo.    Unconfirmed utxos do not have field height, the field confirmations has value 0 and may contain field lockTime, if not zero.  Coinbase utxos have field coinbase set to true, however due to performance reasons only up to minimum coinbase confirmations limit (100). After this limit, utxos are not detected as coinbase.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUTXOV2Test() throws ApiException {
        String blockchain = null;
        String addressOrXpub = null;
        Boolean confirmed = null;
        List<Object> response = api.getUTXOV2(blockchain, addressOrXpub, confirmed);
        // TODO: test validations
    }

    /**
     * Get xpub V2
     *
     * Returns balances and transactions of an xpub or output descriptor, applicable only for Bitcoin-type coins.  Blockbook supports BIP44, BIP49, BIP84 and BIP86 (Taproot) derivation schemes, using either xpubs or output descriptors (see https://github.com/bitcoin/bitcoin/blob/master/doc/descriptors.md)  Note: usedTokens always returns total number of used addresses of xpub.  Detailed documentation found here: https://github.com/trezor/blockbook/blob/master/docs/api.md#get-xpub
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getXpubV2Test() throws ApiException {
        String blockchain = null;
        String xpub = null;
        Integer page = null;
        Integer pageSize = null;
        Integer fromBlock = null;
        Integer toBlock = null;
        String details = null;
        String tokens = null;
        String secondary = null;
        GetXpubV2200Response response = api.getXpubV2(blockchain, xpub, page, pageSize, fromBlock, toBlock, details, tokens, secondary);
        // TODO: test validations
    }

}
