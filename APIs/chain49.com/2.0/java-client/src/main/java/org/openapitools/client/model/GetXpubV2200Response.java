/*
 * Chain49 API
 * Kickstart your next crypto project - extended trezor/blockbook API with 10+ blockchains available instantly and 50+ possible on request running on the finest hardware in Germany's best datacenters at Hetzner  Websocket only via api.chain49.com endpoint possible (RapidAPI does not support it yet)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: contact@chain49.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GetXpubV2200ResponseTokensInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetXpubV2200Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:58:48.868561-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetXpubV2200Response {
  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private String address;

  public static final String SERIALIZED_NAME_BALANCE = "balance";
  @SerializedName(SERIALIZED_NAME_BALANCE)
  private String balance;

  public static final String SERIALIZED_NAME_ITEMS_ON_PAGE = "itemsOnPage";
  @SerializedName(SERIALIZED_NAME_ITEMS_ON_PAGE)
  private Integer itemsOnPage;

  public static final String SERIALIZED_NAME_PAGE = "page";
  @SerializedName(SERIALIZED_NAME_PAGE)
  private Integer page;

  public static final String SERIALIZED_NAME_SECONDARY_VALUE = "secondaryValue";
  @SerializedName(SERIALIZED_NAME_SECONDARY_VALUE)
  private BigDecimal secondaryValue;

  public static final String SERIALIZED_NAME_TOKENS = "tokens";
  @SerializedName(SERIALIZED_NAME_TOKENS)
  private List<GetXpubV2200ResponseTokensInner> tokens = new ArrayList<>();

  public static final String SERIALIZED_NAME_TOTAL_PAGES = "totalPages";
  @SerializedName(SERIALIZED_NAME_TOTAL_PAGES)
  private Integer totalPages;

  public static final String SERIALIZED_NAME_TOTAL_RECEIVED = "totalReceived";
  @SerializedName(SERIALIZED_NAME_TOTAL_RECEIVED)
  private String totalReceived;

  public static final String SERIALIZED_NAME_TOTAL_SENT = "totalSent";
  @SerializedName(SERIALIZED_NAME_TOTAL_SENT)
  private String totalSent;

  public static final String SERIALIZED_NAME_TXIDS = "txids";
  @SerializedName(SERIALIZED_NAME_TXIDS)
  private List<String> txids = new ArrayList<>();

  public static final String SERIALIZED_NAME_TXS = "txs";
  @SerializedName(SERIALIZED_NAME_TXS)
  private Integer txs;

  public static final String SERIALIZED_NAME_UNCONFIRMED_BALANCE = "unconfirmedBalance";
  @SerializedName(SERIALIZED_NAME_UNCONFIRMED_BALANCE)
  private String unconfirmedBalance;

  public static final String SERIALIZED_NAME_UNCONFIRMED_TXS = "unconfirmedTxs";
  @SerializedName(SERIALIZED_NAME_UNCONFIRMED_TXS)
  private Integer unconfirmedTxs;

  public static final String SERIALIZED_NAME_USED_TOKENS = "usedTokens";
  @SerializedName(SERIALIZED_NAME_USED_TOKENS)
  private Integer usedTokens;

  public GetXpubV2200Response() {
  }

  public GetXpubV2200Response address(String address) {
    this.address = address;
    return this;
  }

  /**
   * Get address
   * @return address
   */
  @javax.annotation.Nullable
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }


  public GetXpubV2200Response balance(String balance) {
    this.balance = balance;
    return this;
  }

  /**
   * Get balance
   * @return balance
   */
  @javax.annotation.Nullable
  public String getBalance() {
    return balance;
  }

  public void setBalance(String balance) {
    this.balance = balance;
  }


  public GetXpubV2200Response itemsOnPage(Integer itemsOnPage) {
    this.itemsOnPage = itemsOnPage;
    return this;
  }

  /**
   * Get itemsOnPage
   * @return itemsOnPage
   */
  @javax.annotation.Nullable
  public Integer getItemsOnPage() {
    return itemsOnPage;
  }

  public void setItemsOnPage(Integer itemsOnPage) {
    this.itemsOnPage = itemsOnPage;
  }


  public GetXpubV2200Response page(Integer page) {
    this.page = page;
    return this;
  }

  /**
   * Get page
   * @return page
   */
  @javax.annotation.Nullable
  public Integer getPage() {
    return page;
  }

  public void setPage(Integer page) {
    this.page = page;
  }


  public GetXpubV2200Response secondaryValue(BigDecimal secondaryValue) {
    this.secondaryValue = secondaryValue;
    return this;
  }

  /**
   * Get secondaryValue
   * @return secondaryValue
   */
  @javax.annotation.Nullable
  public BigDecimal getSecondaryValue() {
    return secondaryValue;
  }

  public void setSecondaryValue(BigDecimal secondaryValue) {
    this.secondaryValue = secondaryValue;
  }


  public GetXpubV2200Response tokens(List<GetXpubV2200ResponseTokensInner> tokens) {
    this.tokens = tokens;
    return this;
  }

  public GetXpubV2200Response addTokensItem(GetXpubV2200ResponseTokensInner tokensItem) {
    if (this.tokens == null) {
      this.tokens = new ArrayList<>();
    }
    this.tokens.add(tokensItem);
    return this;
  }

  /**
   * Get tokens
   * @return tokens
   */
  @javax.annotation.Nullable
  public List<GetXpubV2200ResponseTokensInner> getTokens() {
    return tokens;
  }

  public void setTokens(List<GetXpubV2200ResponseTokensInner> tokens) {
    this.tokens = tokens;
  }


  public GetXpubV2200Response totalPages(Integer totalPages) {
    this.totalPages = totalPages;
    return this;
  }

  /**
   * Get totalPages
   * @return totalPages
   */
  @javax.annotation.Nullable
  public Integer getTotalPages() {
    return totalPages;
  }

  public void setTotalPages(Integer totalPages) {
    this.totalPages = totalPages;
  }


  public GetXpubV2200Response totalReceived(String totalReceived) {
    this.totalReceived = totalReceived;
    return this;
  }

  /**
   * Get totalReceived
   * @return totalReceived
   */
  @javax.annotation.Nullable
  public String getTotalReceived() {
    return totalReceived;
  }

  public void setTotalReceived(String totalReceived) {
    this.totalReceived = totalReceived;
  }


  public GetXpubV2200Response totalSent(String totalSent) {
    this.totalSent = totalSent;
    return this;
  }

  /**
   * Get totalSent
   * @return totalSent
   */
  @javax.annotation.Nullable
  public String getTotalSent() {
    return totalSent;
  }

  public void setTotalSent(String totalSent) {
    this.totalSent = totalSent;
  }


  public GetXpubV2200Response txids(List<String> txids) {
    this.txids = txids;
    return this;
  }

  public GetXpubV2200Response addTxidsItem(String txidsItem) {
    if (this.txids == null) {
      this.txids = new ArrayList<>();
    }
    this.txids.add(txidsItem);
    return this;
  }

  /**
   * Get txids
   * @return txids
   */
  @javax.annotation.Nullable
  public List<String> getTxids() {
    return txids;
  }

  public void setTxids(List<String> txids) {
    this.txids = txids;
  }


  public GetXpubV2200Response txs(Integer txs) {
    this.txs = txs;
    return this;
  }

  /**
   * Get txs
   * @return txs
   */
  @javax.annotation.Nullable
  public Integer getTxs() {
    return txs;
  }

  public void setTxs(Integer txs) {
    this.txs = txs;
  }


  public GetXpubV2200Response unconfirmedBalance(String unconfirmedBalance) {
    this.unconfirmedBalance = unconfirmedBalance;
    return this;
  }

  /**
   * Get unconfirmedBalance
   * @return unconfirmedBalance
   */
  @javax.annotation.Nullable
  public String getUnconfirmedBalance() {
    return unconfirmedBalance;
  }

  public void setUnconfirmedBalance(String unconfirmedBalance) {
    this.unconfirmedBalance = unconfirmedBalance;
  }


  public GetXpubV2200Response unconfirmedTxs(Integer unconfirmedTxs) {
    this.unconfirmedTxs = unconfirmedTxs;
    return this;
  }

  /**
   * Get unconfirmedTxs
   * @return unconfirmedTxs
   */
  @javax.annotation.Nullable
  public Integer getUnconfirmedTxs() {
    return unconfirmedTxs;
  }

  public void setUnconfirmedTxs(Integer unconfirmedTxs) {
    this.unconfirmedTxs = unconfirmedTxs;
  }


  public GetXpubV2200Response usedTokens(Integer usedTokens) {
    this.usedTokens = usedTokens;
    return this;
  }

  /**
   * Get usedTokens
   * @return usedTokens
   */
  @javax.annotation.Nullable
  public Integer getUsedTokens() {
    return usedTokens;
  }

  public void setUsedTokens(Integer usedTokens) {
    this.usedTokens = usedTokens;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetXpubV2200Response getXpubV2200Response = (GetXpubV2200Response) o;
    return Objects.equals(this.address, getXpubV2200Response.address) &&
        Objects.equals(this.balance, getXpubV2200Response.balance) &&
        Objects.equals(this.itemsOnPage, getXpubV2200Response.itemsOnPage) &&
        Objects.equals(this.page, getXpubV2200Response.page) &&
        Objects.equals(this.secondaryValue, getXpubV2200Response.secondaryValue) &&
        Objects.equals(this.tokens, getXpubV2200Response.tokens) &&
        Objects.equals(this.totalPages, getXpubV2200Response.totalPages) &&
        Objects.equals(this.totalReceived, getXpubV2200Response.totalReceived) &&
        Objects.equals(this.totalSent, getXpubV2200Response.totalSent) &&
        Objects.equals(this.txids, getXpubV2200Response.txids) &&
        Objects.equals(this.txs, getXpubV2200Response.txs) &&
        Objects.equals(this.unconfirmedBalance, getXpubV2200Response.unconfirmedBalance) &&
        Objects.equals(this.unconfirmedTxs, getXpubV2200Response.unconfirmedTxs) &&
        Objects.equals(this.usedTokens, getXpubV2200Response.usedTokens);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, balance, itemsOnPage, page, secondaryValue, tokens, totalPages, totalReceived, totalSent, txids, txs, unconfirmedBalance, unconfirmedTxs, usedTokens);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetXpubV2200Response {\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    itemsOnPage: ").append(toIndentedString(itemsOnPage)).append("\n");
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("    secondaryValue: ").append(toIndentedString(secondaryValue)).append("\n");
    sb.append("    tokens: ").append(toIndentedString(tokens)).append("\n");
    sb.append("    totalPages: ").append(toIndentedString(totalPages)).append("\n");
    sb.append("    totalReceived: ").append(toIndentedString(totalReceived)).append("\n");
    sb.append("    totalSent: ").append(toIndentedString(totalSent)).append("\n");
    sb.append("    txids: ").append(toIndentedString(txids)).append("\n");
    sb.append("    txs: ").append(toIndentedString(txs)).append("\n");
    sb.append("    unconfirmedBalance: ").append(toIndentedString(unconfirmedBalance)).append("\n");
    sb.append("    unconfirmedTxs: ").append(toIndentedString(unconfirmedTxs)).append("\n");
    sb.append("    usedTokens: ").append(toIndentedString(usedTokens)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("address");
    openapiFields.add("balance");
    openapiFields.add("itemsOnPage");
    openapiFields.add("page");
    openapiFields.add("secondaryValue");
    openapiFields.add("tokens");
    openapiFields.add("totalPages");
    openapiFields.add("totalReceived");
    openapiFields.add("totalSent");
    openapiFields.add("txids");
    openapiFields.add("txs");
    openapiFields.add("unconfirmedBalance");
    openapiFields.add("unconfirmedTxs");
    openapiFields.add("usedTokens");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetXpubV2200Response
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetXpubV2200Response.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetXpubV2200Response is not found in the empty JSON string", GetXpubV2200Response.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetXpubV2200Response.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetXpubV2200Response` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("address") != null && !jsonObj.get("address").isJsonNull()) && !jsonObj.get("address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address").toString()));
      }
      if ((jsonObj.get("balance") != null && !jsonObj.get("balance").isJsonNull()) && !jsonObj.get("balance").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `balance` to be a primitive type in the JSON string but got `%s`", jsonObj.get("balance").toString()));
      }
      if (jsonObj.get("tokens") != null && !jsonObj.get("tokens").isJsonNull()) {
        JsonArray jsonArraytokens = jsonObj.getAsJsonArray("tokens");
        if (jsonArraytokens != null) {
          // ensure the json data is an array
          if (!jsonObj.get("tokens").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `tokens` to be an array in the JSON string but got `%s`", jsonObj.get("tokens").toString()));
          }

          // validate the optional field `tokens` (array)
          for (int i = 0; i < jsonArraytokens.size(); i++) {
            GetXpubV2200ResponseTokensInner.validateJsonElement(jsonArraytokens.get(i));
          };
        }
      }
      if ((jsonObj.get("totalReceived") != null && !jsonObj.get("totalReceived").isJsonNull()) && !jsonObj.get("totalReceived").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `totalReceived` to be a primitive type in the JSON string but got `%s`", jsonObj.get("totalReceived").toString()));
      }
      if ((jsonObj.get("totalSent") != null && !jsonObj.get("totalSent").isJsonNull()) && !jsonObj.get("totalSent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `totalSent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("totalSent").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("txids") != null && !jsonObj.get("txids").isJsonNull() && !jsonObj.get("txids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `txids` to be an array in the JSON string but got `%s`", jsonObj.get("txids").toString()));
      }
      if ((jsonObj.get("unconfirmedBalance") != null && !jsonObj.get("unconfirmedBalance").isJsonNull()) && !jsonObj.get("unconfirmedBalance").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unconfirmedBalance` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unconfirmedBalance").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetXpubV2200Response.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetXpubV2200Response' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetXpubV2200Response> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetXpubV2200Response.class));

       return (TypeAdapter<T>) new TypeAdapter<GetXpubV2200Response>() {
           @Override
           public void write(JsonWriter out, GetXpubV2200Response value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetXpubV2200Response read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetXpubV2200Response given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetXpubV2200Response
   * @throws IOException if the JSON string is invalid with respect to GetXpubV2200Response
   */
  public static GetXpubV2200Response fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetXpubV2200Response.class);
  }

  /**
   * Convert an instance of GetXpubV2200Response to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

