/*
 * Chain49 API
 * Kickstart your next crypto project - extended trezor/blockbook API with 10+ blockchains available instantly and 50+ possible on request running on the finest hardware in Germany's best datacenters at Hetzner  Websocket only via api.chain49.com endpoint possible (RapidAPI does not support it yet)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: contact@chain49.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetXpubV2200ResponseTokensInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:58:48.868561-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetXpubV2200ResponseTokensInner {
  public static final String SERIALIZED_NAME_BALANCE = "balance";
  @SerializedName(SERIALIZED_NAME_BALANCE)
  private String balance;

  public static final String SERIALIZED_NAME_DECIMALS = "decimals";
  @SerializedName(SERIALIZED_NAME_DECIMALS)
  private Integer decimals;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PATH = "path";
  @SerializedName(SERIALIZED_NAME_PATH)
  private String path;

  public static final String SERIALIZED_NAME_TOTAL_RECEIVED = "totalReceived";
  @SerializedName(SERIALIZED_NAME_TOTAL_RECEIVED)
  private String totalReceived;

  public static final String SERIALIZED_NAME_TOTAL_SENT = "totalSent";
  @SerializedName(SERIALIZED_NAME_TOTAL_SENT)
  private String totalSent;

  public static final String SERIALIZED_NAME_TRANSFERS = "transfers";
  @SerializedName(SERIALIZED_NAME_TRANSFERS)
  private Integer transfers;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public GetXpubV2200ResponseTokensInner() {
  }

  public GetXpubV2200ResponseTokensInner balance(String balance) {
    this.balance = balance;
    return this;
  }

  /**
   * Get balance
   * @return balance
   */
  @javax.annotation.Nullable
  public String getBalance() {
    return balance;
  }

  public void setBalance(String balance) {
    this.balance = balance;
  }


  public GetXpubV2200ResponseTokensInner decimals(Integer decimals) {
    this.decimals = decimals;
    return this;
  }

  /**
   * Get decimals
   * @return decimals
   */
  @javax.annotation.Nullable
  public Integer getDecimals() {
    return decimals;
  }

  public void setDecimals(Integer decimals) {
    this.decimals = decimals;
  }


  public GetXpubV2200ResponseTokensInner name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GetXpubV2200ResponseTokensInner path(String path) {
    this.path = path;
    return this;
  }

  /**
   * Get path
   * @return path
   */
  @javax.annotation.Nullable
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }


  public GetXpubV2200ResponseTokensInner totalReceived(String totalReceived) {
    this.totalReceived = totalReceived;
    return this;
  }

  /**
   * Get totalReceived
   * @return totalReceived
   */
  @javax.annotation.Nullable
  public String getTotalReceived() {
    return totalReceived;
  }

  public void setTotalReceived(String totalReceived) {
    this.totalReceived = totalReceived;
  }


  public GetXpubV2200ResponseTokensInner totalSent(String totalSent) {
    this.totalSent = totalSent;
    return this;
  }

  /**
   * Get totalSent
   * @return totalSent
   */
  @javax.annotation.Nullable
  public String getTotalSent() {
    return totalSent;
  }

  public void setTotalSent(String totalSent) {
    this.totalSent = totalSent;
  }


  public GetXpubV2200ResponseTokensInner transfers(Integer transfers) {
    this.transfers = transfers;
    return this;
  }

  /**
   * Get transfers
   * @return transfers
   */
  @javax.annotation.Nullable
  public Integer getTransfers() {
    return transfers;
  }

  public void setTransfers(Integer transfers) {
    this.transfers = transfers;
  }


  public GetXpubV2200ResponseTokensInner type(String type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetXpubV2200ResponseTokensInner getXpubV2200ResponseTokensInner = (GetXpubV2200ResponseTokensInner) o;
    return Objects.equals(this.balance, getXpubV2200ResponseTokensInner.balance) &&
        Objects.equals(this.decimals, getXpubV2200ResponseTokensInner.decimals) &&
        Objects.equals(this.name, getXpubV2200ResponseTokensInner.name) &&
        Objects.equals(this.path, getXpubV2200ResponseTokensInner.path) &&
        Objects.equals(this.totalReceived, getXpubV2200ResponseTokensInner.totalReceived) &&
        Objects.equals(this.totalSent, getXpubV2200ResponseTokensInner.totalSent) &&
        Objects.equals(this.transfers, getXpubV2200ResponseTokensInner.transfers) &&
        Objects.equals(this.type, getXpubV2200ResponseTokensInner.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(balance, decimals, name, path, totalReceived, totalSent, transfers, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetXpubV2200ResponseTokensInner {\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    decimals: ").append(toIndentedString(decimals)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    totalReceived: ").append(toIndentedString(totalReceived)).append("\n");
    sb.append("    totalSent: ").append(toIndentedString(totalSent)).append("\n");
    sb.append("    transfers: ").append(toIndentedString(transfers)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("balance");
    openapiFields.add("decimals");
    openapiFields.add("name");
    openapiFields.add("path");
    openapiFields.add("totalReceived");
    openapiFields.add("totalSent");
    openapiFields.add("transfers");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetXpubV2200ResponseTokensInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetXpubV2200ResponseTokensInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetXpubV2200ResponseTokensInner is not found in the empty JSON string", GetXpubV2200ResponseTokensInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetXpubV2200ResponseTokensInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetXpubV2200ResponseTokensInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("balance") != null && !jsonObj.get("balance").isJsonNull()) && !jsonObj.get("balance").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `balance` to be a primitive type in the JSON string but got `%s`", jsonObj.get("balance").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("path") != null && !jsonObj.get("path").isJsonNull()) && !jsonObj.get("path").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `path` to be a primitive type in the JSON string but got `%s`", jsonObj.get("path").toString()));
      }
      if ((jsonObj.get("totalReceived") != null && !jsonObj.get("totalReceived").isJsonNull()) && !jsonObj.get("totalReceived").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `totalReceived` to be a primitive type in the JSON string but got `%s`", jsonObj.get("totalReceived").toString()));
      }
      if ((jsonObj.get("totalSent") != null && !jsonObj.get("totalSent").isJsonNull()) && !jsonObj.get("totalSent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `totalSent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("totalSent").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetXpubV2200ResponseTokensInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetXpubV2200ResponseTokensInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetXpubV2200ResponseTokensInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetXpubV2200ResponseTokensInner.class));

       return (TypeAdapter<T>) new TypeAdapter<GetXpubV2200ResponseTokensInner>() {
           @Override
           public void write(JsonWriter out, GetXpubV2200ResponseTokensInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetXpubV2200ResponseTokensInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetXpubV2200ResponseTokensInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetXpubV2200ResponseTokensInner
   * @throws IOException if the JSON string is invalid with respect to GetXpubV2200ResponseTokensInner
   */
  public static GetXpubV2200ResponseTokensInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetXpubV2200ResponseTokensInner.class);
  }

  /**
   * Convert an instance of GetXpubV2200ResponseTokensInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

