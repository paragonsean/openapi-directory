/**
 * NamSor API v2
 * NamSor API v2 : enpoints to process personal names (gender, cultural origin or ethnicity) in all alphabets or languages. By default, enpoints use 1 unit per name (ex. Gender), but Ethnicity classification uses 10 to 20 units per name depending on taxonomy. Use GET methods for small tests, but prefer POST methods for higher throughput (batch processing of up to 100 names at a time). Need something you can't find here? We have many more features coming soon. Let us know, we'll do our best to add it! 
 *
 * The version of the OpenAPI document: 2.0.24
 * Contact: contact@namsor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAPIClassifierTaxonomyOut.h
 *
 * 
 */

#ifndef OAIAPIClassifierTaxonomyOut_H
#define OAIAPIClassifierTaxonomyOut_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAPIClassifierTaxonomyOut : public OAIObject {
public:
    OAIAPIClassifierTaxonomyOut();
    OAIAPIClassifierTaxonomyOut(QString json);
    ~OAIAPIClassifierTaxonomyOut() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClassifierName() const;
    void setClassifierName(const QString &classifier_name);
    bool is_classifier_name_Set() const;
    bool is_classifier_name_Valid() const;

    QList<QString> getClassifyingScripts() const;
    void setClassifyingScripts(const QList<QString> &classifying_scripts);
    bool is_classifying_scripts_Set() const;
    bool is_classifying_scripts_Valid() const;

    QList<QString> getTaxonomyClasses() const;
    void setTaxonomyClasses(const QList<QString> &taxonomy_classes);
    bool is_taxonomy_classes_Set() const;
    bool is_taxonomy_classes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_classifier_name;
    bool m_classifier_name_isSet;
    bool m_classifier_name_isValid;

    QList<QString> m_classifying_scripts;
    bool m_classifying_scripts_isSet;
    bool m_classifying_scripts_isValid;

    QList<QString> m_taxonomy_classes;
    bool m_taxonomy_classes_isSet;
    bool m_taxonomy_classes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAPIClassifierTaxonomyOut)

#endif // OAIAPIClassifierTaxonomyOut_H
