/**
 * NamSor API v2
 * NamSor API v2 : enpoints to process personal names (gender, cultural origin or ethnicity) in all alphabets or languages. By default, enpoints use 1 unit per name (ex. Gender), but Ethnicity classification uses 10 to 20 units per name depending on taxonomy. Use GET methods for small tests, but prefer POST methods for higher throughput (batch processing of up to 100 names at a time). Need something you can't find here? We have many more features coming soon. Let us know, we'll do our best to add it! 
 *
 * The version of the OpenAPI document: 2.0.24
 * Contact: contact@namsor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFirstLastNamePhoneCodedOut.h
 *
 * Represents the output of inferring the LIKELY country and phone code from a personal name and phone number.
 */

#ifndef OAIFirstLastNamePhoneCodedOut_H
#define OAIFirstLastNamePhoneCodedOut_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFirstLastNamePhoneCodedOut : public OAIObject {
public:
    OAIFirstLastNamePhoneCodedOut();
    OAIFirstLastNamePhoneCodedOut(QString json);
    ~OAIFirstLastNamePhoneCodedOut() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCountryIso2() const;
    void setCountryIso2(const QString &country_iso2);
    bool is_country_iso2_Set() const;
    bool is_country_iso2_Valid() const;

    QString getFirstName() const;
    void setFirstName(const QString &first_name);
    bool is_first_name_Set() const;
    bool is_first_name_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getInternationalPhoneNumberVerified() const;
    void setInternationalPhoneNumberVerified(const QString &international_phone_number_verified);
    bool is_international_phone_number_verified_Set() const;
    bool is_international_phone_number_verified_Valid() const;

    QString getLastName() const;
    void setLastName(const QString &last_name);
    bool is_last_name_Set() const;
    bool is_last_name_Valid() const;

    QString getOriginCountryIso2() const;
    void setOriginCountryIso2(const QString &origin_country_iso2);
    bool is_origin_country_iso2_Set() const;
    bool is_origin_country_iso2_Valid() const;

    QString getOriginCountryIso2Alt() const;
    void setOriginCountryIso2Alt(const QString &origin_country_iso2_alt);
    bool is_origin_country_iso2_alt_Set() const;
    bool is_origin_country_iso2_alt_Valid() const;

    qint32 getPhoneCountryCode() const;
    void setPhoneCountryCode(const qint32 &phone_country_code);
    bool is_phone_country_code_Set() const;
    bool is_phone_country_code_Valid() const;

    qint32 getPhoneCountryCodeAlt() const;
    void setPhoneCountryCodeAlt(const qint32 &phone_country_code_alt);
    bool is_phone_country_code_alt_Set() const;
    bool is_phone_country_code_alt_Valid() const;

    QString getPhoneCountryIso2() const;
    void setPhoneCountryIso2(const QString &phone_country_iso2);
    bool is_phone_country_iso2_Set() const;
    bool is_phone_country_iso2_Valid() const;

    QString getPhoneCountryIso2Alt() const;
    void setPhoneCountryIso2Alt(const QString &phone_country_iso2_alt);
    bool is_phone_country_iso2_alt_Set() const;
    bool is_phone_country_iso2_alt_Valid() const;

    QString getPhoneCountryIso2Verified() const;
    void setPhoneCountryIso2Verified(const QString &phone_country_iso2_verified);
    bool is_phone_country_iso2_verified_Set() const;
    bool is_phone_country_iso2_verified_Valid() const;

    QString getPhoneNumber() const;
    void setPhoneNumber(const QString &phone_number);
    bool is_phone_number_Set() const;
    bool is_phone_number_Valid() const;

    double getScore() const;
    void setScore(const double &score);
    bool is_score_Set() const;
    bool is_score_Valid() const;

    QString getScript() const;
    void setScript(const QString &script);
    bool is_script_Set() const;
    bool is_script_Valid() const;

    bool isVerified() const;
    void setVerified(const bool &verified);
    bool is_verified_Set() const;
    bool is_verified_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_country_iso2;
    bool m_country_iso2_isSet;
    bool m_country_iso2_isValid;

    QString m_first_name;
    bool m_first_name_isSet;
    bool m_first_name_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_international_phone_number_verified;
    bool m_international_phone_number_verified_isSet;
    bool m_international_phone_number_verified_isValid;

    QString m_last_name;
    bool m_last_name_isSet;
    bool m_last_name_isValid;

    QString m_origin_country_iso2;
    bool m_origin_country_iso2_isSet;
    bool m_origin_country_iso2_isValid;

    QString m_origin_country_iso2_alt;
    bool m_origin_country_iso2_alt_isSet;
    bool m_origin_country_iso2_alt_isValid;

    qint32 m_phone_country_code;
    bool m_phone_country_code_isSet;
    bool m_phone_country_code_isValid;

    qint32 m_phone_country_code_alt;
    bool m_phone_country_code_alt_isSet;
    bool m_phone_country_code_alt_isValid;

    QString m_phone_country_iso2;
    bool m_phone_country_iso2_isSet;
    bool m_phone_country_iso2_isValid;

    QString m_phone_country_iso2_alt;
    bool m_phone_country_iso2_alt_isSet;
    bool m_phone_country_iso2_alt_isValid;

    QString m_phone_country_iso2_verified;
    bool m_phone_country_iso2_verified_isSet;
    bool m_phone_country_iso2_verified_isValid;

    QString m_phone_number;
    bool m_phone_number_isSet;
    bool m_phone_number_isValid;

    double m_score;
    bool m_score_isSet;
    bool m_score_isValid;

    QString m_script;
    bool m_script_isSet;
    bool m_script_isValid;

    bool m_verified;
    bool m_verified_isSet;
    bool m_verified_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFirstLastNamePhoneCodedOut)

#endif // OAIFirstLastNamePhoneCodedOut_H
