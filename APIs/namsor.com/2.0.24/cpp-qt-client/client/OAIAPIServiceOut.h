/**
 * NamSor API v2
 * NamSor API v2 : enpoints to process personal names (gender, cultural origin or ethnicity) in all alphabets or languages. By default, enpoints use 1 unit per name (ex. Gender), but Ethnicity classification uses 10 to 20 units per name depending on taxonomy. Use GET methods for small tests, but prefer POST methods for higher throughput (batch processing of up to 100 names at a time). Need something you can't find here? We have many more features coming soon. Let us know, we'll do our best to add it! 
 *
 * The version of the OpenAPI document: 2.0.24
 * Contact: contact@namsor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAPIServiceOut.h
 *
 * List of API Services
 */

#ifndef OAIAPIServiceOut_H
#define OAIAPIServiceOut_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAPIServiceOut : public OAIObject {
public:
    OAIAPIServiceOut();
    OAIAPIServiceOut(QString json);
    ~OAIAPIServiceOut() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getCostInUnits() const;
    void setCostInUnits(const qint32 &cost_in_units);
    bool is_cost_in_units_Set() const;
    bool is_cost_in_units_Valid() const;

    QString getServiceGroup() const;
    void setServiceGroup(const QString &service_group);
    bool is_service_group_Set() const;
    bool is_service_group_Valid() const;

    QString getServiceName() const;
    void setServiceName(const QString &service_name);
    bool is_service_name_Set() const;
    bool is_service_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_cost_in_units;
    bool m_cost_in_units_isSet;
    bool m_cost_in_units_isValid;

    QString m_service_group;
    bool m_service_group_isSet;
    bool m_service_group_isValid;

    QString m_service_name;
    bool m_service_name_isSet;
    bool m_service_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAPIServiceOut)

#endif // OAIAPIServiceOut_H
