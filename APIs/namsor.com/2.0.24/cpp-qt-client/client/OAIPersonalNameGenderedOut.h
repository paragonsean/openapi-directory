/**
 * NamSor API v2
 * NamSor API v2 : enpoints to process personal names (gender, cultural origin or ethnicity) in all alphabets or languages. By default, enpoints use 1 unit per name (ex. Gender), but Ethnicity classification uses 10 to 20 units per name depending on taxonomy. Use GET methods for small tests, but prefer POST methods for higher throughput (batch processing of up to 100 names at a time). Need something you can't find here? We have many more features coming soon. Let us know, we'll do our best to add it! 
 *
 * The version of the OpenAPI document: 2.0.24
 * Contact: contact@namsor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPersonalNameGenderedOut.h
 *
 * Classified genderized names
 */

#ifndef OAIPersonalNameGenderedOut_H
#define OAIPersonalNameGenderedOut_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPersonalNameGenderedOut : public OAIObject {
public:
    OAIPersonalNameGenderedOut();
    OAIPersonalNameGenderedOut(QString json);
    ~OAIPersonalNameGenderedOut() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getGenderScale() const;
    void setGenderScale(const double &gender_scale);
    bool is_gender_scale_Set() const;
    bool is_gender_scale_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLikelyGender() const;
    void setLikelyGender(const QString &likely_gender);
    bool is_likely_gender_Set() const;
    bool is_likely_gender_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    double getProbabilityCalibrated() const;
    void setProbabilityCalibrated(const double &probability_calibrated);
    bool is_probability_calibrated_Set() const;
    bool is_probability_calibrated_Valid() const;

    double getScore() const;
    void setScore(const double &score);
    bool is_score_Set() const;
    bool is_score_Valid() const;

    QString getScript() const;
    void setScript(const QString &script);
    bool is_script_Set() const;
    bool is_script_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_gender_scale;
    bool m_gender_scale_isSet;
    bool m_gender_scale_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_likely_gender;
    bool m_likely_gender_isSet;
    bool m_likely_gender_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    double m_probability_calibrated;
    bool m_probability_calibrated_isSet;
    bool m_probability_calibrated_isValid;

    double m_score;
    bool m_score_isSet;
    bool m_score_isValid;

    QString m_script;
    bool m_script_isSet;
    bool m_script_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPersonalNameGenderedOut)

#endif // OAIPersonalNameGenderedOut_H
