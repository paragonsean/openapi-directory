/**
 * NamSor API v2
 * NamSor API v2 : enpoints to process personal names (gender, cultural origin or ethnicity) in all alphabets or languages. By default, enpoints use 1 unit per name (ex. Gender), but Ethnicity classification uses 10 to 20 units per name depending on taxonomy. Use GET methods for small tests, but prefer POST methods for higher throughput (batch processing of up to 100 names at a time). Need something you can't find here? We have many more features coming soon. Let us know, we'll do our best to add it! 
 *
 * The version of the OpenAPI document: 2.0.24
 * Contact: contact@namsor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINameMatchCandidateOut.h
 *
 * The ordered list of name matching candidates
 */

#ifndef OAINameMatchCandidateOut_H
#define OAINameMatchCandidateOut_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINameMatchCandidateOut : public OAIObject {
public:
    OAINameMatchCandidateOut();
    OAINameMatchCandidateOut(QString json);
    ~OAINameMatchCandidateOut() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCandidateName() const;
    void setCandidateName(const QString &candidate_name);
    bool is_candidate_name_Set() const;
    bool is_candidate_name_Valid() const;

    double getPredScoreFamilyName() const;
    void setPredScoreFamilyName(const double &pred_score_family_name);
    bool is_pred_score_family_name_Set() const;
    bool is_pred_score_family_name_Valid() const;

    double getPredScoreGivenName() const;
    void setPredScoreGivenName(const double &pred_score_given_name);
    bool is_pred_score_given_name_Set() const;
    bool is_pred_score_given_name_Valid() const;

    double getProbability() const;
    void setProbability(const double &probability);
    bool is_probability_Set() const;
    bool is_probability_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_candidate_name;
    bool m_candidate_name_isSet;
    bool m_candidate_name_isValid;

    double m_pred_score_family_name;
    bool m_pred_score_family_name_isSet;
    bool m_pred_score_family_name_isValid;

    double m_pred_score_given_name;
    bool m_pred_score_given_name_isSet;
    bool m_pred_score_given_name_isValid;

    double m_probability;
    bool m_probability_isSet;
    bool m_probability_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINameMatchCandidateOut)

#endif // OAINameMatchCandidateOut_H
