/**
 * NamSor API v2
 * NamSor API v2 : enpoints to process personal names (gender, cultural origin or ethnicity) in all alphabets or languages. By default, enpoints use 1 unit per name (ex. Gender), but Ethnicity classification uses 10 to 20 units per name depending on taxonomy. Use GET methods for small tests, but prefer POST methods for higher throughput (batch processing of up to 100 names at a time). Need something you can't find here? We have many more features coming soon. Let us know, we'll do our best to add it! 
 *
 * The version of the OpenAPI document: 2.0.24
 * Contact: contact@namsor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMatchPersonalFirstLastNameIn.h
 *
 * 
 */

#ifndef OAIMatchPersonalFirstLastNameIn_H
#define OAIMatchPersonalFirstLastNameIn_H

#include <QJsonObject>

#include "OAIFirstLastNameIn.h"
#include "OAIPersonalNameIn.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFirstLastNameIn;
class OAIPersonalNameIn;

class OAIMatchPersonalFirstLastNameIn : public OAIObject {
public:
    OAIMatchPersonalFirstLastNameIn();
    OAIMatchPersonalFirstLastNameIn(QString json);
    ~OAIMatchPersonalFirstLastNameIn() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIFirstLastNameIn getName1() const;
    void setName1(const OAIFirstLastNameIn &name1);
    bool is_name1_Set() const;
    bool is_name1_Valid() const;

    OAIPersonalNameIn getName2() const;
    void setName2(const OAIPersonalNameIn &name2);
    bool is_name2_Set() const;
    bool is_name2_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIFirstLastNameIn m_name1;
    bool m_name1_isSet;
    bool m_name1_isValid;

    OAIPersonalNameIn m_name2;
    bool m_name2_isSet;
    bool m_name2_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMatchPersonalFirstLastNameIn)

#endif // OAIMatchPersonalFirstLastNameIn_H
