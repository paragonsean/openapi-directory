/**
 * NamSor API v2
 * NamSor API v2 : enpoints to process personal names (gender, cultural origin or ethnicity) in all alphabets or languages. By default, enpoints use 1 unit per name (ex. Gender), but Ethnicity classification uses 10 to 20 units per name depending on taxonomy. Use GET methods for small tests, but prefer POST methods for higher throughput (batch processing of up to 100 names at a time). Need something you can't find here? We have many more features coming soon. Let us know, we'll do our best to add it! 
 *
 * The version of the OpenAPI document: 2.0.24
 * Contact: contact@namsor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICorridorOut.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICorridorOut::OAICorridorOut(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICorridorOut::OAICorridorOut() {
    this->initializeModel();
}

OAICorridorOut::~OAICorridorOut() {}

void OAICorridorOut::initializeModel() {

    m_first_last_name_diasporaed_out_isSet = false;
    m_first_last_name_diasporaed_out_isValid = false;

    m_first_last_name_gendered_out_isSet = false;
    m_first_last_name_gendered_out_isValid = false;

    m_first_last_name_origined_out_isSet = false;
    m_first_last_name_origined_out_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_script_isSet = false;
    m_script_isValid = false;
}

void OAICorridorOut::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICorridorOut::fromJsonObject(QJsonObject json) {

    m_first_last_name_diasporaed_out_isValid = ::OpenAPI::fromJsonValue(m_first_last_name_diasporaed_out, json[QString("FirstLastNameDiasporaedOut")]);
    m_first_last_name_diasporaed_out_isSet = !json[QString("FirstLastNameDiasporaedOut")].isNull() && m_first_last_name_diasporaed_out_isValid;

    m_first_last_name_gendered_out_isValid = ::OpenAPI::fromJsonValue(m_first_last_name_gendered_out, json[QString("FirstLastNameGenderedOut")]);
    m_first_last_name_gendered_out_isSet = !json[QString("FirstLastNameGenderedOut")].isNull() && m_first_last_name_gendered_out_isValid;

    m_first_last_name_origined_out_isValid = ::OpenAPI::fromJsonValue(m_first_last_name_origined_out, json[QString("FirstLastNameOriginedOut")]);
    m_first_last_name_origined_out_isSet = !json[QString("FirstLastNameOriginedOut")].isNull() && m_first_last_name_origined_out_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_script_isValid = ::OpenAPI::fromJsonValue(m_script, json[QString("script")]);
    m_script_isSet = !json[QString("script")].isNull() && m_script_isValid;
}

QString OAICorridorOut::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICorridorOut::asJsonObject() const {
    QJsonObject obj;
    if (m_first_last_name_diasporaed_out.isSet()) {
        obj.insert(QString("FirstLastNameDiasporaedOut"), ::OpenAPI::toJsonValue(m_first_last_name_diasporaed_out));
    }
    if (m_first_last_name_gendered_out.isSet()) {
        obj.insert(QString("FirstLastNameGenderedOut"), ::OpenAPI::toJsonValue(m_first_last_name_gendered_out));
    }
    if (m_first_last_name_origined_out.isSet()) {
        obj.insert(QString("FirstLastNameOriginedOut"), ::OpenAPI::toJsonValue(m_first_last_name_origined_out));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_script_isSet) {
        obj.insert(QString("script"), ::OpenAPI::toJsonValue(m_script));
    }
    return obj;
}

OAIFirstLastNameDiasporaedOut OAICorridorOut::getFirstLastNameDiasporaedOut() const {
    return m_first_last_name_diasporaed_out;
}
void OAICorridorOut::setFirstLastNameDiasporaedOut(const OAIFirstLastNameDiasporaedOut &first_last_name_diasporaed_out) {
    m_first_last_name_diasporaed_out = first_last_name_diasporaed_out;
    m_first_last_name_diasporaed_out_isSet = true;
}

bool OAICorridorOut::is_first_last_name_diasporaed_out_Set() const{
    return m_first_last_name_diasporaed_out_isSet;
}

bool OAICorridorOut::is_first_last_name_diasporaed_out_Valid() const{
    return m_first_last_name_diasporaed_out_isValid;
}

OAIFirstLastNameGenderedOut OAICorridorOut::getFirstLastNameGenderedOut() const {
    return m_first_last_name_gendered_out;
}
void OAICorridorOut::setFirstLastNameGenderedOut(const OAIFirstLastNameGenderedOut &first_last_name_gendered_out) {
    m_first_last_name_gendered_out = first_last_name_gendered_out;
    m_first_last_name_gendered_out_isSet = true;
}

bool OAICorridorOut::is_first_last_name_gendered_out_Set() const{
    return m_first_last_name_gendered_out_isSet;
}

bool OAICorridorOut::is_first_last_name_gendered_out_Valid() const{
    return m_first_last_name_gendered_out_isValid;
}

OAIFirstLastNameOriginedOut OAICorridorOut::getFirstLastNameOriginedOut() const {
    return m_first_last_name_origined_out;
}
void OAICorridorOut::setFirstLastNameOriginedOut(const OAIFirstLastNameOriginedOut &first_last_name_origined_out) {
    m_first_last_name_origined_out = first_last_name_origined_out;
    m_first_last_name_origined_out_isSet = true;
}

bool OAICorridorOut::is_first_last_name_origined_out_Set() const{
    return m_first_last_name_origined_out_isSet;
}

bool OAICorridorOut::is_first_last_name_origined_out_Valid() const{
    return m_first_last_name_origined_out_isValid;
}

QString OAICorridorOut::getId() const {
    return m_id;
}
void OAICorridorOut::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICorridorOut::is_id_Set() const{
    return m_id_isSet;
}

bool OAICorridorOut::is_id_Valid() const{
    return m_id_isValid;
}

QString OAICorridorOut::getScript() const {
    return m_script;
}
void OAICorridorOut::setScript(const QString &script) {
    m_script = script;
    m_script_isSet = true;
}

bool OAICorridorOut::is_script_Set() const{
    return m_script_isSet;
}

bool OAICorridorOut::is_script_Valid() const{
    return m_script_isValid;
}

bool OAICorridorOut::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_first_last_name_diasporaed_out.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_last_name_gendered_out.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_last_name_origined_out.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_script_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICorridorOut::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
