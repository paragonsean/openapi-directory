/**
 * NamSor API v2
 * NamSor API v2 : enpoints to process personal names (gender, cultural origin or ethnicity) in all alphabets or languages. By default, enpoints use 1 unit per name (ex. Gender), but Ethnicity classification uses 10 to 20 units per name depending on taxonomy. Use GET methods for small tests, but prefer POST methods for higher throughput (batch processing of up to 100 names at a time). Need something you can't find here? We have many more features coming soon. Let us know, we'll do our best to add it! 
 *
 * The version of the OpenAPI document: 2.0.24
 * Contact: contact@namsor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FirstLastNameGenderedOut from './FirstLastNameGenderedOut';

/**
 * The BatchFirstLastNameGenderedOut model module.
 * @module model/BatchFirstLastNameGenderedOut
 * @version 2.0.24
 */
class BatchFirstLastNameGenderedOut {
    /**
     * Constructs a new <code>BatchFirstLastNameGenderedOut</code>.
     * Represents the output of inferring the LIKELY gender from a list of personal names.
     * @alias module:model/BatchFirstLastNameGenderedOut
     */
    constructor() { 
        
        BatchFirstLastNameGenderedOut.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BatchFirstLastNameGenderedOut</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BatchFirstLastNameGenderedOut} obj Optional instance to populate.
     * @return {module:model/BatchFirstLastNameGenderedOut} The populated <code>BatchFirstLastNameGenderedOut</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BatchFirstLastNameGenderedOut();

            if (data.hasOwnProperty('personalNames')) {
                obj['personalNames'] = ApiClient.convertToType(data['personalNames'], [FirstLastNameGenderedOut]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BatchFirstLastNameGenderedOut</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BatchFirstLastNameGenderedOut</code>.
     */
    static validateJSON(data) {
        if (data['personalNames']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['personalNames'])) {
                throw new Error("Expected the field `personalNames` to be an array in the JSON data but got " + data['personalNames']);
            }
            // validate the optional field `personalNames` (array)
            for (const item of data['personalNames']) {
                FirstLastNameGenderedOut.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Classified genderized names
 * @member {Array.<module:model/FirstLastNameGenderedOut>} personalNames
 */
BatchFirstLastNameGenderedOut.prototype['personalNames'] = undefined;






export default BatchFirstLastNameGenderedOut;

