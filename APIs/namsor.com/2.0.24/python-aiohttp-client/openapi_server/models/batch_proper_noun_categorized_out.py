# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.proper_noun_categorized_out import ProperNounCategorizedOut
from openapi_server import util


class BatchProperNounCategorizedOut(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, proper_nouns: List[ProperNounCategorizedOut]=None):
        """BatchProperNounCategorizedOut - a model defined in OpenAPI

        :param proper_nouns: The proper_nouns of this BatchProperNounCategorizedOut.
        """
        self.openapi_types = {
            'proper_nouns': List[ProperNounCategorizedOut]
        }

        self.attribute_map = {
            'proper_nouns': 'properNouns'
        }

        self._proper_nouns = proper_nouns

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchProperNounCategorizedOut':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchProperNounCategorizedOut of this BatchProperNounCategorizedOut.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def proper_nouns(self):
        """Gets the proper_nouns of this BatchProperNounCategorizedOut.

        Classified typed proper names

        :return: The proper_nouns of this BatchProperNounCategorizedOut.
        :rtype: List[ProperNounCategorizedOut]
        """
        return self._proper_nouns

    @proper_nouns.setter
    def proper_nouns(self, proper_nouns):
        """Sets the proper_nouns of this BatchProperNounCategorizedOut.

        Classified typed proper names

        :param proper_nouns: The proper_nouns of this BatchProperNounCategorizedOut.
        :type proper_nouns: List[ProperNounCategorizedOut]
        """

        self._proper_nouns = proper_nouns
