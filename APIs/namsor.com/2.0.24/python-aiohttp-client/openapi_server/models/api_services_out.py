# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.api_service_out import APIServiceOut
from openapi_server import util


class APIServicesOut(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_services: List[APIServiceOut]=None):
        """APIServicesOut - a model defined in OpenAPI

        :param api_services: The api_services of this APIServicesOut.
        """
        self.openapi_types = {
            'api_services': List[APIServiceOut]
        }

        self.attribute_map = {
            'api_services': 'apiServices'
        }

        self._api_services = api_services

    @classmethod
    def from_dict(cls, dikt: dict) -> 'APIServicesOut':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The APIServicesOut of this APIServicesOut.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_services(self):
        """Gets the api_services of this APIServicesOut.

        List of API Services

        :return: The api_services of this APIServicesOut.
        :rtype: List[APIServiceOut]
        """
        return self._api_services

    @api_services.setter
    def api_services(self, api_services):
        """Sets the api_services of this APIServicesOut.

        List of API Services

        :param api_services: The api_services of this APIServicesOut.
        :type api_services: List[APIServiceOut]
        """

        self._api_services = api_services
