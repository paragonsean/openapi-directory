# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.corridor_out import CorridorOut
from openapi_server import util


class BatchCorridorOut(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, corridor_from_to: List[CorridorOut]=None):
        """BatchCorridorOut - a model defined in OpenAPI

        :param corridor_from_to: The corridor_from_to of this BatchCorridorOut.
        """
        self.openapi_types = {
            'corridor_from_to': List[CorridorOut]
        }

        self.attribute_map = {
            'corridor_from_to': 'corridorFromTo'
        }

        self._corridor_from_to = corridor_from_to

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchCorridorOut':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchCorridorOut of this BatchCorridorOut.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def corridor_from_to(self):
        """Gets the corridor_from_to of this BatchCorridorOut.

        Classified corridors

        :return: The corridor_from_to of this BatchCorridorOut.
        :rtype: List[CorridorOut]
        """
        return self._corridor_from_to

    @corridor_from_to.setter
    def corridor_from_to(self, corridor_from_to):
        """Sets the corridor_from_to of this BatchCorridorOut.

        Classified corridors

        :param corridor_from_to: The corridor_from_to of this BatchCorridorOut.
        :type corridor_from_to: List[CorridorOut]
        """

        self._corridor_from_to = corridor_from_to
