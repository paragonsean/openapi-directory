# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.name_match_candidate_out import NameMatchCandidateOut
from openapi_server import util


class NameMatchCandidatesOut(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, first_name: str=None, id: str=None, last_name: str=None, match_candidates: List[NameMatchCandidateOut]=None, order_option: str=None, script: str=None):
        """NameMatchCandidatesOut - a model defined in OpenAPI

        :param first_name: The first_name of this NameMatchCandidatesOut.
        :param id: The id of this NameMatchCandidatesOut.
        :param last_name: The last_name of this NameMatchCandidatesOut.
        :param match_candidates: The match_candidates of this NameMatchCandidatesOut.
        :param order_option: The order_option of this NameMatchCandidatesOut.
        :param script: The script of this NameMatchCandidatesOut.
        """
        self.openapi_types = {
            'first_name': str,
            'id': str,
            'last_name': str,
            'match_candidates': List[NameMatchCandidateOut],
            'order_option': str,
            'script': str
        }

        self.attribute_map = {
            'first_name': 'firstName',
            'id': 'id',
            'last_name': 'lastName',
            'match_candidates': 'matchCandidates',
            'order_option': 'orderOption',
            'script': 'script'
        }

        self._first_name = first_name
        self._id = id
        self._last_name = last_name
        self._match_candidates = match_candidates
        self._order_option = order_option
        self._script = script

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NameMatchCandidatesOut':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NameMatchCandidatesOut of this NameMatchCandidatesOut.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def first_name(self):
        """Gets the first_name of this NameMatchCandidatesOut.

        The first name (also known as given name)

        :return: The first_name of this NameMatchCandidatesOut.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this NameMatchCandidatesOut.

        The first name (also known as given name)

        :param first_name: The first_name of this NameMatchCandidatesOut.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def id(self):
        """Gets the id of this NameMatchCandidatesOut.


        :return: The id of this NameMatchCandidatesOut.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this NameMatchCandidatesOut.


        :param id: The id of this NameMatchCandidatesOut.
        :type id: str
        """

        self._id = id

    @property
    def last_name(self):
        """Gets the last_name of this NameMatchCandidatesOut.

        The last name (also known as family name, or surname)

        :return: The last_name of this NameMatchCandidatesOut.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this NameMatchCandidatesOut.

        The last name (also known as family name, or surname)

        :param last_name: The last_name of this NameMatchCandidatesOut.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def match_candidates(self):
        """Gets the match_candidates of this NameMatchCandidatesOut.

        The ordered list of name matching candidates

        :return: The match_candidates of this NameMatchCandidatesOut.
        :rtype: List[NameMatchCandidateOut]
        """
        return self._match_candidates

    @match_candidates.setter
    def match_candidates(self, match_candidates):
        """Sets the match_candidates of this NameMatchCandidatesOut.

        The ordered list of name matching candidates

        :param match_candidates: The match_candidates of this NameMatchCandidatesOut.
        :type match_candidates: List[NameMatchCandidateOut]
        """

        self._match_candidates = match_candidates

    @property
    def order_option(self):
        """Gets the order_option of this NameMatchCandidatesOut.

        The option for ordering

        :return: The order_option of this NameMatchCandidatesOut.
        :rtype: str
        """
        return self._order_option

    @order_option.setter
    def order_option(self, order_option):
        """Sets the order_option of this NameMatchCandidatesOut.

        The option for ordering

        :param order_option: The order_option of this NameMatchCandidatesOut.
        :type order_option: str
        """

        self._order_option = order_option

    @property
    def script(self):
        """Gets the script of this NameMatchCandidatesOut.


        :return: The script of this NameMatchCandidatesOut.
        :rtype: str
        """
        return self._script

    @script.setter
    def script(self, script):
        """Sets the script of this NameMatchCandidatesOut.


        :param script: The script of this NameMatchCandidatesOut.
        :type script: str
        """

        self._script = script
