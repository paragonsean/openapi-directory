# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.region_iso import RegionISO
from openapi_server import util


class RegionOut(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, countries_and_regions: List[RegionISO]=None):
        """RegionOut - a model defined in OpenAPI

        :param countries_and_regions: The countries_and_regions of this RegionOut.
        """
        self.openapi_types = {
            'countries_and_regions': List[RegionISO]
        }

        self.attribute_map = {
            'countries_and_regions': 'countriesAndRegions'
        }

        self._countries_and_regions = countries_and_regions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RegionOut':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RegionOut of this RegionOut.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def countries_and_regions(self):
        """Gets the countries_and_regions of this RegionOut.

        List of countries and regions

        :return: The countries_and_regions of this RegionOut.
        :rtype: List[RegionISO]
        """
        return self._countries_and_regions

    @countries_and_regions.setter
    def countries_and_regions(self, countries_and_regions):
        """Sets the countries_and_regions of this RegionOut.

        List of countries and regions

        :param countries_and_regions: The countries_and_regions of this RegionOut.
        :type countries_and_regions: List[RegionISO]
        """

        self._countries_and_regions = countries_and_regions
