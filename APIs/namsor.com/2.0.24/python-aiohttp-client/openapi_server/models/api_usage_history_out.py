# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.api_counter_v2_out import APICounterV2Out
from openapi_server import util


class APIUsageHistoryOut(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, detailed_usage: List[APICounterV2Out]=None):
        """APIUsageHistoryOut - a model defined in OpenAPI

        :param detailed_usage: The detailed_usage of this APIUsageHistoryOut.
        """
        self.openapi_types = {
            'detailed_usage': List[APICounterV2Out]
        }

        self.attribute_map = {
            'detailed_usage': 'detailedUsage'
        }

        self._detailed_usage = detailed_usage

    @classmethod
    def from_dict(cls, dikt: dict) -> 'APIUsageHistoryOut':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The APIUsageHistoryOut of this APIUsageHistoryOut.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def detailed_usage(self):
        """Gets the detailed_usage of this APIUsageHistoryOut.

        Detailed usage as reported by the deduplicating API counter.

        :return: The detailed_usage of this APIUsageHistoryOut.
        :rtype: List[APICounterV2Out]
        """
        return self._detailed_usage

    @detailed_usage.setter
    def detailed_usage(self, detailed_usage):
        """Sets the detailed_usage of this APIUsageHistoryOut.

        Detailed usage as reported by the deduplicating API counter.

        :param detailed_usage: The detailed_usage of this APIUsageHistoryOut.
        :type detailed_usage: List[APICounterV2Out]
        """

        self._detailed_usage = detailed_usage
