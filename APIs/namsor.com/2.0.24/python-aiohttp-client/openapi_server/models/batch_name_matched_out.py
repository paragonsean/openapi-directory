# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.name_matched_out import NameMatchedOut
from openapi_server import util


class BatchNameMatchedOut(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, matched_names: List[NameMatchedOut]=None):
        """BatchNameMatchedOut - a model defined in OpenAPI

        :param matched_names: The matched_names of this BatchNameMatchedOut.
        """
        self.openapi_types = {
            'matched_names': List[NameMatchedOut]
        }

        self.attribute_map = {
            'matched_names': 'matchedNames'
        }

        self._matched_names = matched_names

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchNameMatchedOut':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchNameMatchedOut of this BatchNameMatchedOut.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def matched_names(self):
        """Gets the matched_names of this BatchNameMatchedOut.

        Classified matched names

        :return: The matched_names of this BatchNameMatchedOut.
        :rtype: List[NameMatchedOut]
        """
        return self._matched_names

    @matched_names.setter
    def matched_names(self, matched_names):
        """Sets the matched_names of this BatchNameMatchedOut.

        Classified matched names

        :param matched_names: The matched_names of this BatchNameMatchedOut.
        :type matched_names: List[NameMatchedOut]
        """

        self._matched_names = matched_names
