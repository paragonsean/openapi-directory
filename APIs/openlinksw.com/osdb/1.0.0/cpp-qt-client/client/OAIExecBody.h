/**
 * OSDB REST API v1
 * An OpenAPI description of the OpenLink Smart Data Bot REST API v1
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: osdb@openlinksw.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExecBody.h
 *
 * 
 */

#ifndef OAIExecBody_H
#define OAIExecBody_H

#include <QJsonObject>

#include <QByteArray>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIExecBody : public OAIObject {
public:
    OAIExecBody();
    OAIExecBody(QString json);
    ~OAIExecBody() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getActionSpecificProperty1() const;
    void setActionSpecificProperty1(const QString &action_specific_property1);
    bool is_action_specific_property1_Set() const;
    bool is_action_specific_property1_Valid() const;

    QString getActionSpecificProperty2() const;
    void setActionSpecificProperty2(const QString &action_specific_property2);
    bool is_action_specific_property2_Set() const;
    bool is_action_specific_property2_Valid() const;

    QString getOsdbbodyDataEncoding() const;
    void setOsdbbodyDataEncoding(const QString &osdbbody_data_encoding);
    bool is_osdbbody_data_encoding_Set() const;
    bool is_osdbbody_data_encoding_Valid() const;

    QByteArray getOsdbbodyDataRaw() const;
    void setOsdbbodyDataRaw(const QByteArray &osdbbody_data_raw);
    bool is_osdbbody_data_raw_Set() const;
    bool is_osdbbody_data_raw_Valid() const;

    QString getOsdbbodyDataSrcUrl() const;
    void setOsdbbodyDataSrcUrl(const QString &osdbbody_data_src_url);
    bool is_osdbbody_data_src_url_Set() const;
    bool is_osdbbody_data_src_url_Valid() const;

    QString getOsdboutputType() const;
    void setOsdboutputType(const QString &osdboutput_type);
    bool is_osdboutput_type_Set() const;
    bool is_osdboutput_type_Valid() const;

    QString getOsdbresponseFormat() const;
    void setOsdbresponseFormat(const QString &osdbresponse_format);
    bool is_osdbresponse_format_Set() const;
    bool is_osdbresponse_format_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_action_specific_property1;
    bool m_action_specific_property1_isSet;
    bool m_action_specific_property1_isValid;

    QString m_action_specific_property2;
    bool m_action_specific_property2_isSet;
    bool m_action_specific_property2_isValid;

    QString m_osdbbody_data_encoding;
    bool m_osdbbody_data_encoding_isSet;
    bool m_osdbbody_data_encoding_isValid;

    QByteArray m_osdbbody_data_raw;
    bool m_osdbbody_data_raw_isSet;
    bool m_osdbbody_data_raw_isValid;

    QString m_osdbbody_data_src_url;
    bool m_osdbbody_data_src_url_isSet;
    bool m_osdbbody_data_src_url_isValid;

    QString m_osdboutput_type;
    bool m_osdboutput_type_isSet;
    bool m_osdboutput_type_isValid;

    QString m_osdbresponse_format;
    bool m_osdbresponse_format_isSet;
    bool m_osdbresponse_format_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExecBody)

#endif // OAIExecBody_H
