/**
 * OSDB REST API v1
 * An OpenAPI description of the OpenLink Smart Data Bot REST API v1
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: osdb@openlinksw.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIActionHelp.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIActionHelp::OAIActionHelp(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIActionHelp::OAIActionHelp() {
    this->initializeModel();
}

OAIActionHelp::~OAIActionHelp() {}

void OAIActionHelp::initializeModel() {

    m_action_id_isSet = false;
    m_action_id_isValid = false;

    m_help_text_isSet = false;
    m_help_text_isValid = false;

    m_service_id_isSet = false;
    m_service_id_isValid = false;
}

void OAIActionHelp::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIActionHelp::fromJsonObject(QJsonObject json) {

    m_action_id_isValid = ::OpenAPI::fromJsonValue(m_action_id, json[QString("action_id")]);
    m_action_id_isSet = !json[QString("action_id")].isNull() && m_action_id_isValid;

    m_help_text_isValid = ::OpenAPI::fromJsonValue(m_help_text, json[QString("help_text")]);
    m_help_text_isSet = !json[QString("help_text")].isNull() && m_help_text_isValid;

    m_service_id_isValid = ::OpenAPI::fromJsonValue(m_service_id, json[QString("service_id")]);
    m_service_id_isSet = !json[QString("service_id")].isNull() && m_service_id_isValid;
}

QString OAIActionHelp::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIActionHelp::asJsonObject() const {
    QJsonObject obj;
    if (m_action_id_isSet) {
        obj.insert(QString("action_id"), ::OpenAPI::toJsonValue(m_action_id));
    }
    if (m_help_text_isSet) {
        obj.insert(QString("help_text"), ::OpenAPI::toJsonValue(m_help_text));
    }
    if (m_service_id_isSet) {
        obj.insert(QString("service_id"), ::OpenAPI::toJsonValue(m_service_id));
    }
    return obj;
}

QString OAIActionHelp::getActionId() const {
    return m_action_id;
}
void OAIActionHelp::setActionId(const QString &action_id) {
    m_action_id = action_id;
    m_action_id_isSet = true;
}

bool OAIActionHelp::is_action_id_Set() const{
    return m_action_id_isSet;
}

bool OAIActionHelp::is_action_id_Valid() const{
    return m_action_id_isValid;
}

QString OAIActionHelp::getHelpText() const {
    return m_help_text;
}
void OAIActionHelp::setHelpText(const QString &help_text) {
    m_help_text = help_text;
    m_help_text_isSet = true;
}

bool OAIActionHelp::is_help_text_Set() const{
    return m_help_text_isSet;
}

bool OAIActionHelp::is_help_text_Valid() const{
    return m_help_text_isValid;
}

QString OAIActionHelp::getServiceId() const {
    return m_service_id;
}
void OAIActionHelp::setServiceId(const QString &service_id) {
    m_service_id = service_id;
    m_service_id_isSet = true;
}

bool OAIActionHelp::is_service_id_Set() const{
    return m_service_id_isSet;
}

bool OAIActionHelp::is_service_id_Valid() const{
    return m_service_id_isValid;
}

bool OAIActionHelp::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_help_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIActionHelp::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_action_id_isValid && m_help_text_isValid && m_service_id_isValid && true;
}

} // namespace OpenAPI
