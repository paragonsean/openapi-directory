/**
 * OSDB REST API v1
 * An OpenAPI description of the OpenLink Smart Data Bot REST API v1
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: osdb@openlinksw.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ActionDescription from './model/ActionDescription';
import ActionHelp from './model/ActionHelp';
import ActionHelpResponse from './model/ActionHelpResponse';
import DescribeActionResponse from './model/DescribeActionResponse';
import DescribeServiceResponse from './model/DescribeServiceResponse';
import EntryPoint from './model/EntryPoint';
import EntryPointParameter from './model/EntryPointParameter';
import ErrorModel from './model/ErrorModel';
import ExecBody from './model/ExecBody';
import ListActionsResponse from './model/ListActionsResponse';
import ListServicesResponse from './model/ListServicesResponse';
import LoadService200Response from './model/LoadService200Response';
import LoadServiceRequest from './model/LoadServiceRequest';
import LoginResponse from './model/LoginResponse';
import LoginResponseResponse from './model/LoginResponseResponse';
import LogoutResponse from './model/LogoutResponse';
import LogoutResponseResponse from './model/LogoutResponseResponse';
import ServiceDescription from './model/ServiceDescription';
import OSDBApi from './api/OSDBApi';


/**
* An OpenAPI description of the OpenLink Smart Data Bot REST API v1.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var OsdbRestApiV1 = require('index'); // See note below*.
* var xxxSvc = new OsdbRestApiV1.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new OsdbRestApiV1.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new OsdbRestApiV1.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new OsdbRestApiV1.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ActionDescription model constructor.
     * @property {module:model/ActionDescription}
     */
    ActionDescription,

    /**
     * The ActionHelp model constructor.
     * @property {module:model/ActionHelp}
     */
    ActionHelp,

    /**
     * The ActionHelpResponse model constructor.
     * @property {module:model/ActionHelpResponse}
     */
    ActionHelpResponse,

    /**
     * The DescribeActionResponse model constructor.
     * @property {module:model/DescribeActionResponse}
     */
    DescribeActionResponse,

    /**
     * The DescribeServiceResponse model constructor.
     * @property {module:model/DescribeServiceResponse}
     */
    DescribeServiceResponse,

    /**
     * The EntryPoint model constructor.
     * @property {module:model/EntryPoint}
     */
    EntryPoint,

    /**
     * The EntryPointParameter model constructor.
     * @property {module:model/EntryPointParameter}
     */
    EntryPointParameter,

    /**
     * The ErrorModel model constructor.
     * @property {module:model/ErrorModel}
     */
    ErrorModel,

    /**
     * The ExecBody model constructor.
     * @property {module:model/ExecBody}
     */
    ExecBody,

    /**
     * The ListActionsResponse model constructor.
     * @property {module:model/ListActionsResponse}
     */
    ListActionsResponse,

    /**
     * The ListServicesResponse model constructor.
     * @property {module:model/ListServicesResponse}
     */
    ListServicesResponse,

    /**
     * The LoadService200Response model constructor.
     * @property {module:model/LoadService200Response}
     */
    LoadService200Response,

    /**
     * The LoadServiceRequest model constructor.
     * @property {module:model/LoadServiceRequest}
     */
    LoadServiceRequest,

    /**
     * The LoginResponse model constructor.
     * @property {module:model/LoginResponse}
     */
    LoginResponse,

    /**
     * The LoginResponseResponse model constructor.
     * @property {module:model/LoginResponseResponse}
     */
    LoginResponseResponse,

    /**
     * The LogoutResponse model constructor.
     * @property {module:model/LogoutResponse}
     */
    LogoutResponse,

    /**
     * The LogoutResponseResponse model constructor.
     * @property {module:model/LogoutResponseResponse}
     */
    LogoutResponseResponse,

    /**
     * The ServiceDescription model constructor.
     * @property {module:model/ServiceDescription}
     */
    ServiceDescription,

    /**
    * The OSDBApi service constructor.
    * @property {module:api/OSDBApi}
    */
    OSDBApi
};
