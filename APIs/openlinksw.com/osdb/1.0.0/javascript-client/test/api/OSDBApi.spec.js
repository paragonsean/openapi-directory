/**
 * OSDB REST API v1
 * An OpenAPI description of the OpenLink Smart Data Bot REST API v1
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: osdb@openlinksw.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OsdbRestApiV1);
  }
}(this, function(expect, OsdbRestApiV1) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OsdbRestApiV1.OSDBApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OSDBApi', function() {
    describe('actionHelp', function() {
      it('should call actionHelp successfully', function(done) {
        //uncomment below and update the code to test actionHelp
        //instance.actionHelp(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeAction', function() {
      it('should call describeAction successfully', function(done) {
        //uncomment below and update the code to test describeAction
        //instance.describeAction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeService', function() {
      it('should call describeService successfully', function(done) {
        //uncomment below and update the code to test describeService
        //instance.describeService(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('executeAction', function() {
      it('should call executeAction successfully', function(done) {
        //uncomment below and update the code to test executeAction
        //instance.executeAction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listActions', function() {
      it('should call listActions successfully', function(done) {
        //uncomment below and update the code to test listActions
        //instance.listActions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listServices', function() {
      it('should call listServices successfully', function(done) {
        //uncomment below and update the code to test listServices
        //instance.listServices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loadService', function() {
      it('should call loadService successfully', function(done) {
        //uncomment below and update the code to test loadService
        //instance.loadService(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('login', function() {
      it('should call login successfully', function(done) {
        //uncomment below and update the code to test login
        //instance.login(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logout', function() {
      it('should call logout successfully', function(done) {
        //uncomment below and update the code to test logout
        //instance.logout(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('unloadService', function() {
      it('should call unloadService successfully', function(done) {
        //uncomment below and update the code to test unloadService
        //instance.unloadService(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
