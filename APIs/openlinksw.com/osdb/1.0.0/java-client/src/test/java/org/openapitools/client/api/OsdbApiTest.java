/*
 * OSDB REST API v1
 * An OpenAPI description of the OpenLink Smart Data Bot REST API v1
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: osdb@openlinksw.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ActionHelpResponse;
import org.openapitools.client.model.DescribeActionResponse;
import org.openapitools.client.model.DescribeServiceResponse;
import org.openapitools.client.model.ErrorModel;
import org.openapitools.client.model.ExecBody;
import org.openapitools.client.model.ListActionsResponse;
import org.openapitools.client.model.ListServicesResponse;
import org.openapitools.client.model.LoadService200Response;
import org.openapitools.client.model.LoadServiceRequest;
import org.openapitools.client.model.LoginResponse;
import org.openapitools.client.model.LogoutResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OsdbApi
 */
@Disabled
public class OsdbApiTest {

    private final OsdbApi api = new OsdbApi();

    /**
     * Action help
     *
     * Returns the help text for a given service action
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void actionHelpTest() throws ApiException {
        String serviceId = null;
        String actionId = null;
        ActionHelpResponse response = api.actionHelp(serviceId, actionId);
        // TODO: test validations
    }

    /**
     * Describe action
     *
     * Returns a description of a given service action.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeActionTest() throws ApiException {
        String serviceId = null;
        String actionId = null;
        DescribeActionResponse response = api.describeAction(serviceId, actionId);
        // TODO: test validations
    }

    /**
     * Describe service
     *
     * Returns a description of a given service
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeServiceTest() throws ApiException {
        String serviceId = null;
        DescribeServiceResponse response = api.describeService(serviceId);
        // TODO: test validations
    }

    /**
     * Execute action
     *
     * Executes a registered service action and returns any output from the action. The data returned in the POST response body may be:  * the raw action output,  * a URL encapsulating the action request which executes the action when dereferenced  (only for actions using GET),  * RDF generated from the action output, * a URL to an RDF viewer&#39;s display of the generated RDF.  Any parameters required by the action are supplied as a JSON object in the POST body. The parameter types supported are: \&quot;query\&quot;, \&quot;header\&quot;, \&quot;uri\&quot;, \&quot;path\&quot; and \&quot;body\&quot;.  The parameter type determines where a supplied parameter value is inserted into the HTTP request constructed by OSDB to invoke the target service action. In addition to native parameters required by the service action, &#39;Execute action&#39; accepts some OSDB-specific parameters.&lt;br/&gt;&lt;br/&gt;  **Examples** * &#x60;&#x60;&#x60;curl -ik -X POST -d &#39;{ \&quot;latitude\&quot;:\&quot;37.7759792\&quot;, \&quot;longitude\&quot;:\&quot;-122.41823\&quot; }&#39; -H &#39;Content-Type: application/json&#39; https://osdb.openlinksw.com/osdb/api/v1/actions/uber/products/exec&#x60;&#x60;&#x60;   * &#x60;&#x60;&#x60;curl -ikL -X POST -d &#39;{ \&quot;latitude\&quot;:\&quot;37.7759792\&quot;, \&quot;longitude\&quot;:\&quot;-122.41823\&quot;, \&quot;osdb:output_type\&quot;:\&quot;generate_rdf\&quot;, \&quot;osdb:response_format\&quot;:\&quot;application/rdf+xml\&quot; }&#39; -H &#39;Content-Type: application/json&#39; https://osdb.openlinksw.com/osdb/api/v1/actions/uber/products/exec&#x60;&#x60;&#x60;  * &#x60;&#x60;&#x60;curl -ikL -X POST -d &#39;{ \&quot;latitude\&quot;:\&quot;37.7759792\&quot;, \&quot;longitude\&quot;:\&quot;-122.41823\&quot;, \&quot;osdb:output_type\&quot;:\&quot;display_rdf\&quot; }&#39; -H &#39;Content-Type: application/json&#39; https://osdb.openlinksw.com/osdb/api/v1/actions/uber/products/exec&#x60;&#x60;&#x60;  * &#x60;&#x60;&#x60;curl -ik -X POST -d &#39;{ \&quot;q\&quot;:\&quot;skiing\&quot;, \&quot;osdb:response_format\&quot;: \&quot;application/rdf+xml\&quot; }&#39; -H &#39;Content-Type: application/json&#39; https://osdb.openlinksw.com/osdb/api/v1/actions/facet/search/exec&#x60;&#x60;&#x60;  * &#x60;&#x60;&#x60;curl -ik -X POST -d &#39;{ \&quot;q\&quot;:\&quot;skiing\&quot;, \&quot;osdb:output_type\&quot;: \&quot;url_only\&quot; }&#39; -H &#39;Content-Type: application/json&#39; https://osdb.openlinksw.com/osdb/api/v1/actions/facet/search/exec&#x60;&#x60;&#x60;  * &#x60;&#x60;&#x60;curl -ik -X POST -d &#39;{ \&quot;Content-Location\&quot;: \&quot;http://demo.openlinksw.co.uk/pubs\&quot;, \&quot;osdb:body_data_src_url\&quot;: \&quot;http://ods-qa.openlinksw.com/DAV/home/osdb/pubs.csv\&quot;, \&quot;extractor\&quot;: \&quot;csv\&quot;, \&quot;osdb:response_format\&quot;: \&quot;application/rdf+xml\&quot;, \&quot;osdb:body_data_encoding\&quot;: \&quot;text/csv\&quot; }&#39; -H &#39;Content-Type: application/json&#39; https://osdb.openlinksw.com/osdb/api/v1/actions/csv_transformer/transform/exec&#x60;&#x60;&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void executeActionTest() throws ApiException {
        String serviceId = null;
        String actionId = null;
        ExecBody execBody = null;
        api.executeAction(serviceId, actionId, execBody);
        // TODO: test validations
    }

    /**
     * List actions
     *
     * Returns an array of action descriptions for the actions supported by the given service
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listActionsTest() throws ApiException {
        String serviceId = null;
        ListActionsResponse response = api.listActions(serviceId);
        // TODO: test validations
    }

    /**
     * List services
     *
     * Returns descriptions of all services registered with the OSDB server.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listServicesTest() throws ApiException {
        ListServicesResponse response = api.listServices();
        // TODO: test validations
    }

    /**
     * Load service
     *
     * Loads a service description into the OSDB Service Registry
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void loadServiceTest() throws ApiException {
        LoadServiceRequest loadServiceRequest = null;
        LoadService200Response response = api.loadService(loadServiceRequest);
        // TODO: test validations
    }

    /**
     * Login
     *
     * Logs a user into the OSDB server, authenticating them by their WebID and returning an OSDB session ID in cookie osdb.sid
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void loginTest() throws ApiException {
        LoginResponse response = api.login();
        // TODO: test validations
    }

    /**
     * Logout
     *
     * Logs a user out of the OSDB server, ending their OSDB session
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void logoutTest() throws ApiException {
        LogoutResponse response = api.logout();
        // TODO: test validations
    }

    /**
     * Unload service
     *
     * Removes a service description from the OSDB Service Registry
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void unloadServiceTest() throws ApiException {
        String serviceId = null;
        LoadService200Response response = api.unloadService(serviceId);
        // TODO: test validations
    }

}
