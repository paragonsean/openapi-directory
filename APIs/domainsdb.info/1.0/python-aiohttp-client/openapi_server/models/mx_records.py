# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MXRecords(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, exchange: str=None, priority: int=None):
        """MXRecords - a model defined in OpenAPI

        :param exchange: The exchange of this MXRecords.
        :param priority: The priority of this MXRecords.
        """
        self.openapi_types = {
            'exchange': str,
            'priority': int
        }

        self.attribute_map = {
            'exchange': 'exchange',
            'priority': 'priority'
        }

        self._exchange = exchange
        self._priority = priority

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MXRecords':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MX_records of this MXRecords.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def exchange(self):
        """Gets the exchange of this MXRecords.

        MX domain

        :return: The exchange of this MXRecords.
        :rtype: str
        """
        return self._exchange

    @exchange.setter
    def exchange(self, exchange):
        """Sets the exchange of this MXRecords.

        MX domain

        :param exchange: The exchange of this MXRecords.
        :type exchange: str
        """

        self._exchange = exchange

    @property
    def priority(self):
        """Gets the priority of this MXRecords.


        :return: The priority of this MXRecords.
        :rtype: int
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this MXRecords.


        :param priority: The priority of this MXRecords.
        :type priority: int
        """

        self._priority = priority
