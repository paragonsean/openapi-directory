/**
 * Domains-Index API
 * Domains-Index database powered API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdate_model.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdate_model::OAIUpdate_model(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdate_model::OAIUpdate_model() {
    this->initializeModel();
}

OAIUpdate_model::~OAIUpdate_model() {}

void OAIUpdate_model::initializeModel() {

    m_added_isSet = false;
    m_added_isValid = false;

    m_added_download_isSet = false;
    m_added_download_isValid = false;

    m_date_isSet = false;
    m_date_isValid = false;

    m_deleted_isSet = false;
    m_deleted_isValid = false;

    m_deleted_download_isSet = false;
    m_deleted_download_isValid = false;
}

void OAIUpdate_model::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdate_model::fromJsonObject(QJsonObject json) {

    m_added_isValid = ::OpenAPI::fromJsonValue(m_added, json[QString("added")]);
    m_added_isSet = !json[QString("added")].isNull() && m_added_isValid;

    m_added_download_isValid = ::OpenAPI::fromJsonValue(m_added_download, json[QString("added_download")]);
    m_added_download_isSet = !json[QString("added_download")].isNull() && m_added_download_isValid;

    m_date_isValid = ::OpenAPI::fromJsonValue(m_date, json[QString("date")]);
    m_date_isSet = !json[QString("date")].isNull() && m_date_isValid;

    m_deleted_isValid = ::OpenAPI::fromJsonValue(m_deleted, json[QString("deleted")]);
    m_deleted_isSet = !json[QString("deleted")].isNull() && m_deleted_isValid;

    m_deleted_download_isValid = ::OpenAPI::fromJsonValue(m_deleted_download, json[QString("deleted_download")]);
    m_deleted_download_isSet = !json[QString("deleted_download")].isNull() && m_deleted_download_isValid;
}

QString OAIUpdate_model::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdate_model::asJsonObject() const {
    QJsonObject obj;
    if (m_added_isSet) {
        obj.insert(QString("added"), ::OpenAPI::toJsonValue(m_added));
    }
    if (m_added_download_isSet) {
        obj.insert(QString("added_download"), ::OpenAPI::toJsonValue(m_added_download));
    }
    if (m_date_isSet) {
        obj.insert(QString("date"), ::OpenAPI::toJsonValue(m_date));
    }
    if (m_deleted_isSet) {
        obj.insert(QString("deleted"), ::OpenAPI::toJsonValue(m_deleted));
    }
    if (m_deleted_download_isSet) {
        obj.insert(QString("deleted_download"), ::OpenAPI::toJsonValue(m_deleted_download));
    }
    return obj;
}

QString OAIUpdate_model::getAdded() const {
    return m_added;
}
void OAIUpdate_model::setAdded(const QString &added) {
    m_added = added;
    m_added_isSet = true;
}

bool OAIUpdate_model::is_added_Set() const{
    return m_added_isSet;
}

bool OAIUpdate_model::is_added_Valid() const{
    return m_added_isValid;
}

QString OAIUpdate_model::getAddedDownload() const {
    return m_added_download;
}
void OAIUpdate_model::setAddedDownload(const QString &added_download) {
    m_added_download = added_download;
    m_added_download_isSet = true;
}

bool OAIUpdate_model::is_added_download_Set() const{
    return m_added_download_isSet;
}

bool OAIUpdate_model::is_added_download_Valid() const{
    return m_added_download_isValid;
}

QString OAIUpdate_model::getDate() const {
    return m_date;
}
void OAIUpdate_model::setDate(const QString &date) {
    m_date = date;
    m_date_isSet = true;
}

bool OAIUpdate_model::is_date_Set() const{
    return m_date_isSet;
}

bool OAIUpdate_model::is_date_Valid() const{
    return m_date_isValid;
}

QString OAIUpdate_model::getDeleted() const {
    return m_deleted;
}
void OAIUpdate_model::setDeleted(const QString &deleted) {
    m_deleted = deleted;
    m_deleted_isSet = true;
}

bool OAIUpdate_model::is_deleted_Set() const{
    return m_deleted_isSet;
}

bool OAIUpdate_model::is_deleted_Valid() const{
    return m_deleted_isValid;
}

QString OAIUpdate_model::getDeletedDownload() const {
    return m_deleted_download;
}
void OAIUpdate_model::setDeletedDownload(const QString &deleted_download) {
    m_deleted_download = deleted_download;
    m_deleted_download_isSet = true;
}

bool OAIUpdate_model::is_deleted_download_Set() const{
    return m_deleted_download_isSet;
}

bool OAIUpdate_model::is_deleted_download_Valid() const{
    return m_deleted_download_isValid;
}

bool OAIUpdate_model::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_added_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_added_download_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deleted_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deleted_download_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdate_model::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
