/**
 * Domains-Index API
 * Domains-Index database powered API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMX_records.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMX_records::OAIMX_records(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMX_records::OAIMX_records() {
    this->initializeModel();
}

OAIMX_records::~OAIMX_records() {}

void OAIMX_records::initializeModel() {

    m_exchange_isSet = false;
    m_exchange_isValid = false;

    m_priority_isSet = false;
    m_priority_isValid = false;
}

void OAIMX_records::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMX_records::fromJsonObject(QJsonObject json) {

    m_exchange_isValid = ::OpenAPI::fromJsonValue(m_exchange, json[QString("exchange")]);
    m_exchange_isSet = !json[QString("exchange")].isNull() && m_exchange_isValid;

    m_priority_isValid = ::OpenAPI::fromJsonValue(m_priority, json[QString("priority")]);
    m_priority_isSet = !json[QString("priority")].isNull() && m_priority_isValid;
}

QString OAIMX_records::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMX_records::asJsonObject() const {
    QJsonObject obj;
    if (m_exchange_isSet) {
        obj.insert(QString("exchange"), ::OpenAPI::toJsonValue(m_exchange));
    }
    if (m_priority_isSet) {
        obj.insert(QString("priority"), ::OpenAPI::toJsonValue(m_priority));
    }
    return obj;
}

QString OAIMX_records::getExchange() const {
    return m_exchange;
}
void OAIMX_records::setExchange(const QString &exchange) {
    m_exchange = exchange;
    m_exchange_isSet = true;
}

bool OAIMX_records::is_exchange_Set() const{
    return m_exchange_isSet;
}

bool OAIMX_records::is_exchange_Valid() const{
    return m_exchange_isValid;
}

qint32 OAIMX_records::getPriority() const {
    return m_priority;
}
void OAIMX_records::setPriority(const qint32 &priority) {
    m_priority = priority;
    m_priority_isSet = true;
}

bool OAIMX_records::is_priority_Set() const{
    return m_priority_isSet;
}

bool OAIMX_records::is_priority_Valid() const{
    return m_priority_isValid;
}

bool OAIMX_records::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_exchange_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_priority_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMX_records::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
