/**
 * Domains-Index API
 * Domains-Index database powered API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAPI_Key_Info.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAPI_Key_Info::OAIAPI_Key_Info(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAPI_Key_Info::OAIAPI_Key_Info() {
    this->initializeModel();
}

OAIAPI_Key_Info::~OAIAPI_Key_Info() {}

void OAIAPI_Key_Info::initializeModel() {

    m_customer_email_isSet = false;
    m_customer_email_isValid = false;

    m_customer_name_isSet = false;
    m_customer_name_isValid = false;

    m_expires_isSet = false;
    m_expires_isValid = false;

    m_item_id_isSet = false;
    m_item_id_isValid = false;

    m_item_name_isSet = false;
    m_item_name_isValid = false;

    m_license_isSet = false;
    m_license_isValid = false;

    m_license_limit_isSet = false;
    m_license_limit_isValid = false;

    m_price_id_isSet = false;
    m_price_id_isValid = false;

    m_success_isSet = false;
    m_success_isValid = false;
}

void OAIAPI_Key_Info::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAPI_Key_Info::fromJsonObject(QJsonObject json) {

    m_customer_email_isValid = ::OpenAPI::fromJsonValue(m_customer_email, json[QString("customer_email")]);
    m_customer_email_isSet = !json[QString("customer_email")].isNull() && m_customer_email_isValid;

    m_customer_name_isValid = ::OpenAPI::fromJsonValue(m_customer_name, json[QString("customer_name")]);
    m_customer_name_isSet = !json[QString("customer_name")].isNull() && m_customer_name_isValid;

    m_expires_isValid = ::OpenAPI::fromJsonValue(m_expires, json[QString("expires")]);
    m_expires_isSet = !json[QString("expires")].isNull() && m_expires_isValid;

    m_item_id_isValid = ::OpenAPI::fromJsonValue(m_item_id, json[QString("item_id")]);
    m_item_id_isSet = !json[QString("item_id")].isNull() && m_item_id_isValid;

    m_item_name_isValid = ::OpenAPI::fromJsonValue(m_item_name, json[QString("item_name")]);
    m_item_name_isSet = !json[QString("item_name")].isNull() && m_item_name_isValid;

    m_license_isValid = ::OpenAPI::fromJsonValue(m_license, json[QString("license")]);
    m_license_isSet = !json[QString("license")].isNull() && m_license_isValid;

    m_license_limit_isValid = ::OpenAPI::fromJsonValue(m_license_limit, json[QString("license_limit")]);
    m_license_limit_isSet = !json[QString("license_limit")].isNull() && m_license_limit_isValid;

    m_price_id_isValid = ::OpenAPI::fromJsonValue(m_price_id, json[QString("price_id")]);
    m_price_id_isSet = !json[QString("price_id")].isNull() && m_price_id_isValid;

    m_success_isValid = ::OpenAPI::fromJsonValue(m_success, json[QString("success")]);
    m_success_isSet = !json[QString("success")].isNull() && m_success_isValid;
}

QString OAIAPI_Key_Info::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAPI_Key_Info::asJsonObject() const {
    QJsonObject obj;
    if (m_customer_email_isSet) {
        obj.insert(QString("customer_email"), ::OpenAPI::toJsonValue(m_customer_email));
    }
    if (m_customer_name_isSet) {
        obj.insert(QString("customer_name"), ::OpenAPI::toJsonValue(m_customer_name));
    }
    if (m_expires_isSet) {
        obj.insert(QString("expires"), ::OpenAPI::toJsonValue(m_expires));
    }
    if (m_item_id_isSet) {
        obj.insert(QString("item_id"), ::OpenAPI::toJsonValue(m_item_id));
    }
    if (m_item_name_isSet) {
        obj.insert(QString("item_name"), ::OpenAPI::toJsonValue(m_item_name));
    }
    if (m_license_isSet) {
        obj.insert(QString("license"), ::OpenAPI::toJsonValue(m_license));
    }
    if (m_license_limit_isSet) {
        obj.insert(QString("license_limit"), ::OpenAPI::toJsonValue(m_license_limit));
    }
    if (m_price_id_isSet) {
        obj.insert(QString("price_id"), ::OpenAPI::toJsonValue(m_price_id));
    }
    if (m_success_isSet) {
        obj.insert(QString("success"), ::OpenAPI::toJsonValue(m_success));
    }
    return obj;
}

QString OAIAPI_Key_Info::getCustomerEmail() const {
    return m_customer_email;
}
void OAIAPI_Key_Info::setCustomerEmail(const QString &customer_email) {
    m_customer_email = customer_email;
    m_customer_email_isSet = true;
}

bool OAIAPI_Key_Info::is_customer_email_Set() const{
    return m_customer_email_isSet;
}

bool OAIAPI_Key_Info::is_customer_email_Valid() const{
    return m_customer_email_isValid;
}

QString OAIAPI_Key_Info::getCustomerName() const {
    return m_customer_name;
}
void OAIAPI_Key_Info::setCustomerName(const QString &customer_name) {
    m_customer_name = customer_name;
    m_customer_name_isSet = true;
}

bool OAIAPI_Key_Info::is_customer_name_Set() const{
    return m_customer_name_isSet;
}

bool OAIAPI_Key_Info::is_customer_name_Valid() const{
    return m_customer_name_isValid;
}

QString OAIAPI_Key_Info::getExpires() const {
    return m_expires;
}
void OAIAPI_Key_Info::setExpires(const QString &expires) {
    m_expires = expires;
    m_expires_isSet = true;
}

bool OAIAPI_Key_Info::is_expires_Set() const{
    return m_expires_isSet;
}

bool OAIAPI_Key_Info::is_expires_Valid() const{
    return m_expires_isValid;
}

QString OAIAPI_Key_Info::getItemId() const {
    return m_item_id;
}
void OAIAPI_Key_Info::setItemId(const QString &item_id) {
    m_item_id = item_id;
    m_item_id_isSet = true;
}

bool OAIAPI_Key_Info::is_item_id_Set() const{
    return m_item_id_isSet;
}

bool OAIAPI_Key_Info::is_item_id_Valid() const{
    return m_item_id_isValid;
}

QString OAIAPI_Key_Info::getItemName() const {
    return m_item_name;
}
void OAIAPI_Key_Info::setItemName(const QString &item_name) {
    m_item_name = item_name;
    m_item_name_isSet = true;
}

bool OAIAPI_Key_Info::is_item_name_Set() const{
    return m_item_name_isSet;
}

bool OAIAPI_Key_Info::is_item_name_Valid() const{
    return m_item_name_isValid;
}

QString OAIAPI_Key_Info::getLicense() const {
    return m_license;
}
void OAIAPI_Key_Info::setLicense(const QString &license) {
    m_license = license;
    m_license_isSet = true;
}

bool OAIAPI_Key_Info::is_license_Set() const{
    return m_license_isSet;
}

bool OAIAPI_Key_Info::is_license_Valid() const{
    return m_license_isValid;
}

QString OAIAPI_Key_Info::getLicenseLimit() const {
    return m_license_limit;
}
void OAIAPI_Key_Info::setLicenseLimit(const QString &license_limit) {
    m_license_limit = license_limit;
    m_license_limit_isSet = true;
}

bool OAIAPI_Key_Info::is_license_limit_Set() const{
    return m_license_limit_isSet;
}

bool OAIAPI_Key_Info::is_license_limit_Valid() const{
    return m_license_limit_isValid;
}

QString OAIAPI_Key_Info::getPriceId() const {
    return m_price_id;
}
void OAIAPI_Key_Info::setPriceId(const QString &price_id) {
    m_price_id = price_id;
    m_price_id_isSet = true;
}

bool OAIAPI_Key_Info::is_price_id_Set() const{
    return m_price_id_isSet;
}

bool OAIAPI_Key_Info::is_price_id_Valid() const{
    return m_price_id_isValid;
}

QString OAIAPI_Key_Info::getSuccess() const {
    return m_success;
}
void OAIAPI_Key_Info::setSuccess(const QString &success) {
    m_success = success;
    m_success_isSet = true;
}

bool OAIAPI_Key_Info::is_success_Set() const{
    return m_success_isSet;
}

bool OAIAPI_Key_Info::is_success_Valid() const{
    return m_success_isValid;
}

bool OAIAPI_Key_Info::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_customer_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expires_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_license_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_license_limit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_success_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAPI_Key_Info::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
