/**
 * Domains-Index API
 * Domains-Index database powered API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIResponse_Parameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIResponse_Parameters::OAIResponse_Parameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIResponse_Parameters::OAIResponse_Parameters() {
    this->initializeModel();
}

OAIResponse_Parameters::~OAIResponse_Parameters() {}

void OAIResponse_Parameters::initializeModel() {

    m_next_page_isSet = false;
    m_next_page_isValid = false;

    m_time_isSet = false;
    m_time_isValid = false;

    m_total_isSet = false;
    m_total_isValid = false;
}

void OAIResponse_Parameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIResponse_Parameters::fromJsonObject(QJsonObject json) {

    m_next_page_isValid = ::OpenAPI::fromJsonValue(m_next_page, json[QString("next_page")]);
    m_next_page_isSet = !json[QString("next_page")].isNull() && m_next_page_isValid;

    m_time_isValid = ::OpenAPI::fromJsonValue(m_time, json[QString("time")]);
    m_time_isSet = !json[QString("time")].isNull() && m_time_isValid;

    m_total_isValid = ::OpenAPI::fromJsonValue(m_total, json[QString("total")]);
    m_total_isSet = !json[QString("total")].isNull() && m_total_isValid;
}

QString OAIResponse_Parameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIResponse_Parameters::asJsonObject() const {
    QJsonObject obj;
    if (m_next_page_isSet) {
        obj.insert(QString("next_page"), ::OpenAPI::toJsonValue(m_next_page));
    }
    if (m_time_isSet) {
        obj.insert(QString("time"), ::OpenAPI::toJsonValue(m_time));
    }
    if (m_total_isSet) {
        obj.insert(QString("total"), ::OpenAPI::toJsonValue(m_total));
    }
    return obj;
}

QString OAIResponse_Parameters::getNextPage() const {
    return m_next_page;
}
void OAIResponse_Parameters::setNextPage(const QString &next_page) {
    m_next_page = next_page;
    m_next_page_isSet = true;
}

bool OAIResponse_Parameters::is_next_page_Set() const{
    return m_next_page_isSet;
}

bool OAIResponse_Parameters::is_next_page_Valid() const{
    return m_next_page_isValid;
}

QString OAIResponse_Parameters::getTime() const {
    return m_time;
}
void OAIResponse_Parameters::setTime(const QString &time) {
    m_time = time;
    m_time_isSet = true;
}

bool OAIResponse_Parameters::is_time_Set() const{
    return m_time_isSet;
}

bool OAIResponse_Parameters::is_time_Valid() const{
    return m_time_isValid;
}

qint32 OAIResponse_Parameters::getTotal() const {
    return m_total;
}
void OAIResponse_Parameters::setTotal(const qint32 &total) {
    m_total = total;
    m_total_isSet = true;
}

bool OAIResponse_Parameters::is_total_Set() const{
    return m_total_isSet;
}

bool OAIResponse_Parameters::is_total_Valid() const{
    return m_total_isValid;
}

bool OAIResponse_Parameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_next_page_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIResponse_Parameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_time_isValid && true;
}

} // namespace OpenAPI
