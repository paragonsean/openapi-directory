/*
 * Domains-Index API
 * Domains-Index database powered API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.SearchResults;
import org.openapitools.client.model.UpdateModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DomainsApi
 */
@Disabled
public class DomainsApiTest {

    private final DomainsApi api = new DomainsApi();

    /**
     * Download Whole Dataset for TLD
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void domainsTldZoneIdDownloadGetTest() throws ApiException {
        String zoneId = null;
        String apiKey = null;
        String date = null;
        api.domainsTldZoneIdDownloadGet(zoneId, apiKey, date);
        // TODO: test validations
    }

    /**
     * Domains Search for TLD
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void domainsTldZoneIdSearchGetTest() throws ApiException {
        String zoneId = null;
        String apiKey = null;
        String date = null;
        String page = null;
        Integer limit = null;
        String domain = null;
        String country = null;
        Boolean isDead = null;
        String A = null;
        String NS = null;
        String CNAME = null;
        String MX = null;
        String TXT = null;
        SearchResults response = api.domainsTldZoneIdSearchGet(zoneId, apiKey, date, page, limit, domain, country, isDead, A, NS, CNAME, MX, TXT);
        // TODO: test validations
    }

    /**
     * Download added domains, latest if date not specified
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void domainsUpdatesAddedDownloadGetTest() throws ApiException {
        String apiKey = null;
        String date = null;
        api.domainsUpdatesAddedDownloadGet(apiKey, date);
        // TODO: test validations
    }

    /**
     * Get added domains, latest if date not specified
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void domainsUpdatesAddedGetTest() throws ApiException {
        String apiKey = null;
        String date = null;
        String page = null;
        Integer limit = null;
        SearchResults response = api.domainsUpdatesAddedGet(apiKey, date, page, limit);
        // TODO: test validations
    }

    /**
     * Download deleted domains, latest if date not specified
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void domainsUpdatesDeletedDownloadGetTest() throws ApiException {
        String apiKey = null;
        String date = null;
        api.domainsUpdatesDeletedDownloadGet(apiKey, date);
        // TODO: test validations
    }

    /**
     * Get deleted domains, latest if date not specified
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void domainsUpdatesDeletedGetTest() throws ApiException {
        String apiKey = null;
        String date = null;
        String page = null;
        Integer limit = null;
        SearchResults response = api.domainsUpdatesDeletedGet(apiKey, date, page, limit);
        // TODO: test validations
    }

    /**
     * List of updates
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void domainsUpdatesListGetTest() throws ApiException {
        String apiKey = null;
        UpdateModel response = api.domainsUpdatesListGet(apiKey);
        // TODO: test validations
    }

    /**
     * Domains Database Search
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSearchDomainItemTest() throws ApiException {
        String apiKey = null;
        String date = null;
        String page = null;
        Integer limit = null;
        String domain = null;
        String zone = null;
        String country = null;
        Boolean isDead = null;
        String A = null;
        String NS = null;
        String CNAME = null;
        String MX = null;
        String TXT = null;
        SearchResults response = api.getSearchDomainItem(apiKey, date, page, limit, domain, zone, country, isDead, A, NS, CNAME, MX, TXT);
        // TODO: test validations
    }

    /**
     * Get TLD records
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTldDomainItemTest() throws ApiException {
        String zoneId = null;
        String apiKey = null;
        String date = null;
        String page = null;
        Integer limit = null;
        String domain = null;
        String country = null;
        Boolean isDead = null;
        String A = null;
        String NS = null;
        String CNAME = null;
        String MX = null;
        String TXT = null;
        SearchResults response = api.getTldDomainItem(zoneId, apiKey, date, page, limit, domain, country, isDead, A, NS, CNAME, MX, TXT);
        // TODO: test validations
    }

}
