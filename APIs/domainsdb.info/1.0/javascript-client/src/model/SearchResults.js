/**
 * Domains-Index API
 * Domains-Index database powered API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Domains from './Domains';
import ResponseParameters from './ResponseParameters';

/**
 * The SearchResults model module.
 * @module model/SearchResults
 * @version 1.0
 */
class SearchResults {
    /**
     * Constructs a new <code>SearchResults</code>.
     * @alias module:model/SearchResults
     * @implements module:model/ResponseParameters
     * @param time {String} Time took
     */
    constructor(time) { 
        ResponseParameters.initialize(this, time);
        SearchResults.initialize(this, time);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, time) { 
        obj['time'] = time;
    }

    /**
     * Constructs a <code>SearchResults</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SearchResults} obj Optional instance to populate.
     * @return {module:model/SearchResults} The populated <code>SearchResults</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SearchResults();
            ResponseParameters.constructFromObject(data, obj);

            if (data.hasOwnProperty('next_page')) {
                obj['next_page'] = ApiClient.convertToType(data['next_page'], 'String');
            }
            if (data.hasOwnProperty('time')) {
                obj['time'] = ApiClient.convertToType(data['time'], 'String');
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'Number');
            }
            if (data.hasOwnProperty('domains')) {
                obj['domains'] = ApiClient.convertToType(data['domains'], [Domains]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SearchResults</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SearchResults</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SearchResults.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['next_page'] && !(typeof data['next_page'] === 'string' || data['next_page'] instanceof String)) {
            throw new Error("Expected the field `next_page` to be a primitive type in the JSON string but got " + data['next_page']);
        }
        // ensure the json data is a string
        if (data['time'] && !(typeof data['time'] === 'string' || data['time'] instanceof String)) {
            throw new Error("Expected the field `time` to be a primitive type in the JSON string but got " + data['time']);
        }
        if (data['domains']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['domains'])) {
                throw new Error("Expected the field `domains` to be an array in the JSON data but got " + data['domains']);
            }
            // validate the optional field `domains` (array)
            for (const item of data['domains']) {
                Domains.validateJSON(item);
            };
        }

        return true;
    }


}

SearchResults.RequiredProperties = ["time"];

/**
 * Next page id
 * @member {String} next_page
 */
SearchResults.prototype['next_page'] = undefined;

/**
 * Time took
 * @member {String} time
 */
SearchResults.prototype['time'] = undefined;

/**
 * Total days reported
 * @member {Number} total
 */
SearchResults.prototype['total'] = undefined;

/**
 * @member {Array.<module:model/Domains>} domains
 */
SearchResults.prototype['domains'] = undefined;


// Implement ResponseParameters interface:
/**
 * Next page id
 * @member {String} next_page
 */
ResponseParameters.prototype['next_page'] = undefined;
/**
 * Time took
 * @member {String} time
 */
ResponseParameters.prototype['time'] = undefined;
/**
 * Total days reported
 * @member {Number} total
 */
ResponseParameters.prototype['total'] = undefined;




export default SearchResults;

