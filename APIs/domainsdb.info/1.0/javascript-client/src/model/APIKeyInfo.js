/**
 * Domains-Index API
 * Domains-Index database powered API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The APIKeyInfo model module.
 * @module model/APIKeyInfo
 * @version 1.0
 */
class APIKeyInfo {
    /**
     * Constructs a new <code>APIKeyInfo</code>.
     * @alias module:model/APIKeyInfo
     */
    constructor() { 
        
        APIKeyInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>APIKeyInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/APIKeyInfo} obj Optional instance to populate.
     * @return {module:model/APIKeyInfo} The populated <code>APIKeyInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new APIKeyInfo();

            if (data.hasOwnProperty('customer_email')) {
                obj['customer_email'] = ApiClient.convertToType(data['customer_email'], 'String');
            }
            if (data.hasOwnProperty('customer_name')) {
                obj['customer_name'] = ApiClient.convertToType(data['customer_name'], 'String');
            }
            if (data.hasOwnProperty('expires')) {
                obj['expires'] = ApiClient.convertToType(data['expires'], 'String');
            }
            if (data.hasOwnProperty('item_id')) {
                obj['item_id'] = ApiClient.convertToType(data['item_id'], 'String');
            }
            if (data.hasOwnProperty('item_name')) {
                obj['item_name'] = ApiClient.convertToType(data['item_name'], 'String');
            }
            if (data.hasOwnProperty('license')) {
                obj['license'] = ApiClient.convertToType(data['license'], 'String');
            }
            if (data.hasOwnProperty('license_limit')) {
                obj['license_limit'] = ApiClient.convertToType(data['license_limit'], 'String');
            }
            if (data.hasOwnProperty('price_id')) {
                obj['price_id'] = ApiClient.convertToType(data['price_id'], 'String');
            }
            if (data.hasOwnProperty('success')) {
                obj['success'] = ApiClient.convertToType(data['success'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>APIKeyInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>APIKeyInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['customer_email'] && !(typeof data['customer_email'] === 'string' || data['customer_email'] instanceof String)) {
            throw new Error("Expected the field `customer_email` to be a primitive type in the JSON string but got " + data['customer_email']);
        }
        // ensure the json data is a string
        if (data['customer_name'] && !(typeof data['customer_name'] === 'string' || data['customer_name'] instanceof String)) {
            throw new Error("Expected the field `customer_name` to be a primitive type in the JSON string but got " + data['customer_name']);
        }
        // ensure the json data is a string
        if (data['expires'] && !(typeof data['expires'] === 'string' || data['expires'] instanceof String)) {
            throw new Error("Expected the field `expires` to be a primitive type in the JSON string but got " + data['expires']);
        }
        // ensure the json data is a string
        if (data['item_id'] && !(typeof data['item_id'] === 'string' || data['item_id'] instanceof String)) {
            throw new Error("Expected the field `item_id` to be a primitive type in the JSON string but got " + data['item_id']);
        }
        // ensure the json data is a string
        if (data['item_name'] && !(typeof data['item_name'] === 'string' || data['item_name'] instanceof String)) {
            throw new Error("Expected the field `item_name` to be a primitive type in the JSON string but got " + data['item_name']);
        }
        // ensure the json data is a string
        if (data['license'] && !(typeof data['license'] === 'string' || data['license'] instanceof String)) {
            throw new Error("Expected the field `license` to be a primitive type in the JSON string but got " + data['license']);
        }
        // ensure the json data is a string
        if (data['license_limit'] && !(typeof data['license_limit'] === 'string' || data['license_limit'] instanceof String)) {
            throw new Error("Expected the field `license_limit` to be a primitive type in the JSON string but got " + data['license_limit']);
        }
        // ensure the json data is a string
        if (data['price_id'] && !(typeof data['price_id'] === 'string' || data['price_id'] instanceof String)) {
            throw new Error("Expected the field `price_id` to be a primitive type in the JSON string but got " + data['price_id']);
        }
        // ensure the json data is a string
        if (data['success'] && !(typeof data['success'] === 'string' || data['success'] instanceof String)) {
            throw new Error("Expected the field `success` to be a primitive type in the JSON string but got " + data['success']);
        }

        return true;
    }


}



/**
 * State
 * @member {String} customer_email
 */
APIKeyInfo.prototype['customer_email'] = undefined;

/**
 * State
 * @member {String} customer_name
 */
APIKeyInfo.prototype['customer_name'] = undefined;

/**
 * State
 * @member {String} expires
 */
APIKeyInfo.prototype['expires'] = undefined;

/**
 * State
 * @member {String} item_id
 */
APIKeyInfo.prototype['item_id'] = undefined;

/**
 * State
 * @member {String} item_name
 */
APIKeyInfo.prototype['item_name'] = undefined;

/**
 * State
 * @member {String} license
 */
APIKeyInfo.prototype['license'] = undefined;

/**
 * State
 * @member {String} license_limit
 */
APIKeyInfo.prototype['license_limit'] = undefined;

/**
 * State
 * @member {String} price_id
 */
APIKeyInfo.prototype['price_id'] = undefined;

/**
 * State
 * @member {String} success
 */
APIKeyInfo.prototype['success'] = undefined;






export default APIKeyInfo;

