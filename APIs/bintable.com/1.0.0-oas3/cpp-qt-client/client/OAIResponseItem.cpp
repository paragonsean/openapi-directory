/**
 * BIN Lookup API
 * BIN lookup API, the free api service from bintable.com to lookup card information using it's BIN. the service maintains updated database based on the comunity and other third party services to make sure all BINs in the database are accurate and up to date.
 *
 * The version of the OpenAPI document: 1.0.0-oas3
 * Contact: hello@bintable.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIResponseItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIResponseItem::OAIResponseItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIResponseItem::OAIResponseItem() {
    this->initializeModel();
}

OAIResponseItem::~OAIResponseItem() {}

void OAIResponseItem::initializeModel() {

    m_data_isSet = false;
    m_data_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;

    m_result_isSet = false;
    m_result_isValid = false;
}

void OAIResponseItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIResponseItem::fromJsonObject(QJsonObject json) {

    m_data_isValid = ::OpenAPI::fromJsonValue(m_data, json[QString("data")]);
    m_data_isSet = !json[QString("data")].isNull() && m_data_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_result_isValid = ::OpenAPI::fromJsonValue(m_result, json[QString("result")]);
    m_result_isSet = !json[QString("result")].isNull() && m_result_isValid;
}

QString OAIResponseItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIResponseItem::asJsonObject() const {
    QJsonObject obj;
    if (m_data_isSet) {
        obj.insert(QString("data"), ::OpenAPI::toJsonValue(m_data));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_result_isSet) {
        obj.insert(QString("result"), ::OpenAPI::toJsonValue(m_result));
    }
    return obj;
}

OAIObject OAIResponseItem::getData() const {
    return m_data;
}
void OAIResponseItem::setData(const OAIObject &data) {
    m_data = data;
    m_data_isSet = true;
}

bool OAIResponseItem::is_data_Set() const{
    return m_data_isSet;
}

bool OAIResponseItem::is_data_Valid() const{
    return m_data_isValid;
}

QString OAIResponseItem::getMessage() const {
    return m_message;
}
void OAIResponseItem::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIResponseItem::is_message_Set() const{
    return m_message_isSet;
}

bool OAIResponseItem::is_message_Valid() const{
    return m_message_isValid;
}

qint32 OAIResponseItem::getResult() const {
    return m_result;
}
void OAIResponseItem::setResult(const qint32 &result) {
    m_result = result;
    m_result_isSet = true;
}

bool OAIResponseItem::is_result_Set() const{
    return m_result_isSet;
}

bool OAIResponseItem::is_result_Valid() const{
    return m_result_isValid;
}

bool OAIResponseItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_result_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIResponseItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_data_isValid && m_message_isValid && m_result_isValid && true;
}

} // namespace OpenAPI
