/*
 * The Mercure protocol
 * [Mercure](https://mercure.rocks) is a protocol allowing to push data updates to web browsers and other HTTP clients in a convenient, fast, reliable and battery-efficient way.
 *
 * The version of the OpenAPI document: 0.3.2
 * Contact: contact@mercure.rocks
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Subscriptions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Subscribe to updates
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void wellKnownMercureGetTest() throws ApiException {
        List<String> topic = null;
        String lastEventID = null;
        String lastEventID2 = null;
        api.wellKnownMercureGet(topic, lastEventID, lastEventID2);
        // TODO: test validations
    }

    /**
     * Publish an update
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void wellKnownMercurePostTest() throws ApiException {
        String data = null;
        List<String> topic = null;
        String id = null;
        Boolean _private = null;
        Integer retry = null;
        String type = null;
        api.wellKnownMercurePost(data, topic, id, _private, retry, type);
        // TODO: test validations
    }

    /**
     * Active subscriptions
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void wellKnownMercureSubscriptionsGetTest() throws ApiException {
        Subscriptions response = api.wellKnownMercureSubscriptionsGet();
        // TODO: test validations
    }

    /**
     * Active subscriptions for the given topic
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void wellKnownMercureSubscriptionsTopicGetTest() throws ApiException {
        String topic = null;
        Subscriptions response = api.wellKnownMercureSubscriptionsTopicGet(topic);
        // TODO: test validations
    }

    /**
     * Active subscription for the given topic and subscriber
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void wellKnownMercureSubscriptionsTopicSubscriberGetTest() throws ApiException {
        String topic = null;
        String subscriber = null;
        Subscriptions response = api.wellKnownMercureSubscriptionsTopicSubscriberGet(topic, subscriber);
        // TODO: test validations
    }

}
