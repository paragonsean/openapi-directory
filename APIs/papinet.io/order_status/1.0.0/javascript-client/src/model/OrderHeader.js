/**
 * papiNet API
 * papinet API is a global initiative for the Forst and Paper supply chain.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OrderHeader model module.
 * @module model/OrderHeader
 * @version 1.0.0
 */
class OrderHeader {
    /**
     * Constructs a new <code>OrderHeader</code>.
     * @alias module:model/OrderHeader
     * @param id {String} 
     * @param numberOfLineItems {Number} 
     * @param orderNumber {String} 
     * @param orderStatus {module:model/OrderHeader.OrderStatusEnum} 
     */
    constructor(id, numberOfLineItems, orderNumber, orderStatus) { 
        
        OrderHeader.initialize(this, id, numberOfLineItems, orderNumber, orderStatus);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, numberOfLineItems, orderNumber, orderStatus) { 
        obj['id'] = id;
        obj['numberOfLineItems'] = numberOfLineItems;
        obj['orderNumber'] = orderNumber;
        obj['orderStatus'] = orderStatus;
    }

    /**
     * Constructs a <code>OrderHeader</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderHeader} obj Optional instance to populate.
     * @return {module:model/OrderHeader} The populated <code>OrderHeader</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderHeader();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('numberOfLineItems')) {
                obj['numberOfLineItems'] = ApiClient.convertToType(data['numberOfLineItems'], 'Number');
            }
            if (data.hasOwnProperty('orderNumber')) {
                obj['orderNumber'] = ApiClient.convertToType(data['orderNumber'], 'String');
            }
            if (data.hasOwnProperty('orderStatus')) {
                obj['orderStatus'] = ApiClient.convertToType(data['orderStatus'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrderHeader</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrderHeader</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OrderHeader.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['orderNumber'] && !(typeof data['orderNumber'] === 'string' || data['orderNumber'] instanceof String)) {
            throw new Error("Expected the field `orderNumber` to be a primitive type in the JSON string but got " + data['orderNumber']);
        }
        // ensure the json data is a string
        if (data['orderStatus'] && !(typeof data['orderStatus'] === 'string' || data['orderStatus'] instanceof String)) {
            throw new Error("Expected the field `orderStatus` to be a primitive type in the JSON string but got " + data['orderStatus']);
        }

        return true;
    }


}

OrderHeader.RequiredProperties = ["id", "numberOfLineItems", "orderNumber", "orderStatus"];

/**
 * @member {String} id
 */
OrderHeader.prototype['id'] = undefined;

/**
 * @member {Number} numberOfLineItems
 */
OrderHeader.prototype['numberOfLineItems'] = undefined;

/**
 * @member {String} orderNumber
 */
OrderHeader.prototype['orderNumber'] = undefined;

/**
 * @member {module:model/OrderHeader.OrderStatusEnum} orderStatus
 */
OrderHeader.prototype['orderStatus'] = undefined;





/**
 * Allowed values for the <code>orderStatus</code> property.
 * @enum {String}
 * @readonly
 */
OrderHeader['OrderStatusEnum'] = {

    /**
     * value: "Active"
     * @const
     */
    "Active": "Active",

    /**
     * value: "Cancelled"
     * @const
     */
    "Cancelled": "Cancelled",

    /**
     * value: "Completed"
     * @const
     */
    "Completed": "Completed"
};



export default OrderHeader;

