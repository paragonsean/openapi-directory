/**
 * papiNet API
 * papinet API is a global initiative for the Forst and Paper supply chain.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OrderHeader from './OrderHeader';
import PaginationLinks from './PaginationLinks';

/**
 * The ListOfOrders model module.
 * @module model/ListOfOrders
 * @version 1.0.0
 */
class ListOfOrders {
    /**
     * Constructs a new <code>ListOfOrders</code>.
     * @alias module:model/ListOfOrders
     */
    constructor() { 
        
        ListOfOrders.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListOfOrders</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListOfOrders} obj Optional instance to populate.
     * @return {module:model/ListOfOrders} The populated <code>ListOfOrders</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListOfOrders();

            if (data.hasOwnProperty('links')) {
                obj['links'] = PaginationLinks.constructFromObject(data['links']);
            }
            if (data.hasOwnProperty('orders')) {
                obj['orders'] = ApiClient.convertToType(data['orders'], [OrderHeader]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListOfOrders</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListOfOrders</code>.
     */
    static validateJSON(data) {
        // validate the optional field `links`
        if (data['links']) { // data not null
          PaginationLinks.validateJSON(data['links']);
        }
        if (data['orders']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['orders'])) {
                throw new Error("Expected the field `orders` to be an array in the JSON data but got " + data['orders']);
            }
            // validate the optional field `orders` (array)
            for (const item of data['orders']) {
                OrderHeader.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/PaginationLinks} links
 */
ListOfOrders.prototype['links'] = undefined;

/**
 * @member {Array.<module:model/OrderHeader>} orders
 */
ListOfOrders.prototype['orders'] = undefined;






export default ListOfOrders;

