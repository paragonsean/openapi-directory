/**
 * papiNet API
 * papinet API is a global initiative for the Forst and Paper supply chain.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OrderLineItemQuantitiesInner from './OrderLineItemQuantitiesInner';

/**
 * The OrderLineItem model module.
 * @module model/OrderLineItem
 * @version 1.0.0
 */
class OrderLineItem {
    /**
     * Constructs a new <code>OrderLineItem</code>.
     * @alias module:model/OrderLineItem
     * @param id {String} 
     * @param orderLineItemNumber {Number} 
     * @param orderLineItemStatus {module:model/OrderLineItem.OrderLineItemStatusEnum} 
     */
    constructor(id, orderLineItemNumber, orderLineItemStatus) { 
        
        OrderLineItem.initialize(this, id, orderLineItemNumber, orderLineItemStatus);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, orderLineItemNumber, orderLineItemStatus) { 
        obj['id'] = id;
        obj['orderLineItemNumber'] = orderLineItemNumber;
        obj['orderLineItemStatus'] = orderLineItemStatus;
    }

    /**
     * Constructs a <code>OrderLineItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderLineItem} obj Optional instance to populate.
     * @return {module:model/OrderLineItem} The populated <code>OrderLineItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderLineItem();

            if (data.hasOwnProperty('changeable')) {
                obj['changeable'] = ApiClient.convertToType(data['changeable'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('orderLineItemNumber')) {
                obj['orderLineItemNumber'] = ApiClient.convertToType(data['orderLineItemNumber'], 'Number');
            }
            if (data.hasOwnProperty('orderLineItemStatus')) {
                obj['orderLineItemStatus'] = ApiClient.convertToType(data['orderLineItemStatus'], 'String');
            }
            if (data.hasOwnProperty('quantities')) {
                obj['quantities'] = ApiClient.convertToType(data['quantities'], [OrderLineItemQuantitiesInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrderLineItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrderLineItem</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OrderLineItem.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['orderLineItemStatus'] && !(typeof data['orderLineItemStatus'] === 'string' || data['orderLineItemStatus'] instanceof String)) {
            throw new Error("Expected the field `orderLineItemStatus` to be a primitive type in the JSON string but got " + data['orderLineItemStatus']);
        }
        if (data['quantities']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['quantities'])) {
                throw new Error("Expected the field `quantities` to be an array in the JSON data but got " + data['quantities']);
            }
            // validate the optional field `quantities` (array)
            for (const item of data['quantities']) {
                OrderLineItemQuantitiesInner.validateJSON(item);
            };
        }

        return true;
    }


}

OrderLineItem.RequiredProperties = ["id", "orderLineItemNumber", "orderLineItemStatus"];

/**
 * @member {Boolean} changeable
 */
OrderLineItem.prototype['changeable'] = undefined;

/**
 * @member {String} id
 */
OrderLineItem.prototype['id'] = undefined;

/**
 * @member {Number} orderLineItemNumber
 */
OrderLineItem.prototype['orderLineItemNumber'] = undefined;

/**
 * @member {module:model/OrderLineItem.OrderLineItemStatusEnum} orderLineItemStatus
 */
OrderLineItem.prototype['orderLineItemStatus'] = undefined;

/**
 * @member {Array.<module:model/OrderLineItemQuantitiesInner>} quantities
 */
OrderLineItem.prototype['quantities'] = undefined;





/**
 * Allowed values for the <code>orderLineItemStatus</code> property.
 * @enum {String}
 * @readonly
 */
OrderLineItem['OrderLineItemStatusEnum'] = {

    /**
     * value: "Cancelled"
     * @const
     */
    "Cancelled": "Cancelled",

    /**
     * value: "Completed"
     * @const
     */
    "Completed": "Completed",

    /**
     * value: "Confirmed"
     * @const
     */
    "Confirmed": "Confirmed",

    /**
     * value: "Pending"
     * @const
     */
    "Pending": "Pending",

    /**
     * value: "ProductionCompleted"
     * @const
     */
    "ProductionCompleted": "ProductionCompleted",

    /**
     * value: "ShipmentCompleted"
     * @const
     */
    "ShipmentCompleted": "ShipmentCompleted"
};



export default OrderLineItem;

