/**
 * papiNet API
 * papinet API is a global initiative for the Forst and Paper supply chain.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderLineItem_quantities_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderLineItem_quantities_inner::OAIOrderLineItem_quantities_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderLineItem_quantities_inner::OAIOrderLineItem_quantities_inner() {
    this->initializeModel();
}

OAIOrderLineItem_quantities_inner::~OAIOrderLineItem_quantities_inner() {}

void OAIOrderLineItem_quantities_inner::initializeModel() {

    m_quantity_context_isSet = false;
    m_quantity_context_isValid = false;

    m_quantity_type_isSet = false;
    m_quantity_type_isValid = false;

    m_quantity_uom_isSet = false;
    m_quantity_uom_isValid = false;

    m_quantity_value_isSet = false;
    m_quantity_value_isValid = false;
}

void OAIOrderLineItem_quantities_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderLineItem_quantities_inner::fromJsonObject(QJsonObject json) {

    m_quantity_context_isValid = ::OpenAPI::fromJsonValue(m_quantity_context, json[QString("quantityContext")]);
    m_quantity_context_isSet = !json[QString("quantityContext")].isNull() && m_quantity_context_isValid;

    m_quantity_type_isValid = ::OpenAPI::fromJsonValue(m_quantity_type, json[QString("quantityType")]);
    m_quantity_type_isSet = !json[QString("quantityType")].isNull() && m_quantity_type_isValid;

    m_quantity_uom_isValid = ::OpenAPI::fromJsonValue(m_quantity_uom, json[QString("quantityUOM")]);
    m_quantity_uom_isSet = !json[QString("quantityUOM")].isNull() && m_quantity_uom_isValid;

    m_quantity_value_isValid = ::OpenAPI::fromJsonValue(m_quantity_value, json[QString("quantityValue")]);
    m_quantity_value_isSet = !json[QString("quantityValue")].isNull() && m_quantity_value_isValid;
}

QString OAIOrderLineItem_quantities_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderLineItem_quantities_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_quantity_context_isSet) {
        obj.insert(QString("quantityContext"), ::OpenAPI::toJsonValue(m_quantity_context));
    }
    if (m_quantity_type_isSet) {
        obj.insert(QString("quantityType"), ::OpenAPI::toJsonValue(m_quantity_type));
    }
    if (m_quantity_uom_isSet) {
        obj.insert(QString("quantityUOM"), ::OpenAPI::toJsonValue(m_quantity_uom));
    }
    if (m_quantity_value_isSet) {
        obj.insert(QString("quantityValue"), ::OpenAPI::toJsonValue(m_quantity_value));
    }
    return obj;
}

QString OAIOrderLineItem_quantities_inner::getQuantityContext() const {
    return m_quantity_context;
}
void OAIOrderLineItem_quantities_inner::setQuantityContext(const QString &quantity_context) {
    m_quantity_context = quantity_context;
    m_quantity_context_isSet = true;
}

bool OAIOrderLineItem_quantities_inner::is_quantity_context_Set() const{
    return m_quantity_context_isSet;
}

bool OAIOrderLineItem_quantities_inner::is_quantity_context_Valid() const{
    return m_quantity_context_isValid;
}

QString OAIOrderLineItem_quantities_inner::getQuantityType() const {
    return m_quantity_type;
}
void OAIOrderLineItem_quantities_inner::setQuantityType(const QString &quantity_type) {
    m_quantity_type = quantity_type;
    m_quantity_type_isSet = true;
}

bool OAIOrderLineItem_quantities_inner::is_quantity_type_Set() const{
    return m_quantity_type_isSet;
}

bool OAIOrderLineItem_quantities_inner::is_quantity_type_Valid() const{
    return m_quantity_type_isValid;
}

QString OAIOrderLineItem_quantities_inner::getQuantityUom() const {
    return m_quantity_uom;
}
void OAIOrderLineItem_quantities_inner::setQuantityUom(const QString &quantity_uom) {
    m_quantity_uom = quantity_uom;
    m_quantity_uom_isSet = true;
}

bool OAIOrderLineItem_quantities_inner::is_quantity_uom_Set() const{
    return m_quantity_uom_isSet;
}

bool OAIOrderLineItem_quantities_inner::is_quantity_uom_Valid() const{
    return m_quantity_uom_isValid;
}

double OAIOrderLineItem_quantities_inner::getQuantityValue() const {
    return m_quantity_value;
}
void OAIOrderLineItem_quantities_inner::setQuantityValue(const double &quantity_value) {
    m_quantity_value = quantity_value;
    m_quantity_value_isSet = true;
}

bool OAIOrderLineItem_quantities_inner::is_quantity_value_Set() const{
    return m_quantity_value_isSet;
}

bool OAIOrderLineItem_quantities_inner::is_quantity_value_Valid() const{
    return m_quantity_value_isValid;
}

bool OAIOrderLineItem_quantities_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_quantity_context_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_uom_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderLineItem_quantities_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
