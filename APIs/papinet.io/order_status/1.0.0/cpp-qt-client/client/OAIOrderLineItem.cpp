/**
 * papiNet API
 * papinet API is a global initiative for the Forst and Paper supply chain.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderLineItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderLineItem::OAIOrderLineItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderLineItem::OAIOrderLineItem() {
    this->initializeModel();
}

OAIOrderLineItem::~OAIOrderLineItem() {}

void OAIOrderLineItem::initializeModel() {

    m_changeable_isSet = false;
    m_changeable_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_order_line_item_number_isSet = false;
    m_order_line_item_number_isValid = false;

    m_order_line_item_status_isSet = false;
    m_order_line_item_status_isValid = false;

    m_quantities_isSet = false;
    m_quantities_isValid = false;
}

void OAIOrderLineItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderLineItem::fromJsonObject(QJsonObject json) {

    m_changeable_isValid = ::OpenAPI::fromJsonValue(m_changeable, json[QString("changeable")]);
    m_changeable_isSet = !json[QString("changeable")].isNull() && m_changeable_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_order_line_item_number_isValid = ::OpenAPI::fromJsonValue(m_order_line_item_number, json[QString("orderLineItemNumber")]);
    m_order_line_item_number_isSet = !json[QString("orderLineItemNumber")].isNull() && m_order_line_item_number_isValid;

    m_order_line_item_status_isValid = ::OpenAPI::fromJsonValue(m_order_line_item_status, json[QString("orderLineItemStatus")]);
    m_order_line_item_status_isSet = !json[QString("orderLineItemStatus")].isNull() && m_order_line_item_status_isValid;

    m_quantities_isValid = ::OpenAPI::fromJsonValue(m_quantities, json[QString("quantities")]);
    m_quantities_isSet = !json[QString("quantities")].isNull() && m_quantities_isValid;
}

QString OAIOrderLineItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderLineItem::asJsonObject() const {
    QJsonObject obj;
    if (m_changeable_isSet) {
        obj.insert(QString("changeable"), ::OpenAPI::toJsonValue(m_changeable));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_order_line_item_number_isSet) {
        obj.insert(QString("orderLineItemNumber"), ::OpenAPI::toJsonValue(m_order_line_item_number));
    }
    if (m_order_line_item_status_isSet) {
        obj.insert(QString("orderLineItemStatus"), ::OpenAPI::toJsonValue(m_order_line_item_status));
    }
    if (m_quantities.size() > 0) {
        obj.insert(QString("quantities"), ::OpenAPI::toJsonValue(m_quantities));
    }
    return obj;
}

bool OAIOrderLineItem::isChangeable() const {
    return m_changeable;
}
void OAIOrderLineItem::setChangeable(const bool &changeable) {
    m_changeable = changeable;
    m_changeable_isSet = true;
}

bool OAIOrderLineItem::is_changeable_Set() const{
    return m_changeable_isSet;
}

bool OAIOrderLineItem::is_changeable_Valid() const{
    return m_changeable_isValid;
}

QString OAIOrderLineItem::getId() const {
    return m_id;
}
void OAIOrderLineItem::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIOrderLineItem::is_id_Set() const{
    return m_id_isSet;
}

bool OAIOrderLineItem::is_id_Valid() const{
    return m_id_isValid;
}

double OAIOrderLineItem::getOrderLineItemNumber() const {
    return m_order_line_item_number;
}
void OAIOrderLineItem::setOrderLineItemNumber(const double &order_line_item_number) {
    m_order_line_item_number = order_line_item_number;
    m_order_line_item_number_isSet = true;
}

bool OAIOrderLineItem::is_order_line_item_number_Set() const{
    return m_order_line_item_number_isSet;
}

bool OAIOrderLineItem::is_order_line_item_number_Valid() const{
    return m_order_line_item_number_isValid;
}

QString OAIOrderLineItem::getOrderLineItemStatus() const {
    return m_order_line_item_status;
}
void OAIOrderLineItem::setOrderLineItemStatus(const QString &order_line_item_status) {
    m_order_line_item_status = order_line_item_status;
    m_order_line_item_status_isSet = true;
}

bool OAIOrderLineItem::is_order_line_item_status_Set() const{
    return m_order_line_item_status_isSet;
}

bool OAIOrderLineItem::is_order_line_item_status_Valid() const{
    return m_order_line_item_status_isValid;
}

QList<OAIOrderLineItem_quantities_inner> OAIOrderLineItem::getQuantities() const {
    return m_quantities;
}
void OAIOrderLineItem::setQuantities(const QList<OAIOrderLineItem_quantities_inner> &quantities) {
    m_quantities = quantities;
    m_quantities_isSet = true;
}

bool OAIOrderLineItem::is_quantities_Set() const{
    return m_quantities_isSet;
}

bool OAIOrderLineItem::is_quantities_Valid() const{
    return m_quantities_isValid;
}

bool OAIOrderLineItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_changeable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_line_item_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_line_item_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantities.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderLineItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && m_order_line_item_number_isValid && m_order_line_item_status_isValid && true;
}

} // namespace OpenAPI
