/**
 * Patchman-engine API
 * API of the Patch application on [cloud.redhat.com](cloud.redhat.com)  Syntax of the `filter[name]` query parameters is described in  [Filters documentation](https://github.com/RedHatInsights/patchman-engine/wiki/API-custom-filters)
 *
 * The version of the OpenAPI document: v1.15.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIControllers_SystemsAdvisoriesRequest.h
 *
 * 
 */

#ifndef OAIControllers_SystemsAdvisoriesRequest_H
#define OAIControllers_SystemsAdvisoriesRequest_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIControllers_SystemsAdvisoriesRequest : public OAIObject {
public:
    OAIControllers_SystemsAdvisoriesRequest();
    OAIControllers_SystemsAdvisoriesRequest(QString json);
    ~OAIControllers_SystemsAdvisoriesRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAdvisories() const;
    void setAdvisories(const QList<QString> &advisories);
    bool is_advisories_Set() const;
    bool is_advisories_Valid() const;

    QList<QString> getSystems() const;
    void setSystems(const QList<QString> &systems);
    bool is_systems_Set() const;
    bool is_systems_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_advisories;
    bool m_advisories_isSet;
    bool m_advisories_isValid;

    QList<QString> m_systems;
    bool m_systems_isSet;
    bool m_systems_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIControllers_SystemsAdvisoriesRequest)

#endif // OAIControllers_SystemsAdvisoriesRequest_H
