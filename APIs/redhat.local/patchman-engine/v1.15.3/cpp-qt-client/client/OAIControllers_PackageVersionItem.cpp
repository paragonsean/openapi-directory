/**
 * Patchman-engine API
 * API of the Patch application on [cloud.redhat.com](cloud.redhat.com)  Syntax of the `filter[name]` query parameters is described in  [Filters documentation](https://github.com/RedHatInsights/patchman-engine/wiki/API-custom-filters)
 *
 * The version of the OpenAPI document: v1.15.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIControllers_PackageVersionItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIControllers_PackageVersionItem::OAIControllers_PackageVersionItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIControllers_PackageVersionItem::OAIControllers_PackageVersionItem() {
    this->initializeModel();
}

OAIControllers_PackageVersionItem::~OAIControllers_PackageVersionItem() {}

void OAIControllers_PackageVersionItem::initializeModel() {

    m_evra_isSet = false;
    m_evra_isValid = false;
}

void OAIControllers_PackageVersionItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIControllers_PackageVersionItem::fromJsonObject(QJsonObject json) {

    m_evra_isValid = ::OpenAPI::fromJsonValue(m_evra, json[QString("evra")]);
    m_evra_isSet = !json[QString("evra")].isNull() && m_evra_isValid;
}

QString OAIControllers_PackageVersionItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIControllers_PackageVersionItem::asJsonObject() const {
    QJsonObject obj;
    if (m_evra_isSet) {
        obj.insert(QString("evra"), ::OpenAPI::toJsonValue(m_evra));
    }
    return obj;
}

QString OAIControllers_PackageVersionItem::getEvra() const {
    return m_evra;
}
void OAIControllers_PackageVersionItem::setEvra(const QString &evra) {
    m_evra = evra;
    m_evra_isSet = true;
}

bool OAIControllers_PackageVersionItem::is_evra_Set() const{
    return m_evra_isSet;
}

bool OAIControllers_PackageVersionItem::is_evra_Valid() const{
    return m_evra_isValid;
}

bool OAIControllers_PackageVersionItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_evra_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIControllers_PackageVersionItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
