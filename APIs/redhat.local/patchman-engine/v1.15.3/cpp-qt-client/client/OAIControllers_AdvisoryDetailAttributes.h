/**
 * Patchman-engine API
 * API of the Patch application on [cloud.redhat.com](cloud.redhat.com)  Syntax of the `filter[name]` query parameters is described in  [Filters documentation](https://github.com/RedHatInsights/patchman-engine/wiki/API-custom-filters)
 *
 * The version of the OpenAPI document: v1.15.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIControllers_AdvisoryDetailAttributes.h
 *
 * 
 */

#ifndef OAIControllers_AdvisoryDetailAttributes_H
#define OAIControllers_AdvisoryDetailAttributes_H

#include <QJsonObject>

#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIControllers_AdvisoryDetailAttributes : public OAIObject {
public:
    OAIControllers_AdvisoryDetailAttributes();
    OAIControllers_AdvisoryDetailAttributes(QString json);
    ~OAIControllers_AdvisoryDetailAttributes() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getCves() const;
    void setCves(const QList<QString> &cves);
    bool is_cves_Set() const;
    bool is_cves_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getFixes() const;
    void setFixes(const QString &fixes);
    bool is_fixes_Set() const;
    bool is_fixes_Valid() const;

    QString getModifiedDate() const;
    void setModifiedDate(const QString &modified_date);
    bool is_modified_date_Set() const;
    bool is_modified_date_Valid() const;

    QMap<QString, QString> getPackages() const;
    void setPackages(const QMap<QString, QString> &packages);
    bool is_packages_Set() const;
    bool is_packages_Valid() const;

    QString getPublicDate() const;
    void setPublicDate(const QString &public_date);
    bool is_public_date_Set() const;
    bool is_public_date_Valid() const;

    QList<QString> getReferences() const;
    void setReferences(const QList<QString> &references);
    bool is_references_Set() const;
    bool is_references_Valid() const;

    qint32 getSeverity() const;
    void setSeverity(const qint32 &severity);
    bool is_severity_Set() const;
    bool is_severity_Valid() const;

    QString getSolution() const;
    void setSolution(const QString &solution);
    bool is_solution_Set() const;
    bool is_solution_Valid() const;

    QString getSynopsis() const;
    void setSynopsis(const QString &synopsis);
    bool is_synopsis_Set() const;
    bool is_synopsis_Valid() const;

    QString getTopic() const;
    void setTopic(const QString &topic);
    bool is_topic_Set() const;
    bool is_topic_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_cves;
    bool m_cves_isSet;
    bool m_cves_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_fixes;
    bool m_fixes_isSet;
    bool m_fixes_isValid;

    QString m_modified_date;
    bool m_modified_date_isSet;
    bool m_modified_date_isValid;

    QMap<QString, QString> m_packages;
    bool m_packages_isSet;
    bool m_packages_isValid;

    QString m_public_date;
    bool m_public_date_isSet;
    bool m_public_date_isValid;

    QList<QString> m_references;
    bool m_references_isSet;
    bool m_references_isValid;

    qint32 m_severity;
    bool m_severity_isSet;
    bool m_severity_isValid;

    QString m_solution;
    bool m_solution_isSet;
    bool m_solution_isValid;

    QString m_synopsis;
    bool m_synopsis_isSet;
    bool m_synopsis_isValid;

    QString m_topic;
    bool m_topic_isSet;
    bool m_topic_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIControllers_AdvisoryDetailAttributes)

#endif // OAIControllers_AdvisoryDetailAttributes_H
