/**
 * Patchman-engine API
 * API of the Patch application on [cloud.redhat.com](cloud.redhat.com)  Syntax of the `filter[name]` query parameters is described in  [Filters documentation](https://github.com/RedHatInsights/patchman-engine/wiki/API-custom-filters)
 *
 * The version of the OpenAPI document: v1.15.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIControllers_ListMeta.h
 *
 * 
 */

#ifndef OAIControllers_ListMeta_H
#define OAIControllers_ListMeta_H

#include <QJsonObject>

#include "OAIControllers_FilterData.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIControllers_FilterData;

class OAIControllers_ListMeta : public OAIObject {
public:
    OAIControllers_ListMeta();
    OAIControllers_ListMeta(QString json);
    ~OAIControllers_ListMeta() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, OAIControllers_FilterData> getFilter() const;
    void setFilter(const QMap<QString, OAIControllers_FilterData> &filter);
    bool is_filter_Set() const;
    bool is_filter_Valid() const;

    qint32 getLimit() const;
    void setLimit(const qint32 &limit);
    bool is_limit_Set() const;
    bool is_limit_Valid() const;

    qint32 getOffset() const;
    void setOffset(const qint32 &offset);
    bool is_offset_Set() const;
    bool is_offset_Valid() const;

    QString getSearch() const;
    void setSearch(const QString &search);
    bool is_search_Set() const;
    bool is_search_Valid() const;

    QList<QString> getSort() const;
    void setSort(const QList<QString> &sort);
    bool is_sort_Set() const;
    bool is_sort_Valid() const;

    QMap<QString, qint32> getSubtotals() const;
    void setSubtotals(const QMap<QString, qint32> &subtotals);
    bool is_subtotals_Set() const;
    bool is_subtotals_Valid() const;

    qint32 getTotalItems() const;
    void setTotalItems(const qint32 &total_items);
    bool is_total_items_Set() const;
    bool is_total_items_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, OAIControllers_FilterData> m_filter;
    bool m_filter_isSet;
    bool m_filter_isValid;

    qint32 m_limit;
    bool m_limit_isSet;
    bool m_limit_isValid;

    qint32 m_offset;
    bool m_offset_isSet;
    bool m_offset_isValid;

    QString m_search;
    bool m_search_isSet;
    bool m_search_isValid;

    QList<QString> m_sort;
    bool m_sort_isSet;
    bool m_sort_isValid;

    QMap<QString, qint32> m_subtotals;
    bool m_subtotals_isSet;
    bool m_subtotals_isValid;

    qint32 m_total_items;
    bool m_total_items_isSet;
    bool m_total_items_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIControllers_ListMeta)

#endif // OAIControllers_ListMeta_H
