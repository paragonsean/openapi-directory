# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ControllersAdvisoryItemAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, advisory_type: int=None, applicable_systems: int=None, cve_count: int=None, description: str=None, public_date: str=None, severity: int=None, synopsis: str=None):
        """ControllersAdvisoryItemAttributes - a model defined in OpenAPI

        :param advisory_type: The advisory_type of this ControllersAdvisoryItemAttributes.
        :param applicable_systems: The applicable_systems of this ControllersAdvisoryItemAttributes.
        :param cve_count: The cve_count of this ControllersAdvisoryItemAttributes.
        :param description: The description of this ControllersAdvisoryItemAttributes.
        :param public_date: The public_date of this ControllersAdvisoryItemAttributes.
        :param severity: The severity of this ControllersAdvisoryItemAttributes.
        :param synopsis: The synopsis of this ControllersAdvisoryItemAttributes.
        """
        self.openapi_types = {
            'advisory_type': int,
            'applicable_systems': int,
            'cve_count': int,
            'description': str,
            'public_date': str,
            'severity': int,
            'synopsis': str
        }

        self.attribute_map = {
            'advisory_type': 'advisory_type',
            'applicable_systems': 'applicable_systems',
            'cve_count': 'cve_count',
            'description': 'description',
            'public_date': 'public_date',
            'severity': 'severity',
            'synopsis': 'synopsis'
        }

        self._advisory_type = advisory_type
        self._applicable_systems = applicable_systems
        self._cve_count = cve_count
        self._description = description
        self._public_date = public_date
        self._severity = severity
        self._synopsis = synopsis

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ControllersAdvisoryItemAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The controllers.AdvisoryItemAttributes of this ControllersAdvisoryItemAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def advisory_type(self):
        """Gets the advisory_type of this ControllersAdvisoryItemAttributes.


        :return: The advisory_type of this ControllersAdvisoryItemAttributes.
        :rtype: int
        """
        return self._advisory_type

    @advisory_type.setter
    def advisory_type(self, advisory_type):
        """Sets the advisory_type of this ControllersAdvisoryItemAttributes.


        :param advisory_type: The advisory_type of this ControllersAdvisoryItemAttributes.
        :type advisory_type: int
        """

        self._advisory_type = advisory_type

    @property
    def applicable_systems(self):
        """Gets the applicable_systems of this ControllersAdvisoryItemAttributes.


        :return: The applicable_systems of this ControllersAdvisoryItemAttributes.
        :rtype: int
        """
        return self._applicable_systems

    @applicable_systems.setter
    def applicable_systems(self, applicable_systems):
        """Sets the applicable_systems of this ControllersAdvisoryItemAttributes.


        :param applicable_systems: The applicable_systems of this ControllersAdvisoryItemAttributes.
        :type applicable_systems: int
        """

        self._applicable_systems = applicable_systems

    @property
    def cve_count(self):
        """Gets the cve_count of this ControllersAdvisoryItemAttributes.


        :return: The cve_count of this ControllersAdvisoryItemAttributes.
        :rtype: int
        """
        return self._cve_count

    @cve_count.setter
    def cve_count(self, cve_count):
        """Sets the cve_count of this ControllersAdvisoryItemAttributes.


        :param cve_count: The cve_count of this ControllersAdvisoryItemAttributes.
        :type cve_count: int
        """

        self._cve_count = cve_count

    @property
    def description(self):
        """Gets the description of this ControllersAdvisoryItemAttributes.


        :return: The description of this ControllersAdvisoryItemAttributes.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ControllersAdvisoryItemAttributes.


        :param description: The description of this ControllersAdvisoryItemAttributes.
        :type description: str
        """

        self._description = description

    @property
    def public_date(self):
        """Gets the public_date of this ControllersAdvisoryItemAttributes.


        :return: The public_date of this ControllersAdvisoryItemAttributes.
        :rtype: str
        """
        return self._public_date

    @public_date.setter
    def public_date(self, public_date):
        """Sets the public_date of this ControllersAdvisoryItemAttributes.


        :param public_date: The public_date of this ControllersAdvisoryItemAttributes.
        :type public_date: str
        """

        self._public_date = public_date

    @property
    def severity(self):
        """Gets the severity of this ControllersAdvisoryItemAttributes.


        :return: The severity of this ControllersAdvisoryItemAttributes.
        :rtype: int
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this ControllersAdvisoryItemAttributes.


        :param severity: The severity of this ControllersAdvisoryItemAttributes.
        :type severity: int
        """

        self._severity = severity

    @property
    def synopsis(self):
        """Gets the synopsis of this ControllersAdvisoryItemAttributes.


        :return: The synopsis of this ControllersAdvisoryItemAttributes.
        :rtype: str
        """
        return self._synopsis

    @synopsis.setter
    def synopsis(self, synopsis):
        """Sets the synopsis of this ControllersAdvisoryItemAttributes.


        :param synopsis: The synopsis of this ControllersAdvisoryItemAttributes.
        :type synopsis: str
        """

        self._synopsis = synopsis
