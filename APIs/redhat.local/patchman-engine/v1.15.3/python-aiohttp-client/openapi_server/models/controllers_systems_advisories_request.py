# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ControllersSystemsAdvisoriesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, advisories: List[str]=None, systems: List[str]=None):
        """ControllersSystemsAdvisoriesRequest - a model defined in OpenAPI

        :param advisories: The advisories of this ControllersSystemsAdvisoriesRequest.
        :param systems: The systems of this ControllersSystemsAdvisoriesRequest.
        """
        self.openapi_types = {
            'advisories': List[str],
            'systems': List[str]
        }

        self.attribute_map = {
            'advisories': 'advisories',
            'systems': 'systems'
        }

        self._advisories = advisories
        self._systems = systems

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ControllersSystemsAdvisoriesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The controllers.SystemsAdvisoriesRequest of this ControllersSystemsAdvisoriesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def advisories(self):
        """Gets the advisories of this ControllersSystemsAdvisoriesRequest.


        :return: The advisories of this ControllersSystemsAdvisoriesRequest.
        :rtype: List[str]
        """
        return self._advisories

    @advisories.setter
    def advisories(self, advisories):
        """Sets the advisories of this ControllersSystemsAdvisoriesRequest.


        :param advisories: The advisories of this ControllersSystemsAdvisoriesRequest.
        :type advisories: List[str]
        """

        self._advisories = advisories

    @property
    def systems(self):
        """Gets the systems of this ControllersSystemsAdvisoriesRequest.


        :return: The systems of this ControllersSystemsAdvisoriesRequest.
        :rtype: List[str]
        """
        return self._systems

    @systems.setter
    def systems(self, systems):
        """Sets the systems of this ControllersSystemsAdvisoriesRequest.


        :param systems: The systems of this ControllersSystemsAdvisoriesRequest.
        :type systems: List[str]
        """

        self._systems = systems
