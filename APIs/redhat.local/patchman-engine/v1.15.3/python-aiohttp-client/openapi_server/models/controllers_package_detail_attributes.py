# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ControllersPackageDetailAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, advisory_id: str=None, description: str=None, name: str=None, summary: str=None, version: str=None):
        """ControllersPackageDetailAttributes - a model defined in OpenAPI

        :param advisory_id: The advisory_id of this ControllersPackageDetailAttributes.
        :param description: The description of this ControllersPackageDetailAttributes.
        :param name: The name of this ControllersPackageDetailAttributes.
        :param summary: The summary of this ControllersPackageDetailAttributes.
        :param version: The version of this ControllersPackageDetailAttributes.
        """
        self.openapi_types = {
            'advisory_id': str,
            'description': str,
            'name': str,
            'summary': str,
            'version': str
        }

        self.attribute_map = {
            'advisory_id': 'advisory_id',
            'description': 'description',
            'name': 'name',
            'summary': 'summary',
            'version': 'version'
        }

        self._advisory_id = advisory_id
        self._description = description
        self._name = name
        self._summary = summary
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ControllersPackageDetailAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The controllers.PackageDetailAttributes of this ControllersPackageDetailAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def advisory_id(self):
        """Gets the advisory_id of this ControllersPackageDetailAttributes.


        :return: The advisory_id of this ControllersPackageDetailAttributes.
        :rtype: str
        """
        return self._advisory_id

    @advisory_id.setter
    def advisory_id(self, advisory_id):
        """Sets the advisory_id of this ControllersPackageDetailAttributes.


        :param advisory_id: The advisory_id of this ControllersPackageDetailAttributes.
        :type advisory_id: str
        """

        self._advisory_id = advisory_id

    @property
    def description(self):
        """Gets the description of this ControllersPackageDetailAttributes.


        :return: The description of this ControllersPackageDetailAttributes.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ControllersPackageDetailAttributes.


        :param description: The description of this ControllersPackageDetailAttributes.
        :type description: str
        """

        self._description = description

    @property
    def name(self):
        """Gets the name of this ControllersPackageDetailAttributes.


        :return: The name of this ControllersPackageDetailAttributes.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ControllersPackageDetailAttributes.


        :param name: The name of this ControllersPackageDetailAttributes.
        :type name: str
        """

        self._name = name

    @property
    def summary(self):
        """Gets the summary of this ControllersPackageDetailAttributes.


        :return: The summary of this ControllersPackageDetailAttributes.
        :rtype: str
        """
        return self._summary

    @summary.setter
    def summary(self, summary):
        """Sets the summary of this ControllersPackageDetailAttributes.


        :param summary: The summary of this ControllersPackageDetailAttributes.
        :type summary: str
        """

        self._summary = summary

    @property
    def version(self):
        """Gets the version of this ControllersPackageDetailAttributes.


        :return: The version of this ControllersPackageDetailAttributes.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this ControllersPackageDetailAttributes.


        :param version: The version of this ControllersPackageDetailAttributes.
        :type version: str
        """

        self._version = version
