# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ControllersPackageItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, summary: str=None, systems_installed: int=None, systems_updatable: int=None):
        """ControllersPackageItem - a model defined in OpenAPI

        :param name: The name of this ControllersPackageItem.
        :param summary: The summary of this ControllersPackageItem.
        :param systems_installed: The systems_installed of this ControllersPackageItem.
        :param systems_updatable: The systems_updatable of this ControllersPackageItem.
        """
        self.openapi_types = {
            'name': str,
            'summary': str,
            'systems_installed': int,
            'systems_updatable': int
        }

        self.attribute_map = {
            'name': 'name',
            'summary': 'summary',
            'systems_installed': 'systems_installed',
            'systems_updatable': 'systems_updatable'
        }

        self._name = name
        self._summary = summary
        self._systems_installed = systems_installed
        self._systems_updatable = systems_updatable

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ControllersPackageItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The controllers.PackageItem of this ControllersPackageItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this ControllersPackageItem.


        :return: The name of this ControllersPackageItem.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ControllersPackageItem.


        :param name: The name of this ControllersPackageItem.
        :type name: str
        """

        self._name = name

    @property
    def summary(self):
        """Gets the summary of this ControllersPackageItem.


        :return: The summary of this ControllersPackageItem.
        :rtype: str
        """
        return self._summary

    @summary.setter
    def summary(self, summary):
        """Sets the summary of this ControllersPackageItem.


        :param summary: The summary of this ControllersPackageItem.
        :type summary: str
        """

        self._summary = summary

    @property
    def systems_installed(self):
        """Gets the systems_installed of this ControllersPackageItem.


        :return: The systems_installed of this ControllersPackageItem.
        :rtype: int
        """
        return self._systems_installed

    @systems_installed.setter
    def systems_installed(self, systems_installed):
        """Sets the systems_installed of this ControllersPackageItem.


        :param systems_installed: The systems_installed of this ControllersPackageItem.
        :type systems_installed: int
        """

        self._systems_installed = systems_installed

    @property
    def systems_updatable(self):
        """Gets the systems_updatable of this ControllersPackageItem.


        :return: The systems_updatable of this ControllersPackageItem.
        :rtype: int
        """
        return self._systems_updatable

    @systems_updatable.setter
    def systems_updatable(self, systems_updatable):
        """Sets the systems_updatable of this ControllersPackageItem.


        :param systems_updatable: The systems_updatable of this ControllersPackageItem.
        :type systems_updatable: int
        """

        self._systems_updatable = systems_updatable
