/**
 * Patchman-engine API
 * API of the Patch application on [cloud.redhat.com](cloud.redhat.com)  Syntax of the `filter[name]` query parameters is described in  [Filters documentation](https://github.com/RedHatInsights/patchman-engine/wiki/API-custom-filters)
 *
 * The version of the OpenAPI document: v1.15.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ControllersAdvisoryItemAttributes model module.
 * @module model/ControllersAdvisoryItemAttributes
 * @version v1.15.3
 */
class ControllersAdvisoryItemAttributes {
    /**
     * Constructs a new <code>ControllersAdvisoryItemAttributes</code>.
     * @alias module:model/ControllersAdvisoryItemAttributes
     */
    constructor() { 
        
        ControllersAdvisoryItemAttributes.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ControllersAdvisoryItemAttributes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ControllersAdvisoryItemAttributes} obj Optional instance to populate.
     * @return {module:model/ControllersAdvisoryItemAttributes} The populated <code>ControllersAdvisoryItemAttributes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ControllersAdvisoryItemAttributes();

            if (data.hasOwnProperty('advisory_type')) {
                obj['advisory_type'] = ApiClient.convertToType(data['advisory_type'], 'Number');
            }
            if (data.hasOwnProperty('applicable_systems')) {
                obj['applicable_systems'] = ApiClient.convertToType(data['applicable_systems'], 'Number');
            }
            if (data.hasOwnProperty('cve_count')) {
                obj['cve_count'] = ApiClient.convertToType(data['cve_count'], 'Number');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('public_date')) {
                obj['public_date'] = ApiClient.convertToType(data['public_date'], 'String');
            }
            if (data.hasOwnProperty('severity')) {
                obj['severity'] = ApiClient.convertToType(data['severity'], 'Number');
            }
            if (data.hasOwnProperty('synopsis')) {
                obj['synopsis'] = ApiClient.convertToType(data['synopsis'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ControllersAdvisoryItemAttributes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ControllersAdvisoryItemAttributes</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['public_date'] && !(typeof data['public_date'] === 'string' || data['public_date'] instanceof String)) {
            throw new Error("Expected the field `public_date` to be a primitive type in the JSON string but got " + data['public_date']);
        }
        // ensure the json data is a string
        if (data['synopsis'] && !(typeof data['synopsis'] === 'string' || data['synopsis'] instanceof String)) {
            throw new Error("Expected the field `synopsis` to be a primitive type in the JSON string but got " + data['synopsis']);
        }

        return true;
    }


}



/**
 * @member {Number} advisory_type
 */
ControllersAdvisoryItemAttributes.prototype['advisory_type'] = undefined;

/**
 * @member {Number} applicable_systems
 */
ControllersAdvisoryItemAttributes.prototype['applicable_systems'] = undefined;

/**
 * @member {Number} cve_count
 */
ControllersAdvisoryItemAttributes.prototype['cve_count'] = undefined;

/**
 * @member {String} description
 */
ControllersAdvisoryItemAttributes.prototype['description'] = undefined;

/**
 * @member {String} public_date
 */
ControllersAdvisoryItemAttributes.prototype['public_date'] = undefined;

/**
 * @member {Number} severity
 */
ControllersAdvisoryItemAttributes.prototype['severity'] = undefined;

/**
 * @member {String} synopsis
 */
ControllersAdvisoryItemAttributes.prototype['synopsis'] = undefined;






export default ControllersAdvisoryItemAttributes;

