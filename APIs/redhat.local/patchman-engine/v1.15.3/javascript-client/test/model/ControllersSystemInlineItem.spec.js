/**
 * Patchman-engine API
 * API of the Patch application on [cloud.redhat.com](cloud.redhat.com)  Syntax of the `filter[name]` query parameters is described in  [Filters documentation](https://github.com/RedHatInsights/patchman-engine/wiki/API-custom-filters)
 *
 * The version of the OpenAPI document: v1.15.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PatchmanEngineApi);
  }
}(this, function(expect, PatchmanEngineApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PatchmanEngineApi.ControllersSystemInlineItem();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ControllersSystemInlineItem', function() {
    it('should create an instance of ControllersSystemInlineItem', function() {
      // uncomment below and update the code to test ControllersSystemInlineItem
      //var instance = new PatchmanEngineApi.ControllersSystemInlineItem();
      //expect(instance).to.be.a(PatchmanEngineApi.ControllersSystemInlineItem);
    });

    it('should have the property created (base name: "created")', function() {
      // uncomment below and update the code to test the property created
      //var instance = new PatchmanEngineApi.ControllersSystemInlineItem();
      //expect(instance).to.be();
    });

    it('should have the property culledTimestamp (base name: "culled_timestamp")', function() {
      // uncomment below and update the code to test the property culledTimestamp
      //var instance = new PatchmanEngineApi.ControllersSystemInlineItem();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "display_name")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new PatchmanEngineApi.ControllersSystemInlineItem();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new PatchmanEngineApi.ControllersSystemInlineItem();
      //expect(instance).to.be();
    });

    it('should have the property insightsId (base name: "insights_id")', function() {
      // uncomment below and update the code to test the property insightsId
      //var instance = new PatchmanEngineApi.ControllersSystemInlineItem();
      //expect(instance).to.be();
    });

    it('should have the property lastEvaluation (base name: "last_evaluation")', function() {
      // uncomment below and update the code to test the property lastEvaluation
      //var instance = new PatchmanEngineApi.ControllersSystemInlineItem();
      //expect(instance).to.be();
    });

    it('should have the property lastUpload (base name: "last_upload")', function() {
      // uncomment below and update the code to test the property lastUpload
      //var instance = new PatchmanEngineApi.ControllersSystemInlineItem();
      //expect(instance).to.be();
    });

    it('should have the property osMajor (base name: "os_major")', function() {
      // uncomment below and update the code to test the property osMajor
      //var instance = new PatchmanEngineApi.ControllersSystemInlineItem();
      //expect(instance).to.be();
    });

    it('should have the property osMinor (base name: "os_minor")', function() {
      // uncomment below and update the code to test the property osMinor
      //var instance = new PatchmanEngineApi.ControllersSystemInlineItem();
      //expect(instance).to.be();
    });

    it('should have the property osName (base name: "os_name")', function() {
      // uncomment below and update the code to test the property osName
      //var instance = new PatchmanEngineApi.ControllersSystemInlineItem();
      //expect(instance).to.be();
    });

    it('should have the property otherCount (base name: "other_count")', function() {
      // uncomment below and update the code to test the property otherCount
      //var instance = new PatchmanEngineApi.ControllersSystemInlineItem();
      //expect(instance).to.be();
    });

    it('should have the property packagesInstalled (base name: "packages_installed")', function() {
      // uncomment below and update the code to test the property packagesInstalled
      //var instance = new PatchmanEngineApi.ControllersSystemInlineItem();
      //expect(instance).to.be();
    });

    it('should have the property packagesUpdatable (base name: "packages_updatable")', function() {
      // uncomment below and update the code to test the property packagesUpdatable
      //var instance = new PatchmanEngineApi.ControllersSystemInlineItem();
      //expect(instance).to.be();
    });

    it('should have the property rhbaCount (base name: "rhba_count")', function() {
      // uncomment below and update the code to test the property rhbaCount
      //var instance = new PatchmanEngineApi.ControllersSystemInlineItem();
      //expect(instance).to.be();
    });

    it('should have the property rheaCount (base name: "rhea_count")', function() {
      // uncomment below and update the code to test the property rheaCount
      //var instance = new PatchmanEngineApi.ControllersSystemInlineItem();
      //expect(instance).to.be();
    });

    it('should have the property rhsaCount (base name: "rhsa_count")', function() {
      // uncomment below and update the code to test the property rhsaCount
      //var instance = new PatchmanEngineApi.ControllersSystemInlineItem();
      //expect(instance).to.be();
    });

    it('should have the property rhsm (base name: "rhsm")', function() {
      // uncomment below and update the code to test the property rhsm
      //var instance = new PatchmanEngineApi.ControllersSystemInlineItem();
      //expect(instance).to.be();
    });

    it('should have the property stale (base name: "stale")', function() {
      // uncomment below and update the code to test the property stale
      //var instance = new PatchmanEngineApi.ControllersSystemInlineItem();
      //expect(instance).to.be();
    });

    it('should have the property staleTimestamp (base name: "stale_timestamp")', function() {
      // uncomment below and update the code to test the property staleTimestamp
      //var instance = new PatchmanEngineApi.ControllersSystemInlineItem();
      //expect(instance).to.be();
    });

    it('should have the property staleWarningTimestamp (base name: "stale_warning_timestamp")', function() {
      // uncomment below and update the code to test the property staleWarningTimestamp
      //var instance = new PatchmanEngineApi.ControllersSystemInlineItem();
      //expect(instance).to.be();
    });

    it('should have the property thirdParty (base name: "third_party")', function() {
      // uncomment below and update the code to test the property thirdParty
      //var instance = new PatchmanEngineApi.ControllersSystemInlineItem();
      //expect(instance).to.be();
    });

  });

}));
