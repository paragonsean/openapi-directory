/*
 * Patchman-engine API
 * API of the Patch application on [cloud.redhat.com](cloud.redhat.com)  Syntax of the `filter[name]` query parameters is described in  [Filters documentation](https://github.com/RedHatInsights/patchman-engine/wiki/API-custom-filters)
 *
 * The version of the OpenAPI document: v1.15.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ControllersSystemInlineItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:32:15.636970-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ControllersSystemInlineItem {
  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private String created;

  public static final String SERIALIZED_NAME_CULLED_TIMESTAMP = "culled_timestamp";
  @SerializedName(SERIALIZED_NAME_CULLED_TIMESTAMP)
  private String culledTimestamp;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "display_name";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_INSIGHTS_ID = "insights_id";
  @SerializedName(SERIALIZED_NAME_INSIGHTS_ID)
  private String insightsId;

  public static final String SERIALIZED_NAME_LAST_EVALUATION = "last_evaluation";
  @SerializedName(SERIALIZED_NAME_LAST_EVALUATION)
  private String lastEvaluation;

  public static final String SERIALIZED_NAME_LAST_UPLOAD = "last_upload";
  @SerializedName(SERIALIZED_NAME_LAST_UPLOAD)
  private String lastUpload;

  public static final String SERIALIZED_NAME_OS_MAJOR = "os_major";
  @SerializedName(SERIALIZED_NAME_OS_MAJOR)
  private String osMajor;

  public static final String SERIALIZED_NAME_OS_MINOR = "os_minor";
  @SerializedName(SERIALIZED_NAME_OS_MINOR)
  private String osMinor;

  public static final String SERIALIZED_NAME_OS_NAME = "os_name";
  @SerializedName(SERIALIZED_NAME_OS_NAME)
  private String osName;

  public static final String SERIALIZED_NAME_OTHER_COUNT = "other_count";
  @SerializedName(SERIALIZED_NAME_OTHER_COUNT)
  private Integer otherCount;

  public static final String SERIALIZED_NAME_PACKAGES_INSTALLED = "packages_installed";
  @SerializedName(SERIALIZED_NAME_PACKAGES_INSTALLED)
  private Integer packagesInstalled;

  public static final String SERIALIZED_NAME_PACKAGES_UPDATABLE = "packages_updatable";
  @SerializedName(SERIALIZED_NAME_PACKAGES_UPDATABLE)
  private Integer packagesUpdatable;

  public static final String SERIALIZED_NAME_RHBA_COUNT = "rhba_count";
  @SerializedName(SERIALIZED_NAME_RHBA_COUNT)
  private Integer rhbaCount;

  public static final String SERIALIZED_NAME_RHEA_COUNT = "rhea_count";
  @SerializedName(SERIALIZED_NAME_RHEA_COUNT)
  private Integer rheaCount;

  public static final String SERIALIZED_NAME_RHSA_COUNT = "rhsa_count";
  @SerializedName(SERIALIZED_NAME_RHSA_COUNT)
  private Integer rhsaCount;

  public static final String SERIALIZED_NAME_RHSM = "rhsm";
  @SerializedName(SERIALIZED_NAME_RHSM)
  private String rhsm;

  public static final String SERIALIZED_NAME_STALE = "stale";
  @SerializedName(SERIALIZED_NAME_STALE)
  private Boolean stale;

  public static final String SERIALIZED_NAME_STALE_TIMESTAMP = "stale_timestamp";
  @SerializedName(SERIALIZED_NAME_STALE_TIMESTAMP)
  private String staleTimestamp;

  public static final String SERIALIZED_NAME_STALE_WARNING_TIMESTAMP = "stale_warning_timestamp";
  @SerializedName(SERIALIZED_NAME_STALE_WARNING_TIMESTAMP)
  private String staleWarningTimestamp;

  public static final String SERIALIZED_NAME_THIRD_PARTY = "third_party";
  @SerializedName(SERIALIZED_NAME_THIRD_PARTY)
  private Boolean thirdParty;

  public ControllersSystemInlineItem() {
  }

  public ControllersSystemInlineItem created(String created) {
    this.created = created;
    return this;
  }

  /**
   * Get created
   * @return created
   */
  @javax.annotation.Nullable
  public String getCreated() {
    return created;
  }

  public void setCreated(String created) {
    this.created = created;
  }


  public ControllersSystemInlineItem culledTimestamp(String culledTimestamp) {
    this.culledTimestamp = culledTimestamp;
    return this;
  }

  /**
   * Get culledTimestamp
   * @return culledTimestamp
   */
  @javax.annotation.Nullable
  public String getCulledTimestamp() {
    return culledTimestamp;
  }

  public void setCulledTimestamp(String culledTimestamp) {
    this.culledTimestamp = culledTimestamp;
  }


  public ControllersSystemInlineItem displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Get displayName
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public ControllersSystemInlineItem id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public ControllersSystemInlineItem insightsId(String insightsId) {
    this.insightsId = insightsId;
    return this;
  }

  /**
   * Get insightsId
   * @return insightsId
   */
  @javax.annotation.Nullable
  public String getInsightsId() {
    return insightsId;
  }

  public void setInsightsId(String insightsId) {
    this.insightsId = insightsId;
  }


  public ControllersSystemInlineItem lastEvaluation(String lastEvaluation) {
    this.lastEvaluation = lastEvaluation;
    return this;
  }

  /**
   * Get lastEvaluation
   * @return lastEvaluation
   */
  @javax.annotation.Nullable
  public String getLastEvaluation() {
    return lastEvaluation;
  }

  public void setLastEvaluation(String lastEvaluation) {
    this.lastEvaluation = lastEvaluation;
  }


  public ControllersSystemInlineItem lastUpload(String lastUpload) {
    this.lastUpload = lastUpload;
    return this;
  }

  /**
   * Get lastUpload
   * @return lastUpload
   */
  @javax.annotation.Nullable
  public String getLastUpload() {
    return lastUpload;
  }

  public void setLastUpload(String lastUpload) {
    this.lastUpload = lastUpload;
  }


  public ControllersSystemInlineItem osMajor(String osMajor) {
    this.osMajor = osMajor;
    return this;
  }

  /**
   * Get osMajor
   * @return osMajor
   */
  @javax.annotation.Nullable
  public String getOsMajor() {
    return osMajor;
  }

  public void setOsMajor(String osMajor) {
    this.osMajor = osMajor;
  }


  public ControllersSystemInlineItem osMinor(String osMinor) {
    this.osMinor = osMinor;
    return this;
  }

  /**
   * Get osMinor
   * @return osMinor
   */
  @javax.annotation.Nullable
  public String getOsMinor() {
    return osMinor;
  }

  public void setOsMinor(String osMinor) {
    this.osMinor = osMinor;
  }


  public ControllersSystemInlineItem osName(String osName) {
    this.osName = osName;
    return this;
  }

  /**
   * Get osName
   * @return osName
   */
  @javax.annotation.Nullable
  public String getOsName() {
    return osName;
  }

  public void setOsName(String osName) {
    this.osName = osName;
  }


  public ControllersSystemInlineItem otherCount(Integer otherCount) {
    this.otherCount = otherCount;
    return this;
  }

  /**
   * Get otherCount
   * @return otherCount
   */
  @javax.annotation.Nullable
  public Integer getOtherCount() {
    return otherCount;
  }

  public void setOtherCount(Integer otherCount) {
    this.otherCount = otherCount;
  }


  public ControllersSystemInlineItem packagesInstalled(Integer packagesInstalled) {
    this.packagesInstalled = packagesInstalled;
    return this;
  }

  /**
   * Get packagesInstalled
   * @return packagesInstalled
   */
  @javax.annotation.Nullable
  public Integer getPackagesInstalled() {
    return packagesInstalled;
  }

  public void setPackagesInstalled(Integer packagesInstalled) {
    this.packagesInstalled = packagesInstalled;
  }


  public ControllersSystemInlineItem packagesUpdatable(Integer packagesUpdatable) {
    this.packagesUpdatable = packagesUpdatable;
    return this;
  }

  /**
   * Get packagesUpdatable
   * @return packagesUpdatable
   */
  @javax.annotation.Nullable
  public Integer getPackagesUpdatable() {
    return packagesUpdatable;
  }

  public void setPackagesUpdatable(Integer packagesUpdatable) {
    this.packagesUpdatable = packagesUpdatable;
  }


  public ControllersSystemInlineItem rhbaCount(Integer rhbaCount) {
    this.rhbaCount = rhbaCount;
    return this;
  }

  /**
   * Get rhbaCount
   * @return rhbaCount
   */
  @javax.annotation.Nullable
  public Integer getRhbaCount() {
    return rhbaCount;
  }

  public void setRhbaCount(Integer rhbaCount) {
    this.rhbaCount = rhbaCount;
  }


  public ControllersSystemInlineItem rheaCount(Integer rheaCount) {
    this.rheaCount = rheaCount;
    return this;
  }

  /**
   * Get rheaCount
   * @return rheaCount
   */
  @javax.annotation.Nullable
  public Integer getRheaCount() {
    return rheaCount;
  }

  public void setRheaCount(Integer rheaCount) {
    this.rheaCount = rheaCount;
  }


  public ControllersSystemInlineItem rhsaCount(Integer rhsaCount) {
    this.rhsaCount = rhsaCount;
    return this;
  }

  /**
   * Get rhsaCount
   * @return rhsaCount
   */
  @javax.annotation.Nullable
  public Integer getRhsaCount() {
    return rhsaCount;
  }

  public void setRhsaCount(Integer rhsaCount) {
    this.rhsaCount = rhsaCount;
  }


  public ControllersSystemInlineItem rhsm(String rhsm) {
    this.rhsm = rhsm;
    return this;
  }

  /**
   * Get rhsm
   * @return rhsm
   */
  @javax.annotation.Nullable
  public String getRhsm() {
    return rhsm;
  }

  public void setRhsm(String rhsm) {
    this.rhsm = rhsm;
  }


  public ControllersSystemInlineItem stale(Boolean stale) {
    this.stale = stale;
    return this;
  }

  /**
   * Get stale
   * @return stale
   */
  @javax.annotation.Nullable
  public Boolean getStale() {
    return stale;
  }

  public void setStale(Boolean stale) {
    this.stale = stale;
  }


  public ControllersSystemInlineItem staleTimestamp(String staleTimestamp) {
    this.staleTimestamp = staleTimestamp;
    return this;
  }

  /**
   * Get staleTimestamp
   * @return staleTimestamp
   */
  @javax.annotation.Nullable
  public String getStaleTimestamp() {
    return staleTimestamp;
  }

  public void setStaleTimestamp(String staleTimestamp) {
    this.staleTimestamp = staleTimestamp;
  }


  public ControllersSystemInlineItem staleWarningTimestamp(String staleWarningTimestamp) {
    this.staleWarningTimestamp = staleWarningTimestamp;
    return this;
  }

  /**
   * Get staleWarningTimestamp
   * @return staleWarningTimestamp
   */
  @javax.annotation.Nullable
  public String getStaleWarningTimestamp() {
    return staleWarningTimestamp;
  }

  public void setStaleWarningTimestamp(String staleWarningTimestamp) {
    this.staleWarningTimestamp = staleWarningTimestamp;
  }


  public ControllersSystemInlineItem thirdParty(Boolean thirdParty) {
    this.thirdParty = thirdParty;
    return this;
  }

  /**
   * Get thirdParty
   * @return thirdParty
   */
  @javax.annotation.Nullable
  public Boolean getThirdParty() {
    return thirdParty;
  }

  public void setThirdParty(Boolean thirdParty) {
    this.thirdParty = thirdParty;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ControllersSystemInlineItem controllersSystemInlineItem = (ControllersSystemInlineItem) o;
    return Objects.equals(this.created, controllersSystemInlineItem.created) &&
        Objects.equals(this.culledTimestamp, controllersSystemInlineItem.culledTimestamp) &&
        Objects.equals(this.displayName, controllersSystemInlineItem.displayName) &&
        Objects.equals(this.id, controllersSystemInlineItem.id) &&
        Objects.equals(this.insightsId, controllersSystemInlineItem.insightsId) &&
        Objects.equals(this.lastEvaluation, controllersSystemInlineItem.lastEvaluation) &&
        Objects.equals(this.lastUpload, controllersSystemInlineItem.lastUpload) &&
        Objects.equals(this.osMajor, controllersSystemInlineItem.osMajor) &&
        Objects.equals(this.osMinor, controllersSystemInlineItem.osMinor) &&
        Objects.equals(this.osName, controllersSystemInlineItem.osName) &&
        Objects.equals(this.otherCount, controllersSystemInlineItem.otherCount) &&
        Objects.equals(this.packagesInstalled, controllersSystemInlineItem.packagesInstalled) &&
        Objects.equals(this.packagesUpdatable, controllersSystemInlineItem.packagesUpdatable) &&
        Objects.equals(this.rhbaCount, controllersSystemInlineItem.rhbaCount) &&
        Objects.equals(this.rheaCount, controllersSystemInlineItem.rheaCount) &&
        Objects.equals(this.rhsaCount, controllersSystemInlineItem.rhsaCount) &&
        Objects.equals(this.rhsm, controllersSystemInlineItem.rhsm) &&
        Objects.equals(this.stale, controllersSystemInlineItem.stale) &&
        Objects.equals(this.staleTimestamp, controllersSystemInlineItem.staleTimestamp) &&
        Objects.equals(this.staleWarningTimestamp, controllersSystemInlineItem.staleWarningTimestamp) &&
        Objects.equals(this.thirdParty, controllersSystemInlineItem.thirdParty);
  }

  @Override
  public int hashCode() {
    return Objects.hash(created, culledTimestamp, displayName, id, insightsId, lastEvaluation, lastUpload, osMajor, osMinor, osName, otherCount, packagesInstalled, packagesUpdatable, rhbaCount, rheaCount, rhsaCount, rhsm, stale, staleTimestamp, staleWarningTimestamp, thirdParty);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ControllersSystemInlineItem {\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    culledTimestamp: ").append(toIndentedString(culledTimestamp)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    insightsId: ").append(toIndentedString(insightsId)).append("\n");
    sb.append("    lastEvaluation: ").append(toIndentedString(lastEvaluation)).append("\n");
    sb.append("    lastUpload: ").append(toIndentedString(lastUpload)).append("\n");
    sb.append("    osMajor: ").append(toIndentedString(osMajor)).append("\n");
    sb.append("    osMinor: ").append(toIndentedString(osMinor)).append("\n");
    sb.append("    osName: ").append(toIndentedString(osName)).append("\n");
    sb.append("    otherCount: ").append(toIndentedString(otherCount)).append("\n");
    sb.append("    packagesInstalled: ").append(toIndentedString(packagesInstalled)).append("\n");
    sb.append("    packagesUpdatable: ").append(toIndentedString(packagesUpdatable)).append("\n");
    sb.append("    rhbaCount: ").append(toIndentedString(rhbaCount)).append("\n");
    sb.append("    rheaCount: ").append(toIndentedString(rheaCount)).append("\n");
    sb.append("    rhsaCount: ").append(toIndentedString(rhsaCount)).append("\n");
    sb.append("    rhsm: ").append(toIndentedString(rhsm)).append("\n");
    sb.append("    stale: ").append(toIndentedString(stale)).append("\n");
    sb.append("    staleTimestamp: ").append(toIndentedString(staleTimestamp)).append("\n");
    sb.append("    staleWarningTimestamp: ").append(toIndentedString(staleWarningTimestamp)).append("\n");
    sb.append("    thirdParty: ").append(toIndentedString(thirdParty)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("created");
    openapiFields.add("culled_timestamp");
    openapiFields.add("display_name");
    openapiFields.add("id");
    openapiFields.add("insights_id");
    openapiFields.add("last_evaluation");
    openapiFields.add("last_upload");
    openapiFields.add("os_major");
    openapiFields.add("os_minor");
    openapiFields.add("os_name");
    openapiFields.add("other_count");
    openapiFields.add("packages_installed");
    openapiFields.add("packages_updatable");
    openapiFields.add("rhba_count");
    openapiFields.add("rhea_count");
    openapiFields.add("rhsa_count");
    openapiFields.add("rhsm");
    openapiFields.add("stale");
    openapiFields.add("stale_timestamp");
    openapiFields.add("stale_warning_timestamp");
    openapiFields.add("third_party");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ControllersSystemInlineItem
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ControllersSystemInlineItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ControllersSystemInlineItem is not found in the empty JSON string", ControllersSystemInlineItem.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ControllersSystemInlineItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ControllersSystemInlineItem` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("created") != null && !jsonObj.get("created").isJsonNull()) && !jsonObj.get("created").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created").toString()));
      }
      if ((jsonObj.get("culled_timestamp") != null && !jsonObj.get("culled_timestamp").isJsonNull()) && !jsonObj.get("culled_timestamp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `culled_timestamp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("culled_timestamp").toString()));
      }
      if ((jsonObj.get("display_name") != null && !jsonObj.get("display_name").isJsonNull()) && !jsonObj.get("display_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `display_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("display_name").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("insights_id") != null && !jsonObj.get("insights_id").isJsonNull()) && !jsonObj.get("insights_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `insights_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("insights_id").toString()));
      }
      if ((jsonObj.get("last_evaluation") != null && !jsonObj.get("last_evaluation").isJsonNull()) && !jsonObj.get("last_evaluation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_evaluation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_evaluation").toString()));
      }
      if ((jsonObj.get("last_upload") != null && !jsonObj.get("last_upload").isJsonNull()) && !jsonObj.get("last_upload").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_upload` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_upload").toString()));
      }
      if ((jsonObj.get("os_major") != null && !jsonObj.get("os_major").isJsonNull()) && !jsonObj.get("os_major").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `os_major` to be a primitive type in the JSON string but got `%s`", jsonObj.get("os_major").toString()));
      }
      if ((jsonObj.get("os_minor") != null && !jsonObj.get("os_minor").isJsonNull()) && !jsonObj.get("os_minor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `os_minor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("os_minor").toString()));
      }
      if ((jsonObj.get("os_name") != null && !jsonObj.get("os_name").isJsonNull()) && !jsonObj.get("os_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `os_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("os_name").toString()));
      }
      if ((jsonObj.get("rhsm") != null && !jsonObj.get("rhsm").isJsonNull()) && !jsonObj.get("rhsm").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rhsm` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rhsm").toString()));
      }
      if ((jsonObj.get("stale_timestamp") != null && !jsonObj.get("stale_timestamp").isJsonNull()) && !jsonObj.get("stale_timestamp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stale_timestamp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stale_timestamp").toString()));
      }
      if ((jsonObj.get("stale_warning_timestamp") != null && !jsonObj.get("stale_warning_timestamp").isJsonNull()) && !jsonObj.get("stale_warning_timestamp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stale_warning_timestamp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stale_warning_timestamp").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ControllersSystemInlineItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ControllersSystemInlineItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ControllersSystemInlineItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ControllersSystemInlineItem.class));

       return (TypeAdapter<T>) new TypeAdapter<ControllersSystemInlineItem>() {
           @Override
           public void write(JsonWriter out, ControllersSystemInlineItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ControllersSystemInlineItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ControllersSystemInlineItem given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ControllersSystemInlineItem
   * @throws IOException if the JSON string is invalid with respect to ControllersSystemInlineItem
   */
  public static ControllersSystemInlineItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ControllersSystemInlineItem.class);
  }

  /**
   * Convert an instance of ControllersSystemInlineItem to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

