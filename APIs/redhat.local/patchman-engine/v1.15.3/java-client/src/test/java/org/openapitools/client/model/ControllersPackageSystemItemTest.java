/*
 * Patchman-engine API
 * API of the Patch application on [cloud.redhat.com](cloud.redhat.com)  Syntax of the `filter[name]` query parameters is described in  [Filters documentation](https://github.com/RedHatInsights/patchman-engine/wiki/API-custom-filters)
 *
 * The version of the OpenAPI document: v1.15.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ControllersPackageSystemItem
 */
public class ControllersPackageSystemItemTest {
    private final ControllersPackageSystemItem model = new ControllersPackageSystemItem();

    /**
     * Model tests for ControllersPackageSystemItem
     */
    @Test
    public void testControllersPackageSystemItem() {
        // TODO: test ControllersPackageSystemItem
    }

    /**
     * Test the property 'availableEvra'
     */
    @Test
    public void availableEvraTest() {
        // TODO: test availableEvra
    }

    /**
     * Test the property 'displayName'
     */
    @Test
    public void displayNameTest() {
        // TODO: test displayName
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'installedEvra'
     */
    @Test
    public void installedEvraTest() {
        // TODO: test installedEvra
    }

    /**
     * Test the property 'updatable'
     */
    @Test
    public void updatableTest() {
        // TODO: test updatable
    }

}
