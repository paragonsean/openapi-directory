/*
 * Patchman-engine API
 * API of the Patch application on [cloud.redhat.com](cloud.redhat.com)  Syntax of the `filter[name]` query parameters is described in  [Filters documentation](https://github.com/RedHatInsights/patchman-engine/wiki/API-custom-filters)
 *
 * The version of the OpenAPI document: v1.15.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ControllersSystemItemAttributes
 */
public class ControllersSystemItemAttributesTest {
    private final ControllersSystemItemAttributes model = new ControllersSystemItemAttributes();

    /**
     * Model tests for ControllersSystemItemAttributes
     */
    @Test
    public void testControllersSystemItemAttributes() {
        // TODO: test ControllersSystemItemAttributes
    }

    /**
     * Test the property 'created'
     */
    @Test
    public void createdTest() {
        // TODO: test created
    }

    /**
     * Test the property 'culledTimestamp'
     */
    @Test
    public void culledTimestampTest() {
        // TODO: test culledTimestamp
    }

    /**
     * Test the property 'displayName'
     */
    @Test
    public void displayNameTest() {
        // TODO: test displayName
    }

    /**
     * Test the property 'insightsId'
     */
    @Test
    public void insightsIdTest() {
        // TODO: test insightsId
    }

    /**
     * Test the property 'lastEvaluation'
     */
    @Test
    public void lastEvaluationTest() {
        // TODO: test lastEvaluation
    }

    /**
     * Test the property 'lastUpload'
     */
    @Test
    public void lastUploadTest() {
        // TODO: test lastUpload
    }

    /**
     * Test the property 'osMajor'
     */
    @Test
    public void osMajorTest() {
        // TODO: test osMajor
    }

    /**
     * Test the property 'osMinor'
     */
    @Test
    public void osMinorTest() {
        // TODO: test osMinor
    }

    /**
     * Test the property 'osName'
     */
    @Test
    public void osNameTest() {
        // TODO: test osName
    }

    /**
     * Test the property 'otherCount'
     */
    @Test
    public void otherCountTest() {
        // TODO: test otherCount
    }

    /**
     * Test the property 'packagesInstalled'
     */
    @Test
    public void packagesInstalledTest() {
        // TODO: test packagesInstalled
    }

    /**
     * Test the property 'packagesUpdatable'
     */
    @Test
    public void packagesUpdatableTest() {
        // TODO: test packagesUpdatable
    }

    /**
     * Test the property 'rhbaCount'
     */
    @Test
    public void rhbaCountTest() {
        // TODO: test rhbaCount
    }

    /**
     * Test the property 'rheaCount'
     */
    @Test
    public void rheaCountTest() {
        // TODO: test rheaCount
    }

    /**
     * Test the property 'rhsaCount'
     */
    @Test
    public void rhsaCountTest() {
        // TODO: test rhsaCount
    }

    /**
     * Test the property 'rhsm'
     */
    @Test
    public void rhsmTest() {
        // TODO: test rhsm
    }

    /**
     * Test the property 'stale'
     */
    @Test
    public void staleTest() {
        // TODO: test stale
    }

    /**
     * Test the property 'staleTimestamp'
     */
    @Test
    public void staleTimestampTest() {
        // TODO: test staleTimestamp
    }

    /**
     * Test the property 'staleWarningTimestamp'
     */
    @Test
    public void staleWarningTimestampTest() {
        // TODO: test staleWarningTimestamp
    }

    /**
     * Test the property 'thirdParty'
     */
    @Test
    public void thirdPartyTest() {
        // TODO: test thirdParty
    }

}
