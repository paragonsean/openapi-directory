/*
 * Patchman-engine API
 * API of the Patch application on [cloud.redhat.com](cloud.redhat.com)  Syntax of the `filter[name]` query parameters is described in  [Filters documentation](https://github.com/RedHatInsights/patchman-engine/wiki/API-custom-filters)
 *
 * The version of the OpenAPI document: v1.15.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ControllersSystemPackageInline
 */
public class ControllersSystemPackageInlineTest {
    private final ControllersSystemPackageInline model = new ControllersSystemPackageInline();

    /**
     * Model tests for ControllersSystemPackageInline
     */
    @Test
    public void testControllersSystemPackageInline() {
        // TODO: test ControllersSystemPackageInline
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'evra'
     */
    @Test
    public void evraTest() {
        // TODO: test evra
    }

    /**
     * Test the property 'latestEvra'
     */
    @Test
    public void latestEvraTest() {
        // TODO: test latestEvra
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'summary'
     */
    @Test
    public void summaryTest() {
        // TODO: test summary
    }

    /**
     * Test the property 'updatable'
     */
    @Test
    public void updatableTest() {
        // TODO: test updatable
    }

}
