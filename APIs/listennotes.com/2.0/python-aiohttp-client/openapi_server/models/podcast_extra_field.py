# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PodcastExtraField(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amazon_music_url: str=None, facebook_handle: str=None, google_url: str=None, instagram_handle: str=None, linkedin_url: str=None, patreon_handle: str=None, spotify_url: str=None, twitter_handle: str=None, url1: str=None, url2: str=None, url3: str=None, wechat_handle: str=None, youtube_url: str=None):
        """PodcastExtraField - a model defined in OpenAPI

        :param amazon_music_url: The amazon_music_url of this PodcastExtraField.
        :param facebook_handle: The facebook_handle of this PodcastExtraField.
        :param google_url: The google_url of this PodcastExtraField.
        :param instagram_handle: The instagram_handle of this PodcastExtraField.
        :param linkedin_url: The linkedin_url of this PodcastExtraField.
        :param patreon_handle: The patreon_handle of this PodcastExtraField.
        :param spotify_url: The spotify_url of this PodcastExtraField.
        :param twitter_handle: The twitter_handle of this PodcastExtraField.
        :param url1: The url1 of this PodcastExtraField.
        :param url2: The url2 of this PodcastExtraField.
        :param url3: The url3 of this PodcastExtraField.
        :param wechat_handle: The wechat_handle of this PodcastExtraField.
        :param youtube_url: The youtube_url of this PodcastExtraField.
        """
        self.openapi_types = {
            'amazon_music_url': str,
            'facebook_handle': str,
            'google_url': str,
            'instagram_handle': str,
            'linkedin_url': str,
            'patreon_handle': str,
            'spotify_url': str,
            'twitter_handle': str,
            'url1': str,
            'url2': str,
            'url3': str,
            'wechat_handle': str,
            'youtube_url': str
        }

        self.attribute_map = {
            'amazon_music_url': 'amazon_music_url',
            'facebook_handle': 'facebook_handle',
            'google_url': 'google_url',
            'instagram_handle': 'instagram_handle',
            'linkedin_url': 'linkedin_url',
            'patreon_handle': 'patreon_handle',
            'spotify_url': 'spotify_url',
            'twitter_handle': 'twitter_handle',
            'url1': 'url1',
            'url2': 'url2',
            'url3': 'url3',
            'wechat_handle': 'wechat_handle',
            'youtube_url': 'youtube_url'
        }

        self._amazon_music_url = amazon_music_url
        self._facebook_handle = facebook_handle
        self._google_url = google_url
        self._instagram_handle = instagram_handle
        self._linkedin_url = linkedin_url
        self._patreon_handle = patreon_handle
        self._spotify_url = spotify_url
        self._twitter_handle = twitter_handle
        self._url1 = url1
        self._url2 = url2
        self._url3 = url3
        self._wechat_handle = wechat_handle
        self._youtube_url = youtube_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PodcastExtraField':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PodcastExtraField of this PodcastExtraField.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amazon_music_url(self):
        """Gets the amazon_music_url of this PodcastExtraField.

        Amazon Music url for this podcast

        :return: The amazon_music_url of this PodcastExtraField.
        :rtype: str
        """
        return self._amazon_music_url

    @amazon_music_url.setter
    def amazon_music_url(self, amazon_music_url):
        """Sets the amazon_music_url of this PodcastExtraField.

        Amazon Music url for this podcast

        :param amazon_music_url: The amazon_music_url of this PodcastExtraField.
        :type amazon_music_url: str
        """

        self._amazon_music_url = amazon_music_url

    @property
    def facebook_handle(self):
        """Gets the facebook_handle of this PodcastExtraField.

        Facebook username affiliated with this podcast

        :return: The facebook_handle of this PodcastExtraField.
        :rtype: str
        """
        return self._facebook_handle

    @facebook_handle.setter
    def facebook_handle(self, facebook_handle):
        """Sets the facebook_handle of this PodcastExtraField.

        Facebook username affiliated with this podcast

        :param facebook_handle: The facebook_handle of this PodcastExtraField.
        :type facebook_handle: str
        """

        self._facebook_handle = facebook_handle

    @property
    def google_url(self):
        """Gets the google_url of this PodcastExtraField.

        Google Podcasts url for this podcast

        :return: The google_url of this PodcastExtraField.
        :rtype: str
        """
        return self._google_url

    @google_url.setter
    def google_url(self, google_url):
        """Sets the google_url of this PodcastExtraField.

        Google Podcasts url for this podcast

        :param google_url: The google_url of this PodcastExtraField.
        :type google_url: str
        """

        self._google_url = google_url

    @property
    def instagram_handle(self):
        """Gets the instagram_handle of this PodcastExtraField.

        Instagram username affiliated with this podcast

        :return: The instagram_handle of this PodcastExtraField.
        :rtype: str
        """
        return self._instagram_handle

    @instagram_handle.setter
    def instagram_handle(self, instagram_handle):
        """Sets the instagram_handle of this PodcastExtraField.

        Instagram username affiliated with this podcast

        :param instagram_handle: The instagram_handle of this PodcastExtraField.
        :type instagram_handle: str
        """

        self._instagram_handle = instagram_handle

    @property
    def linkedin_url(self):
        """Gets the linkedin_url of this PodcastExtraField.

        LinkedIn url affiliated with this podcast

        :return: The linkedin_url of this PodcastExtraField.
        :rtype: str
        """
        return self._linkedin_url

    @linkedin_url.setter
    def linkedin_url(self, linkedin_url):
        """Sets the linkedin_url of this PodcastExtraField.

        LinkedIn url affiliated with this podcast

        :param linkedin_url: The linkedin_url of this PodcastExtraField.
        :type linkedin_url: str
        """

        self._linkedin_url = linkedin_url

    @property
    def patreon_handle(self):
        """Gets the patreon_handle of this PodcastExtraField.

        Patreon username affiliated with this podcast

        :return: The patreon_handle of this PodcastExtraField.
        :rtype: str
        """
        return self._patreon_handle

    @patreon_handle.setter
    def patreon_handle(self, patreon_handle):
        """Sets the patreon_handle of this PodcastExtraField.

        Patreon username affiliated with this podcast

        :param patreon_handle: The patreon_handle of this PodcastExtraField.
        :type patreon_handle: str
        """

        self._patreon_handle = patreon_handle

    @property
    def spotify_url(self):
        """Gets the spotify_url of this PodcastExtraField.

        Spotify url for this podcast

        :return: The spotify_url of this PodcastExtraField.
        :rtype: str
        """
        return self._spotify_url

    @spotify_url.setter
    def spotify_url(self, spotify_url):
        """Sets the spotify_url of this PodcastExtraField.

        Spotify url for this podcast

        :param spotify_url: The spotify_url of this PodcastExtraField.
        :type spotify_url: str
        """

        self._spotify_url = spotify_url

    @property
    def twitter_handle(self):
        """Gets the twitter_handle of this PodcastExtraField.

        Twitter username affiliated with this podcast

        :return: The twitter_handle of this PodcastExtraField.
        :rtype: str
        """
        return self._twitter_handle

    @twitter_handle.setter
    def twitter_handle(self, twitter_handle):
        """Sets the twitter_handle of this PodcastExtraField.

        Twitter username affiliated with this podcast

        :param twitter_handle: The twitter_handle of this PodcastExtraField.
        :type twitter_handle: str
        """

        self._twitter_handle = twitter_handle

    @property
    def url1(self):
        """Gets the url1 of this PodcastExtraField.

        Url affiliated with this podcast

        :return: The url1 of this PodcastExtraField.
        :rtype: str
        """
        return self._url1

    @url1.setter
    def url1(self, url1):
        """Sets the url1 of this PodcastExtraField.

        Url affiliated with this podcast

        :param url1: The url1 of this PodcastExtraField.
        :type url1: str
        """

        self._url1 = url1

    @property
    def url2(self):
        """Gets the url2 of this PodcastExtraField.

        Url affiliated with this podcast

        :return: The url2 of this PodcastExtraField.
        :rtype: str
        """
        return self._url2

    @url2.setter
    def url2(self, url2):
        """Sets the url2 of this PodcastExtraField.

        Url affiliated with this podcast

        :param url2: The url2 of this PodcastExtraField.
        :type url2: str
        """

        self._url2 = url2

    @property
    def url3(self):
        """Gets the url3 of this PodcastExtraField.

        Url affiliated with this podcast

        :return: The url3 of this PodcastExtraField.
        :rtype: str
        """
        return self._url3

    @url3.setter
    def url3(self, url3):
        """Sets the url3 of this PodcastExtraField.

        Url affiliated with this podcast

        :param url3: The url3 of this PodcastExtraField.
        :type url3: str
        """

        self._url3 = url3

    @property
    def wechat_handle(self):
        """Gets the wechat_handle of this PodcastExtraField.

        WeChat username affiliated with this podcast

        :return: The wechat_handle of this PodcastExtraField.
        :rtype: str
        """
        return self._wechat_handle

    @wechat_handle.setter
    def wechat_handle(self, wechat_handle):
        """Sets the wechat_handle of this PodcastExtraField.

        WeChat username affiliated with this podcast

        :param wechat_handle: The wechat_handle of this PodcastExtraField.
        :type wechat_handle: str
        """

        self._wechat_handle = wechat_handle

    @property
    def youtube_url(self):
        """Gets the youtube_url of this PodcastExtraField.

        YouTube url affiliated with this podcast

        :return: The youtube_url of this PodcastExtraField.
        :rtype: str
        """
        return self._youtube_url

    @youtube_url.setter
    def youtube_url(self, youtube_url):
        """Sets the youtube_url of this PodcastExtraField.

        YouTube url affiliated with this podcast

        :param youtube_url: The youtube_url of this PodcastExtraField.
        :type youtube_url: str
        """

        self._youtube_url = youtube_url
