# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RelatedSearchesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, terms: List[str]=None):
        """RelatedSearchesResponse - a model defined in OpenAPI

        :param terms: The terms of this RelatedSearchesResponse.
        """
        self.openapi_types = {
            'terms': List[str]
        }

        self.attribute_map = {
            'terms': 'terms'
        }

        self._terms = terms

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RelatedSearchesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RelatedSearchesResponse of this RelatedSearchesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def terms(self):
        """Gets the terms of this RelatedSearchesResponse.

        Related search terms

        :return: The terms of this RelatedSearchesResponse.
        :rtype: List[str]
        """
        return self._terms

    @terms.setter
    def terms(self, terms):
        """Sets the terms of this RelatedSearchesResponse.

        Related search terms

        :param terms: The terms of this RelatedSearchesResponse.
        :type terms: List[str]
        """
        if terms is None:
            raise ValueError("Invalid value for `terms`, must not be `None`")

        self._terms = terms
