# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.podcast_audience_response_by_regions_inner import PodcastAudienceResponseByRegionsInner
from openapi_server import util


class PodcastAudienceResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, by_regions: List[PodcastAudienceResponseByRegionsInner]=None):
        """PodcastAudienceResponse - a model defined in OpenAPI

        :param by_regions: The by_regions of this PodcastAudienceResponse.
        """
        self.openapi_types = {
            'by_regions': List[PodcastAudienceResponseByRegionsInner]
        }

        self.attribute_map = {
            'by_regions': 'by_regions'
        }

        self._by_regions = by_regions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PodcastAudienceResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PodcastAudienceResponse of this PodcastAudienceResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def by_regions(self):
        """Gets the by_regions of this PodcastAudienceResponse.


        :return: The by_regions of this PodcastAudienceResponse.
        :rtype: List[PodcastAudienceResponseByRegionsInner]
        """
        return self._by_regions

    @by_regions.setter
    def by_regions(self, by_regions):
        """Sets the by_regions of this PodcastAudienceResponse.


        :param by_regions: The by_regions of this PodcastAudienceResponse.
        :type by_regions: List[PodcastAudienceResponseByRegionsInner]
        """

        self._by_regions = by_regions
