# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.podcast_minimum import PodcastMinimum
from openapi_server import util


class CuratedListSearchResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description_highlighted: str=None, description_original: str=None, id: str=None, listennotes_url: str=None, podcasts: List[PodcastMinimum]=None, pub_date_ms: int=None, source_domain: str=None, source_url: str=None, title_highlighted: str=None, title_original: str=None, total: int=None):
        """CuratedListSearchResult - a model defined in OpenAPI

        :param description_highlighted: The description_highlighted of this CuratedListSearchResult.
        :param description_original: The description_original of this CuratedListSearchResult.
        :param id: The id of this CuratedListSearchResult.
        :param listennotes_url: The listennotes_url of this CuratedListSearchResult.
        :param podcasts: The podcasts of this CuratedListSearchResult.
        :param pub_date_ms: The pub_date_ms of this CuratedListSearchResult.
        :param source_domain: The source_domain of this CuratedListSearchResult.
        :param source_url: The source_url of this CuratedListSearchResult.
        :param title_highlighted: The title_highlighted of this CuratedListSearchResult.
        :param title_original: The title_original of this CuratedListSearchResult.
        :param total: The total of this CuratedListSearchResult.
        """
        self.openapi_types = {
            'description_highlighted': str,
            'description_original': str,
            'id': str,
            'listennotes_url': str,
            'podcasts': List[PodcastMinimum],
            'pub_date_ms': int,
            'source_domain': str,
            'source_url': str,
            'title_highlighted': str,
            'title_original': str,
            'total': int
        }

        self.attribute_map = {
            'description_highlighted': 'description_highlighted',
            'description_original': 'description_original',
            'id': 'id',
            'listennotes_url': 'listennotes_url',
            'podcasts': 'podcasts',
            'pub_date_ms': 'pub_date_ms',
            'source_domain': 'source_domain',
            'source_url': 'source_url',
            'title_highlighted': 'title_highlighted',
            'title_original': 'title_original',
            'total': 'total'
        }

        self._description_highlighted = description_highlighted
        self._description_original = description_original
        self._id = id
        self._listennotes_url = listennotes_url
        self._podcasts = podcasts
        self._pub_date_ms = pub_date_ms
        self._source_domain = source_domain
        self._source_url = source_url
        self._title_highlighted = title_highlighted
        self._title_original = title_original
        self._total = total

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CuratedListSearchResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CuratedListSearchResult of this CuratedListSearchResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description_highlighted(self):
        """Gets the description_highlighted of this CuratedListSearchResult.

        Highlighted segment of this curated list's description

        :return: The description_highlighted of this CuratedListSearchResult.
        :rtype: str
        """
        return self._description_highlighted

    @description_highlighted.setter
    def description_highlighted(self, description_highlighted):
        """Sets the description_highlighted of this CuratedListSearchResult.

        Highlighted segment of this curated list's description

        :param description_highlighted: The description_highlighted of this CuratedListSearchResult.
        :type description_highlighted: str
        """

        self._description_highlighted = description_highlighted

    @property
    def description_original(self):
        """Gets the description_original of this CuratedListSearchResult.

        Plain text of this curated list's description

        :return: The description_original of this CuratedListSearchResult.
        :rtype: str
        """
        return self._description_original

    @description_original.setter
    def description_original(self, description_original):
        """Sets the description_original of this CuratedListSearchResult.

        Plain text of this curated list's description

        :param description_original: The description_original of this CuratedListSearchResult.
        :type description_original: str
        """

        self._description_original = description_original

    @property
    def id(self):
        """Gets the id of this CuratedListSearchResult.

        Curated list id, which can be used to further fetch detailed curated list metadata via `GET /curated_podcasts/{id}`.

        :return: The id of this CuratedListSearchResult.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CuratedListSearchResult.

        Curated list id, which can be used to further fetch detailed curated list metadata via `GET /curated_podcasts/{id}`.

        :param id: The id of this CuratedListSearchResult.
        :type id: str
        """

        self._id = id

    @property
    def listennotes_url(self):
        """Gets the listennotes_url of this CuratedListSearchResult.

        The url of this curated list on [ListenNotes.com](https://www.ListenNotes.com).

        :return: The listennotes_url of this CuratedListSearchResult.
        :rtype: str
        """
        return self._listennotes_url

    @listennotes_url.setter
    def listennotes_url(self, listennotes_url):
        """Sets the listennotes_url of this CuratedListSearchResult.

        The url of this curated list on [ListenNotes.com](https://www.ListenNotes.com).

        :param listennotes_url: The listennotes_url of this CuratedListSearchResult.
        :type listennotes_url: str
        """

        self._listennotes_url = listennotes_url

    @property
    def podcasts(self):
        """Gets the podcasts of this CuratedListSearchResult.

        Up to 5 podcasts in this curated list.

        :return: The podcasts of this CuratedListSearchResult.
        :rtype: List[PodcastMinimum]
        """
        return self._podcasts

    @podcasts.setter
    def podcasts(self, podcasts):
        """Sets the podcasts of this CuratedListSearchResult.

        Up to 5 podcasts in this curated list.

        :param podcasts: The podcasts of this CuratedListSearchResult.
        :type podcasts: List[PodcastMinimum]
        """

        self._podcasts = podcasts

    @property
    def pub_date_ms(self):
        """Gets the pub_date_ms of this CuratedListSearchResult.

        Published date of this curated list. In milliseconds.

        :return: The pub_date_ms of this CuratedListSearchResult.
        :rtype: int
        """
        return self._pub_date_ms

    @pub_date_ms.setter
    def pub_date_ms(self, pub_date_ms):
        """Sets the pub_date_ms of this CuratedListSearchResult.

        Published date of this curated list. In milliseconds.

        :param pub_date_ms: The pub_date_ms of this CuratedListSearchResult.
        :type pub_date_ms: int
        """

        self._pub_date_ms = pub_date_ms

    @property
    def source_domain(self):
        """Gets the source_domain of this CuratedListSearchResult.

        The domain name of the source of this curated list.

        :return: The source_domain of this CuratedListSearchResult.
        :rtype: str
        """
        return self._source_domain

    @source_domain.setter
    def source_domain(self, source_domain):
        """Sets the source_domain of this CuratedListSearchResult.

        The domain name of the source of this curated list.

        :param source_domain: The source_domain of this CuratedListSearchResult.
        :type source_domain: str
        """

        self._source_domain = source_domain

    @property
    def source_url(self):
        """Gets the source_url of this CuratedListSearchResult.

        Url of the source of this curated list.

        :return: The source_url of this CuratedListSearchResult.
        :rtype: str
        """
        return self._source_url

    @source_url.setter
    def source_url(self, source_url):
        """Sets the source_url of this CuratedListSearchResult.

        Url of the source of this curated list.

        :param source_url: The source_url of this CuratedListSearchResult.
        :type source_url: str
        """

        self._source_url = source_url

    @property
    def title_highlighted(self):
        """Gets the title_highlighted of this CuratedListSearchResult.

        Highlighted segment of this curated list's title

        :return: The title_highlighted of this CuratedListSearchResult.
        :rtype: str
        """
        return self._title_highlighted

    @title_highlighted.setter
    def title_highlighted(self, title_highlighted):
        """Sets the title_highlighted of this CuratedListSearchResult.

        Highlighted segment of this curated list's title

        :param title_highlighted: The title_highlighted of this CuratedListSearchResult.
        :type title_highlighted: str
        """

        self._title_highlighted = title_highlighted

    @property
    def title_original(self):
        """Gets the title_original of this CuratedListSearchResult.

        Plain text of this curated list's title

        :return: The title_original of this CuratedListSearchResult.
        :rtype: str
        """
        return self._title_original

    @title_original.setter
    def title_original(self, title_original):
        """Sets the title_original of this CuratedListSearchResult.

        Plain text of this curated list's title

        :param title_original: The title_original of this CuratedListSearchResult.
        :type title_original: str
        """

        self._title_original = title_original

    @property
    def total(self):
        """Gets the total of this CuratedListSearchResult.

        The total number of podcasts in this curated list.

        :return: The total of this CuratedListSearchResult.
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this CuratedListSearchResult.

        The total number of podcasts in this curated list.

        :param total: The total of this CuratedListSearchResult.
        :type total: int
        """

        self._total = total
