# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.episode_search_result_podcast import EpisodeSearchResultPodcast
from openapi_server import util


class EpisodeSearchResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, audio: str=None, audio_length_sec: int=None, description_highlighted: str=None, description_original: str=None, explicit_content: bool=None, id: str=None, image: str=None, itunes_id: int=None, link: str=None, listennotes_url: str=None, podcast: EpisodeSearchResultPodcast=None, pub_date_ms: int=None, rss: str=None, thumbnail: str=None, title_highlighted: str=None, title_original: str=None, transcripts_highlighted: List[str]=None):
        """EpisodeSearchResult - a model defined in OpenAPI

        :param audio: The audio of this EpisodeSearchResult.
        :param audio_length_sec: The audio_length_sec of this EpisodeSearchResult.
        :param description_highlighted: The description_highlighted of this EpisodeSearchResult.
        :param description_original: The description_original of this EpisodeSearchResult.
        :param explicit_content: The explicit_content of this EpisodeSearchResult.
        :param id: The id of this EpisodeSearchResult.
        :param image: The image of this EpisodeSearchResult.
        :param itunes_id: The itunes_id of this EpisodeSearchResult.
        :param link: The link of this EpisodeSearchResult.
        :param listennotes_url: The listennotes_url of this EpisodeSearchResult.
        :param podcast: The podcast of this EpisodeSearchResult.
        :param pub_date_ms: The pub_date_ms of this EpisodeSearchResult.
        :param rss: The rss of this EpisodeSearchResult.
        :param thumbnail: The thumbnail of this EpisodeSearchResult.
        :param title_highlighted: The title_highlighted of this EpisodeSearchResult.
        :param title_original: The title_original of this EpisodeSearchResult.
        :param transcripts_highlighted: The transcripts_highlighted of this EpisodeSearchResult.
        """
        self.openapi_types = {
            'audio': str,
            'audio_length_sec': int,
            'description_highlighted': str,
            'description_original': str,
            'explicit_content': bool,
            'id': str,
            'image': str,
            'itunes_id': int,
            'link': str,
            'listennotes_url': str,
            'podcast': EpisodeSearchResultPodcast,
            'pub_date_ms': int,
            'rss': str,
            'thumbnail': str,
            'title_highlighted': str,
            'title_original': str,
            'transcripts_highlighted': List[str]
        }

        self.attribute_map = {
            'audio': 'audio',
            'audio_length_sec': 'audio_length_sec',
            'description_highlighted': 'description_highlighted',
            'description_original': 'description_original',
            'explicit_content': 'explicit_content',
            'id': 'id',
            'image': 'image',
            'itunes_id': 'itunes_id',
            'link': 'link',
            'listennotes_url': 'listennotes_url',
            'podcast': 'podcast',
            'pub_date_ms': 'pub_date_ms',
            'rss': 'rss',
            'thumbnail': 'thumbnail',
            'title_highlighted': 'title_highlighted',
            'title_original': 'title_original',
            'transcripts_highlighted': 'transcripts_highlighted'
        }

        self._audio = audio
        self._audio_length_sec = audio_length_sec
        self._description_highlighted = description_highlighted
        self._description_original = description_original
        self._explicit_content = explicit_content
        self._id = id
        self._image = image
        self._itunes_id = itunes_id
        self._link = link
        self._listennotes_url = listennotes_url
        self._podcast = podcast
        self._pub_date_ms = pub_date_ms
        self._rss = rss
        self._thumbnail = thumbnail
        self._title_highlighted = title_highlighted
        self._title_original = title_original
        self._transcripts_highlighted = transcripts_highlighted

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EpisodeSearchResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EpisodeSearchResult of this EpisodeSearchResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audio(self):
        """Gets the audio of this EpisodeSearchResult.

        Audio url of this episode, which can be played directly.

        :return: The audio of this EpisodeSearchResult.
        :rtype: str
        """
        return self._audio

    @audio.setter
    def audio(self, audio):
        """Sets the audio of this EpisodeSearchResult.

        Audio url of this episode, which can be played directly.

        :param audio: The audio of this EpisodeSearchResult.
        :type audio: str
        """

        self._audio = audio

    @property
    def audio_length_sec(self):
        """Gets the audio_length_sec of this EpisodeSearchResult.

        Audio length of this episode. In seconds.

        :return: The audio_length_sec of this EpisodeSearchResult.
        :rtype: int
        """
        return self._audio_length_sec

    @audio_length_sec.setter
    def audio_length_sec(self, audio_length_sec):
        """Sets the audio_length_sec of this EpisodeSearchResult.

        Audio length of this episode. In seconds.

        :param audio_length_sec: The audio_length_sec of this EpisodeSearchResult.
        :type audio_length_sec: int
        """

        self._audio_length_sec = audio_length_sec

    @property
    def description_highlighted(self):
        """Gets the description_highlighted of this EpisodeSearchResult.

        Highlighted segment of this episode's description

        :return: The description_highlighted of this EpisodeSearchResult.
        :rtype: str
        """
        return self._description_highlighted

    @description_highlighted.setter
    def description_highlighted(self, description_highlighted):
        """Sets the description_highlighted of this EpisodeSearchResult.

        Highlighted segment of this episode's description

        :param description_highlighted: The description_highlighted of this EpisodeSearchResult.
        :type description_highlighted: str
        """

        self._description_highlighted = description_highlighted

    @property
    def description_original(self):
        """Gets the description_original of this EpisodeSearchResult.

        Plain text of this episode's description

        :return: The description_original of this EpisodeSearchResult.
        :rtype: str
        """
        return self._description_original

    @description_original.setter
    def description_original(self, description_original):
        """Sets the description_original of this EpisodeSearchResult.

        Plain text of this episode's description

        :param description_original: The description_original of this EpisodeSearchResult.
        :type description_original: str
        """

        self._description_original = description_original

    @property
    def explicit_content(self):
        """Gets the explicit_content of this EpisodeSearchResult.

        Whether this podcast contains explicit language.

        :return: The explicit_content of this EpisodeSearchResult.
        :rtype: bool
        """
        return self._explicit_content

    @explicit_content.setter
    def explicit_content(self, explicit_content):
        """Sets the explicit_content of this EpisodeSearchResult.

        Whether this podcast contains explicit language.

        :param explicit_content: The explicit_content of this EpisodeSearchResult.
        :type explicit_content: bool
        """

        self._explicit_content = explicit_content

    @property
    def id(self):
        """Gets the id of this EpisodeSearchResult.

        Episode id, which can be used to further fetch detailed episode metadata via `GET /episodes/{id}`.

        :return: The id of this EpisodeSearchResult.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this EpisodeSearchResult.

        Episode id, which can be used to further fetch detailed episode metadata via `GET /episodes/{id}`.

        :param id: The id of this EpisodeSearchResult.
        :type id: str
        """

        self._id = id

    @property
    def image(self):
        """Gets the image of this EpisodeSearchResult.

        Image url for this episode. If an episode doesn't have its own image, then this field would be the url of the podcast artwork image. If you are using PRO/ENTERPRISE plan, then it's a high resolution image (1400x1400). If you are using FREE plan, then it's the same as **thumbnail**, low resolution image (300x300). 

        :return: The image of this EpisodeSearchResult.
        :rtype: str
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this EpisodeSearchResult.

        Image url for this episode. If an episode doesn't have its own image, then this field would be the url of the podcast artwork image. If you are using PRO/ENTERPRISE plan, then it's a high resolution image (1400x1400). If you are using FREE plan, then it's the same as **thumbnail**, low resolution image (300x300). 

        :param image: The image of this EpisodeSearchResult.
        :type image: str
        """

        self._image = image

    @property
    def itunes_id(self):
        """Gets the itunes_id of this EpisodeSearchResult.

        iTunes id for this podcast.

        :return: The itunes_id of this EpisodeSearchResult.
        :rtype: int
        """
        return self._itunes_id

    @itunes_id.setter
    def itunes_id(self, itunes_id):
        """Sets the itunes_id of this EpisodeSearchResult.

        iTunes id for this podcast.

        :param itunes_id: The itunes_id of this EpisodeSearchResult.
        :type itunes_id: int
        """

        self._itunes_id = itunes_id

    @property
    def link(self):
        """Gets the link of this EpisodeSearchResult.

        Web link of this episode.

        :return: The link of this EpisodeSearchResult.
        :rtype: str
        """
        return self._link

    @link.setter
    def link(self, link):
        """Sets the link of this EpisodeSearchResult.

        Web link of this episode.

        :param link: The link of this EpisodeSearchResult.
        :type link: str
        """

        self._link = link

    @property
    def listennotes_url(self):
        """Gets the listennotes_url of this EpisodeSearchResult.

        The url of this episode on [ListenNotes.com](https://www.ListenNotes.com).

        :return: The listennotes_url of this EpisodeSearchResult.
        :rtype: str
        """
        return self._listennotes_url

    @listennotes_url.setter
    def listennotes_url(self, listennotes_url):
        """Sets the listennotes_url of this EpisodeSearchResult.

        The url of this episode on [ListenNotes.com](https://www.ListenNotes.com).

        :param listennotes_url: The listennotes_url of this EpisodeSearchResult.
        :type listennotes_url: str
        """

        self._listennotes_url = listennotes_url

    @property
    def podcast(self):
        """Gets the podcast of this EpisodeSearchResult.


        :return: The podcast of this EpisodeSearchResult.
        :rtype: EpisodeSearchResultPodcast
        """
        return self._podcast

    @podcast.setter
    def podcast(self, podcast):
        """Sets the podcast of this EpisodeSearchResult.


        :param podcast: The podcast of this EpisodeSearchResult.
        :type podcast: EpisodeSearchResultPodcast
        """

        self._podcast = podcast

    @property
    def pub_date_ms(self):
        """Gets the pub_date_ms of this EpisodeSearchResult.

        Published date for this episode. In millisecond.

        :return: The pub_date_ms of this EpisodeSearchResult.
        :rtype: int
        """
        return self._pub_date_ms

    @pub_date_ms.setter
    def pub_date_ms(self, pub_date_ms):
        """Sets the pub_date_ms of this EpisodeSearchResult.

        Published date for this episode. In millisecond.

        :param pub_date_ms: The pub_date_ms of this EpisodeSearchResult.
        :type pub_date_ms: int
        """

        self._pub_date_ms = pub_date_ms

    @property
    def rss(self):
        """Gets the rss of this EpisodeSearchResult.

        RSS url of this podcast. This field is available only in the PRO/ENTERPRISE plan.

        :return: The rss of this EpisodeSearchResult.
        :rtype: str
        """
        return self._rss

    @rss.setter
    def rss(self, rss):
        """Sets the rss of this EpisodeSearchResult.

        RSS url of this podcast. This field is available only in the PRO/ENTERPRISE plan.

        :param rss: The rss of this EpisodeSearchResult.
        :type rss: str
        """

        self._rss = rss

    @property
    def thumbnail(self):
        """Gets the thumbnail of this EpisodeSearchResult.

        Thumbnail image (300x300) url for this episode. If an episode doesn't have its own image, then this field would be the url of the podcast artwork thumbnail image. 

        :return: The thumbnail of this EpisodeSearchResult.
        :rtype: str
        """
        return self._thumbnail

    @thumbnail.setter
    def thumbnail(self, thumbnail):
        """Sets the thumbnail of this EpisodeSearchResult.

        Thumbnail image (300x300) url for this episode. If an episode doesn't have its own image, then this field would be the url of the podcast artwork thumbnail image. 

        :param thumbnail: The thumbnail of this EpisodeSearchResult.
        :type thumbnail: str
        """

        self._thumbnail = thumbnail

    @property
    def title_highlighted(self):
        """Gets the title_highlighted of this EpisodeSearchResult.

        Highlighted segment of this episode's title

        :return: The title_highlighted of this EpisodeSearchResult.
        :rtype: str
        """
        return self._title_highlighted

    @title_highlighted.setter
    def title_highlighted(self, title_highlighted):
        """Sets the title_highlighted of this EpisodeSearchResult.

        Highlighted segment of this episode's title

        :param title_highlighted: The title_highlighted of this EpisodeSearchResult.
        :type title_highlighted: str
        """

        self._title_highlighted = title_highlighted

    @property
    def title_original(self):
        """Gets the title_original of this EpisodeSearchResult.

        Plain text of this episode' title

        :return: The title_original of this EpisodeSearchResult.
        :rtype: str
        """
        return self._title_original

    @title_original.setter
    def title_original(self, title_original):
        """Sets the title_original of this EpisodeSearchResult.

        Plain text of this episode' title

        :param title_original: The title_original of this EpisodeSearchResult.
        :type title_original: str
        """

        self._title_original = title_original

    @property
    def transcripts_highlighted(self):
        """Gets the transcripts_highlighted of this EpisodeSearchResult.

        Up to 2 highlighted segments of the audio transcript of this episode.

        :return: The transcripts_highlighted of this EpisodeSearchResult.
        :rtype: List[str]
        """
        return self._transcripts_highlighted

    @transcripts_highlighted.setter
    def transcripts_highlighted(self, transcripts_highlighted):
        """Sets the transcripts_highlighted of this EpisodeSearchResult.

        Up to 2 highlighted segments of the audio transcript of this episode.

        :param transcripts_highlighted: The transcripts_highlighted of this EpisodeSearchResult.
        :type transcripts_highlighted: List[str]
        """

        self._transcripts_highlighted = transcripts_highlighted
