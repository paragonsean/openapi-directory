# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.podcast_simple import PodcastSimple
from openapi_server import util


class PodcastDomainResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, has_next: bool=None, has_previous: bool=None, next_page_number: int=None, page_number: int=None, podcasts: List[PodcastSimple]=None, previous_page_number: int=None):
        """PodcastDomainResponse - a model defined in OpenAPI

        :param has_next: The has_next of this PodcastDomainResponse.
        :param has_previous: The has_previous of this PodcastDomainResponse.
        :param next_page_number: The next_page_number of this PodcastDomainResponse.
        :param page_number: The page_number of this PodcastDomainResponse.
        :param podcasts: The podcasts of this PodcastDomainResponse.
        :param previous_page_number: The previous_page_number of this PodcastDomainResponse.
        """
        self.openapi_types = {
            'has_next': bool,
            'has_previous': bool,
            'next_page_number': int,
            'page_number': int,
            'podcasts': List[PodcastSimple],
            'previous_page_number': int
        }

        self.attribute_map = {
            'has_next': 'has_next',
            'has_previous': 'has_previous',
            'next_page_number': 'next_page_number',
            'page_number': 'page_number',
            'podcasts': 'podcasts',
            'previous_page_number': 'previous_page_number'
        }

        self._has_next = has_next
        self._has_previous = has_previous
        self._next_page_number = next_page_number
        self._page_number = page_number
        self._podcasts = podcasts
        self._previous_page_number = previous_page_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PodcastDomainResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PodcastDomainResponse of this PodcastDomainResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def has_next(self):
        """Gets the has_next of this PodcastDomainResponse.


        :return: The has_next of this PodcastDomainResponse.
        :rtype: bool
        """
        return self._has_next

    @has_next.setter
    def has_next(self, has_next):
        """Sets the has_next of this PodcastDomainResponse.


        :param has_next: The has_next of this PodcastDomainResponse.
        :type has_next: bool
        """

        self._has_next = has_next

    @property
    def has_previous(self):
        """Gets the has_previous of this PodcastDomainResponse.


        :return: The has_previous of this PodcastDomainResponse.
        :rtype: bool
        """
        return self._has_previous

    @has_previous.setter
    def has_previous(self, has_previous):
        """Sets the has_previous of this PodcastDomainResponse.


        :param has_previous: The has_previous of this PodcastDomainResponse.
        :type has_previous: bool
        """

        self._has_previous = has_previous

    @property
    def next_page_number(self):
        """Gets the next_page_number of this PodcastDomainResponse.


        :return: The next_page_number of this PodcastDomainResponse.
        :rtype: int
        """
        return self._next_page_number

    @next_page_number.setter
    def next_page_number(self, next_page_number):
        """Sets the next_page_number of this PodcastDomainResponse.


        :param next_page_number: The next_page_number of this PodcastDomainResponse.
        :type next_page_number: int
        """

        self._next_page_number = next_page_number

    @property
    def page_number(self):
        """Gets the page_number of this PodcastDomainResponse.


        :return: The page_number of this PodcastDomainResponse.
        :rtype: int
        """
        return self._page_number

    @page_number.setter
    def page_number(self, page_number):
        """Sets the page_number of this PodcastDomainResponse.


        :param page_number: The page_number of this PodcastDomainResponse.
        :type page_number: int
        """

        self._page_number = page_number

    @property
    def podcasts(self):
        """Gets the podcasts of this PodcastDomainResponse.


        :return: The podcasts of this PodcastDomainResponse.
        :rtype: List[PodcastSimple]
        """
        return self._podcasts

    @podcasts.setter
    def podcasts(self, podcasts):
        """Sets the podcasts of this PodcastDomainResponse.


        :param podcasts: The podcasts of this PodcastDomainResponse.
        :type podcasts: List[PodcastSimple]
        """

        self._podcasts = podcasts

    @property
    def previous_page_number(self):
        """Gets the previous_page_number of this PodcastDomainResponse.


        :return: The previous_page_number of this PodcastDomainResponse.
        :rtype: int
        """
        return self._previous_page_number

    @previous_page_number.setter
    def previous_page_number(self, previous_page_number):
        """Sets the previous_page_number of this PodcastDomainResponse.


        :param previous_page_number: The previous_page_number of this PodcastDomainResponse.
        :type previous_page_number: int
        """

        self._previous_page_number = previous_page_number
