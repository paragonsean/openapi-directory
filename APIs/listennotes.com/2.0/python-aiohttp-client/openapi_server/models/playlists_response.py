# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.playlists_response_playlists_inner import PlaylistsResponsePlaylistsInner
from openapi_server import util


class PlaylistsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, has_next: bool=None, has_previous: bool=None, next_page_number: int=None, page_number: int=None, playlists: List[PlaylistsResponsePlaylistsInner]=None, previous_page_number: int=None, total: int=None):
        """PlaylistsResponse - a model defined in OpenAPI

        :param has_next: The has_next of this PlaylistsResponse.
        :param has_previous: The has_previous of this PlaylistsResponse.
        :param next_page_number: The next_page_number of this PlaylistsResponse.
        :param page_number: The page_number of this PlaylistsResponse.
        :param playlists: The playlists of this PlaylistsResponse.
        :param previous_page_number: The previous_page_number of this PlaylistsResponse.
        :param total: The total of this PlaylistsResponse.
        """
        self.openapi_types = {
            'has_next': bool,
            'has_previous': bool,
            'next_page_number': int,
            'page_number': int,
            'playlists': List[PlaylistsResponsePlaylistsInner],
            'previous_page_number': int,
            'total': int
        }

        self.attribute_map = {
            'has_next': 'has_next',
            'has_previous': 'has_previous',
            'next_page_number': 'next_page_number',
            'page_number': 'page_number',
            'playlists': 'playlists',
            'previous_page_number': 'previous_page_number',
            'total': 'total'
        }

        self._has_next = has_next
        self._has_previous = has_previous
        self._next_page_number = next_page_number
        self._page_number = page_number
        self._playlists = playlists
        self._previous_page_number = previous_page_number
        self._total = total

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlaylistsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlaylistsResponse of this PlaylistsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def has_next(self):
        """Gets the has_next of this PlaylistsResponse.


        :return: The has_next of this PlaylistsResponse.
        :rtype: bool
        """
        return self._has_next

    @has_next.setter
    def has_next(self, has_next):
        """Sets the has_next of this PlaylistsResponse.


        :param has_next: The has_next of this PlaylistsResponse.
        :type has_next: bool
        """

        self._has_next = has_next

    @property
    def has_previous(self):
        """Gets the has_previous of this PlaylistsResponse.


        :return: The has_previous of this PlaylistsResponse.
        :rtype: bool
        """
        return self._has_previous

    @has_previous.setter
    def has_previous(self, has_previous):
        """Sets the has_previous of this PlaylistsResponse.


        :param has_previous: The has_previous of this PlaylistsResponse.
        :type has_previous: bool
        """

        self._has_previous = has_previous

    @property
    def next_page_number(self):
        """Gets the next_page_number of this PlaylistsResponse.


        :return: The next_page_number of this PlaylistsResponse.
        :rtype: int
        """
        return self._next_page_number

    @next_page_number.setter
    def next_page_number(self, next_page_number):
        """Sets the next_page_number of this PlaylistsResponse.


        :param next_page_number: The next_page_number of this PlaylistsResponse.
        :type next_page_number: int
        """

        self._next_page_number = next_page_number

    @property
    def page_number(self):
        """Gets the page_number of this PlaylistsResponse.


        :return: The page_number of this PlaylistsResponse.
        :rtype: int
        """
        return self._page_number

    @page_number.setter
    def page_number(self, page_number):
        """Sets the page_number of this PlaylistsResponse.


        :param page_number: The page_number of this PlaylistsResponse.
        :type page_number: int
        """

        self._page_number = page_number

    @property
    def playlists(self):
        """Gets the playlists of this PlaylistsResponse.


        :return: The playlists of this PlaylistsResponse.
        :rtype: List[PlaylistsResponsePlaylistsInner]
        """
        return self._playlists

    @playlists.setter
    def playlists(self, playlists):
        """Sets the playlists of this PlaylistsResponse.


        :param playlists: The playlists of this PlaylistsResponse.
        :type playlists: List[PlaylistsResponsePlaylistsInner]
        """

        self._playlists = playlists

    @property
    def previous_page_number(self):
        """Gets the previous_page_number of this PlaylistsResponse.


        :return: The previous_page_number of this PlaylistsResponse.
        :rtype: int
        """
        return self._previous_page_number

    @previous_page_number.setter
    def previous_page_number(self, previous_page_number):
        """Sets the previous_page_number of this PlaylistsResponse.


        :param previous_page_number: The previous_page_number of this PlaylistsResponse.
        :type previous_page_number: int
        """

        self._previous_page_number = previous_page_number

    @property
    def total(self):
        """Gets the total of this PlaylistsResponse.


        :return: The total of this PlaylistsResponse.
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this PlaylistsResponse.


        :param total: The total of this PlaylistsResponse.
        :type total: int
        """

        self._total = total
