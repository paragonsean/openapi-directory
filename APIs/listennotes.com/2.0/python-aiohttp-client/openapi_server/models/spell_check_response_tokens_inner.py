# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SpellCheckResponseTokensInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, offset: int=None, suggestion: str=None, token: str=None):
        """SpellCheckResponseTokensInner - a model defined in OpenAPI

        :param offset: The offset of this SpellCheckResponseTokensInner.
        :param suggestion: The suggestion of this SpellCheckResponseTokensInner.
        :param token: The token of this SpellCheckResponseTokensInner.
        """
        self.openapi_types = {
            'offset': int,
            'suggestion': str,
            'token': str
        }

        self.attribute_map = {
            'offset': 'offset',
            'suggestion': 'suggestion',
            'token': 'token'
        }

        self._offset = offset
        self._suggestion = suggestion
        self._token = token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SpellCheckResponseTokensInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SpellCheckResponse_tokens_inner of this SpellCheckResponseTokensInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def offset(self):
        """Gets the offset of this SpellCheckResponseTokensInner.

        The zero-based offset from the beginning of the text query string to the word that is misspelled

        :return: The offset of this SpellCheckResponseTokensInner.
        :rtype: int
        """
        return self._offset

    @offset.setter
    def offset(self, offset):
        """Sets the offset of this SpellCheckResponseTokensInner.

        The zero-based offset from the beginning of the text query string to the word that is misspelled

        :param offset: The offset of this SpellCheckResponseTokensInner.
        :type offset: int
        """

        self._offset = offset

    @property
    def suggestion(self):
        """Gets the suggestion of this SpellCheckResponseTokensInner.

        A word that corrects the spelling error

        :return: The suggestion of this SpellCheckResponseTokensInner.
        :rtype: str
        """
        return self._suggestion

    @suggestion.setter
    def suggestion(self, suggestion):
        """Sets the suggestion of this SpellCheckResponseTokensInner.

        A word that corrects the spelling error

        :param suggestion: The suggestion of this SpellCheckResponseTokensInner.
        :type suggestion: str
        """

        self._suggestion = suggestion

    @property
    def token(self):
        """Gets the token of this SpellCheckResponseTokensInner.

        The misspelled word

        :return: The token of this SpellCheckResponseTokensInner.
        :rtype: str
        """
        return self._token

    @token.setter
    def token(self, token):
        """Sets the token of this SpellCheckResponseTokensInner.

        The misspelled word

        :param token: The token of this SpellCheckResponseTokensInner.
        :type token: str
        """

        self._token = token
