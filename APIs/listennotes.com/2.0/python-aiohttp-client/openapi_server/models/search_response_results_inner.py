# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.curated_list_search_result import CuratedListSearchResult
from openapi_server.models.episode_search_result import EpisodeSearchResult
from openapi_server.models.episode_search_result_podcast import EpisodeSearchResultPodcast
from openapi_server.models.podcast_minimum import PodcastMinimum
from openapi_server.models.podcast_search_result import PodcastSearchResult
from openapi_server import util


class SearchResponseResultsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, audio: str=None, audio_length_sec: int=None, description_highlighted: str=None, description_original: str=None, explicit_content: bool=None, id: str=None, image: str=None, itunes_id: int=None, link: str=None, listennotes_url: str=None, podcast: EpisodeSearchResultPodcast=None, pub_date_ms: int=None, rss: str=None, thumbnail: str=None, title_highlighted: str=None, title_original: str=None, transcripts_highlighted: List[str]=None, earliest_pub_date_ms: int=None, email: str=None, genre_ids: List[int]=None, latest_episode_id: str=None, latest_pub_date_ms: int=None, listen_score: int=None, listen_score_global_rank: str=None, publisher_highlighted: str=None, publisher_original: str=None, total_episodes: int=None, update_frequency_hours: int=None, website: str=None, podcasts: List[PodcastMinimum]=None, source_domain: str=None, source_url: str=None, total: int=None):
        """SearchResponseResultsInner - a model defined in OpenAPI

        :param audio: The audio of this SearchResponseResultsInner.
        :param audio_length_sec: The audio_length_sec of this SearchResponseResultsInner.
        :param description_highlighted: The description_highlighted of this SearchResponseResultsInner.
        :param description_original: The description_original of this SearchResponseResultsInner.
        :param explicit_content: The explicit_content of this SearchResponseResultsInner.
        :param id: The id of this SearchResponseResultsInner.
        :param image: The image of this SearchResponseResultsInner.
        :param itunes_id: The itunes_id of this SearchResponseResultsInner.
        :param link: The link of this SearchResponseResultsInner.
        :param listennotes_url: The listennotes_url of this SearchResponseResultsInner.
        :param podcast: The podcast of this SearchResponseResultsInner.
        :param pub_date_ms: The pub_date_ms of this SearchResponseResultsInner.
        :param rss: The rss of this SearchResponseResultsInner.
        :param thumbnail: The thumbnail of this SearchResponseResultsInner.
        :param title_highlighted: The title_highlighted of this SearchResponseResultsInner.
        :param title_original: The title_original of this SearchResponseResultsInner.
        :param transcripts_highlighted: The transcripts_highlighted of this SearchResponseResultsInner.
        :param earliest_pub_date_ms: The earliest_pub_date_ms of this SearchResponseResultsInner.
        :param email: The email of this SearchResponseResultsInner.
        :param genre_ids: The genre_ids of this SearchResponseResultsInner.
        :param latest_episode_id: The latest_episode_id of this SearchResponseResultsInner.
        :param latest_pub_date_ms: The latest_pub_date_ms of this SearchResponseResultsInner.
        :param listen_score: The listen_score of this SearchResponseResultsInner.
        :param listen_score_global_rank: The listen_score_global_rank of this SearchResponseResultsInner.
        :param publisher_highlighted: The publisher_highlighted of this SearchResponseResultsInner.
        :param publisher_original: The publisher_original of this SearchResponseResultsInner.
        :param total_episodes: The total_episodes of this SearchResponseResultsInner.
        :param update_frequency_hours: The update_frequency_hours of this SearchResponseResultsInner.
        :param website: The website of this SearchResponseResultsInner.
        :param podcasts: The podcasts of this SearchResponseResultsInner.
        :param source_domain: The source_domain of this SearchResponseResultsInner.
        :param source_url: The source_url of this SearchResponseResultsInner.
        :param total: The total of this SearchResponseResultsInner.
        """
        self.openapi_types = {
            'audio': str,
            'audio_length_sec': int,
            'description_highlighted': str,
            'description_original': str,
            'explicit_content': bool,
            'id': str,
            'image': str,
            'itunes_id': int,
            'link': str,
            'listennotes_url': str,
            'podcast': EpisodeSearchResultPodcast,
            'pub_date_ms': int,
            'rss': str,
            'thumbnail': str,
            'title_highlighted': str,
            'title_original': str,
            'transcripts_highlighted': List[str],
            'earliest_pub_date_ms': int,
            'email': str,
            'genre_ids': List[int],
            'latest_episode_id': str,
            'latest_pub_date_ms': int,
            'listen_score': int,
            'listen_score_global_rank': str,
            'publisher_highlighted': str,
            'publisher_original': str,
            'total_episodes': int,
            'update_frequency_hours': int,
            'website': str,
            'podcasts': List[PodcastMinimum],
            'source_domain': str,
            'source_url': str,
            'total': int
        }

        self.attribute_map = {
            'audio': 'audio',
            'audio_length_sec': 'audio_length_sec',
            'description_highlighted': 'description_highlighted',
            'description_original': 'description_original',
            'explicit_content': 'explicit_content',
            'id': 'id',
            'image': 'image',
            'itunes_id': 'itunes_id',
            'link': 'link',
            'listennotes_url': 'listennotes_url',
            'podcast': 'podcast',
            'pub_date_ms': 'pub_date_ms',
            'rss': 'rss',
            'thumbnail': 'thumbnail',
            'title_highlighted': 'title_highlighted',
            'title_original': 'title_original',
            'transcripts_highlighted': 'transcripts_highlighted',
            'earliest_pub_date_ms': 'earliest_pub_date_ms',
            'email': 'email',
            'genre_ids': 'genre_ids',
            'latest_episode_id': 'latest_episode_id',
            'latest_pub_date_ms': 'latest_pub_date_ms',
            'listen_score': 'listen_score',
            'listen_score_global_rank': 'listen_score_global_rank',
            'publisher_highlighted': 'publisher_highlighted',
            'publisher_original': 'publisher_original',
            'total_episodes': 'total_episodes',
            'update_frequency_hours': 'update_frequency_hours',
            'website': 'website',
            'podcasts': 'podcasts',
            'source_domain': 'source_domain',
            'source_url': 'source_url',
            'total': 'total'
        }

        self._audio = audio
        self._audio_length_sec = audio_length_sec
        self._description_highlighted = description_highlighted
        self._description_original = description_original
        self._explicit_content = explicit_content
        self._id = id
        self._image = image
        self._itunes_id = itunes_id
        self._link = link
        self._listennotes_url = listennotes_url
        self._podcast = podcast
        self._pub_date_ms = pub_date_ms
        self._rss = rss
        self._thumbnail = thumbnail
        self._title_highlighted = title_highlighted
        self._title_original = title_original
        self._transcripts_highlighted = transcripts_highlighted
        self._earliest_pub_date_ms = earliest_pub_date_ms
        self._email = email
        self._genre_ids = genre_ids
        self._latest_episode_id = latest_episode_id
        self._latest_pub_date_ms = latest_pub_date_ms
        self._listen_score = listen_score
        self._listen_score_global_rank = listen_score_global_rank
        self._publisher_highlighted = publisher_highlighted
        self._publisher_original = publisher_original
        self._total_episodes = total_episodes
        self._update_frequency_hours = update_frequency_hours
        self._website = website
        self._podcasts = podcasts
        self._source_domain = source_domain
        self._source_url = source_url
        self._total = total

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchResponseResultsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchResponse_results_inner of this SearchResponseResultsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audio(self):
        """Gets the audio of this SearchResponseResultsInner.

        Audio url of this episode, which can be played directly.

        :return: The audio of this SearchResponseResultsInner.
        :rtype: str
        """
        return self._audio

    @audio.setter
    def audio(self, audio):
        """Sets the audio of this SearchResponseResultsInner.

        Audio url of this episode, which can be played directly.

        :param audio: The audio of this SearchResponseResultsInner.
        :type audio: str
        """

        self._audio = audio

    @property
    def audio_length_sec(self):
        """Gets the audio_length_sec of this SearchResponseResultsInner.

        Average audio length of all episodes of this podcast. In seconds.

        :return: The audio_length_sec of this SearchResponseResultsInner.
        :rtype: int
        """
        return self._audio_length_sec

    @audio_length_sec.setter
    def audio_length_sec(self, audio_length_sec):
        """Sets the audio_length_sec of this SearchResponseResultsInner.

        Average audio length of all episodes of this podcast. In seconds.

        :param audio_length_sec: The audio_length_sec of this SearchResponseResultsInner.
        :type audio_length_sec: int
        """

        self._audio_length_sec = audio_length_sec

    @property
    def description_highlighted(self):
        """Gets the description_highlighted of this SearchResponseResultsInner.

        Highlighted segment of this curated list's description

        :return: The description_highlighted of this SearchResponseResultsInner.
        :rtype: str
        """
        return self._description_highlighted

    @description_highlighted.setter
    def description_highlighted(self, description_highlighted):
        """Sets the description_highlighted of this SearchResponseResultsInner.

        Highlighted segment of this curated list's description

        :param description_highlighted: The description_highlighted of this SearchResponseResultsInner.
        :type description_highlighted: str
        """

        self._description_highlighted = description_highlighted

    @property
    def description_original(self):
        """Gets the description_original of this SearchResponseResultsInner.

        Plain text of this curated list's description

        :return: The description_original of this SearchResponseResultsInner.
        :rtype: str
        """
        return self._description_original

    @description_original.setter
    def description_original(self, description_original):
        """Sets the description_original of this SearchResponseResultsInner.

        Plain text of this curated list's description

        :param description_original: The description_original of this SearchResponseResultsInner.
        :type description_original: str
        """

        self._description_original = description_original

    @property
    def explicit_content(self):
        """Gets the explicit_content of this SearchResponseResultsInner.

        Whether this podcast contains explicit language.

        :return: The explicit_content of this SearchResponseResultsInner.
        :rtype: bool
        """
        return self._explicit_content

    @explicit_content.setter
    def explicit_content(self, explicit_content):
        """Sets the explicit_content of this SearchResponseResultsInner.

        Whether this podcast contains explicit language.

        :param explicit_content: The explicit_content of this SearchResponseResultsInner.
        :type explicit_content: bool
        """

        self._explicit_content = explicit_content

    @property
    def id(self):
        """Gets the id of this SearchResponseResultsInner.

        Curated list id, which can be used to further fetch detailed curated list metadata via `GET /curated_podcasts/{id}`.

        :return: The id of this SearchResponseResultsInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SearchResponseResultsInner.

        Curated list id, which can be used to further fetch detailed curated list metadata via `GET /curated_podcasts/{id}`.

        :param id: The id of this SearchResponseResultsInner.
        :type id: str
        """

        self._id = id

    @property
    def image(self):
        """Gets the image of this SearchResponseResultsInner.

        Image url for this podcast's artwork. If you are using PRO/ENTERPRISE plan, then it's a high resolution image (1400x1400). If you are using FREE plan, then it's the same as **thumbnail**, low resolution image (300x300). 

        :return: The image of this SearchResponseResultsInner.
        :rtype: str
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this SearchResponseResultsInner.

        Image url for this podcast's artwork. If you are using PRO/ENTERPRISE plan, then it's a high resolution image (1400x1400). If you are using FREE plan, then it's the same as **thumbnail**, low resolution image (300x300). 

        :param image: The image of this SearchResponseResultsInner.
        :type image: str
        """

        self._image = image

    @property
    def itunes_id(self):
        """Gets the itunes_id of this SearchResponseResultsInner.

        iTunes id for this podcast.

        :return: The itunes_id of this SearchResponseResultsInner.
        :rtype: int
        """
        return self._itunes_id

    @itunes_id.setter
    def itunes_id(self, itunes_id):
        """Sets the itunes_id of this SearchResponseResultsInner.

        iTunes id for this podcast.

        :param itunes_id: The itunes_id of this SearchResponseResultsInner.
        :type itunes_id: int
        """

        self._itunes_id = itunes_id

    @property
    def link(self):
        """Gets the link of this SearchResponseResultsInner.

        Web link of this episode.

        :return: The link of this SearchResponseResultsInner.
        :rtype: str
        """
        return self._link

    @link.setter
    def link(self, link):
        """Sets the link of this SearchResponseResultsInner.

        Web link of this episode.

        :param link: The link of this SearchResponseResultsInner.
        :type link: str
        """

        self._link = link

    @property
    def listennotes_url(self):
        """Gets the listennotes_url of this SearchResponseResultsInner.

        The url of this curated list on [ListenNotes.com](https://www.ListenNotes.com).

        :return: The listennotes_url of this SearchResponseResultsInner.
        :rtype: str
        """
        return self._listennotes_url

    @listennotes_url.setter
    def listennotes_url(self, listennotes_url):
        """Sets the listennotes_url of this SearchResponseResultsInner.

        The url of this curated list on [ListenNotes.com](https://www.ListenNotes.com).

        :param listennotes_url: The listennotes_url of this SearchResponseResultsInner.
        :type listennotes_url: str
        """

        self._listennotes_url = listennotes_url

    @property
    def podcast(self):
        """Gets the podcast of this SearchResponseResultsInner.


        :return: The podcast of this SearchResponseResultsInner.
        :rtype: EpisodeSearchResultPodcast
        """
        return self._podcast

    @podcast.setter
    def podcast(self, podcast):
        """Sets the podcast of this SearchResponseResultsInner.


        :param podcast: The podcast of this SearchResponseResultsInner.
        :type podcast: EpisodeSearchResultPodcast
        """

        self._podcast = podcast

    @property
    def pub_date_ms(self):
        """Gets the pub_date_ms of this SearchResponseResultsInner.

        Published date of this curated list. In milliseconds.

        :return: The pub_date_ms of this SearchResponseResultsInner.
        :rtype: int
        """
        return self._pub_date_ms

    @pub_date_ms.setter
    def pub_date_ms(self, pub_date_ms):
        """Sets the pub_date_ms of this SearchResponseResultsInner.

        Published date of this curated list. In milliseconds.

        :param pub_date_ms: The pub_date_ms of this SearchResponseResultsInner.
        :type pub_date_ms: int
        """

        self._pub_date_ms = pub_date_ms

    @property
    def rss(self):
        """Gets the rss of this SearchResponseResultsInner.

        RSS url of this podcast. This field is available only in the PRO/ENTERPRISE plan.

        :return: The rss of this SearchResponseResultsInner.
        :rtype: str
        """
        return self._rss

    @rss.setter
    def rss(self, rss):
        """Sets the rss of this SearchResponseResultsInner.

        RSS url of this podcast. This field is available only in the PRO/ENTERPRISE plan.

        :param rss: The rss of this SearchResponseResultsInner.
        :type rss: str
        """

        self._rss = rss

    @property
    def thumbnail(self):
        """Gets the thumbnail of this SearchResponseResultsInner.

        Thumbnail image url for this podcast's artwork (300x300).

        :return: The thumbnail of this SearchResponseResultsInner.
        :rtype: str
        """
        return self._thumbnail

    @thumbnail.setter
    def thumbnail(self, thumbnail):
        """Sets the thumbnail of this SearchResponseResultsInner.

        Thumbnail image url for this podcast's artwork (300x300).

        :param thumbnail: The thumbnail of this SearchResponseResultsInner.
        :type thumbnail: str
        """

        self._thumbnail = thumbnail

    @property
    def title_highlighted(self):
        """Gets the title_highlighted of this SearchResponseResultsInner.

        Highlighted segment of this curated list's title

        :return: The title_highlighted of this SearchResponseResultsInner.
        :rtype: str
        """
        return self._title_highlighted

    @title_highlighted.setter
    def title_highlighted(self, title_highlighted):
        """Sets the title_highlighted of this SearchResponseResultsInner.

        Highlighted segment of this curated list's title

        :param title_highlighted: The title_highlighted of this SearchResponseResultsInner.
        :type title_highlighted: str
        """

        self._title_highlighted = title_highlighted

    @property
    def title_original(self):
        """Gets the title_original of this SearchResponseResultsInner.

        Plain text of this curated list's title

        :return: The title_original of this SearchResponseResultsInner.
        :rtype: str
        """
        return self._title_original

    @title_original.setter
    def title_original(self, title_original):
        """Sets the title_original of this SearchResponseResultsInner.

        Plain text of this curated list's title

        :param title_original: The title_original of this SearchResponseResultsInner.
        :type title_original: str
        """

        self._title_original = title_original

    @property
    def transcripts_highlighted(self):
        """Gets the transcripts_highlighted of this SearchResponseResultsInner.

        Up to 2 highlighted segments of the audio transcript of this episode.

        :return: The transcripts_highlighted of this SearchResponseResultsInner.
        :rtype: List[str]
        """
        return self._transcripts_highlighted

    @transcripts_highlighted.setter
    def transcripts_highlighted(self, transcripts_highlighted):
        """Sets the transcripts_highlighted of this SearchResponseResultsInner.

        Up to 2 highlighted segments of the audio transcript of this episode.

        :param transcripts_highlighted: The transcripts_highlighted of this SearchResponseResultsInner.
        :type transcripts_highlighted: List[str]
        """

        self._transcripts_highlighted = transcripts_highlighted

    @property
    def earliest_pub_date_ms(self):
        """Gets the earliest_pub_date_ms of this SearchResponseResultsInner.

        The published date of the oldest episode of this podcast. In milliseconds

        :return: The earliest_pub_date_ms of this SearchResponseResultsInner.
        :rtype: int
        """
        return self._earliest_pub_date_ms

    @earliest_pub_date_ms.setter
    def earliest_pub_date_ms(self, earliest_pub_date_ms):
        """Sets the earliest_pub_date_ms of this SearchResponseResultsInner.

        The published date of the oldest episode of this podcast. In milliseconds

        :param earliest_pub_date_ms: The earliest_pub_date_ms of this SearchResponseResultsInner.
        :type earliest_pub_date_ms: int
        """

        self._earliest_pub_date_ms = earliest_pub_date_ms

    @property
    def email(self):
        """Gets the email of this SearchResponseResultsInner.

        The email of this podcast's producer. This field is available only in the PRO/ENTERPRISE plan.

        :return: The email of this SearchResponseResultsInner.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this SearchResponseResultsInner.

        The email of this podcast's producer. This field is available only in the PRO/ENTERPRISE plan.

        :param email: The email of this SearchResponseResultsInner.
        :type email: str
        """

        self._email = email

    @property
    def genre_ids(self):
        """Gets the genre_ids of this SearchResponseResultsInner.


        :return: The genre_ids of this SearchResponseResultsInner.
        :rtype: List[int]
        """
        return self._genre_ids

    @genre_ids.setter
    def genre_ids(self, genre_ids):
        """Sets the genre_ids of this SearchResponseResultsInner.


        :param genre_ids: The genre_ids of this SearchResponseResultsInner.
        :type genre_ids: List[int]
        """

        self._genre_ids = genre_ids

    @property
    def latest_episode_id(self):
        """Gets the latest_episode_id of this SearchResponseResultsInner.

        The id of the most recently published episode of this podcast, which can be used to further fetch detailed episode metadata via `GET /episodes/{id}`.

        :return: The latest_episode_id of this SearchResponseResultsInner.
        :rtype: str
        """
        return self._latest_episode_id

    @latest_episode_id.setter
    def latest_episode_id(self, latest_episode_id):
        """Sets the latest_episode_id of this SearchResponseResultsInner.

        The id of the most recently published episode of this podcast, which can be used to further fetch detailed episode metadata via `GET /episodes/{id}`.

        :param latest_episode_id: The latest_episode_id of this SearchResponseResultsInner.
        :type latest_episode_id: str
        """

        self._latest_episode_id = latest_episode_id

    @property
    def latest_pub_date_ms(self):
        """Gets the latest_pub_date_ms of this SearchResponseResultsInner.

        The published date of the latest episode of this podcast. In milliseconds

        :return: The latest_pub_date_ms of this SearchResponseResultsInner.
        :rtype: int
        """
        return self._latest_pub_date_ms

    @latest_pub_date_ms.setter
    def latest_pub_date_ms(self, latest_pub_date_ms):
        """Sets the latest_pub_date_ms of this SearchResponseResultsInner.

        The published date of the latest episode of this podcast. In milliseconds

        :param latest_pub_date_ms: The latest_pub_date_ms of this SearchResponseResultsInner.
        :type latest_pub_date_ms: int
        """

        self._latest_pub_date_ms = latest_pub_date_ms

    @property
    def listen_score(self):
        """Gets the listen_score of this SearchResponseResultsInner.

        The estimated popularity score of a podcast compared to all other rss-based public podcasts in the world on a scale from 0 to 100. If the score is not available, it'll be null. Learn more at listennotes.com/listen-score 

        :return: The listen_score of this SearchResponseResultsInner.
        :rtype: int
        """
        return self._listen_score

    @listen_score.setter
    def listen_score(self, listen_score):
        """Sets the listen_score of this SearchResponseResultsInner.

        The estimated popularity score of a podcast compared to all other rss-based public podcasts in the world on a scale from 0 to 100. If the score is not available, it'll be null. Learn more at listennotes.com/listen-score 

        :param listen_score: The listen_score of this SearchResponseResultsInner.
        :type listen_score: int
        """

        self._listen_score = listen_score

    @property
    def listen_score_global_rank(self):
        """Gets the listen_score_global_rank of this SearchResponseResultsInner.

        The estimated popularity ranking of a podcast compared to all other rss-based public podcasts in the world. For example, if the value is 0.5%, then this podcast is one of the top 0.5% most popular shows out of all podcasts globally, ranked by Listen Score. If the ranking is not available, it'll be null. Learn more at listennotes.com/listen-score 

        :return: The listen_score_global_rank of this SearchResponseResultsInner.
        :rtype: str
        """
        return self._listen_score_global_rank

    @listen_score_global_rank.setter
    def listen_score_global_rank(self, listen_score_global_rank):
        """Sets the listen_score_global_rank of this SearchResponseResultsInner.

        The estimated popularity ranking of a podcast compared to all other rss-based public podcasts in the world. For example, if the value is 0.5%, then this podcast is one of the top 0.5% most popular shows out of all podcasts globally, ranked by Listen Score. If the ranking is not available, it'll be null. Learn more at listennotes.com/listen-score 

        :param listen_score_global_rank: The listen_score_global_rank of this SearchResponseResultsInner.
        :type listen_score_global_rank: str
        """

        self._listen_score_global_rank = listen_score_global_rank

    @property
    def publisher_highlighted(self):
        """Gets the publisher_highlighted of this SearchResponseResultsInner.

        Highlighted segment of this podcast's publisher name.

        :return: The publisher_highlighted of this SearchResponseResultsInner.
        :rtype: str
        """
        return self._publisher_highlighted

    @publisher_highlighted.setter
    def publisher_highlighted(self, publisher_highlighted):
        """Sets the publisher_highlighted of this SearchResponseResultsInner.

        Highlighted segment of this podcast's publisher name.

        :param publisher_highlighted: The publisher_highlighted of this SearchResponseResultsInner.
        :type publisher_highlighted: str
        """

        self._publisher_highlighted = publisher_highlighted

    @property
    def publisher_original(self):
        """Gets the publisher_original of this SearchResponseResultsInner.

        Plain text of this podcast's publisher name.

        :return: The publisher_original of this SearchResponseResultsInner.
        :rtype: str
        """
        return self._publisher_original

    @publisher_original.setter
    def publisher_original(self, publisher_original):
        """Sets the publisher_original of this SearchResponseResultsInner.

        Plain text of this podcast's publisher name.

        :param publisher_original: The publisher_original of this SearchResponseResultsInner.
        :type publisher_original: str
        """

        self._publisher_original = publisher_original

    @property
    def total_episodes(self):
        """Gets the total_episodes of this SearchResponseResultsInner.

        Total number of episodes in this podcast.

        :return: The total_episodes of this SearchResponseResultsInner.
        :rtype: int
        """
        return self._total_episodes

    @total_episodes.setter
    def total_episodes(self, total_episodes):
        """Sets the total_episodes of this SearchResponseResultsInner.

        Total number of episodes in this podcast.

        :param total_episodes: The total_episodes of this SearchResponseResultsInner.
        :type total_episodes: int
        """

        self._total_episodes = total_episodes

    @property
    def update_frequency_hours(self):
        """Gets the update_frequency_hours of this SearchResponseResultsInner.

        How frequently does this podcast release a new episode? In hours. For example, if the value is 166, then it's every 166 hours (or weekly).

        :return: The update_frequency_hours of this SearchResponseResultsInner.
        :rtype: int
        """
        return self._update_frequency_hours

    @update_frequency_hours.setter
    def update_frequency_hours(self, update_frequency_hours):
        """Sets the update_frequency_hours of this SearchResponseResultsInner.

        How frequently does this podcast release a new episode? In hours. For example, if the value is 166, then it's every 166 hours (or weekly).

        :param update_frequency_hours: The update_frequency_hours of this SearchResponseResultsInner.
        :type update_frequency_hours: int
        """

        self._update_frequency_hours = update_frequency_hours

    @property
    def website(self):
        """Gets the website of this SearchResponseResultsInner.

        Website url of this podcast.

        :return: The website of this SearchResponseResultsInner.
        :rtype: str
        """
        return self._website

    @website.setter
    def website(self, website):
        """Sets the website of this SearchResponseResultsInner.

        Website url of this podcast.

        :param website: The website of this SearchResponseResultsInner.
        :type website: str
        """

        self._website = website

    @property
    def podcasts(self):
        """Gets the podcasts of this SearchResponseResultsInner.

        Up to 5 podcasts in this curated list.

        :return: The podcasts of this SearchResponseResultsInner.
        :rtype: List[PodcastMinimum]
        """
        return self._podcasts

    @podcasts.setter
    def podcasts(self, podcasts):
        """Sets the podcasts of this SearchResponseResultsInner.

        Up to 5 podcasts in this curated list.

        :param podcasts: The podcasts of this SearchResponseResultsInner.
        :type podcasts: List[PodcastMinimum]
        """

        self._podcasts = podcasts

    @property
    def source_domain(self):
        """Gets the source_domain of this SearchResponseResultsInner.

        The domain name of the source of this curated list.

        :return: The source_domain of this SearchResponseResultsInner.
        :rtype: str
        """
        return self._source_domain

    @source_domain.setter
    def source_domain(self, source_domain):
        """Sets the source_domain of this SearchResponseResultsInner.

        The domain name of the source of this curated list.

        :param source_domain: The source_domain of this SearchResponseResultsInner.
        :type source_domain: str
        """

        self._source_domain = source_domain

    @property
    def source_url(self):
        """Gets the source_url of this SearchResponseResultsInner.

        Url of the source of this curated list.

        :return: The source_url of this SearchResponseResultsInner.
        :rtype: str
        """
        return self._source_url

    @source_url.setter
    def source_url(self, source_url):
        """Sets the source_url of this SearchResponseResultsInner.

        Url of the source of this curated list.

        :param source_url: The source_url of this SearchResponseResultsInner.
        :type source_url: str
        """

        self._source_url = source_url

    @property
    def total(self):
        """Gets the total of this SearchResponseResultsInner.

        The total number of podcasts in this curated list.

        :return: The total of this SearchResponseResultsInner.
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this SearchResponseResultsInner.

        The total number of podcasts in this curated list.

        :param total: The total of this SearchResponseResultsInner.
        :type total: int
        """

        self._total = total
