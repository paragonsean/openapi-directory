/*
 * Listen API: Podcast Search, Directory, and Insights API
 * Simple & no-nonsense podcast search & directory API. Search all podcasts and episodes by people, places, or topics. 
 *
 * The version of the OpenAPI document: 2.0
 * Contact: hello@listennotes.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import org.openapitools.client.model.RelatedSearchesResponse;
import org.openapitools.client.model.SearchResponse;
import org.openapitools.client.model.SpellCheckResponse;
import org.openapitools.client.model.TrendingSearchesResponse;
import org.openapitools.client.model.TypeaheadResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SearchApiApi
 */
@Disabled
public class SearchApiApiTest {

    private final SearchApiApi api = new SearchApiApi();

    /**
     * Fetch related search terms
     *
     * Suggest related search terms. The results are more comprehensive than from &#x60;GET /typeahead&#x60;. This endpoint is available only in the PRO/ENTERPRISE plan.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRelatedSearchesTest() throws ApiException {
        String xListenAPIKey = null;
        String q = null;
        RelatedSearchesResponse response = api.getRelatedSearches(xListenAPIKey, q);
        // TODO: test validations
    }

    /**
     * Fetch trending search terms
     *
     * Fetch up to 10 most recent trending search terms on the Listen Notes platform.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTrendingSearchesTest() throws ApiException {
        String xListenAPIKey = null;
        TrendingSearchesResponse response = api.getTrendingSearches(xListenAPIKey);
        // TODO: test validations
    }

    /**
     * Full-text search
     *
     * Full-text search on episodes, podcasts, or curated lists of podcasts. Use the &#x60;offset&#x60; parameter to paginate through search results. The FREE plan allows to see up to 30 search results (or &#x60;offset&#x60; &lt; 30) per query. The PRO plan allows to see up to 300 search results (or &#x60;offset&#x60; &lt; 300) per query. The ENTERPRISE plan allows to see up to 10,000 search results (or &#x60;offset&#x60; &lt; 10000) per query. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchTest() throws ApiException {
        String xListenAPIKey = null;
        String q = null;
        Integer sortByDate = null;
        String type = null;
        Integer offset = null;
        Integer lenMin = null;
        Integer lenMax = null;
        Integer episodeCountMin = null;
        Integer episodeCountMax = null;
        Integer updateFreqMin = null;
        Integer updateFreqMax = null;
        String genreIds = null;
        Integer publishedBefore = null;
        Integer publishedAfter = null;
        String onlyIn = null;
        String language = null;
        String region = null;
        String ocid = null;
        String ncid = null;
        Integer safeMode = null;
        Integer uniquePodcasts = null;
        Integer pageSize = null;
        SearchResponse response = api.search(xListenAPIKey, q, sortByDate, type, offset, lenMin, lenMax, episodeCountMin, episodeCountMax, updateFreqMin, updateFreqMax, genreIds, publishedBefore, publishedAfter, onlyIn, language, region, ocid, ncid, safeMode, uniquePodcasts, pageSize);
        // TODO: test validations
    }

    /**
     * Spell check on a search term
     *
     * Suggest a list of words that correct the spelling errors of a search term. This endpoint is available only in the PRO/ENTERPRISE plan.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void spellcheckTest() throws ApiException {
        String xListenAPIKey = null;
        String q = null;
        SpellCheckResponse response = api.spellcheck(xListenAPIKey, q);
        // TODO: test validations
    }

    /**
     * Typeahead search
     *
     * Suggest search terms, podcast genres, and podcasts.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void typeaheadTest() throws ApiException {
        String xListenAPIKey = null;
        String q = null;
        Integer showPodcasts = null;
        Integer showGenres = null;
        Integer safeMode = null;
        TypeaheadResponse response = api.typeahead(xListenAPIKey, q, showPodcasts, showGenres, safeMode);
        // TODO: test validations
    }

}
