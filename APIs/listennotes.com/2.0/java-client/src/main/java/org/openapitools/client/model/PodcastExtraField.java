/*
 * Listen API: Podcast Search, Directory, and Insights API
 * Simple & no-nonsense podcast search & directory API. Search all podcasts and episodes by people, places, or topics. 
 *
 * The version of the OpenAPI document: 2.0
 * Contact: hello@listennotes.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PodcastExtraField
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:58:39.439950-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PodcastExtraField {
  public static final String SERIALIZED_NAME_AMAZON_MUSIC_URL = "amazon_music_url";
  @SerializedName(SERIALIZED_NAME_AMAZON_MUSIC_URL)
  private String amazonMusicUrl;

  public static final String SERIALIZED_NAME_FACEBOOK_HANDLE = "facebook_handle";
  @SerializedName(SERIALIZED_NAME_FACEBOOK_HANDLE)
  private String facebookHandle;

  public static final String SERIALIZED_NAME_GOOGLE_URL = "google_url";
  @SerializedName(SERIALIZED_NAME_GOOGLE_URL)
  private String googleUrl;

  public static final String SERIALIZED_NAME_INSTAGRAM_HANDLE = "instagram_handle";
  @SerializedName(SERIALIZED_NAME_INSTAGRAM_HANDLE)
  private String instagramHandle;

  public static final String SERIALIZED_NAME_LINKEDIN_URL = "linkedin_url";
  @SerializedName(SERIALIZED_NAME_LINKEDIN_URL)
  private String linkedinUrl;

  public static final String SERIALIZED_NAME_PATREON_HANDLE = "patreon_handle";
  @SerializedName(SERIALIZED_NAME_PATREON_HANDLE)
  private String patreonHandle;

  public static final String SERIALIZED_NAME_SPOTIFY_URL = "spotify_url";
  @SerializedName(SERIALIZED_NAME_SPOTIFY_URL)
  private String spotifyUrl;

  public static final String SERIALIZED_NAME_TWITTER_HANDLE = "twitter_handle";
  @SerializedName(SERIALIZED_NAME_TWITTER_HANDLE)
  private String twitterHandle;

  public static final String SERIALIZED_NAME_URL1 = "url1";
  @SerializedName(SERIALIZED_NAME_URL1)
  private String url1;

  public static final String SERIALIZED_NAME_URL2 = "url2";
  @SerializedName(SERIALIZED_NAME_URL2)
  private String url2;

  public static final String SERIALIZED_NAME_URL3 = "url3";
  @SerializedName(SERIALIZED_NAME_URL3)
  private String url3;

  public static final String SERIALIZED_NAME_WECHAT_HANDLE = "wechat_handle";
  @SerializedName(SERIALIZED_NAME_WECHAT_HANDLE)
  private String wechatHandle;

  public static final String SERIALIZED_NAME_YOUTUBE_URL = "youtube_url";
  @SerializedName(SERIALIZED_NAME_YOUTUBE_URL)
  private String youtubeUrl;

  public PodcastExtraField() {
  }

  public PodcastExtraField amazonMusicUrl(String amazonMusicUrl) {
    this.amazonMusicUrl = amazonMusicUrl;
    return this;
  }

  /**
   * Amazon Music url for this podcast
   * @return amazonMusicUrl
   */
  @javax.annotation.Nullable
  public String getAmazonMusicUrl() {
    return amazonMusicUrl;
  }

  public void setAmazonMusicUrl(String amazonMusicUrl) {
    this.amazonMusicUrl = amazonMusicUrl;
  }


  public PodcastExtraField facebookHandle(String facebookHandle) {
    this.facebookHandle = facebookHandle;
    return this;
  }

  /**
   * Facebook username affiliated with this podcast
   * @return facebookHandle
   */
  @javax.annotation.Nullable
  public String getFacebookHandle() {
    return facebookHandle;
  }

  public void setFacebookHandle(String facebookHandle) {
    this.facebookHandle = facebookHandle;
  }


  public PodcastExtraField googleUrl(String googleUrl) {
    this.googleUrl = googleUrl;
    return this;
  }

  /**
   * Google Podcasts url for this podcast
   * @return googleUrl
   */
  @javax.annotation.Nullable
  public String getGoogleUrl() {
    return googleUrl;
  }

  public void setGoogleUrl(String googleUrl) {
    this.googleUrl = googleUrl;
  }


  public PodcastExtraField instagramHandle(String instagramHandle) {
    this.instagramHandle = instagramHandle;
    return this;
  }

  /**
   * Instagram username affiliated with this podcast
   * @return instagramHandle
   */
  @javax.annotation.Nullable
  public String getInstagramHandle() {
    return instagramHandle;
  }

  public void setInstagramHandle(String instagramHandle) {
    this.instagramHandle = instagramHandle;
  }


  public PodcastExtraField linkedinUrl(String linkedinUrl) {
    this.linkedinUrl = linkedinUrl;
    return this;
  }

  /**
   * LinkedIn url affiliated with this podcast
   * @return linkedinUrl
   */
  @javax.annotation.Nullable
  public String getLinkedinUrl() {
    return linkedinUrl;
  }

  public void setLinkedinUrl(String linkedinUrl) {
    this.linkedinUrl = linkedinUrl;
  }


  public PodcastExtraField patreonHandle(String patreonHandle) {
    this.patreonHandle = patreonHandle;
    return this;
  }

  /**
   * Patreon username affiliated with this podcast
   * @return patreonHandle
   */
  @javax.annotation.Nullable
  public String getPatreonHandle() {
    return patreonHandle;
  }

  public void setPatreonHandle(String patreonHandle) {
    this.patreonHandle = patreonHandle;
  }


  public PodcastExtraField spotifyUrl(String spotifyUrl) {
    this.spotifyUrl = spotifyUrl;
    return this;
  }

  /**
   * Spotify url for this podcast
   * @return spotifyUrl
   */
  @javax.annotation.Nullable
  public String getSpotifyUrl() {
    return spotifyUrl;
  }

  public void setSpotifyUrl(String spotifyUrl) {
    this.spotifyUrl = spotifyUrl;
  }


  public PodcastExtraField twitterHandle(String twitterHandle) {
    this.twitterHandle = twitterHandle;
    return this;
  }

  /**
   * Twitter username affiliated with this podcast
   * @return twitterHandle
   */
  @javax.annotation.Nullable
  public String getTwitterHandle() {
    return twitterHandle;
  }

  public void setTwitterHandle(String twitterHandle) {
    this.twitterHandle = twitterHandle;
  }


  public PodcastExtraField url1(String url1) {
    this.url1 = url1;
    return this;
  }

  /**
   * Url affiliated with this podcast
   * @return url1
   */
  @javax.annotation.Nullable
  public String getUrl1() {
    return url1;
  }

  public void setUrl1(String url1) {
    this.url1 = url1;
  }


  public PodcastExtraField url2(String url2) {
    this.url2 = url2;
    return this;
  }

  /**
   * Url affiliated with this podcast
   * @return url2
   */
  @javax.annotation.Nullable
  public String getUrl2() {
    return url2;
  }

  public void setUrl2(String url2) {
    this.url2 = url2;
  }


  public PodcastExtraField url3(String url3) {
    this.url3 = url3;
    return this;
  }

  /**
   * Url affiliated with this podcast
   * @return url3
   */
  @javax.annotation.Nullable
  public String getUrl3() {
    return url3;
  }

  public void setUrl3(String url3) {
    this.url3 = url3;
  }


  public PodcastExtraField wechatHandle(String wechatHandle) {
    this.wechatHandle = wechatHandle;
    return this;
  }

  /**
   * WeChat username affiliated with this podcast
   * @return wechatHandle
   */
  @javax.annotation.Nullable
  public String getWechatHandle() {
    return wechatHandle;
  }

  public void setWechatHandle(String wechatHandle) {
    this.wechatHandle = wechatHandle;
  }


  public PodcastExtraField youtubeUrl(String youtubeUrl) {
    this.youtubeUrl = youtubeUrl;
    return this;
  }

  /**
   * YouTube url affiliated with this podcast
   * @return youtubeUrl
   */
  @javax.annotation.Nullable
  public String getYoutubeUrl() {
    return youtubeUrl;
  }

  public void setYoutubeUrl(String youtubeUrl) {
    this.youtubeUrl = youtubeUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PodcastExtraField podcastExtraField = (PodcastExtraField) o;
    return Objects.equals(this.amazonMusicUrl, podcastExtraField.amazonMusicUrl) &&
        Objects.equals(this.facebookHandle, podcastExtraField.facebookHandle) &&
        Objects.equals(this.googleUrl, podcastExtraField.googleUrl) &&
        Objects.equals(this.instagramHandle, podcastExtraField.instagramHandle) &&
        Objects.equals(this.linkedinUrl, podcastExtraField.linkedinUrl) &&
        Objects.equals(this.patreonHandle, podcastExtraField.patreonHandle) &&
        Objects.equals(this.spotifyUrl, podcastExtraField.spotifyUrl) &&
        Objects.equals(this.twitterHandle, podcastExtraField.twitterHandle) &&
        Objects.equals(this.url1, podcastExtraField.url1) &&
        Objects.equals(this.url2, podcastExtraField.url2) &&
        Objects.equals(this.url3, podcastExtraField.url3) &&
        Objects.equals(this.wechatHandle, podcastExtraField.wechatHandle) &&
        Objects.equals(this.youtubeUrl, podcastExtraField.youtubeUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amazonMusicUrl, facebookHandle, googleUrl, instagramHandle, linkedinUrl, patreonHandle, spotifyUrl, twitterHandle, url1, url2, url3, wechatHandle, youtubeUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PodcastExtraField {\n");
    sb.append("    amazonMusicUrl: ").append(toIndentedString(amazonMusicUrl)).append("\n");
    sb.append("    facebookHandle: ").append(toIndentedString(facebookHandle)).append("\n");
    sb.append("    googleUrl: ").append(toIndentedString(googleUrl)).append("\n");
    sb.append("    instagramHandle: ").append(toIndentedString(instagramHandle)).append("\n");
    sb.append("    linkedinUrl: ").append(toIndentedString(linkedinUrl)).append("\n");
    sb.append("    patreonHandle: ").append(toIndentedString(patreonHandle)).append("\n");
    sb.append("    spotifyUrl: ").append(toIndentedString(spotifyUrl)).append("\n");
    sb.append("    twitterHandle: ").append(toIndentedString(twitterHandle)).append("\n");
    sb.append("    url1: ").append(toIndentedString(url1)).append("\n");
    sb.append("    url2: ").append(toIndentedString(url2)).append("\n");
    sb.append("    url3: ").append(toIndentedString(url3)).append("\n");
    sb.append("    wechatHandle: ").append(toIndentedString(wechatHandle)).append("\n");
    sb.append("    youtubeUrl: ").append(toIndentedString(youtubeUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("amazon_music_url");
    openapiFields.add("facebook_handle");
    openapiFields.add("google_url");
    openapiFields.add("instagram_handle");
    openapiFields.add("linkedin_url");
    openapiFields.add("patreon_handle");
    openapiFields.add("spotify_url");
    openapiFields.add("twitter_handle");
    openapiFields.add("url1");
    openapiFields.add("url2");
    openapiFields.add("url3");
    openapiFields.add("wechat_handle");
    openapiFields.add("youtube_url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PodcastExtraField
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PodcastExtraField.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PodcastExtraField is not found in the empty JSON string", PodcastExtraField.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PodcastExtraField.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PodcastExtraField` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("amazon_music_url") != null && !jsonObj.get("amazon_music_url").isJsonNull()) && !jsonObj.get("amazon_music_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amazon_music_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amazon_music_url").toString()));
      }
      if ((jsonObj.get("facebook_handle") != null && !jsonObj.get("facebook_handle").isJsonNull()) && !jsonObj.get("facebook_handle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `facebook_handle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("facebook_handle").toString()));
      }
      if ((jsonObj.get("google_url") != null && !jsonObj.get("google_url").isJsonNull()) && !jsonObj.get("google_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `google_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("google_url").toString()));
      }
      if ((jsonObj.get("instagram_handle") != null && !jsonObj.get("instagram_handle").isJsonNull()) && !jsonObj.get("instagram_handle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `instagram_handle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("instagram_handle").toString()));
      }
      if ((jsonObj.get("linkedin_url") != null && !jsonObj.get("linkedin_url").isJsonNull()) && !jsonObj.get("linkedin_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `linkedin_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("linkedin_url").toString()));
      }
      if ((jsonObj.get("patreon_handle") != null && !jsonObj.get("patreon_handle").isJsonNull()) && !jsonObj.get("patreon_handle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `patreon_handle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("patreon_handle").toString()));
      }
      if ((jsonObj.get("spotify_url") != null && !jsonObj.get("spotify_url").isJsonNull()) && !jsonObj.get("spotify_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `spotify_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("spotify_url").toString()));
      }
      if ((jsonObj.get("twitter_handle") != null && !jsonObj.get("twitter_handle").isJsonNull()) && !jsonObj.get("twitter_handle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `twitter_handle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("twitter_handle").toString()));
      }
      if ((jsonObj.get("url1") != null && !jsonObj.get("url1").isJsonNull()) && !jsonObj.get("url1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url1").toString()));
      }
      if ((jsonObj.get("url2") != null && !jsonObj.get("url2").isJsonNull()) && !jsonObj.get("url2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url2").toString()));
      }
      if ((jsonObj.get("url3") != null && !jsonObj.get("url3").isJsonNull()) && !jsonObj.get("url3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url3").toString()));
      }
      if ((jsonObj.get("wechat_handle") != null && !jsonObj.get("wechat_handle").isJsonNull()) && !jsonObj.get("wechat_handle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `wechat_handle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wechat_handle").toString()));
      }
      if ((jsonObj.get("youtube_url") != null && !jsonObj.get("youtube_url").isJsonNull()) && !jsonObj.get("youtube_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `youtube_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("youtube_url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PodcastExtraField.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PodcastExtraField' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PodcastExtraField> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PodcastExtraField.class));

       return (TypeAdapter<T>) new TypeAdapter<PodcastExtraField>() {
           @Override
           public void write(JsonWriter out, PodcastExtraField value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PodcastExtraField read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PodcastExtraField given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PodcastExtraField
   * @throws IOException if the JSON string is invalid with respect to PodcastExtraField
   */
  public static PodcastExtraField fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PodcastExtraField.class);
  }

  /**
   * Convert an instance of PodcastExtraField to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

