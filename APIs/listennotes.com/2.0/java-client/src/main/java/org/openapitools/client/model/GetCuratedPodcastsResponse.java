/*
 * Listen API: Podcast Search, Directory, and Insights API
 * Simple & no-nonsense podcast search & directory API. Search all podcasts and episodes by people, places, or topics. 
 *
 * The version of the OpenAPI document: 2.0
 * Contact: hello@listennotes.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CuratedListSimple;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetCuratedPodcastsResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:58:39.439950-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetCuratedPodcastsResponse {
  public static final String SERIALIZED_NAME_CURATED_LISTS = "curated_lists";
  @SerializedName(SERIALIZED_NAME_CURATED_LISTS)
  private List<CuratedListSimple> curatedLists = new ArrayList<>();

  public static final String SERIALIZED_NAME_HAS_NEXT = "has_next";
  @SerializedName(SERIALIZED_NAME_HAS_NEXT)
  private Boolean hasNext;

  public static final String SERIALIZED_NAME_HAS_PREVIOUS = "has_previous";
  @SerializedName(SERIALIZED_NAME_HAS_PREVIOUS)
  private Boolean hasPrevious;

  public static final String SERIALIZED_NAME_NEXT_PAGE_NUMBER = "next_page_number";
  @SerializedName(SERIALIZED_NAME_NEXT_PAGE_NUMBER)
  private Integer nextPageNumber;

  public static final String SERIALIZED_NAME_PAGE_NUMBER = "page_number";
  @SerializedName(SERIALIZED_NAME_PAGE_NUMBER)
  private Integer pageNumber;

  public static final String SERIALIZED_NAME_PREVIOUS_PAGE_NUMBER = "previous_page_number";
  @SerializedName(SERIALIZED_NAME_PREVIOUS_PAGE_NUMBER)
  private Integer previousPageNumber;

  public static final String SERIALIZED_NAME_TOTAL = "total";
  @SerializedName(SERIALIZED_NAME_TOTAL)
  private Integer total;

  public GetCuratedPodcastsResponse() {
  }

  public GetCuratedPodcastsResponse curatedLists(List<CuratedListSimple> curatedLists) {
    this.curatedLists = curatedLists;
    return this;
  }

  public GetCuratedPodcastsResponse addCuratedListsItem(CuratedListSimple curatedListsItem) {
    if (this.curatedLists == null) {
      this.curatedLists = new ArrayList<>();
    }
    this.curatedLists.add(curatedListsItem);
    return this;
  }

  /**
   * Get curatedLists
   * @return curatedLists
   */
  @javax.annotation.Nonnull
  public List<CuratedListSimple> getCuratedLists() {
    return curatedLists;
  }

  public void setCuratedLists(List<CuratedListSimple> curatedLists) {
    this.curatedLists = curatedLists;
  }


  public GetCuratedPodcastsResponse hasNext(Boolean hasNext) {
    this.hasNext = hasNext;
    return this;
  }

  /**
   * Get hasNext
   * @return hasNext
   */
  @javax.annotation.Nonnull
  public Boolean getHasNext() {
    return hasNext;
  }

  public void setHasNext(Boolean hasNext) {
    this.hasNext = hasNext;
  }


  public GetCuratedPodcastsResponse hasPrevious(Boolean hasPrevious) {
    this.hasPrevious = hasPrevious;
    return this;
  }

  /**
   * Get hasPrevious
   * @return hasPrevious
   */
  @javax.annotation.Nonnull
  public Boolean getHasPrevious() {
    return hasPrevious;
  }

  public void setHasPrevious(Boolean hasPrevious) {
    this.hasPrevious = hasPrevious;
  }


  public GetCuratedPodcastsResponse nextPageNumber(Integer nextPageNumber) {
    this.nextPageNumber = nextPageNumber;
    return this;
  }

  /**
   * Get nextPageNumber
   * @return nextPageNumber
   */
  @javax.annotation.Nonnull
  public Integer getNextPageNumber() {
    return nextPageNumber;
  }

  public void setNextPageNumber(Integer nextPageNumber) {
    this.nextPageNumber = nextPageNumber;
  }


  public GetCuratedPodcastsResponse pageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

  /**
   * Get pageNumber
   * @return pageNumber
   */
  @javax.annotation.Nonnull
  public Integer getPageNumber() {
    return pageNumber;
  }

  public void setPageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
  }


  public GetCuratedPodcastsResponse previousPageNumber(Integer previousPageNumber) {
    this.previousPageNumber = previousPageNumber;
    return this;
  }

  /**
   * Get previousPageNumber
   * @return previousPageNumber
   */
  @javax.annotation.Nonnull
  public Integer getPreviousPageNumber() {
    return previousPageNumber;
  }

  public void setPreviousPageNumber(Integer previousPageNumber) {
    this.previousPageNumber = previousPageNumber;
  }


  public GetCuratedPodcastsResponse total(Integer total) {
    this.total = total;
    return this;
  }

  /**
   * Get total
   * @return total
   */
  @javax.annotation.Nonnull
  public Integer getTotal() {
    return total;
  }

  public void setTotal(Integer total) {
    this.total = total;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetCuratedPodcastsResponse getCuratedPodcastsResponse = (GetCuratedPodcastsResponse) o;
    return Objects.equals(this.curatedLists, getCuratedPodcastsResponse.curatedLists) &&
        Objects.equals(this.hasNext, getCuratedPodcastsResponse.hasNext) &&
        Objects.equals(this.hasPrevious, getCuratedPodcastsResponse.hasPrevious) &&
        Objects.equals(this.nextPageNumber, getCuratedPodcastsResponse.nextPageNumber) &&
        Objects.equals(this.pageNumber, getCuratedPodcastsResponse.pageNumber) &&
        Objects.equals(this.previousPageNumber, getCuratedPodcastsResponse.previousPageNumber) &&
        Objects.equals(this.total, getCuratedPodcastsResponse.total);
  }

  @Override
  public int hashCode() {
    return Objects.hash(curatedLists, hasNext, hasPrevious, nextPageNumber, pageNumber, previousPageNumber, total);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetCuratedPodcastsResponse {\n");
    sb.append("    curatedLists: ").append(toIndentedString(curatedLists)).append("\n");
    sb.append("    hasNext: ").append(toIndentedString(hasNext)).append("\n");
    sb.append("    hasPrevious: ").append(toIndentedString(hasPrevious)).append("\n");
    sb.append("    nextPageNumber: ").append(toIndentedString(nextPageNumber)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    previousPageNumber: ").append(toIndentedString(previousPageNumber)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("curated_lists");
    openapiFields.add("has_next");
    openapiFields.add("has_previous");
    openapiFields.add("next_page_number");
    openapiFields.add("page_number");
    openapiFields.add("previous_page_number");
    openapiFields.add("total");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("curated_lists");
    openapiRequiredFields.add("has_next");
    openapiRequiredFields.add("has_previous");
    openapiRequiredFields.add("next_page_number");
    openapiRequiredFields.add("page_number");
    openapiRequiredFields.add("previous_page_number");
    openapiRequiredFields.add("total");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetCuratedPodcastsResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetCuratedPodcastsResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetCuratedPodcastsResponse is not found in the empty JSON string", GetCuratedPodcastsResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetCuratedPodcastsResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetCuratedPodcastsResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GetCuratedPodcastsResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the json data is an array
      if (!jsonObj.get("curated_lists").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `curated_lists` to be an array in the JSON string but got `%s`", jsonObj.get("curated_lists").toString()));
      }

      JsonArray jsonArraycuratedLists = jsonObj.getAsJsonArray("curated_lists");
      // validate the required field `curated_lists` (array)
      for (int i = 0; i < jsonArraycuratedLists.size(); i++) {
        CuratedListSimple.validateJsonElement(jsonArraycuratedLists.get(i));
      };
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetCuratedPodcastsResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetCuratedPodcastsResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetCuratedPodcastsResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetCuratedPodcastsResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GetCuratedPodcastsResponse>() {
           @Override
           public void write(JsonWriter out, GetCuratedPodcastsResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetCuratedPodcastsResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetCuratedPodcastsResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetCuratedPodcastsResponse
   * @throws IOException if the JSON string is invalid with respect to GetCuratedPodcastsResponse
   */
  public static GetCuratedPodcastsResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetCuratedPodcastsResponse.class);
  }

  /**
   * Convert an instance of GetCuratedPodcastsResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

