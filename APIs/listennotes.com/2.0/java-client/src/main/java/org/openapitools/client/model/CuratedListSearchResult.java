/*
 * Listen API: Podcast Search, Directory, and Insights API
 * Simple & no-nonsense podcast search & directory API. Search all podcasts and episodes by people, places, or topics. 
 *
 * The version of the OpenAPI document: 2.0
 * Contact: hello@listennotes.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.PodcastMinimum;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * When **type** is *curated*.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:58:39.439950-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CuratedListSearchResult {
  public static final String SERIALIZED_NAME_DESCRIPTION_HIGHLIGHTED = "description_highlighted";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION_HIGHLIGHTED)
  private String descriptionHighlighted;

  public static final String SERIALIZED_NAME_DESCRIPTION_ORIGINAL = "description_original";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION_ORIGINAL)
  private String descriptionOriginal;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_LISTENNOTES_URL = "listennotes_url";
  @SerializedName(SERIALIZED_NAME_LISTENNOTES_URL)
  private String listennotesUrl;

  public static final String SERIALIZED_NAME_PODCASTS = "podcasts";
  @SerializedName(SERIALIZED_NAME_PODCASTS)
  private List<PodcastMinimum> podcasts = new ArrayList<>();

  public static final String SERIALIZED_NAME_PUB_DATE_MS = "pub_date_ms";
  @SerializedName(SERIALIZED_NAME_PUB_DATE_MS)
  private Integer pubDateMs;

  public static final String SERIALIZED_NAME_SOURCE_DOMAIN = "source_domain";
  @SerializedName(SERIALIZED_NAME_SOURCE_DOMAIN)
  private String sourceDomain;

  public static final String SERIALIZED_NAME_SOURCE_URL = "source_url";
  @SerializedName(SERIALIZED_NAME_SOURCE_URL)
  private String sourceUrl;

  public static final String SERIALIZED_NAME_TITLE_HIGHLIGHTED = "title_highlighted";
  @SerializedName(SERIALIZED_NAME_TITLE_HIGHLIGHTED)
  private String titleHighlighted;

  public static final String SERIALIZED_NAME_TITLE_ORIGINAL = "title_original";
  @SerializedName(SERIALIZED_NAME_TITLE_ORIGINAL)
  private String titleOriginal;

  public static final String SERIALIZED_NAME_TOTAL = "total";
  @SerializedName(SERIALIZED_NAME_TOTAL)
  private Integer total;

  public CuratedListSearchResult() {
  }

  public CuratedListSearchResult descriptionHighlighted(String descriptionHighlighted) {
    this.descriptionHighlighted = descriptionHighlighted;
    return this;
  }

  /**
   * Highlighted segment of this curated list&#39;s description
   * @return descriptionHighlighted
   */
  @javax.annotation.Nullable
  public String getDescriptionHighlighted() {
    return descriptionHighlighted;
  }

  public void setDescriptionHighlighted(String descriptionHighlighted) {
    this.descriptionHighlighted = descriptionHighlighted;
  }


  public CuratedListSearchResult descriptionOriginal(String descriptionOriginal) {
    this.descriptionOriginal = descriptionOriginal;
    return this;
  }

  /**
   * Plain text of this curated list&#39;s description
   * @return descriptionOriginal
   */
  @javax.annotation.Nullable
  public String getDescriptionOriginal() {
    return descriptionOriginal;
  }

  public void setDescriptionOriginal(String descriptionOriginal) {
    this.descriptionOriginal = descriptionOriginal;
  }


  public CuratedListSearchResult id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Curated list id, which can be used to further fetch detailed curated list metadata via &#x60;GET /curated_podcasts/{id}&#x60;.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public CuratedListSearchResult listennotesUrl(String listennotesUrl) {
    this.listennotesUrl = listennotesUrl;
    return this;
  }

  /**
   * The url of this curated list on [ListenNotes.com](https://www.ListenNotes.com).
   * @return listennotesUrl
   */
  @javax.annotation.Nullable
  public String getListennotesUrl() {
    return listennotesUrl;
  }

  public void setListennotesUrl(String listennotesUrl) {
    this.listennotesUrl = listennotesUrl;
  }


  public CuratedListSearchResult podcasts(List<PodcastMinimum> podcasts) {
    this.podcasts = podcasts;
    return this;
  }

  public CuratedListSearchResult addPodcastsItem(PodcastMinimum podcastsItem) {
    if (this.podcasts == null) {
      this.podcasts = new ArrayList<>();
    }
    this.podcasts.add(podcastsItem);
    return this;
  }

  /**
   * Up to 5 podcasts in this curated list.
   * @return podcasts
   */
  @javax.annotation.Nullable
  public List<PodcastMinimum> getPodcasts() {
    return podcasts;
  }

  public void setPodcasts(List<PodcastMinimum> podcasts) {
    this.podcasts = podcasts;
  }


  public CuratedListSearchResult pubDateMs(Integer pubDateMs) {
    this.pubDateMs = pubDateMs;
    return this;
  }

  /**
   * Published date of this curated list. In milliseconds.
   * @return pubDateMs
   */
  @javax.annotation.Nullable
  public Integer getPubDateMs() {
    return pubDateMs;
  }

  public void setPubDateMs(Integer pubDateMs) {
    this.pubDateMs = pubDateMs;
  }


  public CuratedListSearchResult sourceDomain(String sourceDomain) {
    this.sourceDomain = sourceDomain;
    return this;
  }

  /**
   * The domain name of the source of this curated list.
   * @return sourceDomain
   */
  @javax.annotation.Nullable
  public String getSourceDomain() {
    return sourceDomain;
  }

  public void setSourceDomain(String sourceDomain) {
    this.sourceDomain = sourceDomain;
  }


  public CuratedListSearchResult sourceUrl(String sourceUrl) {
    this.sourceUrl = sourceUrl;
    return this;
  }

  /**
   * Url of the source of this curated list.
   * @return sourceUrl
   */
  @javax.annotation.Nullable
  public String getSourceUrl() {
    return sourceUrl;
  }

  public void setSourceUrl(String sourceUrl) {
    this.sourceUrl = sourceUrl;
  }


  public CuratedListSearchResult titleHighlighted(String titleHighlighted) {
    this.titleHighlighted = titleHighlighted;
    return this;
  }

  /**
   * Highlighted segment of this curated list&#39;s title
   * @return titleHighlighted
   */
  @javax.annotation.Nullable
  public String getTitleHighlighted() {
    return titleHighlighted;
  }

  public void setTitleHighlighted(String titleHighlighted) {
    this.titleHighlighted = titleHighlighted;
  }


  public CuratedListSearchResult titleOriginal(String titleOriginal) {
    this.titleOriginal = titleOriginal;
    return this;
  }

  /**
   * Plain text of this curated list&#39;s title
   * @return titleOriginal
   */
  @javax.annotation.Nullable
  public String getTitleOriginal() {
    return titleOriginal;
  }

  public void setTitleOriginal(String titleOriginal) {
    this.titleOriginal = titleOriginal;
  }


  public CuratedListSearchResult total(Integer total) {
    this.total = total;
    return this;
  }

  /**
   * The total number of podcasts in this curated list.
   * @return total
   */
  @javax.annotation.Nullable
  public Integer getTotal() {
    return total;
  }

  public void setTotal(Integer total) {
    this.total = total;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CuratedListSearchResult curatedListSearchResult = (CuratedListSearchResult) o;
    return Objects.equals(this.descriptionHighlighted, curatedListSearchResult.descriptionHighlighted) &&
        Objects.equals(this.descriptionOriginal, curatedListSearchResult.descriptionOriginal) &&
        Objects.equals(this.id, curatedListSearchResult.id) &&
        Objects.equals(this.listennotesUrl, curatedListSearchResult.listennotesUrl) &&
        Objects.equals(this.podcasts, curatedListSearchResult.podcasts) &&
        Objects.equals(this.pubDateMs, curatedListSearchResult.pubDateMs) &&
        Objects.equals(this.sourceDomain, curatedListSearchResult.sourceDomain) &&
        Objects.equals(this.sourceUrl, curatedListSearchResult.sourceUrl) &&
        Objects.equals(this.titleHighlighted, curatedListSearchResult.titleHighlighted) &&
        Objects.equals(this.titleOriginal, curatedListSearchResult.titleOriginal) &&
        Objects.equals(this.total, curatedListSearchResult.total);
  }

  @Override
  public int hashCode() {
    return Objects.hash(descriptionHighlighted, descriptionOriginal, id, listennotesUrl, podcasts, pubDateMs, sourceDomain, sourceUrl, titleHighlighted, titleOriginal, total);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CuratedListSearchResult {\n");
    sb.append("    descriptionHighlighted: ").append(toIndentedString(descriptionHighlighted)).append("\n");
    sb.append("    descriptionOriginal: ").append(toIndentedString(descriptionOriginal)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    listennotesUrl: ").append(toIndentedString(listennotesUrl)).append("\n");
    sb.append("    podcasts: ").append(toIndentedString(podcasts)).append("\n");
    sb.append("    pubDateMs: ").append(toIndentedString(pubDateMs)).append("\n");
    sb.append("    sourceDomain: ").append(toIndentedString(sourceDomain)).append("\n");
    sb.append("    sourceUrl: ").append(toIndentedString(sourceUrl)).append("\n");
    sb.append("    titleHighlighted: ").append(toIndentedString(titleHighlighted)).append("\n");
    sb.append("    titleOriginal: ").append(toIndentedString(titleOriginal)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description_highlighted");
    openapiFields.add("description_original");
    openapiFields.add("id");
    openapiFields.add("listennotes_url");
    openapiFields.add("podcasts");
    openapiFields.add("pub_date_ms");
    openapiFields.add("source_domain");
    openapiFields.add("source_url");
    openapiFields.add("title_highlighted");
    openapiFields.add("title_original");
    openapiFields.add("total");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CuratedListSearchResult
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CuratedListSearchResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CuratedListSearchResult is not found in the empty JSON string", CuratedListSearchResult.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CuratedListSearchResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CuratedListSearchResult` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("description_highlighted") != null && !jsonObj.get("description_highlighted").isJsonNull()) && !jsonObj.get("description_highlighted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description_highlighted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description_highlighted").toString()));
      }
      if ((jsonObj.get("description_original") != null && !jsonObj.get("description_original").isJsonNull()) && !jsonObj.get("description_original").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description_original` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description_original").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("listennotes_url") != null && !jsonObj.get("listennotes_url").isJsonNull()) && !jsonObj.get("listennotes_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `listennotes_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("listennotes_url").toString()));
      }
      if (jsonObj.get("podcasts") != null && !jsonObj.get("podcasts").isJsonNull()) {
        JsonArray jsonArraypodcasts = jsonObj.getAsJsonArray("podcasts");
        if (jsonArraypodcasts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("podcasts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `podcasts` to be an array in the JSON string but got `%s`", jsonObj.get("podcasts").toString()));
          }

          // validate the optional field `podcasts` (array)
          for (int i = 0; i < jsonArraypodcasts.size(); i++) {
            PodcastMinimum.validateJsonElement(jsonArraypodcasts.get(i));
          };
        }
      }
      if ((jsonObj.get("source_domain") != null && !jsonObj.get("source_domain").isJsonNull()) && !jsonObj.get("source_domain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `source_domain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("source_domain").toString()));
      }
      if ((jsonObj.get("source_url") != null && !jsonObj.get("source_url").isJsonNull()) && !jsonObj.get("source_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `source_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("source_url").toString()));
      }
      if ((jsonObj.get("title_highlighted") != null && !jsonObj.get("title_highlighted").isJsonNull()) && !jsonObj.get("title_highlighted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title_highlighted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title_highlighted").toString()));
      }
      if ((jsonObj.get("title_original") != null && !jsonObj.get("title_original").isJsonNull()) && !jsonObj.get("title_original").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title_original` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title_original").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CuratedListSearchResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CuratedListSearchResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CuratedListSearchResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CuratedListSearchResult.class));

       return (TypeAdapter<T>) new TypeAdapter<CuratedListSearchResult>() {
           @Override
           public void write(JsonWriter out, CuratedListSearchResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CuratedListSearchResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CuratedListSearchResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CuratedListSearchResult
   * @throws IOException if the JSON string is invalid with respect to CuratedListSearchResult
   */
  public static CuratedListSearchResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CuratedListSearchResult.class);
  }

  /**
   * Convert an instance of CuratedListSearchResult to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

