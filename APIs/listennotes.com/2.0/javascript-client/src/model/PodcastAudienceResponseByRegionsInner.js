/**
 * Listen API: Podcast Search, Directory, and Insights API
 * Simple & no-nonsense podcast search & directory API. Search all podcasts and episodes by people, places, or topics. 
 *
 * The version of the OpenAPI document: 2.0
 * Contact: hello@listennotes.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PodcastAudienceResponseByRegionsInner model module.
 * @module model/PodcastAudienceResponseByRegionsInner
 * @version 2.0
 */
class PodcastAudienceResponseByRegionsInner {
    /**
     * Constructs a new <code>PodcastAudienceResponseByRegionsInner</code>.
     * @alias module:model/PodcastAudienceResponseByRegionsInner
     */
    constructor() { 
        
        PodcastAudienceResponseByRegionsInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PodcastAudienceResponseByRegionsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PodcastAudienceResponseByRegionsInner} obj Optional instance to populate.
     * @return {module:model/PodcastAudienceResponseByRegionsInner} The populated <code>PodcastAudienceResponseByRegionsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PodcastAudienceResponseByRegionsInner();

            if (data.hasOwnProperty('ratio')) {
                obj['ratio'] = ApiClient.convertToType(data['ratio'], 'String');
            }
            if (data.hasOwnProperty('region')) {
                obj['region'] = ApiClient.convertToType(data['region'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PodcastAudienceResponseByRegionsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PodcastAudienceResponseByRegionsInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ratio'] && !(typeof data['ratio'] === 'string' || data['ratio'] instanceof String)) {
            throw new Error("Expected the field `ratio` to be a primitive type in the JSON string but got " + data['ratio']);
        }
        // ensure the json data is a string
        if (data['region'] && !(typeof data['region'] === 'string' || data['region'] instanceof String)) {
            throw new Error("Expected the field `region` to be a primitive type in the JSON string but got " + data['region']);
        }

        return true;
    }


}



/**
 * percentage of audience from this specific region
 * @member {String} ratio
 */
PodcastAudienceResponseByRegionsInner.prototype['ratio'] = undefined;

/**
 * 2-letter country code of a region.
 * @member {String} region
 */
PodcastAudienceResponseByRegionsInner.prototype['region'] = undefined;






export default PodcastAudienceResponseByRegionsInner;

