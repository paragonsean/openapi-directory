/**
 * Listen API: Podcast Search, Directory, and Insights API
 * Simple & no-nonsense podcast search & directory API. Search all podcasts and episodes by people, places, or topics. 
 *
 * The version of the OpenAPI document: 2.0
 * Contact: hello@listennotes.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EpisodeSimple from './EpisodeSimple';

/**
 * The GetEpisodesInBatchResponse model module.
 * @module model/GetEpisodesInBatchResponse
 * @version 2.0
 */
class GetEpisodesInBatchResponse {
    /**
     * Constructs a new <code>GetEpisodesInBatchResponse</code>.
     * @alias module:model/GetEpisodesInBatchResponse
     * @param episodes {Array.<module:model/EpisodeSimple>} 
     */
    constructor(episodes) { 
        
        GetEpisodesInBatchResponse.initialize(this, episodes);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, episodes) { 
        obj['episodes'] = episodes;
    }

    /**
     * Constructs a <code>GetEpisodesInBatchResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetEpisodesInBatchResponse} obj Optional instance to populate.
     * @return {module:model/GetEpisodesInBatchResponse} The populated <code>GetEpisodesInBatchResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetEpisodesInBatchResponse();

            if (data.hasOwnProperty('episodes')) {
                obj['episodes'] = ApiClient.convertToType(data['episodes'], [EpisodeSimple]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetEpisodesInBatchResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetEpisodesInBatchResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetEpisodesInBatchResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['episodes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['episodes'])) {
                throw new Error("Expected the field `episodes` to be an array in the JSON data but got " + data['episodes']);
            }
            // validate the optional field `episodes` (array)
            for (const item of data['episodes']) {
                EpisodeSimple.validateJSON(item);
            };
        }

        return true;
    }


}

GetEpisodesInBatchResponse.RequiredProperties = ["episodes"];

/**
 * @member {Array.<module:model/EpisodeSimple>} episodes
 */
GetEpisodesInBatchResponse.prototype['episodes'] = undefined;






export default GetEpisodesInBatchResponse;

