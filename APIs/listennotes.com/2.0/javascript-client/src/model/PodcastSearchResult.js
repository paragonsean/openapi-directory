/**
 * Listen API: Podcast Search, Directory, and Insights API
 * Simple & no-nonsense podcast search & directory API. Search all podcasts and episodes by people, places, or topics. 
 *
 * The version of the OpenAPI document: 2.0
 * Contact: hello@listennotes.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PodcastSearchResult model module.
 * @module model/PodcastSearchResult
 * @version 2.0
 */
class PodcastSearchResult {
    /**
     * Constructs a new <code>PodcastSearchResult</code>.
     * When **type** is *podcast*.
     * @alias module:model/PodcastSearchResult
     */
    constructor() { 
        
        PodcastSearchResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PodcastSearchResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PodcastSearchResult} obj Optional instance to populate.
     * @return {module:model/PodcastSearchResult} The populated <code>PodcastSearchResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PodcastSearchResult();

            if (data.hasOwnProperty('audio_length_sec')) {
                obj['audio_length_sec'] = ApiClient.convertToType(data['audio_length_sec'], 'Number');
            }
            if (data.hasOwnProperty('description_highlighted')) {
                obj['description_highlighted'] = ApiClient.convertToType(data['description_highlighted'], 'String');
            }
            if (data.hasOwnProperty('description_original')) {
                obj['description_original'] = ApiClient.convertToType(data['description_original'], 'String');
            }
            if (data.hasOwnProperty('earliest_pub_date_ms')) {
                obj['earliest_pub_date_ms'] = ApiClient.convertToType(data['earliest_pub_date_ms'], 'Number');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('explicit_content')) {
                obj['explicit_content'] = ApiClient.convertToType(data['explicit_content'], 'Boolean');
            }
            if (data.hasOwnProperty('genre_ids')) {
                obj['genre_ids'] = ApiClient.convertToType(data['genre_ids'], ['Number']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('image')) {
                obj['image'] = ApiClient.convertToType(data['image'], 'String');
            }
            if (data.hasOwnProperty('itunes_id')) {
                obj['itunes_id'] = ApiClient.convertToType(data['itunes_id'], 'Number');
            }
            if (data.hasOwnProperty('latest_episode_id')) {
                obj['latest_episode_id'] = ApiClient.convertToType(data['latest_episode_id'], 'String');
            }
            if (data.hasOwnProperty('latest_pub_date_ms')) {
                obj['latest_pub_date_ms'] = ApiClient.convertToType(data['latest_pub_date_ms'], 'Number');
            }
            if (data.hasOwnProperty('listen_score')) {
                obj['listen_score'] = ApiClient.convertToType(data['listen_score'], 'Number');
            }
            if (data.hasOwnProperty('listen_score_global_rank')) {
                obj['listen_score_global_rank'] = ApiClient.convertToType(data['listen_score_global_rank'], 'String');
            }
            if (data.hasOwnProperty('listennotes_url')) {
                obj['listennotes_url'] = ApiClient.convertToType(data['listennotes_url'], 'String');
            }
            if (data.hasOwnProperty('publisher_highlighted')) {
                obj['publisher_highlighted'] = ApiClient.convertToType(data['publisher_highlighted'], 'String');
            }
            if (data.hasOwnProperty('publisher_original')) {
                obj['publisher_original'] = ApiClient.convertToType(data['publisher_original'], 'String');
            }
            if (data.hasOwnProperty('rss')) {
                obj['rss'] = ApiClient.convertToType(data['rss'], 'String');
            }
            if (data.hasOwnProperty('thumbnail')) {
                obj['thumbnail'] = ApiClient.convertToType(data['thumbnail'], 'String');
            }
            if (data.hasOwnProperty('title_highlighted')) {
                obj['title_highlighted'] = ApiClient.convertToType(data['title_highlighted'], 'String');
            }
            if (data.hasOwnProperty('title_original')) {
                obj['title_original'] = ApiClient.convertToType(data['title_original'], 'String');
            }
            if (data.hasOwnProperty('total_episodes')) {
                obj['total_episodes'] = ApiClient.convertToType(data['total_episodes'], 'Number');
            }
            if (data.hasOwnProperty('update_frequency_hours')) {
                obj['update_frequency_hours'] = ApiClient.convertToType(data['update_frequency_hours'], 'Number');
            }
            if (data.hasOwnProperty('website')) {
                obj['website'] = ApiClient.convertToType(data['website'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PodcastSearchResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PodcastSearchResult</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description_highlighted'] && !(typeof data['description_highlighted'] === 'string' || data['description_highlighted'] instanceof String)) {
            throw new Error("Expected the field `description_highlighted` to be a primitive type in the JSON string but got " + data['description_highlighted']);
        }
        // ensure the json data is a string
        if (data['description_original'] && !(typeof data['description_original'] === 'string' || data['description_original'] instanceof String)) {
            throw new Error("Expected the field `description_original` to be a primitive type in the JSON string but got " + data['description_original']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['genre_ids'])) {
            throw new Error("Expected the field `genre_ids` to be an array in the JSON data but got " + data['genre_ids']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['image'] && !(typeof data['image'] === 'string' || data['image'] instanceof String)) {
            throw new Error("Expected the field `image` to be a primitive type in the JSON string but got " + data['image']);
        }
        // ensure the json data is a string
        if (data['latest_episode_id'] && !(typeof data['latest_episode_id'] === 'string' || data['latest_episode_id'] instanceof String)) {
            throw new Error("Expected the field `latest_episode_id` to be a primitive type in the JSON string but got " + data['latest_episode_id']);
        }
        // ensure the json data is a string
        if (data['listen_score_global_rank'] && !(typeof data['listen_score_global_rank'] === 'string' || data['listen_score_global_rank'] instanceof String)) {
            throw new Error("Expected the field `listen_score_global_rank` to be a primitive type in the JSON string but got " + data['listen_score_global_rank']);
        }
        // ensure the json data is a string
        if (data['listennotes_url'] && !(typeof data['listennotes_url'] === 'string' || data['listennotes_url'] instanceof String)) {
            throw new Error("Expected the field `listennotes_url` to be a primitive type in the JSON string but got " + data['listennotes_url']);
        }
        // ensure the json data is a string
        if (data['publisher_highlighted'] && !(typeof data['publisher_highlighted'] === 'string' || data['publisher_highlighted'] instanceof String)) {
            throw new Error("Expected the field `publisher_highlighted` to be a primitive type in the JSON string but got " + data['publisher_highlighted']);
        }
        // ensure the json data is a string
        if (data['publisher_original'] && !(typeof data['publisher_original'] === 'string' || data['publisher_original'] instanceof String)) {
            throw new Error("Expected the field `publisher_original` to be a primitive type in the JSON string but got " + data['publisher_original']);
        }
        // ensure the json data is a string
        if (data['rss'] && !(typeof data['rss'] === 'string' || data['rss'] instanceof String)) {
            throw new Error("Expected the field `rss` to be a primitive type in the JSON string but got " + data['rss']);
        }
        // ensure the json data is a string
        if (data['thumbnail'] && !(typeof data['thumbnail'] === 'string' || data['thumbnail'] instanceof String)) {
            throw new Error("Expected the field `thumbnail` to be a primitive type in the JSON string but got " + data['thumbnail']);
        }
        // ensure the json data is a string
        if (data['title_highlighted'] && !(typeof data['title_highlighted'] === 'string' || data['title_highlighted'] instanceof String)) {
            throw new Error("Expected the field `title_highlighted` to be a primitive type in the JSON string but got " + data['title_highlighted']);
        }
        // ensure the json data is a string
        if (data['title_original'] && !(typeof data['title_original'] === 'string' || data['title_original'] instanceof String)) {
            throw new Error("Expected the field `title_original` to be a primitive type in the JSON string but got " + data['title_original']);
        }
        // ensure the json data is a string
        if (data['website'] && !(typeof data['website'] === 'string' || data['website'] instanceof String)) {
            throw new Error("Expected the field `website` to be a primitive type in the JSON string but got " + data['website']);
        }

        return true;
    }


}



/**
 * Average audio length of all episodes of this podcast. In seconds.
 * @member {Number} audio_length_sec
 */
PodcastSearchResult.prototype['audio_length_sec'] = undefined;

/**
 * Highlighted segment of podcast description
 * @member {String} description_highlighted
 */
PodcastSearchResult.prototype['description_highlighted'] = undefined;

/**
 * Plain text of podcast description
 * @member {String} description_original
 */
PodcastSearchResult.prototype['description_original'] = undefined;

/**
 * The published date of the oldest episode of this podcast. In milliseconds
 * @member {Number} earliest_pub_date_ms
 */
PodcastSearchResult.prototype['earliest_pub_date_ms'] = undefined;

/**
 * The email of this podcast's producer. This field is available only in the PRO/ENTERPRISE plan.
 * @member {String} email
 */
PodcastSearchResult.prototype['email'] = undefined;

/**
 * Whether this podcast contains explicit language.
 * @member {Boolean} explicit_content
 */
PodcastSearchResult.prototype['explicit_content'] = undefined;

/**
 * @member {Array.<Number>} genre_ids
 */
PodcastSearchResult.prototype['genre_ids'] = undefined;

/**
 * Podcast id, which can be used to further fetch detailed podcast metadata via `GET /podcasts/{id}`.
 * @member {String} id
 */
PodcastSearchResult.prototype['id'] = undefined;

/**
 * Image url for this podcast's artwork. If you are using PRO/ENTERPRISE plan, then it's a high resolution image (1400x1400). If you are using FREE plan, then it's the same as **thumbnail**, low resolution image (300x300). 
 * @member {String} image
 */
PodcastSearchResult.prototype['image'] = undefined;

/**
 * iTunes id for this podcast.
 * @member {Number} itunes_id
 */
PodcastSearchResult.prototype['itunes_id'] = undefined;

/**
 * The id of the most recently published episode of this podcast, which can be used to further fetch detailed episode metadata via `GET /episodes/{id}`.
 * @member {String} latest_episode_id
 */
PodcastSearchResult.prototype['latest_episode_id'] = undefined;

/**
 * The published date of the latest episode of this podcast. In milliseconds
 * @member {Number} latest_pub_date_ms
 */
PodcastSearchResult.prototype['latest_pub_date_ms'] = undefined;

/**
 * The estimated popularity score of a podcast compared to all other rss-based public podcasts in the world on a scale from 0 to 100. If the score is not available, it'll be null. Learn more at listennotes.com/listen-score 
 * @member {Number} listen_score
 */
PodcastSearchResult.prototype['listen_score'] = undefined;

/**
 * The estimated popularity ranking of a podcast compared to all other rss-based public podcasts in the world. For example, if the value is 0.5%, then this podcast is one of the top 0.5% most popular shows out of all podcasts globally, ranked by Listen Score. If the ranking is not available, it'll be null. Learn more at listennotes.com/listen-score 
 * @member {String} listen_score_global_rank
 */
PodcastSearchResult.prototype['listen_score_global_rank'] = undefined;

/**
 * The url of this podcast on [ListenNotes.com](https://www.ListenNotes.com).
 * @member {String} listennotes_url
 */
PodcastSearchResult.prototype['listennotes_url'] = undefined;

/**
 * Highlighted segment of this podcast's publisher name.
 * @member {String} publisher_highlighted
 */
PodcastSearchResult.prototype['publisher_highlighted'] = undefined;

/**
 * Plain text of this podcast's publisher name.
 * @member {String} publisher_original
 */
PodcastSearchResult.prototype['publisher_original'] = undefined;

/**
 * RSS url of this podcast. This field is available only in the PRO/ENTERPRISE plan.
 * @member {String} rss
 */
PodcastSearchResult.prototype['rss'] = undefined;

/**
 * Thumbnail image url for this podcast's artwork (300x300).
 * @member {String} thumbnail
 */
PodcastSearchResult.prototype['thumbnail'] = undefined;

/**
 * Highlighted segment of podcast name.
 * @member {String} title_highlighted
 */
PodcastSearchResult.prototype['title_highlighted'] = undefined;

/**
 * Plain text of podcast name.
 * @member {String} title_original
 */
PodcastSearchResult.prototype['title_original'] = undefined;

/**
 * Total number of episodes in this podcast.
 * @member {Number} total_episodes
 */
PodcastSearchResult.prototype['total_episodes'] = undefined;

/**
 * How frequently does this podcast release a new episode? In hours. For example, if the value is 166, then it's every 166 hours (or weekly).
 * @member {Number} update_frequency_hours
 */
PodcastSearchResult.prototype['update_frequency_hours'] = undefined;

/**
 * Website url of this podcast.
 * @member {String} website
 */
PodcastSearchResult.prototype['website'] = undefined;






export default PodcastSearchResult;

