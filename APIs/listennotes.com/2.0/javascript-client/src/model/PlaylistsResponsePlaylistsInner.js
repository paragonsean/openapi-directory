/**
 * Listen API: Podcast Search, Directory, and Insights API
 * Simple & no-nonsense podcast search & directory API. Search all podcasts and episodes by people, places, or topics. 
 *
 * The version of the OpenAPI document: 2.0
 * Contact: hello@listennotes.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PlaylistVisibilityField from './PlaylistVisibilityField';

/**
 * The PlaylistsResponsePlaylistsInner model module.
 * @module model/PlaylistsResponsePlaylistsInner
 * @version 2.0
 */
class PlaylistsResponsePlaylistsInner {
    /**
     * Constructs a new <code>PlaylistsResponsePlaylistsInner</code>.
     * A playlist
     * @alias module:model/PlaylistsResponsePlaylistsInner
     */
    constructor() { 
        
        PlaylistsResponsePlaylistsInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PlaylistsResponsePlaylistsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PlaylistsResponsePlaylistsInner} obj Optional instance to populate.
     * @return {module:model/PlaylistsResponsePlaylistsInner} The populated <code>PlaylistsResponsePlaylistsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PlaylistsResponsePlaylistsInner();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('episode_count')) {
                obj['episode_count'] = ApiClient.convertToType(data['episode_count'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('image')) {
                obj['image'] = ApiClient.convertToType(data['image'], 'String');
            }
            if (data.hasOwnProperty('last_timestamp_ms')) {
                obj['last_timestamp_ms'] = ApiClient.convertToType(data['last_timestamp_ms'], 'Number');
            }
            if (data.hasOwnProperty('listennotes_url')) {
                obj['listennotes_url'] = ApiClient.convertToType(data['listennotes_url'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('podcast_count')) {
                obj['podcast_count'] = ApiClient.convertToType(data['podcast_count'], 'Number');
            }
            if (data.hasOwnProperty('thumbnail')) {
                obj['thumbnail'] = ApiClient.convertToType(data['thumbnail'], 'String');
            }
            if (data.hasOwnProperty('total_audio_length_sec')) {
                obj['total_audio_length_sec'] = ApiClient.convertToType(data['total_audio_length_sec'], 'Number');
            }
            if (data.hasOwnProperty('visibility')) {
                obj['visibility'] = PlaylistVisibilityField.constructFromObject(data['visibility']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PlaylistsResponsePlaylistsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PlaylistsResponsePlaylistsInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['image'] && !(typeof data['image'] === 'string' || data['image'] instanceof String)) {
            throw new Error("Expected the field `image` to be a primitive type in the JSON string but got " + data['image']);
        }
        // ensure the json data is a string
        if (data['listennotes_url'] && !(typeof data['listennotes_url'] === 'string' || data['listennotes_url'] instanceof String)) {
            throw new Error("Expected the field `listennotes_url` to be a primitive type in the JSON string but got " + data['listennotes_url']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['thumbnail'] && !(typeof data['thumbnail'] === 'string' || data['thumbnail'] instanceof String)) {
            throw new Error("Expected the field `thumbnail` to be a primitive type in the JSON string but got " + data['thumbnail']);
        }

        return true;
    }


}



/**
 * Playlist description.
 * @member {String} description
 */
PlaylistsResponsePlaylistsInner.prototype['description'] = undefined;

/**
 * The number of episodes (including custom audio) in this playlist.
 * @member {Number} episode_count
 */
PlaylistsResponsePlaylistsInner.prototype['episode_count'] = undefined;

/**
 * A 11-character playlist id, which can be used to further fetch detailed playlist metadata via `GET /playlists/{id}`.
 * @member {String} id
 */
PlaylistsResponsePlaylistsInner.prototype['id'] = undefined;

/**
 * High resolution image url of the playlist.
 * @member {String} image
 */
PlaylistsResponsePlaylistsInner.prototype['image'] = undefined;

/**
 * Passed to the **last_timestamp_ms** parameter of `GET /playlists/{id}` to paginate through items of that playlist. 
 * @member {Number} last_timestamp_ms
 */
PlaylistsResponsePlaylistsInner.prototype['last_timestamp_ms'] = undefined;

/**
 * The url of this playlist on ListenNotes.com.
 * @member {String} listennotes_url
 */
PlaylistsResponsePlaylistsInner.prototype['listennotes_url'] = undefined;

/**
 * Playlist name.
 * @member {String} name
 */
PlaylistsResponsePlaylistsInner.prototype['name'] = undefined;

/**
 * The number of podcasts in this playlist.
 * @member {Number} podcast_count
 */
PlaylistsResponsePlaylistsInner.prototype['podcast_count'] = undefined;

/**
 * Low resolution image url of the playlist.
 * @member {String} thumbnail
 */
PlaylistsResponsePlaylistsInner.prototype['thumbnail'] = undefined;

/**
 * Total audio length of all episodes in this playlist, in seconds.
 * @member {Number} total_audio_length_sec
 */
PlaylistsResponsePlaylistsInner.prototype['total_audio_length_sec'] = undefined;

/**
 * @member {module:model/PlaylistVisibilityField} visibility
 */
PlaylistsResponsePlaylistsInner.prototype['visibility'] = undefined;






export default PlaylistsResponsePlaylistsInner;

