/**
 * Listen API: Podcast Search, Directory, and Insights API
 * Simple & no-nonsense podcast search & directory API. Search all podcasts and episodes by people, places, or topics. 
 *
 * The version of the OpenAPI document: 2.0
 * Contact: hello@listennotes.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ListenApiPodcastSearchDirectoryAndInsightsApi);
  }
}(this, function(expect, ListenApiPodcastSearchDirectoryAndInsightsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ListenApiPodcastSearchDirectoryAndInsightsApi.DirectoryAPIApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DirectoryAPIApi', function() {
    describe('getBestPodcasts', function() {
      it('should call getBestPodcasts successfully', function(done) {
        //uncomment below and update the code to test getBestPodcasts
        //instance.getBestPodcasts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCuratedPodcastById', function() {
      it('should call getCuratedPodcastById successfully', function(done) {
        //uncomment below and update the code to test getCuratedPodcastById
        //instance.getCuratedPodcastById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCuratedPodcasts', function() {
      it('should call getCuratedPodcasts successfully', function(done) {
        //uncomment below and update the code to test getCuratedPodcasts
        //instance.getCuratedPodcasts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEpisodeById', function() {
      it('should call getEpisodeById successfully', function(done) {
        //uncomment below and update the code to test getEpisodeById
        //instance.getEpisodeById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEpisodeRecommendations', function() {
      it('should call getEpisodeRecommendations successfully', function(done) {
        //uncomment below and update the code to test getEpisodeRecommendations
        //instance.getEpisodeRecommendations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEpisodesInBatch', function() {
      it('should call getEpisodesInBatch successfully', function(done) {
        //uncomment below and update the code to test getEpisodesInBatch
        //instance.getEpisodesInBatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGenres', function() {
      it('should call getGenres successfully', function(done) {
        //uncomment below and update the code to test getGenres
        //instance.getGenres(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLanguages', function() {
      it('should call getLanguages successfully', function(done) {
        //uncomment below and update the code to test getLanguages
        //instance.getLanguages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPodcastById', function() {
      it('should call getPodcastById successfully', function(done) {
        //uncomment below and update the code to test getPodcastById
        //instance.getPodcastById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPodcastRecommendations', function() {
      it('should call getPodcastRecommendations successfully', function(done) {
        //uncomment below and update the code to test getPodcastRecommendations
        //instance.getPodcastRecommendations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPodcastsInBatch', function() {
      it('should call getPodcastsInBatch successfully', function(done) {
        //uncomment below and update the code to test getPodcastsInBatch
        //instance.getPodcastsInBatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRegions', function() {
      it('should call getRegions successfully', function(done) {
        //uncomment below and update the code to test getRegions
        //instance.getRegions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('justListen', function() {
      it('should call justListen successfully', function(done) {
        //uncomment below and update the code to test justListen
        //instance.justListen(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
