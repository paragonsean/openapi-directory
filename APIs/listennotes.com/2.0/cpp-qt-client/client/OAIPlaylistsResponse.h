/**
 * Listen API: Podcast Search, Directory, and Insights API
 * Simple & no-nonsense podcast search & directory API. Search all podcasts and episodes by people, places, or topics. 
 *
 * The version of the OpenAPI document: 2.0
 * Contact: hello@listennotes.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlaylistsResponse.h
 *
 * 
 */

#ifndef OAIPlaylistsResponse_H
#define OAIPlaylistsResponse_H

#include <QJsonObject>

#include "OAIPlaylistsResponse_playlists_inner.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPlaylistsResponse_playlists_inner;

class OAIPlaylistsResponse : public OAIObject {
public:
    OAIPlaylistsResponse();
    OAIPlaylistsResponse(QString json);
    ~OAIPlaylistsResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isHasNext() const;
    void setHasNext(const bool &has_next);
    bool is_has_next_Set() const;
    bool is_has_next_Valid() const;

    bool isHasPrevious() const;
    void setHasPrevious(const bool &has_previous);
    bool is_has_previous_Set() const;
    bool is_has_previous_Valid() const;

    qint32 getNextPageNumber() const;
    void setNextPageNumber(const qint32 &next_page_number);
    bool is_next_page_number_Set() const;
    bool is_next_page_number_Valid() const;

    qint32 getPageNumber() const;
    void setPageNumber(const qint32 &page_number);
    bool is_page_number_Set() const;
    bool is_page_number_Valid() const;

    QList<OAIPlaylistsResponse_playlists_inner> getPlaylists() const;
    void setPlaylists(const QList<OAIPlaylistsResponse_playlists_inner> &playlists);
    bool is_playlists_Set() const;
    bool is_playlists_Valid() const;

    qint32 getPreviousPageNumber() const;
    void setPreviousPageNumber(const qint32 &previous_page_number);
    bool is_previous_page_number_Set() const;
    bool is_previous_page_number_Valid() const;

    qint32 getTotal() const;
    void setTotal(const qint32 &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_has_next;
    bool m_has_next_isSet;
    bool m_has_next_isValid;

    bool m_has_previous;
    bool m_has_previous_isSet;
    bool m_has_previous_isValid;

    qint32 m_next_page_number;
    bool m_next_page_number_isSet;
    bool m_next_page_number_isValid;

    qint32 m_page_number;
    bool m_page_number_isSet;
    bool m_page_number_isValid;

    QList<OAIPlaylistsResponse_playlists_inner> m_playlists;
    bool m_playlists_isSet;
    bool m_playlists_isValid;

    qint32 m_previous_page_number;
    bool m_previous_page_number_isSet;
    bool m_previous_page_number_isValid;

    qint32 m_total;
    bool m_total_isSet;
    bool m_total_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlaylistsResponse)

#endif // OAIPlaylistsResponse_H
