/**
 * Listen API: Podcast Search, Directory, and Insights API
 * Simple & no-nonsense podcast search & directory API. Search all podcasts and episodes by people, places, or topics. 
 *
 * The version of the OpenAPI document: 2.0
 * Contact: hello@listennotes.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICuratedListSearchResult.h
 *
 * When **type** is *curated*.
 */

#ifndef OAICuratedListSearchResult_H
#define OAICuratedListSearchResult_H

#include <QJsonObject>

#include "OAIPodcastMinimum.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPodcastMinimum;

class OAICuratedListSearchResult : public OAIObject {
public:
    OAICuratedListSearchResult();
    OAICuratedListSearchResult(QString json);
    ~OAICuratedListSearchResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescriptionHighlighted() const;
    void setDescriptionHighlighted(const QString &description_highlighted);
    bool is_description_highlighted_Set() const;
    bool is_description_highlighted_Valid() const;

    QString getDescriptionOriginal() const;
    void setDescriptionOriginal(const QString &description_original);
    bool is_description_original_Set() const;
    bool is_description_original_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getListennotesUrl() const;
    void setListennotesUrl(const QString &listennotes_url);
    bool is_listennotes_url_Set() const;
    bool is_listennotes_url_Valid() const;

    QList<OAIPodcastMinimum> getPodcasts() const;
    void setPodcasts(const QList<OAIPodcastMinimum> &podcasts);
    bool is_podcasts_Set() const;
    bool is_podcasts_Valid() const;

    qint32 getPubDateMs() const;
    void setPubDateMs(const qint32 &pub_date_ms);
    bool is_pub_date_ms_Set() const;
    bool is_pub_date_ms_Valid() const;

    QString getSourceDomain() const;
    void setSourceDomain(const QString &source_domain);
    bool is_source_domain_Set() const;
    bool is_source_domain_Valid() const;

    QString getSourceUrl() const;
    void setSourceUrl(const QString &source_url);
    bool is_source_url_Set() const;
    bool is_source_url_Valid() const;

    QString getTitleHighlighted() const;
    void setTitleHighlighted(const QString &title_highlighted);
    bool is_title_highlighted_Set() const;
    bool is_title_highlighted_Valid() const;

    QString getTitleOriginal() const;
    void setTitleOriginal(const QString &title_original);
    bool is_title_original_Set() const;
    bool is_title_original_Valid() const;

    qint32 getTotal() const;
    void setTotal(const qint32 &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description_highlighted;
    bool m_description_highlighted_isSet;
    bool m_description_highlighted_isValid;

    QString m_description_original;
    bool m_description_original_isSet;
    bool m_description_original_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_listennotes_url;
    bool m_listennotes_url_isSet;
    bool m_listennotes_url_isValid;

    QList<OAIPodcastMinimum> m_podcasts;
    bool m_podcasts_isSet;
    bool m_podcasts_isValid;

    qint32 m_pub_date_ms;
    bool m_pub_date_ms_isSet;
    bool m_pub_date_ms_isValid;

    QString m_source_domain;
    bool m_source_domain_isSet;
    bool m_source_domain_isValid;

    QString m_source_url;
    bool m_source_url_isSet;
    bool m_source_url_isValid;

    QString m_title_highlighted;
    bool m_title_highlighted_isSet;
    bool m_title_highlighted_isValid;

    QString m_title_original;
    bool m_title_original_isSet;
    bool m_title_original_isValid;

    qint32 m_total;
    bool m_total_isSet;
    bool m_total_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICuratedListSearchResult)

#endif // OAICuratedListSearchResult_H
