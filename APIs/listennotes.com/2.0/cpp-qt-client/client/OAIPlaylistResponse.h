/**
 * Listen API: Podcast Search, Directory, and Insights API
 * Simple & no-nonsense podcast search & directory API. Search all podcasts and episodes by people, places, or topics. 
 *
 * The version of the OpenAPI document: 2.0
 * Contact: hello@listennotes.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlaylistResponse.h
 *
 * 
 */

#ifndef OAIPlaylistResponse_H
#define OAIPlaylistResponse_H

#include <QJsonObject>

#include "OAIPlaylistItem.h"
#include "OAIPlaylistVisibilityField.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPlaylistItem;

class OAIPlaylistResponse : public OAIObject {
public:
    OAIPlaylistResponse();
    OAIPlaylistResponse(QString json);
    ~OAIPlaylistResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getImage() const;
    void setImage(const QString &image);
    bool is_image_Set() const;
    bool is_image_Valid() const;

    QList<OAIPlaylistItem> getItems() const;
    void setItems(const QList<OAIPlaylistItem> &items);
    bool is_items_Set() const;
    bool is_items_Valid() const;

    qint32 getLastTimestampMs() const;
    void setLastTimestampMs(const qint32 &last_timestamp_ms);
    bool is_last_timestamp_ms_Set() const;
    bool is_last_timestamp_ms_Valid() const;

    QString getListennotesUrl() const;
    void setListennotesUrl(const QString &listennotes_url);
    bool is_listennotes_url_Set() const;
    bool is_listennotes_url_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getThumbnail() const;
    void setThumbnail(const QString &thumbnail);
    bool is_thumbnail_Set() const;
    bool is_thumbnail_Valid() const;

    qint32 getTotal() const;
    void setTotal(const qint32 &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    qint32 getTotalAudioLengthSec() const;
    void setTotalAudioLengthSec(const qint32 &total_audio_length_sec);
    bool is_total_audio_length_sec_Set() const;
    bool is_total_audio_length_sec_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIPlaylistVisibilityField getVisibility() const;
    void setVisibility(const OAIPlaylistVisibilityField &visibility);
    bool is_visibility_Set() const;
    bool is_visibility_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_image;
    bool m_image_isSet;
    bool m_image_isValid;

    QList<OAIPlaylistItem> m_items;
    bool m_items_isSet;
    bool m_items_isValid;

    qint32 m_last_timestamp_ms;
    bool m_last_timestamp_ms_isSet;
    bool m_last_timestamp_ms_isValid;

    QString m_listennotes_url;
    bool m_listennotes_url_isSet;
    bool m_listennotes_url_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_thumbnail;
    bool m_thumbnail_isSet;
    bool m_thumbnail_isValid;

    qint32 m_total;
    bool m_total_isSet;
    bool m_total_isValid;

    qint32 m_total_audio_length_sec;
    bool m_total_audio_length_sec_isSet;
    bool m_total_audio_length_sec_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIPlaylistVisibilityField m_visibility;
    bool m_visibility_isSet;
    bool m_visibility_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlaylistResponse)

#endif // OAIPlaylistResponse_H
