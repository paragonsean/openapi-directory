/**
 * Listen API: Podcast Search, Directory, and Insights API
 * Simple & no-nonsense podcast search & directory API. Search all podcasts and episodes by people, places, or topics. 
 *
 * The version of the OpenAPI document: 2.0
 * Contact: hello@listennotes.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetEpisodesInBatchResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetEpisodesInBatchResponse::OAIGetEpisodesInBatchResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetEpisodesInBatchResponse::OAIGetEpisodesInBatchResponse() {
    this->initializeModel();
}

OAIGetEpisodesInBatchResponse::~OAIGetEpisodesInBatchResponse() {}

void OAIGetEpisodesInBatchResponse::initializeModel() {

    m_episodes_isSet = false;
    m_episodes_isValid = false;
}

void OAIGetEpisodesInBatchResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetEpisodesInBatchResponse::fromJsonObject(QJsonObject json) {

    m_episodes_isValid = ::OpenAPI::fromJsonValue(m_episodes, json[QString("episodes")]);
    m_episodes_isSet = !json[QString("episodes")].isNull() && m_episodes_isValid;
}

QString OAIGetEpisodesInBatchResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetEpisodesInBatchResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_episodes.size() > 0) {
        obj.insert(QString("episodes"), ::OpenAPI::toJsonValue(m_episodes));
    }
    return obj;
}

QList<OAIEpisodeSimple> OAIGetEpisodesInBatchResponse::getEpisodes() const {
    return m_episodes;
}
void OAIGetEpisodesInBatchResponse::setEpisodes(const QList<OAIEpisodeSimple> &episodes) {
    m_episodes = episodes;
    m_episodes_isSet = true;
}

bool OAIGetEpisodesInBatchResponse::is_episodes_Set() const{
    return m_episodes_isSet;
}

bool OAIGetEpisodesInBatchResponse::is_episodes_Valid() const{
    return m_episodes_isValid;
}

bool OAIGetEpisodesInBatchResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_episodes.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetEpisodesInBatchResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_episodes_isValid && true;
}

} // namespace OpenAPI
