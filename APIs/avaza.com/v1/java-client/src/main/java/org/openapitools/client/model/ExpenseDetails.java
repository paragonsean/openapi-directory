/*
 * Avaza API Documentation
 * Welcome to the autogenerated documentation & test tool for Avaza's API. <br/><br/><strong>API Security & Authentication</strong><br/>Authentication options include OAuth2 Implicit and Authorization Code flows, and Personal Access Token. All connections should be encrypted over SSL/TLS <br/><br/>You can set up and manage your api authentication credentials from within your Avaza account. (requires Administrator permissions on your Avaza account).<br/><br/> OAuth2 Authorization endpoint: https://any.avaza.com/oauth2/authorize  <br/>OAuth2 Token endpoint: https://any.avaza.com/oauth2/token<br/>Base URL for subsequent API Requests: https://api.avaza.com/ <br/><br/>Blogpost about authenticating with Avaza's API:  https://www.avaza.com/avaza-api-oauth2-authentication/ <br/>Blogpost on using Avaza's webhooks: https://www.avaza.com/avaza-api-webhook-notifications/<br/>The OAuth flow currently issues Access Tokens that last 1 day, and Refresh tokens that last 180 days<br/>The Api respects the security Roles assigned to the authenticating Avaza user and filters the data return appropriately. <br/><br><strong>Support</strong><br/>For API Support, and to request access please contact Avaza Support Team via our support chat. <br/><br/><strong>User Contributed Libraries:</strong><br/>Graciously contributed by 3rd party users like you. <br/>Note these are not tested or endorsesd by Avaza. We encourage you to review before use, and use at own risk.<br/> <ul><li> - <a target='blank' href='https://packagist.org/packages/debiprasad/oauth2-avaza'>PHP OAuth Client Package for Azava API (by Debiprasad Sahoo)</a></li></ul>
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ExpenseDetails
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:11:56.431364-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ExpenseDetails {
  public static final String SERIALIZED_NAME_AMOUNT = "Amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private Double amount;

  public static final String SERIALIZED_NAME_ATTACHMENT_PREVIEW_U_R_L = "AttachmentPreviewURL";
  @SerializedName(SERIALIZED_NAME_ATTACHMENT_PREVIEW_U_R_L)
  private String attachmentPreviewURL;

  public static final String SERIALIZED_NAME_ATTACHMENT_U_R_L = "AttachmentURL";
  @SerializedName(SERIALIZED_NAME_ATTACHMENT_U_R_L)
  private String attachmentURL;

  public static final String SERIALIZED_NAME_CHARGEABLE_STATUS_CODE = "ChargeableStatusCode";
  @SerializedName(SERIALIZED_NAME_CHARGEABLE_STATUS_CODE)
  private String chargeableStatusCode;

  public static final String SERIALIZED_NAME_CURRENCY_CODE = "CurrencyCode";
  @SerializedName(SERIALIZED_NAME_CURRENCY_CODE)
  private String currencyCode;

  public static final String SERIALIZED_NAME_CUSTOMER_I_D_F_K = "CustomerIDFK";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_I_D_F_K)
  private Integer customerIDFK;

  public static final String SERIALIZED_NAME_CUSTOMER_NAME = "CustomerName";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_NAME)
  private String customerName;

  public static final String SERIALIZED_NAME_DATE_CREATED = "DateCreated";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_DATE_UPDATED = "DateUpdated";
  @SerializedName(SERIALIZED_NAME_DATE_UPDATED)
  private OffsetDateTime dateUpdated;

  public static final String SERIALIZED_NAME_EMAIL = "Email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_EXCHANGE_RATE = "ExchangeRate";
  @SerializedName(SERIALIZED_NAME_EXCHANGE_RATE)
  private Double exchangeRate;

  public static final String SERIALIZED_NAME_EXPENSE_APPROVAL_STATUS_CODE = "ExpenseApprovalStatusCode";
  @SerializedName(SERIALIZED_NAME_EXPENSE_APPROVAL_STATUS_CODE)
  private String expenseApprovalStatusCode;

  public static final String SERIALIZED_NAME_EXPENSE_CATEGORY_HAS_UNIT_PRICE = "ExpenseCategoryHasUnitPrice";
  @SerializedName(SERIALIZED_NAME_EXPENSE_CATEGORY_HAS_UNIT_PRICE)
  private Boolean expenseCategoryHasUnitPrice;

  public static final String SERIALIZED_NAME_EXPENSE_CATEGORY_I_D_F_K = "ExpenseCategoryIDFK";
  @SerializedName(SERIALIZED_NAME_EXPENSE_CATEGORY_I_D_F_K)
  private Integer expenseCategoryIDFK;

  public static final String SERIALIZED_NAME_EXPENSE_CATEGORY_NAME = "ExpenseCategoryName";
  @SerializedName(SERIALIZED_NAME_EXPENSE_CATEGORY_NAME)
  private String expenseCategoryName;

  public static final String SERIALIZED_NAME_EXPENSE_CATEGORY_UNIT_NAME = "ExpenseCategoryUnitName";
  @SerializedName(SERIALIZED_NAME_EXPENSE_CATEGORY_UNIT_NAME)
  private String expenseCategoryUnitName;

  public static final String SERIALIZED_NAME_EXPENSE_CATEGORY_UNIT_PRICE = "ExpenseCategoryUnitPrice";
  @SerializedName(SERIALIZED_NAME_EXPENSE_CATEGORY_UNIT_PRICE)
  private Double expenseCategoryUnitPrice;

  public static final String SERIALIZED_NAME_EXPENSE_DATE = "ExpenseDate";
  @SerializedName(SERIALIZED_NAME_EXPENSE_DATE)
  private OffsetDateTime expenseDate;

  public static final String SERIALIZED_NAME_EXPENSE_I_D = "ExpenseID";
  @SerializedName(SERIALIZED_NAME_EXPENSE_I_D)
  private Long expenseID;

  public static final String SERIALIZED_NAME_EXPENSE_PAYMENT_METHOD_I_D_F_K = "ExpensePaymentMethodIDFK";
  @SerializedName(SERIALIZED_NAME_EXPENSE_PAYMENT_METHOD_I_D_F_K)
  private Integer expensePaymentMethodIDFK;

  public static final String SERIALIZED_NAME_EXPENSE_PAYMENT_METHOD_NAME = "ExpensePaymentMethodName";
  @SerializedName(SERIALIZED_NAME_EXPENSE_PAYMENT_METHOD_NAME)
  private String expensePaymentMethodName;

  public static final String SERIALIZED_NAME_EXPENSE_REIMBURSEMENT_I_D_F_K = "ExpenseReimbursementIDFK";
  @SerializedName(SERIALIZED_NAME_EXPENSE_REIMBURSEMENT_I_D_F_K)
  private Long expenseReimbursementIDFK;

  public static final String SERIALIZED_NAME_EXPENSE_REIMBURSEMENT_STATUS_CODE = "ExpenseReimbursementStatusCode";
  @SerializedName(SERIALIZED_NAME_EXPENSE_REIMBURSEMENT_STATUS_CODE)
  private String expenseReimbursementStatusCode;

  public static final String SERIALIZED_NAME_EXPENSE_REPORT_I_D_F_K = "ExpenseReportIDFK";
  @SerializedName(SERIALIZED_NAME_EXPENSE_REPORT_I_D_F_K)
  private Long expenseReportIDFK;

  public static final String SERIALIZED_NAME_EXPENSE_REPORT_NAME = "ExpenseReportName";
  @SerializedName(SERIALIZED_NAME_EXPENSE_REPORT_NAME)
  private String expenseReportName;

  public static final String SERIALIZED_NAME_FILE_ATTACHMENT_I_D_F_K = "FileAttachmentIDFK";
  @SerializedName(SERIALIZED_NAME_FILE_ATTACHMENT_I_D_F_K)
  private Long fileAttachmentIDFK;

  public static final String SERIALIZED_NAME_FIRSTNAME = "Firstname";
  @SerializedName(SERIALIZED_NAME_FIRSTNAME)
  private String firstname;

  public static final String SERIALIZED_NAME_LASTNAME = "Lastname";
  @SerializedName(SERIALIZED_NAME_LASTNAME)
  private String lastname;

  public static final String SERIALIZED_NAME_MERCHANT = "Merchant";
  @SerializedName(SERIALIZED_NAME_MERCHANT)
  private String merchant;

  public static final String SERIALIZED_NAME_MERCHANT_TAX_NUMBER = "MerchantTaxNumber";
  @SerializedName(SERIALIZED_NAME_MERCHANT_TAX_NUMBER)
  private String merchantTaxNumber;

  public static final String SERIALIZED_NAME_NOTES = "Notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private String notes;

  public static final String SERIALIZED_NAME_PROJECT_CODE = "ProjectCode";
  @SerializedName(SERIALIZED_NAME_PROJECT_CODE)
  private String projectCode;

  public static final String SERIALIZED_NAME_PROJECT_I_D_F_K = "ProjectIDFK";
  @SerializedName(SERIALIZED_NAME_PROJECT_I_D_F_K)
  private Integer projectIDFK;

  public static final String SERIALIZED_NAME_PROJECT_TITLE = "ProjectTitle";
  @SerializedName(SERIALIZED_NAME_PROJECT_TITLE)
  private String projectTitle;

  public static final String SERIALIZED_NAME_QUANTITY = "Quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Double quantity;

  public static final String SERIALIZED_NAME_TASK_I_D_F_K = "TaskIDFK";
  @SerializedName(SERIALIZED_NAME_TASK_I_D_F_K)
  private Integer taskIDFK;

  public static final String SERIALIZED_NAME_TASK_TITLE = "TaskTitle";
  @SerializedName(SERIALIZED_NAME_TASK_TITLE)
  private String taskTitle;

  public static final String SERIALIZED_NAME_TAX_AMOUNT = "TaxAmount";
  @SerializedName(SERIALIZED_NAME_TAX_AMOUNT)
  private Double taxAmount;

  public static final String SERIALIZED_NAME_TAX_I_D_F_K = "TaxIDFK";
  @SerializedName(SERIALIZED_NAME_TAX_I_D_F_K)
  private Integer taxIDFK;

  public static final String SERIALIZED_NAME_TAX_NAME = "TaxName";
  @SerializedName(SERIALIZED_NAME_TAX_NAME)
  private String taxName;

  public static final String SERIALIZED_NAME_TRANSACTION_TAX_CONFIG_CODE = "TransactionTaxConfigCode";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_TAX_CONFIG_CODE)
  private String transactionTaxConfigCode;

  public static final String SERIALIZED_NAME_TRANSACTION_TAX_CONFIG_NAME = "TransactionTaxConfigName";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_TAX_CONFIG_NAME)
  private String transactionTaxConfigName;

  public static final String SERIALIZED_NAME_USER_I_D_F_K = "UserIDFK";
  @SerializedName(SERIALIZED_NAME_USER_I_D_F_K)
  private Integer userIDFK;

  public static final String SERIALIZED_NAME_IS_CHARGEABLE = "isChargeable";
  @SerializedName(SERIALIZED_NAME_IS_CHARGEABLE)
  private Boolean isChargeable;

  public static final String SERIALIZED_NAME_IS_OFFICIAL_EXCHANGE_RATE = "isOfficialExchangeRate";
  @SerializedName(SERIALIZED_NAME_IS_OFFICIAL_EXCHANGE_RATE)
  private Boolean isOfficialExchangeRate;

  public static final String SERIALIZED_NAME_IS_REIMBURSABLE = "isReimbursable";
  @SerializedName(SERIALIZED_NAME_IS_REIMBURSABLE)
  private Boolean isReimbursable;

  public ExpenseDetails() {
  }

  public ExpenseDetails amount(Double amount) {
    this.amount = amount;
    return this;
  }

  /**
   * Get amount
   * @return amount
   */
  @javax.annotation.Nullable
  public Double getAmount() {
    return amount;
  }

  public void setAmount(Double amount) {
    this.amount = amount;
  }


  public ExpenseDetails attachmentPreviewURL(String attachmentPreviewURL) {
    this.attachmentPreviewURL = attachmentPreviewURL;
    return this;
  }

  /**
   * Get attachmentPreviewURL
   * @return attachmentPreviewURL
   */
  @javax.annotation.Nullable
  public String getAttachmentPreviewURL() {
    return attachmentPreviewURL;
  }

  public void setAttachmentPreviewURL(String attachmentPreviewURL) {
    this.attachmentPreviewURL = attachmentPreviewURL;
  }


  public ExpenseDetails attachmentURL(String attachmentURL) {
    this.attachmentURL = attachmentURL;
    return this;
  }

  /**
   * Get attachmentURL
   * @return attachmentURL
   */
  @javax.annotation.Nullable
  public String getAttachmentURL() {
    return attachmentURL;
  }

  public void setAttachmentURL(String attachmentURL) {
    this.attachmentURL = attachmentURL;
  }


  public ExpenseDetails chargeableStatusCode(String chargeableStatusCode) {
    this.chargeableStatusCode = chargeableStatusCode;
    return this;
  }

  /**
   * Get chargeableStatusCode
   * @return chargeableStatusCode
   */
  @javax.annotation.Nullable
  public String getChargeableStatusCode() {
    return chargeableStatusCode;
  }

  public void setChargeableStatusCode(String chargeableStatusCode) {
    this.chargeableStatusCode = chargeableStatusCode;
  }


  public ExpenseDetails currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

  /**
   * Get currencyCode
   * @return currencyCode
   */
  @javax.annotation.Nullable
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }


  public ExpenseDetails customerIDFK(Integer customerIDFK) {
    this.customerIDFK = customerIDFK;
    return this;
  }

  /**
   * Get customerIDFK
   * @return customerIDFK
   */
  @javax.annotation.Nullable
  public Integer getCustomerIDFK() {
    return customerIDFK;
  }

  public void setCustomerIDFK(Integer customerIDFK) {
    this.customerIDFK = customerIDFK;
  }


  public ExpenseDetails customerName(String customerName) {
    this.customerName = customerName;
    return this;
  }

  /**
   * Get customerName
   * @return customerName
   */
  @javax.annotation.Nullable
  public String getCustomerName() {
    return customerName;
  }

  public void setCustomerName(String customerName) {
    this.customerName = customerName;
  }


  public ExpenseDetails dateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * Get dateCreated
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public ExpenseDetails dateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
    return this;
  }

  /**
   * Get dateUpdated
   * @return dateUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
  }


  public ExpenseDetails email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public ExpenseDetails exchangeRate(Double exchangeRate) {
    this.exchangeRate = exchangeRate;
    return this;
  }

  /**
   * Get exchangeRate
   * @return exchangeRate
   */
  @javax.annotation.Nullable
  public Double getExchangeRate() {
    return exchangeRate;
  }

  public void setExchangeRate(Double exchangeRate) {
    this.exchangeRate = exchangeRate;
  }


  public ExpenseDetails expenseApprovalStatusCode(String expenseApprovalStatusCode) {
    this.expenseApprovalStatusCode = expenseApprovalStatusCode;
    return this;
  }

  /**
   * Get expenseApprovalStatusCode
   * @return expenseApprovalStatusCode
   */
  @javax.annotation.Nullable
  public String getExpenseApprovalStatusCode() {
    return expenseApprovalStatusCode;
  }

  public void setExpenseApprovalStatusCode(String expenseApprovalStatusCode) {
    this.expenseApprovalStatusCode = expenseApprovalStatusCode;
  }


  public ExpenseDetails expenseCategoryHasUnitPrice(Boolean expenseCategoryHasUnitPrice) {
    this.expenseCategoryHasUnitPrice = expenseCategoryHasUnitPrice;
    return this;
  }

  /**
   * Get expenseCategoryHasUnitPrice
   * @return expenseCategoryHasUnitPrice
   */
  @javax.annotation.Nullable
  public Boolean getExpenseCategoryHasUnitPrice() {
    return expenseCategoryHasUnitPrice;
  }

  public void setExpenseCategoryHasUnitPrice(Boolean expenseCategoryHasUnitPrice) {
    this.expenseCategoryHasUnitPrice = expenseCategoryHasUnitPrice;
  }


  public ExpenseDetails expenseCategoryIDFK(Integer expenseCategoryIDFK) {
    this.expenseCategoryIDFK = expenseCategoryIDFK;
    return this;
  }

  /**
   * Get expenseCategoryIDFK
   * @return expenseCategoryIDFK
   */
  @javax.annotation.Nullable
  public Integer getExpenseCategoryIDFK() {
    return expenseCategoryIDFK;
  }

  public void setExpenseCategoryIDFK(Integer expenseCategoryIDFK) {
    this.expenseCategoryIDFK = expenseCategoryIDFK;
  }


  public ExpenseDetails expenseCategoryName(String expenseCategoryName) {
    this.expenseCategoryName = expenseCategoryName;
    return this;
  }

  /**
   * Get expenseCategoryName
   * @return expenseCategoryName
   */
  @javax.annotation.Nullable
  public String getExpenseCategoryName() {
    return expenseCategoryName;
  }

  public void setExpenseCategoryName(String expenseCategoryName) {
    this.expenseCategoryName = expenseCategoryName;
  }


  public ExpenseDetails expenseCategoryUnitName(String expenseCategoryUnitName) {
    this.expenseCategoryUnitName = expenseCategoryUnitName;
    return this;
  }

  /**
   * Get expenseCategoryUnitName
   * @return expenseCategoryUnitName
   */
  @javax.annotation.Nullable
  public String getExpenseCategoryUnitName() {
    return expenseCategoryUnitName;
  }

  public void setExpenseCategoryUnitName(String expenseCategoryUnitName) {
    this.expenseCategoryUnitName = expenseCategoryUnitName;
  }


  public ExpenseDetails expenseCategoryUnitPrice(Double expenseCategoryUnitPrice) {
    this.expenseCategoryUnitPrice = expenseCategoryUnitPrice;
    return this;
  }

  /**
   * Get expenseCategoryUnitPrice
   * @return expenseCategoryUnitPrice
   */
  @javax.annotation.Nullable
  public Double getExpenseCategoryUnitPrice() {
    return expenseCategoryUnitPrice;
  }

  public void setExpenseCategoryUnitPrice(Double expenseCategoryUnitPrice) {
    this.expenseCategoryUnitPrice = expenseCategoryUnitPrice;
  }


  public ExpenseDetails expenseDate(OffsetDateTime expenseDate) {
    this.expenseDate = expenseDate;
    return this;
  }

  /**
   * Get expenseDate
   * @return expenseDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getExpenseDate() {
    return expenseDate;
  }

  public void setExpenseDate(OffsetDateTime expenseDate) {
    this.expenseDate = expenseDate;
  }


  public ExpenseDetails expenseID(Long expenseID) {
    this.expenseID = expenseID;
    return this;
  }

  /**
   * Get expenseID
   * @return expenseID
   */
  @javax.annotation.Nullable
  public Long getExpenseID() {
    return expenseID;
  }

  public void setExpenseID(Long expenseID) {
    this.expenseID = expenseID;
  }


  public ExpenseDetails expensePaymentMethodIDFK(Integer expensePaymentMethodIDFK) {
    this.expensePaymentMethodIDFK = expensePaymentMethodIDFK;
    return this;
  }

  /**
   * Get expensePaymentMethodIDFK
   * @return expensePaymentMethodIDFK
   */
  @javax.annotation.Nullable
  public Integer getExpensePaymentMethodIDFK() {
    return expensePaymentMethodIDFK;
  }

  public void setExpensePaymentMethodIDFK(Integer expensePaymentMethodIDFK) {
    this.expensePaymentMethodIDFK = expensePaymentMethodIDFK;
  }


  public ExpenseDetails expensePaymentMethodName(String expensePaymentMethodName) {
    this.expensePaymentMethodName = expensePaymentMethodName;
    return this;
  }

  /**
   * Get expensePaymentMethodName
   * @return expensePaymentMethodName
   */
  @javax.annotation.Nullable
  public String getExpensePaymentMethodName() {
    return expensePaymentMethodName;
  }

  public void setExpensePaymentMethodName(String expensePaymentMethodName) {
    this.expensePaymentMethodName = expensePaymentMethodName;
  }


  public ExpenseDetails expenseReimbursementIDFK(Long expenseReimbursementIDFK) {
    this.expenseReimbursementIDFK = expenseReimbursementIDFK;
    return this;
  }

  /**
   * Get expenseReimbursementIDFK
   * @return expenseReimbursementIDFK
   */
  @javax.annotation.Nullable
  public Long getExpenseReimbursementIDFK() {
    return expenseReimbursementIDFK;
  }

  public void setExpenseReimbursementIDFK(Long expenseReimbursementIDFK) {
    this.expenseReimbursementIDFK = expenseReimbursementIDFK;
  }


  public ExpenseDetails expenseReimbursementStatusCode(String expenseReimbursementStatusCode) {
    this.expenseReimbursementStatusCode = expenseReimbursementStatusCode;
    return this;
  }

  /**
   * Get expenseReimbursementStatusCode
   * @return expenseReimbursementStatusCode
   */
  @javax.annotation.Nullable
  public String getExpenseReimbursementStatusCode() {
    return expenseReimbursementStatusCode;
  }

  public void setExpenseReimbursementStatusCode(String expenseReimbursementStatusCode) {
    this.expenseReimbursementStatusCode = expenseReimbursementStatusCode;
  }


  public ExpenseDetails expenseReportIDFK(Long expenseReportIDFK) {
    this.expenseReportIDFK = expenseReportIDFK;
    return this;
  }

  /**
   * Get expenseReportIDFK
   * @return expenseReportIDFK
   */
  @javax.annotation.Nullable
  public Long getExpenseReportIDFK() {
    return expenseReportIDFK;
  }

  public void setExpenseReportIDFK(Long expenseReportIDFK) {
    this.expenseReportIDFK = expenseReportIDFK;
  }


  public ExpenseDetails expenseReportName(String expenseReportName) {
    this.expenseReportName = expenseReportName;
    return this;
  }

  /**
   * Get expenseReportName
   * @return expenseReportName
   */
  @javax.annotation.Nullable
  public String getExpenseReportName() {
    return expenseReportName;
  }

  public void setExpenseReportName(String expenseReportName) {
    this.expenseReportName = expenseReportName;
  }


  public ExpenseDetails fileAttachmentIDFK(Long fileAttachmentIDFK) {
    this.fileAttachmentIDFK = fileAttachmentIDFK;
    return this;
  }

  /**
   * Get fileAttachmentIDFK
   * @return fileAttachmentIDFK
   */
  @javax.annotation.Nullable
  public Long getFileAttachmentIDFK() {
    return fileAttachmentIDFK;
  }

  public void setFileAttachmentIDFK(Long fileAttachmentIDFK) {
    this.fileAttachmentIDFK = fileAttachmentIDFK;
  }


  public ExpenseDetails firstname(String firstname) {
    this.firstname = firstname;
    return this;
  }

  /**
   * Get firstname
   * @return firstname
   */
  @javax.annotation.Nullable
  public String getFirstname() {
    return firstname;
  }

  public void setFirstname(String firstname) {
    this.firstname = firstname;
  }


  public ExpenseDetails lastname(String lastname) {
    this.lastname = lastname;
    return this;
  }

  /**
   * Get lastname
   * @return lastname
   */
  @javax.annotation.Nullable
  public String getLastname() {
    return lastname;
  }

  public void setLastname(String lastname) {
    this.lastname = lastname;
  }


  public ExpenseDetails merchant(String merchant) {
    this.merchant = merchant;
    return this;
  }

  /**
   * Get merchant
   * @return merchant
   */
  @javax.annotation.Nullable
  public String getMerchant() {
    return merchant;
  }

  public void setMerchant(String merchant) {
    this.merchant = merchant;
  }


  public ExpenseDetails merchantTaxNumber(String merchantTaxNumber) {
    this.merchantTaxNumber = merchantTaxNumber;
    return this;
  }

  /**
   * Get merchantTaxNumber
   * @return merchantTaxNumber
   */
  @javax.annotation.Nullable
  public String getMerchantTaxNumber() {
    return merchantTaxNumber;
  }

  public void setMerchantTaxNumber(String merchantTaxNumber) {
    this.merchantTaxNumber = merchantTaxNumber;
  }


  public ExpenseDetails notes(String notes) {
    this.notes = notes;
    return this;
  }

  /**
   * Get notes
   * @return notes
   */
  @javax.annotation.Nullable
  public String getNotes() {
    return notes;
  }

  public void setNotes(String notes) {
    this.notes = notes;
  }


  public ExpenseDetails projectCode(String projectCode) {
    this.projectCode = projectCode;
    return this;
  }

  /**
   * Get projectCode
   * @return projectCode
   */
  @javax.annotation.Nullable
  public String getProjectCode() {
    return projectCode;
  }

  public void setProjectCode(String projectCode) {
    this.projectCode = projectCode;
  }


  public ExpenseDetails projectIDFK(Integer projectIDFK) {
    this.projectIDFK = projectIDFK;
    return this;
  }

  /**
   * Get projectIDFK
   * @return projectIDFK
   */
  @javax.annotation.Nullable
  public Integer getProjectIDFK() {
    return projectIDFK;
  }

  public void setProjectIDFK(Integer projectIDFK) {
    this.projectIDFK = projectIDFK;
  }


  public ExpenseDetails projectTitle(String projectTitle) {
    this.projectTitle = projectTitle;
    return this;
  }

  /**
   * Get projectTitle
   * @return projectTitle
   */
  @javax.annotation.Nullable
  public String getProjectTitle() {
    return projectTitle;
  }

  public void setProjectTitle(String projectTitle) {
    this.projectTitle = projectTitle;
  }


  public ExpenseDetails quantity(Double quantity) {
    this.quantity = quantity;
    return this;
  }

  /**
   * Get quantity
   * @return quantity
   */
  @javax.annotation.Nullable
  public Double getQuantity() {
    return quantity;
  }

  public void setQuantity(Double quantity) {
    this.quantity = quantity;
  }


  public ExpenseDetails taskIDFK(Integer taskIDFK) {
    this.taskIDFK = taskIDFK;
    return this;
  }

  /**
   * Get taskIDFK
   * @return taskIDFK
   */
  @javax.annotation.Nullable
  public Integer getTaskIDFK() {
    return taskIDFK;
  }

  public void setTaskIDFK(Integer taskIDFK) {
    this.taskIDFK = taskIDFK;
  }


  public ExpenseDetails taskTitle(String taskTitle) {
    this.taskTitle = taskTitle;
    return this;
  }

  /**
   * Get taskTitle
   * @return taskTitle
   */
  @javax.annotation.Nullable
  public String getTaskTitle() {
    return taskTitle;
  }

  public void setTaskTitle(String taskTitle) {
    this.taskTitle = taskTitle;
  }


  public ExpenseDetails taxAmount(Double taxAmount) {
    this.taxAmount = taxAmount;
    return this;
  }

  /**
   * Get taxAmount
   * @return taxAmount
   */
  @javax.annotation.Nullable
  public Double getTaxAmount() {
    return taxAmount;
  }

  public void setTaxAmount(Double taxAmount) {
    this.taxAmount = taxAmount;
  }


  public ExpenseDetails taxIDFK(Integer taxIDFK) {
    this.taxIDFK = taxIDFK;
    return this;
  }

  /**
   * Get taxIDFK
   * @return taxIDFK
   */
  @javax.annotation.Nullable
  public Integer getTaxIDFK() {
    return taxIDFK;
  }

  public void setTaxIDFK(Integer taxIDFK) {
    this.taxIDFK = taxIDFK;
  }


  public ExpenseDetails taxName(String taxName) {
    this.taxName = taxName;
    return this;
  }

  /**
   * Get taxName
   * @return taxName
   */
  @javax.annotation.Nullable
  public String getTaxName() {
    return taxName;
  }

  public void setTaxName(String taxName) {
    this.taxName = taxName;
  }


  public ExpenseDetails transactionTaxConfigCode(String transactionTaxConfigCode) {
    this.transactionTaxConfigCode = transactionTaxConfigCode;
    return this;
  }

  /**
   * Get transactionTaxConfigCode
   * @return transactionTaxConfigCode
   */
  @javax.annotation.Nullable
  public String getTransactionTaxConfigCode() {
    return transactionTaxConfigCode;
  }

  public void setTransactionTaxConfigCode(String transactionTaxConfigCode) {
    this.transactionTaxConfigCode = transactionTaxConfigCode;
  }


  public ExpenseDetails transactionTaxConfigName(String transactionTaxConfigName) {
    this.transactionTaxConfigName = transactionTaxConfigName;
    return this;
  }

  /**
   * Get transactionTaxConfigName
   * @return transactionTaxConfigName
   */
  @javax.annotation.Nullable
  public String getTransactionTaxConfigName() {
    return transactionTaxConfigName;
  }

  public void setTransactionTaxConfigName(String transactionTaxConfigName) {
    this.transactionTaxConfigName = transactionTaxConfigName;
  }


  public ExpenseDetails userIDFK(Integer userIDFK) {
    this.userIDFK = userIDFK;
    return this;
  }

  /**
   * Get userIDFK
   * @return userIDFK
   */
  @javax.annotation.Nullable
  public Integer getUserIDFK() {
    return userIDFK;
  }

  public void setUserIDFK(Integer userIDFK) {
    this.userIDFK = userIDFK;
  }


  public ExpenseDetails isChargeable(Boolean isChargeable) {
    this.isChargeable = isChargeable;
    return this;
  }

  /**
   * Get isChargeable
   * @return isChargeable
   */
  @javax.annotation.Nullable
  public Boolean getIsChargeable() {
    return isChargeable;
  }

  public void setIsChargeable(Boolean isChargeable) {
    this.isChargeable = isChargeable;
  }


  public ExpenseDetails isOfficialExchangeRate(Boolean isOfficialExchangeRate) {
    this.isOfficialExchangeRate = isOfficialExchangeRate;
    return this;
  }

  /**
   * Get isOfficialExchangeRate
   * @return isOfficialExchangeRate
   */
  @javax.annotation.Nullable
  public Boolean getIsOfficialExchangeRate() {
    return isOfficialExchangeRate;
  }

  public void setIsOfficialExchangeRate(Boolean isOfficialExchangeRate) {
    this.isOfficialExchangeRate = isOfficialExchangeRate;
  }


  public ExpenseDetails isReimbursable(Boolean isReimbursable) {
    this.isReimbursable = isReimbursable;
    return this;
  }

  /**
   * Get isReimbursable
   * @return isReimbursable
   */
  @javax.annotation.Nullable
  public Boolean getIsReimbursable() {
    return isReimbursable;
  }

  public void setIsReimbursable(Boolean isReimbursable) {
    this.isReimbursable = isReimbursable;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExpenseDetails expenseDetails = (ExpenseDetails) o;
    return Objects.equals(this.amount, expenseDetails.amount) &&
        Objects.equals(this.attachmentPreviewURL, expenseDetails.attachmentPreviewURL) &&
        Objects.equals(this.attachmentURL, expenseDetails.attachmentURL) &&
        Objects.equals(this.chargeableStatusCode, expenseDetails.chargeableStatusCode) &&
        Objects.equals(this.currencyCode, expenseDetails.currencyCode) &&
        Objects.equals(this.customerIDFK, expenseDetails.customerIDFK) &&
        Objects.equals(this.customerName, expenseDetails.customerName) &&
        Objects.equals(this.dateCreated, expenseDetails.dateCreated) &&
        Objects.equals(this.dateUpdated, expenseDetails.dateUpdated) &&
        Objects.equals(this.email, expenseDetails.email) &&
        Objects.equals(this.exchangeRate, expenseDetails.exchangeRate) &&
        Objects.equals(this.expenseApprovalStatusCode, expenseDetails.expenseApprovalStatusCode) &&
        Objects.equals(this.expenseCategoryHasUnitPrice, expenseDetails.expenseCategoryHasUnitPrice) &&
        Objects.equals(this.expenseCategoryIDFK, expenseDetails.expenseCategoryIDFK) &&
        Objects.equals(this.expenseCategoryName, expenseDetails.expenseCategoryName) &&
        Objects.equals(this.expenseCategoryUnitName, expenseDetails.expenseCategoryUnitName) &&
        Objects.equals(this.expenseCategoryUnitPrice, expenseDetails.expenseCategoryUnitPrice) &&
        Objects.equals(this.expenseDate, expenseDetails.expenseDate) &&
        Objects.equals(this.expenseID, expenseDetails.expenseID) &&
        Objects.equals(this.expensePaymentMethodIDFK, expenseDetails.expensePaymentMethodIDFK) &&
        Objects.equals(this.expensePaymentMethodName, expenseDetails.expensePaymentMethodName) &&
        Objects.equals(this.expenseReimbursementIDFK, expenseDetails.expenseReimbursementIDFK) &&
        Objects.equals(this.expenseReimbursementStatusCode, expenseDetails.expenseReimbursementStatusCode) &&
        Objects.equals(this.expenseReportIDFK, expenseDetails.expenseReportIDFK) &&
        Objects.equals(this.expenseReportName, expenseDetails.expenseReportName) &&
        Objects.equals(this.fileAttachmentIDFK, expenseDetails.fileAttachmentIDFK) &&
        Objects.equals(this.firstname, expenseDetails.firstname) &&
        Objects.equals(this.lastname, expenseDetails.lastname) &&
        Objects.equals(this.merchant, expenseDetails.merchant) &&
        Objects.equals(this.merchantTaxNumber, expenseDetails.merchantTaxNumber) &&
        Objects.equals(this.notes, expenseDetails.notes) &&
        Objects.equals(this.projectCode, expenseDetails.projectCode) &&
        Objects.equals(this.projectIDFK, expenseDetails.projectIDFK) &&
        Objects.equals(this.projectTitle, expenseDetails.projectTitle) &&
        Objects.equals(this.quantity, expenseDetails.quantity) &&
        Objects.equals(this.taskIDFK, expenseDetails.taskIDFK) &&
        Objects.equals(this.taskTitle, expenseDetails.taskTitle) &&
        Objects.equals(this.taxAmount, expenseDetails.taxAmount) &&
        Objects.equals(this.taxIDFK, expenseDetails.taxIDFK) &&
        Objects.equals(this.taxName, expenseDetails.taxName) &&
        Objects.equals(this.transactionTaxConfigCode, expenseDetails.transactionTaxConfigCode) &&
        Objects.equals(this.transactionTaxConfigName, expenseDetails.transactionTaxConfigName) &&
        Objects.equals(this.userIDFK, expenseDetails.userIDFK) &&
        Objects.equals(this.isChargeable, expenseDetails.isChargeable) &&
        Objects.equals(this.isOfficialExchangeRate, expenseDetails.isOfficialExchangeRate) &&
        Objects.equals(this.isReimbursable, expenseDetails.isReimbursable);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, attachmentPreviewURL, attachmentURL, chargeableStatusCode, currencyCode, customerIDFK, customerName, dateCreated, dateUpdated, email, exchangeRate, expenseApprovalStatusCode, expenseCategoryHasUnitPrice, expenseCategoryIDFK, expenseCategoryName, expenseCategoryUnitName, expenseCategoryUnitPrice, expenseDate, expenseID, expensePaymentMethodIDFK, expensePaymentMethodName, expenseReimbursementIDFK, expenseReimbursementStatusCode, expenseReportIDFK, expenseReportName, fileAttachmentIDFK, firstname, lastname, merchant, merchantTaxNumber, notes, projectCode, projectIDFK, projectTitle, quantity, taskIDFK, taskTitle, taxAmount, taxIDFK, taxName, transactionTaxConfigCode, transactionTaxConfigName, userIDFK, isChargeable, isOfficialExchangeRate, isReimbursable);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExpenseDetails {\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    attachmentPreviewURL: ").append(toIndentedString(attachmentPreviewURL)).append("\n");
    sb.append("    attachmentURL: ").append(toIndentedString(attachmentURL)).append("\n");
    sb.append("    chargeableStatusCode: ").append(toIndentedString(chargeableStatusCode)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    customerIDFK: ").append(toIndentedString(customerIDFK)).append("\n");
    sb.append("    customerName: ").append(toIndentedString(customerName)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    exchangeRate: ").append(toIndentedString(exchangeRate)).append("\n");
    sb.append("    expenseApprovalStatusCode: ").append(toIndentedString(expenseApprovalStatusCode)).append("\n");
    sb.append("    expenseCategoryHasUnitPrice: ").append(toIndentedString(expenseCategoryHasUnitPrice)).append("\n");
    sb.append("    expenseCategoryIDFK: ").append(toIndentedString(expenseCategoryIDFK)).append("\n");
    sb.append("    expenseCategoryName: ").append(toIndentedString(expenseCategoryName)).append("\n");
    sb.append("    expenseCategoryUnitName: ").append(toIndentedString(expenseCategoryUnitName)).append("\n");
    sb.append("    expenseCategoryUnitPrice: ").append(toIndentedString(expenseCategoryUnitPrice)).append("\n");
    sb.append("    expenseDate: ").append(toIndentedString(expenseDate)).append("\n");
    sb.append("    expenseID: ").append(toIndentedString(expenseID)).append("\n");
    sb.append("    expensePaymentMethodIDFK: ").append(toIndentedString(expensePaymentMethodIDFK)).append("\n");
    sb.append("    expensePaymentMethodName: ").append(toIndentedString(expensePaymentMethodName)).append("\n");
    sb.append("    expenseReimbursementIDFK: ").append(toIndentedString(expenseReimbursementIDFK)).append("\n");
    sb.append("    expenseReimbursementStatusCode: ").append(toIndentedString(expenseReimbursementStatusCode)).append("\n");
    sb.append("    expenseReportIDFK: ").append(toIndentedString(expenseReportIDFK)).append("\n");
    sb.append("    expenseReportName: ").append(toIndentedString(expenseReportName)).append("\n");
    sb.append("    fileAttachmentIDFK: ").append(toIndentedString(fileAttachmentIDFK)).append("\n");
    sb.append("    firstname: ").append(toIndentedString(firstname)).append("\n");
    sb.append("    lastname: ").append(toIndentedString(lastname)).append("\n");
    sb.append("    merchant: ").append(toIndentedString(merchant)).append("\n");
    sb.append("    merchantTaxNumber: ").append(toIndentedString(merchantTaxNumber)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    projectCode: ").append(toIndentedString(projectCode)).append("\n");
    sb.append("    projectIDFK: ").append(toIndentedString(projectIDFK)).append("\n");
    sb.append("    projectTitle: ").append(toIndentedString(projectTitle)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    taskIDFK: ").append(toIndentedString(taskIDFK)).append("\n");
    sb.append("    taskTitle: ").append(toIndentedString(taskTitle)).append("\n");
    sb.append("    taxAmount: ").append(toIndentedString(taxAmount)).append("\n");
    sb.append("    taxIDFK: ").append(toIndentedString(taxIDFK)).append("\n");
    sb.append("    taxName: ").append(toIndentedString(taxName)).append("\n");
    sb.append("    transactionTaxConfigCode: ").append(toIndentedString(transactionTaxConfigCode)).append("\n");
    sb.append("    transactionTaxConfigName: ").append(toIndentedString(transactionTaxConfigName)).append("\n");
    sb.append("    userIDFK: ").append(toIndentedString(userIDFK)).append("\n");
    sb.append("    isChargeable: ").append(toIndentedString(isChargeable)).append("\n");
    sb.append("    isOfficialExchangeRate: ").append(toIndentedString(isOfficialExchangeRate)).append("\n");
    sb.append("    isReimbursable: ").append(toIndentedString(isReimbursable)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Amount");
    openapiFields.add("AttachmentPreviewURL");
    openapiFields.add("AttachmentURL");
    openapiFields.add("ChargeableStatusCode");
    openapiFields.add("CurrencyCode");
    openapiFields.add("CustomerIDFK");
    openapiFields.add("CustomerName");
    openapiFields.add("DateCreated");
    openapiFields.add("DateUpdated");
    openapiFields.add("Email");
    openapiFields.add("ExchangeRate");
    openapiFields.add("ExpenseApprovalStatusCode");
    openapiFields.add("ExpenseCategoryHasUnitPrice");
    openapiFields.add("ExpenseCategoryIDFK");
    openapiFields.add("ExpenseCategoryName");
    openapiFields.add("ExpenseCategoryUnitName");
    openapiFields.add("ExpenseCategoryUnitPrice");
    openapiFields.add("ExpenseDate");
    openapiFields.add("ExpenseID");
    openapiFields.add("ExpensePaymentMethodIDFK");
    openapiFields.add("ExpensePaymentMethodName");
    openapiFields.add("ExpenseReimbursementIDFK");
    openapiFields.add("ExpenseReimbursementStatusCode");
    openapiFields.add("ExpenseReportIDFK");
    openapiFields.add("ExpenseReportName");
    openapiFields.add("FileAttachmentIDFK");
    openapiFields.add("Firstname");
    openapiFields.add("Lastname");
    openapiFields.add("Merchant");
    openapiFields.add("MerchantTaxNumber");
    openapiFields.add("Notes");
    openapiFields.add("ProjectCode");
    openapiFields.add("ProjectIDFK");
    openapiFields.add("ProjectTitle");
    openapiFields.add("Quantity");
    openapiFields.add("TaskIDFK");
    openapiFields.add("TaskTitle");
    openapiFields.add("TaxAmount");
    openapiFields.add("TaxIDFK");
    openapiFields.add("TaxName");
    openapiFields.add("TransactionTaxConfigCode");
    openapiFields.add("TransactionTaxConfigName");
    openapiFields.add("UserIDFK");
    openapiFields.add("isChargeable");
    openapiFields.add("isOfficialExchangeRate");
    openapiFields.add("isReimbursable");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ExpenseDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ExpenseDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ExpenseDetails is not found in the empty JSON string", ExpenseDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ExpenseDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ExpenseDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("AttachmentPreviewURL") != null && !jsonObj.get("AttachmentPreviewURL").isJsonNull()) && !jsonObj.get("AttachmentPreviewURL").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AttachmentPreviewURL` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AttachmentPreviewURL").toString()));
      }
      if ((jsonObj.get("AttachmentURL") != null && !jsonObj.get("AttachmentURL").isJsonNull()) && !jsonObj.get("AttachmentURL").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AttachmentURL` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AttachmentURL").toString()));
      }
      if ((jsonObj.get("ChargeableStatusCode") != null && !jsonObj.get("ChargeableStatusCode").isJsonNull()) && !jsonObj.get("ChargeableStatusCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ChargeableStatusCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ChargeableStatusCode").toString()));
      }
      if ((jsonObj.get("CurrencyCode") != null && !jsonObj.get("CurrencyCode").isJsonNull()) && !jsonObj.get("CurrencyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CurrencyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CurrencyCode").toString()));
      }
      if ((jsonObj.get("CustomerName") != null && !jsonObj.get("CustomerName").isJsonNull()) && !jsonObj.get("CustomerName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CustomerName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CustomerName").toString()));
      }
      if ((jsonObj.get("Email") != null && !jsonObj.get("Email").isJsonNull()) && !jsonObj.get("Email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Email").toString()));
      }
      if ((jsonObj.get("ExpenseApprovalStatusCode") != null && !jsonObj.get("ExpenseApprovalStatusCode").isJsonNull()) && !jsonObj.get("ExpenseApprovalStatusCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ExpenseApprovalStatusCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ExpenseApprovalStatusCode").toString()));
      }
      if ((jsonObj.get("ExpenseCategoryName") != null && !jsonObj.get("ExpenseCategoryName").isJsonNull()) && !jsonObj.get("ExpenseCategoryName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ExpenseCategoryName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ExpenseCategoryName").toString()));
      }
      if ((jsonObj.get("ExpenseCategoryUnitName") != null && !jsonObj.get("ExpenseCategoryUnitName").isJsonNull()) && !jsonObj.get("ExpenseCategoryUnitName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ExpenseCategoryUnitName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ExpenseCategoryUnitName").toString()));
      }
      if ((jsonObj.get("ExpensePaymentMethodName") != null && !jsonObj.get("ExpensePaymentMethodName").isJsonNull()) && !jsonObj.get("ExpensePaymentMethodName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ExpensePaymentMethodName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ExpensePaymentMethodName").toString()));
      }
      if ((jsonObj.get("ExpenseReimbursementStatusCode") != null && !jsonObj.get("ExpenseReimbursementStatusCode").isJsonNull()) && !jsonObj.get("ExpenseReimbursementStatusCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ExpenseReimbursementStatusCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ExpenseReimbursementStatusCode").toString()));
      }
      if ((jsonObj.get("ExpenseReportName") != null && !jsonObj.get("ExpenseReportName").isJsonNull()) && !jsonObj.get("ExpenseReportName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ExpenseReportName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ExpenseReportName").toString()));
      }
      if ((jsonObj.get("Firstname") != null && !jsonObj.get("Firstname").isJsonNull()) && !jsonObj.get("Firstname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Firstname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Firstname").toString()));
      }
      if ((jsonObj.get("Lastname") != null && !jsonObj.get("Lastname").isJsonNull()) && !jsonObj.get("Lastname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Lastname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Lastname").toString()));
      }
      if ((jsonObj.get("Merchant") != null && !jsonObj.get("Merchant").isJsonNull()) && !jsonObj.get("Merchant").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Merchant` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Merchant").toString()));
      }
      if ((jsonObj.get("MerchantTaxNumber") != null && !jsonObj.get("MerchantTaxNumber").isJsonNull()) && !jsonObj.get("MerchantTaxNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MerchantTaxNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MerchantTaxNumber").toString()));
      }
      if ((jsonObj.get("Notes") != null && !jsonObj.get("Notes").isJsonNull()) && !jsonObj.get("Notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Notes").toString()));
      }
      if ((jsonObj.get("ProjectCode") != null && !jsonObj.get("ProjectCode").isJsonNull()) && !jsonObj.get("ProjectCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ProjectCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ProjectCode").toString()));
      }
      if ((jsonObj.get("ProjectTitle") != null && !jsonObj.get("ProjectTitle").isJsonNull()) && !jsonObj.get("ProjectTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ProjectTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ProjectTitle").toString()));
      }
      if ((jsonObj.get("TaskTitle") != null && !jsonObj.get("TaskTitle").isJsonNull()) && !jsonObj.get("TaskTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TaskTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TaskTitle").toString()));
      }
      if ((jsonObj.get("TaxName") != null && !jsonObj.get("TaxName").isJsonNull()) && !jsonObj.get("TaxName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TaxName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TaxName").toString()));
      }
      if ((jsonObj.get("TransactionTaxConfigCode") != null && !jsonObj.get("TransactionTaxConfigCode").isJsonNull()) && !jsonObj.get("TransactionTaxConfigCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TransactionTaxConfigCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TransactionTaxConfigCode").toString()));
      }
      if ((jsonObj.get("TransactionTaxConfigName") != null && !jsonObj.get("TransactionTaxConfigName").isJsonNull()) && !jsonObj.get("TransactionTaxConfigName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TransactionTaxConfigName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TransactionTaxConfigName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ExpenseDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ExpenseDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ExpenseDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ExpenseDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<ExpenseDetails>() {
           @Override
           public void write(JsonWriter out, ExpenseDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ExpenseDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ExpenseDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ExpenseDetails
   * @throws IOException if the JSON string is invalid with respect to ExpenseDetails
   */
  public static ExpenseDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ExpenseDetails.class);
  }

  /**
   * Convert an instance of ExpenseDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

