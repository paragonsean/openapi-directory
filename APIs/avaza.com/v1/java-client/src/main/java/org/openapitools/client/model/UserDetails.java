/*
 * Avaza API Documentation
 * Welcome to the autogenerated documentation & test tool for Avaza's API. <br/><br/><strong>API Security & Authentication</strong><br/>Authentication options include OAuth2 Implicit and Authorization Code flows, and Personal Access Token. All connections should be encrypted over SSL/TLS <br/><br/>You can set up and manage your api authentication credentials from within your Avaza account. (requires Administrator permissions on your Avaza account).<br/><br/> OAuth2 Authorization endpoint: https://any.avaza.com/oauth2/authorize  <br/>OAuth2 Token endpoint: https://any.avaza.com/oauth2/token<br/>Base URL for subsequent API Requests: https://api.avaza.com/ <br/><br/>Blogpost about authenticating with Avaza's API:  https://www.avaza.com/avaza-api-oauth2-authentication/ <br/>Blogpost on using Avaza's webhooks: https://www.avaza.com/avaza-api-webhook-notifications/<br/>The OAuth flow currently issues Access Tokens that last 1 day, and Refresh tokens that last 180 days<br/>The Api respects the security Roles assigned to the authenticating Avaza user and filters the data return appropriately. <br/><br><strong>Support</strong><br/>For API Support, and to request access please contact Avaza Support Team via our support chat. <br/><br/><strong>User Contributed Libraries:</strong><br/>Graciously contributed by 3rd party users like you. <br/>Note these are not tested or endorsesd by Avaza. We encourage you to review before use, and use at own risk.<br/> <ul><li> - <a target='blank' href='https://packagist.org/packages/debiprasad/oauth2-avaza'>PHP OAuth Client Package for Azava API (by Debiprasad Sahoo)</a></li></ul>
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.RoleDetails;
import org.openapitools.client.model.UserTagDetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UserDetails
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:11:56.431364-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UserDetails {
  public static final String SERIALIZED_NAME_ACCOUNT_I_D_F_K = "AccountIDFK";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_I_D_F_K)
  private Integer accountIDFK;

  public static final String SERIALIZED_NAME_COMPANY_I_D_F_K = "CompanyIDFK";
  @SerializedName(SERIALIZED_NAME_COMPANY_I_D_F_K)
  private Integer companyIDFK;

  public static final String SERIALIZED_NAME_COMPANY_NAME = "CompanyName";
  @SerializedName(SERIALIZED_NAME_COMPANY_NAME)
  private String companyName;

  public static final String SERIALIZED_NAME_DEFAULT_BILLABLE_RATE = "DefaultBillableRate";
  @SerializedName(SERIALIZED_NAME_DEFAULT_BILLABLE_RATE)
  private Double defaultBillableRate;

  public static final String SERIALIZED_NAME_DEFAULT_COST_RATE = "DefaultCostRate";
  @SerializedName(SERIALIZED_NAME_DEFAULT_COST_RATE)
  private Double defaultCostRate;

  public static final String SERIALIZED_NAME_EMAIL = "Email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_FIRSTNAME = "Firstname";
  @SerializedName(SERIALIZED_NAME_FIRSTNAME)
  private String firstname;

  public static final String SERIALIZED_NAME_FRIDAY_AVAILABLE_HOURS = "FridayAvailableHours";
  @SerializedName(SERIALIZED_NAME_FRIDAY_AVAILABLE_HOURS)
  private Double fridayAvailableHours;

  public static final String SERIALIZED_NAME_IA_N_A_TIMEZONE = "IANATimezone";
  @SerializedName(SERIALIZED_NAME_IA_N_A_TIMEZONE)
  private String iaNATimezone;

  public static final String SERIALIZED_NAME_LASTNAME = "Lastname";
  @SerializedName(SERIALIZED_NAME_LASTNAME)
  private String lastname;

  public static final String SERIALIZED_NAME_MOBILE = "Mobile";
  @SerializedName(SERIALIZED_NAME_MOBILE)
  private String mobile;

  public static final String SERIALIZED_NAME_MONDAY_AVAILABLE_HOURS = "MondayAvailableHours";
  @SerializedName(SERIALIZED_NAME_MONDAY_AVAILABLE_HOURS)
  private Double mondayAvailableHours;

  public static final String SERIALIZED_NAME_PHONE = "Phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public static final String SERIALIZED_NAME_POSITION_TITLE = "PositionTitle";
  @SerializedName(SERIALIZED_NAME_POSITION_TITLE)
  private String positionTitle;

  public static final String SERIALIZED_NAME_ROLES = "Roles";
  @SerializedName(SERIALIZED_NAME_ROLES)
  private List<RoleDetails> roles = new ArrayList<>();

  public static final String SERIALIZED_NAME_SATURDAY_AVAILABLE_HOURS = "SaturdayAvailableHours";
  @SerializedName(SERIALIZED_NAME_SATURDAY_AVAILABLE_HOURS)
  private Double saturdayAvailableHours;

  public static final String SERIALIZED_NAME_SUNDAY_AVAILABLE_HOURS = "SundayAvailableHours";
  @SerializedName(SERIALIZED_NAME_SUNDAY_AVAILABLE_HOURS)
  private Double sundayAvailableHours;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<UserTagDetails> tags = new ArrayList<>();

  public static final String SERIALIZED_NAME_THURSDAY_AVAILABLE_HOURS = "ThursdayAvailableHours";
  @SerializedName(SERIALIZED_NAME_THURSDAY_AVAILABLE_HOURS)
  private Double thursdayAvailableHours;

  public static final String SERIALIZED_NAME_TIME_ZONE = "TimeZone";
  @SerializedName(SERIALIZED_NAME_TIME_ZONE)
  private String timeZone;

  public static final String SERIALIZED_NAME_TUESDAY_AVAILABLE_HOURS = "TuesdayAvailableHours";
  @SerializedName(SERIALIZED_NAME_TUESDAY_AVAILABLE_HOURS)
  private Double tuesdayAvailableHours;

  public static final String SERIALIZED_NAME_USER_I_D = "UserID";
  @SerializedName(SERIALIZED_NAME_USER_I_D)
  private Integer userID;

  public static final String SERIALIZED_NAME_WEDNESDAY_AVAILABLE_HOURS = "WednesdayAvailableHours";
  @SerializedName(SERIALIZED_NAME_WEDNESDAY_AVAILABLE_HOURS)
  private Double wednesdayAvailableHours;

  public static final String SERIALIZED_NAME_IS_TEAM_MEMBER = "isTeamMember";
  @SerializedName(SERIALIZED_NAME_IS_TEAM_MEMBER)
  private Boolean isTeamMember;

  public UserDetails() {
  }

  public UserDetails accountIDFK(Integer accountIDFK) {
    this.accountIDFK = accountIDFK;
    return this;
  }

  /**
   * Get accountIDFK
   * @return accountIDFK
   */
  @javax.annotation.Nullable
  public Integer getAccountIDFK() {
    return accountIDFK;
  }

  public void setAccountIDFK(Integer accountIDFK) {
    this.accountIDFK = accountIDFK;
  }


  public UserDetails companyIDFK(Integer companyIDFK) {
    this.companyIDFK = companyIDFK;
    return this;
  }

  /**
   * Get companyIDFK
   * @return companyIDFK
   */
  @javax.annotation.Nullable
  public Integer getCompanyIDFK() {
    return companyIDFK;
  }

  public void setCompanyIDFK(Integer companyIDFK) {
    this.companyIDFK = companyIDFK;
  }


  public UserDetails companyName(String companyName) {
    this.companyName = companyName;
    return this;
  }

  /**
   * Get companyName
   * @return companyName
   */
  @javax.annotation.Nullable
  public String getCompanyName() {
    return companyName;
  }

  public void setCompanyName(String companyName) {
    this.companyName = companyName;
  }


  public UserDetails defaultBillableRate(Double defaultBillableRate) {
    this.defaultBillableRate = defaultBillableRate;
    return this;
  }

  /**
   * Get defaultBillableRate
   * @return defaultBillableRate
   */
  @javax.annotation.Nullable
  public Double getDefaultBillableRate() {
    return defaultBillableRate;
  }

  public void setDefaultBillableRate(Double defaultBillableRate) {
    this.defaultBillableRate = defaultBillableRate;
  }


  public UserDetails defaultCostRate(Double defaultCostRate) {
    this.defaultCostRate = defaultCostRate;
    return this;
  }

  /**
   * Get defaultCostRate
   * @return defaultCostRate
   */
  @javax.annotation.Nullable
  public Double getDefaultCostRate() {
    return defaultCostRate;
  }

  public void setDefaultCostRate(Double defaultCostRate) {
    this.defaultCostRate = defaultCostRate;
  }


  public UserDetails email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public UserDetails firstname(String firstname) {
    this.firstname = firstname;
    return this;
  }

  /**
   * Get firstname
   * @return firstname
   */
  @javax.annotation.Nullable
  public String getFirstname() {
    return firstname;
  }

  public void setFirstname(String firstname) {
    this.firstname = firstname;
  }


  public UserDetails fridayAvailableHours(Double fridayAvailableHours) {
    this.fridayAvailableHours = fridayAvailableHours;
    return this;
  }

  /**
   * Get fridayAvailableHours
   * @return fridayAvailableHours
   */
  @javax.annotation.Nullable
  public Double getFridayAvailableHours() {
    return fridayAvailableHours;
  }

  public void setFridayAvailableHours(Double fridayAvailableHours) {
    this.fridayAvailableHours = fridayAvailableHours;
  }


  public UserDetails iaNATimezone(String iaNATimezone) {
    this.iaNATimezone = iaNATimezone;
    return this;
  }

  /**
   * IANA tz database timezone name
   * @return iaNATimezone
   */
  @javax.annotation.Nullable
  public String getIaNATimezone() {
    return iaNATimezone;
  }

  public void setIaNATimezone(String iaNATimezone) {
    this.iaNATimezone = iaNATimezone;
  }


  public UserDetails lastname(String lastname) {
    this.lastname = lastname;
    return this;
  }

  /**
   * Get lastname
   * @return lastname
   */
  @javax.annotation.Nullable
  public String getLastname() {
    return lastname;
  }

  public void setLastname(String lastname) {
    this.lastname = lastname;
  }


  public UserDetails mobile(String mobile) {
    this.mobile = mobile;
    return this;
  }

  /**
   * Get mobile
   * @return mobile
   */
  @javax.annotation.Nullable
  public String getMobile() {
    return mobile;
  }

  public void setMobile(String mobile) {
    this.mobile = mobile;
  }


  public UserDetails mondayAvailableHours(Double mondayAvailableHours) {
    this.mondayAvailableHours = mondayAvailableHours;
    return this;
  }

  /**
   * Get mondayAvailableHours
   * @return mondayAvailableHours
   */
  @javax.annotation.Nullable
  public Double getMondayAvailableHours() {
    return mondayAvailableHours;
  }

  public void setMondayAvailableHours(Double mondayAvailableHours) {
    this.mondayAvailableHours = mondayAvailableHours;
  }


  public UserDetails phone(String phone) {
    this.phone = phone;
    return this;
  }

  /**
   * Get phone
   * @return phone
   */
  @javax.annotation.Nullable
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }


  public UserDetails positionTitle(String positionTitle) {
    this.positionTitle = positionTitle;
    return this;
  }

  /**
   * Get positionTitle
   * @return positionTitle
   */
  @javax.annotation.Nullable
  public String getPositionTitle() {
    return positionTitle;
  }

  public void setPositionTitle(String positionTitle) {
    this.positionTitle = positionTitle;
  }


  public UserDetails roles(List<RoleDetails> roles) {
    this.roles = roles;
    return this;
  }

  public UserDetails addRolesItem(RoleDetails rolesItem) {
    if (this.roles == null) {
      this.roles = new ArrayList<>();
    }
    this.roles.add(rolesItem);
    return this;
  }

  /**
   * Get roles
   * @return roles
   */
  @javax.annotation.Nullable
  public List<RoleDetails> getRoles() {
    return roles;
  }

  public void setRoles(List<RoleDetails> roles) {
    this.roles = roles;
  }


  public UserDetails saturdayAvailableHours(Double saturdayAvailableHours) {
    this.saturdayAvailableHours = saturdayAvailableHours;
    return this;
  }

  /**
   * Get saturdayAvailableHours
   * @return saturdayAvailableHours
   */
  @javax.annotation.Nullable
  public Double getSaturdayAvailableHours() {
    return saturdayAvailableHours;
  }

  public void setSaturdayAvailableHours(Double saturdayAvailableHours) {
    this.saturdayAvailableHours = saturdayAvailableHours;
  }


  public UserDetails sundayAvailableHours(Double sundayAvailableHours) {
    this.sundayAvailableHours = sundayAvailableHours;
    return this;
  }

  /**
   * Get sundayAvailableHours
   * @return sundayAvailableHours
   */
  @javax.annotation.Nullable
  public Double getSundayAvailableHours() {
    return sundayAvailableHours;
  }

  public void setSundayAvailableHours(Double sundayAvailableHours) {
    this.sundayAvailableHours = sundayAvailableHours;
  }


  public UserDetails tags(List<UserTagDetails> tags) {
    this.tags = tags;
    return this;
  }

  public UserDetails addTagsItem(UserTagDetails tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List<UserTagDetails> getTags() {
    return tags;
  }

  public void setTags(List<UserTagDetails> tags) {
    this.tags = tags;
  }


  public UserDetails thursdayAvailableHours(Double thursdayAvailableHours) {
    this.thursdayAvailableHours = thursdayAvailableHours;
    return this;
  }

  /**
   * Get thursdayAvailableHours
   * @return thursdayAvailableHours
   */
  @javax.annotation.Nullable
  public Double getThursdayAvailableHours() {
    return thursdayAvailableHours;
  }

  public void setThursdayAvailableHours(Double thursdayAvailableHours) {
    this.thursdayAvailableHours = thursdayAvailableHours;
  }


  public UserDetails timeZone(String timeZone) {
    this.timeZone = timeZone;
    return this;
  }

  /**
   * Windows Timezone ID
   * @return timeZone
   */
  @javax.annotation.Nullable
  public String getTimeZone() {
    return timeZone;
  }

  public void setTimeZone(String timeZone) {
    this.timeZone = timeZone;
  }


  public UserDetails tuesdayAvailableHours(Double tuesdayAvailableHours) {
    this.tuesdayAvailableHours = tuesdayAvailableHours;
    return this;
  }

  /**
   * Get tuesdayAvailableHours
   * @return tuesdayAvailableHours
   */
  @javax.annotation.Nullable
  public Double getTuesdayAvailableHours() {
    return tuesdayAvailableHours;
  }

  public void setTuesdayAvailableHours(Double tuesdayAvailableHours) {
    this.tuesdayAvailableHours = tuesdayAvailableHours;
  }


  public UserDetails userID(Integer userID) {
    this.userID = userID;
    return this;
  }

  /**
   * Get userID
   * @return userID
   */
  @javax.annotation.Nullable
  public Integer getUserID() {
    return userID;
  }

  public void setUserID(Integer userID) {
    this.userID = userID;
  }


  public UserDetails wednesdayAvailableHours(Double wednesdayAvailableHours) {
    this.wednesdayAvailableHours = wednesdayAvailableHours;
    return this;
  }

  /**
   * Get wednesdayAvailableHours
   * @return wednesdayAvailableHours
   */
  @javax.annotation.Nullable
  public Double getWednesdayAvailableHours() {
    return wednesdayAvailableHours;
  }

  public void setWednesdayAvailableHours(Double wednesdayAvailableHours) {
    this.wednesdayAvailableHours = wednesdayAvailableHours;
  }


  public UserDetails isTeamMember(Boolean isTeamMember) {
    this.isTeamMember = isTeamMember;
    return this;
  }

  /**
   * Get isTeamMember
   * @return isTeamMember
   */
  @javax.annotation.Nullable
  public Boolean getIsTeamMember() {
    return isTeamMember;
  }

  public void setIsTeamMember(Boolean isTeamMember) {
    this.isTeamMember = isTeamMember;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserDetails userDetails = (UserDetails) o;
    return Objects.equals(this.accountIDFK, userDetails.accountIDFK) &&
        Objects.equals(this.companyIDFK, userDetails.companyIDFK) &&
        Objects.equals(this.companyName, userDetails.companyName) &&
        Objects.equals(this.defaultBillableRate, userDetails.defaultBillableRate) &&
        Objects.equals(this.defaultCostRate, userDetails.defaultCostRate) &&
        Objects.equals(this.email, userDetails.email) &&
        Objects.equals(this.firstname, userDetails.firstname) &&
        Objects.equals(this.fridayAvailableHours, userDetails.fridayAvailableHours) &&
        Objects.equals(this.iaNATimezone, userDetails.iaNATimezone) &&
        Objects.equals(this.lastname, userDetails.lastname) &&
        Objects.equals(this.mobile, userDetails.mobile) &&
        Objects.equals(this.mondayAvailableHours, userDetails.mondayAvailableHours) &&
        Objects.equals(this.phone, userDetails.phone) &&
        Objects.equals(this.positionTitle, userDetails.positionTitle) &&
        Objects.equals(this.roles, userDetails.roles) &&
        Objects.equals(this.saturdayAvailableHours, userDetails.saturdayAvailableHours) &&
        Objects.equals(this.sundayAvailableHours, userDetails.sundayAvailableHours) &&
        Objects.equals(this.tags, userDetails.tags) &&
        Objects.equals(this.thursdayAvailableHours, userDetails.thursdayAvailableHours) &&
        Objects.equals(this.timeZone, userDetails.timeZone) &&
        Objects.equals(this.tuesdayAvailableHours, userDetails.tuesdayAvailableHours) &&
        Objects.equals(this.userID, userDetails.userID) &&
        Objects.equals(this.wednesdayAvailableHours, userDetails.wednesdayAvailableHours) &&
        Objects.equals(this.isTeamMember, userDetails.isTeamMember);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountIDFK, companyIDFK, companyName, defaultBillableRate, defaultCostRate, email, firstname, fridayAvailableHours, iaNATimezone, lastname, mobile, mondayAvailableHours, phone, positionTitle, roles, saturdayAvailableHours, sundayAvailableHours, tags, thursdayAvailableHours, timeZone, tuesdayAvailableHours, userID, wednesdayAvailableHours, isTeamMember);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserDetails {\n");
    sb.append("    accountIDFK: ").append(toIndentedString(accountIDFK)).append("\n");
    sb.append("    companyIDFK: ").append(toIndentedString(companyIDFK)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    defaultBillableRate: ").append(toIndentedString(defaultBillableRate)).append("\n");
    sb.append("    defaultCostRate: ").append(toIndentedString(defaultCostRate)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    firstname: ").append(toIndentedString(firstname)).append("\n");
    sb.append("    fridayAvailableHours: ").append(toIndentedString(fridayAvailableHours)).append("\n");
    sb.append("    iaNATimezone: ").append(toIndentedString(iaNATimezone)).append("\n");
    sb.append("    lastname: ").append(toIndentedString(lastname)).append("\n");
    sb.append("    mobile: ").append(toIndentedString(mobile)).append("\n");
    sb.append("    mondayAvailableHours: ").append(toIndentedString(mondayAvailableHours)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    positionTitle: ").append(toIndentedString(positionTitle)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("    saturdayAvailableHours: ").append(toIndentedString(saturdayAvailableHours)).append("\n");
    sb.append("    sundayAvailableHours: ").append(toIndentedString(sundayAvailableHours)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    thursdayAvailableHours: ").append(toIndentedString(thursdayAvailableHours)).append("\n");
    sb.append("    timeZone: ").append(toIndentedString(timeZone)).append("\n");
    sb.append("    tuesdayAvailableHours: ").append(toIndentedString(tuesdayAvailableHours)).append("\n");
    sb.append("    userID: ").append(toIndentedString(userID)).append("\n");
    sb.append("    wednesdayAvailableHours: ").append(toIndentedString(wednesdayAvailableHours)).append("\n");
    sb.append("    isTeamMember: ").append(toIndentedString(isTeamMember)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AccountIDFK");
    openapiFields.add("CompanyIDFK");
    openapiFields.add("CompanyName");
    openapiFields.add("DefaultBillableRate");
    openapiFields.add("DefaultCostRate");
    openapiFields.add("Email");
    openapiFields.add("Firstname");
    openapiFields.add("FridayAvailableHours");
    openapiFields.add("IANATimezone");
    openapiFields.add("Lastname");
    openapiFields.add("Mobile");
    openapiFields.add("MondayAvailableHours");
    openapiFields.add("Phone");
    openapiFields.add("PositionTitle");
    openapiFields.add("Roles");
    openapiFields.add("SaturdayAvailableHours");
    openapiFields.add("SundayAvailableHours");
    openapiFields.add("Tags");
    openapiFields.add("ThursdayAvailableHours");
    openapiFields.add("TimeZone");
    openapiFields.add("TuesdayAvailableHours");
    openapiFields.add("UserID");
    openapiFields.add("WednesdayAvailableHours");
    openapiFields.add("isTeamMember");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UserDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UserDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UserDetails is not found in the empty JSON string", UserDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UserDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UserDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("CompanyName") != null && !jsonObj.get("CompanyName").isJsonNull()) && !jsonObj.get("CompanyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CompanyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CompanyName").toString()));
      }
      if ((jsonObj.get("Email") != null && !jsonObj.get("Email").isJsonNull()) && !jsonObj.get("Email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Email").toString()));
      }
      if ((jsonObj.get("Firstname") != null && !jsonObj.get("Firstname").isJsonNull()) && !jsonObj.get("Firstname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Firstname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Firstname").toString()));
      }
      if ((jsonObj.get("IANATimezone") != null && !jsonObj.get("IANATimezone").isJsonNull()) && !jsonObj.get("IANATimezone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `IANATimezone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("IANATimezone").toString()));
      }
      if ((jsonObj.get("Lastname") != null && !jsonObj.get("Lastname").isJsonNull()) && !jsonObj.get("Lastname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Lastname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Lastname").toString()));
      }
      if ((jsonObj.get("Mobile") != null && !jsonObj.get("Mobile").isJsonNull()) && !jsonObj.get("Mobile").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mobile` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mobile").toString()));
      }
      if ((jsonObj.get("Phone") != null && !jsonObj.get("Phone").isJsonNull()) && !jsonObj.get("Phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Phone").toString()));
      }
      if ((jsonObj.get("PositionTitle") != null && !jsonObj.get("PositionTitle").isJsonNull()) && !jsonObj.get("PositionTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PositionTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PositionTitle").toString()));
      }
      if (jsonObj.get("Roles") != null && !jsonObj.get("Roles").isJsonNull()) {
        JsonArray jsonArrayroles = jsonObj.getAsJsonArray("Roles");
        if (jsonArrayroles != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Roles").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Roles` to be an array in the JSON string but got `%s`", jsonObj.get("Roles").toString()));
          }

          // validate the optional field `Roles` (array)
          for (int i = 0; i < jsonArrayroles.size(); i++) {
            RoleDetails.validateJsonElement(jsonArrayroles.get(i));
          };
        }
      }
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        JsonArray jsonArraytags = jsonObj.getAsJsonArray("Tags");
        if (jsonArraytags != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Tags").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Tags` to be an array in the JSON string but got `%s`", jsonObj.get("Tags").toString()));
          }

          // validate the optional field `Tags` (array)
          for (int i = 0; i < jsonArraytags.size(); i++) {
            UserTagDetails.validateJsonElement(jsonArraytags.get(i));
          };
        }
      }
      if ((jsonObj.get("TimeZone") != null && !jsonObj.get("TimeZone").isJsonNull()) && !jsonObj.get("TimeZone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TimeZone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TimeZone").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UserDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UserDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UserDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UserDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<UserDetails>() {
           @Override
           public void write(JsonWriter out, UserDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UserDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UserDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UserDetails
   * @throws IOException if the JSON string is invalid with respect to UserDetails
   */
  public static UserDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UserDetails.class);
  }

  /**
   * Convert an instance of UserDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

