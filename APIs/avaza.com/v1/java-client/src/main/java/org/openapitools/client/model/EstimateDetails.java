/*
 * Avaza API Documentation
 * Welcome to the autogenerated documentation & test tool for Avaza's API. <br/><br/><strong>API Security & Authentication</strong><br/>Authentication options include OAuth2 Implicit and Authorization Code flows, and Personal Access Token. All connections should be encrypted over SSL/TLS <br/><br/>You can set up and manage your api authentication credentials from within your Avaza account. (requires Administrator permissions on your Avaza account).<br/><br/> OAuth2 Authorization endpoint: https://any.avaza.com/oauth2/authorize  <br/>OAuth2 Token endpoint: https://any.avaza.com/oauth2/token<br/>Base URL for subsequent API Requests: https://api.avaza.com/ <br/><br/>Blogpost about authenticating with Avaza's API:  https://www.avaza.com/avaza-api-oauth2-authentication/ <br/>Blogpost on using Avaza's webhooks: https://www.avaza.com/avaza-api-webhook-notifications/<br/>The OAuth flow currently issues Access Tokens that last 1 day, and Refresh tokens that last 180 days<br/>The Api respects the security Roles assigned to the authenticating Avaza user and filters the data return appropriately. <br/><br><strong>Support</strong><br/>For API Support, and to request access please contact Avaza Support Team via our support chat. <br/><br/><strong>User Contributed Libraries:</strong><br/>Graciously contributed by 3rd party users like you. <br/>Note these are not tested or endorsesd by Avaza. We encourage you to review before use, and use at own risk.<br/> <ul><li> - <a target='blank' href='https://packagist.org/packages/debiprasad/oauth2-avaza'>PHP OAuth Client Package for Azava API (by Debiprasad Sahoo)</a></li></ul>
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.EstimateLineItemDetails;
import org.openapitools.client.model.EstimateLinks;
import org.openapitools.client.model.IssuerDetails;
import org.openapitools.client.model.RecipientDetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * EstimateDetails
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:11:56.431364-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class EstimateDetails {
  public static final String SERIALIZED_NAME_ACCOUNT_I_D_F_K = "AccountIDFK";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_I_D_F_K)
  private Integer accountIDFK;

  public static final String SERIALIZED_NAME_BALANCE = "Balance";
  @SerializedName(SERIALIZED_NAME_BALANCE)
  private Double balance;

  public static final String SERIALIZED_NAME_COMPANY_I_D_F_K = "CompanyIDFK";
  @SerializedName(SERIALIZED_NAME_COMPANY_I_D_F_K)
  private Integer companyIDFK;

  public static final String SERIALIZED_NAME_COMPANY_NAME = "CompanyName";
  @SerializedName(SERIALIZED_NAME_COMPANY_NAME)
  private String companyName;

  public static final String SERIALIZED_NAME_CURRENCY_CODE = "CurrencyCode";
  @SerializedName(SERIALIZED_NAME_CURRENCY_CODE)
  private String currencyCode;

  public static final String SERIALIZED_NAME_DATE_CREATED = "DateCreated";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_DATE_ISSUED = "DateIssued";
  @SerializedName(SERIALIZED_NAME_DATE_ISSUED)
  private OffsetDateTime dateIssued;

  public static final String SERIALIZED_NAME_DATE_SENT = "DateSent";
  @SerializedName(SERIALIZED_NAME_DATE_SENT)
  private OffsetDateTime dateSent;

  public static final String SERIALIZED_NAME_DATE_UPDATED = "DateUpdated";
  @SerializedName(SERIALIZED_NAME_DATE_UPDATED)
  private OffsetDateTime dateUpdated;

  public static final String SERIALIZED_NAME_DUE_DATE = "DueDate";
  @SerializedName(SERIALIZED_NAME_DUE_DATE)
  private OffsetDateTime dueDate;

  public static final String SERIALIZED_NAME_ESTIMATE_I_D = "EstimateID";
  @SerializedName(SERIALIZED_NAME_ESTIMATE_I_D)
  private Long estimateID;

  public static final String SERIALIZED_NAME_ESTIMATE_ITEM_NUMBER = "EstimateItemNumber";
  @SerializedName(SERIALIZED_NAME_ESTIMATE_ITEM_NUMBER)
  private String estimateItemNumber;

  public static final String SERIALIZED_NAME_ESTIMATE_PREFIX = "EstimatePrefix";
  @SerializedName(SERIALIZED_NAME_ESTIMATE_PREFIX)
  private String estimatePrefix;

  public static final String SERIALIZED_NAME_ESTIMATE_STATUS_CODE = "EstimateStatusCode";
  @SerializedName(SERIALIZED_NAME_ESTIMATE_STATUS_CODE)
  private String estimateStatusCode;

  public static final String SERIALIZED_NAME_ESTIMATE_TAX_CONFIG_CODE = "EstimateTaxConfigCode";
  @SerializedName(SERIALIZED_NAME_ESTIMATE_TAX_CONFIG_CODE)
  private String estimateTaxConfigCode;

  public static final String SERIALIZED_NAME_EXCHANGE_RATE = "ExchangeRate";
  @SerializedName(SERIALIZED_NAME_EXCHANGE_RATE)
  private Double exchangeRate;

  public static final String SERIALIZED_NAME_ISSUER = "Issuer";
  @SerializedName(SERIALIZED_NAME_ISSUER)
  private IssuerDetails issuer;

  public static final String SERIALIZED_NAME_LINE_ITEMS = "LineItems";
  @SerializedName(SERIALIZED_NAME_LINE_ITEMS)
  private List<EstimateLineItemDetails> lineItems = new ArrayList<>();

  public static final String SERIALIZED_NAME_LINKS = "Links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private EstimateLinks links;

  public static final String SERIALIZED_NAME_NOTES = "Notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private String notes;

  public static final String SERIALIZED_NAME_RECIPIENT = "Recipient";
  @SerializedName(SERIALIZED_NAME_RECIPIENT)
  private RecipientDetails recipient;

  public static final String SERIALIZED_NAME_SUBJECT = "Subject";
  @SerializedName(SERIALIZED_NAME_SUBJECT)
  private String subject;

  public static final String SERIALIZED_NAME_TAX_AMOUNT = "TaxAmount";
  @SerializedName(SERIALIZED_NAME_TAX_AMOUNT)
  private Double taxAmount;

  public static final String SERIALIZED_NAME_TOTAL_AMOUNT = "TotalAmount";
  @SerializedName(SERIALIZED_NAME_TOTAL_AMOUNT)
  private Double totalAmount;

  public EstimateDetails() {
  }

  public EstimateDetails accountIDFK(Integer accountIDFK) {
    this.accountIDFK = accountIDFK;
    return this;
  }

  /**
   * Get accountIDFK
   * @return accountIDFK
   */
  @javax.annotation.Nullable
  public Integer getAccountIDFK() {
    return accountIDFK;
  }

  public void setAccountIDFK(Integer accountIDFK) {
    this.accountIDFK = accountIDFK;
  }


  public EstimateDetails balance(Double balance) {
    this.balance = balance;
    return this;
  }

  /**
   * Get balance
   * @return balance
   */
  @javax.annotation.Nullable
  public Double getBalance() {
    return balance;
  }

  public void setBalance(Double balance) {
    this.balance = balance;
  }


  public EstimateDetails companyIDFK(Integer companyIDFK) {
    this.companyIDFK = companyIDFK;
    return this;
  }

  /**
   * Get companyIDFK
   * @return companyIDFK
   */
  @javax.annotation.Nullable
  public Integer getCompanyIDFK() {
    return companyIDFK;
  }

  public void setCompanyIDFK(Integer companyIDFK) {
    this.companyIDFK = companyIDFK;
  }


  public EstimateDetails companyName(String companyName) {
    this.companyName = companyName;
    return this;
  }

  /**
   * Get companyName
   * @return companyName
   */
  @javax.annotation.Nullable
  public String getCompanyName() {
    return companyName;
  }

  public void setCompanyName(String companyName) {
    this.companyName = companyName;
  }


  public EstimateDetails currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

  /**
   * Get currencyCode
   * @return currencyCode
   */
  @javax.annotation.Nullable
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }


  public EstimateDetails dateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * Get dateCreated
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public EstimateDetails dateIssued(OffsetDateTime dateIssued) {
    this.dateIssued = dateIssued;
    return this;
  }

  /**
   * Get dateIssued
   * @return dateIssued
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateIssued() {
    return dateIssued;
  }

  public void setDateIssued(OffsetDateTime dateIssued) {
    this.dateIssued = dateIssued;
  }


  public EstimateDetails dateSent(OffsetDateTime dateSent) {
    this.dateSent = dateSent;
    return this;
  }

  /**
   * Get dateSent
   * @return dateSent
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateSent() {
    return dateSent;
  }

  public void setDateSent(OffsetDateTime dateSent) {
    this.dateSent = dateSent;
  }


  public EstimateDetails dateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
    return this;
  }

  /**
   * Get dateUpdated
   * @return dateUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
  }


  public EstimateDetails dueDate(OffsetDateTime dueDate) {
    this.dueDate = dueDate;
    return this;
  }

  /**
   * Get dueDate
   * @return dueDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDueDate() {
    return dueDate;
  }

  public void setDueDate(OffsetDateTime dueDate) {
    this.dueDate = dueDate;
  }


  public EstimateDetails estimateID(Long estimateID) {
    this.estimateID = estimateID;
    return this;
  }

  /**
   * Get estimateID
   * @return estimateID
   */
  @javax.annotation.Nullable
  public Long getEstimateID() {
    return estimateID;
  }

  public void setEstimateID(Long estimateID) {
    this.estimateID = estimateID;
  }


  public EstimateDetails estimateItemNumber(String estimateItemNumber) {
    this.estimateItemNumber = estimateItemNumber;
    return this;
  }

  /**
   * Get estimateItemNumber
   * @return estimateItemNumber
   */
  @javax.annotation.Nullable
  public String getEstimateItemNumber() {
    return estimateItemNumber;
  }

  public void setEstimateItemNumber(String estimateItemNumber) {
    this.estimateItemNumber = estimateItemNumber;
  }


  public EstimateDetails estimatePrefix(String estimatePrefix) {
    this.estimatePrefix = estimatePrefix;
    return this;
  }

  /**
   * Get estimatePrefix
   * @return estimatePrefix
   */
  @javax.annotation.Nullable
  public String getEstimatePrefix() {
    return estimatePrefix;
  }

  public void setEstimatePrefix(String estimatePrefix) {
    this.estimatePrefix = estimatePrefix;
  }


  public EstimateDetails estimateStatusCode(String estimateStatusCode) {
    this.estimateStatusCode = estimateStatusCode;
    return this;
  }

  /**
   * Get estimateStatusCode
   * @return estimateStatusCode
   */
  @javax.annotation.Nullable
  public String getEstimateStatusCode() {
    return estimateStatusCode;
  }

  public void setEstimateStatusCode(String estimateStatusCode) {
    this.estimateStatusCode = estimateStatusCode;
  }


  public EstimateDetails estimateTaxConfigCode(String estimateTaxConfigCode) {
    this.estimateTaxConfigCode = estimateTaxConfigCode;
    return this;
  }

  /**
   * Get estimateTaxConfigCode
   * @return estimateTaxConfigCode
   */
  @javax.annotation.Nullable
  public String getEstimateTaxConfigCode() {
    return estimateTaxConfigCode;
  }

  public void setEstimateTaxConfigCode(String estimateTaxConfigCode) {
    this.estimateTaxConfigCode = estimateTaxConfigCode;
  }


  public EstimateDetails exchangeRate(Double exchangeRate) {
    this.exchangeRate = exchangeRate;
    return this;
  }

  /**
   * Get exchangeRate
   * @return exchangeRate
   */
  @javax.annotation.Nullable
  public Double getExchangeRate() {
    return exchangeRate;
  }

  public void setExchangeRate(Double exchangeRate) {
    this.exchangeRate = exchangeRate;
  }


  public EstimateDetails issuer(IssuerDetails issuer) {
    this.issuer = issuer;
    return this;
  }

  /**
   * Get issuer
   * @return issuer
   */
  @javax.annotation.Nullable
  public IssuerDetails getIssuer() {
    return issuer;
  }

  public void setIssuer(IssuerDetails issuer) {
    this.issuer = issuer;
  }


  public EstimateDetails lineItems(List<EstimateLineItemDetails> lineItems) {
    this.lineItems = lineItems;
    return this;
  }

  public EstimateDetails addLineItemsItem(EstimateLineItemDetails lineItemsItem) {
    if (this.lineItems == null) {
      this.lineItems = new ArrayList<>();
    }
    this.lineItems.add(lineItemsItem);
    return this;
  }

  /**
   * Get lineItems
   * @return lineItems
   */
  @javax.annotation.Nullable
  public List<EstimateLineItemDetails> getLineItems() {
    return lineItems;
  }

  public void setLineItems(List<EstimateLineItemDetails> lineItems) {
    this.lineItems = lineItems;
  }


  public EstimateDetails links(EstimateLinks links) {
    this.links = links;
    return this;
  }

  /**
   * Get links
   * @return links
   */
  @javax.annotation.Nullable
  public EstimateLinks getLinks() {
    return links;
  }

  public void setLinks(EstimateLinks links) {
    this.links = links;
  }


  public EstimateDetails notes(String notes) {
    this.notes = notes;
    return this;
  }

  /**
   * Get notes
   * @return notes
   */
  @javax.annotation.Nullable
  public String getNotes() {
    return notes;
  }

  public void setNotes(String notes) {
    this.notes = notes;
  }


  public EstimateDetails recipient(RecipientDetails recipient) {
    this.recipient = recipient;
    return this;
  }

  /**
   * Get recipient
   * @return recipient
   */
  @javax.annotation.Nullable
  public RecipientDetails getRecipient() {
    return recipient;
  }

  public void setRecipient(RecipientDetails recipient) {
    this.recipient = recipient;
  }


  public EstimateDetails subject(String subject) {
    this.subject = subject;
    return this;
  }

  /**
   * Get subject
   * @return subject
   */
  @javax.annotation.Nullable
  public String getSubject() {
    return subject;
  }

  public void setSubject(String subject) {
    this.subject = subject;
  }


  public EstimateDetails taxAmount(Double taxAmount) {
    this.taxAmount = taxAmount;
    return this;
  }

  /**
   * Get taxAmount
   * @return taxAmount
   */
  @javax.annotation.Nullable
  public Double getTaxAmount() {
    return taxAmount;
  }

  public void setTaxAmount(Double taxAmount) {
    this.taxAmount = taxAmount;
  }


  public EstimateDetails totalAmount(Double totalAmount) {
    this.totalAmount = totalAmount;
    return this;
  }

  /**
   * Get totalAmount
   * @return totalAmount
   */
  @javax.annotation.Nullable
  public Double getTotalAmount() {
    return totalAmount;
  }

  public void setTotalAmount(Double totalAmount) {
    this.totalAmount = totalAmount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EstimateDetails estimateDetails = (EstimateDetails) o;
    return Objects.equals(this.accountIDFK, estimateDetails.accountIDFK) &&
        Objects.equals(this.balance, estimateDetails.balance) &&
        Objects.equals(this.companyIDFK, estimateDetails.companyIDFK) &&
        Objects.equals(this.companyName, estimateDetails.companyName) &&
        Objects.equals(this.currencyCode, estimateDetails.currencyCode) &&
        Objects.equals(this.dateCreated, estimateDetails.dateCreated) &&
        Objects.equals(this.dateIssued, estimateDetails.dateIssued) &&
        Objects.equals(this.dateSent, estimateDetails.dateSent) &&
        Objects.equals(this.dateUpdated, estimateDetails.dateUpdated) &&
        Objects.equals(this.dueDate, estimateDetails.dueDate) &&
        Objects.equals(this.estimateID, estimateDetails.estimateID) &&
        Objects.equals(this.estimateItemNumber, estimateDetails.estimateItemNumber) &&
        Objects.equals(this.estimatePrefix, estimateDetails.estimatePrefix) &&
        Objects.equals(this.estimateStatusCode, estimateDetails.estimateStatusCode) &&
        Objects.equals(this.estimateTaxConfigCode, estimateDetails.estimateTaxConfigCode) &&
        Objects.equals(this.exchangeRate, estimateDetails.exchangeRate) &&
        Objects.equals(this.issuer, estimateDetails.issuer) &&
        Objects.equals(this.lineItems, estimateDetails.lineItems) &&
        Objects.equals(this.links, estimateDetails.links) &&
        Objects.equals(this.notes, estimateDetails.notes) &&
        Objects.equals(this.recipient, estimateDetails.recipient) &&
        Objects.equals(this.subject, estimateDetails.subject) &&
        Objects.equals(this.taxAmount, estimateDetails.taxAmount) &&
        Objects.equals(this.totalAmount, estimateDetails.totalAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountIDFK, balance, companyIDFK, companyName, currencyCode, dateCreated, dateIssued, dateSent, dateUpdated, dueDate, estimateID, estimateItemNumber, estimatePrefix, estimateStatusCode, estimateTaxConfigCode, exchangeRate, issuer, lineItems, links, notes, recipient, subject, taxAmount, totalAmount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EstimateDetails {\n");
    sb.append("    accountIDFK: ").append(toIndentedString(accountIDFK)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    companyIDFK: ").append(toIndentedString(companyIDFK)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateIssued: ").append(toIndentedString(dateIssued)).append("\n");
    sb.append("    dateSent: ").append(toIndentedString(dateSent)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
    sb.append("    estimateID: ").append(toIndentedString(estimateID)).append("\n");
    sb.append("    estimateItemNumber: ").append(toIndentedString(estimateItemNumber)).append("\n");
    sb.append("    estimatePrefix: ").append(toIndentedString(estimatePrefix)).append("\n");
    sb.append("    estimateStatusCode: ").append(toIndentedString(estimateStatusCode)).append("\n");
    sb.append("    estimateTaxConfigCode: ").append(toIndentedString(estimateTaxConfigCode)).append("\n");
    sb.append("    exchangeRate: ").append(toIndentedString(exchangeRate)).append("\n");
    sb.append("    issuer: ").append(toIndentedString(issuer)).append("\n");
    sb.append("    lineItems: ").append(toIndentedString(lineItems)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    recipient: ").append(toIndentedString(recipient)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    taxAmount: ").append(toIndentedString(taxAmount)).append("\n");
    sb.append("    totalAmount: ").append(toIndentedString(totalAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AccountIDFK");
    openapiFields.add("Balance");
    openapiFields.add("CompanyIDFK");
    openapiFields.add("CompanyName");
    openapiFields.add("CurrencyCode");
    openapiFields.add("DateCreated");
    openapiFields.add("DateIssued");
    openapiFields.add("DateSent");
    openapiFields.add("DateUpdated");
    openapiFields.add("DueDate");
    openapiFields.add("EstimateID");
    openapiFields.add("EstimateItemNumber");
    openapiFields.add("EstimatePrefix");
    openapiFields.add("EstimateStatusCode");
    openapiFields.add("EstimateTaxConfigCode");
    openapiFields.add("ExchangeRate");
    openapiFields.add("Issuer");
    openapiFields.add("LineItems");
    openapiFields.add("Links");
    openapiFields.add("Notes");
    openapiFields.add("Recipient");
    openapiFields.add("Subject");
    openapiFields.add("TaxAmount");
    openapiFields.add("TotalAmount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EstimateDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EstimateDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EstimateDetails is not found in the empty JSON string", EstimateDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EstimateDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EstimateDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("CompanyName") != null && !jsonObj.get("CompanyName").isJsonNull()) && !jsonObj.get("CompanyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CompanyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CompanyName").toString()));
      }
      if ((jsonObj.get("CurrencyCode") != null && !jsonObj.get("CurrencyCode").isJsonNull()) && !jsonObj.get("CurrencyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CurrencyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CurrencyCode").toString()));
      }
      if ((jsonObj.get("EstimateItemNumber") != null && !jsonObj.get("EstimateItemNumber").isJsonNull()) && !jsonObj.get("EstimateItemNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `EstimateItemNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("EstimateItemNumber").toString()));
      }
      if ((jsonObj.get("EstimatePrefix") != null && !jsonObj.get("EstimatePrefix").isJsonNull()) && !jsonObj.get("EstimatePrefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `EstimatePrefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("EstimatePrefix").toString()));
      }
      if ((jsonObj.get("EstimateStatusCode") != null && !jsonObj.get("EstimateStatusCode").isJsonNull()) && !jsonObj.get("EstimateStatusCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `EstimateStatusCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("EstimateStatusCode").toString()));
      }
      if ((jsonObj.get("EstimateTaxConfigCode") != null && !jsonObj.get("EstimateTaxConfigCode").isJsonNull()) && !jsonObj.get("EstimateTaxConfigCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `EstimateTaxConfigCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("EstimateTaxConfigCode").toString()));
      }
      // validate the optional field `Issuer`
      if (jsonObj.get("Issuer") != null && !jsonObj.get("Issuer").isJsonNull()) {
        IssuerDetails.validateJsonElement(jsonObj.get("Issuer"));
      }
      if (jsonObj.get("LineItems") != null && !jsonObj.get("LineItems").isJsonNull()) {
        JsonArray jsonArraylineItems = jsonObj.getAsJsonArray("LineItems");
        if (jsonArraylineItems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("LineItems").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `LineItems` to be an array in the JSON string but got `%s`", jsonObj.get("LineItems").toString()));
          }

          // validate the optional field `LineItems` (array)
          for (int i = 0; i < jsonArraylineItems.size(); i++) {
            EstimateLineItemDetails.validateJsonElement(jsonArraylineItems.get(i));
          };
        }
      }
      // validate the optional field `Links`
      if (jsonObj.get("Links") != null && !jsonObj.get("Links").isJsonNull()) {
        EstimateLinks.validateJsonElement(jsonObj.get("Links"));
      }
      if ((jsonObj.get("Notes") != null && !jsonObj.get("Notes").isJsonNull()) && !jsonObj.get("Notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Notes").toString()));
      }
      // validate the optional field `Recipient`
      if (jsonObj.get("Recipient") != null && !jsonObj.get("Recipient").isJsonNull()) {
        RecipientDetails.validateJsonElement(jsonObj.get("Recipient"));
      }
      if ((jsonObj.get("Subject") != null && !jsonObj.get("Subject").isJsonNull()) && !jsonObj.get("Subject").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Subject` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Subject").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EstimateDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EstimateDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EstimateDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EstimateDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<EstimateDetails>() {
           @Override
           public void write(JsonWriter out, EstimateDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EstimateDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EstimateDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EstimateDetails
   * @throws IOException if the JSON string is invalid with respect to EstimateDetails
   */
  public static EstimateDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EstimateDetails.class);
  }

  /**
   * Convert an instance of EstimateDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

