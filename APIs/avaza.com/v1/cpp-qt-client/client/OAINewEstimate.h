/**
 * Avaza API Documentation
 * Welcome to the autogenerated documentation & test tool for Avaza's API. <br/><br/><strong>API Security & Authentication</strong><br/>Authentication options include OAuth2 Implicit and Authorization Code flows, and Personal Access Token. All connections should be encrypted over SSL/TLS <br/><br/>You can set up and manage your api authentication credentials from within your Avaza account. (requires Administrator permissions on your Avaza account).<br/><br/> OAuth2 Authorization endpoint: https://any.avaza.com/oauth2/authorize  <br/>OAuth2 Token endpoint: https://any.avaza.com/oauth2/token<br/>Base URL for subsequent API Requests: https://api.avaza.com/ <br/><br/>Blogpost about authenticating with Avaza's API:  https://www.avaza.com/avaza-api-oauth2-authentication/ <br/>Blogpost on using Avaza's webhooks: https://www.avaza.com/avaza-api-webhook-notifications/<br/>The OAuth flow currently issues Access Tokens that last 1 day, and Refresh tokens that last 180 days<br/>The Api respects the security Roles assigned to the authenticating Avaza user and filters the data return appropriately. <br/><br><strong>Support</strong><br/>For API Support, and to request access please contact Avaza Support Team via our support chat. <br/><br/><strong>User Contributed Libraries:</strong><br/>Graciously contributed by 3rd party users like you. <br/>Note these are not tested or endorsesd by Avaza. We encourage you to review before use, and use at own risk.<br/> <ul><li> - <a target='blank' href='https://packagist.org/packages/debiprasad/oauth2-avaza'>PHP OAuth Client Package for Azava API (by Debiprasad Sahoo)</a></li></ul>
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINewEstimate.h
 *
 * New Estimate to be created
 */

#ifndef OAINewEstimate_H
#define OAINewEstimate_H

#include <QJsonObject>

#include "OAINewEstimateLineItem.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINewEstimateLineItem;

class OAINewEstimate : public OAIObject {
public:
    OAINewEstimate();
    OAINewEstimate(QString json);
    ~OAINewEstimate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getCompanyIdfk() const;
    void setCompanyIdfk(const qint32 &company_idfk);
    bool is_company_idfk_Set() const;
    bool is_company_idfk_Valid() const;

    QString getCompanyName() const;
    void setCompanyName(const QString &company_name);
    bool is_company_name_Set() const;
    bool is_company_name_Valid() const;

    QString getCurrencyCode() const;
    void setCurrencyCode(const QString &currency_code);
    bool is_currency_code_Set() const;
    bool is_currency_code_Valid() const;

    QString getCustomerPoNumber() const;
    void setCustomerPoNumber(const QString &customer_po_number);
    bool is_customer_po_number_Set() const;
    bool is_customer_po_number_Valid() const;

    QDateTime getDateIssued() const;
    void setDateIssued(const QDateTime &date_issued);
    bool is_date_issued_Set() const;
    bool is_date_issued_Valid() const;

    QDateTime getDueDate() const;
    void setDueDate(const QDateTime &due_date);
    bool is_due_date_Set() const;
    bool is_due_date_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getEstimateNumber() const;
    void setEstimateNumber(const QString &estimate_number);
    bool is_estimate_number_Set() const;
    bool is_estimate_number_Valid() const;

    QString getEstimatePrefix() const;
    void setEstimatePrefix(const QString &estimate_prefix);
    bool is_estimate_prefix_Set() const;
    bool is_estimate_prefix_Valid() const;

    QString getEstimateTaxConfigCode() const;
    void setEstimateTaxConfigCode(const QString &estimate_tax_config_code);
    bool is_estimate_tax_config_code_Set() const;
    bool is_estimate_tax_config_code_Valid() const;

    double getExchangeRate() const;
    void setExchangeRate(const double &exchange_rate);
    bool is_exchange_rate_Set() const;
    bool is_exchange_rate_Valid() const;

    QString getFirstname() const;
    void setFirstname(const QString &firstname);
    bool is_firstname_Set() const;
    bool is_firstname_Valid() const;

    qint32 getInvoiceTemplateIdfk() const;
    void setInvoiceTemplateIdfk(const qint32 &invoice_template_idfk);
    bool is_invoice_template_idfk_Set() const;
    bool is_invoice_template_idfk_Valid() const;

    QString getLastname() const;
    void setLastname(const QString &lastname);
    bool is_lastname_Set() const;
    bool is_lastname_Valid() const;

    QList<OAINewEstimateLineItem> getLineItems() const;
    void setLineItems(const QList<OAINewEstimateLineItem> &line_items);
    bool is_line_items_Set() const;
    bool is_line_items_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    QString getSubject() const;
    void setSubject(const QString &subject);
    bool is_subject_Set() const;
    bool is_subject_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_company_idfk;
    bool m_company_idfk_isSet;
    bool m_company_idfk_isValid;

    QString m_company_name;
    bool m_company_name_isSet;
    bool m_company_name_isValid;

    QString m_currency_code;
    bool m_currency_code_isSet;
    bool m_currency_code_isValid;

    QString m_customer_po_number;
    bool m_customer_po_number_isSet;
    bool m_customer_po_number_isValid;

    QDateTime m_date_issued;
    bool m_date_issued_isSet;
    bool m_date_issued_isValid;

    QDateTime m_due_date;
    bool m_due_date_isSet;
    bool m_due_date_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_estimate_number;
    bool m_estimate_number_isSet;
    bool m_estimate_number_isValid;

    QString m_estimate_prefix;
    bool m_estimate_prefix_isSet;
    bool m_estimate_prefix_isValid;

    QString m_estimate_tax_config_code;
    bool m_estimate_tax_config_code_isSet;
    bool m_estimate_tax_config_code_isValid;

    double m_exchange_rate;
    bool m_exchange_rate_isSet;
    bool m_exchange_rate_isValid;

    QString m_firstname;
    bool m_firstname_isSet;
    bool m_firstname_isValid;

    qint32 m_invoice_template_idfk;
    bool m_invoice_template_idfk_isSet;
    bool m_invoice_template_idfk_isValid;

    QString m_lastname;
    bool m_lastname_isSet;
    bool m_lastname_isValid;

    QList<OAINewEstimateLineItem> m_line_items;
    bool m_line_items_isSet;
    bool m_line_items_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    QString m_subject;
    bool m_subject_isSet;
    bool m_subject_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINewEstimate)

#endif // OAINewEstimate_H
