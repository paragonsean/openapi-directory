/**
 * Avaza API Documentation
 * Welcome to the autogenerated documentation & test tool for Avaza's API. <br/><br/><strong>API Security & Authentication</strong><br/>Authentication options include OAuth2 Implicit and Authorization Code flows, and Personal Access Token. All connections should be encrypted over SSL/TLS <br/><br/>You can set up and manage your api authentication credentials from within your Avaza account. (requires Administrator permissions on your Avaza account).<br/><br/> OAuth2 Authorization endpoint: https://any.avaza.com/oauth2/authorize  <br/>OAuth2 Token endpoint: https://any.avaza.com/oauth2/token<br/>Base URL for subsequent API Requests: https://api.avaza.com/ <br/><br/>Blogpost about authenticating with Avaza's API:  https://www.avaza.com/avaza-api-oauth2-authentication/ <br/>Blogpost on using Avaza's webhooks: https://www.avaza.com/avaza-api-webhook-notifications/<br/>The OAuth flow currently issues Access Tokens that last 1 day, and Refresh tokens that last 180 days<br/>The Api respects the security Roles assigned to the authenticating Avaza user and filters the data return appropriately. <br/><br><strong>Support</strong><br/>For API Support, and to request access please contact Avaza Support Team via our support chat. <br/><br/><strong>User Contributed Libraries:</strong><br/>Graciously contributed by 3rd party users like you. <br/>Note these are not tested or endorsesd by Avaza. We encourage you to review before use, and use at own risk.<br/> <ul><li> - <a target='blank' href='https://packagist.org/packages/debiprasad/oauth2-avaza'>PHP OAuth Client Package for Azava API (by Debiprasad Sahoo)</a></li></ul>
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINewTimesheet.h
 *
 * 
 */

#ifndef OAINewTimesheet_H
#define OAINewTimesheet_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINewTimesheet : public OAIObject {
public:
    OAINewTimesheet();
    OAINewTimesheet(QString json);
    ~OAINewTimesheet() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCustomMetadata() const;
    void setCustomMetadata(const QString &custom_metadata);
    bool is_custom_metadata_Set() const;
    bool is_custom_metadata_Valid() const;

    double getDuration() const;
    void setDuration(const double &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    QDateTime getEntryDate() const;
    void setEntryDate(const QDateTime &entry_date);
    bool is_entry_date_Set() const;
    bool is_entry_date_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    qint32 getProjectIdfk() const;
    void setProjectIdfk(const qint32 &project_idfk);
    bool is_project_idfk_Set() const;
    bool is_project_idfk_Valid() const;

    qint32 getTaskIdfk() const;
    void setTaskIdfk(const qint32 &task_idfk);
    bool is_task_idfk_Set() const;
    bool is_task_idfk_Valid() const;

    qint32 getTimesheetCategoryIdfk() const;
    void setTimesheetCategoryIdfk(const qint32 &timesheet_category_idfk);
    bool is_timesheet_category_idfk_Set() const;
    bool is_timesheet_category_idfk_Valid() const;

    qint32 getUserIdfk() const;
    void setUserIdfk(const qint32 &user_idfk);
    bool is_user_idfk_Set() const;
    bool is_user_idfk_Valid() const;

    bool isHasStartEndTime() const;
    void setHasStartEndTime(const bool &has_start_end_time);
    bool is_has_start_end_time_Set() const;
    bool is_has_start_end_time_Valid() const;

    bool isIsInvoiced() const;
    void setIsInvoiced(const bool &is_invoiced);
    bool is_is_invoiced_Set() const;
    bool is_is_invoiced_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_custom_metadata;
    bool m_custom_metadata_isSet;
    bool m_custom_metadata_isValid;

    double m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    QDateTime m_entry_date;
    bool m_entry_date_isSet;
    bool m_entry_date_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    qint32 m_project_idfk;
    bool m_project_idfk_isSet;
    bool m_project_idfk_isValid;

    qint32 m_task_idfk;
    bool m_task_idfk_isSet;
    bool m_task_idfk_isValid;

    qint32 m_timesheet_category_idfk;
    bool m_timesheet_category_idfk_isSet;
    bool m_timesheet_category_idfk_isValid;

    qint32 m_user_idfk;
    bool m_user_idfk_isSet;
    bool m_user_idfk_isValid;

    bool m_has_start_end_time;
    bool m_has_start_end_time_isSet;
    bool m_has_start_end_time_isValid;

    bool m_is_invoiced;
    bool m_is_invoiced_isSet;
    bool m_is_invoiced_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINewTimesheet)

#endif // OAINewTimesheet_H
