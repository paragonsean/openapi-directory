/**
 * Avaza API Documentation
 * Welcome to the autogenerated documentation & test tool for Avaza's API. <br/><br/><strong>API Security & Authentication</strong><br/>Authentication options include OAuth2 Implicit and Authorization Code flows, and Personal Access Token. All connections should be encrypted over SSL/TLS <br/><br/>You can set up and manage your api authentication credentials from within your Avaza account. (requires Administrator permissions on your Avaza account).<br/><br/> OAuth2 Authorization endpoint: https://any.avaza.com/oauth2/authorize  <br/>OAuth2 Token endpoint: https://any.avaza.com/oauth2/token<br/>Base URL for subsequent API Requests: https://api.avaza.com/ <br/><br/>Blogpost about authenticating with Avaza's API:  https://www.avaza.com/avaza-api-oauth2-authentication/ <br/>Blogpost on using Avaza's webhooks: https://www.avaza.com/avaza-api-webhook-notifications/<br/>The OAuth flow currently issues Access Tokens that last 1 day, and Refresh tokens that last 180 days<br/>The Api respects the security Roles assigned to the authenticating Avaza user and filters the data return appropriately. <br/><br><strong>Support</strong><br/>For API Support, and to request access please contact Avaza Support Team via our support chat. <br/><br/><strong>User Contributed Libraries:</strong><br/>Graciously contributed by 3rd party users like you. <br/>Note these are not tested or endorsesd by Avaza. We encourage you to review before use, and use at own risk.<br/> <ul><li> - <a target='blank' href='https://packagist.org/packages/debiprasad/oauth2-avaza'>PHP OAuth Client Package for Azava API (by Debiprasad Sahoo)</a></li></ul>
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIScheduleSeriesDetails.h
 *
 * 
 */

#ifndef OAIScheduleSeriesDetails_H
#define OAIScheduleSeriesDetails_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIScheduleSeriesDetails : public OAIObject {
public:
    OAIScheduleSeriesDetails();
    OAIScheduleSeriesDetails(QString json);
    ~OAIScheduleSeriesDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAccountIdfk() const;
    void setAccountIdfk(const qint32 &account_idfk);
    bool is_account_idfk_Set() const;
    bool is_account_idfk_Valid() const;

    qint32 getCompanyIdfk() const;
    void setCompanyIdfk(const qint32 &company_idfk);
    bool is_company_idfk_Set() const;
    bool is_company_idfk_Valid() const;

    QString getCompanyName() const;
    void setCompanyName(const QString &company_name);
    bool is_company_name_Set() const;
    bool is_company_name_Valid() const;

    QDateTime getDateCreated() const;
    void setDateCreated(const QDateTime &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    QDateTime getDateUpdated() const;
    void setDateUpdated(const QDateTime &date_updated);
    bool is_date_updated_Set() const;
    bool is_date_updated_Valid() const;

    QDateTime getEndDate() const;
    void setEndDate(const QDateTime &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    QString getFirstname() const;
    void setFirstname(const QString &firstname);
    bool is_firstname_Set() const;
    bool is_firstname_Valid() const;

    double getHoursPerDay() const;
    void setHoursPerDay(const double &hours_per_day);
    bool is_hours_per_day_Set() const;
    bool is_hours_per_day_Valid() const;

    QString getLastname() const;
    void setLastname(const QString &lastname);
    bool is_lastname_Set() const;
    bool is_lastname_Valid() const;

    qint32 getLeaveTypeIdfk() const;
    void setLeaveTypeIdfk(const qint32 &leave_type_idfk);
    bool is_leave_type_idfk_Set() const;
    bool is_leave_type_idfk_Valid() const;

    QString getLeaveTypeName() const;
    void setLeaveTypeName(const QString &leave_type_name);
    bool is_leave_type_name_Set() const;
    bool is_leave_type_name_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    qint32 getProjectIdfk() const;
    void setProjectIdfk(const qint32 &project_idfk);
    bool is_project_idfk_Set() const;
    bool is_project_idfk_Valid() const;

    QString getProjectTitle() const;
    void setProjectTitle(const QString &project_title);
    bool is_project_title_Set() const;
    bool is_project_title_Valid() const;

    bool isScheduleOnDaysOff() const;
    void setScheduleOnDaysOff(const bool &schedule_on_days_off);
    bool is_schedule_on_days_off_Set() const;
    bool is_schedule_on_days_off_Valid() const;

    qint64 getScheduleSeriesId() const;
    void setScheduleSeriesId(const qint64 &schedule_series_id);
    bool is_schedule_series_id_Set() const;
    bool is_schedule_series_id_Valid() const;

    QDateTime getStartDate() const;
    void setStartDate(const QDateTime &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    qint32 getTaskIdfk() const;
    void setTaskIdfk(const qint32 &task_idfk);
    bool is_task_idfk_Set() const;
    bool is_task_idfk_Valid() const;

    QString getTaskTitle() const;
    void setTaskTitle(const QString &task_title);
    bool is_task_title_Set() const;
    bool is_task_title_Valid() const;

    qint32 getTimeSheetCategoryIdfk() const;
    void setTimeSheetCategoryIdfk(const qint32 &time_sheet_category_idfk);
    bool is_time_sheet_category_idfk_Set() const;
    bool is_time_sheet_category_idfk_Valid() const;

    QString getTimeSheetCategoryName() const;
    void setTimeSheetCategoryName(const QString &time_sheet_category_name);
    bool is_time_sheet_category_name_Set() const;
    bool is_time_sheet_category_name_Valid() const;

    double getTotalDuration() const;
    void setTotalDuration(const double &total_duration);
    bool is_total_duration_Set() const;
    bool is_total_duration_Valid() const;

    qint32 getUpdatedByUserIdfk() const;
    void setUpdatedByUserIdfk(const qint32 &updated_by_user_idfk);
    bool is_updated_by_user_idfk_Set() const;
    bool is_updated_by_user_idfk_Valid() const;

    qint32 getUserIdfk() const;
    void setUserIdfk(const qint32 &user_idfk);
    bool is_user_idfk_Set() const;
    bool is_user_idfk_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_account_idfk;
    bool m_account_idfk_isSet;
    bool m_account_idfk_isValid;

    qint32 m_company_idfk;
    bool m_company_idfk_isSet;
    bool m_company_idfk_isValid;

    QString m_company_name;
    bool m_company_name_isSet;
    bool m_company_name_isValid;

    QDateTime m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    QDateTime m_date_updated;
    bool m_date_updated_isSet;
    bool m_date_updated_isValid;

    QDateTime m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    QString m_firstname;
    bool m_firstname_isSet;
    bool m_firstname_isValid;

    double m_hours_per_day;
    bool m_hours_per_day_isSet;
    bool m_hours_per_day_isValid;

    QString m_lastname;
    bool m_lastname_isSet;
    bool m_lastname_isValid;

    qint32 m_leave_type_idfk;
    bool m_leave_type_idfk_isSet;
    bool m_leave_type_idfk_isValid;

    QString m_leave_type_name;
    bool m_leave_type_name_isSet;
    bool m_leave_type_name_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    qint32 m_project_idfk;
    bool m_project_idfk_isSet;
    bool m_project_idfk_isValid;

    QString m_project_title;
    bool m_project_title_isSet;
    bool m_project_title_isValid;

    bool m_schedule_on_days_off;
    bool m_schedule_on_days_off_isSet;
    bool m_schedule_on_days_off_isValid;

    qint64 m_schedule_series_id;
    bool m_schedule_series_id_isSet;
    bool m_schedule_series_id_isValid;

    QDateTime m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    qint32 m_task_idfk;
    bool m_task_idfk_isSet;
    bool m_task_idfk_isValid;

    QString m_task_title;
    bool m_task_title_isSet;
    bool m_task_title_isValid;

    qint32 m_time_sheet_category_idfk;
    bool m_time_sheet_category_idfk_isSet;
    bool m_time_sheet_category_idfk_isValid;

    QString m_time_sheet_category_name;
    bool m_time_sheet_category_name_isSet;
    bool m_time_sheet_category_name_isValid;

    double m_total_duration;
    bool m_total_duration_isSet;
    bool m_total_duration_isValid;

    qint32 m_updated_by_user_idfk;
    bool m_updated_by_user_idfk_isSet;
    bool m_updated_by_user_idfk_isValid;

    qint32 m_user_idfk;
    bool m_user_idfk_isSet;
    bool m_user_idfk_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIScheduleSeriesDetails)

#endif // OAIScheduleSeriesDetails_H
