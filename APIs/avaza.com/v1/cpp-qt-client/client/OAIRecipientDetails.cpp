/**
 * Avaza API Documentation
 * Welcome to the autogenerated documentation & test tool for Avaza's API. <br/><br/><strong>API Security & Authentication</strong><br/>Authentication options include OAuth2 Implicit and Authorization Code flows, and Personal Access Token. All connections should be encrypted over SSL/TLS <br/><br/>You can set up and manage your api authentication credentials from within your Avaza account. (requires Administrator permissions on your Avaza account).<br/><br/> OAuth2 Authorization endpoint: https://any.avaza.com/oauth2/authorize  <br/>OAuth2 Token endpoint: https://any.avaza.com/oauth2/token<br/>Base URL for subsequent API Requests: https://api.avaza.com/ <br/><br/>Blogpost about authenticating with Avaza's API:  https://www.avaza.com/avaza-api-oauth2-authentication/ <br/>Blogpost on using Avaza's webhooks: https://www.avaza.com/avaza-api-webhook-notifications/<br/>The OAuth flow currently issues Access Tokens that last 1 day, and Refresh tokens that last 180 days<br/>The Api respects the security Roles assigned to the authenticating Avaza user and filters the data return appropriately. <br/><br><strong>Support</strong><br/>For API Support, and to request access please contact Avaza Support Team via our support chat. <br/><br/><strong>User Contributed Libraries:</strong><br/>Graciously contributed by 3rd party users like you. <br/>Note these are not tested or endorsesd by Avaza. We encourage you to review before use, and use at own risk.<br/> <ul><li> - <a target='blank' href='https://packagist.org/packages/debiprasad/oauth2-avaza'>PHP OAuth Client Package for Azava API (by Debiprasad Sahoo)</a></li></ul>
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRecipientDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRecipientDetails::OAIRecipientDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRecipientDetails::OAIRecipientDetails() {
    this->initializeModel();
}

OAIRecipientDetails::~OAIRecipientDetails() {}

void OAIRecipientDetails::initializeModel() {

    m_company_idfk_isSet = false;
    m_company_idfk_isValid = false;

    m_company_name_isSet = false;
    m_company_name_isValid = false;

    m_recipient_billing_address_city_isSet = false;
    m_recipient_billing_address_city_isValid = false;

    m_recipient_billing_address_country_code_isSet = false;
    m_recipient_billing_address_country_code_isValid = false;

    m_recipient_billing_address_line_isSet = false;
    m_recipient_billing_address_line_isValid = false;

    m_recipient_billing_address_post_code_isSet = false;
    m_recipient_billing_address_post_code_isValid = false;

    m_recipient_billing_address_state_isSet = false;
    m_recipient_billing_address_state_isValid = false;

    m_recipient_formatted_billing_address_isSet = false;
    m_recipient_formatted_billing_address_isValid = false;
}

void OAIRecipientDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRecipientDetails::fromJsonObject(QJsonObject json) {

    m_company_idfk_isValid = ::OpenAPI::fromJsonValue(m_company_idfk, json[QString("CompanyIDFK")]);
    m_company_idfk_isSet = !json[QString("CompanyIDFK")].isNull() && m_company_idfk_isValid;

    m_company_name_isValid = ::OpenAPI::fromJsonValue(m_company_name, json[QString("CompanyName")]);
    m_company_name_isSet = !json[QString("CompanyName")].isNull() && m_company_name_isValid;

    m_recipient_billing_address_city_isValid = ::OpenAPI::fromJsonValue(m_recipient_billing_address_city, json[QString("RecipientBillingAddressCity")]);
    m_recipient_billing_address_city_isSet = !json[QString("RecipientBillingAddressCity")].isNull() && m_recipient_billing_address_city_isValid;

    m_recipient_billing_address_country_code_isValid = ::OpenAPI::fromJsonValue(m_recipient_billing_address_country_code, json[QString("RecipientBillingAddressCountryCode")]);
    m_recipient_billing_address_country_code_isSet = !json[QString("RecipientBillingAddressCountryCode")].isNull() && m_recipient_billing_address_country_code_isValid;

    m_recipient_billing_address_line_isValid = ::OpenAPI::fromJsonValue(m_recipient_billing_address_line, json[QString("RecipientBillingAddressLine")]);
    m_recipient_billing_address_line_isSet = !json[QString("RecipientBillingAddressLine")].isNull() && m_recipient_billing_address_line_isValid;

    m_recipient_billing_address_post_code_isValid = ::OpenAPI::fromJsonValue(m_recipient_billing_address_post_code, json[QString("RecipientBillingAddressPostCode")]);
    m_recipient_billing_address_post_code_isSet = !json[QString("RecipientBillingAddressPostCode")].isNull() && m_recipient_billing_address_post_code_isValid;

    m_recipient_billing_address_state_isValid = ::OpenAPI::fromJsonValue(m_recipient_billing_address_state, json[QString("RecipientBillingAddressState")]);
    m_recipient_billing_address_state_isSet = !json[QString("RecipientBillingAddressState")].isNull() && m_recipient_billing_address_state_isValid;

    m_recipient_formatted_billing_address_isValid = ::OpenAPI::fromJsonValue(m_recipient_formatted_billing_address, json[QString("RecipientFormattedBillingAddress")]);
    m_recipient_formatted_billing_address_isSet = !json[QString("RecipientFormattedBillingAddress")].isNull() && m_recipient_formatted_billing_address_isValid;
}

QString OAIRecipientDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRecipientDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_company_idfk_isSet) {
        obj.insert(QString("CompanyIDFK"), ::OpenAPI::toJsonValue(m_company_idfk));
    }
    if (m_company_name_isSet) {
        obj.insert(QString("CompanyName"), ::OpenAPI::toJsonValue(m_company_name));
    }
    if (m_recipient_billing_address_city_isSet) {
        obj.insert(QString("RecipientBillingAddressCity"), ::OpenAPI::toJsonValue(m_recipient_billing_address_city));
    }
    if (m_recipient_billing_address_country_code_isSet) {
        obj.insert(QString("RecipientBillingAddressCountryCode"), ::OpenAPI::toJsonValue(m_recipient_billing_address_country_code));
    }
    if (m_recipient_billing_address_line_isSet) {
        obj.insert(QString("RecipientBillingAddressLine"), ::OpenAPI::toJsonValue(m_recipient_billing_address_line));
    }
    if (m_recipient_billing_address_post_code_isSet) {
        obj.insert(QString("RecipientBillingAddressPostCode"), ::OpenAPI::toJsonValue(m_recipient_billing_address_post_code));
    }
    if (m_recipient_billing_address_state_isSet) {
        obj.insert(QString("RecipientBillingAddressState"), ::OpenAPI::toJsonValue(m_recipient_billing_address_state));
    }
    if (m_recipient_formatted_billing_address_isSet) {
        obj.insert(QString("RecipientFormattedBillingAddress"), ::OpenAPI::toJsonValue(m_recipient_formatted_billing_address));
    }
    return obj;
}

qint32 OAIRecipientDetails::getCompanyIdfk() const {
    return m_company_idfk;
}
void OAIRecipientDetails::setCompanyIdfk(const qint32 &company_idfk) {
    m_company_idfk = company_idfk;
    m_company_idfk_isSet = true;
}

bool OAIRecipientDetails::is_company_idfk_Set() const{
    return m_company_idfk_isSet;
}

bool OAIRecipientDetails::is_company_idfk_Valid() const{
    return m_company_idfk_isValid;
}

QString OAIRecipientDetails::getCompanyName() const {
    return m_company_name;
}
void OAIRecipientDetails::setCompanyName(const QString &company_name) {
    m_company_name = company_name;
    m_company_name_isSet = true;
}

bool OAIRecipientDetails::is_company_name_Set() const{
    return m_company_name_isSet;
}

bool OAIRecipientDetails::is_company_name_Valid() const{
    return m_company_name_isValid;
}

QString OAIRecipientDetails::getRecipientBillingAddressCity() const {
    return m_recipient_billing_address_city;
}
void OAIRecipientDetails::setRecipientBillingAddressCity(const QString &recipient_billing_address_city) {
    m_recipient_billing_address_city = recipient_billing_address_city;
    m_recipient_billing_address_city_isSet = true;
}

bool OAIRecipientDetails::is_recipient_billing_address_city_Set() const{
    return m_recipient_billing_address_city_isSet;
}

bool OAIRecipientDetails::is_recipient_billing_address_city_Valid() const{
    return m_recipient_billing_address_city_isValid;
}

QString OAIRecipientDetails::getRecipientBillingAddressCountryCode() const {
    return m_recipient_billing_address_country_code;
}
void OAIRecipientDetails::setRecipientBillingAddressCountryCode(const QString &recipient_billing_address_country_code) {
    m_recipient_billing_address_country_code = recipient_billing_address_country_code;
    m_recipient_billing_address_country_code_isSet = true;
}

bool OAIRecipientDetails::is_recipient_billing_address_country_code_Set() const{
    return m_recipient_billing_address_country_code_isSet;
}

bool OAIRecipientDetails::is_recipient_billing_address_country_code_Valid() const{
    return m_recipient_billing_address_country_code_isValid;
}

QString OAIRecipientDetails::getRecipientBillingAddressLine() const {
    return m_recipient_billing_address_line;
}
void OAIRecipientDetails::setRecipientBillingAddressLine(const QString &recipient_billing_address_line) {
    m_recipient_billing_address_line = recipient_billing_address_line;
    m_recipient_billing_address_line_isSet = true;
}

bool OAIRecipientDetails::is_recipient_billing_address_line_Set() const{
    return m_recipient_billing_address_line_isSet;
}

bool OAIRecipientDetails::is_recipient_billing_address_line_Valid() const{
    return m_recipient_billing_address_line_isValid;
}

QString OAIRecipientDetails::getRecipientBillingAddressPostCode() const {
    return m_recipient_billing_address_post_code;
}
void OAIRecipientDetails::setRecipientBillingAddressPostCode(const QString &recipient_billing_address_post_code) {
    m_recipient_billing_address_post_code = recipient_billing_address_post_code;
    m_recipient_billing_address_post_code_isSet = true;
}

bool OAIRecipientDetails::is_recipient_billing_address_post_code_Set() const{
    return m_recipient_billing_address_post_code_isSet;
}

bool OAIRecipientDetails::is_recipient_billing_address_post_code_Valid() const{
    return m_recipient_billing_address_post_code_isValid;
}

QString OAIRecipientDetails::getRecipientBillingAddressState() const {
    return m_recipient_billing_address_state;
}
void OAIRecipientDetails::setRecipientBillingAddressState(const QString &recipient_billing_address_state) {
    m_recipient_billing_address_state = recipient_billing_address_state;
    m_recipient_billing_address_state_isSet = true;
}

bool OAIRecipientDetails::is_recipient_billing_address_state_Set() const{
    return m_recipient_billing_address_state_isSet;
}

bool OAIRecipientDetails::is_recipient_billing_address_state_Valid() const{
    return m_recipient_billing_address_state_isValid;
}

QString OAIRecipientDetails::getRecipientFormattedBillingAddress() const {
    return m_recipient_formatted_billing_address;
}
void OAIRecipientDetails::setRecipientFormattedBillingAddress(const QString &recipient_formatted_billing_address) {
    m_recipient_formatted_billing_address = recipient_formatted_billing_address;
    m_recipient_formatted_billing_address_isSet = true;
}

bool OAIRecipientDetails::is_recipient_formatted_billing_address_Set() const{
    return m_recipient_formatted_billing_address_isSet;
}

bool OAIRecipientDetails::is_recipient_formatted_billing_address_Valid() const{
    return m_recipient_formatted_billing_address_isValid;
}

bool OAIRecipientDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_company_idfk_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recipient_billing_address_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recipient_billing_address_country_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recipient_billing_address_line_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recipient_billing_address_post_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recipient_billing_address_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recipient_formatted_billing_address_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRecipientDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
