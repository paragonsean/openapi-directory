/**
 * Avaza API Documentation
 * Welcome to the autogenerated documentation & test tool for Avaza's API. <br/><br/><strong>API Security & Authentication</strong><br/>Authentication options include OAuth2 Implicit and Authorization Code flows, and Personal Access Token. All connections should be encrypted over SSL/TLS <br/><br/>You can set up and manage your api authentication credentials from within your Avaza account. (requires Administrator permissions on your Avaza account).<br/><br/> OAuth2 Authorization endpoint: https://any.avaza.com/oauth2/authorize  <br/>OAuth2 Token endpoint: https://any.avaza.com/oauth2/token<br/>Base URL for subsequent API Requests: https://api.avaza.com/ <br/><br/>Blogpost about authenticating with Avaza's API:  https://www.avaza.com/avaza-api-oauth2-authentication/ <br/>Blogpost on using Avaza's webhooks: https://www.avaza.com/avaza-api-webhook-notifications/<br/>The OAuth flow currently issues Access Tokens that last 1 day, and Refresh tokens that last 180 days<br/>The Api respects the security Roles assigned to the authenticating Avaza user and filters the data return appropriately. <br/><br><strong>Support</strong><br/>For API Support, and to request access please contact Avaza Support Team via our support chat. <br/><br/><strong>User Contributed Libraries:</strong><br/>Graciously contributed by 3rd party users like you. <br/>Note these are not tested or endorsesd by Avaza. We encourage you to review before use, and use at own risk.<br/> <ul><li> - <a target='blank' href='https://packagist.org/packages/debiprasad/oauth2-avaza'>PHP OAuth Client Package for Azava API (by Debiprasad Sahoo)</a></li></ul>
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFixedAmountDetails.h
 *
 * 
 */

#ifndef OAIFixedAmountDetails_H
#define OAIFixedAmountDetails_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFixedAmountDetails : public OAIObject {
public:
    OAIFixedAmountDetails();
    OAIFixedAmountDetails(QString json);
    ~OAIFixedAmountDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAmount() const;
    void setAmount(const double &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    QDateTime getDateCreated() const;
    void setDateCreated(const QDateTime &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    QDateTime getDateUpdated() const;
    void setDateUpdated(const QDateTime &date_updated);
    bool is_date_updated_Set() const;
    bool is_date_updated_Valid() const;

    qint32 getFixedAmountId() const;
    void setFixedAmountId(const qint32 &fixed_amount_id);
    bool is_fixed_amount_id_Set() const;
    bool is_fixed_amount_id_Valid() const;

    qint64 getInventoryItemIdfk() const;
    void setInventoryItemIdfk(const qint64 &inventory_item_idfk);
    bool is_inventory_item_idfk_Set() const;
    bool is_inventory_item_idfk_Valid() const;

    QString getInventoryItemName() const;
    void setInventoryItemName(const QString &inventory_item_name);
    bool is_inventory_item_name_Set() const;
    bool is_inventory_item_name_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    QString getProjectCode() const;
    void setProjectCode(const QString &project_code);
    bool is_project_code_Set() const;
    bool is_project_code_Valid() const;

    qint32 getProjectIdfk() const;
    void setProjectIdfk(const qint32 &project_idfk);
    bool is_project_idfk_Set() const;
    bool is_project_idfk_Valid() const;

    QString getProjectTitle() const;
    void setProjectTitle(const QString &project_title);
    bool is_project_title_Set() const;
    bool is_project_title_Valid() const;

    qint32 getTaskIdfk() const;
    void setTaskIdfk(const qint32 &task_idfk);
    bool is_task_idfk_Set() const;
    bool is_task_idfk_Valid() const;

    QString getTaskTitle() const;
    void setTaskTitle(const QString &task_title);
    bool is_task_title_Set() const;
    bool is_task_title_Valid() const;

    qint32 getUpdatedByUserIdfk() const;
    void setUpdatedByUserIdfk(const qint32 &updated_by_user_idfk);
    bool is_updated_by_user_idfk_Set() const;
    bool is_updated_by_user_idfk_Valid() const;

    bool isIsInvoiced() const;
    void setIsInvoiced(const bool &is_invoiced);
    bool is_is_invoiced_Set() const;
    bool is_is_invoiced_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    QDateTime m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    QDateTime m_date_updated;
    bool m_date_updated_isSet;
    bool m_date_updated_isValid;

    qint32 m_fixed_amount_id;
    bool m_fixed_amount_id_isSet;
    bool m_fixed_amount_id_isValid;

    qint64 m_inventory_item_idfk;
    bool m_inventory_item_idfk_isSet;
    bool m_inventory_item_idfk_isValid;

    QString m_inventory_item_name;
    bool m_inventory_item_name_isSet;
    bool m_inventory_item_name_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    QString m_project_code;
    bool m_project_code_isSet;
    bool m_project_code_isValid;

    qint32 m_project_idfk;
    bool m_project_idfk_isSet;
    bool m_project_idfk_isValid;

    QString m_project_title;
    bool m_project_title_isSet;
    bool m_project_title_isValid;

    qint32 m_task_idfk;
    bool m_task_idfk_isSet;
    bool m_task_idfk_isValid;

    QString m_task_title;
    bool m_task_title_isSet;
    bool m_task_title_isValid;

    qint32 m_updated_by_user_idfk;
    bool m_updated_by_user_idfk_isSet;
    bool m_updated_by_user_idfk_isValid;

    bool m_is_invoiced;
    bool m_is_invoiced_isSet;
    bool m_is_invoiced_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFixedAmountDetails)

#endif // OAIFixedAmountDetails_H
