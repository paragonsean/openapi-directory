/**
 * Avaza API Documentation
 * Welcome to the autogenerated documentation & test tool for Avaza's API. <br/><br/><strong>API Security & Authentication</strong><br/>Authentication options include OAuth2 Implicit and Authorization Code flows, and Personal Access Token. All connections should be encrypted over SSL/TLS <br/><br/>You can set up and manage your api authentication credentials from within your Avaza account. (requires Administrator permissions on your Avaza account).<br/><br/> OAuth2 Authorization endpoint: https://any.avaza.com/oauth2/authorize  <br/>OAuth2 Token endpoint: https://any.avaza.com/oauth2/token<br/>Base URL for subsequent API Requests: https://api.avaza.com/ <br/><br/>Blogpost about authenticating with Avaza's API:  https://www.avaza.com/avaza-api-oauth2-authentication/ <br/>Blogpost on using Avaza's webhooks: https://www.avaza.com/avaza-api-webhook-notifications/<br/>The OAuth flow currently issues Access Tokens that last 1 day, and Refresh tokens that last 180 days<br/>The Api respects the security Roles assigned to the authenticating Avaza user and filters the data return appropriately. <br/><br><strong>Support</strong><br/>For API Support, and to request access please contact Avaza Support Team via our support chat. <br/><br/><strong>User Contributed Libraries:</strong><br/>Graciously contributed by 3rd party users like you. <br/>Note these are not tested or endorsesd by Avaza. We encourage you to review before use, and use at own risk.<br/> <ul><li> - <a target='blank' href='https://packagist.org/packages/debiprasad/oauth2-avaza'>PHP OAuth Client Package for Azava API (by Debiprasad Sahoo)</a></li></ul>
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINewCompanyContact.h
 *
 * 
 */

#ifndef OAINewCompanyContact_H
#define OAINewCompanyContact_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINewCompanyContact : public OAIObject {
public:
    OAINewCompanyContact();
    OAINewCompanyContact(QString json);
    ~OAINewCompanyContact() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCompanyBillingAddress() const;
    void setCompanyBillingAddress(const QString &company_billing_address);
    bool is_company_billing_address_Set() const;
    bool is_company_billing_address_Valid() const;

    QString getCompanyBillingAddressCity() const;
    void setCompanyBillingAddressCity(const QString &company_billing_address_city);
    bool is_company_billing_address_city_Set() const;
    bool is_company_billing_address_city_Valid() const;

    QString getCompanyBillingAddressCountryCode() const;
    void setCompanyBillingAddressCountryCode(const QString &company_billing_address_country_code);
    bool is_company_billing_address_country_code_Set() const;
    bool is_company_billing_address_country_code_Valid() const;

    QString getCompanyBillingAddressLine() const;
    void setCompanyBillingAddressLine(const QString &company_billing_address_line);
    bool is_company_billing_address_line_Set() const;
    bool is_company_billing_address_line_Valid() const;

    QString getCompanyBillingAddressPostCode() const;
    void setCompanyBillingAddressPostCode(const QString &company_billing_address_post_code);
    bool is_company_billing_address_post_code_Set() const;
    bool is_company_billing_address_post_code_Valid() const;

    QString getCompanyBillingAddressState() const;
    void setCompanyBillingAddressState(const QString &company_billing_address_state);
    bool is_company_billing_address_state_Set() const;
    bool is_company_billing_address_state_Valid() const;

    qint32 getCompanyIdfk() const;
    void setCompanyIdfk(const qint32 &company_idfk);
    bool is_company_idfk_Set() const;
    bool is_company_idfk_Valid() const;

    QString getCompanyName() const;
    void setCompanyName(const QString &company_name);
    bool is_company_name_Set() const;
    bool is_company_name_Valid() const;

    QString getContactEmail() const;
    void setContactEmail(const QString &contact_email);
    bool is_contact_email_Set() const;
    bool is_contact_email_Valid() const;

    QString getCurrencyCode() const;
    void setCurrencyCode(const QString &currency_code);
    bool is_currency_code_Set() const;
    bool is_currency_code_Valid() const;

    QString getFirstname() const;
    void setFirstname(const QString &firstname);
    bool is_firstname_Set() const;
    bool is_firstname_Valid() const;

    QString getLastname() const;
    void setLastname(const QString &lastname);
    bool is_lastname_Set() const;
    bool is_lastname_Valid() const;

    QString getMobile() const;
    void setMobile(const QString &mobile);
    bool is_mobile_Set() const;
    bool is_mobile_Valid() const;

    QString getPhone() const;
    void setPhone(const QString &phone);
    bool is_phone_Set() const;
    bool is_phone_Valid() const;

    QString getPositionTitle() const;
    void setPositionTitle(const QString &position_title);
    bool is_position_title_Set() const;
    bool is_position_title_Valid() const;

    bool isUpdateExisting() const;
    void setUpdateExisting(const bool &update_existing);
    bool is_update_existing_Set() const;
    bool is_update_existing_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_company_billing_address;
    bool m_company_billing_address_isSet;
    bool m_company_billing_address_isValid;

    QString m_company_billing_address_city;
    bool m_company_billing_address_city_isSet;
    bool m_company_billing_address_city_isValid;

    QString m_company_billing_address_country_code;
    bool m_company_billing_address_country_code_isSet;
    bool m_company_billing_address_country_code_isValid;

    QString m_company_billing_address_line;
    bool m_company_billing_address_line_isSet;
    bool m_company_billing_address_line_isValid;

    QString m_company_billing_address_post_code;
    bool m_company_billing_address_post_code_isSet;
    bool m_company_billing_address_post_code_isValid;

    QString m_company_billing_address_state;
    bool m_company_billing_address_state_isSet;
    bool m_company_billing_address_state_isValid;

    qint32 m_company_idfk;
    bool m_company_idfk_isSet;
    bool m_company_idfk_isValid;

    QString m_company_name;
    bool m_company_name_isSet;
    bool m_company_name_isValid;

    QString m_contact_email;
    bool m_contact_email_isSet;
    bool m_contact_email_isValid;

    QString m_currency_code;
    bool m_currency_code_isSet;
    bool m_currency_code_isValid;

    QString m_firstname;
    bool m_firstname_isSet;
    bool m_firstname_isValid;

    QString m_lastname;
    bool m_lastname_isSet;
    bool m_lastname_isValid;

    QString m_mobile;
    bool m_mobile_isSet;
    bool m_mobile_isValid;

    QString m_phone;
    bool m_phone_isSet;
    bool m_phone_isValid;

    QString m_position_title;
    bool m_position_title_isSet;
    bool m_position_title_isValid;

    bool m_update_existing;
    bool m_update_existing_isSet;
    bool m_update_existing_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINewCompanyContact)

#endif // OAINewCompanyContact_H
