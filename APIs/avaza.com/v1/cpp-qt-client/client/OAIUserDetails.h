/**
 * Avaza API Documentation
 * Welcome to the autogenerated documentation & test tool for Avaza's API. <br/><br/><strong>API Security & Authentication</strong><br/>Authentication options include OAuth2 Implicit and Authorization Code flows, and Personal Access Token. All connections should be encrypted over SSL/TLS <br/><br/>You can set up and manage your api authentication credentials from within your Avaza account. (requires Administrator permissions on your Avaza account).<br/><br/> OAuth2 Authorization endpoint: https://any.avaza.com/oauth2/authorize  <br/>OAuth2 Token endpoint: https://any.avaza.com/oauth2/token<br/>Base URL for subsequent API Requests: https://api.avaza.com/ <br/><br/>Blogpost about authenticating with Avaza's API:  https://www.avaza.com/avaza-api-oauth2-authentication/ <br/>Blogpost on using Avaza's webhooks: https://www.avaza.com/avaza-api-webhook-notifications/<br/>The OAuth flow currently issues Access Tokens that last 1 day, and Refresh tokens that last 180 days<br/>The Api respects the security Roles assigned to the authenticating Avaza user and filters the data return appropriately. <br/><br><strong>Support</strong><br/>For API Support, and to request access please contact Avaza Support Team via our support chat. <br/><br/><strong>User Contributed Libraries:</strong><br/>Graciously contributed by 3rd party users like you. <br/>Note these are not tested or endorsesd by Avaza. We encourage you to review before use, and use at own risk.<br/> <ul><li> - <a target='blank' href='https://packagist.org/packages/debiprasad/oauth2-avaza'>PHP OAuth Client Package for Azava API (by Debiprasad Sahoo)</a></li></ul>
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserDetails.h
 *
 * 
 */

#ifndef OAIUserDetails_H
#define OAIUserDetails_H

#include <QJsonObject>

#include "OAIRoleDetails.h"
#include "OAIUserTagDetails.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRoleDetails;
class OAIUserTagDetails;

class OAIUserDetails : public OAIObject {
public:
    OAIUserDetails();
    OAIUserDetails(QString json);
    ~OAIUserDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAccountIdfk() const;
    void setAccountIdfk(const qint32 &account_idfk);
    bool is_account_idfk_Set() const;
    bool is_account_idfk_Valid() const;

    qint32 getCompanyIdfk() const;
    void setCompanyIdfk(const qint32 &company_idfk);
    bool is_company_idfk_Set() const;
    bool is_company_idfk_Valid() const;

    QString getCompanyName() const;
    void setCompanyName(const QString &company_name);
    bool is_company_name_Set() const;
    bool is_company_name_Valid() const;

    double getDefaultBillableRate() const;
    void setDefaultBillableRate(const double &default_billable_rate);
    bool is_default_billable_rate_Set() const;
    bool is_default_billable_rate_Valid() const;

    double getDefaultCostRate() const;
    void setDefaultCostRate(const double &default_cost_rate);
    bool is_default_cost_rate_Set() const;
    bool is_default_cost_rate_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getFirstname() const;
    void setFirstname(const QString &firstname);
    bool is_firstname_Set() const;
    bool is_firstname_Valid() const;

    double getFridayAvailableHours() const;
    void setFridayAvailableHours(const double &friday_available_hours);
    bool is_friday_available_hours_Set() const;
    bool is_friday_available_hours_Valid() const;

    QString getIanaTimezone() const;
    void setIanaTimezone(const QString &iana_timezone);
    bool is_iana_timezone_Set() const;
    bool is_iana_timezone_Valid() const;

    QString getLastname() const;
    void setLastname(const QString &lastname);
    bool is_lastname_Set() const;
    bool is_lastname_Valid() const;

    QString getMobile() const;
    void setMobile(const QString &mobile);
    bool is_mobile_Set() const;
    bool is_mobile_Valid() const;

    double getMondayAvailableHours() const;
    void setMondayAvailableHours(const double &monday_available_hours);
    bool is_monday_available_hours_Set() const;
    bool is_monday_available_hours_Valid() const;

    QString getPhone() const;
    void setPhone(const QString &phone);
    bool is_phone_Set() const;
    bool is_phone_Valid() const;

    QString getPositionTitle() const;
    void setPositionTitle(const QString &position_title);
    bool is_position_title_Set() const;
    bool is_position_title_Valid() const;

    QList<OAIRoleDetails> getRoles() const;
    void setRoles(const QList<OAIRoleDetails> &roles);
    bool is_roles_Set() const;
    bool is_roles_Valid() const;

    double getSaturdayAvailableHours() const;
    void setSaturdayAvailableHours(const double &saturday_available_hours);
    bool is_saturday_available_hours_Set() const;
    bool is_saturday_available_hours_Valid() const;

    double getSundayAvailableHours() const;
    void setSundayAvailableHours(const double &sunday_available_hours);
    bool is_sunday_available_hours_Set() const;
    bool is_sunday_available_hours_Valid() const;

    QList<OAIUserTagDetails> getTags() const;
    void setTags(const QList<OAIUserTagDetails> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    double getThursdayAvailableHours() const;
    void setThursdayAvailableHours(const double &thursday_available_hours);
    bool is_thursday_available_hours_Set() const;
    bool is_thursday_available_hours_Valid() const;

    QString getTimeZone() const;
    void setTimeZone(const QString &time_zone);
    bool is_time_zone_Set() const;
    bool is_time_zone_Valid() const;

    double getTuesdayAvailableHours() const;
    void setTuesdayAvailableHours(const double &tuesday_available_hours);
    bool is_tuesday_available_hours_Set() const;
    bool is_tuesday_available_hours_Valid() const;

    qint32 getUserId() const;
    void setUserId(const qint32 &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    double getWednesdayAvailableHours() const;
    void setWednesdayAvailableHours(const double &wednesday_available_hours);
    bool is_wednesday_available_hours_Set() const;
    bool is_wednesday_available_hours_Valid() const;

    bool isIsTeamMember() const;
    void setIsTeamMember(const bool &is_team_member);
    bool is_is_team_member_Set() const;
    bool is_is_team_member_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_account_idfk;
    bool m_account_idfk_isSet;
    bool m_account_idfk_isValid;

    qint32 m_company_idfk;
    bool m_company_idfk_isSet;
    bool m_company_idfk_isValid;

    QString m_company_name;
    bool m_company_name_isSet;
    bool m_company_name_isValid;

    double m_default_billable_rate;
    bool m_default_billable_rate_isSet;
    bool m_default_billable_rate_isValid;

    double m_default_cost_rate;
    bool m_default_cost_rate_isSet;
    bool m_default_cost_rate_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_firstname;
    bool m_firstname_isSet;
    bool m_firstname_isValid;

    double m_friday_available_hours;
    bool m_friday_available_hours_isSet;
    bool m_friday_available_hours_isValid;

    QString m_iana_timezone;
    bool m_iana_timezone_isSet;
    bool m_iana_timezone_isValid;

    QString m_lastname;
    bool m_lastname_isSet;
    bool m_lastname_isValid;

    QString m_mobile;
    bool m_mobile_isSet;
    bool m_mobile_isValid;

    double m_monday_available_hours;
    bool m_monday_available_hours_isSet;
    bool m_monday_available_hours_isValid;

    QString m_phone;
    bool m_phone_isSet;
    bool m_phone_isValid;

    QString m_position_title;
    bool m_position_title_isSet;
    bool m_position_title_isValid;

    QList<OAIRoleDetails> m_roles;
    bool m_roles_isSet;
    bool m_roles_isValid;

    double m_saturday_available_hours;
    bool m_saturday_available_hours_isSet;
    bool m_saturday_available_hours_isValid;

    double m_sunday_available_hours;
    bool m_sunday_available_hours_isSet;
    bool m_sunday_available_hours_isValid;

    QList<OAIUserTagDetails> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    double m_thursday_available_hours;
    bool m_thursday_available_hours_isSet;
    bool m_thursday_available_hours_isValid;

    QString m_time_zone;
    bool m_time_zone_isSet;
    bool m_time_zone_isValid;

    double m_tuesday_available_hours;
    bool m_tuesday_available_hours_isSet;
    bool m_tuesday_available_hours_isValid;

    qint32 m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;

    double m_wednesday_available_hours;
    bool m_wednesday_available_hours_isSet;
    bool m_wednesday_available_hours_isValid;

    bool m_is_team_member;
    bool m_is_team_member_isSet;
    bool m_is_team_member_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserDetails)

#endif // OAIUserDetails_H
