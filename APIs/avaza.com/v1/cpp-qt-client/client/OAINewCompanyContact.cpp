/**
 * Avaza API Documentation
 * Welcome to the autogenerated documentation & test tool for Avaza's API. <br/><br/><strong>API Security & Authentication</strong><br/>Authentication options include OAuth2 Implicit and Authorization Code flows, and Personal Access Token. All connections should be encrypted over SSL/TLS <br/><br/>You can set up and manage your api authentication credentials from within your Avaza account. (requires Administrator permissions on your Avaza account).<br/><br/> OAuth2 Authorization endpoint: https://any.avaza.com/oauth2/authorize  <br/>OAuth2 Token endpoint: https://any.avaza.com/oauth2/token<br/>Base URL for subsequent API Requests: https://api.avaza.com/ <br/><br/>Blogpost about authenticating with Avaza's API:  https://www.avaza.com/avaza-api-oauth2-authentication/ <br/>Blogpost on using Avaza's webhooks: https://www.avaza.com/avaza-api-webhook-notifications/<br/>The OAuth flow currently issues Access Tokens that last 1 day, and Refresh tokens that last 180 days<br/>The Api respects the security Roles assigned to the authenticating Avaza user and filters the data return appropriately. <br/><br><strong>Support</strong><br/>For API Support, and to request access please contact Avaza Support Team via our support chat. <br/><br/><strong>User Contributed Libraries:</strong><br/>Graciously contributed by 3rd party users like you. <br/>Note these are not tested or endorsesd by Avaza. We encourage you to review before use, and use at own risk.<br/> <ul><li> - <a target='blank' href='https://packagist.org/packages/debiprasad/oauth2-avaza'>PHP OAuth Client Package for Azava API (by Debiprasad Sahoo)</a></li></ul>
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINewCompanyContact.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINewCompanyContact::OAINewCompanyContact(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINewCompanyContact::OAINewCompanyContact() {
    this->initializeModel();
}

OAINewCompanyContact::~OAINewCompanyContact() {}

void OAINewCompanyContact::initializeModel() {

    m_company_billing_address_isSet = false;
    m_company_billing_address_isValid = false;

    m_company_billing_address_city_isSet = false;
    m_company_billing_address_city_isValid = false;

    m_company_billing_address_country_code_isSet = false;
    m_company_billing_address_country_code_isValid = false;

    m_company_billing_address_line_isSet = false;
    m_company_billing_address_line_isValid = false;

    m_company_billing_address_post_code_isSet = false;
    m_company_billing_address_post_code_isValid = false;

    m_company_billing_address_state_isSet = false;
    m_company_billing_address_state_isValid = false;

    m_company_idfk_isSet = false;
    m_company_idfk_isValid = false;

    m_company_name_isSet = false;
    m_company_name_isValid = false;

    m_contact_email_isSet = false;
    m_contact_email_isValid = false;

    m_currency_code_isSet = false;
    m_currency_code_isValid = false;

    m_firstname_isSet = false;
    m_firstname_isValid = false;

    m_lastname_isSet = false;
    m_lastname_isValid = false;

    m_mobile_isSet = false;
    m_mobile_isValid = false;

    m_phone_isSet = false;
    m_phone_isValid = false;

    m_position_title_isSet = false;
    m_position_title_isValid = false;

    m_update_existing_isSet = false;
    m_update_existing_isValid = false;
}

void OAINewCompanyContact::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINewCompanyContact::fromJsonObject(QJsonObject json) {

    m_company_billing_address_isValid = ::OpenAPI::fromJsonValue(m_company_billing_address, json[QString("CompanyBillingAddress")]);
    m_company_billing_address_isSet = !json[QString("CompanyBillingAddress")].isNull() && m_company_billing_address_isValid;

    m_company_billing_address_city_isValid = ::OpenAPI::fromJsonValue(m_company_billing_address_city, json[QString("CompanyBillingAddressCity")]);
    m_company_billing_address_city_isSet = !json[QString("CompanyBillingAddressCity")].isNull() && m_company_billing_address_city_isValid;

    m_company_billing_address_country_code_isValid = ::OpenAPI::fromJsonValue(m_company_billing_address_country_code, json[QString("CompanyBillingAddressCountryCode")]);
    m_company_billing_address_country_code_isSet = !json[QString("CompanyBillingAddressCountryCode")].isNull() && m_company_billing_address_country_code_isValid;

    m_company_billing_address_line_isValid = ::OpenAPI::fromJsonValue(m_company_billing_address_line, json[QString("CompanyBillingAddressLine")]);
    m_company_billing_address_line_isSet = !json[QString("CompanyBillingAddressLine")].isNull() && m_company_billing_address_line_isValid;

    m_company_billing_address_post_code_isValid = ::OpenAPI::fromJsonValue(m_company_billing_address_post_code, json[QString("CompanyBillingAddressPostCode")]);
    m_company_billing_address_post_code_isSet = !json[QString("CompanyBillingAddressPostCode")].isNull() && m_company_billing_address_post_code_isValid;

    m_company_billing_address_state_isValid = ::OpenAPI::fromJsonValue(m_company_billing_address_state, json[QString("CompanyBillingAddressState")]);
    m_company_billing_address_state_isSet = !json[QString("CompanyBillingAddressState")].isNull() && m_company_billing_address_state_isValid;

    m_company_idfk_isValid = ::OpenAPI::fromJsonValue(m_company_idfk, json[QString("CompanyIDFK")]);
    m_company_idfk_isSet = !json[QString("CompanyIDFK")].isNull() && m_company_idfk_isValid;

    m_company_name_isValid = ::OpenAPI::fromJsonValue(m_company_name, json[QString("CompanyName")]);
    m_company_name_isSet = !json[QString("CompanyName")].isNull() && m_company_name_isValid;

    m_contact_email_isValid = ::OpenAPI::fromJsonValue(m_contact_email, json[QString("ContactEmail")]);
    m_contact_email_isSet = !json[QString("ContactEmail")].isNull() && m_contact_email_isValid;

    m_currency_code_isValid = ::OpenAPI::fromJsonValue(m_currency_code, json[QString("CurrencyCode")]);
    m_currency_code_isSet = !json[QString("CurrencyCode")].isNull() && m_currency_code_isValid;

    m_firstname_isValid = ::OpenAPI::fromJsonValue(m_firstname, json[QString("Firstname")]);
    m_firstname_isSet = !json[QString("Firstname")].isNull() && m_firstname_isValid;

    m_lastname_isValid = ::OpenAPI::fromJsonValue(m_lastname, json[QString("Lastname")]);
    m_lastname_isSet = !json[QString("Lastname")].isNull() && m_lastname_isValid;

    m_mobile_isValid = ::OpenAPI::fromJsonValue(m_mobile, json[QString("Mobile")]);
    m_mobile_isSet = !json[QString("Mobile")].isNull() && m_mobile_isValid;

    m_phone_isValid = ::OpenAPI::fromJsonValue(m_phone, json[QString("Phone")]);
    m_phone_isSet = !json[QString("Phone")].isNull() && m_phone_isValid;

    m_position_title_isValid = ::OpenAPI::fromJsonValue(m_position_title, json[QString("PositionTitle")]);
    m_position_title_isSet = !json[QString("PositionTitle")].isNull() && m_position_title_isValid;

    m_update_existing_isValid = ::OpenAPI::fromJsonValue(m_update_existing, json[QString("UpdateExisting")]);
    m_update_existing_isSet = !json[QString("UpdateExisting")].isNull() && m_update_existing_isValid;
}

QString OAINewCompanyContact::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINewCompanyContact::asJsonObject() const {
    QJsonObject obj;
    if (m_company_billing_address_isSet) {
        obj.insert(QString("CompanyBillingAddress"), ::OpenAPI::toJsonValue(m_company_billing_address));
    }
    if (m_company_billing_address_city_isSet) {
        obj.insert(QString("CompanyBillingAddressCity"), ::OpenAPI::toJsonValue(m_company_billing_address_city));
    }
    if (m_company_billing_address_country_code_isSet) {
        obj.insert(QString("CompanyBillingAddressCountryCode"), ::OpenAPI::toJsonValue(m_company_billing_address_country_code));
    }
    if (m_company_billing_address_line_isSet) {
        obj.insert(QString("CompanyBillingAddressLine"), ::OpenAPI::toJsonValue(m_company_billing_address_line));
    }
    if (m_company_billing_address_post_code_isSet) {
        obj.insert(QString("CompanyBillingAddressPostCode"), ::OpenAPI::toJsonValue(m_company_billing_address_post_code));
    }
    if (m_company_billing_address_state_isSet) {
        obj.insert(QString("CompanyBillingAddressState"), ::OpenAPI::toJsonValue(m_company_billing_address_state));
    }
    if (m_company_idfk_isSet) {
        obj.insert(QString("CompanyIDFK"), ::OpenAPI::toJsonValue(m_company_idfk));
    }
    if (m_company_name_isSet) {
        obj.insert(QString("CompanyName"), ::OpenAPI::toJsonValue(m_company_name));
    }
    if (m_contact_email_isSet) {
        obj.insert(QString("ContactEmail"), ::OpenAPI::toJsonValue(m_contact_email));
    }
    if (m_currency_code_isSet) {
        obj.insert(QString("CurrencyCode"), ::OpenAPI::toJsonValue(m_currency_code));
    }
    if (m_firstname_isSet) {
        obj.insert(QString("Firstname"), ::OpenAPI::toJsonValue(m_firstname));
    }
    if (m_lastname_isSet) {
        obj.insert(QString("Lastname"), ::OpenAPI::toJsonValue(m_lastname));
    }
    if (m_mobile_isSet) {
        obj.insert(QString("Mobile"), ::OpenAPI::toJsonValue(m_mobile));
    }
    if (m_phone_isSet) {
        obj.insert(QString("Phone"), ::OpenAPI::toJsonValue(m_phone));
    }
    if (m_position_title_isSet) {
        obj.insert(QString("PositionTitle"), ::OpenAPI::toJsonValue(m_position_title));
    }
    if (m_update_existing_isSet) {
        obj.insert(QString("UpdateExisting"), ::OpenAPI::toJsonValue(m_update_existing));
    }
    return obj;
}

QString OAINewCompanyContact::getCompanyBillingAddress() const {
    return m_company_billing_address;
}
void OAINewCompanyContact::setCompanyBillingAddress(const QString &company_billing_address) {
    m_company_billing_address = company_billing_address;
    m_company_billing_address_isSet = true;
}

bool OAINewCompanyContact::is_company_billing_address_Set() const{
    return m_company_billing_address_isSet;
}

bool OAINewCompanyContact::is_company_billing_address_Valid() const{
    return m_company_billing_address_isValid;
}

QString OAINewCompanyContact::getCompanyBillingAddressCity() const {
    return m_company_billing_address_city;
}
void OAINewCompanyContact::setCompanyBillingAddressCity(const QString &company_billing_address_city) {
    m_company_billing_address_city = company_billing_address_city;
    m_company_billing_address_city_isSet = true;
}

bool OAINewCompanyContact::is_company_billing_address_city_Set() const{
    return m_company_billing_address_city_isSet;
}

bool OAINewCompanyContact::is_company_billing_address_city_Valid() const{
    return m_company_billing_address_city_isValid;
}

QString OAINewCompanyContact::getCompanyBillingAddressCountryCode() const {
    return m_company_billing_address_country_code;
}
void OAINewCompanyContact::setCompanyBillingAddressCountryCode(const QString &company_billing_address_country_code) {
    m_company_billing_address_country_code = company_billing_address_country_code;
    m_company_billing_address_country_code_isSet = true;
}

bool OAINewCompanyContact::is_company_billing_address_country_code_Set() const{
    return m_company_billing_address_country_code_isSet;
}

bool OAINewCompanyContact::is_company_billing_address_country_code_Valid() const{
    return m_company_billing_address_country_code_isValid;
}

QString OAINewCompanyContact::getCompanyBillingAddressLine() const {
    return m_company_billing_address_line;
}
void OAINewCompanyContact::setCompanyBillingAddressLine(const QString &company_billing_address_line) {
    m_company_billing_address_line = company_billing_address_line;
    m_company_billing_address_line_isSet = true;
}

bool OAINewCompanyContact::is_company_billing_address_line_Set() const{
    return m_company_billing_address_line_isSet;
}

bool OAINewCompanyContact::is_company_billing_address_line_Valid() const{
    return m_company_billing_address_line_isValid;
}

QString OAINewCompanyContact::getCompanyBillingAddressPostCode() const {
    return m_company_billing_address_post_code;
}
void OAINewCompanyContact::setCompanyBillingAddressPostCode(const QString &company_billing_address_post_code) {
    m_company_billing_address_post_code = company_billing_address_post_code;
    m_company_billing_address_post_code_isSet = true;
}

bool OAINewCompanyContact::is_company_billing_address_post_code_Set() const{
    return m_company_billing_address_post_code_isSet;
}

bool OAINewCompanyContact::is_company_billing_address_post_code_Valid() const{
    return m_company_billing_address_post_code_isValid;
}

QString OAINewCompanyContact::getCompanyBillingAddressState() const {
    return m_company_billing_address_state;
}
void OAINewCompanyContact::setCompanyBillingAddressState(const QString &company_billing_address_state) {
    m_company_billing_address_state = company_billing_address_state;
    m_company_billing_address_state_isSet = true;
}

bool OAINewCompanyContact::is_company_billing_address_state_Set() const{
    return m_company_billing_address_state_isSet;
}

bool OAINewCompanyContact::is_company_billing_address_state_Valid() const{
    return m_company_billing_address_state_isValid;
}

qint32 OAINewCompanyContact::getCompanyIdfk() const {
    return m_company_idfk;
}
void OAINewCompanyContact::setCompanyIdfk(const qint32 &company_idfk) {
    m_company_idfk = company_idfk;
    m_company_idfk_isSet = true;
}

bool OAINewCompanyContact::is_company_idfk_Set() const{
    return m_company_idfk_isSet;
}

bool OAINewCompanyContact::is_company_idfk_Valid() const{
    return m_company_idfk_isValid;
}

QString OAINewCompanyContact::getCompanyName() const {
    return m_company_name;
}
void OAINewCompanyContact::setCompanyName(const QString &company_name) {
    m_company_name = company_name;
    m_company_name_isSet = true;
}

bool OAINewCompanyContact::is_company_name_Set() const{
    return m_company_name_isSet;
}

bool OAINewCompanyContact::is_company_name_Valid() const{
    return m_company_name_isValid;
}

QString OAINewCompanyContact::getContactEmail() const {
    return m_contact_email;
}
void OAINewCompanyContact::setContactEmail(const QString &contact_email) {
    m_contact_email = contact_email;
    m_contact_email_isSet = true;
}

bool OAINewCompanyContact::is_contact_email_Set() const{
    return m_contact_email_isSet;
}

bool OAINewCompanyContact::is_contact_email_Valid() const{
    return m_contact_email_isValid;
}

QString OAINewCompanyContact::getCurrencyCode() const {
    return m_currency_code;
}
void OAINewCompanyContact::setCurrencyCode(const QString &currency_code) {
    m_currency_code = currency_code;
    m_currency_code_isSet = true;
}

bool OAINewCompanyContact::is_currency_code_Set() const{
    return m_currency_code_isSet;
}

bool OAINewCompanyContact::is_currency_code_Valid() const{
    return m_currency_code_isValid;
}

QString OAINewCompanyContact::getFirstname() const {
    return m_firstname;
}
void OAINewCompanyContact::setFirstname(const QString &firstname) {
    m_firstname = firstname;
    m_firstname_isSet = true;
}

bool OAINewCompanyContact::is_firstname_Set() const{
    return m_firstname_isSet;
}

bool OAINewCompanyContact::is_firstname_Valid() const{
    return m_firstname_isValid;
}

QString OAINewCompanyContact::getLastname() const {
    return m_lastname;
}
void OAINewCompanyContact::setLastname(const QString &lastname) {
    m_lastname = lastname;
    m_lastname_isSet = true;
}

bool OAINewCompanyContact::is_lastname_Set() const{
    return m_lastname_isSet;
}

bool OAINewCompanyContact::is_lastname_Valid() const{
    return m_lastname_isValid;
}

QString OAINewCompanyContact::getMobile() const {
    return m_mobile;
}
void OAINewCompanyContact::setMobile(const QString &mobile) {
    m_mobile = mobile;
    m_mobile_isSet = true;
}

bool OAINewCompanyContact::is_mobile_Set() const{
    return m_mobile_isSet;
}

bool OAINewCompanyContact::is_mobile_Valid() const{
    return m_mobile_isValid;
}

QString OAINewCompanyContact::getPhone() const {
    return m_phone;
}
void OAINewCompanyContact::setPhone(const QString &phone) {
    m_phone = phone;
    m_phone_isSet = true;
}

bool OAINewCompanyContact::is_phone_Set() const{
    return m_phone_isSet;
}

bool OAINewCompanyContact::is_phone_Valid() const{
    return m_phone_isValid;
}

QString OAINewCompanyContact::getPositionTitle() const {
    return m_position_title;
}
void OAINewCompanyContact::setPositionTitle(const QString &position_title) {
    m_position_title = position_title;
    m_position_title_isSet = true;
}

bool OAINewCompanyContact::is_position_title_Set() const{
    return m_position_title_isSet;
}

bool OAINewCompanyContact::is_position_title_Valid() const{
    return m_position_title_isValid;
}

bool OAINewCompanyContact::isUpdateExisting() const {
    return m_update_existing;
}
void OAINewCompanyContact::setUpdateExisting(const bool &update_existing) {
    m_update_existing = update_existing;
    m_update_existing_isSet = true;
}

bool OAINewCompanyContact::is_update_existing_Set() const{
    return m_update_existing_isSet;
}

bool OAINewCompanyContact::is_update_existing_Valid() const{
    return m_update_existing_isValid;
}

bool OAINewCompanyContact::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_company_billing_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_billing_address_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_billing_address_country_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_billing_address_line_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_billing_address_post_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_billing_address_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_idfk_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_firstname_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lastname_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mobile_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_position_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_existing_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINewCompanyContact::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_contact_email_isValid && m_firstname_isValid && m_lastname_isValid && true;
}

} // namespace OpenAPI
