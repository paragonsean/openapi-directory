/**
 * Avaza API Documentation
 * Welcome to the autogenerated documentation & test tool for Avaza's API. <br/><br/><strong>API Security & Authentication</strong><br/>Authentication options include OAuth2 Implicit and Authorization Code flows, and Personal Access Token. All connections should be encrypted over SSL/TLS <br/><br/>You can set up and manage your api authentication credentials from within your Avaza account. (requires Administrator permissions on your Avaza account).<br/><br/> OAuth2 Authorization endpoint: https://any.avaza.com/oauth2/authorize  <br/>OAuth2 Token endpoint: https://any.avaza.com/oauth2/token<br/>Base URL for subsequent API Requests: https://api.avaza.com/ <br/><br/>Blogpost about authenticating with Avaza's API:  https://www.avaza.com/avaza-api-oauth2-authentication/ <br/>Blogpost on using Avaza's webhooks: https://www.avaza.com/avaza-api-webhook-notifications/<br/>The OAuth flow currently issues Access Tokens that last 1 day, and Refresh tokens that last 180 days<br/>The Api respects the security Roles assigned to the authenticating Avaza user and filters the data return appropriately. <br/><br><strong>Support</strong><br/>For API Support, and to request access please contact Avaza Support Team via our support chat. <br/><br/><strong>User Contributed Libraries:</strong><br/>Graciously contributed by 3rd party users like you. <br/>Note these are not tested or endorsesd by Avaza. We encourage you to review before use, and use at own risk.<br/> <ul><li> - <a target='blank' href='https://packagist.org/packages/debiprasad/oauth2-avaza'>PHP OAuth Client Package for Azava API (by Debiprasad Sahoo)</a></li></ul>
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateProjectMember.h
 *
 * 
 */

#ifndef OAIUpdateProjectMember_H
#define OAIUpdateProjectMember_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateProjectMember : public OAIObject {
public:
    OAIUpdateProjectMember();
    OAIUpdateProjectMember(QString json);
    ~OAIUpdateProjectMember() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getBudgetAmount() const;
    void setBudgetAmount(const double &budget_amount);
    bool is_budget_amount_Set() const;
    bool is_budget_amount_Valid() const;

    double getCostAmount() const;
    void setCostAmount(const double &cost_amount);
    bool is_cost_amount_Set() const;
    bool is_cost_amount_Valid() const;

    QList<QString> getFieldsToUpdate() const;
    void setFieldsToUpdate(const QList<QString> &fields_to_update);
    bool is_fields_to_update_Set() const;
    bool is_fields_to_update_Valid() const;

    qint32 getProjectIdfk() const;
    void setProjectIdfk(const qint32 &project_idfk);
    bool is_project_idfk_Set() const;
    bool is_project_idfk_Valid() const;

    double getRateAmount() const;
    void setRateAmount(const double &rate_amount);
    bool is_rate_amount_Set() const;
    bool is_rate_amount_Valid() const;

    qint32 getUserIdfk() const;
    void setUserIdfk(const qint32 &user_idfk);
    bool is_user_idfk_Set() const;
    bool is_user_idfk_Valid() const;

    bool isCanCommentOnTasks() const;
    void setCanCommentOnTasks(const bool &can_comment_on_tasks);
    bool is_can_comment_on_tasks_Set() const;
    bool is_can_comment_on_tasks_Valid() const;

    bool isCanCreateTasks() const;
    void setCanCreateTasks(const bool &can_create_tasks);
    bool is_can_create_tasks_Set() const;
    bool is_can_create_tasks_Valid() const;

    bool isCanDeleteTasks() const;
    void setCanDeleteTasks(const bool &can_delete_tasks);
    bool is_can_delete_tasks_Set() const;
    bool is_can_delete_tasks_Valid() const;

    bool isCanUpdateTasks() const;
    void setCanUpdateTasks(const bool &can_update_tasks);
    bool is_can_update_tasks_Set() const;
    bool is_can_update_tasks_Valid() const;

    bool isIsTimesheetAllowed() const;
    void setIsTimesheetAllowed(const bool &is_timesheet_allowed);
    bool is_is_timesheet_allowed_Set() const;
    bool is_is_timesheet_allowed_Valid() const;

    bool isIsTimesheetApprovalRequired() const;
    void setIsTimesheetApprovalRequired(const bool &is_timesheet_approval_required);
    bool is_is_timesheet_approval_required_Set() const;
    bool is_is_timesheet_approval_required_Valid() const;

    bool isIsTimesheetApprover() const;
    void setIsTimesheetApprover(const bool &is_timesheet_approver);
    bool is_is_timesheet_approver_Set() const;
    bool is_is_timesheet_approver_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_budget_amount;
    bool m_budget_amount_isSet;
    bool m_budget_amount_isValid;

    double m_cost_amount;
    bool m_cost_amount_isSet;
    bool m_cost_amount_isValid;

    QList<QString> m_fields_to_update;
    bool m_fields_to_update_isSet;
    bool m_fields_to_update_isValid;

    qint32 m_project_idfk;
    bool m_project_idfk_isSet;
    bool m_project_idfk_isValid;

    double m_rate_amount;
    bool m_rate_amount_isSet;
    bool m_rate_amount_isValid;

    qint32 m_user_idfk;
    bool m_user_idfk_isSet;
    bool m_user_idfk_isValid;

    bool m_can_comment_on_tasks;
    bool m_can_comment_on_tasks_isSet;
    bool m_can_comment_on_tasks_isValid;

    bool m_can_create_tasks;
    bool m_can_create_tasks_isSet;
    bool m_can_create_tasks_isValid;

    bool m_can_delete_tasks;
    bool m_can_delete_tasks_isSet;
    bool m_can_delete_tasks_isValid;

    bool m_can_update_tasks;
    bool m_can_update_tasks_isSet;
    bool m_can_update_tasks_isValid;

    bool m_is_timesheet_allowed;
    bool m_is_timesheet_allowed_isSet;
    bool m_is_timesheet_allowed_isValid;

    bool m_is_timesheet_approval_required;
    bool m_is_timesheet_approval_required_isSet;
    bool m_is_timesheet_approval_required_isValid;

    bool m_is_timesheet_approver;
    bool m_is_timesheet_approver_isSet;
    bool m_is_timesheet_approver_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateProjectMember)

#endif // OAIUpdateProjectMember_H
