/**
 * Avaza API Documentation
 * Welcome to the autogenerated documentation & test tool for Avaza's API. <br/><br/><strong>API Security & Authentication</strong><br/>Authentication options include OAuth2 Implicit and Authorization Code flows, and Personal Access Token. All connections should be encrypted over SSL/TLS <br/><br/>You can set up and manage your api authentication credentials from within your Avaza account. (requires Administrator permissions on your Avaza account).<br/><br/> OAuth2 Authorization endpoint: https://any.avaza.com/oauth2/authorize  <br/>OAuth2 Token endpoint: https://any.avaza.com/oauth2/token<br/>Base URL for subsequent API Requests: https://api.avaza.com/ <br/><br/>Blogpost about authenticating with Avaza's API:  https://www.avaza.com/avaza-api-oauth2-authentication/ <br/>Blogpost on using Avaza's webhooks: https://www.avaza.com/avaza-api-webhook-notifications/<br/>The OAuth flow currently issues Access Tokens that last 1 day, and Refresh tokens that last 180 days<br/>The Api respects the security Roles assigned to the authenticating Avaza user and filters the data return appropriately. <br/><br><strong>Support</strong><br/>For API Support, and to request access please contact Avaza Support Team via our support chat. <br/><br/><strong>User Contributed Libraries:</strong><br/>Graciously contributed by 3rd party users like you. <br/>Note these are not tested or endorsesd by Avaza. We encourage you to review before use, and use at own risk.<br/> <ul><li> - <a target='blank' href='https://packagist.org/packages/debiprasad/oauth2-avaza'>PHP OAuth Client Package for Azava API (by Debiprasad Sahoo)</a></li></ul>
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EstimateLineItemDetails model module.
 * @module model/EstimateLineItemDetails
 * @version v1
 */
class EstimateLineItemDetails {
    /**
     * Constructs a new <code>EstimateLineItemDetails</code>.
     * @alias module:model/EstimateLineItemDetails
     */
    constructor() { 
        
        EstimateLineItemDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EstimateLineItemDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EstimateLineItemDetails} obj Optional instance to populate.
     * @return {module:model/EstimateLineItemDetails} The populated <code>EstimateLineItemDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EstimateLineItemDetails();

            if (data.hasOwnProperty('Amount')) {
                obj['Amount'] = ApiClient.convertToType(data['Amount'], 'Number');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('Discount')) {
                obj['Discount'] = ApiClient.convertToType(data['Discount'], 'Number');
            }
            if (data.hasOwnProperty('EstimateLineItemID')) {
                obj['EstimateLineItemID'] = ApiClient.convertToType(data['EstimateLineItemID'], 'Number');
            }
            if (data.hasOwnProperty('InventoryItemIDFK')) {
                obj['InventoryItemIDFK'] = ApiClient.convertToType(data['InventoryItemIDFK'], 'Number');
            }
            if (data.hasOwnProperty('InventoryItemName')) {
                obj['InventoryItemName'] = ApiClient.convertToType(data['InventoryItemName'], 'String');
            }
            if (data.hasOwnProperty('InventoryItemSKU')) {
                obj['InventoryItemSKU'] = ApiClient.convertToType(data['InventoryItemSKU'], 'String');
            }
            if (data.hasOwnProperty('Quantity')) {
                obj['Quantity'] = ApiClient.convertToType(data['Quantity'], 'Number');
            }
            if (data.hasOwnProperty('TaxAmount')) {
                obj['TaxAmount'] = ApiClient.convertToType(data['TaxAmount'], 'Number');
            }
            if (data.hasOwnProperty('TaxCode')) {
                obj['TaxCode'] = ApiClient.convertToType(data['TaxCode'], 'String');
            }
            if (data.hasOwnProperty('TaxIDFK')) {
                obj['TaxIDFK'] = ApiClient.convertToType(data['TaxIDFK'], 'Number');
            }
            if (data.hasOwnProperty('TaxName')) {
                obj['TaxName'] = ApiClient.convertToType(data['TaxName'], 'String');
            }
            if (data.hasOwnProperty('UnitPrice')) {
                obj['UnitPrice'] = ApiClient.convertToType(data['UnitPrice'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EstimateLineItemDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EstimateLineItemDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Description'] && !(typeof data['Description'] === 'string' || data['Description'] instanceof String)) {
            throw new Error("Expected the field `Description` to be a primitive type in the JSON string but got " + data['Description']);
        }
        // ensure the json data is a string
        if (data['InventoryItemName'] && !(typeof data['InventoryItemName'] === 'string' || data['InventoryItemName'] instanceof String)) {
            throw new Error("Expected the field `InventoryItemName` to be a primitive type in the JSON string but got " + data['InventoryItemName']);
        }
        // ensure the json data is a string
        if (data['InventoryItemSKU'] && !(typeof data['InventoryItemSKU'] === 'string' || data['InventoryItemSKU'] instanceof String)) {
            throw new Error("Expected the field `InventoryItemSKU` to be a primitive type in the JSON string but got " + data['InventoryItemSKU']);
        }
        // ensure the json data is a string
        if (data['TaxCode'] && !(typeof data['TaxCode'] === 'string' || data['TaxCode'] instanceof String)) {
            throw new Error("Expected the field `TaxCode` to be a primitive type in the JSON string but got " + data['TaxCode']);
        }
        // ensure the json data is a string
        if (data['TaxName'] && !(typeof data['TaxName'] === 'string' || data['TaxName'] instanceof String)) {
            throw new Error("Expected the field `TaxName` to be a primitive type in the JSON string but got " + data['TaxName']);
        }

        return true;
    }


}



/**
 * @member {Number} Amount
 */
EstimateLineItemDetails.prototype['Amount'] = undefined;

/**
 * @member {String} Description
 */
EstimateLineItemDetails.prototype['Description'] = undefined;

/**
 * @member {Number} Discount
 */
EstimateLineItemDetails.prototype['Discount'] = undefined;

/**
 * @member {Number} EstimateLineItemID
 */
EstimateLineItemDetails.prototype['EstimateLineItemID'] = undefined;

/**
 * @member {Number} InventoryItemIDFK
 */
EstimateLineItemDetails.prototype['InventoryItemIDFK'] = undefined;

/**
 * @member {String} InventoryItemName
 */
EstimateLineItemDetails.prototype['InventoryItemName'] = undefined;

/**
 * @member {String} InventoryItemSKU
 */
EstimateLineItemDetails.prototype['InventoryItemSKU'] = undefined;

/**
 * @member {Number} Quantity
 */
EstimateLineItemDetails.prototype['Quantity'] = undefined;

/**
 * @member {Number} TaxAmount
 */
EstimateLineItemDetails.prototype['TaxAmount'] = undefined;

/**
 * @member {String} TaxCode
 */
EstimateLineItemDetails.prototype['TaxCode'] = undefined;

/**
 * @member {Number} TaxIDFK
 */
EstimateLineItemDetails.prototype['TaxIDFK'] = undefined;

/**
 * @member {String} TaxName
 */
EstimateLineItemDetails.prototype['TaxName'] = undefined;

/**
 * @member {Number} UnitPrice
 */
EstimateLineItemDetails.prototype['UnitPrice'] = undefined;






export default EstimateLineItemDetails;

