/**
 * Avaza API Documentation
 * Welcome to the autogenerated documentation & test tool for Avaza's API. <br/><br/><strong>API Security & Authentication</strong><br/>Authentication options include OAuth2 Implicit and Authorization Code flows, and Personal Access Token. All connections should be encrypted over SSL/TLS <br/><br/>You can set up and manage your api authentication credentials from within your Avaza account. (requires Administrator permissions on your Avaza account).<br/><br/> OAuth2 Authorization endpoint: https://any.avaza.com/oauth2/authorize  <br/>OAuth2 Token endpoint: https://any.avaza.com/oauth2/token<br/>Base URL for subsequent API Requests: https://api.avaza.com/ <br/><br/>Blogpost about authenticating with Avaza's API:  https://www.avaza.com/avaza-api-oauth2-authentication/ <br/>Blogpost on using Avaza's webhooks: https://www.avaza.com/avaza-api-webhook-notifications/<br/>The OAuth flow currently issues Access Tokens that last 1 day, and Refresh tokens that last 180 days<br/>The Api respects the security Roles assigned to the authenticating Avaza user and filters the data return appropriately. <br/><br><strong>Support</strong><br/>For API Support, and to request access please contact Avaza Support Team via our support chat. <br/><br/><strong>User Contributed Libraries:</strong><br/>Graciously contributed by 3rd party users like you. <br/>Note these are not tested or endorsesd by Avaza. We encourage you to review before use, and use at own risk.<br/> <ul><li> - <a target='blank' href='https://packagist.org/packages/debiprasad/oauth2-avaza'>PHP OAuth Client Package for Azava API (by Debiprasad Sahoo)</a></li></ul>
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ExpenseDetails model module.
 * @module model/ExpenseDetails
 * @version v1
 */
class ExpenseDetails {
    /**
     * Constructs a new <code>ExpenseDetails</code>.
     * @alias module:model/ExpenseDetails
     */
    constructor() { 
        
        ExpenseDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExpenseDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExpenseDetails} obj Optional instance to populate.
     * @return {module:model/ExpenseDetails} The populated <code>ExpenseDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExpenseDetails();

            if (data.hasOwnProperty('Amount')) {
                obj['Amount'] = ApiClient.convertToType(data['Amount'], 'Number');
            }
            if (data.hasOwnProperty('AttachmentPreviewURL')) {
                obj['AttachmentPreviewURL'] = ApiClient.convertToType(data['AttachmentPreviewURL'], 'String');
            }
            if (data.hasOwnProperty('AttachmentURL')) {
                obj['AttachmentURL'] = ApiClient.convertToType(data['AttachmentURL'], 'String');
            }
            if (data.hasOwnProperty('ChargeableStatusCode')) {
                obj['ChargeableStatusCode'] = ApiClient.convertToType(data['ChargeableStatusCode'], 'String');
            }
            if (data.hasOwnProperty('CurrencyCode')) {
                obj['CurrencyCode'] = ApiClient.convertToType(data['CurrencyCode'], 'String');
            }
            if (data.hasOwnProperty('CustomerIDFK')) {
                obj['CustomerIDFK'] = ApiClient.convertToType(data['CustomerIDFK'], 'Number');
            }
            if (data.hasOwnProperty('CustomerName')) {
                obj['CustomerName'] = ApiClient.convertToType(data['CustomerName'], 'String');
            }
            if (data.hasOwnProperty('DateCreated')) {
                obj['DateCreated'] = ApiClient.convertToType(data['DateCreated'], 'Date');
            }
            if (data.hasOwnProperty('DateUpdated')) {
                obj['DateUpdated'] = ApiClient.convertToType(data['DateUpdated'], 'Date');
            }
            if (data.hasOwnProperty('Email')) {
                obj['Email'] = ApiClient.convertToType(data['Email'], 'String');
            }
            if (data.hasOwnProperty('ExchangeRate')) {
                obj['ExchangeRate'] = ApiClient.convertToType(data['ExchangeRate'], 'Number');
            }
            if (data.hasOwnProperty('ExpenseApprovalStatusCode')) {
                obj['ExpenseApprovalStatusCode'] = ApiClient.convertToType(data['ExpenseApprovalStatusCode'], 'String');
            }
            if (data.hasOwnProperty('ExpenseCategoryHasUnitPrice')) {
                obj['ExpenseCategoryHasUnitPrice'] = ApiClient.convertToType(data['ExpenseCategoryHasUnitPrice'], 'Boolean');
            }
            if (data.hasOwnProperty('ExpenseCategoryIDFK')) {
                obj['ExpenseCategoryIDFK'] = ApiClient.convertToType(data['ExpenseCategoryIDFK'], 'Number');
            }
            if (data.hasOwnProperty('ExpenseCategoryName')) {
                obj['ExpenseCategoryName'] = ApiClient.convertToType(data['ExpenseCategoryName'], 'String');
            }
            if (data.hasOwnProperty('ExpenseCategoryUnitName')) {
                obj['ExpenseCategoryUnitName'] = ApiClient.convertToType(data['ExpenseCategoryUnitName'], 'String');
            }
            if (data.hasOwnProperty('ExpenseCategoryUnitPrice')) {
                obj['ExpenseCategoryUnitPrice'] = ApiClient.convertToType(data['ExpenseCategoryUnitPrice'], 'Number');
            }
            if (data.hasOwnProperty('ExpenseDate')) {
                obj['ExpenseDate'] = ApiClient.convertToType(data['ExpenseDate'], 'Date');
            }
            if (data.hasOwnProperty('ExpenseID')) {
                obj['ExpenseID'] = ApiClient.convertToType(data['ExpenseID'], 'Number');
            }
            if (data.hasOwnProperty('ExpensePaymentMethodIDFK')) {
                obj['ExpensePaymentMethodIDFK'] = ApiClient.convertToType(data['ExpensePaymentMethodIDFK'], 'Number');
            }
            if (data.hasOwnProperty('ExpensePaymentMethodName')) {
                obj['ExpensePaymentMethodName'] = ApiClient.convertToType(data['ExpensePaymentMethodName'], 'String');
            }
            if (data.hasOwnProperty('ExpenseReimbursementIDFK')) {
                obj['ExpenseReimbursementIDFK'] = ApiClient.convertToType(data['ExpenseReimbursementIDFK'], 'Number');
            }
            if (data.hasOwnProperty('ExpenseReimbursementStatusCode')) {
                obj['ExpenseReimbursementStatusCode'] = ApiClient.convertToType(data['ExpenseReimbursementStatusCode'], 'String');
            }
            if (data.hasOwnProperty('ExpenseReportIDFK')) {
                obj['ExpenseReportIDFK'] = ApiClient.convertToType(data['ExpenseReportIDFK'], 'Number');
            }
            if (data.hasOwnProperty('ExpenseReportName')) {
                obj['ExpenseReportName'] = ApiClient.convertToType(data['ExpenseReportName'], 'String');
            }
            if (data.hasOwnProperty('FileAttachmentIDFK')) {
                obj['FileAttachmentIDFK'] = ApiClient.convertToType(data['FileAttachmentIDFK'], 'Number');
            }
            if (data.hasOwnProperty('Firstname')) {
                obj['Firstname'] = ApiClient.convertToType(data['Firstname'], 'String');
            }
            if (data.hasOwnProperty('Lastname')) {
                obj['Lastname'] = ApiClient.convertToType(data['Lastname'], 'String');
            }
            if (data.hasOwnProperty('Merchant')) {
                obj['Merchant'] = ApiClient.convertToType(data['Merchant'], 'String');
            }
            if (data.hasOwnProperty('MerchantTaxNumber')) {
                obj['MerchantTaxNumber'] = ApiClient.convertToType(data['MerchantTaxNumber'], 'String');
            }
            if (data.hasOwnProperty('Notes')) {
                obj['Notes'] = ApiClient.convertToType(data['Notes'], 'String');
            }
            if (data.hasOwnProperty('ProjectCode')) {
                obj['ProjectCode'] = ApiClient.convertToType(data['ProjectCode'], 'String');
            }
            if (data.hasOwnProperty('ProjectIDFK')) {
                obj['ProjectIDFK'] = ApiClient.convertToType(data['ProjectIDFK'], 'Number');
            }
            if (data.hasOwnProperty('ProjectTitle')) {
                obj['ProjectTitle'] = ApiClient.convertToType(data['ProjectTitle'], 'String');
            }
            if (data.hasOwnProperty('Quantity')) {
                obj['Quantity'] = ApiClient.convertToType(data['Quantity'], 'Number');
            }
            if (data.hasOwnProperty('TaskIDFK')) {
                obj['TaskIDFK'] = ApiClient.convertToType(data['TaskIDFK'], 'Number');
            }
            if (data.hasOwnProperty('TaskTitle')) {
                obj['TaskTitle'] = ApiClient.convertToType(data['TaskTitle'], 'String');
            }
            if (data.hasOwnProperty('TaxAmount')) {
                obj['TaxAmount'] = ApiClient.convertToType(data['TaxAmount'], 'Number');
            }
            if (data.hasOwnProperty('TaxIDFK')) {
                obj['TaxIDFK'] = ApiClient.convertToType(data['TaxIDFK'], 'Number');
            }
            if (data.hasOwnProperty('TaxName')) {
                obj['TaxName'] = ApiClient.convertToType(data['TaxName'], 'String');
            }
            if (data.hasOwnProperty('TransactionTaxConfigCode')) {
                obj['TransactionTaxConfigCode'] = ApiClient.convertToType(data['TransactionTaxConfigCode'], 'String');
            }
            if (data.hasOwnProperty('TransactionTaxConfigName')) {
                obj['TransactionTaxConfigName'] = ApiClient.convertToType(data['TransactionTaxConfigName'], 'String');
            }
            if (data.hasOwnProperty('UserIDFK')) {
                obj['UserIDFK'] = ApiClient.convertToType(data['UserIDFK'], 'Number');
            }
            if (data.hasOwnProperty('isChargeable')) {
                obj['isChargeable'] = ApiClient.convertToType(data['isChargeable'], 'Boolean');
            }
            if (data.hasOwnProperty('isOfficialExchangeRate')) {
                obj['isOfficialExchangeRate'] = ApiClient.convertToType(data['isOfficialExchangeRate'], 'Boolean');
            }
            if (data.hasOwnProperty('isReimbursable')) {
                obj['isReimbursable'] = ApiClient.convertToType(data['isReimbursable'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExpenseDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExpenseDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['AttachmentPreviewURL'] && !(typeof data['AttachmentPreviewURL'] === 'string' || data['AttachmentPreviewURL'] instanceof String)) {
            throw new Error("Expected the field `AttachmentPreviewURL` to be a primitive type in the JSON string but got " + data['AttachmentPreviewURL']);
        }
        // ensure the json data is a string
        if (data['AttachmentURL'] && !(typeof data['AttachmentURL'] === 'string' || data['AttachmentURL'] instanceof String)) {
            throw new Error("Expected the field `AttachmentURL` to be a primitive type in the JSON string but got " + data['AttachmentURL']);
        }
        // ensure the json data is a string
        if (data['ChargeableStatusCode'] && !(typeof data['ChargeableStatusCode'] === 'string' || data['ChargeableStatusCode'] instanceof String)) {
            throw new Error("Expected the field `ChargeableStatusCode` to be a primitive type in the JSON string but got " + data['ChargeableStatusCode']);
        }
        // ensure the json data is a string
        if (data['CurrencyCode'] && !(typeof data['CurrencyCode'] === 'string' || data['CurrencyCode'] instanceof String)) {
            throw new Error("Expected the field `CurrencyCode` to be a primitive type in the JSON string but got " + data['CurrencyCode']);
        }
        // ensure the json data is a string
        if (data['CustomerName'] && !(typeof data['CustomerName'] === 'string' || data['CustomerName'] instanceof String)) {
            throw new Error("Expected the field `CustomerName` to be a primitive type in the JSON string but got " + data['CustomerName']);
        }
        // ensure the json data is a string
        if (data['Email'] && !(typeof data['Email'] === 'string' || data['Email'] instanceof String)) {
            throw new Error("Expected the field `Email` to be a primitive type in the JSON string but got " + data['Email']);
        }
        // ensure the json data is a string
        if (data['ExpenseApprovalStatusCode'] && !(typeof data['ExpenseApprovalStatusCode'] === 'string' || data['ExpenseApprovalStatusCode'] instanceof String)) {
            throw new Error("Expected the field `ExpenseApprovalStatusCode` to be a primitive type in the JSON string but got " + data['ExpenseApprovalStatusCode']);
        }
        // ensure the json data is a string
        if (data['ExpenseCategoryName'] && !(typeof data['ExpenseCategoryName'] === 'string' || data['ExpenseCategoryName'] instanceof String)) {
            throw new Error("Expected the field `ExpenseCategoryName` to be a primitive type in the JSON string but got " + data['ExpenseCategoryName']);
        }
        // ensure the json data is a string
        if (data['ExpenseCategoryUnitName'] && !(typeof data['ExpenseCategoryUnitName'] === 'string' || data['ExpenseCategoryUnitName'] instanceof String)) {
            throw new Error("Expected the field `ExpenseCategoryUnitName` to be a primitive type in the JSON string but got " + data['ExpenseCategoryUnitName']);
        }
        // ensure the json data is a string
        if (data['ExpensePaymentMethodName'] && !(typeof data['ExpensePaymentMethodName'] === 'string' || data['ExpensePaymentMethodName'] instanceof String)) {
            throw new Error("Expected the field `ExpensePaymentMethodName` to be a primitive type in the JSON string but got " + data['ExpensePaymentMethodName']);
        }
        // ensure the json data is a string
        if (data['ExpenseReimbursementStatusCode'] && !(typeof data['ExpenseReimbursementStatusCode'] === 'string' || data['ExpenseReimbursementStatusCode'] instanceof String)) {
            throw new Error("Expected the field `ExpenseReimbursementStatusCode` to be a primitive type in the JSON string but got " + data['ExpenseReimbursementStatusCode']);
        }
        // ensure the json data is a string
        if (data['ExpenseReportName'] && !(typeof data['ExpenseReportName'] === 'string' || data['ExpenseReportName'] instanceof String)) {
            throw new Error("Expected the field `ExpenseReportName` to be a primitive type in the JSON string but got " + data['ExpenseReportName']);
        }
        // ensure the json data is a string
        if (data['Firstname'] && !(typeof data['Firstname'] === 'string' || data['Firstname'] instanceof String)) {
            throw new Error("Expected the field `Firstname` to be a primitive type in the JSON string but got " + data['Firstname']);
        }
        // ensure the json data is a string
        if (data['Lastname'] && !(typeof data['Lastname'] === 'string' || data['Lastname'] instanceof String)) {
            throw new Error("Expected the field `Lastname` to be a primitive type in the JSON string but got " + data['Lastname']);
        }
        // ensure the json data is a string
        if (data['Merchant'] && !(typeof data['Merchant'] === 'string' || data['Merchant'] instanceof String)) {
            throw new Error("Expected the field `Merchant` to be a primitive type in the JSON string but got " + data['Merchant']);
        }
        // ensure the json data is a string
        if (data['MerchantTaxNumber'] && !(typeof data['MerchantTaxNumber'] === 'string' || data['MerchantTaxNumber'] instanceof String)) {
            throw new Error("Expected the field `MerchantTaxNumber` to be a primitive type in the JSON string but got " + data['MerchantTaxNumber']);
        }
        // ensure the json data is a string
        if (data['Notes'] && !(typeof data['Notes'] === 'string' || data['Notes'] instanceof String)) {
            throw new Error("Expected the field `Notes` to be a primitive type in the JSON string but got " + data['Notes']);
        }
        // ensure the json data is a string
        if (data['ProjectCode'] && !(typeof data['ProjectCode'] === 'string' || data['ProjectCode'] instanceof String)) {
            throw new Error("Expected the field `ProjectCode` to be a primitive type in the JSON string but got " + data['ProjectCode']);
        }
        // ensure the json data is a string
        if (data['ProjectTitle'] && !(typeof data['ProjectTitle'] === 'string' || data['ProjectTitle'] instanceof String)) {
            throw new Error("Expected the field `ProjectTitle` to be a primitive type in the JSON string but got " + data['ProjectTitle']);
        }
        // ensure the json data is a string
        if (data['TaskTitle'] && !(typeof data['TaskTitle'] === 'string' || data['TaskTitle'] instanceof String)) {
            throw new Error("Expected the field `TaskTitle` to be a primitive type in the JSON string but got " + data['TaskTitle']);
        }
        // ensure the json data is a string
        if (data['TaxName'] && !(typeof data['TaxName'] === 'string' || data['TaxName'] instanceof String)) {
            throw new Error("Expected the field `TaxName` to be a primitive type in the JSON string but got " + data['TaxName']);
        }
        // ensure the json data is a string
        if (data['TransactionTaxConfigCode'] && !(typeof data['TransactionTaxConfigCode'] === 'string' || data['TransactionTaxConfigCode'] instanceof String)) {
            throw new Error("Expected the field `TransactionTaxConfigCode` to be a primitive type in the JSON string but got " + data['TransactionTaxConfigCode']);
        }
        // ensure the json data is a string
        if (data['TransactionTaxConfigName'] && !(typeof data['TransactionTaxConfigName'] === 'string' || data['TransactionTaxConfigName'] instanceof String)) {
            throw new Error("Expected the field `TransactionTaxConfigName` to be a primitive type in the JSON string but got " + data['TransactionTaxConfigName']);
        }

        return true;
    }


}



/**
 * @member {Number} Amount
 */
ExpenseDetails.prototype['Amount'] = undefined;

/**
 * @member {String} AttachmentPreviewURL
 */
ExpenseDetails.prototype['AttachmentPreviewURL'] = undefined;

/**
 * @member {String} AttachmentURL
 */
ExpenseDetails.prototype['AttachmentURL'] = undefined;

/**
 * @member {String} ChargeableStatusCode
 */
ExpenseDetails.prototype['ChargeableStatusCode'] = undefined;

/**
 * @member {String} CurrencyCode
 */
ExpenseDetails.prototype['CurrencyCode'] = undefined;

/**
 * @member {Number} CustomerIDFK
 */
ExpenseDetails.prototype['CustomerIDFK'] = undefined;

/**
 * @member {String} CustomerName
 */
ExpenseDetails.prototype['CustomerName'] = undefined;

/**
 * @member {Date} DateCreated
 */
ExpenseDetails.prototype['DateCreated'] = undefined;

/**
 * @member {Date} DateUpdated
 */
ExpenseDetails.prototype['DateUpdated'] = undefined;

/**
 * @member {String} Email
 */
ExpenseDetails.prototype['Email'] = undefined;

/**
 * @member {Number} ExchangeRate
 */
ExpenseDetails.prototype['ExchangeRate'] = undefined;

/**
 * @member {String} ExpenseApprovalStatusCode
 */
ExpenseDetails.prototype['ExpenseApprovalStatusCode'] = undefined;

/**
 * @member {Boolean} ExpenseCategoryHasUnitPrice
 */
ExpenseDetails.prototype['ExpenseCategoryHasUnitPrice'] = undefined;

/**
 * @member {Number} ExpenseCategoryIDFK
 */
ExpenseDetails.prototype['ExpenseCategoryIDFK'] = undefined;

/**
 * @member {String} ExpenseCategoryName
 */
ExpenseDetails.prototype['ExpenseCategoryName'] = undefined;

/**
 * @member {String} ExpenseCategoryUnitName
 */
ExpenseDetails.prototype['ExpenseCategoryUnitName'] = undefined;

/**
 * @member {Number} ExpenseCategoryUnitPrice
 */
ExpenseDetails.prototype['ExpenseCategoryUnitPrice'] = undefined;

/**
 * @member {Date} ExpenseDate
 */
ExpenseDetails.prototype['ExpenseDate'] = undefined;

/**
 * @member {Number} ExpenseID
 */
ExpenseDetails.prototype['ExpenseID'] = undefined;

/**
 * @member {Number} ExpensePaymentMethodIDFK
 */
ExpenseDetails.prototype['ExpensePaymentMethodIDFK'] = undefined;

/**
 * @member {String} ExpensePaymentMethodName
 */
ExpenseDetails.prototype['ExpensePaymentMethodName'] = undefined;

/**
 * @member {Number} ExpenseReimbursementIDFK
 */
ExpenseDetails.prototype['ExpenseReimbursementIDFK'] = undefined;

/**
 * @member {String} ExpenseReimbursementStatusCode
 */
ExpenseDetails.prototype['ExpenseReimbursementStatusCode'] = undefined;

/**
 * @member {Number} ExpenseReportIDFK
 */
ExpenseDetails.prototype['ExpenseReportIDFK'] = undefined;

/**
 * @member {String} ExpenseReportName
 */
ExpenseDetails.prototype['ExpenseReportName'] = undefined;

/**
 * @member {Number} FileAttachmentIDFK
 */
ExpenseDetails.prototype['FileAttachmentIDFK'] = undefined;

/**
 * @member {String} Firstname
 */
ExpenseDetails.prototype['Firstname'] = undefined;

/**
 * @member {String} Lastname
 */
ExpenseDetails.prototype['Lastname'] = undefined;

/**
 * @member {String} Merchant
 */
ExpenseDetails.prototype['Merchant'] = undefined;

/**
 * @member {String} MerchantTaxNumber
 */
ExpenseDetails.prototype['MerchantTaxNumber'] = undefined;

/**
 * @member {String} Notes
 */
ExpenseDetails.prototype['Notes'] = undefined;

/**
 * @member {String} ProjectCode
 */
ExpenseDetails.prototype['ProjectCode'] = undefined;

/**
 * @member {Number} ProjectIDFK
 */
ExpenseDetails.prototype['ProjectIDFK'] = undefined;

/**
 * @member {String} ProjectTitle
 */
ExpenseDetails.prototype['ProjectTitle'] = undefined;

/**
 * @member {Number} Quantity
 */
ExpenseDetails.prototype['Quantity'] = undefined;

/**
 * @member {Number} TaskIDFK
 */
ExpenseDetails.prototype['TaskIDFK'] = undefined;

/**
 * @member {String} TaskTitle
 */
ExpenseDetails.prototype['TaskTitle'] = undefined;

/**
 * @member {Number} TaxAmount
 */
ExpenseDetails.prototype['TaxAmount'] = undefined;

/**
 * @member {Number} TaxIDFK
 */
ExpenseDetails.prototype['TaxIDFK'] = undefined;

/**
 * @member {String} TaxName
 */
ExpenseDetails.prototype['TaxName'] = undefined;

/**
 * @member {String} TransactionTaxConfigCode
 */
ExpenseDetails.prototype['TransactionTaxConfigCode'] = undefined;

/**
 * @member {String} TransactionTaxConfigName
 */
ExpenseDetails.prototype['TransactionTaxConfigName'] = undefined;

/**
 * @member {Number} UserIDFK
 */
ExpenseDetails.prototype['UserIDFK'] = undefined;

/**
 * @member {Boolean} isChargeable
 */
ExpenseDetails.prototype['isChargeable'] = undefined;

/**
 * @member {Boolean} isOfficialExchangeRate
 */
ExpenseDetails.prototype['isOfficialExchangeRate'] = undefined;

/**
 * @member {Boolean} isReimbursable
 */
ExpenseDetails.prototype['isReimbursable'] = undefined;






export default ExpenseDetails;

