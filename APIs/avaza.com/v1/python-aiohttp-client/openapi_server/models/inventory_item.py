# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InventoryItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cost_price: float=None, date_created: datetime=None, date_updated: datetime=None, description: str=None, inventory_item_id: int=None, name: str=None, sku: str=None, sale_price: float=None, sale_tax_idfk: int=None, is_hidden: bool=None):
        """InventoryItem - a model defined in OpenAPI

        :param cost_price: The cost_price of this InventoryItem.
        :param date_created: The date_created of this InventoryItem.
        :param date_updated: The date_updated of this InventoryItem.
        :param description: The description of this InventoryItem.
        :param inventory_item_id: The inventory_item_id of this InventoryItem.
        :param name: The name of this InventoryItem.
        :param sku: The sku of this InventoryItem.
        :param sale_price: The sale_price of this InventoryItem.
        :param sale_tax_idfk: The sale_tax_idfk of this InventoryItem.
        :param is_hidden: The is_hidden of this InventoryItem.
        """
        self.openapi_types = {
            'cost_price': float,
            'date_created': datetime,
            'date_updated': datetime,
            'description': str,
            'inventory_item_id': int,
            'name': str,
            'sku': str,
            'sale_price': float,
            'sale_tax_idfk': int,
            'is_hidden': bool
        }

        self.attribute_map = {
            'cost_price': 'CostPrice',
            'date_created': 'DateCreated',
            'date_updated': 'DateUpdated',
            'description': 'Description',
            'inventory_item_id': 'InventoryItemID',
            'name': 'Name',
            'sku': 'SKU',
            'sale_price': 'SalePrice',
            'sale_tax_idfk': 'SaleTaxIDFK',
            'is_hidden': 'isHidden'
        }

        self._cost_price = cost_price
        self._date_created = date_created
        self._date_updated = date_updated
        self._description = description
        self._inventory_item_id = inventory_item_id
        self._name = name
        self._sku = sku
        self._sale_price = sale_price
        self._sale_tax_idfk = sale_tax_idfk
        self._is_hidden = is_hidden

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InventoryItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InventoryItem of this InventoryItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cost_price(self):
        """Gets the cost_price of this InventoryItem.


        :return: The cost_price of this InventoryItem.
        :rtype: float
        """
        return self._cost_price

    @cost_price.setter
    def cost_price(self, cost_price):
        """Sets the cost_price of this InventoryItem.


        :param cost_price: The cost_price of this InventoryItem.
        :type cost_price: float
        """

        self._cost_price = cost_price

    @property
    def date_created(self):
        """Gets the date_created of this InventoryItem.


        :return: The date_created of this InventoryItem.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this InventoryItem.


        :param date_created: The date_created of this InventoryItem.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this InventoryItem.


        :return: The date_updated of this InventoryItem.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this InventoryItem.


        :param date_updated: The date_updated of this InventoryItem.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def description(self):
        """Gets the description of this InventoryItem.


        :return: The description of this InventoryItem.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this InventoryItem.


        :param description: The description of this InventoryItem.
        :type description: str
        """

        self._description = description

    @property
    def inventory_item_id(self):
        """Gets the inventory_item_id of this InventoryItem.


        :return: The inventory_item_id of this InventoryItem.
        :rtype: int
        """
        return self._inventory_item_id

    @inventory_item_id.setter
    def inventory_item_id(self, inventory_item_id):
        """Sets the inventory_item_id of this InventoryItem.


        :param inventory_item_id: The inventory_item_id of this InventoryItem.
        :type inventory_item_id: int
        """

        self._inventory_item_id = inventory_item_id

    @property
    def name(self):
        """Gets the name of this InventoryItem.


        :return: The name of this InventoryItem.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this InventoryItem.


        :param name: The name of this InventoryItem.
        :type name: str
        """

        self._name = name

    @property
    def sku(self):
        """Gets the sku of this InventoryItem.


        :return: The sku of this InventoryItem.
        :rtype: str
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """Sets the sku of this InventoryItem.


        :param sku: The sku of this InventoryItem.
        :type sku: str
        """

        self._sku = sku

    @property
    def sale_price(self):
        """Gets the sale_price of this InventoryItem.


        :return: The sale_price of this InventoryItem.
        :rtype: float
        """
        return self._sale_price

    @sale_price.setter
    def sale_price(self, sale_price):
        """Sets the sale_price of this InventoryItem.


        :param sale_price: The sale_price of this InventoryItem.
        :type sale_price: float
        """

        self._sale_price = sale_price

    @property
    def sale_tax_idfk(self):
        """Gets the sale_tax_idfk of this InventoryItem.


        :return: The sale_tax_idfk of this InventoryItem.
        :rtype: int
        """
        return self._sale_tax_idfk

    @sale_tax_idfk.setter
    def sale_tax_idfk(self, sale_tax_idfk):
        """Sets the sale_tax_idfk of this InventoryItem.


        :param sale_tax_idfk: The sale_tax_idfk of this InventoryItem.
        :type sale_tax_idfk: int
        """

        self._sale_tax_idfk = sale_tax_idfk

    @property
    def is_hidden(self):
        """Gets the is_hidden of this InventoryItem.


        :return: The is_hidden of this InventoryItem.
        :rtype: bool
        """
        return self._is_hidden

    @is_hidden.setter
    def is_hidden(self, is_hidden):
        """Sets the is_hidden of this InventoryItem.


        :param is_hidden: The is_hidden of this InventoryItem.
        :type is_hidden: bool
        """

        self._is_hidden = is_hidden
