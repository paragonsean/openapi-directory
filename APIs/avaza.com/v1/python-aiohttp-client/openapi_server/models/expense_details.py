# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExpenseDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount: float=None, attachment_preview_url: str=None, attachment_url: str=None, chargeable_status_code: str=None, currency_code: str=None, customer_idfk: int=None, customer_name: str=None, date_created: datetime=None, date_updated: datetime=None, email: str=None, exchange_rate: float=None, expense_approval_status_code: str=None, expense_category_has_unit_price: bool=None, expense_category_idfk: int=None, expense_category_name: str=None, expense_category_unit_name: str=None, expense_category_unit_price: float=None, expense_date: datetime=None, expense_id: int=None, expense_payment_method_idfk: int=None, expense_payment_method_name: str=None, expense_reimbursement_idfk: int=None, expense_reimbursement_status_code: str=None, expense_report_idfk: int=None, expense_report_name: str=None, file_attachment_idfk: int=None, firstname: str=None, lastname: str=None, merchant: str=None, merchant_tax_number: str=None, notes: str=None, project_code: str=None, project_idfk: int=None, project_title: str=None, quantity: float=None, task_idfk: int=None, task_title: str=None, tax_amount: float=None, tax_idfk: int=None, tax_name: str=None, transaction_tax_config_code: str=None, transaction_tax_config_name: str=None, user_idfk: int=None, is_chargeable: bool=None, is_official_exchange_rate: bool=None, is_reimbursable: bool=None):
        """ExpenseDetails - a model defined in OpenAPI

        :param amount: The amount of this ExpenseDetails.
        :param attachment_preview_url: The attachment_preview_url of this ExpenseDetails.
        :param attachment_url: The attachment_url of this ExpenseDetails.
        :param chargeable_status_code: The chargeable_status_code of this ExpenseDetails.
        :param currency_code: The currency_code of this ExpenseDetails.
        :param customer_idfk: The customer_idfk of this ExpenseDetails.
        :param customer_name: The customer_name of this ExpenseDetails.
        :param date_created: The date_created of this ExpenseDetails.
        :param date_updated: The date_updated of this ExpenseDetails.
        :param email: The email of this ExpenseDetails.
        :param exchange_rate: The exchange_rate of this ExpenseDetails.
        :param expense_approval_status_code: The expense_approval_status_code of this ExpenseDetails.
        :param expense_category_has_unit_price: The expense_category_has_unit_price of this ExpenseDetails.
        :param expense_category_idfk: The expense_category_idfk of this ExpenseDetails.
        :param expense_category_name: The expense_category_name of this ExpenseDetails.
        :param expense_category_unit_name: The expense_category_unit_name of this ExpenseDetails.
        :param expense_category_unit_price: The expense_category_unit_price of this ExpenseDetails.
        :param expense_date: The expense_date of this ExpenseDetails.
        :param expense_id: The expense_id of this ExpenseDetails.
        :param expense_payment_method_idfk: The expense_payment_method_idfk of this ExpenseDetails.
        :param expense_payment_method_name: The expense_payment_method_name of this ExpenseDetails.
        :param expense_reimbursement_idfk: The expense_reimbursement_idfk of this ExpenseDetails.
        :param expense_reimbursement_status_code: The expense_reimbursement_status_code of this ExpenseDetails.
        :param expense_report_idfk: The expense_report_idfk of this ExpenseDetails.
        :param expense_report_name: The expense_report_name of this ExpenseDetails.
        :param file_attachment_idfk: The file_attachment_idfk of this ExpenseDetails.
        :param firstname: The firstname of this ExpenseDetails.
        :param lastname: The lastname of this ExpenseDetails.
        :param merchant: The merchant of this ExpenseDetails.
        :param merchant_tax_number: The merchant_tax_number of this ExpenseDetails.
        :param notes: The notes of this ExpenseDetails.
        :param project_code: The project_code of this ExpenseDetails.
        :param project_idfk: The project_idfk of this ExpenseDetails.
        :param project_title: The project_title of this ExpenseDetails.
        :param quantity: The quantity of this ExpenseDetails.
        :param task_idfk: The task_idfk of this ExpenseDetails.
        :param task_title: The task_title of this ExpenseDetails.
        :param tax_amount: The tax_amount of this ExpenseDetails.
        :param tax_idfk: The tax_idfk of this ExpenseDetails.
        :param tax_name: The tax_name of this ExpenseDetails.
        :param transaction_tax_config_code: The transaction_tax_config_code of this ExpenseDetails.
        :param transaction_tax_config_name: The transaction_tax_config_name of this ExpenseDetails.
        :param user_idfk: The user_idfk of this ExpenseDetails.
        :param is_chargeable: The is_chargeable of this ExpenseDetails.
        :param is_official_exchange_rate: The is_official_exchange_rate of this ExpenseDetails.
        :param is_reimbursable: The is_reimbursable of this ExpenseDetails.
        """
        self.openapi_types = {
            'amount': float,
            'attachment_preview_url': str,
            'attachment_url': str,
            'chargeable_status_code': str,
            'currency_code': str,
            'customer_idfk': int,
            'customer_name': str,
            'date_created': datetime,
            'date_updated': datetime,
            'email': str,
            'exchange_rate': float,
            'expense_approval_status_code': str,
            'expense_category_has_unit_price': bool,
            'expense_category_idfk': int,
            'expense_category_name': str,
            'expense_category_unit_name': str,
            'expense_category_unit_price': float,
            'expense_date': datetime,
            'expense_id': int,
            'expense_payment_method_idfk': int,
            'expense_payment_method_name': str,
            'expense_reimbursement_idfk': int,
            'expense_reimbursement_status_code': str,
            'expense_report_idfk': int,
            'expense_report_name': str,
            'file_attachment_idfk': int,
            'firstname': str,
            'lastname': str,
            'merchant': str,
            'merchant_tax_number': str,
            'notes': str,
            'project_code': str,
            'project_idfk': int,
            'project_title': str,
            'quantity': float,
            'task_idfk': int,
            'task_title': str,
            'tax_amount': float,
            'tax_idfk': int,
            'tax_name': str,
            'transaction_tax_config_code': str,
            'transaction_tax_config_name': str,
            'user_idfk': int,
            'is_chargeable': bool,
            'is_official_exchange_rate': bool,
            'is_reimbursable': bool
        }

        self.attribute_map = {
            'amount': 'Amount',
            'attachment_preview_url': 'AttachmentPreviewURL',
            'attachment_url': 'AttachmentURL',
            'chargeable_status_code': 'ChargeableStatusCode',
            'currency_code': 'CurrencyCode',
            'customer_idfk': 'CustomerIDFK',
            'customer_name': 'CustomerName',
            'date_created': 'DateCreated',
            'date_updated': 'DateUpdated',
            'email': 'Email',
            'exchange_rate': 'ExchangeRate',
            'expense_approval_status_code': 'ExpenseApprovalStatusCode',
            'expense_category_has_unit_price': 'ExpenseCategoryHasUnitPrice',
            'expense_category_idfk': 'ExpenseCategoryIDFK',
            'expense_category_name': 'ExpenseCategoryName',
            'expense_category_unit_name': 'ExpenseCategoryUnitName',
            'expense_category_unit_price': 'ExpenseCategoryUnitPrice',
            'expense_date': 'ExpenseDate',
            'expense_id': 'ExpenseID',
            'expense_payment_method_idfk': 'ExpensePaymentMethodIDFK',
            'expense_payment_method_name': 'ExpensePaymentMethodName',
            'expense_reimbursement_idfk': 'ExpenseReimbursementIDFK',
            'expense_reimbursement_status_code': 'ExpenseReimbursementStatusCode',
            'expense_report_idfk': 'ExpenseReportIDFK',
            'expense_report_name': 'ExpenseReportName',
            'file_attachment_idfk': 'FileAttachmentIDFK',
            'firstname': 'Firstname',
            'lastname': 'Lastname',
            'merchant': 'Merchant',
            'merchant_tax_number': 'MerchantTaxNumber',
            'notes': 'Notes',
            'project_code': 'ProjectCode',
            'project_idfk': 'ProjectIDFK',
            'project_title': 'ProjectTitle',
            'quantity': 'Quantity',
            'task_idfk': 'TaskIDFK',
            'task_title': 'TaskTitle',
            'tax_amount': 'TaxAmount',
            'tax_idfk': 'TaxIDFK',
            'tax_name': 'TaxName',
            'transaction_tax_config_code': 'TransactionTaxConfigCode',
            'transaction_tax_config_name': 'TransactionTaxConfigName',
            'user_idfk': 'UserIDFK',
            'is_chargeable': 'isChargeable',
            'is_official_exchange_rate': 'isOfficialExchangeRate',
            'is_reimbursable': 'isReimbursable'
        }

        self._amount = amount
        self._attachment_preview_url = attachment_preview_url
        self._attachment_url = attachment_url
        self._chargeable_status_code = chargeable_status_code
        self._currency_code = currency_code
        self._customer_idfk = customer_idfk
        self._customer_name = customer_name
        self._date_created = date_created
        self._date_updated = date_updated
        self._email = email
        self._exchange_rate = exchange_rate
        self._expense_approval_status_code = expense_approval_status_code
        self._expense_category_has_unit_price = expense_category_has_unit_price
        self._expense_category_idfk = expense_category_idfk
        self._expense_category_name = expense_category_name
        self._expense_category_unit_name = expense_category_unit_name
        self._expense_category_unit_price = expense_category_unit_price
        self._expense_date = expense_date
        self._expense_id = expense_id
        self._expense_payment_method_idfk = expense_payment_method_idfk
        self._expense_payment_method_name = expense_payment_method_name
        self._expense_reimbursement_idfk = expense_reimbursement_idfk
        self._expense_reimbursement_status_code = expense_reimbursement_status_code
        self._expense_report_idfk = expense_report_idfk
        self._expense_report_name = expense_report_name
        self._file_attachment_idfk = file_attachment_idfk
        self._firstname = firstname
        self._lastname = lastname
        self._merchant = merchant
        self._merchant_tax_number = merchant_tax_number
        self._notes = notes
        self._project_code = project_code
        self._project_idfk = project_idfk
        self._project_title = project_title
        self._quantity = quantity
        self._task_idfk = task_idfk
        self._task_title = task_title
        self._tax_amount = tax_amount
        self._tax_idfk = tax_idfk
        self._tax_name = tax_name
        self._transaction_tax_config_code = transaction_tax_config_code
        self._transaction_tax_config_name = transaction_tax_config_name
        self._user_idfk = user_idfk
        self._is_chargeable = is_chargeable
        self._is_official_exchange_rate = is_official_exchange_rate
        self._is_reimbursable = is_reimbursable

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExpenseDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExpenseDetails of this ExpenseDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this ExpenseDetails.


        :return: The amount of this ExpenseDetails.
        :rtype: float
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this ExpenseDetails.


        :param amount: The amount of this ExpenseDetails.
        :type amount: float
        """

        self._amount = amount

    @property
    def attachment_preview_url(self):
        """Gets the attachment_preview_url of this ExpenseDetails.


        :return: The attachment_preview_url of this ExpenseDetails.
        :rtype: str
        """
        return self._attachment_preview_url

    @attachment_preview_url.setter
    def attachment_preview_url(self, attachment_preview_url):
        """Sets the attachment_preview_url of this ExpenseDetails.


        :param attachment_preview_url: The attachment_preview_url of this ExpenseDetails.
        :type attachment_preview_url: str
        """

        self._attachment_preview_url = attachment_preview_url

    @property
    def attachment_url(self):
        """Gets the attachment_url of this ExpenseDetails.


        :return: The attachment_url of this ExpenseDetails.
        :rtype: str
        """
        return self._attachment_url

    @attachment_url.setter
    def attachment_url(self, attachment_url):
        """Sets the attachment_url of this ExpenseDetails.


        :param attachment_url: The attachment_url of this ExpenseDetails.
        :type attachment_url: str
        """

        self._attachment_url = attachment_url

    @property
    def chargeable_status_code(self):
        """Gets the chargeable_status_code of this ExpenseDetails.


        :return: The chargeable_status_code of this ExpenseDetails.
        :rtype: str
        """
        return self._chargeable_status_code

    @chargeable_status_code.setter
    def chargeable_status_code(self, chargeable_status_code):
        """Sets the chargeable_status_code of this ExpenseDetails.


        :param chargeable_status_code: The chargeable_status_code of this ExpenseDetails.
        :type chargeable_status_code: str
        """

        self._chargeable_status_code = chargeable_status_code

    @property
    def currency_code(self):
        """Gets the currency_code of this ExpenseDetails.


        :return: The currency_code of this ExpenseDetails.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this ExpenseDetails.


        :param currency_code: The currency_code of this ExpenseDetails.
        :type currency_code: str
        """

        self._currency_code = currency_code

    @property
    def customer_idfk(self):
        """Gets the customer_idfk of this ExpenseDetails.


        :return: The customer_idfk of this ExpenseDetails.
        :rtype: int
        """
        return self._customer_idfk

    @customer_idfk.setter
    def customer_idfk(self, customer_idfk):
        """Sets the customer_idfk of this ExpenseDetails.


        :param customer_idfk: The customer_idfk of this ExpenseDetails.
        :type customer_idfk: int
        """

        self._customer_idfk = customer_idfk

    @property
    def customer_name(self):
        """Gets the customer_name of this ExpenseDetails.


        :return: The customer_name of this ExpenseDetails.
        :rtype: str
        """
        return self._customer_name

    @customer_name.setter
    def customer_name(self, customer_name):
        """Sets the customer_name of this ExpenseDetails.


        :param customer_name: The customer_name of this ExpenseDetails.
        :type customer_name: str
        """

        self._customer_name = customer_name

    @property
    def date_created(self):
        """Gets the date_created of this ExpenseDetails.


        :return: The date_created of this ExpenseDetails.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this ExpenseDetails.


        :param date_created: The date_created of this ExpenseDetails.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this ExpenseDetails.


        :return: The date_updated of this ExpenseDetails.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this ExpenseDetails.


        :param date_updated: The date_updated of this ExpenseDetails.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def email(self):
        """Gets the email of this ExpenseDetails.


        :return: The email of this ExpenseDetails.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this ExpenseDetails.


        :param email: The email of this ExpenseDetails.
        :type email: str
        """

        self._email = email

    @property
    def exchange_rate(self):
        """Gets the exchange_rate of this ExpenseDetails.


        :return: The exchange_rate of this ExpenseDetails.
        :rtype: float
        """
        return self._exchange_rate

    @exchange_rate.setter
    def exchange_rate(self, exchange_rate):
        """Sets the exchange_rate of this ExpenseDetails.


        :param exchange_rate: The exchange_rate of this ExpenseDetails.
        :type exchange_rate: float
        """

        self._exchange_rate = exchange_rate

    @property
    def expense_approval_status_code(self):
        """Gets the expense_approval_status_code of this ExpenseDetails.


        :return: The expense_approval_status_code of this ExpenseDetails.
        :rtype: str
        """
        return self._expense_approval_status_code

    @expense_approval_status_code.setter
    def expense_approval_status_code(self, expense_approval_status_code):
        """Sets the expense_approval_status_code of this ExpenseDetails.


        :param expense_approval_status_code: The expense_approval_status_code of this ExpenseDetails.
        :type expense_approval_status_code: str
        """

        self._expense_approval_status_code = expense_approval_status_code

    @property
    def expense_category_has_unit_price(self):
        """Gets the expense_category_has_unit_price of this ExpenseDetails.


        :return: The expense_category_has_unit_price of this ExpenseDetails.
        :rtype: bool
        """
        return self._expense_category_has_unit_price

    @expense_category_has_unit_price.setter
    def expense_category_has_unit_price(self, expense_category_has_unit_price):
        """Sets the expense_category_has_unit_price of this ExpenseDetails.


        :param expense_category_has_unit_price: The expense_category_has_unit_price of this ExpenseDetails.
        :type expense_category_has_unit_price: bool
        """

        self._expense_category_has_unit_price = expense_category_has_unit_price

    @property
    def expense_category_idfk(self):
        """Gets the expense_category_idfk of this ExpenseDetails.


        :return: The expense_category_idfk of this ExpenseDetails.
        :rtype: int
        """
        return self._expense_category_idfk

    @expense_category_idfk.setter
    def expense_category_idfk(self, expense_category_idfk):
        """Sets the expense_category_idfk of this ExpenseDetails.


        :param expense_category_idfk: The expense_category_idfk of this ExpenseDetails.
        :type expense_category_idfk: int
        """

        self._expense_category_idfk = expense_category_idfk

    @property
    def expense_category_name(self):
        """Gets the expense_category_name of this ExpenseDetails.


        :return: The expense_category_name of this ExpenseDetails.
        :rtype: str
        """
        return self._expense_category_name

    @expense_category_name.setter
    def expense_category_name(self, expense_category_name):
        """Sets the expense_category_name of this ExpenseDetails.


        :param expense_category_name: The expense_category_name of this ExpenseDetails.
        :type expense_category_name: str
        """

        self._expense_category_name = expense_category_name

    @property
    def expense_category_unit_name(self):
        """Gets the expense_category_unit_name of this ExpenseDetails.


        :return: The expense_category_unit_name of this ExpenseDetails.
        :rtype: str
        """
        return self._expense_category_unit_name

    @expense_category_unit_name.setter
    def expense_category_unit_name(self, expense_category_unit_name):
        """Sets the expense_category_unit_name of this ExpenseDetails.


        :param expense_category_unit_name: The expense_category_unit_name of this ExpenseDetails.
        :type expense_category_unit_name: str
        """

        self._expense_category_unit_name = expense_category_unit_name

    @property
    def expense_category_unit_price(self):
        """Gets the expense_category_unit_price of this ExpenseDetails.


        :return: The expense_category_unit_price of this ExpenseDetails.
        :rtype: float
        """
        return self._expense_category_unit_price

    @expense_category_unit_price.setter
    def expense_category_unit_price(self, expense_category_unit_price):
        """Sets the expense_category_unit_price of this ExpenseDetails.


        :param expense_category_unit_price: The expense_category_unit_price of this ExpenseDetails.
        :type expense_category_unit_price: float
        """

        self._expense_category_unit_price = expense_category_unit_price

    @property
    def expense_date(self):
        """Gets the expense_date of this ExpenseDetails.


        :return: The expense_date of this ExpenseDetails.
        :rtype: datetime
        """
        return self._expense_date

    @expense_date.setter
    def expense_date(self, expense_date):
        """Sets the expense_date of this ExpenseDetails.


        :param expense_date: The expense_date of this ExpenseDetails.
        :type expense_date: datetime
        """

        self._expense_date = expense_date

    @property
    def expense_id(self):
        """Gets the expense_id of this ExpenseDetails.


        :return: The expense_id of this ExpenseDetails.
        :rtype: int
        """
        return self._expense_id

    @expense_id.setter
    def expense_id(self, expense_id):
        """Sets the expense_id of this ExpenseDetails.


        :param expense_id: The expense_id of this ExpenseDetails.
        :type expense_id: int
        """

        self._expense_id = expense_id

    @property
    def expense_payment_method_idfk(self):
        """Gets the expense_payment_method_idfk of this ExpenseDetails.


        :return: The expense_payment_method_idfk of this ExpenseDetails.
        :rtype: int
        """
        return self._expense_payment_method_idfk

    @expense_payment_method_idfk.setter
    def expense_payment_method_idfk(self, expense_payment_method_idfk):
        """Sets the expense_payment_method_idfk of this ExpenseDetails.


        :param expense_payment_method_idfk: The expense_payment_method_idfk of this ExpenseDetails.
        :type expense_payment_method_idfk: int
        """

        self._expense_payment_method_idfk = expense_payment_method_idfk

    @property
    def expense_payment_method_name(self):
        """Gets the expense_payment_method_name of this ExpenseDetails.


        :return: The expense_payment_method_name of this ExpenseDetails.
        :rtype: str
        """
        return self._expense_payment_method_name

    @expense_payment_method_name.setter
    def expense_payment_method_name(self, expense_payment_method_name):
        """Sets the expense_payment_method_name of this ExpenseDetails.


        :param expense_payment_method_name: The expense_payment_method_name of this ExpenseDetails.
        :type expense_payment_method_name: str
        """

        self._expense_payment_method_name = expense_payment_method_name

    @property
    def expense_reimbursement_idfk(self):
        """Gets the expense_reimbursement_idfk of this ExpenseDetails.


        :return: The expense_reimbursement_idfk of this ExpenseDetails.
        :rtype: int
        """
        return self._expense_reimbursement_idfk

    @expense_reimbursement_idfk.setter
    def expense_reimbursement_idfk(self, expense_reimbursement_idfk):
        """Sets the expense_reimbursement_idfk of this ExpenseDetails.


        :param expense_reimbursement_idfk: The expense_reimbursement_idfk of this ExpenseDetails.
        :type expense_reimbursement_idfk: int
        """

        self._expense_reimbursement_idfk = expense_reimbursement_idfk

    @property
    def expense_reimbursement_status_code(self):
        """Gets the expense_reimbursement_status_code of this ExpenseDetails.


        :return: The expense_reimbursement_status_code of this ExpenseDetails.
        :rtype: str
        """
        return self._expense_reimbursement_status_code

    @expense_reimbursement_status_code.setter
    def expense_reimbursement_status_code(self, expense_reimbursement_status_code):
        """Sets the expense_reimbursement_status_code of this ExpenseDetails.


        :param expense_reimbursement_status_code: The expense_reimbursement_status_code of this ExpenseDetails.
        :type expense_reimbursement_status_code: str
        """

        self._expense_reimbursement_status_code = expense_reimbursement_status_code

    @property
    def expense_report_idfk(self):
        """Gets the expense_report_idfk of this ExpenseDetails.


        :return: The expense_report_idfk of this ExpenseDetails.
        :rtype: int
        """
        return self._expense_report_idfk

    @expense_report_idfk.setter
    def expense_report_idfk(self, expense_report_idfk):
        """Sets the expense_report_idfk of this ExpenseDetails.


        :param expense_report_idfk: The expense_report_idfk of this ExpenseDetails.
        :type expense_report_idfk: int
        """

        self._expense_report_idfk = expense_report_idfk

    @property
    def expense_report_name(self):
        """Gets the expense_report_name of this ExpenseDetails.


        :return: The expense_report_name of this ExpenseDetails.
        :rtype: str
        """
        return self._expense_report_name

    @expense_report_name.setter
    def expense_report_name(self, expense_report_name):
        """Sets the expense_report_name of this ExpenseDetails.


        :param expense_report_name: The expense_report_name of this ExpenseDetails.
        :type expense_report_name: str
        """

        self._expense_report_name = expense_report_name

    @property
    def file_attachment_idfk(self):
        """Gets the file_attachment_idfk of this ExpenseDetails.


        :return: The file_attachment_idfk of this ExpenseDetails.
        :rtype: int
        """
        return self._file_attachment_idfk

    @file_attachment_idfk.setter
    def file_attachment_idfk(self, file_attachment_idfk):
        """Sets the file_attachment_idfk of this ExpenseDetails.


        :param file_attachment_idfk: The file_attachment_idfk of this ExpenseDetails.
        :type file_attachment_idfk: int
        """

        self._file_attachment_idfk = file_attachment_idfk

    @property
    def firstname(self):
        """Gets the firstname of this ExpenseDetails.


        :return: The firstname of this ExpenseDetails.
        :rtype: str
        """
        return self._firstname

    @firstname.setter
    def firstname(self, firstname):
        """Sets the firstname of this ExpenseDetails.


        :param firstname: The firstname of this ExpenseDetails.
        :type firstname: str
        """

        self._firstname = firstname

    @property
    def lastname(self):
        """Gets the lastname of this ExpenseDetails.


        :return: The lastname of this ExpenseDetails.
        :rtype: str
        """
        return self._lastname

    @lastname.setter
    def lastname(self, lastname):
        """Sets the lastname of this ExpenseDetails.


        :param lastname: The lastname of this ExpenseDetails.
        :type lastname: str
        """

        self._lastname = lastname

    @property
    def merchant(self):
        """Gets the merchant of this ExpenseDetails.


        :return: The merchant of this ExpenseDetails.
        :rtype: str
        """
        return self._merchant

    @merchant.setter
    def merchant(self, merchant):
        """Sets the merchant of this ExpenseDetails.


        :param merchant: The merchant of this ExpenseDetails.
        :type merchant: str
        """

        self._merchant = merchant

    @property
    def merchant_tax_number(self):
        """Gets the merchant_tax_number of this ExpenseDetails.


        :return: The merchant_tax_number of this ExpenseDetails.
        :rtype: str
        """
        return self._merchant_tax_number

    @merchant_tax_number.setter
    def merchant_tax_number(self, merchant_tax_number):
        """Sets the merchant_tax_number of this ExpenseDetails.


        :param merchant_tax_number: The merchant_tax_number of this ExpenseDetails.
        :type merchant_tax_number: str
        """

        self._merchant_tax_number = merchant_tax_number

    @property
    def notes(self):
        """Gets the notes of this ExpenseDetails.


        :return: The notes of this ExpenseDetails.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this ExpenseDetails.


        :param notes: The notes of this ExpenseDetails.
        :type notes: str
        """

        self._notes = notes

    @property
    def project_code(self):
        """Gets the project_code of this ExpenseDetails.


        :return: The project_code of this ExpenseDetails.
        :rtype: str
        """
        return self._project_code

    @project_code.setter
    def project_code(self, project_code):
        """Sets the project_code of this ExpenseDetails.


        :param project_code: The project_code of this ExpenseDetails.
        :type project_code: str
        """

        self._project_code = project_code

    @property
    def project_idfk(self):
        """Gets the project_idfk of this ExpenseDetails.


        :return: The project_idfk of this ExpenseDetails.
        :rtype: int
        """
        return self._project_idfk

    @project_idfk.setter
    def project_idfk(self, project_idfk):
        """Sets the project_idfk of this ExpenseDetails.


        :param project_idfk: The project_idfk of this ExpenseDetails.
        :type project_idfk: int
        """

        self._project_idfk = project_idfk

    @property
    def project_title(self):
        """Gets the project_title of this ExpenseDetails.


        :return: The project_title of this ExpenseDetails.
        :rtype: str
        """
        return self._project_title

    @project_title.setter
    def project_title(self, project_title):
        """Sets the project_title of this ExpenseDetails.


        :param project_title: The project_title of this ExpenseDetails.
        :type project_title: str
        """

        self._project_title = project_title

    @property
    def quantity(self):
        """Gets the quantity of this ExpenseDetails.


        :return: The quantity of this ExpenseDetails.
        :rtype: float
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this ExpenseDetails.


        :param quantity: The quantity of this ExpenseDetails.
        :type quantity: float
        """

        self._quantity = quantity

    @property
    def task_idfk(self):
        """Gets the task_idfk of this ExpenseDetails.


        :return: The task_idfk of this ExpenseDetails.
        :rtype: int
        """
        return self._task_idfk

    @task_idfk.setter
    def task_idfk(self, task_idfk):
        """Sets the task_idfk of this ExpenseDetails.


        :param task_idfk: The task_idfk of this ExpenseDetails.
        :type task_idfk: int
        """

        self._task_idfk = task_idfk

    @property
    def task_title(self):
        """Gets the task_title of this ExpenseDetails.


        :return: The task_title of this ExpenseDetails.
        :rtype: str
        """
        return self._task_title

    @task_title.setter
    def task_title(self, task_title):
        """Sets the task_title of this ExpenseDetails.


        :param task_title: The task_title of this ExpenseDetails.
        :type task_title: str
        """

        self._task_title = task_title

    @property
    def tax_amount(self):
        """Gets the tax_amount of this ExpenseDetails.


        :return: The tax_amount of this ExpenseDetails.
        :rtype: float
        """
        return self._tax_amount

    @tax_amount.setter
    def tax_amount(self, tax_amount):
        """Sets the tax_amount of this ExpenseDetails.


        :param tax_amount: The tax_amount of this ExpenseDetails.
        :type tax_amount: float
        """

        self._tax_amount = tax_amount

    @property
    def tax_idfk(self):
        """Gets the tax_idfk of this ExpenseDetails.


        :return: The tax_idfk of this ExpenseDetails.
        :rtype: int
        """
        return self._tax_idfk

    @tax_idfk.setter
    def tax_idfk(self, tax_idfk):
        """Sets the tax_idfk of this ExpenseDetails.


        :param tax_idfk: The tax_idfk of this ExpenseDetails.
        :type tax_idfk: int
        """

        self._tax_idfk = tax_idfk

    @property
    def tax_name(self):
        """Gets the tax_name of this ExpenseDetails.


        :return: The tax_name of this ExpenseDetails.
        :rtype: str
        """
        return self._tax_name

    @tax_name.setter
    def tax_name(self, tax_name):
        """Sets the tax_name of this ExpenseDetails.


        :param tax_name: The tax_name of this ExpenseDetails.
        :type tax_name: str
        """

        self._tax_name = tax_name

    @property
    def transaction_tax_config_code(self):
        """Gets the transaction_tax_config_code of this ExpenseDetails.


        :return: The transaction_tax_config_code of this ExpenseDetails.
        :rtype: str
        """
        return self._transaction_tax_config_code

    @transaction_tax_config_code.setter
    def transaction_tax_config_code(self, transaction_tax_config_code):
        """Sets the transaction_tax_config_code of this ExpenseDetails.


        :param transaction_tax_config_code: The transaction_tax_config_code of this ExpenseDetails.
        :type transaction_tax_config_code: str
        """

        self._transaction_tax_config_code = transaction_tax_config_code

    @property
    def transaction_tax_config_name(self):
        """Gets the transaction_tax_config_name of this ExpenseDetails.


        :return: The transaction_tax_config_name of this ExpenseDetails.
        :rtype: str
        """
        return self._transaction_tax_config_name

    @transaction_tax_config_name.setter
    def transaction_tax_config_name(self, transaction_tax_config_name):
        """Sets the transaction_tax_config_name of this ExpenseDetails.


        :param transaction_tax_config_name: The transaction_tax_config_name of this ExpenseDetails.
        :type transaction_tax_config_name: str
        """

        self._transaction_tax_config_name = transaction_tax_config_name

    @property
    def user_idfk(self):
        """Gets the user_idfk of this ExpenseDetails.


        :return: The user_idfk of this ExpenseDetails.
        :rtype: int
        """
        return self._user_idfk

    @user_idfk.setter
    def user_idfk(self, user_idfk):
        """Sets the user_idfk of this ExpenseDetails.


        :param user_idfk: The user_idfk of this ExpenseDetails.
        :type user_idfk: int
        """

        self._user_idfk = user_idfk

    @property
    def is_chargeable(self):
        """Gets the is_chargeable of this ExpenseDetails.


        :return: The is_chargeable of this ExpenseDetails.
        :rtype: bool
        """
        return self._is_chargeable

    @is_chargeable.setter
    def is_chargeable(self, is_chargeable):
        """Sets the is_chargeable of this ExpenseDetails.


        :param is_chargeable: The is_chargeable of this ExpenseDetails.
        :type is_chargeable: bool
        """

        self._is_chargeable = is_chargeable

    @property
    def is_official_exchange_rate(self):
        """Gets the is_official_exchange_rate of this ExpenseDetails.


        :return: The is_official_exchange_rate of this ExpenseDetails.
        :rtype: bool
        """
        return self._is_official_exchange_rate

    @is_official_exchange_rate.setter
    def is_official_exchange_rate(self, is_official_exchange_rate):
        """Sets the is_official_exchange_rate of this ExpenseDetails.


        :param is_official_exchange_rate: The is_official_exchange_rate of this ExpenseDetails.
        :type is_official_exchange_rate: bool
        """

        self._is_official_exchange_rate = is_official_exchange_rate

    @property
    def is_reimbursable(self):
        """Gets the is_reimbursable of this ExpenseDetails.


        :return: The is_reimbursable of this ExpenseDetails.
        :rtype: bool
        """
        return self._is_reimbursable

    @is_reimbursable.setter
    def is_reimbursable(self, is_reimbursable):
        """Sets the is_reimbursable of this ExpenseDetails.


        :param is_reimbursable: The is_reimbursable of this ExpenseDetails.
        :type is_reimbursable: bool
        """

        self._is_reimbursable = is_reimbursable
