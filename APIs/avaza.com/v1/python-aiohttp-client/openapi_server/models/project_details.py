# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.project_member_details import ProjectMemberDetails
from openapi_server.models.project_section_details import ProjectSectionDetails
from openapi_server.models.project_tag_item import ProjectTagItem
from openapi_server import util


class ProjectDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, budget_amount: float=None, budget_hours: float=None, company_idfk: int=None, company_name: str=None, date_created: datetime=None, date_updated: datetime=None, default_account_task_type_idfk: int=None, default_account_task_type_name: str=None, end_date: datetime=None, members: List[ProjectMemberDetails]=None, notes: str=None, project_billable_type_code: str=None, project_budget_type_code: str=None, project_category_color: str=None, project_category_idfk: int=None, project_category_name: str=None, project_code: str=None, project_hourly_rate: float=None, project_id: int=None, project_owner_user_idfk: int=None, project_status_code: str=None, project_tags: List[ProjectTagItem]=None, sections: List[ProjectSectionDetails]=None, start_date: datetime=None, title: str=None, is_archived: bool=None, is_task_required_on_timesheet: bool=None):
        """ProjectDetails - a model defined in OpenAPI

        :param budget_amount: The budget_amount of this ProjectDetails.
        :param budget_hours: The budget_hours of this ProjectDetails.
        :param company_idfk: The company_idfk of this ProjectDetails.
        :param company_name: The company_name of this ProjectDetails.
        :param date_created: The date_created of this ProjectDetails.
        :param date_updated: The date_updated of this ProjectDetails.
        :param default_account_task_type_idfk: The default_account_task_type_idfk of this ProjectDetails.
        :param default_account_task_type_name: The default_account_task_type_name of this ProjectDetails.
        :param end_date: The end_date of this ProjectDetails.
        :param members: The members of this ProjectDetails.
        :param notes: The notes of this ProjectDetails.
        :param project_billable_type_code: The project_billable_type_code of this ProjectDetails.
        :param project_budget_type_code: The project_budget_type_code of this ProjectDetails.
        :param project_category_color: The project_category_color of this ProjectDetails.
        :param project_category_idfk: The project_category_idfk of this ProjectDetails.
        :param project_category_name: The project_category_name of this ProjectDetails.
        :param project_code: The project_code of this ProjectDetails.
        :param project_hourly_rate: The project_hourly_rate of this ProjectDetails.
        :param project_id: The project_id of this ProjectDetails.
        :param project_owner_user_idfk: The project_owner_user_idfk of this ProjectDetails.
        :param project_status_code: The project_status_code of this ProjectDetails.
        :param project_tags: The project_tags of this ProjectDetails.
        :param sections: The sections of this ProjectDetails.
        :param start_date: The start_date of this ProjectDetails.
        :param title: The title of this ProjectDetails.
        :param is_archived: The is_archived of this ProjectDetails.
        :param is_task_required_on_timesheet: The is_task_required_on_timesheet of this ProjectDetails.
        """
        self.openapi_types = {
            'budget_amount': float,
            'budget_hours': float,
            'company_idfk': int,
            'company_name': str,
            'date_created': datetime,
            'date_updated': datetime,
            'default_account_task_type_idfk': int,
            'default_account_task_type_name': str,
            'end_date': datetime,
            'members': List[ProjectMemberDetails],
            'notes': str,
            'project_billable_type_code': str,
            'project_budget_type_code': str,
            'project_category_color': str,
            'project_category_idfk': int,
            'project_category_name': str,
            'project_code': str,
            'project_hourly_rate': float,
            'project_id': int,
            'project_owner_user_idfk': int,
            'project_status_code': str,
            'project_tags': List[ProjectTagItem],
            'sections': List[ProjectSectionDetails],
            'start_date': datetime,
            'title': str,
            'is_archived': bool,
            'is_task_required_on_timesheet': bool
        }

        self.attribute_map = {
            'budget_amount': 'BudgetAmount',
            'budget_hours': 'BudgetHours',
            'company_idfk': 'CompanyIDFK',
            'company_name': 'CompanyName',
            'date_created': 'DateCreated',
            'date_updated': 'DateUpdated',
            'default_account_task_type_idfk': 'DefaultAccountTaskTypeIDFK',
            'default_account_task_type_name': 'DefaultAccountTaskTypeName',
            'end_date': 'EndDate',
            'members': 'Members',
            'notes': 'Notes',
            'project_billable_type_code': 'ProjectBillableTypeCode',
            'project_budget_type_code': 'ProjectBudgetTypeCode',
            'project_category_color': 'ProjectCategoryColor',
            'project_category_idfk': 'ProjectCategoryIDFK',
            'project_category_name': 'ProjectCategoryName',
            'project_code': 'ProjectCode',
            'project_hourly_rate': 'ProjectHourlyRate',
            'project_id': 'ProjectID',
            'project_owner_user_idfk': 'ProjectOwnerUserIDFK',
            'project_status_code': 'ProjectStatusCode',
            'project_tags': 'ProjectTags',
            'sections': 'Sections',
            'start_date': 'StartDate',
            'title': 'Title',
            'is_archived': 'isArchived',
            'is_task_required_on_timesheet': 'isTaskRequiredOnTimesheet'
        }

        self._budget_amount = budget_amount
        self._budget_hours = budget_hours
        self._company_idfk = company_idfk
        self._company_name = company_name
        self._date_created = date_created
        self._date_updated = date_updated
        self._default_account_task_type_idfk = default_account_task_type_idfk
        self._default_account_task_type_name = default_account_task_type_name
        self._end_date = end_date
        self._members = members
        self._notes = notes
        self._project_billable_type_code = project_billable_type_code
        self._project_budget_type_code = project_budget_type_code
        self._project_category_color = project_category_color
        self._project_category_idfk = project_category_idfk
        self._project_category_name = project_category_name
        self._project_code = project_code
        self._project_hourly_rate = project_hourly_rate
        self._project_id = project_id
        self._project_owner_user_idfk = project_owner_user_idfk
        self._project_status_code = project_status_code
        self._project_tags = project_tags
        self._sections = sections
        self._start_date = start_date
        self._title = title
        self._is_archived = is_archived
        self._is_task_required_on_timesheet = is_task_required_on_timesheet

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProjectDetails of this ProjectDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def budget_amount(self):
        """Gets the budget_amount of this ProjectDetails.


        :return: The budget_amount of this ProjectDetails.
        :rtype: float
        """
        return self._budget_amount

    @budget_amount.setter
    def budget_amount(self, budget_amount):
        """Sets the budget_amount of this ProjectDetails.


        :param budget_amount: The budget_amount of this ProjectDetails.
        :type budget_amount: float
        """

        self._budget_amount = budget_amount

    @property
    def budget_hours(self):
        """Gets the budget_hours of this ProjectDetails.


        :return: The budget_hours of this ProjectDetails.
        :rtype: float
        """
        return self._budget_hours

    @budget_hours.setter
    def budget_hours(self, budget_hours):
        """Sets the budget_hours of this ProjectDetails.


        :param budget_hours: The budget_hours of this ProjectDetails.
        :type budget_hours: float
        """

        self._budget_hours = budget_hours

    @property
    def company_idfk(self):
        """Gets the company_idfk of this ProjectDetails.


        :return: The company_idfk of this ProjectDetails.
        :rtype: int
        """
        return self._company_idfk

    @company_idfk.setter
    def company_idfk(self, company_idfk):
        """Sets the company_idfk of this ProjectDetails.


        :param company_idfk: The company_idfk of this ProjectDetails.
        :type company_idfk: int
        """

        self._company_idfk = company_idfk

    @property
    def company_name(self):
        """Gets the company_name of this ProjectDetails.


        :return: The company_name of this ProjectDetails.
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name):
        """Sets the company_name of this ProjectDetails.


        :param company_name: The company_name of this ProjectDetails.
        :type company_name: str
        """

        self._company_name = company_name

    @property
    def date_created(self):
        """Gets the date_created of this ProjectDetails.


        :return: The date_created of this ProjectDetails.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this ProjectDetails.


        :param date_created: The date_created of this ProjectDetails.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this ProjectDetails.


        :return: The date_updated of this ProjectDetails.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this ProjectDetails.


        :param date_updated: The date_updated of this ProjectDetails.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def default_account_task_type_idfk(self):
        """Gets the default_account_task_type_idfk of this ProjectDetails.


        :return: The default_account_task_type_idfk of this ProjectDetails.
        :rtype: int
        """
        return self._default_account_task_type_idfk

    @default_account_task_type_idfk.setter
    def default_account_task_type_idfk(self, default_account_task_type_idfk):
        """Sets the default_account_task_type_idfk of this ProjectDetails.


        :param default_account_task_type_idfk: The default_account_task_type_idfk of this ProjectDetails.
        :type default_account_task_type_idfk: int
        """

        self._default_account_task_type_idfk = default_account_task_type_idfk

    @property
    def default_account_task_type_name(self):
        """Gets the default_account_task_type_name of this ProjectDetails.


        :return: The default_account_task_type_name of this ProjectDetails.
        :rtype: str
        """
        return self._default_account_task_type_name

    @default_account_task_type_name.setter
    def default_account_task_type_name(self, default_account_task_type_name):
        """Sets the default_account_task_type_name of this ProjectDetails.


        :param default_account_task_type_name: The default_account_task_type_name of this ProjectDetails.
        :type default_account_task_type_name: str
        """

        self._default_account_task_type_name = default_account_task_type_name

    @property
    def end_date(self):
        """Gets the end_date of this ProjectDetails.


        :return: The end_date of this ProjectDetails.
        :rtype: datetime
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this ProjectDetails.


        :param end_date: The end_date of this ProjectDetails.
        :type end_date: datetime
        """

        self._end_date = end_date

    @property
    def members(self):
        """Gets the members of this ProjectDetails.


        :return: The members of this ProjectDetails.
        :rtype: List[ProjectMemberDetails]
        """
        return self._members

    @members.setter
    def members(self, members):
        """Sets the members of this ProjectDetails.


        :param members: The members of this ProjectDetails.
        :type members: List[ProjectMemberDetails]
        """

        self._members = members

    @property
    def notes(self):
        """Gets the notes of this ProjectDetails.


        :return: The notes of this ProjectDetails.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this ProjectDetails.


        :param notes: The notes of this ProjectDetails.
        :type notes: str
        """

        self._notes = notes

    @property
    def project_billable_type_code(self):
        """Gets the project_billable_type_code of this ProjectDetails.

        Possible values: CategoryHourly, NoRate, NotBillable, PersonHourly, ProjectHourly

        :return: The project_billable_type_code of this ProjectDetails.
        :rtype: str
        """
        return self._project_billable_type_code

    @project_billable_type_code.setter
    def project_billable_type_code(self, project_billable_type_code):
        """Sets the project_billable_type_code of this ProjectDetails.

        Possible values: CategoryHourly, NoRate, NotBillable, PersonHourly, ProjectHourly

        :param project_billable_type_code: The project_billable_type_code of this ProjectDetails.
        :type project_billable_type_code: str
        """

        self._project_billable_type_code = project_billable_type_code

    @property
    def project_budget_type_code(self):
        """Gets the project_budget_type_code of this ProjectDetails.

        Possible Values: CategoryHours, NoBudget, PersonHours, ProjectFees, ProjectHours

        :return: The project_budget_type_code of this ProjectDetails.
        :rtype: str
        """
        return self._project_budget_type_code

    @project_budget_type_code.setter
    def project_budget_type_code(self, project_budget_type_code):
        """Sets the project_budget_type_code of this ProjectDetails.

        Possible Values: CategoryHours, NoBudget, PersonHours, ProjectFees, ProjectHours

        :param project_budget_type_code: The project_budget_type_code of this ProjectDetails.
        :type project_budget_type_code: str
        """

        self._project_budget_type_code = project_budget_type_code

    @property
    def project_category_color(self):
        """Gets the project_category_color of this ProjectDetails.

        Html Hex Color Code starting with #

        :return: The project_category_color of this ProjectDetails.
        :rtype: str
        """
        return self._project_category_color

    @project_category_color.setter
    def project_category_color(self, project_category_color):
        """Sets the project_category_color of this ProjectDetails.

        Html Hex Color Code starting with #

        :param project_category_color: The project_category_color of this ProjectDetails.
        :type project_category_color: str
        """

        self._project_category_color = project_category_color

    @property
    def project_category_idfk(self):
        """Gets the project_category_idfk of this ProjectDetails.


        :return: The project_category_idfk of this ProjectDetails.
        :rtype: int
        """
        return self._project_category_idfk

    @project_category_idfk.setter
    def project_category_idfk(self, project_category_idfk):
        """Sets the project_category_idfk of this ProjectDetails.


        :param project_category_idfk: The project_category_idfk of this ProjectDetails.
        :type project_category_idfk: int
        """

        self._project_category_idfk = project_category_idfk

    @property
    def project_category_name(self):
        """Gets the project_category_name of this ProjectDetails.


        :return: The project_category_name of this ProjectDetails.
        :rtype: str
        """
        return self._project_category_name

    @project_category_name.setter
    def project_category_name(self, project_category_name):
        """Sets the project_category_name of this ProjectDetails.


        :param project_category_name: The project_category_name of this ProjectDetails.
        :type project_category_name: str
        """

        self._project_category_name = project_category_name

    @property
    def project_code(self):
        """Gets the project_code of this ProjectDetails.


        :return: The project_code of this ProjectDetails.
        :rtype: str
        """
        return self._project_code

    @project_code.setter
    def project_code(self, project_code):
        """Sets the project_code of this ProjectDetails.


        :param project_code: The project_code of this ProjectDetails.
        :type project_code: str
        """

        self._project_code = project_code

    @property
    def project_hourly_rate(self):
        """Gets the project_hourly_rate of this ProjectDetails.


        :return: The project_hourly_rate of this ProjectDetails.
        :rtype: float
        """
        return self._project_hourly_rate

    @project_hourly_rate.setter
    def project_hourly_rate(self, project_hourly_rate):
        """Sets the project_hourly_rate of this ProjectDetails.


        :param project_hourly_rate: The project_hourly_rate of this ProjectDetails.
        :type project_hourly_rate: float
        """

        self._project_hourly_rate = project_hourly_rate

    @property
    def project_id(self):
        """Gets the project_id of this ProjectDetails.


        :return: The project_id of this ProjectDetails.
        :rtype: int
        """
        return self._project_id

    @project_id.setter
    def project_id(self, project_id):
        """Sets the project_id of this ProjectDetails.


        :param project_id: The project_id of this ProjectDetails.
        :type project_id: int
        """

        self._project_id = project_id

    @property
    def project_owner_user_idfk(self):
        """Gets the project_owner_user_idfk of this ProjectDetails.


        :return: The project_owner_user_idfk of this ProjectDetails.
        :rtype: int
        """
        return self._project_owner_user_idfk

    @project_owner_user_idfk.setter
    def project_owner_user_idfk(self, project_owner_user_idfk):
        """Sets the project_owner_user_idfk of this ProjectDetails.


        :param project_owner_user_idfk: The project_owner_user_idfk of this ProjectDetails.
        :type project_owner_user_idfk: int
        """

        self._project_owner_user_idfk = project_owner_user_idfk

    @property
    def project_status_code(self):
        """Gets the project_status_code of this ProjectDetails.

        Possible values: NotStarted, InProgress, Complete

        :return: The project_status_code of this ProjectDetails.
        :rtype: str
        """
        return self._project_status_code

    @project_status_code.setter
    def project_status_code(self, project_status_code):
        """Sets the project_status_code of this ProjectDetails.

        Possible values: NotStarted, InProgress, Complete

        :param project_status_code: The project_status_code of this ProjectDetails.
        :type project_status_code: str
        """

        self._project_status_code = project_status_code

    @property
    def project_tags(self):
        """Gets the project_tags of this ProjectDetails.


        :return: The project_tags of this ProjectDetails.
        :rtype: List[ProjectTagItem]
        """
        return self._project_tags

    @project_tags.setter
    def project_tags(self, project_tags):
        """Sets the project_tags of this ProjectDetails.


        :param project_tags: The project_tags of this ProjectDetails.
        :type project_tags: List[ProjectTagItem]
        """

        self._project_tags = project_tags

    @property
    def sections(self):
        """Gets the sections of this ProjectDetails.


        :return: The sections of this ProjectDetails.
        :rtype: List[ProjectSectionDetails]
        """
        return self._sections

    @sections.setter
    def sections(self, sections):
        """Sets the sections of this ProjectDetails.


        :param sections: The sections of this ProjectDetails.
        :type sections: List[ProjectSectionDetails]
        """

        self._sections = sections

    @property
    def start_date(self):
        """Gets the start_date of this ProjectDetails.


        :return: The start_date of this ProjectDetails.
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this ProjectDetails.


        :param start_date: The start_date of this ProjectDetails.
        :type start_date: datetime
        """

        self._start_date = start_date

    @property
    def title(self):
        """Gets the title of this ProjectDetails.


        :return: The title of this ProjectDetails.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this ProjectDetails.


        :param title: The title of this ProjectDetails.
        :type title: str
        """

        self._title = title

    @property
    def is_archived(self):
        """Gets the is_archived of this ProjectDetails.


        :return: The is_archived of this ProjectDetails.
        :rtype: bool
        """
        return self._is_archived

    @is_archived.setter
    def is_archived(self, is_archived):
        """Sets the is_archived of this ProjectDetails.


        :param is_archived: The is_archived of this ProjectDetails.
        :type is_archived: bool
        """

        self._is_archived = is_archived

    @property
    def is_task_required_on_timesheet(self):
        """Gets the is_task_required_on_timesheet of this ProjectDetails.


        :return: The is_task_required_on_timesheet of this ProjectDetails.
        :rtype: bool
        """
        return self._is_task_required_on_timesheet

    @is_task_required_on_timesheet.setter
    def is_task_required_on_timesheet(self, is_task_required_on_timesheet):
        """Sets the is_task_required_on_timesheet of this ProjectDetails.


        :param is_task_required_on_timesheet: The is_task_required_on_timesheet of this ProjectDetails.
        :type is_task_required_on_timesheet: bool
        """

        self._is_task_required_on_timesheet = is_task_required_on_timesheet
