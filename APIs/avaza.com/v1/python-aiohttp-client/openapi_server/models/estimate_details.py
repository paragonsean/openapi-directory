# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.estimate_line_item_details import EstimateLineItemDetails
from openapi_server.models.estimate_links import EstimateLinks
from openapi_server.models.issuer_details import IssuerDetails
from openapi_server.models.recipient_details import RecipientDetails
from openapi_server import util


class EstimateDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_idfk: int=None, balance: float=None, company_idfk: int=None, company_name: str=None, currency_code: str=None, date_created: datetime=None, date_issued: datetime=None, date_sent: datetime=None, date_updated: datetime=None, due_date: datetime=None, estimate_id: int=None, estimate_item_number: str=None, estimate_prefix: str=None, estimate_status_code: str=None, estimate_tax_config_code: str=None, exchange_rate: float=None, issuer: IssuerDetails=None, line_items: List[EstimateLineItemDetails]=None, links: EstimateLinks=None, notes: str=None, recipient: RecipientDetails=None, subject: str=None, tax_amount: float=None, total_amount: float=None):
        """EstimateDetails - a model defined in OpenAPI

        :param account_idfk: The account_idfk of this EstimateDetails.
        :param balance: The balance of this EstimateDetails.
        :param company_idfk: The company_idfk of this EstimateDetails.
        :param company_name: The company_name of this EstimateDetails.
        :param currency_code: The currency_code of this EstimateDetails.
        :param date_created: The date_created of this EstimateDetails.
        :param date_issued: The date_issued of this EstimateDetails.
        :param date_sent: The date_sent of this EstimateDetails.
        :param date_updated: The date_updated of this EstimateDetails.
        :param due_date: The due_date of this EstimateDetails.
        :param estimate_id: The estimate_id of this EstimateDetails.
        :param estimate_item_number: The estimate_item_number of this EstimateDetails.
        :param estimate_prefix: The estimate_prefix of this EstimateDetails.
        :param estimate_status_code: The estimate_status_code of this EstimateDetails.
        :param estimate_tax_config_code: The estimate_tax_config_code of this EstimateDetails.
        :param exchange_rate: The exchange_rate of this EstimateDetails.
        :param issuer: The issuer of this EstimateDetails.
        :param line_items: The line_items of this EstimateDetails.
        :param links: The links of this EstimateDetails.
        :param notes: The notes of this EstimateDetails.
        :param recipient: The recipient of this EstimateDetails.
        :param subject: The subject of this EstimateDetails.
        :param tax_amount: The tax_amount of this EstimateDetails.
        :param total_amount: The total_amount of this EstimateDetails.
        """
        self.openapi_types = {
            'account_idfk': int,
            'balance': float,
            'company_idfk': int,
            'company_name': str,
            'currency_code': str,
            'date_created': datetime,
            'date_issued': datetime,
            'date_sent': datetime,
            'date_updated': datetime,
            'due_date': datetime,
            'estimate_id': int,
            'estimate_item_number': str,
            'estimate_prefix': str,
            'estimate_status_code': str,
            'estimate_tax_config_code': str,
            'exchange_rate': float,
            'issuer': IssuerDetails,
            'line_items': List[EstimateLineItemDetails],
            'links': EstimateLinks,
            'notes': str,
            'recipient': RecipientDetails,
            'subject': str,
            'tax_amount': float,
            'total_amount': float
        }

        self.attribute_map = {
            'account_idfk': 'AccountIDFK',
            'balance': 'Balance',
            'company_idfk': 'CompanyIDFK',
            'company_name': 'CompanyName',
            'currency_code': 'CurrencyCode',
            'date_created': 'DateCreated',
            'date_issued': 'DateIssued',
            'date_sent': 'DateSent',
            'date_updated': 'DateUpdated',
            'due_date': 'DueDate',
            'estimate_id': 'EstimateID',
            'estimate_item_number': 'EstimateItemNumber',
            'estimate_prefix': 'EstimatePrefix',
            'estimate_status_code': 'EstimateStatusCode',
            'estimate_tax_config_code': 'EstimateTaxConfigCode',
            'exchange_rate': 'ExchangeRate',
            'issuer': 'Issuer',
            'line_items': 'LineItems',
            'links': 'Links',
            'notes': 'Notes',
            'recipient': 'Recipient',
            'subject': 'Subject',
            'tax_amount': 'TaxAmount',
            'total_amount': 'TotalAmount'
        }

        self._account_idfk = account_idfk
        self._balance = balance
        self._company_idfk = company_idfk
        self._company_name = company_name
        self._currency_code = currency_code
        self._date_created = date_created
        self._date_issued = date_issued
        self._date_sent = date_sent
        self._date_updated = date_updated
        self._due_date = due_date
        self._estimate_id = estimate_id
        self._estimate_item_number = estimate_item_number
        self._estimate_prefix = estimate_prefix
        self._estimate_status_code = estimate_status_code
        self._estimate_tax_config_code = estimate_tax_config_code
        self._exchange_rate = exchange_rate
        self._issuer = issuer
        self._line_items = line_items
        self._links = links
        self._notes = notes
        self._recipient = recipient
        self._subject = subject
        self._tax_amount = tax_amount
        self._total_amount = total_amount

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EstimateDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EstimateDetails of this EstimateDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_idfk(self):
        """Gets the account_idfk of this EstimateDetails.


        :return: The account_idfk of this EstimateDetails.
        :rtype: int
        """
        return self._account_idfk

    @account_idfk.setter
    def account_idfk(self, account_idfk):
        """Sets the account_idfk of this EstimateDetails.


        :param account_idfk: The account_idfk of this EstimateDetails.
        :type account_idfk: int
        """

        self._account_idfk = account_idfk

    @property
    def balance(self):
        """Gets the balance of this EstimateDetails.


        :return: The balance of this EstimateDetails.
        :rtype: float
        """
        return self._balance

    @balance.setter
    def balance(self, balance):
        """Sets the balance of this EstimateDetails.


        :param balance: The balance of this EstimateDetails.
        :type balance: float
        """

        self._balance = balance

    @property
    def company_idfk(self):
        """Gets the company_idfk of this EstimateDetails.


        :return: The company_idfk of this EstimateDetails.
        :rtype: int
        """
        return self._company_idfk

    @company_idfk.setter
    def company_idfk(self, company_idfk):
        """Sets the company_idfk of this EstimateDetails.


        :param company_idfk: The company_idfk of this EstimateDetails.
        :type company_idfk: int
        """

        self._company_idfk = company_idfk

    @property
    def company_name(self):
        """Gets the company_name of this EstimateDetails.


        :return: The company_name of this EstimateDetails.
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name):
        """Sets the company_name of this EstimateDetails.


        :param company_name: The company_name of this EstimateDetails.
        :type company_name: str
        """

        self._company_name = company_name

    @property
    def currency_code(self):
        """Gets the currency_code of this EstimateDetails.


        :return: The currency_code of this EstimateDetails.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this EstimateDetails.


        :param currency_code: The currency_code of this EstimateDetails.
        :type currency_code: str
        """

        self._currency_code = currency_code

    @property
    def date_created(self):
        """Gets the date_created of this EstimateDetails.


        :return: The date_created of this EstimateDetails.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this EstimateDetails.


        :param date_created: The date_created of this EstimateDetails.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_issued(self):
        """Gets the date_issued of this EstimateDetails.


        :return: The date_issued of this EstimateDetails.
        :rtype: datetime
        """
        return self._date_issued

    @date_issued.setter
    def date_issued(self, date_issued):
        """Sets the date_issued of this EstimateDetails.


        :param date_issued: The date_issued of this EstimateDetails.
        :type date_issued: datetime
        """

        self._date_issued = date_issued

    @property
    def date_sent(self):
        """Gets the date_sent of this EstimateDetails.


        :return: The date_sent of this EstimateDetails.
        :rtype: datetime
        """
        return self._date_sent

    @date_sent.setter
    def date_sent(self, date_sent):
        """Sets the date_sent of this EstimateDetails.


        :param date_sent: The date_sent of this EstimateDetails.
        :type date_sent: datetime
        """

        self._date_sent = date_sent

    @property
    def date_updated(self):
        """Gets the date_updated of this EstimateDetails.


        :return: The date_updated of this EstimateDetails.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this EstimateDetails.


        :param date_updated: The date_updated of this EstimateDetails.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def due_date(self):
        """Gets the due_date of this EstimateDetails.


        :return: The due_date of this EstimateDetails.
        :rtype: datetime
        """
        return self._due_date

    @due_date.setter
    def due_date(self, due_date):
        """Sets the due_date of this EstimateDetails.


        :param due_date: The due_date of this EstimateDetails.
        :type due_date: datetime
        """

        self._due_date = due_date

    @property
    def estimate_id(self):
        """Gets the estimate_id of this EstimateDetails.


        :return: The estimate_id of this EstimateDetails.
        :rtype: int
        """
        return self._estimate_id

    @estimate_id.setter
    def estimate_id(self, estimate_id):
        """Sets the estimate_id of this EstimateDetails.


        :param estimate_id: The estimate_id of this EstimateDetails.
        :type estimate_id: int
        """

        self._estimate_id = estimate_id

    @property
    def estimate_item_number(self):
        """Gets the estimate_item_number of this EstimateDetails.


        :return: The estimate_item_number of this EstimateDetails.
        :rtype: str
        """
        return self._estimate_item_number

    @estimate_item_number.setter
    def estimate_item_number(self, estimate_item_number):
        """Sets the estimate_item_number of this EstimateDetails.


        :param estimate_item_number: The estimate_item_number of this EstimateDetails.
        :type estimate_item_number: str
        """

        self._estimate_item_number = estimate_item_number

    @property
    def estimate_prefix(self):
        """Gets the estimate_prefix of this EstimateDetails.


        :return: The estimate_prefix of this EstimateDetails.
        :rtype: str
        """
        return self._estimate_prefix

    @estimate_prefix.setter
    def estimate_prefix(self, estimate_prefix):
        """Sets the estimate_prefix of this EstimateDetails.


        :param estimate_prefix: The estimate_prefix of this EstimateDetails.
        :type estimate_prefix: str
        """

        self._estimate_prefix = estimate_prefix

    @property
    def estimate_status_code(self):
        """Gets the estimate_status_code of this EstimateDetails.


        :return: The estimate_status_code of this EstimateDetails.
        :rtype: str
        """
        return self._estimate_status_code

    @estimate_status_code.setter
    def estimate_status_code(self, estimate_status_code):
        """Sets the estimate_status_code of this EstimateDetails.


        :param estimate_status_code: The estimate_status_code of this EstimateDetails.
        :type estimate_status_code: str
        """

        self._estimate_status_code = estimate_status_code

    @property
    def estimate_tax_config_code(self):
        """Gets the estimate_tax_config_code of this EstimateDetails.


        :return: The estimate_tax_config_code of this EstimateDetails.
        :rtype: str
        """
        return self._estimate_tax_config_code

    @estimate_tax_config_code.setter
    def estimate_tax_config_code(self, estimate_tax_config_code):
        """Sets the estimate_tax_config_code of this EstimateDetails.


        :param estimate_tax_config_code: The estimate_tax_config_code of this EstimateDetails.
        :type estimate_tax_config_code: str
        """

        self._estimate_tax_config_code = estimate_tax_config_code

    @property
    def exchange_rate(self):
        """Gets the exchange_rate of this EstimateDetails.


        :return: The exchange_rate of this EstimateDetails.
        :rtype: float
        """
        return self._exchange_rate

    @exchange_rate.setter
    def exchange_rate(self, exchange_rate):
        """Sets the exchange_rate of this EstimateDetails.


        :param exchange_rate: The exchange_rate of this EstimateDetails.
        :type exchange_rate: float
        """

        self._exchange_rate = exchange_rate

    @property
    def issuer(self):
        """Gets the issuer of this EstimateDetails.


        :return: The issuer of this EstimateDetails.
        :rtype: IssuerDetails
        """
        return self._issuer

    @issuer.setter
    def issuer(self, issuer):
        """Sets the issuer of this EstimateDetails.


        :param issuer: The issuer of this EstimateDetails.
        :type issuer: IssuerDetails
        """

        self._issuer = issuer

    @property
    def line_items(self):
        """Gets the line_items of this EstimateDetails.


        :return: The line_items of this EstimateDetails.
        :rtype: List[EstimateLineItemDetails]
        """
        return self._line_items

    @line_items.setter
    def line_items(self, line_items):
        """Sets the line_items of this EstimateDetails.


        :param line_items: The line_items of this EstimateDetails.
        :type line_items: List[EstimateLineItemDetails]
        """

        self._line_items = line_items

    @property
    def links(self):
        """Gets the links of this EstimateDetails.


        :return: The links of this EstimateDetails.
        :rtype: EstimateLinks
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this EstimateDetails.


        :param links: The links of this EstimateDetails.
        :type links: EstimateLinks
        """

        self._links = links

    @property
    def notes(self):
        """Gets the notes of this EstimateDetails.


        :return: The notes of this EstimateDetails.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this EstimateDetails.


        :param notes: The notes of this EstimateDetails.
        :type notes: str
        """

        self._notes = notes

    @property
    def recipient(self):
        """Gets the recipient of this EstimateDetails.


        :return: The recipient of this EstimateDetails.
        :rtype: RecipientDetails
        """
        return self._recipient

    @recipient.setter
    def recipient(self, recipient):
        """Sets the recipient of this EstimateDetails.


        :param recipient: The recipient of this EstimateDetails.
        :type recipient: RecipientDetails
        """

        self._recipient = recipient

    @property
    def subject(self):
        """Gets the subject of this EstimateDetails.


        :return: The subject of this EstimateDetails.
        :rtype: str
        """
        return self._subject

    @subject.setter
    def subject(self, subject):
        """Sets the subject of this EstimateDetails.


        :param subject: The subject of this EstimateDetails.
        :type subject: str
        """

        self._subject = subject

    @property
    def tax_amount(self):
        """Gets the tax_amount of this EstimateDetails.


        :return: The tax_amount of this EstimateDetails.
        :rtype: float
        """
        return self._tax_amount

    @tax_amount.setter
    def tax_amount(self, tax_amount):
        """Sets the tax_amount of this EstimateDetails.


        :param tax_amount: The tax_amount of this EstimateDetails.
        :type tax_amount: float
        """

        self._tax_amount = tax_amount

    @property
    def total_amount(self):
        """Gets the total_amount of this EstimateDetails.


        :return: The total_amount of this EstimateDetails.
        :rtype: float
        """
        return self._total_amount

    @total_amount.setter
    def total_amount(self, total_amount):
        """Sets the total_amount of this EstimateDetails.


        :param total_amount: The total_amount of this EstimateDetails.
        :type total_amount: float
        """

        self._total_amount = total_amount
