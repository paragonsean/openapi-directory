# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.project_company_group import ProjectCompanyGroup
from openapi_server import util


class ProjectDropdownList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, page_size: int=None, companies: List[ProjectCompanyGroup]=None, has_more: bool=None, page_number: int=None):
        """ProjectDropdownList - a model defined in OpenAPI

        :param page_size: The page_size of this ProjectDropdownList.
        :param companies: The companies of this ProjectDropdownList.
        :param has_more: The has_more of this ProjectDropdownList.
        :param page_number: The page_number of this ProjectDropdownList.
        """
        self.openapi_types = {
            'page_size': int,
            'companies': List[ProjectCompanyGroup],
            'has_more': bool,
            'page_number': int
        }

        self.attribute_map = {
            'page_size': 'PageSize',
            'companies': 'companies',
            'has_more': 'hasMore',
            'page_number': 'pageNumber'
        }

        self._page_size = page_size
        self._companies = companies
        self._has_more = has_more
        self._page_number = page_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectDropdownList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProjectDropdownList of this ProjectDropdownList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def page_size(self):
        """Gets the page_size of this ProjectDropdownList.

        Current page size

        :return: The page_size of this ProjectDropdownList.
        :rtype: int
        """
        return self._page_size

    @page_size.setter
    def page_size(self, page_size):
        """Sets the page_size of this ProjectDropdownList.

        Current page size

        :param page_size: The page_size of this ProjectDropdownList.
        :type page_size: int
        """

        self._page_size = page_size

    @property
    def companies(self):
        """Gets the companies of this ProjectDropdownList.

        List of Projects grouped by Customer Name

        :return: The companies of this ProjectDropdownList.
        :rtype: List[ProjectCompanyGroup]
        """
        return self._companies

    @companies.setter
    def companies(self, companies):
        """Sets the companies of this ProjectDropdownList.

        List of Projects grouped by Customer Name

        :param companies: The companies of this ProjectDropdownList.
        :type companies: List[ProjectCompanyGroup]
        """

        self._companies = companies

    @property
    def has_more(self):
        """Gets the has_more of this ProjectDropdownList.

        More records probably exist

        :return: The has_more of this ProjectDropdownList.
        :rtype: bool
        """
        return self._has_more

    @has_more.setter
    def has_more(self, has_more):
        """Sets the has_more of this ProjectDropdownList.

        More records probably exist

        :param has_more: The has_more of this ProjectDropdownList.
        :type has_more: bool
        """

        self._has_more = has_more

    @property
    def page_number(self):
        """Gets the page_number of this ProjectDropdownList.

        Current page number (1 based)

        :return: The page_number of this ProjectDropdownList.
        :rtype: int
        """
        return self._page_number

    @page_number.setter
    def page_number(self, page_number):
        """Sets the page_number of this ProjectDropdownList.

        Current page number (1 based)

        :param page_number: The page_number of this ProjectDropdownList.
        :type page_number: int
        """

        self._page_number = page_number
