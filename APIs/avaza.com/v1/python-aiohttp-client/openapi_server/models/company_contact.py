# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CompanyContact(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, company_idfk: int=None, company_name: str=None, contact_id: int=None, date_created: datetime=None, date_updated: datetime=None, email: str=None, firstname: str=None, lastname: str=None, mobile: str=None, phone: str=None, position_title: str=None, time_zone: str=None):
        """CompanyContact - a model defined in OpenAPI

        :param company_idfk: The company_idfk of this CompanyContact.
        :param company_name: The company_name of this CompanyContact.
        :param contact_id: The contact_id of this CompanyContact.
        :param date_created: The date_created of this CompanyContact.
        :param date_updated: The date_updated of this CompanyContact.
        :param email: The email of this CompanyContact.
        :param firstname: The firstname of this CompanyContact.
        :param lastname: The lastname of this CompanyContact.
        :param mobile: The mobile of this CompanyContact.
        :param phone: The phone of this CompanyContact.
        :param position_title: The position_title of this CompanyContact.
        :param time_zone: The time_zone of this CompanyContact.
        """
        self.openapi_types = {
            'company_idfk': int,
            'company_name': str,
            'contact_id': int,
            'date_created': datetime,
            'date_updated': datetime,
            'email': str,
            'firstname': str,
            'lastname': str,
            'mobile': str,
            'phone': str,
            'position_title': str,
            'time_zone': str
        }

        self.attribute_map = {
            'company_idfk': 'CompanyIDFK',
            'company_name': 'CompanyName',
            'contact_id': 'ContactID',
            'date_created': 'DateCreated',
            'date_updated': 'DateUpdated',
            'email': 'Email',
            'firstname': 'Firstname',
            'lastname': 'Lastname',
            'mobile': 'Mobile',
            'phone': 'Phone',
            'position_title': 'PositionTitle',
            'time_zone': 'TimeZone'
        }

        self._company_idfk = company_idfk
        self._company_name = company_name
        self._contact_id = contact_id
        self._date_created = date_created
        self._date_updated = date_updated
        self._email = email
        self._firstname = firstname
        self._lastname = lastname
        self._mobile = mobile
        self._phone = phone
        self._position_title = position_title
        self._time_zone = time_zone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CompanyContact':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CompanyContact of this CompanyContact.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def company_idfk(self):
        """Gets the company_idfk of this CompanyContact.


        :return: The company_idfk of this CompanyContact.
        :rtype: int
        """
        return self._company_idfk

    @company_idfk.setter
    def company_idfk(self, company_idfk):
        """Sets the company_idfk of this CompanyContact.


        :param company_idfk: The company_idfk of this CompanyContact.
        :type company_idfk: int
        """

        self._company_idfk = company_idfk

    @property
    def company_name(self):
        """Gets the company_name of this CompanyContact.


        :return: The company_name of this CompanyContact.
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name):
        """Sets the company_name of this CompanyContact.


        :param company_name: The company_name of this CompanyContact.
        :type company_name: str
        """

        self._company_name = company_name

    @property
    def contact_id(self):
        """Gets the contact_id of this CompanyContact.


        :return: The contact_id of this CompanyContact.
        :rtype: int
        """
        return self._contact_id

    @contact_id.setter
    def contact_id(self, contact_id):
        """Sets the contact_id of this CompanyContact.


        :param contact_id: The contact_id of this CompanyContact.
        :type contact_id: int
        """

        self._contact_id = contact_id

    @property
    def date_created(self):
        """Gets the date_created of this CompanyContact.


        :return: The date_created of this CompanyContact.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this CompanyContact.


        :param date_created: The date_created of this CompanyContact.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this CompanyContact.


        :return: The date_updated of this CompanyContact.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this CompanyContact.


        :param date_updated: The date_updated of this CompanyContact.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def email(self):
        """Gets the email of this CompanyContact.


        :return: The email of this CompanyContact.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this CompanyContact.


        :param email: The email of this CompanyContact.
        :type email: str
        """

        self._email = email

    @property
    def firstname(self):
        """Gets the firstname of this CompanyContact.


        :return: The firstname of this CompanyContact.
        :rtype: str
        """
        return self._firstname

    @firstname.setter
    def firstname(self, firstname):
        """Sets the firstname of this CompanyContact.


        :param firstname: The firstname of this CompanyContact.
        :type firstname: str
        """

        self._firstname = firstname

    @property
    def lastname(self):
        """Gets the lastname of this CompanyContact.


        :return: The lastname of this CompanyContact.
        :rtype: str
        """
        return self._lastname

    @lastname.setter
    def lastname(self, lastname):
        """Sets the lastname of this CompanyContact.


        :param lastname: The lastname of this CompanyContact.
        :type lastname: str
        """

        self._lastname = lastname

    @property
    def mobile(self):
        """Gets the mobile of this CompanyContact.


        :return: The mobile of this CompanyContact.
        :rtype: str
        """
        return self._mobile

    @mobile.setter
    def mobile(self, mobile):
        """Sets the mobile of this CompanyContact.


        :param mobile: The mobile of this CompanyContact.
        :type mobile: str
        """

        self._mobile = mobile

    @property
    def phone(self):
        """Gets the phone of this CompanyContact.


        :return: The phone of this CompanyContact.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this CompanyContact.


        :param phone: The phone of this CompanyContact.
        :type phone: str
        """

        self._phone = phone

    @property
    def position_title(self):
        """Gets the position_title of this CompanyContact.


        :return: The position_title of this CompanyContact.
        :rtype: str
        """
        return self._position_title

    @position_title.setter
    def position_title(self, position_title):
        """Sets the position_title of this CompanyContact.


        :param position_title: The position_title of this CompanyContact.
        :type position_title: str
        """

        self._position_title = position_title

    @property
    def time_zone(self):
        """Gets the time_zone of this CompanyContact.


        :return: The time_zone of this CompanyContact.
        :rtype: str
        """
        return self._time_zone

    @time_zone.setter
    def time_zone(self, time_zone):
        """Sets the time_zone of this CompanyContact.


        :param time_zone: The time_zone of this CompanyContact.
        :type time_zone: str
        """

        self._time_zone = time_zone
