# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.fixed_amount_details import FixedAmountDetails
from openapi_server import util


class FixedAmountList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fixed_amounts: List[FixedAmountDetails]=None, page_number: int=None, page_size: int=None, total_count: int=None):
        """FixedAmountList - a model defined in OpenAPI

        :param fixed_amounts: The fixed_amounts of this FixedAmountList.
        :param page_number: The page_number of this FixedAmountList.
        :param page_size: The page_size of this FixedAmountList.
        :param total_count: The total_count of this FixedAmountList.
        """
        self.openapi_types = {
            'fixed_amounts': List[FixedAmountDetails],
            'page_number': int,
            'page_size': int,
            'total_count': int
        }

        self.attribute_map = {
            'fixed_amounts': 'FixedAmounts',
            'page_number': 'PageNumber',
            'page_size': 'PageSize',
            'total_count': 'TotalCount'
        }

        self._fixed_amounts = fixed_amounts
        self._page_number = page_number
        self._page_size = page_size
        self._total_count = total_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FixedAmountList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FixedAmountList of this FixedAmountList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fixed_amounts(self):
        """Gets the fixed_amounts of this FixedAmountList.


        :return: The fixed_amounts of this FixedAmountList.
        :rtype: List[FixedAmountDetails]
        """
        return self._fixed_amounts

    @fixed_amounts.setter
    def fixed_amounts(self, fixed_amounts):
        """Sets the fixed_amounts of this FixedAmountList.


        :param fixed_amounts: The fixed_amounts of this FixedAmountList.
        :type fixed_amounts: List[FixedAmountDetails]
        """

        self._fixed_amounts = fixed_amounts

    @property
    def page_number(self):
        """Gets the page_number of this FixedAmountList.


        :return: The page_number of this FixedAmountList.
        :rtype: int
        """
        return self._page_number

    @page_number.setter
    def page_number(self, page_number):
        """Sets the page_number of this FixedAmountList.


        :param page_number: The page_number of this FixedAmountList.
        :type page_number: int
        """

        self._page_number = page_number

    @property
    def page_size(self):
        """Gets the page_size of this FixedAmountList.


        :return: The page_size of this FixedAmountList.
        :rtype: int
        """
        return self._page_size

    @page_size.setter
    def page_size(self, page_size):
        """Sets the page_size of this FixedAmountList.


        :param page_size: The page_size of this FixedAmountList.
        :type page_size: int
        """

        self._page_size = page_size

    @property
    def total_count(self):
        """Gets the total_count of this FixedAmountList.


        :return: The total_count of this FixedAmountList.
        :rtype: int
        """
        return self._total_count

    @total_count.setter
    def total_count(self, total_count):
        """Sets the total_count of this FixedAmountList.


        :param total_count: The total_count of this FixedAmountList.
        :type total_count: int
        """

        self._total_count = total_count
