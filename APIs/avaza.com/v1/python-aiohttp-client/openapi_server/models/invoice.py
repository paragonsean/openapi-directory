# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.invoice_line_item import InvoiceLineItem
from openapi_server.models.invoice_links import InvoiceLinks
from openapi_server.models.issuer_details import IssuerDetails
from openapi_server.models.recipient_details import RecipientDetails
from openapi_server import util


class Invoice(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_idfk: int=None, balance: float=None, company_idfk: int=None, company_name: str=None, currency_code: str=None, customer_po_number: str=None, date_created: datetime=None, date_issued: datetime=None, date_sent: datetime=None, date_updated: datetime=None, due_date: datetime=None, exchange_rate: float=None, invoice_number: str=None, issuer: IssuerDetails=None, line_items: List[InvoiceLineItem]=None, links: InvoiceLinks=None, notes: str=None, recipient: RecipientDetails=None, subject: str=None, tax_amount: float=None, total_amount: float=None, transaction_id: int=None, transaction_prefix: str=None, transaction_status_code: str=None, transaction_tax_config_code: str=None):
        """Invoice - a model defined in OpenAPI

        :param account_idfk: The account_idfk of this Invoice.
        :param balance: The balance of this Invoice.
        :param company_idfk: The company_idfk of this Invoice.
        :param company_name: The company_name of this Invoice.
        :param currency_code: The currency_code of this Invoice.
        :param customer_po_number: The customer_po_number of this Invoice.
        :param date_created: The date_created of this Invoice.
        :param date_issued: The date_issued of this Invoice.
        :param date_sent: The date_sent of this Invoice.
        :param date_updated: The date_updated of this Invoice.
        :param due_date: The due_date of this Invoice.
        :param exchange_rate: The exchange_rate of this Invoice.
        :param invoice_number: The invoice_number of this Invoice.
        :param issuer: The issuer of this Invoice.
        :param line_items: The line_items of this Invoice.
        :param links: The links of this Invoice.
        :param notes: The notes of this Invoice.
        :param recipient: The recipient of this Invoice.
        :param subject: The subject of this Invoice.
        :param tax_amount: The tax_amount of this Invoice.
        :param total_amount: The total_amount of this Invoice.
        :param transaction_id: The transaction_id of this Invoice.
        :param transaction_prefix: The transaction_prefix of this Invoice.
        :param transaction_status_code: The transaction_status_code of this Invoice.
        :param transaction_tax_config_code: The transaction_tax_config_code of this Invoice.
        """
        self.openapi_types = {
            'account_idfk': int,
            'balance': float,
            'company_idfk': int,
            'company_name': str,
            'currency_code': str,
            'customer_po_number': str,
            'date_created': datetime,
            'date_issued': datetime,
            'date_sent': datetime,
            'date_updated': datetime,
            'due_date': datetime,
            'exchange_rate': float,
            'invoice_number': str,
            'issuer': IssuerDetails,
            'line_items': List[InvoiceLineItem],
            'links': InvoiceLinks,
            'notes': str,
            'recipient': RecipientDetails,
            'subject': str,
            'tax_amount': float,
            'total_amount': float,
            'transaction_id': int,
            'transaction_prefix': str,
            'transaction_status_code': str,
            'transaction_tax_config_code': str
        }

        self.attribute_map = {
            'account_idfk': 'AccountIDFK',
            'balance': 'Balance',
            'company_idfk': 'CompanyIDFK',
            'company_name': 'CompanyName',
            'currency_code': 'CurrencyCode',
            'customer_po_number': 'CustomerPONumber',
            'date_created': 'DateCreated',
            'date_issued': 'DateIssued',
            'date_sent': 'DateSent',
            'date_updated': 'DateUpdated',
            'due_date': 'DueDate',
            'exchange_rate': 'ExchangeRate',
            'invoice_number': 'InvoiceNumber',
            'issuer': 'Issuer',
            'line_items': 'LineItems',
            'links': 'Links',
            'notes': 'Notes',
            'recipient': 'Recipient',
            'subject': 'Subject',
            'tax_amount': 'TaxAmount',
            'total_amount': 'TotalAmount',
            'transaction_id': 'TransactionID',
            'transaction_prefix': 'TransactionPrefix',
            'transaction_status_code': 'TransactionStatusCode',
            'transaction_tax_config_code': 'TransactionTaxConfigCode'
        }

        self._account_idfk = account_idfk
        self._balance = balance
        self._company_idfk = company_idfk
        self._company_name = company_name
        self._currency_code = currency_code
        self._customer_po_number = customer_po_number
        self._date_created = date_created
        self._date_issued = date_issued
        self._date_sent = date_sent
        self._date_updated = date_updated
        self._due_date = due_date
        self._exchange_rate = exchange_rate
        self._invoice_number = invoice_number
        self._issuer = issuer
        self._line_items = line_items
        self._links = links
        self._notes = notes
        self._recipient = recipient
        self._subject = subject
        self._tax_amount = tax_amount
        self._total_amount = total_amount
        self._transaction_id = transaction_id
        self._transaction_prefix = transaction_prefix
        self._transaction_status_code = transaction_status_code
        self._transaction_tax_config_code = transaction_tax_config_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Invoice':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Invoice of this Invoice.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_idfk(self):
        """Gets the account_idfk of this Invoice.


        :return: The account_idfk of this Invoice.
        :rtype: int
        """
        return self._account_idfk

    @account_idfk.setter
    def account_idfk(self, account_idfk):
        """Sets the account_idfk of this Invoice.


        :param account_idfk: The account_idfk of this Invoice.
        :type account_idfk: int
        """

        self._account_idfk = account_idfk

    @property
    def balance(self):
        """Gets the balance of this Invoice.


        :return: The balance of this Invoice.
        :rtype: float
        """
        return self._balance

    @balance.setter
    def balance(self, balance):
        """Sets the balance of this Invoice.


        :param balance: The balance of this Invoice.
        :type balance: float
        """

        self._balance = balance

    @property
    def company_idfk(self):
        """Gets the company_idfk of this Invoice.


        :return: The company_idfk of this Invoice.
        :rtype: int
        """
        return self._company_idfk

    @company_idfk.setter
    def company_idfk(self, company_idfk):
        """Sets the company_idfk of this Invoice.


        :param company_idfk: The company_idfk of this Invoice.
        :type company_idfk: int
        """

        self._company_idfk = company_idfk

    @property
    def company_name(self):
        """Gets the company_name of this Invoice.


        :return: The company_name of this Invoice.
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name):
        """Sets the company_name of this Invoice.


        :param company_name: The company_name of this Invoice.
        :type company_name: str
        """

        self._company_name = company_name

    @property
    def currency_code(self):
        """Gets the currency_code of this Invoice.


        :return: The currency_code of this Invoice.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this Invoice.


        :param currency_code: The currency_code of this Invoice.
        :type currency_code: str
        """

        self._currency_code = currency_code

    @property
    def customer_po_number(self):
        """Gets the customer_po_number of this Invoice.


        :return: The customer_po_number of this Invoice.
        :rtype: str
        """
        return self._customer_po_number

    @customer_po_number.setter
    def customer_po_number(self, customer_po_number):
        """Sets the customer_po_number of this Invoice.


        :param customer_po_number: The customer_po_number of this Invoice.
        :type customer_po_number: str
        """

        self._customer_po_number = customer_po_number

    @property
    def date_created(self):
        """Gets the date_created of this Invoice.


        :return: The date_created of this Invoice.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this Invoice.


        :param date_created: The date_created of this Invoice.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_issued(self):
        """Gets the date_issued of this Invoice.


        :return: The date_issued of this Invoice.
        :rtype: datetime
        """
        return self._date_issued

    @date_issued.setter
    def date_issued(self, date_issued):
        """Sets the date_issued of this Invoice.


        :param date_issued: The date_issued of this Invoice.
        :type date_issued: datetime
        """

        self._date_issued = date_issued

    @property
    def date_sent(self):
        """Gets the date_sent of this Invoice.


        :return: The date_sent of this Invoice.
        :rtype: datetime
        """
        return self._date_sent

    @date_sent.setter
    def date_sent(self, date_sent):
        """Sets the date_sent of this Invoice.


        :param date_sent: The date_sent of this Invoice.
        :type date_sent: datetime
        """

        self._date_sent = date_sent

    @property
    def date_updated(self):
        """Gets the date_updated of this Invoice.


        :return: The date_updated of this Invoice.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this Invoice.


        :param date_updated: The date_updated of this Invoice.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def due_date(self):
        """Gets the due_date of this Invoice.


        :return: The due_date of this Invoice.
        :rtype: datetime
        """
        return self._due_date

    @due_date.setter
    def due_date(self, due_date):
        """Sets the due_date of this Invoice.


        :param due_date: The due_date of this Invoice.
        :type due_date: datetime
        """

        self._due_date = due_date

    @property
    def exchange_rate(self):
        """Gets the exchange_rate of this Invoice.


        :return: The exchange_rate of this Invoice.
        :rtype: float
        """
        return self._exchange_rate

    @exchange_rate.setter
    def exchange_rate(self, exchange_rate):
        """Sets the exchange_rate of this Invoice.


        :param exchange_rate: The exchange_rate of this Invoice.
        :type exchange_rate: float
        """

        self._exchange_rate = exchange_rate

    @property
    def invoice_number(self):
        """Gets the invoice_number of this Invoice.


        :return: The invoice_number of this Invoice.
        :rtype: str
        """
        return self._invoice_number

    @invoice_number.setter
    def invoice_number(self, invoice_number):
        """Sets the invoice_number of this Invoice.


        :param invoice_number: The invoice_number of this Invoice.
        :type invoice_number: str
        """

        self._invoice_number = invoice_number

    @property
    def issuer(self):
        """Gets the issuer of this Invoice.


        :return: The issuer of this Invoice.
        :rtype: IssuerDetails
        """
        return self._issuer

    @issuer.setter
    def issuer(self, issuer):
        """Sets the issuer of this Invoice.


        :param issuer: The issuer of this Invoice.
        :type issuer: IssuerDetails
        """

        self._issuer = issuer

    @property
    def line_items(self):
        """Gets the line_items of this Invoice.


        :return: The line_items of this Invoice.
        :rtype: List[InvoiceLineItem]
        """
        return self._line_items

    @line_items.setter
    def line_items(self, line_items):
        """Sets the line_items of this Invoice.


        :param line_items: The line_items of this Invoice.
        :type line_items: List[InvoiceLineItem]
        """

        self._line_items = line_items

    @property
    def links(self):
        """Gets the links of this Invoice.


        :return: The links of this Invoice.
        :rtype: InvoiceLinks
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this Invoice.


        :param links: The links of this Invoice.
        :type links: InvoiceLinks
        """

        self._links = links

    @property
    def notes(self):
        """Gets the notes of this Invoice.


        :return: The notes of this Invoice.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this Invoice.


        :param notes: The notes of this Invoice.
        :type notes: str
        """

        self._notes = notes

    @property
    def recipient(self):
        """Gets the recipient of this Invoice.


        :return: The recipient of this Invoice.
        :rtype: RecipientDetails
        """
        return self._recipient

    @recipient.setter
    def recipient(self, recipient):
        """Sets the recipient of this Invoice.


        :param recipient: The recipient of this Invoice.
        :type recipient: RecipientDetails
        """

        self._recipient = recipient

    @property
    def subject(self):
        """Gets the subject of this Invoice.


        :return: The subject of this Invoice.
        :rtype: str
        """
        return self._subject

    @subject.setter
    def subject(self, subject):
        """Sets the subject of this Invoice.


        :param subject: The subject of this Invoice.
        :type subject: str
        """

        self._subject = subject

    @property
    def tax_amount(self):
        """Gets the tax_amount of this Invoice.


        :return: The tax_amount of this Invoice.
        :rtype: float
        """
        return self._tax_amount

    @tax_amount.setter
    def tax_amount(self, tax_amount):
        """Sets the tax_amount of this Invoice.


        :param tax_amount: The tax_amount of this Invoice.
        :type tax_amount: float
        """

        self._tax_amount = tax_amount

    @property
    def total_amount(self):
        """Gets the total_amount of this Invoice.


        :return: The total_amount of this Invoice.
        :rtype: float
        """
        return self._total_amount

    @total_amount.setter
    def total_amount(self, total_amount):
        """Sets the total_amount of this Invoice.


        :param total_amount: The total_amount of this Invoice.
        :type total_amount: float
        """

        self._total_amount = total_amount

    @property
    def transaction_id(self):
        """Gets the transaction_id of this Invoice.


        :return: The transaction_id of this Invoice.
        :rtype: int
        """
        return self._transaction_id

    @transaction_id.setter
    def transaction_id(self, transaction_id):
        """Sets the transaction_id of this Invoice.


        :param transaction_id: The transaction_id of this Invoice.
        :type transaction_id: int
        """

        self._transaction_id = transaction_id

    @property
    def transaction_prefix(self):
        """Gets the transaction_prefix of this Invoice.


        :return: The transaction_prefix of this Invoice.
        :rtype: str
        """
        return self._transaction_prefix

    @transaction_prefix.setter
    def transaction_prefix(self, transaction_prefix):
        """Sets the transaction_prefix of this Invoice.


        :param transaction_prefix: The transaction_prefix of this Invoice.
        :type transaction_prefix: str
        """

        self._transaction_prefix = transaction_prefix

    @property
    def transaction_status_code(self):
        """Gets the transaction_status_code of this Invoice.


        :return: The transaction_status_code of this Invoice.
        :rtype: str
        """
        return self._transaction_status_code

    @transaction_status_code.setter
    def transaction_status_code(self, transaction_status_code):
        """Sets the transaction_status_code of this Invoice.


        :param transaction_status_code: The transaction_status_code of this Invoice.
        :type transaction_status_code: str
        """

        self._transaction_status_code = transaction_status_code

    @property
    def transaction_tax_config_code(self):
        """Gets the transaction_tax_config_code of this Invoice.


        :return: The transaction_tax_config_code of this Invoice.
        :rtype: str
        """
        return self._transaction_tax_config_code

    @transaction_tax_config_code.setter
    def transaction_tax_config_code(self, transaction_tax_config_code):
        """Sets the transaction_tax_config_code of this Invoice.


        :param transaction_tax_config_code: The transaction_tax_config_code of this Invoice.
        :type transaction_tax_config_code: str
        """

        self._transaction_tax_config_code = transaction_tax_config_code
