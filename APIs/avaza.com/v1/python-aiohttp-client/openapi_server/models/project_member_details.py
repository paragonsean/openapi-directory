# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProjectMemberDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, budget_amount: float=None, cost_amount: float=None, email: str=None, firstname: str=None, fullname: str=None, lastname: str=None, project_idfk: int=None, rate_amount: float=None, user_idfk: int=None, can_comment_on_tasks: bool=None, can_create_tasks: bool=None, can_delete_tasks: bool=None, can_update_tasks: bool=None, is_member_disabled: bool=None, is_timesheet_allowed: bool=None, is_timesheet_approval_required: bool=None, is_timesheet_approver: bool=None):
        """ProjectMemberDetails - a model defined in OpenAPI

        :param budget_amount: The budget_amount of this ProjectMemberDetails.
        :param cost_amount: The cost_amount of this ProjectMemberDetails.
        :param email: The email of this ProjectMemberDetails.
        :param firstname: The firstname of this ProjectMemberDetails.
        :param fullname: The fullname of this ProjectMemberDetails.
        :param lastname: The lastname of this ProjectMemberDetails.
        :param project_idfk: The project_idfk of this ProjectMemberDetails.
        :param rate_amount: The rate_amount of this ProjectMemberDetails.
        :param user_idfk: The user_idfk of this ProjectMemberDetails.
        :param can_comment_on_tasks: The can_comment_on_tasks of this ProjectMemberDetails.
        :param can_create_tasks: The can_create_tasks of this ProjectMemberDetails.
        :param can_delete_tasks: The can_delete_tasks of this ProjectMemberDetails.
        :param can_update_tasks: The can_update_tasks of this ProjectMemberDetails.
        :param is_member_disabled: The is_member_disabled of this ProjectMemberDetails.
        :param is_timesheet_allowed: The is_timesheet_allowed of this ProjectMemberDetails.
        :param is_timesheet_approval_required: The is_timesheet_approval_required of this ProjectMemberDetails.
        :param is_timesheet_approver: The is_timesheet_approver of this ProjectMemberDetails.
        """
        self.openapi_types = {
            'budget_amount': float,
            'cost_amount': float,
            'email': str,
            'firstname': str,
            'fullname': str,
            'lastname': str,
            'project_idfk': int,
            'rate_amount': float,
            'user_idfk': int,
            'can_comment_on_tasks': bool,
            'can_create_tasks': bool,
            'can_delete_tasks': bool,
            'can_update_tasks': bool,
            'is_member_disabled': bool,
            'is_timesheet_allowed': bool,
            'is_timesheet_approval_required': bool,
            'is_timesheet_approver': bool
        }

        self.attribute_map = {
            'budget_amount': 'BudgetAmount',
            'cost_amount': 'CostAmount',
            'email': 'Email',
            'firstname': 'Firstname',
            'fullname': 'Fullname',
            'lastname': 'Lastname',
            'project_idfk': 'ProjectIDFK',
            'rate_amount': 'RateAmount',
            'user_idfk': 'UserIDFK',
            'can_comment_on_tasks': 'canCommentOnTasks',
            'can_create_tasks': 'canCreateTasks',
            'can_delete_tasks': 'canDeleteTasks',
            'can_update_tasks': 'canUpdateTasks',
            'is_member_disabled': 'isMemberDisabled',
            'is_timesheet_allowed': 'isTimesheetAllowed',
            'is_timesheet_approval_required': 'isTimesheetApprovalRequired',
            'is_timesheet_approver': 'isTimesheetApprover'
        }

        self._budget_amount = budget_amount
        self._cost_amount = cost_amount
        self._email = email
        self._firstname = firstname
        self._fullname = fullname
        self._lastname = lastname
        self._project_idfk = project_idfk
        self._rate_amount = rate_amount
        self._user_idfk = user_idfk
        self._can_comment_on_tasks = can_comment_on_tasks
        self._can_create_tasks = can_create_tasks
        self._can_delete_tasks = can_delete_tasks
        self._can_update_tasks = can_update_tasks
        self._is_member_disabled = is_member_disabled
        self._is_timesheet_allowed = is_timesheet_allowed
        self._is_timesheet_approval_required = is_timesheet_approval_required
        self._is_timesheet_approver = is_timesheet_approver

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectMemberDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProjectMemberDetails of this ProjectMemberDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def budget_amount(self):
        """Gets the budget_amount of this ProjectMemberDetails.


        :return: The budget_amount of this ProjectMemberDetails.
        :rtype: float
        """
        return self._budget_amount

    @budget_amount.setter
    def budget_amount(self, budget_amount):
        """Sets the budget_amount of this ProjectMemberDetails.


        :param budget_amount: The budget_amount of this ProjectMemberDetails.
        :type budget_amount: float
        """

        self._budget_amount = budget_amount

    @property
    def cost_amount(self):
        """Gets the cost_amount of this ProjectMemberDetails.


        :return: The cost_amount of this ProjectMemberDetails.
        :rtype: float
        """
        return self._cost_amount

    @cost_amount.setter
    def cost_amount(self, cost_amount):
        """Sets the cost_amount of this ProjectMemberDetails.


        :param cost_amount: The cost_amount of this ProjectMemberDetails.
        :type cost_amount: float
        """

        self._cost_amount = cost_amount

    @property
    def email(self):
        """Gets the email of this ProjectMemberDetails.


        :return: The email of this ProjectMemberDetails.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this ProjectMemberDetails.


        :param email: The email of this ProjectMemberDetails.
        :type email: str
        """

        self._email = email

    @property
    def firstname(self):
        """Gets the firstname of this ProjectMemberDetails.


        :return: The firstname of this ProjectMemberDetails.
        :rtype: str
        """
        return self._firstname

    @firstname.setter
    def firstname(self, firstname):
        """Sets the firstname of this ProjectMemberDetails.


        :param firstname: The firstname of this ProjectMemberDetails.
        :type firstname: str
        """

        self._firstname = firstname

    @property
    def fullname(self):
        """Gets the fullname of this ProjectMemberDetails.


        :return: The fullname of this ProjectMemberDetails.
        :rtype: str
        """
        return self._fullname

    @fullname.setter
    def fullname(self, fullname):
        """Sets the fullname of this ProjectMemberDetails.


        :param fullname: The fullname of this ProjectMemberDetails.
        :type fullname: str
        """

        self._fullname = fullname

    @property
    def lastname(self):
        """Gets the lastname of this ProjectMemberDetails.


        :return: The lastname of this ProjectMemberDetails.
        :rtype: str
        """
        return self._lastname

    @lastname.setter
    def lastname(self, lastname):
        """Sets the lastname of this ProjectMemberDetails.


        :param lastname: The lastname of this ProjectMemberDetails.
        :type lastname: str
        """

        self._lastname = lastname

    @property
    def project_idfk(self):
        """Gets the project_idfk of this ProjectMemberDetails.


        :return: The project_idfk of this ProjectMemberDetails.
        :rtype: int
        """
        return self._project_idfk

    @project_idfk.setter
    def project_idfk(self, project_idfk):
        """Sets the project_idfk of this ProjectMemberDetails.


        :param project_idfk: The project_idfk of this ProjectMemberDetails.
        :type project_idfk: int
        """

        self._project_idfk = project_idfk

    @property
    def rate_amount(self):
        """Gets the rate_amount of this ProjectMemberDetails.


        :return: The rate_amount of this ProjectMemberDetails.
        :rtype: float
        """
        return self._rate_amount

    @rate_amount.setter
    def rate_amount(self, rate_amount):
        """Sets the rate_amount of this ProjectMemberDetails.


        :param rate_amount: The rate_amount of this ProjectMemberDetails.
        :type rate_amount: float
        """

        self._rate_amount = rate_amount

    @property
    def user_idfk(self):
        """Gets the user_idfk of this ProjectMemberDetails.


        :return: The user_idfk of this ProjectMemberDetails.
        :rtype: int
        """
        return self._user_idfk

    @user_idfk.setter
    def user_idfk(self, user_idfk):
        """Sets the user_idfk of this ProjectMemberDetails.


        :param user_idfk: The user_idfk of this ProjectMemberDetails.
        :type user_idfk: int
        """

        self._user_idfk = user_idfk

    @property
    def can_comment_on_tasks(self):
        """Gets the can_comment_on_tasks of this ProjectMemberDetails.


        :return: The can_comment_on_tasks of this ProjectMemberDetails.
        :rtype: bool
        """
        return self._can_comment_on_tasks

    @can_comment_on_tasks.setter
    def can_comment_on_tasks(self, can_comment_on_tasks):
        """Sets the can_comment_on_tasks of this ProjectMemberDetails.


        :param can_comment_on_tasks: The can_comment_on_tasks of this ProjectMemberDetails.
        :type can_comment_on_tasks: bool
        """

        self._can_comment_on_tasks = can_comment_on_tasks

    @property
    def can_create_tasks(self):
        """Gets the can_create_tasks of this ProjectMemberDetails.


        :return: The can_create_tasks of this ProjectMemberDetails.
        :rtype: bool
        """
        return self._can_create_tasks

    @can_create_tasks.setter
    def can_create_tasks(self, can_create_tasks):
        """Sets the can_create_tasks of this ProjectMemberDetails.


        :param can_create_tasks: The can_create_tasks of this ProjectMemberDetails.
        :type can_create_tasks: bool
        """

        self._can_create_tasks = can_create_tasks

    @property
    def can_delete_tasks(self):
        """Gets the can_delete_tasks of this ProjectMemberDetails.


        :return: The can_delete_tasks of this ProjectMemberDetails.
        :rtype: bool
        """
        return self._can_delete_tasks

    @can_delete_tasks.setter
    def can_delete_tasks(self, can_delete_tasks):
        """Sets the can_delete_tasks of this ProjectMemberDetails.


        :param can_delete_tasks: The can_delete_tasks of this ProjectMemberDetails.
        :type can_delete_tasks: bool
        """

        self._can_delete_tasks = can_delete_tasks

    @property
    def can_update_tasks(self):
        """Gets the can_update_tasks of this ProjectMemberDetails.


        :return: The can_update_tasks of this ProjectMemberDetails.
        :rtype: bool
        """
        return self._can_update_tasks

    @can_update_tasks.setter
    def can_update_tasks(self, can_update_tasks):
        """Sets the can_update_tasks of this ProjectMemberDetails.


        :param can_update_tasks: The can_update_tasks of this ProjectMemberDetails.
        :type can_update_tasks: bool
        """

        self._can_update_tasks = can_update_tasks

    @property
    def is_member_disabled(self):
        """Gets the is_member_disabled of this ProjectMemberDetails.


        :return: The is_member_disabled of this ProjectMemberDetails.
        :rtype: bool
        """
        return self._is_member_disabled

    @is_member_disabled.setter
    def is_member_disabled(self, is_member_disabled):
        """Sets the is_member_disabled of this ProjectMemberDetails.


        :param is_member_disabled: The is_member_disabled of this ProjectMemberDetails.
        :type is_member_disabled: bool
        """

        self._is_member_disabled = is_member_disabled

    @property
    def is_timesheet_allowed(self):
        """Gets the is_timesheet_allowed of this ProjectMemberDetails.


        :return: The is_timesheet_allowed of this ProjectMemberDetails.
        :rtype: bool
        """
        return self._is_timesheet_allowed

    @is_timesheet_allowed.setter
    def is_timesheet_allowed(self, is_timesheet_allowed):
        """Sets the is_timesheet_allowed of this ProjectMemberDetails.


        :param is_timesheet_allowed: The is_timesheet_allowed of this ProjectMemberDetails.
        :type is_timesheet_allowed: bool
        """

        self._is_timesheet_allowed = is_timesheet_allowed

    @property
    def is_timesheet_approval_required(self):
        """Gets the is_timesheet_approval_required of this ProjectMemberDetails.


        :return: The is_timesheet_approval_required of this ProjectMemberDetails.
        :rtype: bool
        """
        return self._is_timesheet_approval_required

    @is_timesheet_approval_required.setter
    def is_timesheet_approval_required(self, is_timesheet_approval_required):
        """Sets the is_timesheet_approval_required of this ProjectMemberDetails.


        :param is_timesheet_approval_required: The is_timesheet_approval_required of this ProjectMemberDetails.
        :type is_timesheet_approval_required: bool
        """

        self._is_timesheet_approval_required = is_timesheet_approval_required

    @property
    def is_timesheet_approver(self):
        """Gets the is_timesheet_approver of this ProjectMemberDetails.


        :return: The is_timesheet_approver of this ProjectMemberDetails.
        :rtype: bool
        """
        return self._is_timesheet_approver

    @is_timesheet_approver.setter
    def is_timesheet_approver(self, is_timesheet_approver):
        """Sets the is_timesheet_approver of this ProjectMemberDetails.


        :param is_timesheet_approver: The is_timesheet_approver of this ProjectMemberDetails.
        :type is_timesheet_approver: bool
        """

        self._is_timesheet_approver = is_timesheet_approver
