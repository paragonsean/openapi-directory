# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.payment_allocation import PaymentAllocation
from openapi_server import util


class Payment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_idfk: int=None, balance: float=None, currency_code: str=None, customer_idfk: int=None, date_created: datetime=None, date_issued: datetime=None, date_updated: datetime=None, exchange_rate: float=None, notes: str=None, payment_allocations: List[PaymentAllocation]=None, payment_number: str=None, payment_provider_code: str=None, total_amount: float=None, transaction_id: int=None, transaction_prefix: str=None, transaction_reference: str=None, transaction_status_code: str=None):
        """Payment - a model defined in OpenAPI

        :param account_idfk: The account_idfk of this Payment.
        :param balance: The balance of this Payment.
        :param currency_code: The currency_code of this Payment.
        :param customer_idfk: The customer_idfk of this Payment.
        :param date_created: The date_created of this Payment.
        :param date_issued: The date_issued of this Payment.
        :param date_updated: The date_updated of this Payment.
        :param exchange_rate: The exchange_rate of this Payment.
        :param notes: The notes of this Payment.
        :param payment_allocations: The payment_allocations of this Payment.
        :param payment_number: The payment_number of this Payment.
        :param payment_provider_code: The payment_provider_code of this Payment.
        :param total_amount: The total_amount of this Payment.
        :param transaction_id: The transaction_id of this Payment.
        :param transaction_prefix: The transaction_prefix of this Payment.
        :param transaction_reference: The transaction_reference of this Payment.
        :param transaction_status_code: The transaction_status_code of this Payment.
        """
        self.openapi_types = {
            'account_idfk': int,
            'balance': float,
            'currency_code': str,
            'customer_idfk': int,
            'date_created': datetime,
            'date_issued': datetime,
            'date_updated': datetime,
            'exchange_rate': float,
            'notes': str,
            'payment_allocations': List[PaymentAllocation],
            'payment_number': str,
            'payment_provider_code': str,
            'total_amount': float,
            'transaction_id': int,
            'transaction_prefix': str,
            'transaction_reference': str,
            'transaction_status_code': str
        }

        self.attribute_map = {
            'account_idfk': 'AccountIDFK',
            'balance': 'Balance',
            'currency_code': 'CurrencyCode',
            'customer_idfk': 'CustomerIDFK',
            'date_created': 'DateCreated',
            'date_issued': 'DateIssued',
            'date_updated': 'DateUpdated',
            'exchange_rate': 'ExchangeRate',
            'notes': 'Notes',
            'payment_allocations': 'PaymentAllocations',
            'payment_number': 'PaymentNumber',
            'payment_provider_code': 'PaymentProviderCode',
            'total_amount': 'TotalAmount',
            'transaction_id': 'TransactionID',
            'transaction_prefix': 'TransactionPrefix',
            'transaction_reference': 'TransactionReference',
            'transaction_status_code': 'TransactionStatusCode'
        }

        self._account_idfk = account_idfk
        self._balance = balance
        self._currency_code = currency_code
        self._customer_idfk = customer_idfk
        self._date_created = date_created
        self._date_issued = date_issued
        self._date_updated = date_updated
        self._exchange_rate = exchange_rate
        self._notes = notes
        self._payment_allocations = payment_allocations
        self._payment_number = payment_number
        self._payment_provider_code = payment_provider_code
        self._total_amount = total_amount
        self._transaction_id = transaction_id
        self._transaction_prefix = transaction_prefix
        self._transaction_reference = transaction_reference
        self._transaction_status_code = transaction_status_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Payment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Payment of this Payment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_idfk(self):
        """Gets the account_idfk of this Payment.


        :return: The account_idfk of this Payment.
        :rtype: int
        """
        return self._account_idfk

    @account_idfk.setter
    def account_idfk(self, account_idfk):
        """Sets the account_idfk of this Payment.


        :param account_idfk: The account_idfk of this Payment.
        :type account_idfk: int
        """

        self._account_idfk = account_idfk

    @property
    def balance(self):
        """Gets the balance of this Payment.


        :return: The balance of this Payment.
        :rtype: float
        """
        return self._balance

    @balance.setter
    def balance(self, balance):
        """Sets the balance of this Payment.


        :param balance: The balance of this Payment.
        :type balance: float
        """

        self._balance = balance

    @property
    def currency_code(self):
        """Gets the currency_code of this Payment.


        :return: The currency_code of this Payment.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this Payment.


        :param currency_code: The currency_code of this Payment.
        :type currency_code: str
        """

        self._currency_code = currency_code

    @property
    def customer_idfk(self):
        """Gets the customer_idfk of this Payment.


        :return: The customer_idfk of this Payment.
        :rtype: int
        """
        return self._customer_idfk

    @customer_idfk.setter
    def customer_idfk(self, customer_idfk):
        """Sets the customer_idfk of this Payment.


        :param customer_idfk: The customer_idfk of this Payment.
        :type customer_idfk: int
        """

        self._customer_idfk = customer_idfk

    @property
    def date_created(self):
        """Gets the date_created of this Payment.


        :return: The date_created of this Payment.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this Payment.


        :param date_created: The date_created of this Payment.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_issued(self):
        """Gets the date_issued of this Payment.


        :return: The date_issued of this Payment.
        :rtype: datetime
        """
        return self._date_issued

    @date_issued.setter
    def date_issued(self, date_issued):
        """Sets the date_issued of this Payment.


        :param date_issued: The date_issued of this Payment.
        :type date_issued: datetime
        """

        self._date_issued = date_issued

    @property
    def date_updated(self):
        """Gets the date_updated of this Payment.


        :return: The date_updated of this Payment.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this Payment.


        :param date_updated: The date_updated of this Payment.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def exchange_rate(self):
        """Gets the exchange_rate of this Payment.


        :return: The exchange_rate of this Payment.
        :rtype: float
        """
        return self._exchange_rate

    @exchange_rate.setter
    def exchange_rate(self, exchange_rate):
        """Sets the exchange_rate of this Payment.


        :param exchange_rate: The exchange_rate of this Payment.
        :type exchange_rate: float
        """

        self._exchange_rate = exchange_rate

    @property
    def notes(self):
        """Gets the notes of this Payment.


        :return: The notes of this Payment.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this Payment.


        :param notes: The notes of this Payment.
        :type notes: str
        """

        self._notes = notes

    @property
    def payment_allocations(self):
        """Gets the payment_allocations of this Payment.


        :return: The payment_allocations of this Payment.
        :rtype: List[PaymentAllocation]
        """
        return self._payment_allocations

    @payment_allocations.setter
    def payment_allocations(self, payment_allocations):
        """Sets the payment_allocations of this Payment.


        :param payment_allocations: The payment_allocations of this Payment.
        :type payment_allocations: List[PaymentAllocation]
        """

        self._payment_allocations = payment_allocations

    @property
    def payment_number(self):
        """Gets the payment_number of this Payment.


        :return: The payment_number of this Payment.
        :rtype: str
        """
        return self._payment_number

    @payment_number.setter
    def payment_number(self, payment_number):
        """Sets the payment_number of this Payment.


        :param payment_number: The payment_number of this Payment.
        :type payment_number: str
        """

        self._payment_number = payment_number

    @property
    def payment_provider_code(self):
        """Gets the payment_provider_code of this Payment.


        :return: The payment_provider_code of this Payment.
        :rtype: str
        """
        return self._payment_provider_code

    @payment_provider_code.setter
    def payment_provider_code(self, payment_provider_code):
        """Sets the payment_provider_code of this Payment.


        :param payment_provider_code: The payment_provider_code of this Payment.
        :type payment_provider_code: str
        """

        self._payment_provider_code = payment_provider_code

    @property
    def total_amount(self):
        """Gets the total_amount of this Payment.


        :return: The total_amount of this Payment.
        :rtype: float
        """
        return self._total_amount

    @total_amount.setter
    def total_amount(self, total_amount):
        """Sets the total_amount of this Payment.


        :param total_amount: The total_amount of this Payment.
        :type total_amount: float
        """

        self._total_amount = total_amount

    @property
    def transaction_id(self):
        """Gets the transaction_id of this Payment.


        :return: The transaction_id of this Payment.
        :rtype: int
        """
        return self._transaction_id

    @transaction_id.setter
    def transaction_id(self, transaction_id):
        """Sets the transaction_id of this Payment.


        :param transaction_id: The transaction_id of this Payment.
        :type transaction_id: int
        """

        self._transaction_id = transaction_id

    @property
    def transaction_prefix(self):
        """Gets the transaction_prefix of this Payment.


        :return: The transaction_prefix of this Payment.
        :rtype: str
        """
        return self._transaction_prefix

    @transaction_prefix.setter
    def transaction_prefix(self, transaction_prefix):
        """Sets the transaction_prefix of this Payment.


        :param transaction_prefix: The transaction_prefix of this Payment.
        :type transaction_prefix: str
        """

        self._transaction_prefix = transaction_prefix

    @property
    def transaction_reference(self):
        """Gets the transaction_reference of this Payment.


        :return: The transaction_reference of this Payment.
        :rtype: str
        """
        return self._transaction_reference

    @transaction_reference.setter
    def transaction_reference(self, transaction_reference):
        """Sets the transaction_reference of this Payment.


        :param transaction_reference: The transaction_reference of this Payment.
        :type transaction_reference: str
        """

        self._transaction_reference = transaction_reference

    @property
    def transaction_status_code(self):
        """Gets the transaction_status_code of this Payment.


        :return: The transaction_status_code of this Payment.
        :rtype: str
        """
        return self._transaction_status_code

    @transaction_status_code.setter
    def transaction_status_code(self, transaction_status_code):
        """Sets the transaction_status_code of this Payment.


        :param transaction_status_code: The transaction_status_code of this Payment.
        :type transaction_status_code: str
        """

        self._transaction_status_code = transaction_status_code
