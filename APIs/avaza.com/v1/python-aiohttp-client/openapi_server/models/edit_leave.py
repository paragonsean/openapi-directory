# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EditLeave(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_date: datetime=None, hours_per_day: float=None, leave_type_idfk: int=None, notes: str=None, schedule_series_id: int=None, start_date: datetime=None, user_idfk: int=None):
        """EditLeave - a model defined in OpenAPI

        :param end_date: The end_date of this EditLeave.
        :param hours_per_day: The hours_per_day of this EditLeave.
        :param leave_type_idfk: The leave_type_idfk of this EditLeave.
        :param notes: The notes of this EditLeave.
        :param schedule_series_id: The schedule_series_id of this EditLeave.
        :param start_date: The start_date of this EditLeave.
        :param user_idfk: The user_idfk of this EditLeave.
        """
        self.openapi_types = {
            'end_date': datetime,
            'hours_per_day': float,
            'leave_type_idfk': int,
            'notes': str,
            'schedule_series_id': int,
            'start_date': datetime,
            'user_idfk': int
        }

        self.attribute_map = {
            'end_date': 'EndDate',
            'hours_per_day': 'HoursPerDay',
            'leave_type_idfk': 'LeaveTypeIDFK',
            'notes': 'Notes',
            'schedule_series_id': 'ScheduleSeriesID',
            'start_date': 'StartDate',
            'user_idfk': 'UserIDFK'
        }

        self._end_date = end_date
        self._hours_per_day = hours_per_day
        self._leave_type_idfk = leave_type_idfk
        self._notes = notes
        self._schedule_series_id = schedule_series_id
        self._start_date = start_date
        self._user_idfk = user_idfk

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EditLeave':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EditLeave of this EditLeave.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_date(self):
        """Gets the end_date of this EditLeave.


        :return: The end_date of this EditLeave.
        :rtype: datetime
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this EditLeave.


        :param end_date: The end_date of this EditLeave.
        :type end_date: datetime
        """

        self._end_date = end_date

    @property
    def hours_per_day(self):
        """Gets the hours_per_day of this EditLeave.


        :return: The hours_per_day of this EditLeave.
        :rtype: float
        """
        return self._hours_per_day

    @hours_per_day.setter
    def hours_per_day(self, hours_per_day):
        """Sets the hours_per_day of this EditLeave.


        :param hours_per_day: The hours_per_day of this EditLeave.
        :type hours_per_day: float
        """

        self._hours_per_day = hours_per_day

    @property
    def leave_type_idfk(self):
        """Gets the leave_type_idfk of this EditLeave.


        :return: The leave_type_idfk of this EditLeave.
        :rtype: int
        """
        return self._leave_type_idfk

    @leave_type_idfk.setter
    def leave_type_idfk(self, leave_type_idfk):
        """Sets the leave_type_idfk of this EditLeave.


        :param leave_type_idfk: The leave_type_idfk of this EditLeave.
        :type leave_type_idfk: int
        """

        self._leave_type_idfk = leave_type_idfk

    @property
    def notes(self):
        """Gets the notes of this EditLeave.


        :return: The notes of this EditLeave.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this EditLeave.


        :param notes: The notes of this EditLeave.
        :type notes: str
        """

        self._notes = notes

    @property
    def schedule_series_id(self):
        """Gets the schedule_series_id of this EditLeave.


        :return: The schedule_series_id of this EditLeave.
        :rtype: int
        """
        return self._schedule_series_id

    @schedule_series_id.setter
    def schedule_series_id(self, schedule_series_id):
        """Sets the schedule_series_id of this EditLeave.


        :param schedule_series_id: The schedule_series_id of this EditLeave.
        :type schedule_series_id: int
        """

        self._schedule_series_id = schedule_series_id

    @property
    def start_date(self):
        """Gets the start_date of this EditLeave.


        :return: The start_date of this EditLeave.
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this EditLeave.


        :param start_date: The start_date of this EditLeave.
        :type start_date: datetime
        """

        self._start_date = start_date

    @property
    def user_idfk(self):
        """Gets the user_idfk of this EditLeave.


        :return: The user_idfk of this EditLeave.
        :rtype: int
        """
        return self._user_idfk

    @user_idfk.setter
    def user_idfk(self, user_idfk):
        """Sets the user_idfk of this EditLeave.


        :param user_idfk: The user_idfk of this EditLeave.
        :type user_idfk: int
        """

        self._user_idfk = user_idfk
