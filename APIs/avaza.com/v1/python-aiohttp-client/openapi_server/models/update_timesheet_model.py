# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateTimesheetModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, custom_metadata: str=None, duration: float=None, entry_date: datetime=None, fields_to_update: List[str]=None, notes: str=None, project_idfk: int=None, task_idfk: int=None, time_sheet_entry_id: int=None, timesheet_category_idfk: int=None, has_start_end_time: bool=None):
        """UpdateTimesheetModel - a model defined in OpenAPI

        :param custom_metadata: The custom_metadata of this UpdateTimesheetModel.
        :param duration: The duration of this UpdateTimesheetModel.
        :param entry_date: The entry_date of this UpdateTimesheetModel.
        :param fields_to_update: The fields_to_update of this UpdateTimesheetModel.
        :param notes: The notes of this UpdateTimesheetModel.
        :param project_idfk: The project_idfk of this UpdateTimesheetModel.
        :param task_idfk: The task_idfk of this UpdateTimesheetModel.
        :param time_sheet_entry_id: The time_sheet_entry_id of this UpdateTimesheetModel.
        :param timesheet_category_idfk: The timesheet_category_idfk of this UpdateTimesheetModel.
        :param has_start_end_time: The has_start_end_time of this UpdateTimesheetModel.
        """
        self.openapi_types = {
            'custom_metadata': str,
            'duration': float,
            'entry_date': datetime,
            'fields_to_update': List[str],
            'notes': str,
            'project_idfk': int,
            'task_idfk': int,
            'time_sheet_entry_id': int,
            'timesheet_category_idfk': int,
            'has_start_end_time': bool
        }

        self.attribute_map = {
            'custom_metadata': 'CustomMetadata',
            'duration': 'Duration',
            'entry_date': 'EntryDate',
            'fields_to_update': 'FieldsToUpdate',
            'notes': 'Notes',
            'project_idfk': 'ProjectIDFK',
            'task_idfk': 'TaskIDFK',
            'time_sheet_entry_id': 'TimeSheetEntryID',
            'timesheet_category_idfk': 'TimesheetCategoryIDFK',
            'has_start_end_time': 'hasStartEndTime'
        }

        self._custom_metadata = custom_metadata
        self._duration = duration
        self._entry_date = entry_date
        self._fields_to_update = fields_to_update
        self._notes = notes
        self._project_idfk = project_idfk
        self._task_idfk = task_idfk
        self._time_sheet_entry_id = time_sheet_entry_id
        self._timesheet_category_idfk = timesheet_category_idfk
        self._has_start_end_time = has_start_end_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateTimesheetModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateTimesheetModel of this UpdateTimesheetModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def custom_metadata(self):
        """Gets the custom_metadata of this UpdateTimesheetModel.

        Optional. free nvarchar field available via Api to store any additional metadata against a timesheet. We suggest you use Json or your preferred serialisation format. 1000 characters max.

        :return: The custom_metadata of this UpdateTimesheetModel.
        :rtype: str
        """
        return self._custom_metadata

    @custom_metadata.setter
    def custom_metadata(self, custom_metadata):
        """Sets the custom_metadata of this UpdateTimesheetModel.

        Optional. free nvarchar field available via Api to store any additional metadata against a timesheet. We suggest you use Json or your preferred serialisation format. 1000 characters max.

        :param custom_metadata: The custom_metadata of this UpdateTimesheetModel.
        :type custom_metadata: str
        """

        self._custom_metadata = custom_metadata

    @property
    def duration(self):
        """Gets the duration of this UpdateTimesheetModel.


        :return: The duration of this UpdateTimesheetModel.
        :rtype: float
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this UpdateTimesheetModel.


        :param duration: The duration of this UpdateTimesheetModel.
        :type duration: float
        """

        self._duration = duration

    @property
    def entry_date(self):
        """Gets the entry_date of this UpdateTimesheetModel.


        :return: The entry_date of this UpdateTimesheetModel.
        :rtype: datetime
        """
        return self._entry_date

    @entry_date.setter
    def entry_date(self, entry_date):
        """Sets the entry_date of this UpdateTimesheetModel.


        :param entry_date: The entry_date of this UpdateTimesheetModel.
        :type entry_date: datetime
        """

        self._entry_date = entry_date

    @property
    def fields_to_update(self):
        """Gets the fields_to_update of this UpdateTimesheetModel.


        :return: The fields_to_update of this UpdateTimesheetModel.
        :rtype: List[str]
        """
        return self._fields_to_update

    @fields_to_update.setter
    def fields_to_update(self, fields_to_update):
        """Sets the fields_to_update of this UpdateTimesheetModel.


        :param fields_to_update: The fields_to_update of this UpdateTimesheetModel.
        :type fields_to_update: List[str]
        """
        if fields_to_update is None:
            raise ValueError("Invalid value for `fields_to_update`, must not be `None`")

        self._fields_to_update = fields_to_update

    @property
    def notes(self):
        """Gets the notes of this UpdateTimesheetModel.


        :return: The notes of this UpdateTimesheetModel.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this UpdateTimesheetModel.


        :param notes: The notes of this UpdateTimesheetModel.
        :type notes: str
        """

        self._notes = notes

    @property
    def project_idfk(self):
        """Gets the project_idfk of this UpdateTimesheetModel.


        :return: The project_idfk of this UpdateTimesheetModel.
        :rtype: int
        """
        return self._project_idfk

    @project_idfk.setter
    def project_idfk(self, project_idfk):
        """Sets the project_idfk of this UpdateTimesheetModel.


        :param project_idfk: The project_idfk of this UpdateTimesheetModel.
        :type project_idfk: int
        """
        if project_idfk is None:
            raise ValueError("Invalid value for `project_idfk`, must not be `None`")

        self._project_idfk = project_idfk

    @property
    def task_idfk(self):
        """Gets the task_idfk of this UpdateTimesheetModel.


        :return: The task_idfk of this UpdateTimesheetModel.
        :rtype: int
        """
        return self._task_idfk

    @task_idfk.setter
    def task_idfk(self, task_idfk):
        """Sets the task_idfk of this UpdateTimesheetModel.


        :param task_idfk: The task_idfk of this UpdateTimesheetModel.
        :type task_idfk: int
        """

        self._task_idfk = task_idfk

    @property
    def time_sheet_entry_id(self):
        """Gets the time_sheet_entry_id of this UpdateTimesheetModel.


        :return: The time_sheet_entry_id of this UpdateTimesheetModel.
        :rtype: int
        """
        return self._time_sheet_entry_id

    @time_sheet_entry_id.setter
    def time_sheet_entry_id(self, time_sheet_entry_id):
        """Sets the time_sheet_entry_id of this UpdateTimesheetModel.


        :param time_sheet_entry_id: The time_sheet_entry_id of this UpdateTimesheetModel.
        :type time_sheet_entry_id: int
        """
        if time_sheet_entry_id is None:
            raise ValueError("Invalid value for `time_sheet_entry_id`, must not be `None`")

        self._time_sheet_entry_id = time_sheet_entry_id

    @property
    def timesheet_category_idfk(self):
        """Gets the timesheet_category_idfk of this UpdateTimesheetModel.


        :return: The timesheet_category_idfk of this UpdateTimesheetModel.
        :rtype: int
        """
        return self._timesheet_category_idfk

    @timesheet_category_idfk.setter
    def timesheet_category_idfk(self, timesheet_category_idfk):
        """Sets the timesheet_category_idfk of this UpdateTimesheetModel.


        :param timesheet_category_idfk: The timesheet_category_idfk of this UpdateTimesheetModel.
        :type timesheet_category_idfk: int
        """

        self._timesheet_category_idfk = timesheet_category_idfk

    @property
    def has_start_end_time(self):
        """Gets the has_start_end_time of this UpdateTimesheetModel.


        :return: The has_start_end_time of this UpdateTimesheetModel.
        :rtype: bool
        """
        return self._has_start_end_time

    @has_start_end_time.setter
    def has_start_end_time(self, has_start_end_time):
        """Sets the has_start_end_time of this UpdateTimesheetModel.


        :param has_start_end_time: The has_start_end_time of this UpdateTimesheetModel.
        :type has_start_end_time: bool
        """

        self._has_start_end_time = has_start_end_time
