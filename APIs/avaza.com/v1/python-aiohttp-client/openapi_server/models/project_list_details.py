# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProjectListDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, company_idfk: int=None, company_name: str=None, date_created: datetime=None, date_updated: datetime=None, default_account_task_type_idfk: int=None, default_account_task_type_name: str=None, notes: str=None, project_category_idfk: int=None, project_category_name: str=None, project_code: str=None, project_id: int=None, project_owner_user_idfk: int=None, title: str=None, is_archived: bool=None, is_task_required_on_timesheet: bool=None):
        """ProjectListDetails - a model defined in OpenAPI

        :param company_idfk: The company_idfk of this ProjectListDetails.
        :param company_name: The company_name of this ProjectListDetails.
        :param date_created: The date_created of this ProjectListDetails.
        :param date_updated: The date_updated of this ProjectListDetails.
        :param default_account_task_type_idfk: The default_account_task_type_idfk of this ProjectListDetails.
        :param default_account_task_type_name: The default_account_task_type_name of this ProjectListDetails.
        :param notes: The notes of this ProjectListDetails.
        :param project_category_idfk: The project_category_idfk of this ProjectListDetails.
        :param project_category_name: The project_category_name of this ProjectListDetails.
        :param project_code: The project_code of this ProjectListDetails.
        :param project_id: The project_id of this ProjectListDetails.
        :param project_owner_user_idfk: The project_owner_user_idfk of this ProjectListDetails.
        :param title: The title of this ProjectListDetails.
        :param is_archived: The is_archived of this ProjectListDetails.
        :param is_task_required_on_timesheet: The is_task_required_on_timesheet of this ProjectListDetails.
        """
        self.openapi_types = {
            'company_idfk': int,
            'company_name': str,
            'date_created': datetime,
            'date_updated': datetime,
            'default_account_task_type_idfk': int,
            'default_account_task_type_name': str,
            'notes': str,
            'project_category_idfk': int,
            'project_category_name': str,
            'project_code': str,
            'project_id': int,
            'project_owner_user_idfk': int,
            'title': str,
            'is_archived': bool,
            'is_task_required_on_timesheet': bool
        }

        self.attribute_map = {
            'company_idfk': 'CompanyIDFK',
            'company_name': 'CompanyName',
            'date_created': 'DateCreated',
            'date_updated': 'DateUpdated',
            'default_account_task_type_idfk': 'DefaultAccountTaskTypeIDFK',
            'default_account_task_type_name': 'DefaultAccountTaskTypeName',
            'notes': 'Notes',
            'project_category_idfk': 'ProjectCategoryIDFK',
            'project_category_name': 'ProjectCategoryName',
            'project_code': 'ProjectCode',
            'project_id': 'ProjectID',
            'project_owner_user_idfk': 'ProjectOwnerUserIDFK',
            'title': 'Title',
            'is_archived': 'isArchived',
            'is_task_required_on_timesheet': 'isTaskRequiredOnTimesheet'
        }

        self._company_idfk = company_idfk
        self._company_name = company_name
        self._date_created = date_created
        self._date_updated = date_updated
        self._default_account_task_type_idfk = default_account_task_type_idfk
        self._default_account_task_type_name = default_account_task_type_name
        self._notes = notes
        self._project_category_idfk = project_category_idfk
        self._project_category_name = project_category_name
        self._project_code = project_code
        self._project_id = project_id
        self._project_owner_user_idfk = project_owner_user_idfk
        self._title = title
        self._is_archived = is_archived
        self._is_task_required_on_timesheet = is_task_required_on_timesheet

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectListDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProjectListDetails of this ProjectListDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def company_idfk(self):
        """Gets the company_idfk of this ProjectListDetails.


        :return: The company_idfk of this ProjectListDetails.
        :rtype: int
        """
        return self._company_idfk

    @company_idfk.setter
    def company_idfk(self, company_idfk):
        """Sets the company_idfk of this ProjectListDetails.


        :param company_idfk: The company_idfk of this ProjectListDetails.
        :type company_idfk: int
        """

        self._company_idfk = company_idfk

    @property
    def company_name(self):
        """Gets the company_name of this ProjectListDetails.


        :return: The company_name of this ProjectListDetails.
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name):
        """Sets the company_name of this ProjectListDetails.


        :param company_name: The company_name of this ProjectListDetails.
        :type company_name: str
        """

        self._company_name = company_name

    @property
    def date_created(self):
        """Gets the date_created of this ProjectListDetails.


        :return: The date_created of this ProjectListDetails.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this ProjectListDetails.


        :param date_created: The date_created of this ProjectListDetails.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this ProjectListDetails.


        :return: The date_updated of this ProjectListDetails.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this ProjectListDetails.


        :param date_updated: The date_updated of this ProjectListDetails.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def default_account_task_type_idfk(self):
        """Gets the default_account_task_type_idfk of this ProjectListDetails.


        :return: The default_account_task_type_idfk of this ProjectListDetails.
        :rtype: int
        """
        return self._default_account_task_type_idfk

    @default_account_task_type_idfk.setter
    def default_account_task_type_idfk(self, default_account_task_type_idfk):
        """Sets the default_account_task_type_idfk of this ProjectListDetails.


        :param default_account_task_type_idfk: The default_account_task_type_idfk of this ProjectListDetails.
        :type default_account_task_type_idfk: int
        """

        self._default_account_task_type_idfk = default_account_task_type_idfk

    @property
    def default_account_task_type_name(self):
        """Gets the default_account_task_type_name of this ProjectListDetails.


        :return: The default_account_task_type_name of this ProjectListDetails.
        :rtype: str
        """
        return self._default_account_task_type_name

    @default_account_task_type_name.setter
    def default_account_task_type_name(self, default_account_task_type_name):
        """Sets the default_account_task_type_name of this ProjectListDetails.


        :param default_account_task_type_name: The default_account_task_type_name of this ProjectListDetails.
        :type default_account_task_type_name: str
        """

        self._default_account_task_type_name = default_account_task_type_name

    @property
    def notes(self):
        """Gets the notes of this ProjectListDetails.


        :return: The notes of this ProjectListDetails.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this ProjectListDetails.


        :param notes: The notes of this ProjectListDetails.
        :type notes: str
        """

        self._notes = notes

    @property
    def project_category_idfk(self):
        """Gets the project_category_idfk of this ProjectListDetails.


        :return: The project_category_idfk of this ProjectListDetails.
        :rtype: int
        """
        return self._project_category_idfk

    @project_category_idfk.setter
    def project_category_idfk(self, project_category_idfk):
        """Sets the project_category_idfk of this ProjectListDetails.


        :param project_category_idfk: The project_category_idfk of this ProjectListDetails.
        :type project_category_idfk: int
        """

        self._project_category_idfk = project_category_idfk

    @property
    def project_category_name(self):
        """Gets the project_category_name of this ProjectListDetails.


        :return: The project_category_name of this ProjectListDetails.
        :rtype: str
        """
        return self._project_category_name

    @project_category_name.setter
    def project_category_name(self, project_category_name):
        """Sets the project_category_name of this ProjectListDetails.


        :param project_category_name: The project_category_name of this ProjectListDetails.
        :type project_category_name: str
        """

        self._project_category_name = project_category_name

    @property
    def project_code(self):
        """Gets the project_code of this ProjectListDetails.


        :return: The project_code of this ProjectListDetails.
        :rtype: str
        """
        return self._project_code

    @project_code.setter
    def project_code(self, project_code):
        """Sets the project_code of this ProjectListDetails.


        :param project_code: The project_code of this ProjectListDetails.
        :type project_code: str
        """

        self._project_code = project_code

    @property
    def project_id(self):
        """Gets the project_id of this ProjectListDetails.


        :return: The project_id of this ProjectListDetails.
        :rtype: int
        """
        return self._project_id

    @project_id.setter
    def project_id(self, project_id):
        """Sets the project_id of this ProjectListDetails.


        :param project_id: The project_id of this ProjectListDetails.
        :type project_id: int
        """

        self._project_id = project_id

    @property
    def project_owner_user_idfk(self):
        """Gets the project_owner_user_idfk of this ProjectListDetails.


        :return: The project_owner_user_idfk of this ProjectListDetails.
        :rtype: int
        """
        return self._project_owner_user_idfk

    @project_owner_user_idfk.setter
    def project_owner_user_idfk(self, project_owner_user_idfk):
        """Sets the project_owner_user_idfk of this ProjectListDetails.


        :param project_owner_user_idfk: The project_owner_user_idfk of this ProjectListDetails.
        :type project_owner_user_idfk: int
        """

        self._project_owner_user_idfk = project_owner_user_idfk

    @property
    def title(self):
        """Gets the title of this ProjectListDetails.


        :return: The title of this ProjectListDetails.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this ProjectListDetails.


        :param title: The title of this ProjectListDetails.
        :type title: str
        """

        self._title = title

    @property
    def is_archived(self):
        """Gets the is_archived of this ProjectListDetails.


        :return: The is_archived of this ProjectListDetails.
        :rtype: bool
        """
        return self._is_archived

    @is_archived.setter
    def is_archived(self, is_archived):
        """Sets the is_archived of this ProjectListDetails.


        :param is_archived: The is_archived of this ProjectListDetails.
        :type is_archived: bool
        """

        self._is_archived = is_archived

    @property
    def is_task_required_on_timesheet(self):
        """Gets the is_task_required_on_timesheet of this ProjectListDetails.


        :return: The is_task_required_on_timesheet of this ProjectListDetails.
        :rtype: bool
        """
        return self._is_task_required_on_timesheet

    @is_task_required_on_timesheet.setter
    def is_task_required_on_timesheet(self, is_task_required_on_timesheet):
        """Sets the is_task_required_on_timesheet of this ProjectListDetails.


        :param is_task_required_on_timesheet: The is_task_required_on_timesheet of this ProjectListDetails.
        :type is_task_required_on_timesheet: bool
        """

        self._is_task_required_on_timesheet = is_task_required_on_timesheet
