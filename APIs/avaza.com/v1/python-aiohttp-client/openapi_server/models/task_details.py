# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.assigned_to_user import AssignedToUser
from openapi_server.models.tag_item import TagItem
from openapi_server import util


class TaskDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_task_type_idfk: int=None, actual_time: float=None, assigned_to_users: List[AssignedToUser]=None, date_completed: datetime=None, date_created: datetime=None, date_due: datetime=None, date_start: datetime=None, date_updated: datetime=None, description: str=None, description_no_html: str=None, estimated_effort: float=None, percent_complete: float=None, project_code: str=None, project_idfk: int=None, project_title: str=None, section_idfk: int=None, section_title: str=None, tags: List[TagItem]=None, task_id: int=None, task_priority_code: str=None, task_priority_name: str=None, task_status_code: str=None, task_status_name: str=None, title: str=None, is_complete_status: bool=None):
        """TaskDetails - a model defined in OpenAPI

        :param account_task_type_idfk: The account_task_type_idfk of this TaskDetails.
        :param actual_time: The actual_time of this TaskDetails.
        :param assigned_to_users: The assigned_to_users of this TaskDetails.
        :param date_completed: The date_completed of this TaskDetails.
        :param date_created: The date_created of this TaskDetails.
        :param date_due: The date_due of this TaskDetails.
        :param date_start: The date_start of this TaskDetails.
        :param date_updated: The date_updated of this TaskDetails.
        :param description: The description of this TaskDetails.
        :param description_no_html: The description_no_html of this TaskDetails.
        :param estimated_effort: The estimated_effort of this TaskDetails.
        :param percent_complete: The percent_complete of this TaskDetails.
        :param project_code: The project_code of this TaskDetails.
        :param project_idfk: The project_idfk of this TaskDetails.
        :param project_title: The project_title of this TaskDetails.
        :param section_idfk: The section_idfk of this TaskDetails.
        :param section_title: The section_title of this TaskDetails.
        :param tags: The tags of this TaskDetails.
        :param task_id: The task_id of this TaskDetails.
        :param task_priority_code: The task_priority_code of this TaskDetails.
        :param task_priority_name: The task_priority_name of this TaskDetails.
        :param task_status_code: The task_status_code of this TaskDetails.
        :param task_status_name: The task_status_name of this TaskDetails.
        :param title: The title of this TaskDetails.
        :param is_complete_status: The is_complete_status of this TaskDetails.
        """
        self.openapi_types = {
            'account_task_type_idfk': int,
            'actual_time': float,
            'assigned_to_users': List[AssignedToUser],
            'date_completed': datetime,
            'date_created': datetime,
            'date_due': datetime,
            'date_start': datetime,
            'date_updated': datetime,
            'description': str,
            'description_no_html': str,
            'estimated_effort': float,
            'percent_complete': float,
            'project_code': str,
            'project_idfk': int,
            'project_title': str,
            'section_idfk': int,
            'section_title': str,
            'tags': List[TagItem],
            'task_id': int,
            'task_priority_code': str,
            'task_priority_name': str,
            'task_status_code': str,
            'task_status_name': str,
            'title': str,
            'is_complete_status': bool
        }

        self.attribute_map = {
            'account_task_type_idfk': 'AccountTaskTypeIDFK',
            'actual_time': 'ActualTime',
            'assigned_to_users': 'AssignedToUsers',
            'date_completed': 'DateCompleted',
            'date_created': 'DateCreated',
            'date_due': 'DateDue',
            'date_start': 'DateStart',
            'date_updated': 'DateUpdated',
            'description': 'Description',
            'description_no_html': 'DescriptionNoHTML',
            'estimated_effort': 'EstimatedEffort',
            'percent_complete': 'PercentComplete',
            'project_code': 'ProjectCode',
            'project_idfk': 'ProjectIDFK',
            'project_title': 'ProjectTitle',
            'section_idfk': 'SectionIDFK',
            'section_title': 'SectionTitle',
            'tags': 'Tags',
            'task_id': 'TaskID',
            'task_priority_code': 'TaskPriorityCode',
            'task_priority_name': 'TaskPriorityName',
            'task_status_code': 'TaskStatusCode',
            'task_status_name': 'TaskStatusName',
            'title': 'Title',
            'is_complete_status': 'isCompleteStatus'
        }

        self._account_task_type_idfk = account_task_type_idfk
        self._actual_time = actual_time
        self._assigned_to_users = assigned_to_users
        self._date_completed = date_completed
        self._date_created = date_created
        self._date_due = date_due
        self._date_start = date_start
        self._date_updated = date_updated
        self._description = description
        self._description_no_html = description_no_html
        self._estimated_effort = estimated_effort
        self._percent_complete = percent_complete
        self._project_code = project_code
        self._project_idfk = project_idfk
        self._project_title = project_title
        self._section_idfk = section_idfk
        self._section_title = section_title
        self._tags = tags
        self._task_id = task_id
        self._task_priority_code = task_priority_code
        self._task_priority_name = task_priority_name
        self._task_status_code = task_status_code
        self._task_status_name = task_status_name
        self._title = title
        self._is_complete_status = is_complete_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TaskDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TaskDetails of this TaskDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_task_type_idfk(self):
        """Gets the account_task_type_idfk of this TaskDetails.


        :return: The account_task_type_idfk of this TaskDetails.
        :rtype: int
        """
        return self._account_task_type_idfk

    @account_task_type_idfk.setter
    def account_task_type_idfk(self, account_task_type_idfk):
        """Sets the account_task_type_idfk of this TaskDetails.


        :param account_task_type_idfk: The account_task_type_idfk of this TaskDetails.
        :type account_task_type_idfk: int
        """

        self._account_task_type_idfk = account_task_type_idfk

    @property
    def actual_time(self):
        """Gets the actual_time of this TaskDetails.


        :return: The actual_time of this TaskDetails.
        :rtype: float
        """
        return self._actual_time

    @actual_time.setter
    def actual_time(self, actual_time):
        """Sets the actual_time of this TaskDetails.


        :param actual_time: The actual_time of this TaskDetails.
        :type actual_time: float
        """

        self._actual_time = actual_time

    @property
    def assigned_to_users(self):
        """Gets the assigned_to_users of this TaskDetails.


        :return: The assigned_to_users of this TaskDetails.
        :rtype: List[AssignedToUser]
        """
        return self._assigned_to_users

    @assigned_to_users.setter
    def assigned_to_users(self, assigned_to_users):
        """Sets the assigned_to_users of this TaskDetails.


        :param assigned_to_users: The assigned_to_users of this TaskDetails.
        :type assigned_to_users: List[AssignedToUser]
        """

        self._assigned_to_users = assigned_to_users

    @property
    def date_completed(self):
        """Gets the date_completed of this TaskDetails.


        :return: The date_completed of this TaskDetails.
        :rtype: datetime
        """
        return self._date_completed

    @date_completed.setter
    def date_completed(self, date_completed):
        """Sets the date_completed of this TaskDetails.


        :param date_completed: The date_completed of this TaskDetails.
        :type date_completed: datetime
        """

        self._date_completed = date_completed

    @property
    def date_created(self):
        """Gets the date_created of this TaskDetails.


        :return: The date_created of this TaskDetails.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this TaskDetails.


        :param date_created: The date_created of this TaskDetails.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_due(self):
        """Gets the date_due of this TaskDetails.


        :return: The date_due of this TaskDetails.
        :rtype: datetime
        """
        return self._date_due

    @date_due.setter
    def date_due(self, date_due):
        """Sets the date_due of this TaskDetails.


        :param date_due: The date_due of this TaskDetails.
        :type date_due: datetime
        """

        self._date_due = date_due

    @property
    def date_start(self):
        """Gets the date_start of this TaskDetails.


        :return: The date_start of this TaskDetails.
        :rtype: datetime
        """
        return self._date_start

    @date_start.setter
    def date_start(self, date_start):
        """Sets the date_start of this TaskDetails.


        :param date_start: The date_start of this TaskDetails.
        :type date_start: datetime
        """

        self._date_start = date_start

    @property
    def date_updated(self):
        """Gets the date_updated of this TaskDetails.


        :return: The date_updated of this TaskDetails.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this TaskDetails.


        :param date_updated: The date_updated of this TaskDetails.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def description(self):
        """Gets the description of this TaskDetails.


        :return: The description of this TaskDetails.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this TaskDetails.


        :param description: The description of this TaskDetails.
        :type description: str
        """

        self._description = description

    @property
    def description_no_html(self):
        """Gets the description_no_html of this TaskDetails.


        :return: The description_no_html of this TaskDetails.
        :rtype: str
        """
        return self._description_no_html

    @description_no_html.setter
    def description_no_html(self, description_no_html):
        """Sets the description_no_html of this TaskDetails.


        :param description_no_html: The description_no_html of this TaskDetails.
        :type description_no_html: str
        """

        self._description_no_html = description_no_html

    @property
    def estimated_effort(self):
        """Gets the estimated_effort of this TaskDetails.


        :return: The estimated_effort of this TaskDetails.
        :rtype: float
        """
        return self._estimated_effort

    @estimated_effort.setter
    def estimated_effort(self, estimated_effort):
        """Sets the estimated_effort of this TaskDetails.


        :param estimated_effort: The estimated_effort of this TaskDetails.
        :type estimated_effort: float
        """

        self._estimated_effort = estimated_effort

    @property
    def percent_complete(self):
        """Gets the percent_complete of this TaskDetails.


        :return: The percent_complete of this TaskDetails.
        :rtype: float
        """
        return self._percent_complete

    @percent_complete.setter
    def percent_complete(self, percent_complete):
        """Sets the percent_complete of this TaskDetails.


        :param percent_complete: The percent_complete of this TaskDetails.
        :type percent_complete: float
        """

        self._percent_complete = percent_complete

    @property
    def project_code(self):
        """Gets the project_code of this TaskDetails.


        :return: The project_code of this TaskDetails.
        :rtype: str
        """
        return self._project_code

    @project_code.setter
    def project_code(self, project_code):
        """Sets the project_code of this TaskDetails.


        :param project_code: The project_code of this TaskDetails.
        :type project_code: str
        """

        self._project_code = project_code

    @property
    def project_idfk(self):
        """Gets the project_idfk of this TaskDetails.


        :return: The project_idfk of this TaskDetails.
        :rtype: int
        """
        return self._project_idfk

    @project_idfk.setter
    def project_idfk(self, project_idfk):
        """Sets the project_idfk of this TaskDetails.


        :param project_idfk: The project_idfk of this TaskDetails.
        :type project_idfk: int
        """

        self._project_idfk = project_idfk

    @property
    def project_title(self):
        """Gets the project_title of this TaskDetails.


        :return: The project_title of this TaskDetails.
        :rtype: str
        """
        return self._project_title

    @project_title.setter
    def project_title(self, project_title):
        """Sets the project_title of this TaskDetails.


        :param project_title: The project_title of this TaskDetails.
        :type project_title: str
        """

        self._project_title = project_title

    @property
    def section_idfk(self):
        """Gets the section_idfk of this TaskDetails.


        :return: The section_idfk of this TaskDetails.
        :rtype: int
        """
        return self._section_idfk

    @section_idfk.setter
    def section_idfk(self, section_idfk):
        """Sets the section_idfk of this TaskDetails.


        :param section_idfk: The section_idfk of this TaskDetails.
        :type section_idfk: int
        """

        self._section_idfk = section_idfk

    @property
    def section_title(self):
        """Gets the section_title of this TaskDetails.


        :return: The section_title of this TaskDetails.
        :rtype: str
        """
        return self._section_title

    @section_title.setter
    def section_title(self, section_title):
        """Sets the section_title of this TaskDetails.


        :param section_title: The section_title of this TaskDetails.
        :type section_title: str
        """

        self._section_title = section_title

    @property
    def tags(self):
        """Gets the tags of this TaskDetails.


        :return: The tags of this TaskDetails.
        :rtype: List[TagItem]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this TaskDetails.


        :param tags: The tags of this TaskDetails.
        :type tags: List[TagItem]
        """

        self._tags = tags

    @property
    def task_id(self):
        """Gets the task_id of this TaskDetails.


        :return: The task_id of this TaskDetails.
        :rtype: int
        """
        return self._task_id

    @task_id.setter
    def task_id(self, task_id):
        """Sets the task_id of this TaskDetails.


        :param task_id: The task_id of this TaskDetails.
        :type task_id: int
        """

        self._task_id = task_id

    @property
    def task_priority_code(self):
        """Gets the task_priority_code of this TaskDetails.


        :return: The task_priority_code of this TaskDetails.
        :rtype: str
        """
        return self._task_priority_code

    @task_priority_code.setter
    def task_priority_code(self, task_priority_code):
        """Sets the task_priority_code of this TaskDetails.


        :param task_priority_code: The task_priority_code of this TaskDetails.
        :type task_priority_code: str
        """

        self._task_priority_code = task_priority_code

    @property
    def task_priority_name(self):
        """Gets the task_priority_name of this TaskDetails.


        :return: The task_priority_name of this TaskDetails.
        :rtype: str
        """
        return self._task_priority_name

    @task_priority_name.setter
    def task_priority_name(self, task_priority_name):
        """Sets the task_priority_name of this TaskDetails.


        :param task_priority_name: The task_priority_name of this TaskDetails.
        :type task_priority_name: str
        """

        self._task_priority_name = task_priority_name

    @property
    def task_status_code(self):
        """Gets the task_status_code of this TaskDetails.


        :return: The task_status_code of this TaskDetails.
        :rtype: str
        """
        return self._task_status_code

    @task_status_code.setter
    def task_status_code(self, task_status_code):
        """Sets the task_status_code of this TaskDetails.


        :param task_status_code: The task_status_code of this TaskDetails.
        :type task_status_code: str
        """

        self._task_status_code = task_status_code

    @property
    def task_status_name(self):
        """Gets the task_status_name of this TaskDetails.


        :return: The task_status_name of this TaskDetails.
        :rtype: str
        """
        return self._task_status_name

    @task_status_name.setter
    def task_status_name(self, task_status_name):
        """Sets the task_status_name of this TaskDetails.


        :param task_status_name: The task_status_name of this TaskDetails.
        :type task_status_name: str
        """

        self._task_status_name = task_status_name

    @property
    def title(self):
        """Gets the title of this TaskDetails.


        :return: The title of this TaskDetails.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this TaskDetails.


        :param title: The title of this TaskDetails.
        :type title: str
        """

        self._title = title

    @property
    def is_complete_status(self):
        """Gets the is_complete_status of this TaskDetails.


        :return: The is_complete_status of this TaskDetails.
        :rtype: bool
        """
        return self._is_complete_status

    @is_complete_status.setter
    def is_complete_status(self, is_complete_status):
        """Sets the is_complete_status of this TaskDetails.


        :param is_complete_status: The is_complete_status of this TaskDetails.
        :type is_complete_status: bool
        """

        self._is_complete_status = is_complete_status
