# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NewProjectModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, budget_amount: float=None, budget_hours: float=None, company_idfk: int=None, company_name: str=None, currency_code: str=None, end_date: datetime=None, populate_default_project_members: bool=None, project_category_idfk: int=None, project_code: str=None, project_notes: str=None, project_status_code: str=None, project_title: str=None, start_date: datetime=None, timesheet_approval_requiredby_default: bool=None, is_task_required_on_timesheet: bool=None):
        """NewProjectModel - a model defined in OpenAPI

        :param budget_amount: The budget_amount of this NewProjectModel.
        :param budget_hours: The budget_hours of this NewProjectModel.
        :param company_idfk: The company_idfk of this NewProjectModel.
        :param company_name: The company_name of this NewProjectModel.
        :param currency_code: The currency_code of this NewProjectModel.
        :param end_date: The end_date of this NewProjectModel.
        :param populate_default_project_members: The populate_default_project_members of this NewProjectModel.
        :param project_category_idfk: The project_category_idfk of this NewProjectModel.
        :param project_code: The project_code of this NewProjectModel.
        :param project_notes: The project_notes of this NewProjectModel.
        :param project_status_code: The project_status_code of this NewProjectModel.
        :param project_title: The project_title of this NewProjectModel.
        :param start_date: The start_date of this NewProjectModel.
        :param timesheet_approval_requiredby_default: The timesheet_approval_requiredby_default of this NewProjectModel.
        :param is_task_required_on_timesheet: The is_task_required_on_timesheet of this NewProjectModel.
        """
        self.openapi_types = {
            'budget_amount': float,
            'budget_hours': float,
            'company_idfk': int,
            'company_name': str,
            'currency_code': str,
            'end_date': datetime,
            'populate_default_project_members': bool,
            'project_category_idfk': int,
            'project_code': str,
            'project_notes': str,
            'project_status_code': str,
            'project_title': str,
            'start_date': datetime,
            'timesheet_approval_requiredby_default': bool,
            'is_task_required_on_timesheet': bool
        }

        self.attribute_map = {
            'budget_amount': 'BudgetAmount',
            'budget_hours': 'BudgetHours',
            'company_idfk': 'CompanyIDFK',
            'company_name': 'CompanyName',
            'currency_code': 'CurrencyCode',
            'end_date': 'EndDate',
            'populate_default_project_members': 'PopulateDefaultProjectMembers',
            'project_category_idfk': 'ProjectCategoryIDFK',
            'project_code': 'ProjectCode',
            'project_notes': 'ProjectNotes',
            'project_status_code': 'ProjectStatusCode',
            'project_title': 'ProjectTitle',
            'start_date': 'StartDate',
            'timesheet_approval_requiredby_default': 'TimesheetApprovalRequiredbyDefault',
            'is_task_required_on_timesheet': 'isTaskRequiredOnTimesheet'
        }

        self._budget_amount = budget_amount
        self._budget_hours = budget_hours
        self._company_idfk = company_idfk
        self._company_name = company_name
        self._currency_code = currency_code
        self._end_date = end_date
        self._populate_default_project_members = populate_default_project_members
        self._project_category_idfk = project_category_idfk
        self._project_code = project_code
        self._project_notes = project_notes
        self._project_status_code = project_status_code
        self._project_title = project_title
        self._start_date = start_date
        self._timesheet_approval_requiredby_default = timesheet_approval_requiredby_default
        self._is_task_required_on_timesheet = is_task_required_on_timesheet

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NewProjectModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NewProjectModel of this NewProjectModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def budget_amount(self):
        """Gets the budget_amount of this NewProjectModel.


        :return: The budget_amount of this NewProjectModel.
        :rtype: float
        """
        return self._budget_amount

    @budget_amount.setter
    def budget_amount(self, budget_amount):
        """Sets the budget_amount of this NewProjectModel.


        :param budget_amount: The budget_amount of this NewProjectModel.
        :type budget_amount: float
        """

        self._budget_amount = budget_amount

    @property
    def budget_hours(self):
        """Gets the budget_hours of this NewProjectModel.


        :return: The budget_hours of this NewProjectModel.
        :rtype: float
        """
        return self._budget_hours

    @budget_hours.setter
    def budget_hours(self, budget_hours):
        """Sets the budget_hours of this NewProjectModel.


        :param budget_hours: The budget_hours of this NewProjectModel.
        :type budget_hours: float
        """

        self._budget_hours = budget_hours

    @property
    def company_idfk(self):
        """Gets the company_idfk of this NewProjectModel.

        An ID of a company in Avaza to create the Project under. You must provide either a CompanyID, or a CompanyName

        :return: The company_idfk of this NewProjectModel.
        :rtype: int
        """
        return self._company_idfk

    @company_idfk.setter
    def company_idfk(self, company_idfk):
        """Sets the company_idfk of this NewProjectModel.

        An ID of a company in Avaza to create the Project under. You must provide either a CompanyID, or a CompanyName

        :param company_idfk: The company_idfk of this NewProjectModel.
        :type company_idfk: int
        """

        self._company_idfk = company_idfk

    @property
    def company_name(self):
        """Gets the company_name of this NewProjectModel.

        The name for a Company to create the project under. Will create company unless it matches an existing company name

        :return: The company_name of this NewProjectModel.
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name):
        """Sets the company_name of this NewProjectModel.

        The name for a Company to create the project under. Will create company unless it matches an existing company name

        :param company_name: The company_name of this NewProjectModel.
        :type company_name: str
        """

        self._company_name = company_name

    @property
    def currency_code(self):
        """Gets the currency_code of this NewProjectModel.

        The ISO 3 letter currency code to use when creating a new Company. If not provided, the account's default currency will be used.

        :return: The currency_code of this NewProjectModel.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this NewProjectModel.

        The ISO 3 letter currency code to use when creating a new Company. If not provided, the account's default currency will be used.

        :param currency_code: The currency_code of this NewProjectModel.
        :type currency_code: str
        """

        self._currency_code = currency_code

    @property
    def end_date(self):
        """Gets the end_date of this NewProjectModel.


        :return: The end_date of this NewProjectModel.
        :rtype: datetime
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this NewProjectModel.


        :param end_date: The end_date of this NewProjectModel.
        :type end_date: datetime
        """

        self._end_date = end_date

    @property
    def populate_default_project_members(self):
        """Gets the populate_default_project_members of this NewProjectModel.

        Defaults to true.

        :return: The populate_default_project_members of this NewProjectModel.
        :rtype: bool
        """
        return self._populate_default_project_members

    @populate_default_project_members.setter
    def populate_default_project_members(self, populate_default_project_members):
        """Sets the populate_default_project_members of this NewProjectModel.

        Defaults to true.

        :param populate_default_project_members: The populate_default_project_members of this NewProjectModel.
        :type populate_default_project_members: bool
        """

        self._populate_default_project_members = populate_default_project_members

    @property
    def project_category_idfk(self):
        """Gets the project_category_idfk of this NewProjectModel.


        :return: The project_category_idfk of this NewProjectModel.
        :rtype: int
        """
        return self._project_category_idfk

    @project_category_idfk.setter
    def project_category_idfk(self, project_category_idfk):
        """Sets the project_category_idfk of this NewProjectModel.


        :param project_category_idfk: The project_category_idfk of this NewProjectModel.
        :type project_category_idfk: int
        """

        self._project_category_idfk = project_category_idfk

    @property
    def project_code(self):
        """Gets the project_code of this NewProjectModel.

        Used when Manual Project Codes are enabled

        :return: The project_code of this NewProjectModel.
        :rtype: str
        """
        return self._project_code

    @project_code.setter
    def project_code(self, project_code):
        """Sets the project_code of this NewProjectModel.

        Used when Manual Project Codes are enabled

        :param project_code: The project_code of this NewProjectModel.
        :type project_code: str
        """

        self._project_code = project_code

    @property
    def project_notes(self):
        """Gets the project_notes of this NewProjectModel.

        Any descriptive notes about the project. (2000 characters max)

        :return: The project_notes of this NewProjectModel.
        :rtype: str
        """
        return self._project_notes

    @project_notes.setter
    def project_notes(self, project_notes):
        """Sets the project_notes of this NewProjectModel.

        Any descriptive notes about the project. (2000 characters max)

        :param project_notes: The project_notes of this NewProjectModel.
        :type project_notes: str
        """

        self._project_notes = project_notes

    @property
    def project_status_code(self):
        """Gets the project_status_code of this NewProjectModel.


        :return: The project_status_code of this NewProjectModel.
        :rtype: str
        """
        return self._project_status_code

    @project_status_code.setter
    def project_status_code(self, project_status_code):
        """Sets the project_status_code of this NewProjectModel.


        :param project_status_code: The project_status_code of this NewProjectModel.
        :type project_status_code: str
        """

        self._project_status_code = project_status_code

    @property
    def project_title(self):
        """Gets the project_title of this NewProjectModel.

        The title of the new project. (255 characters max)

        :return: The project_title of this NewProjectModel.
        :rtype: str
        """
        return self._project_title

    @project_title.setter
    def project_title(self, project_title):
        """Sets the project_title of this NewProjectModel.

        The title of the new project. (255 characters max)

        :param project_title: The project_title of this NewProjectModel.
        :type project_title: str
        """
        if project_title is None:
            raise ValueError("Invalid value for `project_title`, must not be `None`")

        self._project_title = project_title

    @property
    def start_date(self):
        """Gets the start_date of this NewProjectModel.


        :return: The start_date of this NewProjectModel.
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this NewProjectModel.


        :param start_date: The start_date of this NewProjectModel.
        :type start_date: datetime
        """

        self._start_date = start_date

    @property
    def timesheet_approval_requiredby_default(self):
        """Gets the timesheet_approval_requiredby_default of this NewProjectModel.


        :return: The timesheet_approval_requiredby_default of this NewProjectModel.
        :rtype: bool
        """
        return self._timesheet_approval_requiredby_default

    @timesheet_approval_requiredby_default.setter
    def timesheet_approval_requiredby_default(self, timesheet_approval_requiredby_default):
        """Sets the timesheet_approval_requiredby_default of this NewProjectModel.


        :param timesheet_approval_requiredby_default: The timesheet_approval_requiredby_default of this NewProjectModel.
        :type timesheet_approval_requiredby_default: bool
        """

        self._timesheet_approval_requiredby_default = timesheet_approval_requiredby_default

    @property
    def is_task_required_on_timesheet(self):
        """Gets the is_task_required_on_timesheet of this NewProjectModel.


        :return: The is_task_required_on_timesheet of this NewProjectModel.
        :rtype: bool
        """
        return self._is_task_required_on_timesheet

    @is_task_required_on_timesheet.setter
    def is_task_required_on_timesheet(self, is_task_required_on_timesheet):
        """Sets the is_task_required_on_timesheet of this NewProjectModel.


        :param is_task_required_on_timesheet: The is_task_required_on_timesheet of this NewProjectModel.
        :type is_task_required_on_timesheet: bool
        """

        self._is_task_required_on_timesheet = is_task_required_on_timesheet
