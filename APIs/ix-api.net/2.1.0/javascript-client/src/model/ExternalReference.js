/**
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ExternalReferencePartial from './ExternalReferencePartial';

/**
 * The ExternalReference model module.
 * @module model/ExternalReference
 * @version 2.1.0
 */
class ExternalReference {
    /**
     * Constructs a new <code>ExternalReference</code>.
     * @alias module:model/ExternalReference
     * @implements module:model/ExternalReferencePartial
     */
    constructor() { 
        ExternalReferencePartial.initialize(this);
        ExternalReference.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExternalReference</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExternalReference} obj Optional instance to populate.
     * @return {module:model/ExternalReference} The populated <code>ExternalReference</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExternalReference();
            ExternalReferencePartial.constructFromObject(data, obj);

            if (data.hasOwnProperty('external_ref')) {
                obj['external_ref'] = ApiClient.convertToType(data['external_ref'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExternalReference</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExternalReference</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['external_ref'] && !(typeof data['external_ref'] === 'string' || data['external_ref'] instanceof String)) {
            throw new Error("Expected the field `external_ref` to be a primitive type in the JSON string but got " + data['external_ref']);
        }

        return true;
    }


}



/**
 * Reference field, free to use for the API user.
 * @member {String} external_ref
 */
ExternalReference.prototype['external_ref'] = undefined;


// Implement ExternalReferencePartial interface:
/**
 * Reference field, free to use for the API user.
 * @member {String} external_ref
 */
ExternalReferencePartial.prototype['external_ref'] = undefined;




export default ExternalReference;

