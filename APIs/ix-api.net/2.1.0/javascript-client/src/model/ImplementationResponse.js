/**
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ImplementationResponsePartial from './ImplementationResponsePartial';

/**
 * The ImplementationResponse model module.
 * @module model/ImplementationResponse
 * @version 2.1.0
 */
class ImplementationResponse {
    /**
     * Constructs a new <code>ImplementationResponse</code>.
     * @alias module:model/ImplementationResponse
     * @implements module:model/ImplementationResponsePartial
     * @param schemaVersion {String} Version of the implemented IX-API schema. 
     * @param supportedNetworkFeatureConfigTypes {Array.<String>} Array of supported network feature config types. 
     * @param supportedNetworkFeatureTypes {Array.<String>} Array of supported network feature types. 
     * @param supportedNetworkServiceConfigTypes {Array.<String>} Array of supported network service config types. 
     * @param supportedNetworkServiceTypes {Array.<String>} Array of network service types, supported by the IX. 
     * @param supportedOperations {Array.<String>} Array of implemented operations of the ix-api schema. 
     */
    constructor(schemaVersion, supportedNetworkFeatureConfigTypes, supportedNetworkFeatureTypes, supportedNetworkServiceConfigTypes, supportedNetworkServiceTypes, supportedOperations) { 
        ImplementationResponsePartial.initialize(this);
        ImplementationResponse.initialize(this, schemaVersion, supportedNetworkFeatureConfigTypes, supportedNetworkFeatureTypes, supportedNetworkServiceConfigTypes, supportedNetworkServiceTypes, supportedOperations);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, schemaVersion, supportedNetworkFeatureConfigTypes, supportedNetworkFeatureTypes, supportedNetworkServiceConfigTypes, supportedNetworkServiceTypes, supportedOperations) { 
        obj['schema_version'] = schemaVersion;
        obj['supported_network_feature_config_types'] = supportedNetworkFeatureConfigTypes;
        obj['supported_network_feature_types'] = supportedNetworkFeatureTypes;
        obj['supported_network_service_config_types'] = supportedNetworkServiceConfigTypes;
        obj['supported_network_service_types'] = supportedNetworkServiceTypes;
        obj['supported_operations'] = supportedOperations;
    }

    /**
     * Constructs a <code>ImplementationResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImplementationResponse} obj Optional instance to populate.
     * @return {module:model/ImplementationResponse} The populated <code>ImplementationResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImplementationResponse();
            ImplementationResponsePartial.constructFromObject(data, obj);

            if (data.hasOwnProperty('schema_version')) {
                obj['schema_version'] = ApiClient.convertToType(data['schema_version'], 'String');
            }
            if (data.hasOwnProperty('service_version')) {
                obj['service_version'] = ApiClient.convertToType(data['service_version'], 'String');
            }
            if (data.hasOwnProperty('supported_network_feature_config_types')) {
                obj['supported_network_feature_config_types'] = ApiClient.convertToType(data['supported_network_feature_config_types'], ['String']);
            }
            if (data.hasOwnProperty('supported_network_feature_types')) {
                obj['supported_network_feature_types'] = ApiClient.convertToType(data['supported_network_feature_types'], ['String']);
            }
            if (data.hasOwnProperty('supported_network_service_config_types')) {
                obj['supported_network_service_config_types'] = ApiClient.convertToType(data['supported_network_service_config_types'], ['String']);
            }
            if (data.hasOwnProperty('supported_network_service_types')) {
                obj['supported_network_service_types'] = ApiClient.convertToType(data['supported_network_service_types'], ['String']);
            }
            if (data.hasOwnProperty('supported_operations')) {
                obj['supported_operations'] = ApiClient.convertToType(data['supported_operations'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImplementationResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImplementationResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ImplementationResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['schema_version'] && !(typeof data['schema_version'] === 'string' || data['schema_version'] instanceof String)) {
            throw new Error("Expected the field `schema_version` to be a primitive type in the JSON string but got " + data['schema_version']);
        }
        // ensure the json data is a string
        if (data['service_version'] && !(typeof data['service_version'] === 'string' || data['service_version'] instanceof String)) {
            throw new Error("Expected the field `service_version` to be a primitive type in the JSON string but got " + data['service_version']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['supported_network_feature_config_types'])) {
            throw new Error("Expected the field `supported_network_feature_config_types` to be an array in the JSON data but got " + data['supported_network_feature_config_types']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['supported_network_feature_types'])) {
            throw new Error("Expected the field `supported_network_feature_types` to be an array in the JSON data but got " + data['supported_network_feature_types']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['supported_network_service_config_types'])) {
            throw new Error("Expected the field `supported_network_service_config_types` to be an array in the JSON data but got " + data['supported_network_service_config_types']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['supported_network_service_types'])) {
            throw new Error("Expected the field `supported_network_service_types` to be an array in the JSON data but got " + data['supported_network_service_types']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['supported_operations'])) {
            throw new Error("Expected the field `supported_operations` to be an array in the JSON data but got " + data['supported_operations']);
        }

        return true;
    }


}

ImplementationResponse.RequiredProperties = ["schema_version", "supported_network_feature_config_types", "supported_network_feature_types", "supported_network_service_config_types", "supported_network_service_types", "supported_operations"];

/**
 * Version of the implemented IX-API schema. 
 * @member {String} schema_version
 */
ImplementationResponse.prototype['schema_version'] = undefined;

/**
 * Version of the API service. 
 * @member {String} service_version
 */
ImplementationResponse.prototype['service_version'] = undefined;

/**
 * Array of supported network feature config types. 
 * @member {Array.<String>} supported_network_feature_config_types
 */
ImplementationResponse.prototype['supported_network_feature_config_types'] = undefined;

/**
 * Array of supported network feature types. 
 * @member {Array.<String>} supported_network_feature_types
 */
ImplementationResponse.prototype['supported_network_feature_types'] = undefined;

/**
 * Array of supported network service config types. 
 * @member {Array.<String>} supported_network_service_config_types
 */
ImplementationResponse.prototype['supported_network_service_config_types'] = undefined;

/**
 * Array of network service types, supported by the IX. 
 * @member {Array.<String>} supported_network_service_types
 */
ImplementationResponse.prototype['supported_network_service_types'] = undefined;

/**
 * Array of implemented operations of the ix-api schema. 
 * @member {Array.<String>} supported_operations
 */
ImplementationResponse.prototype['supported_operations'] = undefined;


// Implement ImplementationResponsePartial interface:
/**
 * Version of the implemented IX-API schema. 
 * @member {String} schema_version
 */
ImplementationResponsePartial.prototype['schema_version'] = undefined;
/**
 * Version of the API service. 
 * @member {String} service_version
 */
ImplementationResponsePartial.prototype['service_version'] = undefined;
/**
 * Array of supported network feature config types. 
 * @member {Array.<String>} supported_network_feature_config_types
 */
ImplementationResponsePartial.prototype['supported_network_feature_config_types'] = undefined;
/**
 * Array of supported network feature types. 
 * @member {Array.<String>} supported_network_feature_types
 */
ImplementationResponsePartial.prototype['supported_network_feature_types'] = undefined;
/**
 * Array of supported network service config types. 
 * @member {Array.<String>} supported_network_service_config_types
 */
ImplementationResponsePartial.prototype['supported_network_service_config_types'] = undefined;
/**
 * Array of network service types, supported by the IX. 
 * @member {Array.<String>} supported_network_service_types
 */
ImplementationResponsePartial.prototype['supported_network_service_types'] = undefined;
/**
 * Array of implemented operations of the ix-api schema. 
 * @member {Array.<String>} supported_operations
 */
ImplementationResponsePartial.prototype['supported_operations'] = undefined;




export default ImplementationResponse;

