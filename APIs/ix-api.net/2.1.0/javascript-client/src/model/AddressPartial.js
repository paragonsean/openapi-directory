/**
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AddressPartial model module.
 * @module model/AddressPartial
 * @version 2.1.0
 */
class AddressPartial {
    /**
     * Constructs a new <code>AddressPartial</code>.
     * 
     * @alias module:model/AddressPartial
     */
    constructor() { 
        
        AddressPartial.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AddressPartial</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddressPartial} obj Optional instance to populate.
     * @return {module:model/AddressPartial} The populated <code>AddressPartial</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddressPartial();

            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('locality')) {
                obj['locality'] = ApiClient.convertToType(data['locality'], 'String');
            }
            if (data.hasOwnProperty('post_office_box_number')) {
                obj['post_office_box_number'] = ApiClient.convertToType(data['post_office_box_number'], 'String');
            }
            if (data.hasOwnProperty('postal_code')) {
                obj['postal_code'] = ApiClient.convertToType(data['postal_code'], 'String');
            }
            if (data.hasOwnProperty('region')) {
                obj['region'] = ApiClient.convertToType(data['region'], 'String');
            }
            if (data.hasOwnProperty('street_address')) {
                obj['street_address'] = ApiClient.convertToType(data['street_address'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AddressPartial</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AddressPartial</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['country'] && !(typeof data['country'] === 'string' || data['country'] instanceof String)) {
            throw new Error("Expected the field `country` to be a primitive type in the JSON string but got " + data['country']);
        }
        // ensure the json data is a string
        if (data['locality'] && !(typeof data['locality'] === 'string' || data['locality'] instanceof String)) {
            throw new Error("Expected the field `locality` to be a primitive type in the JSON string but got " + data['locality']);
        }
        // ensure the json data is a string
        if (data['post_office_box_number'] && !(typeof data['post_office_box_number'] === 'string' || data['post_office_box_number'] instanceof String)) {
            throw new Error("Expected the field `post_office_box_number` to be a primitive type in the JSON string but got " + data['post_office_box_number']);
        }
        // ensure the json data is a string
        if (data['postal_code'] && !(typeof data['postal_code'] === 'string' || data['postal_code'] instanceof String)) {
            throw new Error("Expected the field `postal_code` to be a primitive type in the JSON string but got " + data['postal_code']);
        }
        // ensure the json data is a string
        if (data['region'] && !(typeof data['region'] === 'string' || data['region'] instanceof String)) {
            throw new Error("Expected the field `region` to be a primitive type in the JSON string but got " + data['region']);
        }
        // ensure the json data is a string
        if (data['street_address'] && !(typeof data['street_address'] === 'string' || data['street_address'] instanceof String)) {
            throw new Error("Expected the field `street_address` to be a primitive type in the JSON string but got " + data['street_address']);
        }

        return true;
    }


}



/**
 * ISO 3166-1 alpha-2 country code, for example DE
 * @member {String} country
 */
AddressPartial.prototype['country'] = undefined;

/**
 * The locality/city. For example, Mountain View.
 * @member {String} locality
 */
AddressPartial.prototype['locality'] = undefined;

/**
 * The post office box number for PO box addresses.
 * @member {String} post_office_box_number
 */
AddressPartial.prototype['post_office_box_number'] = undefined;

/**
 * A postal code. For example, 9404
 * @member {String} postal_code
 */
AddressPartial.prototype['postal_code'] = undefined;

/**
 * The region. For example, CA
 * @member {String} region
 */
AddressPartial.prototype['region'] = undefined;

/**
 * The street address. For example, 1600 Amphitheatre Pkwy.
 * @member {String} street_address
 */
AddressPartial.prototype['street_address'] = undefined;






export default AddressPartial;

