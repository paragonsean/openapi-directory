/**
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import StatefulPartial from './StatefulPartial';
import Status from './Status';

/**
 * The Stateful model module.
 * @module model/Stateful
 * @version 2.1.0
 */
class Stateful {
    /**
     * Constructs a new <code>Stateful</code>.
     * @alias module:model/Stateful
     * @implements module:model/StatefulPartial
     * @param state {module:model/Stateful.StateEnum} 
     */
    constructor(state) { 
        StatefulPartial.initialize(this);
        Stateful.initialize(this, state);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, state) { 
        obj['state'] = state;
    }

    /**
     * Constructs a <code>Stateful</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Stateful} obj Optional instance to populate.
     * @return {module:model/Stateful} The populated <code>Stateful</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Stateful();
            StatefulPartial.constructFromObject(data, obj);

            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], [Status]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Stateful</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Stateful</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Stateful.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        if (data['status']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['status'])) {
                throw new Error("Expected the field `status` to be an array in the JSON data but got " + data['status']);
            }
            // validate the optional field `status` (array)
            for (const item of data['status']) {
                Status.validateJSON(item);
            };
        }

        return true;
    }


}

Stateful.RequiredProperties = ["state"];

/**
 * @member {module:model/Stateful.StateEnum} state
 */
Stateful.prototype['state'] = undefined;

/**
 * @member {Array.<module:model/Status>} status
 */
Stateful.prototype['status'] = undefined;


// Implement StatefulPartial interface:
/**
 * @member {module:model/StatefulPartial.StateEnum} state
 */
StatefulPartial.prototype['state'] = undefined;
/**
 * @member {Array.<module:model/Status>} status
 */
StatefulPartial.prototype['status'] = undefined;



/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
Stateful['StateEnum'] = {

    /**
     * value: "requested"
     * @const
     */
    "requested": "requested",

    /**
     * value: "allocated"
     * @const
     */
    "allocated": "allocated",

    /**
     * value: "testing"
     * @const
     */
    "testing": "testing",

    /**
     * value: "production"
     * @const
     */
    "production": "production",

    /**
     * value: "production_change_pending"
     * @const
     */
    "production_change_pending": "production_change_pending",

    /**
     * value: "decommission_requested"
     * @const
     */
    "decommission_requested": "decommission_requested",

    /**
     * value: "decommissioned"
     * @const
     */
    "decommissioned": "decommissioned",

    /**
     * value: "archived"
     * @const
     */
    "archived": "archived",

    /**
     * value: "error"
     * @const
     */
    "error": "error",

    /**
     * value: "operator"
     * @const
     */
    "operator": "operator",

    /**
     * value: "scheduled"
     * @const
     */
    "scheduled": "scheduled"
};



export default Stateful;

