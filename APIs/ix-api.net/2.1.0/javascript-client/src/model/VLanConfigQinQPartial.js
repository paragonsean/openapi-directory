/**
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VLanConfigQinQPartial model module.
 * @module model/VLanConfigQinQPartial
 * @version 2.1.0
 */
class VLanConfigQinQPartial {
    /**
     * Constructs a new <code>VLanConfigQinQPartial</code>.
     * A QinQ vlan configuration
     * @alias module:model/VLanConfigQinQPartial
     * @param vlanType {String} 
     */
    constructor(vlanType) { 
        
        VLanConfigQinQPartial.initialize(this, vlanType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, vlanType) { 
        obj['outer_vlan_ethertype'] = '0x8100';
        obj['vlan_type'] = vlanType;
    }

    /**
     * Constructs a <code>VLanConfigQinQPartial</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VLanConfigQinQPartial} obj Optional instance to populate.
     * @return {module:model/VLanConfigQinQPartial} The populated <code>VLanConfigQinQPartial</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VLanConfigQinQPartial();

            if (data.hasOwnProperty('inner_vlan')) {
                obj['inner_vlan'] = ApiClient.convertToType(data['inner_vlan'], 'Number');
            }
            if (data.hasOwnProperty('outer_vlan')) {
                obj['outer_vlan'] = ApiClient.convertToType(data['outer_vlan'], 'Number');
            }
            if (data.hasOwnProperty('outer_vlan_ethertype')) {
                obj['outer_vlan_ethertype'] = ApiClient.convertToType(data['outer_vlan_ethertype'], 'String');
            }
            if (data.hasOwnProperty('vlan_type')) {
                obj['vlan_type'] = ApiClient.convertToType(data['vlan_type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VLanConfigQinQPartial</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VLanConfigQinQPartial</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of VLanConfigQinQPartial.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['outer_vlan_ethertype'] && !(typeof data['outer_vlan_ethertype'] === 'string' || data['outer_vlan_ethertype'] instanceof String)) {
            throw new Error("Expected the field `outer_vlan_ethertype` to be a primitive type in the JSON string but got " + data['outer_vlan_ethertype']);
        }
        // ensure the json data is a string
        if (data['vlan_type'] && !(typeof data['vlan_type'] === 'string' || data['vlan_type'] instanceof String)) {
            throw new Error("Expected the field `vlan_type` to be a primitive type in the JSON string but got " + data['vlan_type']);
        }

        return true;
    }


}

VLanConfigQinQPartial.RequiredProperties = ["vlan_type"];

/**
 * The inner VLAN id. 
 * @member {Number} inner_vlan
 */
VLanConfigQinQPartial.prototype['inner_vlan'] = undefined;

/**
 * The outer VLAN id. 
 * @member {Number} outer_vlan
 */
VLanConfigQinQPartial.prototype['outer_vlan'] = undefined;

/**
 * The ethertype of the outer tag in hexadecimal notation.
 * @member {module:model/VLanConfigQinQPartial.OuterVlanEthertypeEnum} outer_vlan_ethertype
 * @default '0x8100'
 */
VLanConfigQinQPartial.prototype['outer_vlan_ethertype'] = '0x8100';

/**
 * @member {String} vlan_type
 */
VLanConfigQinQPartial.prototype['vlan_type'] = undefined;





/**
 * Allowed values for the <code>outer_vlan_ethertype</code> property.
 * @enum {String}
 * @readonly
 */
VLanConfigQinQPartial['OuterVlanEthertypeEnum'] = {

    /**
     * value: "0x8100"
     * @const
     */
    "0x8100": "0x8100",

    /**
     * value: "0x88a8"
     * @const
     */
    "0x88a8": "0x88a8",

    /**
     * value: "0x9100"
     * @const
     */
    "0x9100": "0x9100"
};



export default VLanConfigQinQPartial;

