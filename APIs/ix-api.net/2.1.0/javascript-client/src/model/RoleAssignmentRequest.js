/**
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RoleAssignmentRequestPartial from './RoleAssignmentRequestPartial';

/**
 * The RoleAssignmentRequest model module.
 * @module model/RoleAssignmentRequest
 * @version 2.1.0
 */
class RoleAssignmentRequest {
    /**
     * Constructs a new <code>RoleAssignmentRequest</code>.
     * @alias module:model/RoleAssignmentRequest
     * @implements module:model/RoleAssignmentRequestPartial
     * @param contact {String} The `id` of a contact the role is assigned to. 
     * @param role {String} The `id` of a role the contact is assigned to. 
     */
    constructor(contact, role) { 
        RoleAssignmentRequestPartial.initialize(this);
        RoleAssignmentRequest.initialize(this, contact, role);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, contact, role) { 
        obj['contact'] = contact;
        obj['role'] = role;
    }

    /**
     * Constructs a <code>RoleAssignmentRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RoleAssignmentRequest} obj Optional instance to populate.
     * @return {module:model/RoleAssignmentRequest} The populated <code>RoleAssignmentRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RoleAssignmentRequest();
            RoleAssignmentRequestPartial.constructFromObject(data, obj);

            if (data.hasOwnProperty('contact')) {
                obj['contact'] = ApiClient.convertToType(data['contact'], 'String');
            }
            if (data.hasOwnProperty('role')) {
                obj['role'] = ApiClient.convertToType(data['role'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RoleAssignmentRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RoleAssignmentRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RoleAssignmentRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['contact'] && !(typeof data['contact'] === 'string' || data['contact'] instanceof String)) {
            throw new Error("Expected the field `contact` to be a primitive type in the JSON string but got " + data['contact']);
        }
        // ensure the json data is a string
        if (data['role'] && !(typeof data['role'] === 'string' || data['role'] instanceof String)) {
            throw new Error("Expected the field `role` to be a primitive type in the JSON string but got " + data['role']);
        }

        return true;
    }


}

RoleAssignmentRequest.RequiredProperties = ["contact", "role"];

/**
 * The `id` of a contact the role is assigned to. 
 * @member {String} contact
 */
RoleAssignmentRequest.prototype['contact'] = undefined;

/**
 * The `id` of a role the contact is assigned to. 
 * @member {String} role
 */
RoleAssignmentRequest.prototype['role'] = undefined;


// Implement RoleAssignmentRequestPartial interface:
/**
 * The `id` of a contact the role is assigned to. 
 * @member {String} contact
 */
RoleAssignmentRequestPartial.prototype['contact'] = undefined;
/**
 * The `id` of a role the contact is assigned to. 
 * @member {String} role
 */
RoleAssignmentRequestPartial.prototype['role'] = undefined;




export default RoleAssignmentRequest;

