/**
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import P2MPNetworkServiceConfigUpdatePartial from './P2MPNetworkServiceConfigUpdatePartial';
import VlanConfig from './VlanConfig';

/**
 * The P2MPNetworkServiceConfigUpdate model module.
 * @module model/P2MPNetworkServiceConfigUpdate
 * @version 2.1.0
 */
class P2MPNetworkServiceConfigUpdate {
    /**
     * Constructs a new <code>P2MPNetworkServiceConfigUpdate</code>.
     * @alias module:model/P2MPNetworkServiceConfigUpdate
     * @implements module:model/P2MPNetworkServiceConfigUpdatePartial
     * @param billingAccount {String} An account requires billing_information to be used as a `billing_account`.
     * @param connection {String} The id of the connection to use for this `NetworkServiceConfig`.
     * @param consumingAccount {String} The `id` of the account consuming a service.  Used to be `owning_customer`. 
     * @param managingAccount {String} The `id` of the account responsible for managing the service via the API. A manager can read and update the state of entities. 
     * @param roleAssignments {Array.<String>} A set of `RoleAssignment`s. See the documentation on the specific `required_contact_roles`, `nfc_required_contact_roles` or `nsc_required_contact_roles` on what `RoleAssignment`s to provide. 
     * @param type {String} 
     * @param vlanConfig {module:model/VlanConfig} 
     */
    constructor(billingAccount, connection, consumingAccount, managingAccount, roleAssignments, type, vlanConfig) { 
        P2MPNetworkServiceConfigUpdatePartial.initialize(this, type);
        P2MPNetworkServiceConfigUpdate.initialize(this, billingAccount, connection, consumingAccount, managingAccount, roleAssignments, type, vlanConfig);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, billingAccount, connection, consumingAccount, managingAccount, roleAssignments, type, vlanConfig) { 
        obj['billing_account'] = billingAccount;
        obj['connection'] = connection;
        obj['consuming_account'] = consumingAccount;
        obj['managing_account'] = managingAccount;
        obj['purchase_order'] = '';
        obj['role'] = 'leaf';
        obj['role_assignments'] = roleAssignments;
        obj['type'] = type;
        obj['vlan_config'] = vlanConfig;
    }

    /**
     * Constructs a <code>P2MPNetworkServiceConfigUpdate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/P2MPNetworkServiceConfigUpdate} obj Optional instance to populate.
     * @return {module:model/P2MPNetworkServiceConfigUpdate} The populated <code>P2MPNetworkServiceConfigUpdate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new P2MPNetworkServiceConfigUpdate();
            P2MPNetworkServiceConfigUpdatePartial.constructFromObject(data, obj);

            if (data.hasOwnProperty('billing_account')) {
                obj['billing_account'] = ApiClient.convertToType(data['billing_account'], 'String');
            }
            if (data.hasOwnProperty('capacity')) {
                obj['capacity'] = ApiClient.convertToType(data['capacity'], 'Number');
            }
            if (data.hasOwnProperty('connection')) {
                obj['connection'] = ApiClient.convertToType(data['connection'], 'String');
            }
            if (data.hasOwnProperty('consuming_account')) {
                obj['consuming_account'] = ApiClient.convertToType(data['consuming_account'], 'String');
            }
            if (data.hasOwnProperty('contract_ref')) {
                obj['contract_ref'] = ApiClient.convertToType(data['contract_ref'], 'String');
            }
            if (data.hasOwnProperty('external_ref')) {
                obj['external_ref'] = ApiClient.convertToType(data['external_ref'], 'String');
            }
            if (data.hasOwnProperty('managing_account')) {
                obj['managing_account'] = ApiClient.convertToType(data['managing_account'], 'String');
            }
            if (data.hasOwnProperty('network_feature_configs')) {
                obj['network_feature_configs'] = ApiClient.convertToType(data['network_feature_configs'], ['String']);
            }
            if (data.hasOwnProperty('purchase_order')) {
                obj['purchase_order'] = ApiClient.convertToType(data['purchase_order'], 'String');
            }
            if (data.hasOwnProperty('role')) {
                obj['role'] = ApiClient.convertToType(data['role'], 'String');
            }
            if (data.hasOwnProperty('role_assignments')) {
                obj['role_assignments'] = ApiClient.convertToType(data['role_assignments'], ['String']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('vlan_config')) {
                obj['vlan_config'] = VlanConfig.constructFromObject(data['vlan_config']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>P2MPNetworkServiceConfigUpdate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>P2MPNetworkServiceConfigUpdate</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of P2MPNetworkServiceConfigUpdate.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['billing_account'] && !(typeof data['billing_account'] === 'string' || data['billing_account'] instanceof String)) {
            throw new Error("Expected the field `billing_account` to be a primitive type in the JSON string but got " + data['billing_account']);
        }
        // ensure the json data is a string
        if (data['connection'] && !(typeof data['connection'] === 'string' || data['connection'] instanceof String)) {
            throw new Error("Expected the field `connection` to be a primitive type in the JSON string but got " + data['connection']);
        }
        // ensure the json data is a string
        if (data['consuming_account'] && !(typeof data['consuming_account'] === 'string' || data['consuming_account'] instanceof String)) {
            throw new Error("Expected the field `consuming_account` to be a primitive type in the JSON string but got " + data['consuming_account']);
        }
        // ensure the json data is a string
        if (data['contract_ref'] && !(typeof data['contract_ref'] === 'string' || data['contract_ref'] instanceof String)) {
            throw new Error("Expected the field `contract_ref` to be a primitive type in the JSON string but got " + data['contract_ref']);
        }
        // ensure the json data is a string
        if (data['external_ref'] && !(typeof data['external_ref'] === 'string' || data['external_ref'] instanceof String)) {
            throw new Error("Expected the field `external_ref` to be a primitive type in the JSON string but got " + data['external_ref']);
        }
        // ensure the json data is a string
        if (data['managing_account'] && !(typeof data['managing_account'] === 'string' || data['managing_account'] instanceof String)) {
            throw new Error("Expected the field `managing_account` to be a primitive type in the JSON string but got " + data['managing_account']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['network_feature_configs'])) {
            throw new Error("Expected the field `network_feature_configs` to be an array in the JSON data but got " + data['network_feature_configs']);
        }
        // ensure the json data is a string
        if (data['purchase_order'] && !(typeof data['purchase_order'] === 'string' || data['purchase_order'] instanceof String)) {
            throw new Error("Expected the field `purchase_order` to be a primitive type in the JSON string but got " + data['purchase_order']);
        }
        // ensure the json data is a string
        if (data['role'] && !(typeof data['role'] === 'string' || data['role'] instanceof String)) {
            throw new Error("Expected the field `role` to be a primitive type in the JSON string but got " + data['role']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['role_assignments'])) {
            throw new Error("Expected the field `role_assignments` to be an array in the JSON data but got " + data['role_assignments']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // validate the optional field `vlan_config`
        if (data['vlan_config']) { // data not null
          VlanConfig.validateJSON(data['vlan_config']);
        }

        return true;
    }


}

P2MPNetworkServiceConfigUpdate.RequiredProperties = ["billing_account", "connection", "consuming_account", "managing_account", "role_assignments", "type", "vlan_config"];

/**
 * An account requires billing_information to be used as a `billing_account`.
 * @member {String} billing_account
 */
P2MPNetworkServiceConfigUpdate.prototype['billing_account'] = undefined;

/**
 * The capacity of the service in Mbps. If set to Null, the maximum capacity will be used, i.e. the virtual circuit is not rate-limited.  An exchange may choose to constrain the available capacity range of a `ProductOffering`.  That means, the service can consume up to the total bandwidth of the `Connection`.  Typically the service is charged based on the capacity.
 * @member {Number} capacity
 */
P2MPNetworkServiceConfigUpdate.prototype['capacity'] = undefined;

/**
 * The id of the connection to use for this `NetworkServiceConfig`.
 * @member {String} connection
 */
P2MPNetworkServiceConfigUpdate.prototype['connection'] = undefined;

/**
 * The `id` of the account consuming a service.  Used to be `owning_customer`. 
 * @member {String} consuming_account
 */
P2MPNetworkServiceConfigUpdate.prototype['consuming_account'] = undefined;

/**
 * A reference to a contract. If no specific contract is used, a default MAY be chosen by the implementer. 
 * @member {String} contract_ref
 */
P2MPNetworkServiceConfigUpdate.prototype['contract_ref'] = undefined;

/**
 * Reference field, free to use for the API user.
 * @member {String} external_ref
 */
P2MPNetworkServiceConfigUpdate.prototype['external_ref'] = undefined;

/**
 * The `id` of the account responsible for managing the service via the API. A manager can read and update the state of entities. 
 * @member {String} managing_account
 */
P2MPNetworkServiceConfigUpdate.prototype['managing_account'] = undefined;

/**
 * A list of ids of `NetworkFeatureConfig`s. 
 * @member {Array.<String>} network_feature_configs
 */
P2MPNetworkServiceConfigUpdate.prototype['network_feature_configs'] = undefined;

/**
 * Purchase Order ID which will be displayed on the invoice. 
 * @member {String} purchase_order
 * @default ''
 */
P2MPNetworkServiceConfigUpdate.prototype['purchase_order'] = '';

/**
 * A `leaf` can only reach roots and is isolated from other leafs. A `root` can reach any other point in the virtual circuit including other roots.
 * @member {module:model/P2MPNetworkServiceConfigUpdate.RoleEnum} role
 * @default 'leaf'
 */
P2MPNetworkServiceConfigUpdate.prototype['role'] = 'leaf';

/**
 * A set of `RoleAssignment`s. See the documentation on the specific `required_contact_roles`, `nfc_required_contact_roles` or `nsc_required_contact_roles` on what `RoleAssignment`s to provide. 
 * @member {Array.<String>} role_assignments
 */
P2MPNetworkServiceConfigUpdate.prototype['role_assignments'] = undefined;

/**
 * @member {String} type
 */
P2MPNetworkServiceConfigUpdate.prototype['type'] = undefined;

/**
 * @member {module:model/VlanConfig} vlan_config
 */
P2MPNetworkServiceConfigUpdate.prototype['vlan_config'] = undefined;


// Implement P2MPNetworkServiceConfigUpdatePartial interface:
/**
 * An account requires billing_information to be used as a `billing_account`.
 * @member {String} billing_account
 */
P2MPNetworkServiceConfigUpdatePartial.prototype['billing_account'] = undefined;
/**
 * The capacity of the service in Mbps. If set to Null, the maximum capacity will be used, i.e. the virtual circuit is not rate-limited.  An exchange may choose to constrain the available capacity range of a `ProductOffering`.  That means, the service can consume up to the total bandwidth of the `Connection`.  Typically the service is charged based on the capacity.
 * @member {Number} capacity
 */
P2MPNetworkServiceConfigUpdatePartial.prototype['capacity'] = undefined;
/**
 * The id of the connection to use for this `NetworkServiceConfig`.
 * @member {String} connection
 */
P2MPNetworkServiceConfigUpdatePartial.prototype['connection'] = undefined;
/**
 * The `id` of the account consuming a service.  Used to be `owning_customer`. 
 * @member {String} consuming_account
 */
P2MPNetworkServiceConfigUpdatePartial.prototype['consuming_account'] = undefined;
/**
 * A reference to a contract. If no specific contract is used, a default MAY be chosen by the implementer. 
 * @member {String} contract_ref
 */
P2MPNetworkServiceConfigUpdatePartial.prototype['contract_ref'] = undefined;
/**
 * Reference field, free to use for the API user.
 * @member {String} external_ref
 */
P2MPNetworkServiceConfigUpdatePartial.prototype['external_ref'] = undefined;
/**
 * The `id` of the account responsible for managing the service via the API. A manager can read and update the state of entities. 
 * @member {String} managing_account
 */
P2MPNetworkServiceConfigUpdatePartial.prototype['managing_account'] = undefined;
/**
 * A list of ids of `NetworkFeatureConfig`s. 
 * @member {Array.<String>} network_feature_configs
 */
P2MPNetworkServiceConfigUpdatePartial.prototype['network_feature_configs'] = undefined;
/**
 * Purchase Order ID which will be displayed on the invoice. 
 * @member {String} purchase_order
 * @default ''
 */
P2MPNetworkServiceConfigUpdatePartial.prototype['purchase_order'] = '';
/**
 * A `leaf` can only reach roots and is isolated from other leafs. A `root` can reach any other point in the virtual circuit including other roots.
 * @member {module:model/P2MPNetworkServiceConfigUpdatePartial.RoleEnum} role
 * @default 'leaf'
 */
P2MPNetworkServiceConfigUpdatePartial.prototype['role'] = 'leaf';
/**
 * A set of `RoleAssignment`s. See the documentation on the specific `required_contact_roles`, `nfc_required_contact_roles` or `nsc_required_contact_roles` on what `RoleAssignment`s to provide. 
 * @member {Array.<String>} role_assignments
 */
P2MPNetworkServiceConfigUpdatePartial.prototype['role_assignments'] = undefined;
/**
 * @member {String} type
 */
P2MPNetworkServiceConfigUpdatePartial.prototype['type'] = undefined;
/**
 * @member {module:model/VlanConfig} vlan_config
 */
P2MPNetworkServiceConfigUpdatePartial.prototype['vlan_config'] = undefined;



/**
 * Allowed values for the <code>role</code> property.
 * @enum {String}
 * @readonly
 */
P2MPNetworkServiceConfigUpdate['RoleEnum'] = {

    /**
     * value: "root"
     * @const
     */
    "root": "root",

    /**
     * value: "leaf"
     * @const
     */
    "leaf": "leaf"
};



export default P2MPNetworkServiceConfigUpdate;

