/**
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CloudNetworkServicePartial from './CloudNetworkServicePartial';
import MP2MPNetworkServicePartial from './MP2MPNetworkServicePartial';
import P2MPNetworkServicePartial from './P2MPNetworkServicePartial';
import P2PNetworkServicePartial from './P2PNetworkServicePartial';
import Status from './Status';

/**
 * The NetworkServiceDeleteResponsePartial model module.
 * @module model/NetworkServiceDeleteResponsePartial
 * @version 2.1.0
 */
class NetworkServiceDeleteResponsePartial {
    /**
     * Constructs a new <code>NetworkServiceDeleteResponsePartial</code>.
     * Polymorphic Network Service Request
     * @alias module:model/NetworkServiceDeleteResponsePartial
     * @param {(module:model/CloudNetworkServicePartial|module:model/MP2MPNetworkServicePartial|module:model/P2MPNetworkServicePartial|module:model/P2PNetworkServicePartial)} instance The actual instance to initialize NetworkServiceDeleteResponsePartial.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "P2PNetworkServicePartial") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                P2PNetworkServicePartial.validateJSON(instance); // throw an exception if no match
                // create P2PNetworkServicePartial from JS object
                this.actualInstance = P2PNetworkServicePartial.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into P2PNetworkServicePartial
            errorMessages.push("Failed to construct P2PNetworkServicePartial: " + err)
        }

        try {
            if (typeof instance === "P2MPNetworkServicePartial") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                P2MPNetworkServicePartial.validateJSON(instance); // throw an exception if no match
                // create P2MPNetworkServicePartial from JS object
                this.actualInstance = P2MPNetworkServicePartial.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into P2MPNetworkServicePartial
            errorMessages.push("Failed to construct P2MPNetworkServicePartial: " + err)
        }

        try {
            if (typeof instance === "MP2MPNetworkServicePartial") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                MP2MPNetworkServicePartial.validateJSON(instance); // throw an exception if no match
                // create MP2MPNetworkServicePartial from JS object
                this.actualInstance = MP2MPNetworkServicePartial.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into MP2MPNetworkServicePartial
            errorMessages.push("Failed to construct MP2MPNetworkServicePartial: " + err)
        }

        try {
            if (typeof instance === "CloudNetworkServicePartial") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CloudNetworkServicePartial.validateJSON(instance); // throw an exception if no match
                // create CloudNetworkServicePartial from JS object
                this.actualInstance = CloudNetworkServicePartial.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CloudNetworkServicePartial
            errorMessages.push("Failed to construct CloudNetworkServicePartial: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `NetworkServiceDeleteResponsePartial` with oneOf schemas CloudNetworkServicePartial, MP2MPNetworkServicePartial, P2MPNetworkServicePartial, P2PNetworkServicePartial. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `NetworkServiceDeleteResponsePartial` with oneOf schemas CloudNetworkServicePartial, MP2MPNetworkServicePartial, P2MPNetworkServicePartial, P2PNetworkServicePartial. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>NetworkServiceDeleteResponsePartial</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NetworkServiceDeleteResponsePartial} obj Optional instance to populate.
     * @return {module:model/NetworkServiceDeleteResponsePartial} The populated <code>NetworkServiceDeleteResponsePartial</code> instance.
     */
    static constructFromObject(data, obj) {
        return new NetworkServiceDeleteResponsePartial(data);
    }

    /**
     * Gets the actual instance, which can be <code>CloudNetworkServicePartial</code>, <code>MP2MPNetworkServicePartial</code>, <code>P2MPNetworkServicePartial</code>, <code>P2PNetworkServicePartial</code>.
     * @return {(module:model/CloudNetworkServicePartial|module:model/MP2MPNetworkServicePartial|module:model/P2MPNetworkServicePartial|module:model/P2PNetworkServicePartial)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>CloudNetworkServicePartial</code>, <code>MP2MPNetworkServicePartial</code>, <code>P2MPNetworkServicePartial</code>, <code>P2PNetworkServicePartial</code>.
     * @param {(module:model/CloudNetworkServicePartial|module:model/MP2MPNetworkServicePartial|module:model/P2MPNetworkServicePartial|module:model/P2PNetworkServicePartial)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = NetworkServiceDeleteResponsePartial.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of NetworkServiceDeleteResponsePartial from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/NetworkServiceDeleteResponsePartial} An instance of NetworkServiceDeleteResponsePartial.
     */
    static fromJSON = function(json_string){
        return NetworkServiceDeleteResponsePartial.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * An account requires billing_information to be used as a `billing_account`.
 * @member {String} billing_account
 */
NetworkServiceDeleteResponsePartial.prototype['billing_account'] = undefined;

/**
 * The capacity of the service in Mbps. When null, the maximum capacity will be used.
 * @member {Number} capacity
 */
NetworkServiceDeleteResponsePartial.prototype['capacity'] = undefined;

/**
 * Your obligation to pay for the service will end on this date. Typically `â‰¥ decommission_at`.  This field is only used when the state is `DECOMMISSION_REQUESTED` or `DECOMMISSIONED`.
 * @member {Date} charged_until
 */
NetworkServiceDeleteResponsePartial.prototype['charged_until'] = undefined;

/**
 * The `id` of the account consuming a service.  Used to be `owning_customer`. 
 * @member {String} consuming_account
 */
NetworkServiceDeleteResponsePartial.prototype['consuming_account'] = undefined;

/**
 * A reference to a contract. If no specific contract is used, a default MAY be chosen by the implementer. 
 * @member {String} contract_ref
 */
NetworkServiceDeleteResponsePartial.prototype['contract_ref'] = undefined;

/**
 * The service will be decommissioned on this date.  This field is only used when the state is `DECOMMISSION_REQUESTED` or `DECOMMISSIONED`.
 * @member {Date} decommission_at
 */
NetworkServiceDeleteResponsePartial.prototype['decommission_at'] = undefined;

/**
 * Reference field, free to use for the API user.
 * @member {String} external_ref
 */
NetworkServiceDeleteResponsePartial.prototype['external_ref'] = undefined;

/**
 * @member {String} id
 */
NetworkServiceDeleteResponsePartial.prototype['id'] = undefined;

/**
 * The account of the B-side member joining the virtual circuit. 
 * @member {String} joining_member_account
 */
NetworkServiceDeleteResponsePartial.prototype['joining_member_account'] = undefined;

/**
 * The `id` of the account responsible for managing the service via the API. A manager can read and update the state of entities. 
 * @member {String} managing_account
 */
NetworkServiceDeleteResponsePartial.prototype['managing_account'] = undefined;

/**
 * The configuration will require at least one of each of the specified roles assigned to contacts.  The `RoleAssignment` is associated through the `role_assignments` list property of the network service configuration.
 * @member {Array.<String>} nsc_required_contact_roles
 */
NetworkServiceDeleteResponsePartial.prototype['nsc_required_contact_roles'] = undefined;

/**
 * @member {String} product_offering
 */
NetworkServiceDeleteResponsePartial.prototype['product_offering'] = undefined;

/**
 * Purchase Order ID which will be displayed on the invoice. 
 * @member {String} purchase_order
 * @default ''
 */
NetworkServiceDeleteResponsePartial.prototype['purchase_order'] = '';

/**
 * @member {module:model/NetworkServiceDeleteResponsePartial.StateEnum} state
 */
NetworkServiceDeleteResponsePartial.prototype['state'] = undefined;

/**
 * @member {Array.<module:model/Status>} status
 */
NetworkServiceDeleteResponsePartial.prototype['status'] = undefined;

/**
 * @member {String} type
 */
NetworkServiceDeleteResponsePartial.prototype['type'] = undefined;

/**
 * @member {Array.<String>} member_joining_rules
 */
NetworkServiceDeleteResponsePartial.prototype['member_joining_rules'] = undefined;

/**
 * Name of the multi-point to multi-point virtual circuit.
 * @member {String} name
 */
NetworkServiceDeleteResponsePartial.prototype['name'] = undefined;

/**
 * @member {Array.<String>} network_features
 */
NetworkServiceDeleteResponsePartial.prototype['network_features'] = undefined;

/**
 * A public mp2mp network service can be joined by everyone on the exchange unless denied by a member-joining-rule.  Public network services are visible to other members of the IXP, however only `name`, `type`, `product_offering`, `consuming_account` and `managing_account` are made available.  Other required fields are redacted.
 * @member {Boolean} public
 * @default false
 */
NetworkServiceDeleteResponsePartial.prototype['public'] = false;

/**
 * @member {String} cloud_key
 */
NetworkServiceDeleteResponsePartial.prototype['cloud_key'] = undefined;

/**
 * Same value as the corresponding `ProductOffering`.  The service can be delivered over multiple handovers from the exchange to the `service_provider`.  The `diversity` denotes the number of handovers between the exchange and the service provider. A value of two signals a redundant service.  Only one network service configuration for each `handover` and `cloud_vlan` can be created.
 * @member {Number} diversity
 */
NetworkServiceDeleteResponsePartial.prototype['diversity'] = undefined;

/**
 * For a cloud network service with the exchange first workflow, the `provider_ref` will be a reference to a resource of the cloud provider. (E.g. the UUID of a virtual circuit.)  The `provider_ref` is managed by the exchange and its meaning may vary between different cloud services. 
 * @member {String} provider_ref
 */
NetworkServiceDeleteResponsePartial.prototype['provider_ref'] = undefined;


NetworkServiceDeleteResponsePartial.OneOf = ["CloudNetworkServicePartial", "MP2MPNetworkServicePartial", "P2MPNetworkServicePartial", "P2PNetworkServicePartial"];

export default NetworkServiceDeleteResponsePartial;

