/**
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MacAddressPartial model module.
 * @module model/MacAddressPartial
 * @version 2.1.0
 */
class MacAddressPartial {
    /**
     * Constructs a new <code>MacAddressPartial</code>.
     * MAC-Address
     * @alias module:model/MacAddressPartial
     */
    constructor() { 
        
        MacAddressPartial.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MacAddressPartial</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MacAddressPartial} obj Optional instance to populate.
     * @return {module:model/MacAddressPartial} The populated <code>MacAddressPartial</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MacAddressPartial();

            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
            if (data.hasOwnProperty('consuming_account')) {
                obj['consuming_account'] = ApiClient.convertToType(data['consuming_account'], 'String');
            }
            if (data.hasOwnProperty('external_ref')) {
                obj['external_ref'] = ApiClient.convertToType(data['external_ref'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('managing_account')) {
                obj['managing_account'] = ApiClient.convertToType(data['managing_account'], 'String');
            }
            if (data.hasOwnProperty('valid_not_after')) {
                obj['valid_not_after'] = ApiClient.convertToType(data['valid_not_after'], 'Date');
            }
            if (data.hasOwnProperty('valid_not_before')) {
                obj['valid_not_before'] = ApiClient.convertToType(data['valid_not_before'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MacAddressPartial</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MacAddressPartial</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['address'] && !(typeof data['address'] === 'string' || data['address'] instanceof String)) {
            throw new Error("Expected the field `address` to be a primitive type in the JSON string but got " + data['address']);
        }
        // ensure the json data is a string
        if (data['consuming_account'] && !(typeof data['consuming_account'] === 'string' || data['consuming_account'] instanceof String)) {
            throw new Error("Expected the field `consuming_account` to be a primitive type in the JSON string but got " + data['consuming_account']);
        }
        // ensure the json data is a string
        if (data['external_ref'] && !(typeof data['external_ref'] === 'string' || data['external_ref'] instanceof String)) {
            throw new Error("Expected the field `external_ref` to be a primitive type in the JSON string but got " + data['external_ref']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['managing_account'] && !(typeof data['managing_account'] === 'string' || data['managing_account'] instanceof String)) {
            throw new Error("Expected the field `managing_account` to be a primitive type in the JSON string but got " + data['managing_account']);
        }

        return true;
    }


}



/**
 * Unicast MAC address, formatted hexadecimal values with colons. 
 * @member {String} address
 */
MacAddressPartial.prototype['address'] = undefined;

/**
 * The `id` of the account consuming a service.  Used to be `owning_customer`. 
 * @member {String} consuming_account
 */
MacAddressPartial.prototype['consuming_account'] = undefined;

/**
 * Reference field, free to use for the API user.
 * @member {String} external_ref
 */
MacAddressPartial.prototype['external_ref'] = undefined;

/**
 * @member {String} id
 */
MacAddressPartial.prototype['id'] = undefined;

/**
 * The `id` of the account responsible for managing the service via the API. A manager can read and update the state of entities. 
 * @member {String} managing_account
 */
MacAddressPartial.prototype['managing_account'] = undefined;

/**
 * @member {Date} valid_not_after
 */
MacAddressPartial.prototype['valid_not_after'] = undefined;

/**
 * @member {Date} valid_not_before
 */
MacAddressPartial.prototype['valid_not_before'] = undefined;






export default MacAddressPartial;

