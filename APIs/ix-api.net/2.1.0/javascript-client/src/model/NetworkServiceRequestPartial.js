/**
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CloudNetworkServiceRequestPartial from './CloudNetworkServiceRequestPartial';
import MP2MPNetworkServiceRequestPartial from './MP2MPNetworkServiceRequestPartial';
import P2MPNetworkServiceRequestPartial from './P2MPNetworkServiceRequestPartial';
import P2PNetworkServiceRequestPartial from './P2PNetworkServiceRequestPartial';

/**
 * The NetworkServiceRequestPartial model module.
 * @module model/NetworkServiceRequestPartial
 * @version 2.1.0
 */
class NetworkServiceRequestPartial {
    /**
     * Constructs a new <code>NetworkServiceRequestPartial</code>.
     * Polymorphic Network Service Request
     * @alias module:model/NetworkServiceRequestPartial
     * @param {(module:model/CloudNetworkServiceRequestPartial|module:model/MP2MPNetworkServiceRequestPartial|module:model/P2MPNetworkServiceRequestPartial|module:model/P2PNetworkServiceRequestPartial)} instance The actual instance to initialize NetworkServiceRequestPartial.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "P2PNetworkServiceRequestPartial") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                P2PNetworkServiceRequestPartial.validateJSON(instance); // throw an exception if no match
                // create P2PNetworkServiceRequestPartial from JS object
                this.actualInstance = P2PNetworkServiceRequestPartial.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into P2PNetworkServiceRequestPartial
            errorMessages.push("Failed to construct P2PNetworkServiceRequestPartial: " + err)
        }

        try {
            if (typeof instance === "P2MPNetworkServiceRequestPartial") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                P2MPNetworkServiceRequestPartial.validateJSON(instance); // throw an exception if no match
                // create P2MPNetworkServiceRequestPartial from JS object
                this.actualInstance = P2MPNetworkServiceRequestPartial.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into P2MPNetworkServiceRequestPartial
            errorMessages.push("Failed to construct P2MPNetworkServiceRequestPartial: " + err)
        }

        try {
            if (typeof instance === "MP2MPNetworkServiceRequestPartial") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                MP2MPNetworkServiceRequestPartial.validateJSON(instance); // throw an exception if no match
                // create MP2MPNetworkServiceRequestPartial from JS object
                this.actualInstance = MP2MPNetworkServiceRequestPartial.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into MP2MPNetworkServiceRequestPartial
            errorMessages.push("Failed to construct MP2MPNetworkServiceRequestPartial: " + err)
        }

        try {
            if (typeof instance === "CloudNetworkServiceRequestPartial") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CloudNetworkServiceRequestPartial.validateJSON(instance); // throw an exception if no match
                // create CloudNetworkServiceRequestPartial from JS object
                this.actualInstance = CloudNetworkServiceRequestPartial.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CloudNetworkServiceRequestPartial
            errorMessages.push("Failed to construct CloudNetworkServiceRequestPartial: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `NetworkServiceRequestPartial` with oneOf schemas CloudNetworkServiceRequestPartial, MP2MPNetworkServiceRequestPartial, P2MPNetworkServiceRequestPartial, P2PNetworkServiceRequestPartial. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `NetworkServiceRequestPartial` with oneOf schemas CloudNetworkServiceRequestPartial, MP2MPNetworkServiceRequestPartial, P2MPNetworkServiceRequestPartial, P2PNetworkServiceRequestPartial. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>NetworkServiceRequestPartial</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NetworkServiceRequestPartial} obj Optional instance to populate.
     * @return {module:model/NetworkServiceRequestPartial} The populated <code>NetworkServiceRequestPartial</code> instance.
     */
    static constructFromObject(data, obj) {
        return new NetworkServiceRequestPartial(data);
    }

    /**
     * Gets the actual instance, which can be <code>CloudNetworkServiceRequestPartial</code>, <code>MP2MPNetworkServiceRequestPartial</code>, <code>P2MPNetworkServiceRequestPartial</code>, <code>P2PNetworkServiceRequestPartial</code>.
     * @return {(module:model/CloudNetworkServiceRequestPartial|module:model/MP2MPNetworkServiceRequestPartial|module:model/P2MPNetworkServiceRequestPartial|module:model/P2PNetworkServiceRequestPartial)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>CloudNetworkServiceRequestPartial</code>, <code>MP2MPNetworkServiceRequestPartial</code>, <code>P2MPNetworkServiceRequestPartial</code>, <code>P2PNetworkServiceRequestPartial</code>.
     * @param {(module:model/CloudNetworkServiceRequestPartial|module:model/MP2MPNetworkServiceRequestPartial|module:model/P2MPNetworkServiceRequestPartial|module:model/P2PNetworkServiceRequestPartial)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = NetworkServiceRequestPartial.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of NetworkServiceRequestPartial from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/NetworkServiceRequestPartial} An instance of NetworkServiceRequestPartial.
     */
    static fromJSON = function(json_string){
        return NetworkServiceRequestPartial.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * An account requires billing_information to be used as a `billing_account`.
 * @member {String} billing_account
 */
NetworkServiceRequestPartial.prototype['billing_account'] = undefined;

/**
 * The `id` of the account consuming a service.  Used to be `owning_customer`. 
 * @member {String} consuming_account
 */
NetworkServiceRequestPartial.prototype['consuming_account'] = undefined;

/**
 * A reference to a contract. If no specific contract is used, a default MAY be chosen by the implementer. 
 * @member {String} contract_ref
 */
NetworkServiceRequestPartial.prototype['contract_ref'] = undefined;

/**
 * Reference field, free to use for the API user.
 * @member {String} external_ref
 */
NetworkServiceRequestPartial.prototype['external_ref'] = undefined;

/**
 * The account of the B-side member joining the virtual circuit. 
 * @member {String} joining_member_account
 */
NetworkServiceRequestPartial.prototype['joining_member_account'] = undefined;

/**
 * The `id` of the account responsible for managing the service via the API. A manager can read and update the state of entities. 
 * @member {String} managing_account
 */
NetworkServiceRequestPartial.prototype['managing_account'] = undefined;

/**
 * @member {String} product_offering
 */
NetworkServiceRequestPartial.prototype['product_offering'] = undefined;

/**
 * Purchase Order ID which will be displayed on the invoice. 
 * @member {String} purchase_order
 * @default ''
 */
NetworkServiceRequestPartial.prototype['purchase_order'] = '';

/**
 * @member {String} type
 */
NetworkServiceRequestPartial.prototype['type'] = undefined;

/**
 * Name of the multi-point to multi-point virtual circuit.
 * @member {String} name
 */
NetworkServiceRequestPartial.prototype['name'] = undefined;

/**
 * A public mp2mp network service can be joined by everyone on the exchange unless denied by a member-joining-rule.  Public network services are visible to other members of the IXP, however only `name`, `type`, `product_offering`, `consuming_account` and `managing_account` are made available.  Other required fields are redacted.
 * @member {Boolean} public
 * @default false
 */
NetworkServiceRequestPartial.prototype['public'] = false;

/**
 * The capacity of the service in Mbps. When null, the maximum capacity will be used.
 * @member {Number} capacity
 */
NetworkServiceRequestPartial.prototype['capacity'] = undefined;

/**
 * @member {String} cloud_key
 */
NetworkServiceRequestPartial.prototype['cloud_key'] = undefined;


NetworkServiceRequestPartial.OneOf = ["CloudNetworkServiceRequestPartial", "MP2MPNetworkServiceRequestPartial", "P2MPNetworkServiceRequestPartial", "P2PNetworkServiceRequestPartial"];

export default NetworkServiceRequestPartial;

