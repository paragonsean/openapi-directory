/**
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The P2MPNetworkServiceRequestPartial model module.
 * @module model/P2MPNetworkServiceRequestPartial
 * @version 2.1.0
 */
class P2MPNetworkServiceRequestPartial {
    /**
     * Constructs a new <code>P2MPNetworkServiceRequestPartial</code>.
     * P2MP Network Service Request
     * @alias module:model/P2MPNetworkServiceRequestPartial
     * @param type {String} 
     */
    constructor(type) { 
        
        P2MPNetworkServiceRequestPartial.initialize(this, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type) { 
        obj['public'] = false;
        obj['purchase_order'] = '';
        obj['type'] = type;
    }

    /**
     * Constructs a <code>P2MPNetworkServiceRequestPartial</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/P2MPNetworkServiceRequestPartial} obj Optional instance to populate.
     * @return {module:model/P2MPNetworkServiceRequestPartial} The populated <code>P2MPNetworkServiceRequestPartial</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new P2MPNetworkServiceRequestPartial();

            if (data.hasOwnProperty('billing_account')) {
                obj['billing_account'] = ApiClient.convertToType(data['billing_account'], 'String');
            }
            if (data.hasOwnProperty('consuming_account')) {
                obj['consuming_account'] = ApiClient.convertToType(data['consuming_account'], 'String');
            }
            if (data.hasOwnProperty('contract_ref')) {
                obj['contract_ref'] = ApiClient.convertToType(data['contract_ref'], 'String');
            }
            if (data.hasOwnProperty('external_ref')) {
                obj['external_ref'] = ApiClient.convertToType(data['external_ref'], 'String');
            }
            if (data.hasOwnProperty('managing_account')) {
                obj['managing_account'] = ApiClient.convertToType(data['managing_account'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('product_offering')) {
                obj['product_offering'] = ApiClient.convertToType(data['product_offering'], 'String');
            }
            if (data.hasOwnProperty('public')) {
                obj['public'] = ApiClient.convertToType(data['public'], 'Boolean');
            }
            if (data.hasOwnProperty('purchase_order')) {
                obj['purchase_order'] = ApiClient.convertToType(data['purchase_order'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>P2MPNetworkServiceRequestPartial</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>P2MPNetworkServiceRequestPartial</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of P2MPNetworkServiceRequestPartial.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['billing_account'] && !(typeof data['billing_account'] === 'string' || data['billing_account'] instanceof String)) {
            throw new Error("Expected the field `billing_account` to be a primitive type in the JSON string but got " + data['billing_account']);
        }
        // ensure the json data is a string
        if (data['consuming_account'] && !(typeof data['consuming_account'] === 'string' || data['consuming_account'] instanceof String)) {
            throw new Error("Expected the field `consuming_account` to be a primitive type in the JSON string but got " + data['consuming_account']);
        }
        // ensure the json data is a string
        if (data['contract_ref'] && !(typeof data['contract_ref'] === 'string' || data['contract_ref'] instanceof String)) {
            throw new Error("Expected the field `contract_ref` to be a primitive type in the JSON string but got " + data['contract_ref']);
        }
        // ensure the json data is a string
        if (data['external_ref'] && !(typeof data['external_ref'] === 'string' || data['external_ref'] instanceof String)) {
            throw new Error("Expected the field `external_ref` to be a primitive type in the JSON string but got " + data['external_ref']);
        }
        // ensure the json data is a string
        if (data['managing_account'] && !(typeof data['managing_account'] === 'string' || data['managing_account'] instanceof String)) {
            throw new Error("Expected the field `managing_account` to be a primitive type in the JSON string but got " + data['managing_account']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['product_offering'] && !(typeof data['product_offering'] === 'string' || data['product_offering'] instanceof String)) {
            throw new Error("Expected the field `product_offering` to be a primitive type in the JSON string but got " + data['product_offering']);
        }
        // ensure the json data is a string
        if (data['purchase_order'] && !(typeof data['purchase_order'] === 'string' || data['purchase_order'] instanceof String)) {
            throw new Error("Expected the field `purchase_order` to be a primitive type in the JSON string but got " + data['purchase_order']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

P2MPNetworkServiceRequestPartial.RequiredProperties = ["type"];

/**
 * An account requires billing_information to be used as a `billing_account`.
 * @member {String} billing_account
 */
P2MPNetworkServiceRequestPartial.prototype['billing_account'] = undefined;

/**
 * The `id` of the account consuming a service.  Used to be `owning_customer`. 
 * @member {String} consuming_account
 */
P2MPNetworkServiceRequestPartial.prototype['consuming_account'] = undefined;

/**
 * A reference to a contract. If no specific contract is used, a default MAY be chosen by the implementer. 
 * @member {String} contract_ref
 */
P2MPNetworkServiceRequestPartial.prototype['contract_ref'] = undefined;

/**
 * Reference field, free to use for the API user.
 * @member {String} external_ref
 */
P2MPNetworkServiceRequestPartial.prototype['external_ref'] = undefined;

/**
 * The `id` of the account responsible for managing the service via the API. A manager can read and update the state of entities. 
 * @member {String} managing_account
 */
P2MPNetworkServiceRequestPartial.prototype['managing_account'] = undefined;

/**
 * Name of the point to multi-point virtual circuit.
 * @member {String} name
 */
P2MPNetworkServiceRequestPartial.prototype['name'] = undefined;

/**
 * @member {String} product_offering
 */
P2MPNetworkServiceRequestPartial.prototype['product_offering'] = undefined;

/**
 * A public p2mp network service can be joined by everyone on the exchange unless denied by a member-joining-rule.  Public network services are visible to other members of the IXP, however only `name`, `type`, `product_offering`, `consuming_account` and `managing_account` are made available.  Other required fields are redacted.
 * @member {Boolean} public
 * @default false
 */
P2MPNetworkServiceRequestPartial.prototype['public'] = false;

/**
 * Purchase Order ID which will be displayed on the invoice. 
 * @member {String} purchase_order
 * @default ''
 */
P2MPNetworkServiceRequestPartial.prototype['purchase_order'] = '';

/**
 * @member {String} type
 */
P2MPNetworkServiceRequestPartial.prototype['type'] = undefined;






export default P2MPNetworkServiceRequestPartial;

