/**
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Address from './Address';
import BillingInformation from './BillingInformation';

/**
 * The AccountRequestPartial model module.
 * @module model/AccountRequestPartial
 * @version 2.1.0
 */
class AccountRequestPartial {
    /**
     * Constructs a new <code>AccountRequestPartial</code>.
     * Account Request
     * @alias module:model/AccountRequestPartial
     */
    constructor() { 
        
        AccountRequestPartial.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['discoverable'] = false;
    }

    /**
     * Constructs a <code>AccountRequestPartial</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AccountRequestPartial} obj Optional instance to populate.
     * @return {module:model/AccountRequestPartial} The populated <code>AccountRequestPartial</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AccountRequestPartial();

            if (data.hasOwnProperty('address')) {
                obj['address'] = Address.constructFromObject(data['address']);
            }
            if (data.hasOwnProperty('billing_information')) {
                obj['billing_information'] = BillingInformation.constructFromObject(data['billing_information']);
            }
            if (data.hasOwnProperty('discoverable')) {
                obj['discoverable'] = ApiClient.convertToType(data['discoverable'], 'Boolean');
            }
            if (data.hasOwnProperty('external_ref')) {
                obj['external_ref'] = ApiClient.convertToType(data['external_ref'], 'String');
            }
            if (data.hasOwnProperty('legal_name')) {
                obj['legal_name'] = ApiClient.convertToType(data['legal_name'], 'String');
            }
            if (data.hasOwnProperty('managing_account')) {
                obj['managing_account'] = ApiClient.convertToType(data['managing_account'], 'String');
            }
            if (data.hasOwnProperty('metro_area_network_presence')) {
                obj['metro_area_network_presence'] = ApiClient.convertToType(data['metro_area_network_presence'], ['String']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AccountRequestPartial</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AccountRequestPartial</code>.
     */
    static validateJSON(data) {
        // validate the optional field `address`
        if (data['address']) { // data not null
          Address.validateJSON(data['address']);
        }
        // validate the optional field `billing_information`
        if (data['billing_information']) { // data not null
          BillingInformation.validateJSON(data['billing_information']);
        }
        // ensure the json data is a string
        if (data['external_ref'] && !(typeof data['external_ref'] === 'string' || data['external_ref'] instanceof String)) {
            throw new Error("Expected the field `external_ref` to be a primitive type in the JSON string but got " + data['external_ref']);
        }
        // ensure the json data is a string
        if (data['legal_name'] && !(typeof data['legal_name'] === 'string' || data['legal_name'] instanceof String)) {
            throw new Error("Expected the field `legal_name` to be a primitive type in the JSON string but got " + data['legal_name']);
        }
        // ensure the json data is a string
        if (data['managing_account'] && !(typeof data['managing_account'] === 'string' || data['managing_account'] instanceof String)) {
            throw new Error("Expected the field `managing_account` to be a primitive type in the JSON string but got " + data['managing_account']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['metro_area_network_presence'])) {
            throw new Error("Expected the field `metro_area_network_presence` to be an array in the JSON data but got " + data['metro_area_network_presence']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * @member {module:model/Address} address
 */
AccountRequestPartial.prototype['address'] = undefined;

/**
 * @member {module:model/BillingInformation} billing_information
 */
AccountRequestPartial.prototype['billing_information'] = undefined;

/**
 * The account will be included for all members of the ix in the list of accounts.  Only `id`, `name` and `present_in_metro_area_networks` are provided to other members.
 * @member {Boolean} discoverable
 * @default false
 */
AccountRequestPartial.prototype['discoverable'] = false;

/**
 * Reference field, free to use for the API user.
 * @member {String} external_ref
 */
AccountRequestPartial.prototype['external_ref'] = undefined;

/**
 * Legal name of the organisation. Only required when it's different from the account name. 
 * @member {String} legal_name
 */
AccountRequestPartial.prototype['legal_name'] = undefined;

/**
 * The `id` of a managing account. Can be used for creating a customer hierachy. 
 * @member {String} managing_account
 */
AccountRequestPartial.prototype['managing_account'] = undefined;

/**
 * Informal list of `MetroAreaNetwork` ids, indicating the presence to other accounts. The list is maintained by the account and can be empty. 
 * @member {Array.<String>} metro_area_network_presence
 */
AccountRequestPartial.prototype['metro_area_network_presence'] = undefined;

/**
 * Name of the account, how it gets represented in e.g. a \"customers list\". 
 * @member {String} name
 */
AccountRequestPartial.prototype['name'] = undefined;






export default AccountRequestPartial;

