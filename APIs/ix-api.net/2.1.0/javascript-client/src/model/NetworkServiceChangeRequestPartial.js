/**
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NetworkServiceChangeRequestPartial model module.
 * @module model/NetworkServiceChangeRequestPartial
 * @version 2.1.0
 */
class NetworkServiceChangeRequestPartial {
    /**
     * Constructs a new <code>NetworkServiceChangeRequestPartial</code>.
     * NetworkServiceChangeRequest
     * @alias module:model/NetworkServiceChangeRequestPartial
     */
    constructor() { 
        
        NetworkServiceChangeRequestPartial.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NetworkServiceChangeRequestPartial</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NetworkServiceChangeRequestPartial} obj Optional instance to populate.
     * @return {module:model/NetworkServiceChangeRequestPartial} The populated <code>NetworkServiceChangeRequestPartial</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NetworkServiceChangeRequestPartial();

            if (data.hasOwnProperty('capacity')) {
                obj['capacity'] = ApiClient.convertToType(data['capacity'], 'Number');
            }
            if (data.hasOwnProperty('product_offering')) {
                obj['product_offering'] = ApiClient.convertToType(data['product_offering'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NetworkServiceChangeRequestPartial</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NetworkServiceChangeRequestPartial</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['product_offering'] && !(typeof data['product_offering'] === 'string' || data['product_offering'] instanceof String)) {
            throw new Error("Expected the field `product_offering` to be a primitive type in the JSON string but got " + data['product_offering']);
        }

        return true;
    }


}



/**
 * The desired capacity of the service in Mbps.  Must be within the range of `bandwidth_min` and `bandwidth_max` of the `ProductOffering`.  When `null` the maximum capacity wil be used.
 * @member {Number} capacity
 */
NetworkServiceChangeRequestPartial.prototype['capacity'] = undefined;

/**
 * Migrate to a diffrent product offering. Please note, that the offering only may differ in bandwidth.
 * @member {String} product_offering
 */
NetworkServiceChangeRequestPartial.prototype['product_offering'] = undefined;






export default NetworkServiceChangeRequestPartial;

