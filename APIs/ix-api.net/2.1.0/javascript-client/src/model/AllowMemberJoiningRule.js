/**
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AllowMemberJoiningRulePartial from './AllowMemberJoiningRulePartial';

/**
 * The AllowMemberJoiningRule model module.
 * @module model/AllowMemberJoiningRule
 * @version 2.1.0
 */
class AllowMemberJoiningRule {
    /**
     * Constructs a new <code>AllowMemberJoiningRule</code>.
     * @alias module:model/AllowMemberJoiningRule
     * @implements module:model/AllowMemberJoiningRulePartial
     * @param consumingAccount {String} The `id` of the account to which access to the network service should be granted or denied. 
     * @param id {String} 
     * @param managingAccount {String} The `id` of the account responsible for managing the service via the API. A manager can read and update the state of entities. 
     * @param networkService {String} 
     * @param type {String} 
     */
    constructor(consumingAccount, id, managingAccount, networkService, type) { 
        AllowMemberJoiningRulePartial.initialize(this, type);
        AllowMemberJoiningRule.initialize(this, consumingAccount, id, managingAccount, networkService, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, consumingAccount, id, managingAccount, networkService, type) { 
        obj['consuming_account'] = consumingAccount;
        obj['id'] = id;
        obj['managing_account'] = managingAccount;
        obj['network_service'] = networkService;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>AllowMemberJoiningRule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AllowMemberJoiningRule} obj Optional instance to populate.
     * @return {module:model/AllowMemberJoiningRule} The populated <code>AllowMemberJoiningRule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AllowMemberJoiningRule();
            AllowMemberJoiningRulePartial.constructFromObject(data, obj);

            if (data.hasOwnProperty('capacity_max')) {
                obj['capacity_max'] = ApiClient.convertToType(data['capacity_max'], 'Number');
            }
            if (data.hasOwnProperty('capacity_min')) {
                obj['capacity_min'] = ApiClient.convertToType(data['capacity_min'], 'Number');
            }
            if (data.hasOwnProperty('consuming_account')) {
                obj['consuming_account'] = ApiClient.convertToType(data['consuming_account'], 'String');
            }
            if (data.hasOwnProperty('external_ref')) {
                obj['external_ref'] = ApiClient.convertToType(data['external_ref'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('managing_account')) {
                obj['managing_account'] = ApiClient.convertToType(data['managing_account'], 'String');
            }
            if (data.hasOwnProperty('network_service')) {
                obj['network_service'] = ApiClient.convertToType(data['network_service'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AllowMemberJoiningRule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AllowMemberJoiningRule</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AllowMemberJoiningRule.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['consuming_account'] && !(typeof data['consuming_account'] === 'string' || data['consuming_account'] instanceof String)) {
            throw new Error("Expected the field `consuming_account` to be a primitive type in the JSON string but got " + data['consuming_account']);
        }
        // ensure the json data is a string
        if (data['external_ref'] && !(typeof data['external_ref'] === 'string' || data['external_ref'] instanceof String)) {
            throw new Error("Expected the field `external_ref` to be a primitive type in the JSON string but got " + data['external_ref']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['managing_account'] && !(typeof data['managing_account'] === 'string' || data['managing_account'] instanceof String)) {
            throw new Error("Expected the field `managing_account` to be a primitive type in the JSON string but got " + data['managing_account']);
        }
        // ensure the json data is a string
        if (data['network_service'] && !(typeof data['network_service'] === 'string' || data['network_service'] instanceof String)) {
            throw new Error("Expected the field `network_service` to be a primitive type in the JSON string but got " + data['network_service']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

AllowMemberJoiningRule.RequiredProperties = ["consuming_account", "id", "managing_account", "network_service", "type"];

/**
 * An optional rate limit which has precedence over the capacity set in the network service config.
 * @member {Number} capacity_max
 */
AllowMemberJoiningRule.prototype['capacity_max'] = undefined;

/**
 * Require an optional minimum capacity to join the network service.
 * @member {Number} capacity_min
 */
AllowMemberJoiningRule.prototype['capacity_min'] = undefined;

/**
 * The `id` of the account to which access to the network service should be granted or denied. 
 * @member {String} consuming_account
 */
AllowMemberJoiningRule.prototype['consuming_account'] = undefined;

/**
 * Reference field, free to use for the API user.
 * @member {String} external_ref
 */
AllowMemberJoiningRule.prototype['external_ref'] = undefined;

/**
 * @member {String} id
 */
AllowMemberJoiningRule.prototype['id'] = undefined;

/**
 * The `id` of the account responsible for managing the service via the API. A manager can read and update the state of entities. 
 * @member {String} managing_account
 */
AllowMemberJoiningRule.prototype['managing_account'] = undefined;

/**
 * @member {String} network_service
 */
AllowMemberJoiningRule.prototype['network_service'] = undefined;

/**
 * @member {String} type
 */
AllowMemberJoiningRule.prototype['type'] = undefined;


// Implement AllowMemberJoiningRulePartial interface:
/**
 * An optional rate limit which has precedence over the capacity set in the network service config.
 * @member {Number} capacity_max
 */
AllowMemberJoiningRulePartial.prototype['capacity_max'] = undefined;
/**
 * Require an optional minimum capacity to join the network service.
 * @member {Number} capacity_min
 */
AllowMemberJoiningRulePartial.prototype['capacity_min'] = undefined;
/**
 * The `id` of the account to which access to the network service should be granted or denied. 
 * @member {String} consuming_account
 */
AllowMemberJoiningRulePartial.prototype['consuming_account'] = undefined;
/**
 * Reference field, free to use for the API user.
 * @member {String} external_ref
 */
AllowMemberJoiningRulePartial.prototype['external_ref'] = undefined;
/**
 * @member {String} id
 */
AllowMemberJoiningRulePartial.prototype['id'] = undefined;
/**
 * The `id` of the account responsible for managing the service via the API. A manager can read and update the state of entities. 
 * @member {String} managing_account
 */
AllowMemberJoiningRulePartial.prototype['managing_account'] = undefined;
/**
 * @member {String} network_service
 */
AllowMemberJoiningRulePartial.prototype['network_service'] = undefined;
/**
 * @member {String} type
 */
AllowMemberJoiningRulePartial.prototype['type'] = undefined;




export default AllowMemberJoiningRule;

