/**
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CloudNetworkProductOfferingPartial from './CloudNetworkProductOfferingPartial';
import ExchangeLanNetworkProductOfferingPartial from './ExchangeLanNetworkProductOfferingPartial';
import MP2MPNetworkProductOfferingPartial from './MP2MPNetworkProductOfferingPartial';
import P2MPNetworkProductOfferingPartial from './P2MPNetworkProductOfferingPartial';
import P2PNetworkProductOfferingPartial from './P2PNetworkProductOfferingPartial';

/**
 * The ProductOfferingPartial model module.
 * @module model/ProductOfferingPartial
 * @version 2.1.0
 */
class ProductOfferingPartial {
    /**
     * Constructs a new <code>ProductOfferingPartial</code>.
     * Polymorphic Product Offering
     * @alias module:model/ProductOfferingPartial
     * @param {(module:model/CloudNetworkProductOfferingPartial|module:model/ExchangeLanNetworkProductOfferingPartial|module:model/MP2MPNetworkProductOfferingPartial|module:model/P2MPNetworkProductOfferingPartial|module:model/P2PNetworkProductOfferingPartial)} instance The actual instance to initialize ProductOfferingPartial.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "ExchangeLanNetworkProductOfferingPartial") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ExchangeLanNetworkProductOfferingPartial.validateJSON(instance); // throw an exception if no match
                // create ExchangeLanNetworkProductOfferingPartial from JS object
                this.actualInstance = ExchangeLanNetworkProductOfferingPartial.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ExchangeLanNetworkProductOfferingPartial
            errorMessages.push("Failed to construct ExchangeLanNetworkProductOfferingPartial: " + err)
        }

        try {
            if (typeof instance === "P2PNetworkProductOfferingPartial") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                P2PNetworkProductOfferingPartial.validateJSON(instance); // throw an exception if no match
                // create P2PNetworkProductOfferingPartial from JS object
                this.actualInstance = P2PNetworkProductOfferingPartial.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into P2PNetworkProductOfferingPartial
            errorMessages.push("Failed to construct P2PNetworkProductOfferingPartial: " + err)
        }

        try {
            if (typeof instance === "MP2MPNetworkProductOfferingPartial") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                MP2MPNetworkProductOfferingPartial.validateJSON(instance); // throw an exception if no match
                // create MP2MPNetworkProductOfferingPartial from JS object
                this.actualInstance = MP2MPNetworkProductOfferingPartial.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into MP2MPNetworkProductOfferingPartial
            errorMessages.push("Failed to construct MP2MPNetworkProductOfferingPartial: " + err)
        }

        try {
            if (typeof instance === "P2MPNetworkProductOfferingPartial") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                P2MPNetworkProductOfferingPartial.validateJSON(instance); // throw an exception if no match
                // create P2MPNetworkProductOfferingPartial from JS object
                this.actualInstance = P2MPNetworkProductOfferingPartial.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into P2MPNetworkProductOfferingPartial
            errorMessages.push("Failed to construct P2MPNetworkProductOfferingPartial: " + err)
        }

        try {
            if (typeof instance === "CloudNetworkProductOfferingPartial") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CloudNetworkProductOfferingPartial.validateJSON(instance); // throw an exception if no match
                // create CloudNetworkProductOfferingPartial from JS object
                this.actualInstance = CloudNetworkProductOfferingPartial.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CloudNetworkProductOfferingPartial
            errorMessages.push("Failed to construct CloudNetworkProductOfferingPartial: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `ProductOfferingPartial` with oneOf schemas CloudNetworkProductOfferingPartial, ExchangeLanNetworkProductOfferingPartial, MP2MPNetworkProductOfferingPartial, P2MPNetworkProductOfferingPartial, P2PNetworkProductOfferingPartial. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `ProductOfferingPartial` with oneOf schemas CloudNetworkProductOfferingPartial, ExchangeLanNetworkProductOfferingPartial, MP2MPNetworkProductOfferingPartial, P2MPNetworkProductOfferingPartial, P2PNetworkProductOfferingPartial. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>ProductOfferingPartial</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductOfferingPartial} obj Optional instance to populate.
     * @return {module:model/ProductOfferingPartial} The populated <code>ProductOfferingPartial</code> instance.
     */
    static constructFromObject(data, obj) {
        return new ProductOfferingPartial(data);
    }

    /**
     * Gets the actual instance, which can be <code>CloudNetworkProductOfferingPartial</code>, <code>ExchangeLanNetworkProductOfferingPartial</code>, <code>MP2MPNetworkProductOfferingPartial</code>, <code>P2MPNetworkProductOfferingPartial</code>, <code>P2PNetworkProductOfferingPartial</code>.
     * @return {(module:model/CloudNetworkProductOfferingPartial|module:model/ExchangeLanNetworkProductOfferingPartial|module:model/MP2MPNetworkProductOfferingPartial|module:model/P2MPNetworkProductOfferingPartial|module:model/P2PNetworkProductOfferingPartial)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>CloudNetworkProductOfferingPartial</code>, <code>ExchangeLanNetworkProductOfferingPartial</code>, <code>MP2MPNetworkProductOfferingPartial</code>, <code>P2MPNetworkProductOfferingPartial</code>, <code>P2PNetworkProductOfferingPartial</code>.
     * @param {(module:model/CloudNetworkProductOfferingPartial|module:model/ExchangeLanNetworkProductOfferingPartial|module:model/MP2MPNetworkProductOfferingPartial|module:model/P2MPNetworkProductOfferingPartial|module:model/P2PNetworkProductOfferingPartial)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = ProductOfferingPartial.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of ProductOfferingPartial from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/ProductOfferingPartial} An instance of ProductOfferingPartial.
     */
    static fromJSON = function(json_string){
        return ProductOfferingPartial.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * When not `null`, this value enforces a mandatory rate limit for all network service configs.
 * @member {Number} bandwidth_max
 */
ProductOfferingPartial.prototype['bandwidth_max'] = undefined;

/**
 * When configuring access to the network service, at least this `capacity` must be provided.
 * @member {Number} bandwidth_min
 */
ProductOfferingPartial.prototype['bandwidth_min'] = undefined;

/**
 * @member {String} display_name
 */
ProductOfferingPartial.prototype['display_name'] = undefined;

/**
 * Indicates if the service can be migrated to a lower bandwidth.
 * @member {Boolean} downgrade_allowed
 */
ProductOfferingPartial.prototype['downgrade_allowed'] = undefined;

/**
 * The id of the exchange lan network service.
 * @member {String} exchange_lan_network_service
 */
ProductOfferingPartial.prototype['exchange_lan_network_service'] = undefined;

/**
 * Id of the `MetroArea`. The network service will be accessed from this metro area. 
 * @member {String} handover_metro_area
 */
ProductOfferingPartial.prototype['handover_metro_area'] = undefined;

/**
 * Id of the `MetroAreaNetwork`. The service will be accessed through the handover metro area network. 
 * @member {String} handover_metro_area_network
 */
ProductOfferingPartial.prototype['handover_metro_area_network'] = undefined;

/**
 * @member {String} id
 */
ProductOfferingPartial.prototype['id'] = undefined;

/**
 * Name of the product
 * @member {String} name
 */
ProductOfferingPartial.prototype['name'] = undefined;

/**
 * If the service is dependent on the speed of the physical port this field denotes the speed.
 * @member {Number} physical_port_speed
 */
ProductOfferingPartial.prototype['physical_port_speed'] = undefined;

/**
 * The `NetworkService` provides `single` or `multi`ple vlans.
 * @member {module:model/ProductOfferingPartial.ProviderVlansEnum} provider_vlans
 */
ProductOfferingPartial.prototype['provider_vlans'] = undefined;

/**
 * The resource type refers to an ix-api resource. 
 * @member {module:model/ProductOfferingPartial.ResourceTypeEnum} resource_type
 */
ProductOfferingPartial.prototype['resource_type'] = undefined;

/**
 * Id of the `MetroArea`. The service is delivered in this metro area. 
 * @member {String} service_metro_area
 */
ProductOfferingPartial.prototype['service_metro_area'] = undefined;

/**
 * Id of the `MetroAreaNetwork`. The service is directly provided on the metro area network. 
 * @member {String} service_metro_area_network
 */
ProductOfferingPartial.prototype['service_metro_area_network'] = undefined;

/**
 * The name of the provider providing the service. 
 * @member {String} service_provider
 */
ProductOfferingPartial.prototype['service_provider'] = undefined;

/**
 * @member {String} type
 */
ProductOfferingPartial.prototype['type'] = undefined;

/**
 * Indicates if the service can be migrated to a higher bandwidth.
 * @member {Boolean} upgrade_allowed
 */
ProductOfferingPartial.prototype['upgrade_allowed'] = undefined;

/**
 * The exchange delivers the service over a `shared` or `dedicated` NNI.
 * @member {module:model/ProductOfferingPartial.DeliveryMethodEnum} delivery_method
 */
ProductOfferingPartial.prototype['delivery_method'] = undefined;

/**
 * The service can be delivered over multiple handovers from the exchange to the `service_provider`. The `diversity` denotes the number of handovers between the exchange and the service provider. A value of two signals a redundant service.  Only one network service configuration for each `handover` and `cloud_vlan` can be created.
 * @member {Number} diversity
 */
ProductOfferingPartial.prototype['diversity'] = undefined;

/**
 * The datacenter description of the partner NNI to the service provider. 
 * @member {String} service_provider_pop
 */
ProductOfferingPartial.prototype['service_provider_pop'] = undefined;

/**
 * The service provider offers the network service for a specific region. 
 * @member {String} service_provider_region
 */
ProductOfferingPartial.prototype['service_provider_region'] = undefined;

/**
 * When the workflow is `provider_first` the subscriber creates a circuit with the cloud provider and provides a `cloud_key` for filtering the product-offerings.  If the workflow is `exchange_first` the IX will create the cloud circuit on the provider side. 
 * @member {module:model/ProductOfferingPartial.ServiceProviderWorkflowEnum} service_provider_workflow
 */
ProductOfferingPartial.prototype['service_provider_workflow'] = undefined;


ProductOfferingPartial.OneOf = ["CloudNetworkProductOfferingPartial", "ExchangeLanNetworkProductOfferingPartial", "MP2MPNetworkProductOfferingPartial", "P2MPNetworkProductOfferingPartial", "P2PNetworkProductOfferingPartial"];

export default ProductOfferingPartial;

