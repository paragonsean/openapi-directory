/**
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MetroAreaNetworkPartial from './MetroAreaNetworkPartial';

/**
 * The MetroAreaNetwork model module.
 * @module model/MetroAreaNetwork
 * @version 2.1.0
 */
class MetroAreaNetwork {
    /**
     * Constructs a new <code>MetroAreaNetwork</code>.
     * @alias module:model/MetroAreaNetwork
     * @implements module:model/MetroAreaNetworkPartial
     * @param id {String} 
     * @param metroArea {String} The id of the metro area. 
     * @param name {String} The name of the metro area network. 
     * @param pops {Array.<String>} List of pops in the metro area network.
     * @param serviceProvider {String} The service provider is operating the network. Usually the exchange. 
     */
    constructor(id, metroArea, name, pops, serviceProvider) { 
        MetroAreaNetworkPartial.initialize(this);
        MetroAreaNetwork.initialize(this, id, metroArea, name, pops, serviceProvider);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, metroArea, name, pops, serviceProvider) { 
        obj['id'] = id;
        obj['metro_area'] = metroArea;
        obj['name'] = name;
        obj['pops'] = pops;
        obj['service_provider'] = serviceProvider;
    }

    /**
     * Constructs a <code>MetroAreaNetwork</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MetroAreaNetwork} obj Optional instance to populate.
     * @return {module:model/MetroAreaNetwork} The populated <code>MetroAreaNetwork</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MetroAreaNetwork();
            MetroAreaNetworkPartial.constructFromObject(data, obj);

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('metro_area')) {
                obj['metro_area'] = ApiClient.convertToType(data['metro_area'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('pops')) {
                obj['pops'] = ApiClient.convertToType(data['pops'], ['String']);
            }
            if (data.hasOwnProperty('service_provider')) {
                obj['service_provider'] = ApiClient.convertToType(data['service_provider'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MetroAreaNetwork</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MetroAreaNetwork</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MetroAreaNetwork.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['metro_area'] && !(typeof data['metro_area'] === 'string' || data['metro_area'] instanceof String)) {
            throw new Error("Expected the field `metro_area` to be a primitive type in the JSON string but got " + data['metro_area']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['pops'])) {
            throw new Error("Expected the field `pops` to be an array in the JSON data but got " + data['pops']);
        }
        // ensure the json data is a string
        if (data['service_provider'] && !(typeof data['service_provider'] === 'string' || data['service_provider'] instanceof String)) {
            throw new Error("Expected the field `service_provider` to be a primitive type in the JSON string but got " + data['service_provider']);
        }

        return true;
    }


}

MetroAreaNetwork.RequiredProperties = ["id", "metro_area", "name", "pops", "service_provider"];

/**
 * @member {String} id
 */
MetroAreaNetwork.prototype['id'] = undefined;

/**
 * The id of the metro area. 
 * @member {String} metro_area
 */
MetroAreaNetwork.prototype['metro_area'] = undefined;

/**
 * The name of the metro area network. 
 * @member {String} name
 */
MetroAreaNetwork.prototype['name'] = undefined;

/**
 * List of pops in the metro area network.
 * @member {Array.<String>} pops
 */
MetroAreaNetwork.prototype['pops'] = undefined;

/**
 * The service provider is operating the network. Usually the exchange. 
 * @member {String} service_provider
 */
MetroAreaNetwork.prototype['service_provider'] = undefined;


// Implement MetroAreaNetworkPartial interface:
/**
 * @member {String} id
 */
MetroAreaNetworkPartial.prototype['id'] = undefined;
/**
 * The id of the metro area. 
 * @member {String} metro_area
 */
MetroAreaNetworkPartial.prototype['metro_area'] = undefined;
/**
 * The name of the metro area network. 
 * @member {String} name
 */
MetroAreaNetworkPartial.prototype['name'] = undefined;
/**
 * List of pops in the metro area network.
 * @member {Array.<String>} pops
 */
MetroAreaNetworkPartial.prototype['pops'] = undefined;
/**
 * The service provider is operating the network. Usually the exchange. 
 * @member {String} service_provider
 */
MetroAreaNetworkPartial.prototype['service_provider'] = undefined;




export default MetroAreaNetwork;

