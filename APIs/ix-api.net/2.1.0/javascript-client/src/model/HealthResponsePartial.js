/**
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The HealthResponsePartial model module.
 * @module model/HealthResponsePartial
 * @version 2.1.0
 */
class HealthResponsePartial {
    /**
     * Constructs a new <code>HealthResponsePartial</code>.
     * Health Status Response
     * @alias module:model/HealthResponsePartial
     */
    constructor() { 
        
        HealthResponsePartial.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HealthResponsePartial</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HealthResponsePartial} obj Optional instance to populate.
     * @return {module:model/HealthResponsePartial} The populated <code>HealthResponsePartial</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HealthResponsePartial();

            if (data.hasOwnProperty('checks')) {
                obj['checks'] = ApiClient.convertToType(data['checks'], {'String': {'String': 'String'}});
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('links')) {
                obj['links'] = ApiClient.convertToType(data['links'], {'String': 'String'});
            }
            if (data.hasOwnProperty('notes')) {
                obj['notes'] = ApiClient.convertToType(data['notes'], ['String']);
            }
            if (data.hasOwnProperty('output')) {
                obj['output'] = ApiClient.convertToType(data['output'], 'String');
            }
            if (data.hasOwnProperty('releaseId')) {
                obj['releaseId'] = ApiClient.convertToType(data['releaseId'], 'String');
            }
            if (data.hasOwnProperty('serviceId')) {
                obj['serviceId'] = ApiClient.convertToType(data['serviceId'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HealthResponsePartial</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HealthResponsePartial</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['notes'])) {
            throw new Error("Expected the field `notes` to be an array in the JSON data but got " + data['notes']);
        }
        // ensure the json data is a string
        if (data['output'] && !(typeof data['output'] === 'string' || data['output'] instanceof String)) {
            throw new Error("Expected the field `output` to be a primitive type in the JSON string but got " + data['output']);
        }
        // ensure the json data is a string
        if (data['releaseId'] && !(typeof data['releaseId'] === 'string' || data['releaseId'] instanceof String)) {
            throw new Error("Expected the field `releaseId` to be a primitive type in the JSON string but got " + data['releaseId']);
        }
        // ensure the json data is a string
        if (data['serviceId'] && !(typeof data['serviceId'] === 'string' || data['serviceId'] instanceof String)) {
            throw new Error("Expected the field `serviceId` to be a primitive type in the JSON string but got " + data['serviceId']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }

        return true;
    }


}



/**
 * The \"checks\" object MAY have a number of unique keys, one for each logical downstream dependency or sub-component.  Since each sub-component may be backed by several nodes with varying health statuses, these keys point to arrays of objects. In case of a single-node sub-component (or if presence of nodes is not relevant), a single-element array SHOULD be used as the value, for consistency.  Please see https://tools.ietf.org/id/draft-inadarei-api-health-check-04.html#the-checks-object for details.
 * @member {Object.<String, Object.<String, String>>} checks
 */
HealthResponsePartial.prototype['checks'] = undefined;

/**
 * A human-friendly description of the service.
 * @member {String} description
 */
HealthResponsePartial.prototype['description'] = undefined;

/**
 * Is an object containing link relations and URIs [RFC3986] for external links that MAY contain more information about the health of the endpoint.
 * @member {Object.<String, String>} links
 */
HealthResponsePartial.prototype['links'] = undefined;

/**
 * Array of notes relevant to current state of health.
 * @member {Array.<String>} notes
 */
HealthResponsePartial.prototype['notes'] = undefined;

/**
 * Raw error output, in case of \"fail\" or \"warn\" states.
 * @member {String} output
 */
HealthResponsePartial.prototype['output'] = undefined;

/**
 * Release version of the api implementation. 
 * @member {String} releaseId
 */
HealthResponsePartial.prototype['releaseId'] = undefined;

/**
 * A unique identifier of the service, in the application scope.
 * @member {String} serviceId
 */
HealthResponsePartial.prototype['serviceId'] = undefined;

/**
 * status indicates whether the service status is acceptable or not.
 * @member {module:model/HealthResponsePartial.StatusEnum} status
 */
HealthResponsePartial.prototype['status'] = undefined;

/**
 * Public version of the service. 
 * @member {String} version
 */
HealthResponsePartial.prototype['version'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
HealthResponsePartial['StatusEnum'] = {

    /**
     * value: "pass"
     * @const
     */
    "pass": "pass",

    /**
     * value: "fail"
     * @const
     */
    "fail": "fail",

    /**
     * value: "warn"
     * @const
     */
    "warn": "warn"
};



export default HealthResponsePartial;

