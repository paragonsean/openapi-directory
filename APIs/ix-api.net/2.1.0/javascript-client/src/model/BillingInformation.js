/**
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Address from './Address';
import BillingInformationPartial from './BillingInformationPartial';

/**
 * The BillingInformation model module.
 * @module model/BillingInformation
 * @version 2.1.0
 */
class BillingInformation {
    /**
     * Constructs a new <code>BillingInformation</code>.
     * @alias module:model/BillingInformation
     * @implements module:model/BillingInformationPartial
     * @param address {module:model/Address} 
     * @param name {String} Name of the organisation receiving invoices. 
     */
    constructor(address, name) { 
        BillingInformationPartial.initialize(this);
        BillingInformation.initialize(this, address, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, address, name) { 
        obj['address'] = address;
        obj['name'] = name;
    }

    /**
     * Constructs a <code>BillingInformation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BillingInformation} obj Optional instance to populate.
     * @return {module:model/BillingInformation} The populated <code>BillingInformation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BillingInformation();
            BillingInformationPartial.constructFromObject(data, obj);

            if (data.hasOwnProperty('address')) {
                obj['address'] = Address.constructFromObject(data['address']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('vat_number')) {
                obj['vat_number'] = ApiClient.convertToType(data['vat_number'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BillingInformation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BillingInformation</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BillingInformation.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `address`
        if (data['address']) { // data not null
          Address.validateJSON(data['address']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['vat_number'] && !(typeof data['vat_number'] === 'string' || data['vat_number'] instanceof String)) {
            throw new Error("Expected the field `vat_number` to be a primitive type in the JSON string but got " + data['vat_number']);
        }

        return true;
    }


}

BillingInformation.RequiredProperties = ["address", "name"];

/**
 * @member {module:model/Address} address
 */
BillingInformation.prototype['address'] = undefined;

/**
 * Name of the organisation receiving invoices. 
 * @member {String} name
 */
BillingInformation.prototype['name'] = undefined;

/**
 * Value-added tax number, required for european reverse charge system. 
 * @member {String} vat_number
 */
BillingInformation.prototype['vat_number'] = undefined;


// Implement BillingInformationPartial interface:
/**
 * @member {module:model/Address} address
 */
BillingInformationPartial.prototype['address'] = undefined;
/**
 * Name of the organisation receiving invoices. 
 * @member {String} name
 */
BillingInformationPartial.prototype['name'] = undefined;
/**
 * Value-added tax number, required for european reverse charge system. 
 * @member {String} vat_number
 */
BillingInformationPartial.prototype['vat_number'] = undefined;




export default BillingInformation;

