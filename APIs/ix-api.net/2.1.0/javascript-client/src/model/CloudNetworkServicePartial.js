/**
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Status from './Status';

/**
 * The CloudNetworkServicePartial model module.
 * @module model/CloudNetworkServicePartial
 * @version 2.1.0
 */
class CloudNetworkServicePartial {
    /**
     * Constructs a new <code>CloudNetworkServicePartial</code>.
     * Cloud Network Service
     * @alias module:model/CloudNetworkServicePartial
     * @param type {String} 
     */
    constructor(type) { 
        
        CloudNetworkServicePartial.initialize(this, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type) { 
        obj['purchase_order'] = '';
        obj['type'] = type;
    }

    /**
     * Constructs a <code>CloudNetworkServicePartial</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CloudNetworkServicePartial} obj Optional instance to populate.
     * @return {module:model/CloudNetworkServicePartial} The populated <code>CloudNetworkServicePartial</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CloudNetworkServicePartial();

            if (data.hasOwnProperty('billing_account')) {
                obj['billing_account'] = ApiClient.convertToType(data['billing_account'], 'String');
            }
            if (data.hasOwnProperty('capacity')) {
                obj['capacity'] = ApiClient.convertToType(data['capacity'], 'Number');
            }
            if (data.hasOwnProperty('charged_until')) {
                obj['charged_until'] = ApiClient.convertToType(data['charged_until'], 'Date');
            }
            if (data.hasOwnProperty('cloud_key')) {
                obj['cloud_key'] = ApiClient.convertToType(data['cloud_key'], 'String');
            }
            if (data.hasOwnProperty('consuming_account')) {
                obj['consuming_account'] = ApiClient.convertToType(data['consuming_account'], 'String');
            }
            if (data.hasOwnProperty('contract_ref')) {
                obj['contract_ref'] = ApiClient.convertToType(data['contract_ref'], 'String');
            }
            if (data.hasOwnProperty('decommission_at')) {
                obj['decommission_at'] = ApiClient.convertToType(data['decommission_at'], 'Date');
            }
            if (data.hasOwnProperty('diversity')) {
                obj['diversity'] = ApiClient.convertToType(data['diversity'], 'Number');
            }
            if (data.hasOwnProperty('external_ref')) {
                obj['external_ref'] = ApiClient.convertToType(data['external_ref'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('managing_account')) {
                obj['managing_account'] = ApiClient.convertToType(data['managing_account'], 'String');
            }
            if (data.hasOwnProperty('nsc_required_contact_roles')) {
                obj['nsc_required_contact_roles'] = ApiClient.convertToType(data['nsc_required_contact_roles'], ['String']);
            }
            if (data.hasOwnProperty('product_offering')) {
                obj['product_offering'] = ApiClient.convertToType(data['product_offering'], 'String');
            }
            if (data.hasOwnProperty('provider_ref')) {
                obj['provider_ref'] = ApiClient.convertToType(data['provider_ref'], 'String');
            }
            if (data.hasOwnProperty('purchase_order')) {
                obj['purchase_order'] = ApiClient.convertToType(data['purchase_order'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], [Status]);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CloudNetworkServicePartial</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CloudNetworkServicePartial</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CloudNetworkServicePartial.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['billing_account'] && !(typeof data['billing_account'] === 'string' || data['billing_account'] instanceof String)) {
            throw new Error("Expected the field `billing_account` to be a primitive type in the JSON string but got " + data['billing_account']);
        }
        // ensure the json data is a string
        if (data['cloud_key'] && !(typeof data['cloud_key'] === 'string' || data['cloud_key'] instanceof String)) {
            throw new Error("Expected the field `cloud_key` to be a primitive type in the JSON string but got " + data['cloud_key']);
        }
        // ensure the json data is a string
        if (data['consuming_account'] && !(typeof data['consuming_account'] === 'string' || data['consuming_account'] instanceof String)) {
            throw new Error("Expected the field `consuming_account` to be a primitive type in the JSON string but got " + data['consuming_account']);
        }
        // ensure the json data is a string
        if (data['contract_ref'] && !(typeof data['contract_ref'] === 'string' || data['contract_ref'] instanceof String)) {
            throw new Error("Expected the field `contract_ref` to be a primitive type in the JSON string but got " + data['contract_ref']);
        }
        // ensure the json data is a string
        if (data['external_ref'] && !(typeof data['external_ref'] === 'string' || data['external_ref'] instanceof String)) {
            throw new Error("Expected the field `external_ref` to be a primitive type in the JSON string but got " + data['external_ref']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['managing_account'] && !(typeof data['managing_account'] === 'string' || data['managing_account'] instanceof String)) {
            throw new Error("Expected the field `managing_account` to be a primitive type in the JSON string but got " + data['managing_account']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['nsc_required_contact_roles'])) {
            throw new Error("Expected the field `nsc_required_contact_roles` to be an array in the JSON data but got " + data['nsc_required_contact_roles']);
        }
        // ensure the json data is a string
        if (data['product_offering'] && !(typeof data['product_offering'] === 'string' || data['product_offering'] instanceof String)) {
            throw new Error("Expected the field `product_offering` to be a primitive type in the JSON string but got " + data['product_offering']);
        }
        // ensure the json data is a string
        if (data['provider_ref'] && !(typeof data['provider_ref'] === 'string' || data['provider_ref'] instanceof String)) {
            throw new Error("Expected the field `provider_ref` to be a primitive type in the JSON string but got " + data['provider_ref']);
        }
        // ensure the json data is a string
        if (data['purchase_order'] && !(typeof data['purchase_order'] === 'string' || data['purchase_order'] instanceof String)) {
            throw new Error("Expected the field `purchase_order` to be a primitive type in the JSON string but got " + data['purchase_order']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        if (data['status']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['status'])) {
                throw new Error("Expected the field `status` to be an array in the JSON data but got " + data['status']);
            }
            // validate the optional field `status` (array)
            for (const item of data['status']) {
                Status.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

CloudNetworkServicePartial.RequiredProperties = ["type"];

/**
 * An account requires billing_information to be used as a `billing_account`.
 * @member {String} billing_account
 */
CloudNetworkServicePartial.prototype['billing_account'] = undefined;

/**
 * The capacity of the service in Mbps. When null, the maximum capacity will be used.
 * @member {Number} capacity
 */
CloudNetworkServicePartial.prototype['capacity'] = undefined;

/**
 * Your obligation to pay for the service will end on this date. Typically `≥ decommission_at`.  This field is only used when the state is `DECOMMISSION_REQUESTED` or `DECOMMISSIONED`.
 * @member {Date} charged_until
 */
CloudNetworkServicePartial.prototype['charged_until'] = undefined;

/**
 * @member {String} cloud_key
 */
CloudNetworkServicePartial.prototype['cloud_key'] = undefined;

/**
 * The `id` of the account consuming a service.  Used to be `owning_customer`. 
 * @member {String} consuming_account
 */
CloudNetworkServicePartial.prototype['consuming_account'] = undefined;

/**
 * A reference to a contract. If no specific contract is used, a default MAY be chosen by the implementer. 
 * @member {String} contract_ref
 */
CloudNetworkServicePartial.prototype['contract_ref'] = undefined;

/**
 * The service will be decommissioned on this date.  This field is only used when the state is `DECOMMISSION_REQUESTED` or `DECOMMISSIONED`.
 * @member {Date} decommission_at
 */
CloudNetworkServicePartial.prototype['decommission_at'] = undefined;

/**
 * Same value as the corresponding `ProductOffering`.  The service can be delivered over multiple handovers from the exchange to the `service_provider`.  The `diversity` denotes the number of handovers between the exchange and the service provider. A value of two signals a redundant service.  Only one network service configuration for each `handover` and `cloud_vlan` can be created.
 * @member {Number} diversity
 */
CloudNetworkServicePartial.prototype['diversity'] = undefined;

/**
 * Reference field, free to use for the API user.
 * @member {String} external_ref
 */
CloudNetworkServicePartial.prototype['external_ref'] = undefined;

/**
 * @member {String} id
 */
CloudNetworkServicePartial.prototype['id'] = undefined;

/**
 * The `id` of the account responsible for managing the service via the API. A manager can read and update the state of entities. 
 * @member {String} managing_account
 */
CloudNetworkServicePartial.prototype['managing_account'] = undefined;

/**
 * The configuration will require at least one of each of the specified roles assigned to contacts.  The `RoleAssignment` is associated through the `role_assignments` list property of the network service configuration.
 * @member {Array.<String>} nsc_required_contact_roles
 */
CloudNetworkServicePartial.prototype['nsc_required_contact_roles'] = undefined;

/**
 * @member {String} product_offering
 */
CloudNetworkServicePartial.prototype['product_offering'] = undefined;

/**
 * For a cloud network service with the exchange first workflow, the `provider_ref` will be a reference to a resource of the cloud provider. (E.g. the UUID of a virtual circuit.)  The `provider_ref` is managed by the exchange and its meaning may vary between different cloud services. 
 * @member {String} provider_ref
 */
CloudNetworkServicePartial.prototype['provider_ref'] = undefined;

/**
 * Purchase Order ID which will be displayed on the invoice. 
 * @member {String} purchase_order
 * @default ''
 */
CloudNetworkServicePartial.prototype['purchase_order'] = '';

/**
 * @member {module:model/CloudNetworkServicePartial.StateEnum} state
 */
CloudNetworkServicePartial.prototype['state'] = undefined;

/**
 * @member {Array.<module:model/Status>} status
 */
CloudNetworkServicePartial.prototype['status'] = undefined;

/**
 * @member {String} type
 */
CloudNetworkServicePartial.prototype['type'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
CloudNetworkServicePartial['StateEnum'] = {

    /**
     * value: "requested"
     * @const
     */
    "requested": "requested",

    /**
     * value: "allocated"
     * @const
     */
    "allocated": "allocated",

    /**
     * value: "testing"
     * @const
     */
    "testing": "testing",

    /**
     * value: "production"
     * @const
     */
    "production": "production",

    /**
     * value: "production_change_pending"
     * @const
     */
    "production_change_pending": "production_change_pending",

    /**
     * value: "decommission_requested"
     * @const
     */
    "decommission_requested": "decommission_requested",

    /**
     * value: "decommissioned"
     * @const
     */
    "decommissioned": "decommissioned",

    /**
     * value: "archived"
     * @const
     */
    "archived": "archived",

    /**
     * value: "error"
     * @const
     */
    "error": "error",

    /**
     * value: "operator"
     * @const
     */
    "operator": "operator",

    /**
     * value: "scheduled"
     * @const
     */
    "scheduled": "scheduled"
};



export default CloudNetworkServicePartial;

