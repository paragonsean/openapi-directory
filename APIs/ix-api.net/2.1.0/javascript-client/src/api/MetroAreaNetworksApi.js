/**
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AccountsList400Response from '../model/AccountsList400Response';
import AccountsList401Response from '../model/AccountsList401Response';
import AccountsList403Response from '../model/AccountsList403Response';
import AccountsRead404Response from '../model/AccountsRead404Response';
import MetroAreaNetwork from '../model/MetroAreaNetwork';

/**
* MetroAreaNetworks service.
* @module api/MetroAreaNetworksApi
* @version 2.1.0
*/
export default class MetroAreaNetworksApi {

    /**
    * Constructs a new MetroAreaNetworksApi. 
    * @alias module:api/MetroAreaNetworksApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the metroAreaNetworksList operation.
     * @callback module:api/MetroAreaNetworksApi~metroAreaNetworksListCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/MetroAreaNetwork>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all MetroAreaNetworks
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} [id] Filter by id
     * @param {String} [name] Filter by name
     * @param {String} [metroArea] Filter by metro_area
     * @param {String} [serviceProvider] Filter by service_provider
     * @param {module:api/MetroAreaNetworksApi~metroAreaNetworksListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/MetroAreaNetwork>}
     */
    metroAreaNetworksList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'id': this.apiClient.buildCollectionParam(opts['id'], 'csv'),
        'name': opts['name'],
        'metro_area': opts['metroArea'],
        'service_provider': opts['serviceProvider']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [MetroAreaNetwork];
      return this.apiClient.callApi(
        '/metro-area-networks', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the metroAreaNetworksRead operation.
     * @callback module:api/MetroAreaNetworksApi~metroAreaNetworksReadCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MetroAreaNetwork} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a MetroAreaNetwork
     * @param {String} id Get by id
     * @param {module:api/MetroAreaNetworksApi~metroAreaNetworksReadCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MetroAreaNetwork}
     */
    metroAreaNetworksRead(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling metroAreaNetworksRead");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MetroAreaNetwork;
      return this.apiClient.callApi(
        '/metro-area-networks/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
