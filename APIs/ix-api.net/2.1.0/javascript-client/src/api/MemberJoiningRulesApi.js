/**
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AccountsList400Response from '../model/AccountsList400Response';
import AccountsList401Response from '../model/AccountsList401Response';
import AccountsList403Response from '../model/AccountsList403Response';
import AccountsRead404Response from '../model/AccountsRead404Response';
import ContactsDestroy400Response from '../model/ContactsDestroy400Response';
import MemberJoiningRule from '../model/MemberJoiningRule';
import MemberJoiningRuleRequest from '../model/MemberJoiningRuleRequest';
import MemberJoiningRuleUpdate from '../model/MemberJoiningRuleUpdate';
import MemberJoiningRuleUpdatePartial from '../model/MemberJoiningRuleUpdatePartial';

/**
* MemberJoiningRules service.
* @module api/MemberJoiningRulesApi
* @version 2.1.0
*/
export default class MemberJoiningRulesApi {

    /**
    * Constructs a new MemberJoiningRulesApi. 
    * @alias module:api/MemberJoiningRulesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the memberJoiningRulesCreate operation.
     * @callback module:api/MemberJoiningRulesApi~memberJoiningRulesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MemberJoiningRule} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a member joining rule
     * @param {Object} opts Optional parameters
     * @param {module:model/MemberJoiningRuleRequest} [memberJoiningRuleRequest] Polymorphic Member Joining Rule Request
     * @param {module:api/MemberJoiningRulesApi~memberJoiningRulesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MemberJoiningRule}
     */
    memberJoiningRulesCreate(opts, callback) {
      opts = opts || {};
      let postBody = opts['memberJoiningRuleRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = MemberJoiningRule;
      return this.apiClient.callApi(
        '/member-joining-rules', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the memberJoiningRulesDestroy operation.
     * @callback module:api/MemberJoiningRulesApi~memberJoiningRulesDestroyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MemberJoiningRule} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a joining rule
     * @param {String} id Get by id
     * @param {module:api/MemberJoiningRulesApi~memberJoiningRulesDestroyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MemberJoiningRule}
     */
    memberJoiningRulesDestroy(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling memberJoiningRulesDestroy");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MemberJoiningRule;
      return this.apiClient.callApi(
        '/member-joining-rules/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the memberJoiningRulesList operation.
     * @callback module:api/MemberJoiningRulesApi~memberJoiningRulesListCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/MemberJoiningRule>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of joining rules
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} [id] Filter by id
     * @param {String} [networkService] Filter by network_service
     * @param {module:api/MemberJoiningRulesApi~memberJoiningRulesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/MemberJoiningRule>}
     */
    memberJoiningRulesList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'id': this.apiClient.buildCollectionParam(opts['id'], 'csv'),
        'network_service': opts['networkService']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [MemberJoiningRule];
      return this.apiClient.callApi(
        '/member-joining-rules', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the memberJoiningRulesPartialUpdate operation.
     * @callback module:api/MemberJoiningRulesApi~memberJoiningRulesPartialUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MemberJoiningRule} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Partially update a joining rule
     * @param {String} id Get by id
     * @param {Object} opts Optional parameters
     * @param {module:model/MemberJoiningRuleUpdatePartial} [memberJoiningRuleUpdatePartial] Polymorphic Member Joining Rule Update
     * @param {module:api/MemberJoiningRulesApi~memberJoiningRulesPartialUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MemberJoiningRule}
     */
    memberJoiningRulesPartialUpdate(id, opts, callback) {
      opts = opts || {};
      let postBody = opts['memberJoiningRuleUpdatePartial'];
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling memberJoiningRulesPartialUpdate");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/merge-patch+json'];
      let accepts = ['application/json'];
      let returnType = MemberJoiningRule;
      return this.apiClient.callApi(
        '/member-joining-rules/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the memberJoiningRulesRead operation.
     * @callback module:api/MemberJoiningRulesApi~memberJoiningRulesReadCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MemberJoiningRule} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a single rule
     * @param {String} id Get by id
     * @param {module:api/MemberJoiningRulesApi~memberJoiningRulesReadCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MemberJoiningRule}
     */
    memberJoiningRulesRead(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling memberJoiningRulesRead");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MemberJoiningRule;
      return this.apiClient.callApi(
        '/member-joining-rules/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the memberJoiningRulesUpdate operation.
     * @callback module:api/MemberJoiningRulesApi~memberJoiningRulesUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MemberJoiningRule} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a joining rule
     * @param {String} id Get by id
     * @param {Object} opts Optional parameters
     * @param {module:model/MemberJoiningRuleUpdate} [memberJoiningRuleUpdate] Polymorphic Member Joining Rule Update
     * @param {module:api/MemberJoiningRulesApi~memberJoiningRulesUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MemberJoiningRule}
     */
    memberJoiningRulesUpdate(id, opts, callback) {
      opts = opts || {};
      let postBody = opts['memberJoiningRuleUpdate'];
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling memberJoiningRulesUpdate");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = MemberJoiningRule;
      return this.apiClient.callApi(
        '/member-joining-rules/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
