/**
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.IxApi);
  }
}(this, function(expect, IxApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new IxApi.MP2MPNetworkServicePartial();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MP2MPNetworkServicePartial', function() {
    it('should create an instance of MP2MPNetworkServicePartial', function() {
      // uncomment below and update the code to test MP2MPNetworkServicePartial
      //var instance = new IxApi.MP2MPNetworkServicePartial();
      //expect(instance).to.be.a(IxApi.MP2MPNetworkServicePartial);
    });

    it('should have the property billingAccount (base name: "billing_account")', function() {
      // uncomment below and update the code to test the property billingAccount
      //var instance = new IxApi.MP2MPNetworkServicePartial();
      //expect(instance).to.be();
    });

    it('should have the property chargedUntil (base name: "charged_until")', function() {
      // uncomment below and update the code to test the property chargedUntil
      //var instance = new IxApi.MP2MPNetworkServicePartial();
      //expect(instance).to.be();
    });

    it('should have the property consumingAccount (base name: "consuming_account")', function() {
      // uncomment below and update the code to test the property consumingAccount
      //var instance = new IxApi.MP2MPNetworkServicePartial();
      //expect(instance).to.be();
    });

    it('should have the property contractRef (base name: "contract_ref")', function() {
      // uncomment below and update the code to test the property contractRef
      //var instance = new IxApi.MP2MPNetworkServicePartial();
      //expect(instance).to.be();
    });

    it('should have the property decommissionAt (base name: "decommission_at")', function() {
      // uncomment below and update the code to test the property decommissionAt
      //var instance = new IxApi.MP2MPNetworkServicePartial();
      //expect(instance).to.be();
    });

    it('should have the property externalRef (base name: "external_ref")', function() {
      // uncomment below and update the code to test the property externalRef
      //var instance = new IxApi.MP2MPNetworkServicePartial();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new IxApi.MP2MPNetworkServicePartial();
      //expect(instance).to.be();
    });

    it('should have the property managingAccount (base name: "managing_account")', function() {
      // uncomment below and update the code to test the property managingAccount
      //var instance = new IxApi.MP2MPNetworkServicePartial();
      //expect(instance).to.be();
    });

    it('should have the property memberJoiningRules (base name: "member_joining_rules")', function() {
      // uncomment below and update the code to test the property memberJoiningRules
      //var instance = new IxApi.MP2MPNetworkServicePartial();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new IxApi.MP2MPNetworkServicePartial();
      //expect(instance).to.be();
    });

    it('should have the property networkFeatures (base name: "network_features")', function() {
      // uncomment below and update the code to test the property networkFeatures
      //var instance = new IxApi.MP2MPNetworkServicePartial();
      //expect(instance).to.be();
    });

    it('should have the property nscRequiredContactRoles (base name: "nsc_required_contact_roles")', function() {
      // uncomment below and update the code to test the property nscRequiredContactRoles
      //var instance = new IxApi.MP2MPNetworkServicePartial();
      //expect(instance).to.be();
    });

    it('should have the property productOffering (base name: "product_offering")', function() {
      // uncomment below and update the code to test the property productOffering
      //var instance = new IxApi.MP2MPNetworkServicePartial();
      //expect(instance).to.be();
    });

    it('should have the property _public (base name: "public")', function() {
      // uncomment below and update the code to test the property _public
      //var instance = new IxApi.MP2MPNetworkServicePartial();
      //expect(instance).to.be();
    });

    it('should have the property purchaseOrder (base name: "purchase_order")', function() {
      // uncomment below and update the code to test the property purchaseOrder
      //var instance = new IxApi.MP2MPNetworkServicePartial();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new IxApi.MP2MPNetworkServicePartial();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new IxApi.MP2MPNetworkServicePartial();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new IxApi.MP2MPNetworkServicePartial();
      //expect(instance).to.be();
    });

  });

}));
