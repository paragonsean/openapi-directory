/**
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.IxApi);
  }
}(this, function(expect, IxApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new IxApi.NetworkServicesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('NetworkServicesApi', function() {
    describe('networkServiceCancellationPolicyRead', function() {
      it('should call networkServiceCancellationPolicyRead successfully', function(done) {
        //uncomment below and update the code to test networkServiceCancellationPolicyRead
        //instance.networkServiceCancellationPolicyRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkServiceChangeRequestCreate', function() {
      it('should call networkServiceChangeRequestCreate successfully', function(done) {
        //uncomment below and update the code to test networkServiceChangeRequestCreate
        //instance.networkServiceChangeRequestCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkServiceChangeRequestDestroy', function() {
      it('should call networkServiceChangeRequestDestroy successfully', function(done) {
        //uncomment below and update the code to test networkServiceChangeRequestDestroy
        //instance.networkServiceChangeRequestDestroy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkServiceChangeRequestRead', function() {
      it('should call networkServiceChangeRequestRead successfully', function(done) {
        //uncomment below and update the code to test networkServiceChangeRequestRead
        //instance.networkServiceChangeRequestRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkServicesCreate', function() {
      it('should call networkServicesCreate successfully', function(done) {
        //uncomment below and update the code to test networkServicesCreate
        //instance.networkServicesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkServicesDestroy', function() {
      it('should call networkServicesDestroy successfully', function(done) {
        //uncomment below and update the code to test networkServicesDestroy
        //instance.networkServicesDestroy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkServicesList', function() {
      it('should call networkServicesList successfully', function(done) {
        //uncomment below and update the code to test networkServicesList
        //instance.networkServicesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkServicesPartialUpdate', function() {
      it('should call networkServicesPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test networkServicesPartialUpdate
        //instance.networkServicesPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkServicesRead', function() {
      it('should call networkServicesRead successfully', function(done) {
        //uncomment below and update the code to test networkServicesRead
        //instance.networkServicesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('networkServicesUpdate', function() {
      it('should call networkServicesUpdate successfully', function(done) {
        //uncomment below and update the code to test networkServicesUpdate
        //instance.networkServicesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
