/*
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AccountsList400Response;
import org.openapitools.client.model.AccountsList401Response;
import org.openapitools.client.model.AccountsList403Response;
import org.openapitools.client.model.AccountsRead404Response;
import org.openapitools.client.model.ContactsDestroy400Response;
import org.openapitools.client.model.RoleAssignment;
import org.openapitools.client.model.RoleAssignmentRequest;
import org.openapitools.client.model.RoleAssignmentsCreate400Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RoleAssignmentsApi
 */
@Disabled
public class RoleAssignmentsApiTest {

    private final RoleAssignmentsApi api = new RoleAssignmentsApi();

    /**
     * Assign a &#x60;Role&#x60; to a &#x60;Contact&#x60;.  The contact needs to have all fields filled, which the role requires. If this is not the case a &#x60;400&#x60; &#x60;UnableToFulfill&#x60; will be returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void roleAssignmentsCreateTest() throws ApiException {
        RoleAssignmentRequest roleAssignmentRequest = null;
        RoleAssignment response = api.roleAssignmentsCreate(roleAssignmentRequest);
        // TODO: test validations
    }

    /**
     * Remove a role assignment from a contact.  If the contact is still in use with a given role required, this will yield an &#x60;UnableToFulfill&#x60; error.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void roleAssignmentsDestroyTest() throws ApiException {
        String assignmentId = null;
        RoleAssignment response = api.roleAssignmentsDestroy(assignmentId);
        // TODO: test validations
    }

    /**
     * List all role assignments for a contact.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void roleAssignmentsListTest() throws ApiException {
        List<String> id = null;
        String contact = null;
        String role = null;
        List<RoleAssignment> response = api.roleAssignmentsList(id, contact, role);
        // TODO: test validations
    }

    /**
     * Get a role assignment for a contact.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void roleAssignmentsReadTest() throws ApiException {
        String assignmentId = null;
        RoleAssignment response = api.roleAssignmentsRead(assignmentId);
        // TODO: test validations
    }

}
