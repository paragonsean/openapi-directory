/*
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AccountsList400Response;
import org.openapitools.client.model.AccountsList401Response;
import org.openapitools.client.model.AccountsList403Response;
import org.openapitools.client.model.AccountsRead404Response;
import org.openapitools.client.model.ContactsDestroy400Response;
import org.openapitools.client.model.NetworkFeatureConfig;
import org.openapitools.client.model.NetworkFeatureConfigRequest;
import org.openapitools.client.model.NetworkFeatureConfigUpdate;
import org.openapitools.client.model.NetworkFeatureConfigUpdatePartial;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NetworkFeatureConfigsApi
 */
@Disabled
public class NetworkFeatureConfigsApiTest {

    private final NetworkFeatureConfigsApi api = new NetworkFeatureConfigsApi();

    /**
     * Create a configuration for a &#x60;NetworkFeature&#x60; defined in the &#x60;NetworkFeature&#x60;s collection.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void networkFeatureConfigsCreateTest() throws ApiException {
        NetworkFeatureConfigRequest networkFeatureConfigRequest = null;
        NetworkFeatureConfig response = api.networkFeatureConfigsCreate(networkFeatureConfigRequest);
        // TODO: test validations
    }

    /**
     * Remove a network feature config.  The network feature config will be marked as &#x60;decommission_requested&#x60;. Decommissioning a network feature config will not cascade to related services or service configs.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void networkFeatureConfigsDestroyTest() throws ApiException {
        String id = null;
        NetworkFeatureConfig response = api.networkFeatureConfigsDestroy(id);
        // TODO: test validations
    }

    /**
     * Get all network feature configs.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void networkFeatureConfigsListTest() throws ApiException {
        List<String> id = null;
        String state = null;
        String stateIsNot = null;
        String managingAccount = null;
        String consumingAccount = null;
        String externalRef = null;
        String type = null;
        String serviceConfig = null;
        String networkFeature = null;
        List<NetworkFeatureConfig> response = api.networkFeatureConfigsList(id, state, stateIsNot, managingAccount, consumingAccount, externalRef, type, serviceConfig, networkFeature);
        // TODO: test validations
    }

    /**
     * Update parts of a network feature configuration
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void networkFeatureConfigsPartialUpdateTest() throws ApiException {
        String id = null;
        NetworkFeatureConfigUpdatePartial networkFeatureConfigUpdatePartial = null;
        NetworkFeatureConfig response = api.networkFeatureConfigsPartialUpdate(id, networkFeatureConfigUpdatePartial);
        // TODO: test validations
    }

    /**
     * Get a single network feature config.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void networkFeatureConfigsReadTest() throws ApiException {
        String id = null;
        NetworkFeatureConfig response = api.networkFeatureConfigsRead(id);
        // TODO: test validations
    }

    /**
     * Update a network feature configuration
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void networkFeatureConfigsUpdateTest() throws ApiException {
        String id = null;
        NetworkFeatureConfigUpdate networkFeatureConfigUpdate = null;
        NetworkFeatureConfig response = api.networkFeatureConfigsUpdate(id, networkFeatureConfigUpdate);
        // TODO: test validations
    }

}
