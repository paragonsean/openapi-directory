/*
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AccountsList400Response;
import org.openapitools.client.model.AccountsList401Response;
import org.openapitools.client.model.AccountsList403Response;
import org.openapitools.client.model.AccountsRead404Response;
import org.openapitools.client.model.ProductOffering;
import org.openapitools.client.model.ProductOfferingPartial;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProductOfferingsApi
 */
@Disabled
public class ProductOfferingsApiTest {

    private final ProductOfferingsApi api = new ProductOfferingsApi();

    /**
     * List all (filtered) products-offerings available on the platform
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productOfferingsListTest() throws ApiException {
        List<String> id = null;
        String type = null;
        String name = null;
        String handoverMetroArea = null;
        String handoverMetroAreaNetwork = null;
        String serviceMetroArea = null;
        String serviceMetroAreaNetwork = null;
        String serviceProvider = null;
        String downgradeAllowed = null;
        String upgradeAllowed = null;
        Integer bandwidth = null;
        Integer physicalPortSpeed = null;
        String serviceProviderRegion = null;
        String serviceProviderPop = null;
        String deliveryMethod = null;
        String cloudKey = null;
        String fields = null;
        List<ProductOfferingPartial> response = api.productOfferingsList(id, type, name, handoverMetroArea, handoverMetroAreaNetwork, serviceMetroArea, serviceMetroAreaNetwork, serviceProvider, downgradeAllowed, upgradeAllowed, bandwidth, physicalPortSpeed, serviceProviderRegion, serviceProviderPop, deliveryMethod, cloudKey, fields);
        // TODO: test validations
    }

    /**
     * Get a single products-offering by id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productOfferingsReadTest() throws ApiException {
        String id = null;
        ProductOffering response = api.productOfferingsRead(id);
        // TODO: test validations
    }

}
