/*
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for FacilityPartial
 */
public class FacilityPartialTest {
    private final FacilityPartial model = new FacilityPartial();

    /**
     * Model tests for FacilityPartial
     */
    @Test
    public void testFacilityPartial() {
        // TODO: test FacilityPartial
    }

    /**
     * Test the property 'addressCountry'
     */
    @Test
    public void addressCountryTest() {
        // TODO: test addressCountry
    }

    /**
     * Test the property 'addressLocality'
     */
    @Test
    public void addressLocalityTest() {
        // TODO: test addressLocality
    }

    /**
     * Test the property 'addressRegion'
     */
    @Test
    public void addressRegionTest() {
        // TODO: test addressRegion
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'metroArea'
     */
    @Test
    public void metroAreaTest() {
        // TODO: test metroArea
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'organisationName'
     */
    @Test
    public void organisationNameTest() {
        // TODO: test organisationName
    }

    /**
     * Test the property 'peeringdbFacilityId'
     */
    @Test
    public void peeringdbFacilityIdTest() {
        // TODO: test peeringdbFacilityId
    }

    /**
     * Test the property 'pops'
     */
    @Test
    public void popsTest() {
        // TODO: test pops
    }

    /**
     * Test the property 'postalCode'
     */
    @Test
    public void postalCodeTest() {
        // TODO: test postalCode
    }

    /**
     * Test the property 'streetAddress'
     */
    @Test
    public void streetAddressTest() {
        // TODO: test streetAddress
    }

}
