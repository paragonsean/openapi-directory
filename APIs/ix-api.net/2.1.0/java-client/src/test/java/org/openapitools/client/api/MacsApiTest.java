/*
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AccountsList400Response;
import org.openapitools.client.model.AccountsList401Response;
import org.openapitools.client.model.AccountsList403Response;
import org.openapitools.client.model.AccountsRead404Response;
import org.openapitools.client.model.ContactsDestroy400Response;
import org.openapitools.client.model.MacAddress;
import org.openapitools.client.model.MacAddressRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MacsApi
 */
@Disabled
public class MacsApiTest {

    private final MacsApi api = new MacsApi();

    /**
     * Register a mac address.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void macsCreateTest() throws ApiException {
        MacAddressRequest macAddressRequest = null;
        MacAddress response = api.macsCreate(macAddressRequest);
        // TODO: test validations
    }

    /**
     * Remove a mac address.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void macsDestroyTest() throws ApiException {
        String id = null;
        MacAddress response = api.macsDestroy(id);
        // TODO: test validations
    }

    /**
     * List all mac addresses managed by the authorized customer.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void macsListTest() throws ApiException {
        List<String> id = null;
        String managingAccount = null;
        String consumingAccount = null;
        String externalRef = null;
        String networkServiceConfig = null;
        String address = null;
        String assignedAt = null;
        String validNotBefore = null;
        String validNotAfter = null;
        List<MacAddress> response = api.macsList(id, managingAccount, consumingAccount, externalRef, networkServiceConfig, address, assignedAt, validNotBefore, validNotAfter);
        // TODO: test validations
    }

    /**
     * Get a single mac address by it&#39;s id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void macsReadTest() throws ApiException {
        String id = null;
        MacAddress response = api.macsRead(id);
        // TODO: test validations
    }

}
