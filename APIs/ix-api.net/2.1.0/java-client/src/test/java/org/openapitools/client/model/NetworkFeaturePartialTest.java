/*
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.IXPSpecificFeatureFlag;
import org.openapitools.client.model.RouteServerNetworkFeaturePartial;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for NetworkFeaturePartial
 */
public class NetworkFeaturePartialTest {
    private final NetworkFeaturePartial model = new NetworkFeaturePartial();

    /**
     * Model tests for NetworkFeaturePartial
     */
    @Test
    public void testNetworkFeaturePartial() {
        // TODO: test NetworkFeaturePartial
    }

    /**
     * Test the property 'addressFamilies'
     */
    @Test
    public void addressFamiliesTest() {
        // TODO: test addressFamilies
    }

    /**
     * Test the property 'asn'
     */
    @Test
    public void asnTest() {
        // TODO: test asn
    }

    /**
     * Test the property 'availableBgpSessionTypes'
     */
    @Test
    public void availableBgpSessionTypesTest() {
        // TODO: test availableBgpSessionTypes
    }

    /**
     * Test the property 'flags'
     */
    @Test
    public void flagsTest() {
        // TODO: test flags
    }

    /**
     * Test the property 'fqdn'
     */
    @Test
    public void fqdnTest() {
        // TODO: test fqdn
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'ipV4'
     */
    @Test
    public void ipV4Test() {
        // TODO: test ipV4
    }

    /**
     * Test the property 'ipV6'
     */
    @Test
    public void ipV6Test() {
        // TODO: test ipV6
    }

    /**
     * Test the property 'lookingGlassUrl'
     */
    @Test
    public void lookingGlassUrlTest() {
        // TODO: test lookingGlassUrl
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'networkService'
     */
    @Test
    public void networkServiceTest() {
        // TODO: test networkService
    }

    /**
     * Test the property 'nfcRequiredContactRoles'
     */
    @Test
    public void nfcRequiredContactRolesTest() {
        // TODO: test nfcRequiredContactRoles
    }

    /**
     * Test the property 'required'
     */
    @Test
    public void requiredTest() {
        // TODO: test required
    }

    /**
     * Test the property 'sessionMode'
     */
    @Test
    public void sessionModeTest() {
        // TODO: test sessionMode
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

}
