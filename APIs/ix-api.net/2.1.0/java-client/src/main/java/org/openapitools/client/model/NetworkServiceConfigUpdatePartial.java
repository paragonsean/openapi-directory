/*
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CloudNetworkServiceConfigUpdatePartial;
import org.openapitools.client.model.ExchangeLanNetworkServiceConfigUpdatePartial;
import org.openapitools.client.model.MP2MPNetworkServiceConfigRequestPartial;
import org.openapitools.client.model.P2MPNetworkServiceConfigRequestPartial;
import org.openapitools.client.model.P2PNetworkServiceConfigUpdatePartial;
import org.openapitools.client.model.VlanConfig;
import org.openapitools.jackson.nullable.JsonNullable;



import java.io.IOException;
import java.lang.reflect.Type;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.JsonPrimitive;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonSerializationContext;
import com.google.gson.JsonSerializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonArray;
import com.google.gson.JsonParseException;

import org.openapitools.client.JSON;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:31:06.601153-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class NetworkServiceConfigUpdatePartial extends AbstractOpenApiSchema {
    private static final Logger log = Logger.getLogger(NetworkServiceConfigUpdatePartial.class.getName());

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!NetworkServiceConfigUpdatePartial.class.isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes 'NetworkServiceConfigUpdatePartial' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<ExchangeLanNetworkServiceConfigUpdatePartial> adapterExchangeLanNetworkServiceConfigUpdatePartial = gson.getDelegateAdapter(this, TypeToken.get(ExchangeLanNetworkServiceConfigUpdatePartial.class));
            final TypeAdapter<P2PNetworkServiceConfigUpdatePartial> adapterP2PNetworkServiceConfigUpdatePartial = gson.getDelegateAdapter(this, TypeToken.get(P2PNetworkServiceConfigUpdatePartial.class));
            final TypeAdapter<P2MPNetworkServiceConfigRequestPartial> adapterP2MPNetworkServiceConfigRequestPartial = gson.getDelegateAdapter(this, TypeToken.get(P2MPNetworkServiceConfigRequestPartial.class));
            final TypeAdapter<MP2MPNetworkServiceConfigRequestPartial> adapterMP2MPNetworkServiceConfigRequestPartial = gson.getDelegateAdapter(this, TypeToken.get(MP2MPNetworkServiceConfigRequestPartial.class));
            final TypeAdapter<CloudNetworkServiceConfigUpdatePartial> adapterCloudNetworkServiceConfigUpdatePartial = gson.getDelegateAdapter(this, TypeToken.get(CloudNetworkServiceConfigUpdatePartial.class));

            return (TypeAdapter<T>) new TypeAdapter<NetworkServiceConfigUpdatePartial>() {
                @Override
                public void write(JsonWriter out, NetworkServiceConfigUpdatePartial value) throws IOException {
                    if (value == null || value.getActualInstance() == null) {
                        elementAdapter.write(out, null);
                        return;
                    }

                    // check if the actual instance is of the type `ExchangeLanNetworkServiceConfigUpdatePartial`
                    if (value.getActualInstance() instanceof ExchangeLanNetworkServiceConfigUpdatePartial) {
                        JsonElement element = adapterExchangeLanNetworkServiceConfigUpdatePartial.toJsonTree((ExchangeLanNetworkServiceConfigUpdatePartial)value.getActualInstance());
                        elementAdapter.write(out, element);
                        return;
                    }
                    // check if the actual instance is of the type `P2PNetworkServiceConfigUpdatePartial`
                    if (value.getActualInstance() instanceof P2PNetworkServiceConfigUpdatePartial) {
                        JsonElement element = adapterP2PNetworkServiceConfigUpdatePartial.toJsonTree((P2PNetworkServiceConfigUpdatePartial)value.getActualInstance());
                        elementAdapter.write(out, element);
                        return;
                    }
                    // check if the actual instance is of the type `P2MPNetworkServiceConfigRequestPartial`
                    if (value.getActualInstance() instanceof P2MPNetworkServiceConfigRequestPartial) {
                        JsonElement element = adapterP2MPNetworkServiceConfigRequestPartial.toJsonTree((P2MPNetworkServiceConfigRequestPartial)value.getActualInstance());
                        elementAdapter.write(out, element);
                        return;
                    }
                    // check if the actual instance is of the type `MP2MPNetworkServiceConfigRequestPartial`
                    if (value.getActualInstance() instanceof MP2MPNetworkServiceConfigRequestPartial) {
                        JsonElement element = adapterMP2MPNetworkServiceConfigRequestPartial.toJsonTree((MP2MPNetworkServiceConfigRequestPartial)value.getActualInstance());
                        elementAdapter.write(out, element);
                        return;
                    }
                    // check if the actual instance is of the type `CloudNetworkServiceConfigUpdatePartial`
                    if (value.getActualInstance() instanceof CloudNetworkServiceConfigUpdatePartial) {
                        JsonElement element = adapterCloudNetworkServiceConfigUpdatePartial.toJsonTree((CloudNetworkServiceConfigUpdatePartial)value.getActualInstance());
                        elementAdapter.write(out, element);
                        return;
                    }
                    throw new IOException("Failed to serialize as the type doesn't match oneOf schemas: CloudNetworkServiceConfigUpdatePartial, ExchangeLanNetworkServiceConfigUpdatePartial, MP2MPNetworkServiceConfigRequestPartial, P2MPNetworkServiceConfigRequestPartial, P2PNetworkServiceConfigUpdatePartial");
                }

                @Override
                public NetworkServiceConfigUpdatePartial read(JsonReader in) throws IOException {
                    Object deserialized = null;
                    JsonElement jsonElement = elementAdapter.read(in);

                    int match = 0;
                    ArrayList<String> errorMessages = new ArrayList<>();
                    TypeAdapter actualAdapter = elementAdapter;

                    // deserialize ExchangeLanNetworkServiceConfigUpdatePartial
                    try {
                        // validate the JSON object to see if any exception is thrown
                        ExchangeLanNetworkServiceConfigUpdatePartial.validateJsonElement(jsonElement);
                        actualAdapter = adapterExchangeLanNetworkServiceConfigUpdatePartial;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'ExchangeLanNetworkServiceConfigUpdatePartial'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for ExchangeLanNetworkServiceConfigUpdatePartial failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'ExchangeLanNetworkServiceConfigUpdatePartial'", e);
                    }
                    // deserialize P2PNetworkServiceConfigUpdatePartial
                    try {
                        // validate the JSON object to see if any exception is thrown
                        P2PNetworkServiceConfigUpdatePartial.validateJsonElement(jsonElement);
                        actualAdapter = adapterP2PNetworkServiceConfigUpdatePartial;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'P2PNetworkServiceConfigUpdatePartial'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for P2PNetworkServiceConfigUpdatePartial failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'P2PNetworkServiceConfigUpdatePartial'", e);
                    }
                    // deserialize P2MPNetworkServiceConfigRequestPartial
                    try {
                        // validate the JSON object to see if any exception is thrown
                        P2MPNetworkServiceConfigRequestPartial.validateJsonElement(jsonElement);
                        actualAdapter = adapterP2MPNetworkServiceConfigRequestPartial;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'P2MPNetworkServiceConfigRequestPartial'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for P2MPNetworkServiceConfigRequestPartial failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'P2MPNetworkServiceConfigRequestPartial'", e);
                    }
                    // deserialize MP2MPNetworkServiceConfigRequestPartial
                    try {
                        // validate the JSON object to see if any exception is thrown
                        MP2MPNetworkServiceConfigRequestPartial.validateJsonElement(jsonElement);
                        actualAdapter = adapterMP2MPNetworkServiceConfigRequestPartial;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'MP2MPNetworkServiceConfigRequestPartial'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for MP2MPNetworkServiceConfigRequestPartial failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'MP2MPNetworkServiceConfigRequestPartial'", e);
                    }
                    // deserialize CloudNetworkServiceConfigUpdatePartial
                    try {
                        // validate the JSON object to see if any exception is thrown
                        CloudNetworkServiceConfigUpdatePartial.validateJsonElement(jsonElement);
                        actualAdapter = adapterCloudNetworkServiceConfigUpdatePartial;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'CloudNetworkServiceConfigUpdatePartial'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for CloudNetworkServiceConfigUpdatePartial failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'CloudNetworkServiceConfigUpdatePartial'", e);
                    }

                    if (match == 1) {
                        NetworkServiceConfigUpdatePartial ret = new NetworkServiceConfigUpdatePartial();
                        ret.setActualInstance(actualAdapter.fromJsonTree(jsonElement));
                        return ret;
                    }

                    throw new IOException(String.format("Failed deserialization for NetworkServiceConfigUpdatePartial: %d classes match result, expected 1. Detailed failure message for oneOf schemas: %s. JSON: %s", match, errorMessages, jsonElement.toString()));
                }
            }.nullSafe();
        }
    }

    // store a list of schema names defined in oneOf
    public static final Map<String, Class<?>> schemas = new HashMap<String, Class<?>>();

    public NetworkServiceConfigUpdatePartial() {
        super("oneOf", Boolean.FALSE);
    }

    public NetworkServiceConfigUpdatePartial(Object o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    static {
        schemas.put("ExchangeLanNetworkServiceConfigUpdatePartial", ExchangeLanNetworkServiceConfigUpdatePartial.class);
        schemas.put("P2PNetworkServiceConfigUpdatePartial", P2PNetworkServiceConfigUpdatePartial.class);
        schemas.put("P2MPNetworkServiceConfigRequestPartial", P2MPNetworkServiceConfigRequestPartial.class);
        schemas.put("MP2MPNetworkServiceConfigRequestPartial", MP2MPNetworkServiceConfigRequestPartial.class);
        schemas.put("CloudNetworkServiceConfigUpdatePartial", CloudNetworkServiceConfigUpdatePartial.class);
    }

    @Override
    public Map<String, Class<?>> getSchemas() {
        return NetworkServiceConfigUpdatePartial.schemas;
    }

    /**
     * Set the instance that matches the oneOf child schema, check
     * the instance parameter is valid against the oneOf child schemas:
     * CloudNetworkServiceConfigUpdatePartial, ExchangeLanNetworkServiceConfigUpdatePartial, MP2MPNetworkServiceConfigRequestPartial, P2MPNetworkServiceConfigRequestPartial, P2PNetworkServiceConfigUpdatePartial
     *
     * It could be an instance of the 'oneOf' schemas.
     */
    @Override
    public void setActualInstance(Object instance) {
        if (instance instanceof ExchangeLanNetworkServiceConfigUpdatePartial) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof P2PNetworkServiceConfigUpdatePartial) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof P2MPNetworkServiceConfigRequestPartial) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof MP2MPNetworkServiceConfigRequestPartial) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof CloudNetworkServiceConfigUpdatePartial) {
            super.setActualInstance(instance);
            return;
        }

        throw new RuntimeException("Invalid instance type. Must be CloudNetworkServiceConfigUpdatePartial, ExchangeLanNetworkServiceConfigUpdatePartial, MP2MPNetworkServiceConfigRequestPartial, P2MPNetworkServiceConfigRequestPartial, P2PNetworkServiceConfigUpdatePartial");
    }

    /**
     * Get the actual instance, which can be the following:
     * CloudNetworkServiceConfigUpdatePartial, ExchangeLanNetworkServiceConfigUpdatePartial, MP2MPNetworkServiceConfigRequestPartial, P2MPNetworkServiceConfigRequestPartial, P2PNetworkServiceConfigUpdatePartial
     *
     * @return The actual instance (CloudNetworkServiceConfigUpdatePartial, ExchangeLanNetworkServiceConfigUpdatePartial, MP2MPNetworkServiceConfigRequestPartial, P2MPNetworkServiceConfigRequestPartial, P2PNetworkServiceConfigUpdatePartial)
     */
    @SuppressWarnings("unchecked")
    @Override
    public Object getActualInstance() {
        return super.getActualInstance();
    }

    /**
     * Get the actual instance of `ExchangeLanNetworkServiceConfigUpdatePartial`. If the actual instance is not `ExchangeLanNetworkServiceConfigUpdatePartial`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `ExchangeLanNetworkServiceConfigUpdatePartial`
     * @throws ClassCastException if the instance is not `ExchangeLanNetworkServiceConfigUpdatePartial`
     */
    public ExchangeLanNetworkServiceConfigUpdatePartial getExchangeLanNetworkServiceConfigUpdatePartial() throws ClassCastException {
        return (ExchangeLanNetworkServiceConfigUpdatePartial)super.getActualInstance();
    }
    /**
     * Get the actual instance of `P2PNetworkServiceConfigUpdatePartial`. If the actual instance is not `P2PNetworkServiceConfigUpdatePartial`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `P2PNetworkServiceConfigUpdatePartial`
     * @throws ClassCastException if the instance is not `P2PNetworkServiceConfigUpdatePartial`
     */
    public P2PNetworkServiceConfigUpdatePartial getP2PNetworkServiceConfigUpdatePartial() throws ClassCastException {
        return (P2PNetworkServiceConfigUpdatePartial)super.getActualInstance();
    }
    /**
     * Get the actual instance of `P2MPNetworkServiceConfigRequestPartial`. If the actual instance is not `P2MPNetworkServiceConfigRequestPartial`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `P2MPNetworkServiceConfigRequestPartial`
     * @throws ClassCastException if the instance is not `P2MPNetworkServiceConfigRequestPartial`
     */
    public P2MPNetworkServiceConfigRequestPartial getP2MPNetworkServiceConfigRequestPartial() throws ClassCastException {
        return (P2MPNetworkServiceConfigRequestPartial)super.getActualInstance();
    }
    /**
     * Get the actual instance of `MP2MPNetworkServiceConfigRequestPartial`. If the actual instance is not `MP2MPNetworkServiceConfigRequestPartial`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `MP2MPNetworkServiceConfigRequestPartial`
     * @throws ClassCastException if the instance is not `MP2MPNetworkServiceConfigRequestPartial`
     */
    public MP2MPNetworkServiceConfigRequestPartial getMP2MPNetworkServiceConfigRequestPartial() throws ClassCastException {
        return (MP2MPNetworkServiceConfigRequestPartial)super.getActualInstance();
    }
    /**
     * Get the actual instance of `CloudNetworkServiceConfigUpdatePartial`. If the actual instance is not `CloudNetworkServiceConfigUpdatePartial`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `CloudNetworkServiceConfigUpdatePartial`
     * @throws ClassCastException if the instance is not `CloudNetworkServiceConfigUpdatePartial`
     */
    public CloudNetworkServiceConfigUpdatePartial getCloudNetworkServiceConfigUpdatePartial() throws ClassCastException {
        return (CloudNetworkServiceConfigUpdatePartial)super.getActualInstance();
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to NetworkServiceConfigUpdatePartial
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        // validate oneOf schemas one by one
        int validCount = 0;
        ArrayList<String> errorMessages = new ArrayList<>();
        // validate the json string with ExchangeLanNetworkServiceConfigUpdatePartial
        try {
            ExchangeLanNetworkServiceConfigUpdatePartial.validateJsonElement(jsonElement);
            validCount++;
        } catch (Exception e) {
            errorMessages.add(String.format("Deserialization for ExchangeLanNetworkServiceConfigUpdatePartial failed with `%s`.", e.getMessage()));
            // continue to the next one
        }
        // validate the json string with P2PNetworkServiceConfigUpdatePartial
        try {
            P2PNetworkServiceConfigUpdatePartial.validateJsonElement(jsonElement);
            validCount++;
        } catch (Exception e) {
            errorMessages.add(String.format("Deserialization for P2PNetworkServiceConfigUpdatePartial failed with `%s`.", e.getMessage()));
            // continue to the next one
        }
        // validate the json string with P2MPNetworkServiceConfigRequestPartial
        try {
            P2MPNetworkServiceConfigRequestPartial.validateJsonElement(jsonElement);
            validCount++;
        } catch (Exception e) {
            errorMessages.add(String.format("Deserialization for P2MPNetworkServiceConfigRequestPartial failed with `%s`.", e.getMessage()));
            // continue to the next one
        }
        // validate the json string with MP2MPNetworkServiceConfigRequestPartial
        try {
            MP2MPNetworkServiceConfigRequestPartial.validateJsonElement(jsonElement);
            validCount++;
        } catch (Exception e) {
            errorMessages.add(String.format("Deserialization for MP2MPNetworkServiceConfigRequestPartial failed with `%s`.", e.getMessage()));
            // continue to the next one
        }
        // validate the json string with CloudNetworkServiceConfigUpdatePartial
        try {
            CloudNetworkServiceConfigUpdatePartial.validateJsonElement(jsonElement);
            validCount++;
        } catch (Exception e) {
            errorMessages.add(String.format("Deserialization for CloudNetworkServiceConfigUpdatePartial failed with `%s`.", e.getMessage()));
            // continue to the next one
        }
        if (validCount != 1) {
            throw new IOException(String.format("The JSON string is invalid for NetworkServiceConfigUpdatePartial with oneOf schemas: CloudNetworkServiceConfigUpdatePartial, ExchangeLanNetworkServiceConfigUpdatePartial, MP2MPNetworkServiceConfigRequestPartial, P2MPNetworkServiceConfigRequestPartial, P2PNetworkServiceConfigUpdatePartial. %d class(es) match the result, expected 1. Detailed failure message for oneOf schemas: %s. JSON: %s", validCount, errorMessages, jsonElement.toString()));
        }
    }

    /**
     * Create an instance of NetworkServiceConfigUpdatePartial given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of NetworkServiceConfigUpdatePartial
     * @throws IOException if the JSON string is invalid with respect to NetworkServiceConfigUpdatePartial
     */
    public static NetworkServiceConfigUpdatePartial fromJson(String jsonString) throws IOException {
        return JSON.getGson().fromJson(jsonString, NetworkServiceConfigUpdatePartial.class);
    }

    /**
     * Convert an instance of NetworkServiceConfigUpdatePartial to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}

