/*
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Cloud Network Product Offering
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:31:06.601153-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CloudNetworkProductOfferingPartial {
  public static final String SERIALIZED_NAME_BANDWIDTH_MAX = "bandwidth_max";
  @SerializedName(SERIALIZED_NAME_BANDWIDTH_MAX)
  private Integer bandwidthMax;

  public static final String SERIALIZED_NAME_BANDWIDTH_MIN = "bandwidth_min";
  @SerializedName(SERIALIZED_NAME_BANDWIDTH_MIN)
  private Integer bandwidthMin;

  /**
   * The exchange delivers the service over a &#x60;shared&#x60; or &#x60;dedicated&#x60; NNI.
   */
  @JsonAdapter(DeliveryMethodEnum.Adapter.class)
  public enum DeliveryMethodEnum {
    DEDICATED("dedicated"),
    
    SHARED("shared");

    private String value;

    DeliveryMethodEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DeliveryMethodEnum fromValue(String value) {
      for (DeliveryMethodEnum b : DeliveryMethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DeliveryMethodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DeliveryMethodEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DeliveryMethodEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return DeliveryMethodEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      DeliveryMethodEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_DELIVERY_METHOD = "delivery_method";
  @SerializedName(SERIALIZED_NAME_DELIVERY_METHOD)
  private DeliveryMethodEnum deliveryMethod;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "display_name";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_DIVERSITY = "diversity";
  @SerializedName(SERIALIZED_NAME_DIVERSITY)
  private Integer diversity;

  public static final String SERIALIZED_NAME_DOWNGRADE_ALLOWED = "downgrade_allowed";
  @SerializedName(SERIALIZED_NAME_DOWNGRADE_ALLOWED)
  private Boolean downgradeAllowed;

  public static final String SERIALIZED_NAME_HANDOVER_METRO_AREA = "handover_metro_area";
  @SerializedName(SERIALIZED_NAME_HANDOVER_METRO_AREA)
  private String handoverMetroArea;

  public static final String SERIALIZED_NAME_HANDOVER_METRO_AREA_NETWORK = "handover_metro_area_network";
  @SerializedName(SERIALIZED_NAME_HANDOVER_METRO_AREA_NETWORK)
  private String handoverMetroAreaNetwork;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PHYSICAL_PORT_SPEED = "physical_port_speed";
  @SerializedName(SERIALIZED_NAME_PHYSICAL_PORT_SPEED)
  private Integer physicalPortSpeed;

  /**
   * The &#x60;NetworkService&#x60; provides &#x60;single&#x60; or &#x60;multi&#x60;ple vlans.
   */
  @JsonAdapter(ProviderVlansEnum.Adapter.class)
  public enum ProviderVlansEnum {
    SINGLE("single"),
    
    MULTI("multi");

    private String value;

    ProviderVlansEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ProviderVlansEnum fromValue(String value) {
      for (ProviderVlansEnum b : ProviderVlansEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ProviderVlansEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ProviderVlansEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ProviderVlansEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ProviderVlansEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ProviderVlansEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PROVIDER_VLANS = "provider_vlans";
  @SerializedName(SERIALIZED_NAME_PROVIDER_VLANS)
  private ProviderVlansEnum providerVlans;

  /**
   * The resource type refers to an ix-api resource. 
   */
  @JsonAdapter(ResourceTypeEnum.Adapter.class)
  public enum ResourceTypeEnum {
    CONNECTION("connection"),
    
    DEMARC("demarc"),
    
    NETWORK_SERVICE("network_service"),
    
    NETWORK_SERVICE_CONFIG("network_service_config");

    private String value;

    ResourceTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ResourceTypeEnum fromValue(String value) {
      for (ResourceTypeEnum b : ResourceTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ResourceTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ResourceTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ResourceTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ResourceTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ResourceTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_RESOURCE_TYPE = "resource_type";
  @SerializedName(SERIALIZED_NAME_RESOURCE_TYPE)
  private ResourceTypeEnum resourceType;

  public static final String SERIALIZED_NAME_SERVICE_METRO_AREA = "service_metro_area";
  @SerializedName(SERIALIZED_NAME_SERVICE_METRO_AREA)
  private String serviceMetroArea;

  public static final String SERIALIZED_NAME_SERVICE_METRO_AREA_NETWORK = "service_metro_area_network";
  @SerializedName(SERIALIZED_NAME_SERVICE_METRO_AREA_NETWORK)
  private String serviceMetroAreaNetwork;

  public static final String SERIALIZED_NAME_SERVICE_PROVIDER = "service_provider";
  @SerializedName(SERIALIZED_NAME_SERVICE_PROVIDER)
  private String serviceProvider;

  public static final String SERIALIZED_NAME_SERVICE_PROVIDER_POP = "service_provider_pop";
  @SerializedName(SERIALIZED_NAME_SERVICE_PROVIDER_POP)
  private String serviceProviderPop;

  public static final String SERIALIZED_NAME_SERVICE_PROVIDER_REGION = "service_provider_region";
  @SerializedName(SERIALIZED_NAME_SERVICE_PROVIDER_REGION)
  private String serviceProviderRegion;

  /**
   * When the workflow is &#x60;provider_first&#x60; the subscriber creates a circuit with the cloud provider and provides a &#x60;cloud_key&#x60; for filtering the product-offerings.  If the workflow is &#x60;exchange_first&#x60; the IX will create the cloud circuit on the provider side. 
   */
  @JsonAdapter(ServiceProviderWorkflowEnum.Adapter.class)
  public enum ServiceProviderWorkflowEnum {
    EXCHANGE_FIRST("exchange_first"),
    
    PROVIDER_FIRST("provider_first");

    private String value;

    ServiceProviderWorkflowEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ServiceProviderWorkflowEnum fromValue(String value) {
      for (ServiceProviderWorkflowEnum b : ServiceProviderWorkflowEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ServiceProviderWorkflowEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ServiceProviderWorkflowEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ServiceProviderWorkflowEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ServiceProviderWorkflowEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ServiceProviderWorkflowEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SERVICE_PROVIDER_WORKFLOW = "service_provider_workflow";
  @SerializedName(SERIALIZED_NAME_SERVICE_PROVIDER_WORKFLOW)
  private ServiceProviderWorkflowEnum serviceProviderWorkflow;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_UPGRADE_ALLOWED = "upgrade_allowed";
  @SerializedName(SERIALIZED_NAME_UPGRADE_ALLOWED)
  private Boolean upgradeAllowed;

  public CloudNetworkProductOfferingPartial() {
  }

  public CloudNetworkProductOfferingPartial bandwidthMax(Integer bandwidthMax) {
    this.bandwidthMax = bandwidthMax;
    return this;
  }

  /**
   * When not &#x60;null&#x60;, this value enforces a mandatory rate limit for all network service configs.
   * minimum: 0
   * @return bandwidthMax
   */
  @javax.annotation.Nullable
  public Integer getBandwidthMax() {
    return bandwidthMax;
  }

  public void setBandwidthMax(Integer bandwidthMax) {
    this.bandwidthMax = bandwidthMax;
  }


  public CloudNetworkProductOfferingPartial bandwidthMin(Integer bandwidthMin) {
    this.bandwidthMin = bandwidthMin;
    return this;
  }

  /**
   * When configuring access to the network service, at least this &#x60;capacity&#x60; must be provided.
   * minimum: 0
   * @return bandwidthMin
   */
  @javax.annotation.Nullable
  public Integer getBandwidthMin() {
    return bandwidthMin;
  }

  public void setBandwidthMin(Integer bandwidthMin) {
    this.bandwidthMin = bandwidthMin;
  }


  public CloudNetworkProductOfferingPartial deliveryMethod(DeliveryMethodEnum deliveryMethod) {
    this.deliveryMethod = deliveryMethod;
    return this;
  }

  /**
   * The exchange delivers the service over a &#x60;shared&#x60; or &#x60;dedicated&#x60; NNI.
   * @return deliveryMethod
   */
  @javax.annotation.Nullable
  public DeliveryMethodEnum getDeliveryMethod() {
    return deliveryMethod;
  }

  public void setDeliveryMethod(DeliveryMethodEnum deliveryMethod) {
    this.deliveryMethod = deliveryMethod;
  }


  public CloudNetworkProductOfferingPartial displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Get displayName
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public CloudNetworkProductOfferingPartial diversity(Integer diversity) {
    this.diversity = diversity;
    return this;
  }

  /**
   * The service can be delivered over multiple handovers from the exchange to the &#x60;service_provider&#x60;. The &#x60;diversity&#x60; denotes the number of handovers between the exchange and the service provider. A value of two signals a redundant service.  Only one network service configuration for each &#x60;handover&#x60; and &#x60;cloud_vlan&#x60; can be created.
   * minimum: 1
   * @return diversity
   */
  @javax.annotation.Nullable
  public Integer getDiversity() {
    return diversity;
  }

  public void setDiversity(Integer diversity) {
    this.diversity = diversity;
  }


  public CloudNetworkProductOfferingPartial downgradeAllowed(Boolean downgradeAllowed) {
    this.downgradeAllowed = downgradeAllowed;
    return this;
  }

  /**
   * Indicates if the service can be migrated to a lower bandwidth.
   * @return downgradeAllowed
   */
  @javax.annotation.Nullable
  public Boolean getDowngradeAllowed() {
    return downgradeAllowed;
  }

  public void setDowngradeAllowed(Boolean downgradeAllowed) {
    this.downgradeAllowed = downgradeAllowed;
  }


  public CloudNetworkProductOfferingPartial handoverMetroArea(String handoverMetroArea) {
    this.handoverMetroArea = handoverMetroArea;
    return this;
  }

  /**
   * Id of the &#x60;MetroArea&#x60;. The network service will be accessed from this metro area. 
   * @return handoverMetroArea
   */
  @javax.annotation.Nullable
  public String getHandoverMetroArea() {
    return handoverMetroArea;
  }

  public void setHandoverMetroArea(String handoverMetroArea) {
    this.handoverMetroArea = handoverMetroArea;
  }


  public CloudNetworkProductOfferingPartial handoverMetroAreaNetwork(String handoverMetroAreaNetwork) {
    this.handoverMetroAreaNetwork = handoverMetroAreaNetwork;
    return this;
  }

  /**
   * Id of the &#x60;MetroAreaNetwork&#x60;. The service will be accessed through the handover metro area network. 
   * @return handoverMetroAreaNetwork
   */
  @javax.annotation.Nullable
  public String getHandoverMetroAreaNetwork() {
    return handoverMetroAreaNetwork;
  }

  public void setHandoverMetroAreaNetwork(String handoverMetroAreaNetwork) {
    this.handoverMetroAreaNetwork = handoverMetroAreaNetwork;
  }


  public CloudNetworkProductOfferingPartial id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public CloudNetworkProductOfferingPartial name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Name of the product
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CloudNetworkProductOfferingPartial physicalPortSpeed(Integer physicalPortSpeed) {
    this.physicalPortSpeed = physicalPortSpeed;
    return this;
  }

  /**
   * If the service is dependent on the speed of the physical port this field denotes the speed.
   * minimum: 0
   * @return physicalPortSpeed
   */
  @javax.annotation.Nullable
  public Integer getPhysicalPortSpeed() {
    return physicalPortSpeed;
  }

  public void setPhysicalPortSpeed(Integer physicalPortSpeed) {
    this.physicalPortSpeed = physicalPortSpeed;
  }


  public CloudNetworkProductOfferingPartial providerVlans(ProviderVlansEnum providerVlans) {
    this.providerVlans = providerVlans;
    return this;
  }

  /**
   * The &#x60;NetworkService&#x60; provides &#x60;single&#x60; or &#x60;multi&#x60;ple vlans.
   * @return providerVlans
   */
  @javax.annotation.Nullable
  public ProviderVlansEnum getProviderVlans() {
    return providerVlans;
  }

  public void setProviderVlans(ProviderVlansEnum providerVlans) {
    this.providerVlans = providerVlans;
  }


  public CloudNetworkProductOfferingPartial resourceType(ResourceTypeEnum resourceType) {
    this.resourceType = resourceType;
    return this;
  }

  /**
   * The resource type refers to an ix-api resource. 
   * @return resourceType
   */
  @javax.annotation.Nullable
  public ResourceTypeEnum getResourceType() {
    return resourceType;
  }

  public void setResourceType(ResourceTypeEnum resourceType) {
    this.resourceType = resourceType;
  }


  public CloudNetworkProductOfferingPartial serviceMetroArea(String serviceMetroArea) {
    this.serviceMetroArea = serviceMetroArea;
    return this;
  }

  /**
   * Id of the &#x60;MetroArea&#x60;. The service is delivered in this metro area. 
   * @return serviceMetroArea
   */
  @javax.annotation.Nullable
  public String getServiceMetroArea() {
    return serviceMetroArea;
  }

  public void setServiceMetroArea(String serviceMetroArea) {
    this.serviceMetroArea = serviceMetroArea;
  }


  public CloudNetworkProductOfferingPartial serviceMetroAreaNetwork(String serviceMetroAreaNetwork) {
    this.serviceMetroAreaNetwork = serviceMetroAreaNetwork;
    return this;
  }

  /**
   * Id of the &#x60;MetroAreaNetwork&#x60;. The service is directly provided on the metro area network. 
   * @return serviceMetroAreaNetwork
   */
  @javax.annotation.Nullable
  public String getServiceMetroAreaNetwork() {
    return serviceMetroAreaNetwork;
  }

  public void setServiceMetroAreaNetwork(String serviceMetroAreaNetwork) {
    this.serviceMetroAreaNetwork = serviceMetroAreaNetwork;
  }


  public CloudNetworkProductOfferingPartial serviceProvider(String serviceProvider) {
    this.serviceProvider = serviceProvider;
    return this;
  }

  /**
   * The name of the provider providing the service. 
   * @return serviceProvider
   */
  @javax.annotation.Nullable
  public String getServiceProvider() {
    return serviceProvider;
  }

  public void setServiceProvider(String serviceProvider) {
    this.serviceProvider = serviceProvider;
  }


  public CloudNetworkProductOfferingPartial serviceProviderPop(String serviceProviderPop) {
    this.serviceProviderPop = serviceProviderPop;
    return this;
  }

  /**
   * The datacenter description of the partner NNI to the service provider. 
   * @return serviceProviderPop
   */
  @javax.annotation.Nullable
  public String getServiceProviderPop() {
    return serviceProviderPop;
  }

  public void setServiceProviderPop(String serviceProviderPop) {
    this.serviceProviderPop = serviceProviderPop;
  }


  public CloudNetworkProductOfferingPartial serviceProviderRegion(String serviceProviderRegion) {
    this.serviceProviderRegion = serviceProviderRegion;
    return this;
  }

  /**
   * The service provider offers the network service for a specific region. 
   * @return serviceProviderRegion
   */
  @javax.annotation.Nullable
  public String getServiceProviderRegion() {
    return serviceProviderRegion;
  }

  public void setServiceProviderRegion(String serviceProviderRegion) {
    this.serviceProviderRegion = serviceProviderRegion;
  }


  public CloudNetworkProductOfferingPartial serviceProviderWorkflow(ServiceProviderWorkflowEnum serviceProviderWorkflow) {
    this.serviceProviderWorkflow = serviceProviderWorkflow;
    return this;
  }

  /**
   * When the workflow is &#x60;provider_first&#x60; the subscriber creates a circuit with the cloud provider and provides a &#x60;cloud_key&#x60; for filtering the product-offerings.  If the workflow is &#x60;exchange_first&#x60; the IX will create the cloud circuit on the provider side. 
   * @return serviceProviderWorkflow
   */
  @javax.annotation.Nullable
  public ServiceProviderWorkflowEnum getServiceProviderWorkflow() {
    return serviceProviderWorkflow;
  }

  public void setServiceProviderWorkflow(ServiceProviderWorkflowEnum serviceProviderWorkflow) {
    this.serviceProviderWorkflow = serviceProviderWorkflow;
  }


  public CloudNetworkProductOfferingPartial type(String type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nonnull
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  public CloudNetworkProductOfferingPartial upgradeAllowed(Boolean upgradeAllowed) {
    this.upgradeAllowed = upgradeAllowed;
    return this;
  }

  /**
   * Indicates if the service can be migrated to a higher bandwidth.
   * @return upgradeAllowed
   */
  @javax.annotation.Nullable
  public Boolean getUpgradeAllowed() {
    return upgradeAllowed;
  }

  public void setUpgradeAllowed(Boolean upgradeAllowed) {
    this.upgradeAllowed = upgradeAllowed;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CloudNetworkProductOfferingPartial cloudNetworkProductOfferingPartial = (CloudNetworkProductOfferingPartial) o;
    return Objects.equals(this.bandwidthMax, cloudNetworkProductOfferingPartial.bandwidthMax) &&
        Objects.equals(this.bandwidthMin, cloudNetworkProductOfferingPartial.bandwidthMin) &&
        Objects.equals(this.deliveryMethod, cloudNetworkProductOfferingPartial.deliveryMethod) &&
        Objects.equals(this.displayName, cloudNetworkProductOfferingPartial.displayName) &&
        Objects.equals(this.diversity, cloudNetworkProductOfferingPartial.diversity) &&
        Objects.equals(this.downgradeAllowed, cloudNetworkProductOfferingPartial.downgradeAllowed) &&
        Objects.equals(this.handoverMetroArea, cloudNetworkProductOfferingPartial.handoverMetroArea) &&
        Objects.equals(this.handoverMetroAreaNetwork, cloudNetworkProductOfferingPartial.handoverMetroAreaNetwork) &&
        Objects.equals(this.id, cloudNetworkProductOfferingPartial.id) &&
        Objects.equals(this.name, cloudNetworkProductOfferingPartial.name) &&
        Objects.equals(this.physicalPortSpeed, cloudNetworkProductOfferingPartial.physicalPortSpeed) &&
        Objects.equals(this.providerVlans, cloudNetworkProductOfferingPartial.providerVlans) &&
        Objects.equals(this.resourceType, cloudNetworkProductOfferingPartial.resourceType) &&
        Objects.equals(this.serviceMetroArea, cloudNetworkProductOfferingPartial.serviceMetroArea) &&
        Objects.equals(this.serviceMetroAreaNetwork, cloudNetworkProductOfferingPartial.serviceMetroAreaNetwork) &&
        Objects.equals(this.serviceProvider, cloudNetworkProductOfferingPartial.serviceProvider) &&
        Objects.equals(this.serviceProviderPop, cloudNetworkProductOfferingPartial.serviceProviderPop) &&
        Objects.equals(this.serviceProviderRegion, cloudNetworkProductOfferingPartial.serviceProviderRegion) &&
        Objects.equals(this.serviceProviderWorkflow, cloudNetworkProductOfferingPartial.serviceProviderWorkflow) &&
        Objects.equals(this.type, cloudNetworkProductOfferingPartial.type) &&
        Objects.equals(this.upgradeAllowed, cloudNetworkProductOfferingPartial.upgradeAllowed);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(bandwidthMax, bandwidthMin, deliveryMethod, displayName, diversity, downgradeAllowed, handoverMetroArea, handoverMetroAreaNetwork, id, name, physicalPortSpeed, providerVlans, resourceType, serviceMetroArea, serviceMetroAreaNetwork, serviceProvider, serviceProviderPop, serviceProviderRegion, serviceProviderWorkflow, type, upgradeAllowed);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CloudNetworkProductOfferingPartial {\n");
    sb.append("    bandwidthMax: ").append(toIndentedString(bandwidthMax)).append("\n");
    sb.append("    bandwidthMin: ").append(toIndentedString(bandwidthMin)).append("\n");
    sb.append("    deliveryMethod: ").append(toIndentedString(deliveryMethod)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    diversity: ").append(toIndentedString(diversity)).append("\n");
    sb.append("    downgradeAllowed: ").append(toIndentedString(downgradeAllowed)).append("\n");
    sb.append("    handoverMetroArea: ").append(toIndentedString(handoverMetroArea)).append("\n");
    sb.append("    handoverMetroAreaNetwork: ").append(toIndentedString(handoverMetroAreaNetwork)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    physicalPortSpeed: ").append(toIndentedString(physicalPortSpeed)).append("\n");
    sb.append("    providerVlans: ").append(toIndentedString(providerVlans)).append("\n");
    sb.append("    resourceType: ").append(toIndentedString(resourceType)).append("\n");
    sb.append("    serviceMetroArea: ").append(toIndentedString(serviceMetroArea)).append("\n");
    sb.append("    serviceMetroAreaNetwork: ").append(toIndentedString(serviceMetroAreaNetwork)).append("\n");
    sb.append("    serviceProvider: ").append(toIndentedString(serviceProvider)).append("\n");
    sb.append("    serviceProviderPop: ").append(toIndentedString(serviceProviderPop)).append("\n");
    sb.append("    serviceProviderRegion: ").append(toIndentedString(serviceProviderRegion)).append("\n");
    sb.append("    serviceProviderWorkflow: ").append(toIndentedString(serviceProviderWorkflow)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    upgradeAllowed: ").append(toIndentedString(upgradeAllowed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bandwidth_max");
    openapiFields.add("bandwidth_min");
    openapiFields.add("delivery_method");
    openapiFields.add("display_name");
    openapiFields.add("diversity");
    openapiFields.add("downgrade_allowed");
    openapiFields.add("handover_metro_area");
    openapiFields.add("handover_metro_area_network");
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("physical_port_speed");
    openapiFields.add("provider_vlans");
    openapiFields.add("resource_type");
    openapiFields.add("service_metro_area");
    openapiFields.add("service_metro_area_network");
    openapiFields.add("service_provider");
    openapiFields.add("service_provider_pop");
    openapiFields.add("service_provider_region");
    openapiFields.add("service_provider_workflow");
    openapiFields.add("type");
    openapiFields.add("upgrade_allowed");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("type");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CloudNetworkProductOfferingPartial
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CloudNetworkProductOfferingPartial.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CloudNetworkProductOfferingPartial is not found in the empty JSON string", CloudNetworkProductOfferingPartial.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CloudNetworkProductOfferingPartial.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CloudNetworkProductOfferingPartial` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CloudNetworkProductOfferingPartial.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("delivery_method") != null && !jsonObj.get("delivery_method").isJsonNull()) && !jsonObj.get("delivery_method").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `delivery_method` to be a primitive type in the JSON string but got `%s`", jsonObj.get("delivery_method").toString()));
      }
      // validate the optional field `delivery_method`
      if (jsonObj.get("delivery_method") != null && !jsonObj.get("delivery_method").isJsonNull()) {
        DeliveryMethodEnum.validateJsonElement(jsonObj.get("delivery_method"));
      }
      if ((jsonObj.get("display_name") != null && !jsonObj.get("display_name").isJsonNull()) && !jsonObj.get("display_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `display_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("display_name").toString()));
      }
      if ((jsonObj.get("handover_metro_area") != null && !jsonObj.get("handover_metro_area").isJsonNull()) && !jsonObj.get("handover_metro_area").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `handover_metro_area` to be a primitive type in the JSON string but got `%s`", jsonObj.get("handover_metro_area").toString()));
      }
      if ((jsonObj.get("handover_metro_area_network") != null && !jsonObj.get("handover_metro_area_network").isJsonNull()) && !jsonObj.get("handover_metro_area_network").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `handover_metro_area_network` to be a primitive type in the JSON string but got `%s`", jsonObj.get("handover_metro_area_network").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("provider_vlans") != null && !jsonObj.get("provider_vlans").isJsonNull()) && !jsonObj.get("provider_vlans").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `provider_vlans` to be a primitive type in the JSON string but got `%s`", jsonObj.get("provider_vlans").toString()));
      }
      // validate the optional field `provider_vlans`
      if (jsonObj.get("provider_vlans") != null && !jsonObj.get("provider_vlans").isJsonNull()) {
        ProviderVlansEnum.validateJsonElement(jsonObj.get("provider_vlans"));
      }
      if ((jsonObj.get("resource_type") != null && !jsonObj.get("resource_type").isJsonNull()) && !jsonObj.get("resource_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resource_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resource_type").toString()));
      }
      // validate the optional field `resource_type`
      if (jsonObj.get("resource_type") != null && !jsonObj.get("resource_type").isJsonNull()) {
        ResourceTypeEnum.validateJsonElement(jsonObj.get("resource_type"));
      }
      if ((jsonObj.get("service_metro_area") != null && !jsonObj.get("service_metro_area").isJsonNull()) && !jsonObj.get("service_metro_area").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `service_metro_area` to be a primitive type in the JSON string but got `%s`", jsonObj.get("service_metro_area").toString()));
      }
      if ((jsonObj.get("service_metro_area_network") != null && !jsonObj.get("service_metro_area_network").isJsonNull()) && !jsonObj.get("service_metro_area_network").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `service_metro_area_network` to be a primitive type in the JSON string but got `%s`", jsonObj.get("service_metro_area_network").toString()));
      }
      if ((jsonObj.get("service_provider") != null && !jsonObj.get("service_provider").isJsonNull()) && !jsonObj.get("service_provider").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `service_provider` to be a primitive type in the JSON string but got `%s`", jsonObj.get("service_provider").toString()));
      }
      if ((jsonObj.get("service_provider_pop") != null && !jsonObj.get("service_provider_pop").isJsonNull()) && !jsonObj.get("service_provider_pop").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `service_provider_pop` to be a primitive type in the JSON string but got `%s`", jsonObj.get("service_provider_pop").toString()));
      }
      if ((jsonObj.get("service_provider_region") != null && !jsonObj.get("service_provider_region").isJsonNull()) && !jsonObj.get("service_provider_region").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `service_provider_region` to be a primitive type in the JSON string but got `%s`", jsonObj.get("service_provider_region").toString()));
      }
      if ((jsonObj.get("service_provider_workflow") != null && !jsonObj.get("service_provider_workflow").isJsonNull()) && !jsonObj.get("service_provider_workflow").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `service_provider_workflow` to be a primitive type in the JSON string but got `%s`", jsonObj.get("service_provider_workflow").toString()));
      }
      // validate the optional field `service_provider_workflow`
      if (jsonObj.get("service_provider_workflow") != null && !jsonObj.get("service_provider_workflow").isJsonNull()) {
        ServiceProviderWorkflowEnum.validateJsonElement(jsonObj.get("service_provider_workflow"));
      }
      if (!jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CloudNetworkProductOfferingPartial.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CloudNetworkProductOfferingPartial' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CloudNetworkProductOfferingPartial> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CloudNetworkProductOfferingPartial.class));

       return (TypeAdapter<T>) new TypeAdapter<CloudNetworkProductOfferingPartial>() {
           @Override
           public void write(JsonWriter out, CloudNetworkProductOfferingPartial value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CloudNetworkProductOfferingPartial read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CloudNetworkProductOfferingPartial given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CloudNetworkProductOfferingPartial
   * @throws IOException if the JSON string is invalid with respect to CloudNetworkProductOfferingPartial
   */
  public static CloudNetworkProductOfferingPartial fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CloudNetworkProductOfferingPartial.class);
  }

  /**
   * Convert an instance of CloudNetworkProductOfferingPartial to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

