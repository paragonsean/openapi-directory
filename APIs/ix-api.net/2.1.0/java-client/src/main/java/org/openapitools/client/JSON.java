/*
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapter;
import com.google.gson.internal.bind.util.ISO8601Utils;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.google.gson.JsonElement;
import io.gsonfire.GsonFireBuilder;
import io.gsonfire.TypeSelector;

import okio.ByteString;

import java.io.IOException;
import java.io.StringReader;
import java.lang.reflect.Type;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.ParsePosition;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.Locale;
import java.util.Map;
import java.util.HashMap;

/*
 * A JSON utility class
 *
 * NOTE: in the future, this class may be converted to static, which may break
 *       backward-compatibility
 */
public class JSON {
    private static Gson gson;
    private static boolean isLenientOnJson = false;
    private static DateTypeAdapter dateTypeAdapter = new DateTypeAdapter();
    private static SqlDateTypeAdapter sqlDateTypeAdapter = new SqlDateTypeAdapter();
    private static OffsetDateTimeTypeAdapter offsetDateTimeTypeAdapter = new OffsetDateTimeTypeAdapter();
    private static LocalDateTypeAdapter localDateTypeAdapter = new LocalDateTypeAdapter();
    private static ByteArrayAdapter byteArrayAdapter = new ByteArrayAdapter();

    @SuppressWarnings("unchecked")
    public static GsonBuilder createGson() {
        GsonFireBuilder fireBuilder = new GsonFireBuilder()
                .registerTypeSelector(org.openapitools.client.model.MemberJoiningRule.class, new TypeSelector<org.openapitools.client.model.MemberJoiningRule>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.MemberJoiningRule> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("allow", org.openapitools.client.model.AllowMemberJoiningRule.class);
                        classByDiscriminatorValue.put("deny", org.openapitools.client.model.DenyMemberJoiningRule.class);
                        classByDiscriminatorValue.put("AllowMemberJoiningRule", org.openapitools.client.model.AllowMemberJoiningRule.class);
                        classByDiscriminatorValue.put("DenyMemberJoiningRule", org.openapitools.client.model.DenyMemberJoiningRule.class);
                        classByDiscriminatorValue.put("MemberJoiningRule", org.openapitools.client.model.MemberJoiningRule.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.MemberJoiningRulePartial.class, new TypeSelector<org.openapitools.client.model.MemberJoiningRulePartial>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.MemberJoiningRulePartial> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("allow", org.openapitools.client.model.AllowMemberJoiningRulePartial.class);
                        classByDiscriminatorValue.put("deny", org.openapitools.client.model.DenyMemberJoiningRulePartial.class);
                        classByDiscriminatorValue.put("AllowMemberJoiningRulePartial", org.openapitools.client.model.AllowMemberJoiningRulePartial.class);
                        classByDiscriminatorValue.put("DenyMemberJoiningRulePartial", org.openapitools.client.model.DenyMemberJoiningRulePartial.class);
                        classByDiscriminatorValue.put("MemberJoiningRulePartial", org.openapitools.client.model.MemberJoiningRulePartial.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.MemberJoiningRuleRequest.class, new TypeSelector<org.openapitools.client.model.MemberJoiningRuleRequest>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.MemberJoiningRuleRequest> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("allow", org.openapitools.client.model.AllowMemberJoiningRuleRequest.class);
                        classByDiscriminatorValue.put("deny", org.openapitools.client.model.DenyMemberJoiningRuleRequest.class);
                        classByDiscriminatorValue.put("AllowMemberJoiningRuleRequest", org.openapitools.client.model.AllowMemberJoiningRuleRequest.class);
                        classByDiscriminatorValue.put("DenyMemberJoiningRuleRequest", org.openapitools.client.model.DenyMemberJoiningRuleRequest.class);
                        classByDiscriminatorValue.put("MemberJoiningRuleRequest", org.openapitools.client.model.MemberJoiningRuleRequest.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.MemberJoiningRuleRequestPartial.class, new TypeSelector<org.openapitools.client.model.MemberJoiningRuleRequestPartial>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.MemberJoiningRuleRequestPartial> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("allow", org.openapitools.client.model.AllowMemberJoiningRuleRequestPartial.class);
                        classByDiscriminatorValue.put("deny", org.openapitools.client.model.DenyMemberJoiningRuleRequestPartial.class);
                        classByDiscriminatorValue.put("AllowMemberJoiningRuleRequestPartial", org.openapitools.client.model.AllowMemberJoiningRuleRequestPartial.class);
                        classByDiscriminatorValue.put("DenyMemberJoiningRuleRequestPartial", org.openapitools.client.model.DenyMemberJoiningRuleRequestPartial.class);
                        classByDiscriminatorValue.put("MemberJoiningRuleRequestPartial", org.openapitools.client.model.MemberJoiningRuleRequestPartial.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.MemberJoiningRuleUpdate.class, new TypeSelector<org.openapitools.client.model.MemberJoiningRuleUpdate>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.MemberJoiningRuleUpdate> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("allow", org.openapitools.client.model.AllowMemberJoiningRuleUpdate.class);
                        classByDiscriminatorValue.put("deny", org.openapitools.client.model.DenyMemberJoiningRuleUpdate.class);
                        classByDiscriminatorValue.put("AllowMemberJoiningRuleUpdate", org.openapitools.client.model.AllowMemberJoiningRuleUpdate.class);
                        classByDiscriminatorValue.put("DenyMemberJoiningRuleUpdate", org.openapitools.client.model.DenyMemberJoiningRuleUpdate.class);
                        classByDiscriminatorValue.put("MemberJoiningRuleUpdate", org.openapitools.client.model.MemberJoiningRuleUpdate.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.MemberJoiningRuleUpdatePartial.class, new TypeSelector<org.openapitools.client.model.MemberJoiningRuleUpdatePartial>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.MemberJoiningRuleUpdatePartial> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("allow", org.openapitools.client.model.AllowMemberJoiningRuleUpdatePartial.class);
                        classByDiscriminatorValue.put("deny", org.openapitools.client.model.DenyMemberJoiningRuleUpdatePartial.class);
                        classByDiscriminatorValue.put("AllowMemberJoiningRuleUpdatePartial", org.openapitools.client.model.AllowMemberJoiningRuleUpdatePartial.class);
                        classByDiscriminatorValue.put("DenyMemberJoiningRuleUpdatePartial", org.openapitools.client.model.DenyMemberJoiningRuleUpdatePartial.class);
                        classByDiscriminatorValue.put("MemberJoiningRuleUpdatePartial", org.openapitools.client.model.MemberJoiningRuleUpdatePartial.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.NetworkFeature.class, new TypeSelector<org.openapitools.client.model.NetworkFeature>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.NetworkFeature> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("route_server", org.openapitools.client.model.RouteServerNetworkFeature.class);
                        classByDiscriminatorValue.put("RouteServerNetworkFeature", org.openapitools.client.model.RouteServerNetworkFeature.class);
                        classByDiscriminatorValue.put("NetworkFeature", org.openapitools.client.model.NetworkFeature.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.NetworkFeatureConfig.class, new TypeSelector<org.openapitools.client.model.NetworkFeatureConfig>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.NetworkFeatureConfig> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("route_server", org.openapitools.client.model.RouteServerNetworkFeatureConfig.class);
                        classByDiscriminatorValue.put("RouteServerNetworkFeatureConfig", org.openapitools.client.model.RouteServerNetworkFeatureConfig.class);
                        classByDiscriminatorValue.put("NetworkFeatureConfig", org.openapitools.client.model.NetworkFeatureConfig.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.NetworkFeatureConfigPartial.class, new TypeSelector<org.openapitools.client.model.NetworkFeatureConfigPartial>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.NetworkFeatureConfigPartial> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("route_server", org.openapitools.client.model.RouteServerNetworkFeatureConfigPartial.class);
                        classByDiscriminatorValue.put("RouteServerNetworkFeatureConfigPartial", org.openapitools.client.model.RouteServerNetworkFeatureConfigPartial.class);
                        classByDiscriminatorValue.put("NetworkFeatureConfigPartial", org.openapitools.client.model.NetworkFeatureConfigPartial.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.NetworkFeatureConfigRequest.class, new TypeSelector<org.openapitools.client.model.NetworkFeatureConfigRequest>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.NetworkFeatureConfigRequest> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("route_server", org.openapitools.client.model.RouteServerNetworkFeatureConfigRequest.class);
                        classByDiscriminatorValue.put("RouteServerNetworkFeatureConfigRequest", org.openapitools.client.model.RouteServerNetworkFeatureConfigRequest.class);
                        classByDiscriminatorValue.put("NetworkFeatureConfigRequest", org.openapitools.client.model.NetworkFeatureConfigRequest.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.NetworkFeatureConfigRequestPartial.class, new TypeSelector<org.openapitools.client.model.NetworkFeatureConfigRequestPartial>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.NetworkFeatureConfigRequestPartial> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("route_server", org.openapitools.client.model.RouteServerNetworkFeatureConfigRequestPartial.class);
                        classByDiscriminatorValue.put("RouteServerNetworkFeatureConfigRequestPartial", org.openapitools.client.model.RouteServerNetworkFeatureConfigRequestPartial.class);
                        classByDiscriminatorValue.put("NetworkFeatureConfigRequestPartial", org.openapitools.client.model.NetworkFeatureConfigRequestPartial.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.NetworkFeatureConfigUpdate.class, new TypeSelector<org.openapitools.client.model.NetworkFeatureConfigUpdate>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.NetworkFeatureConfigUpdate> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("route_server", org.openapitools.client.model.RouteServerNetworkFeatureConfigUpdate.class);
                        classByDiscriminatorValue.put("RouteServerNetworkFeatureConfigUpdate", org.openapitools.client.model.RouteServerNetworkFeatureConfigUpdate.class);
                        classByDiscriminatorValue.put("NetworkFeatureConfigUpdate", org.openapitools.client.model.NetworkFeatureConfigUpdate.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.NetworkFeatureConfigUpdatePartial.class, new TypeSelector<org.openapitools.client.model.NetworkFeatureConfigUpdatePartial>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.NetworkFeatureConfigUpdatePartial> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("route_server", org.openapitools.client.model.RouteServerNetworkFeatureConfigUpdatePartial.class);
                        classByDiscriminatorValue.put("RouteServerNetworkFeatureConfigUpdatePartial", org.openapitools.client.model.RouteServerNetworkFeatureConfigUpdatePartial.class);
                        classByDiscriminatorValue.put("NetworkFeatureConfigUpdatePartial", org.openapitools.client.model.NetworkFeatureConfigUpdatePartial.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.NetworkFeaturePartial.class, new TypeSelector<org.openapitools.client.model.NetworkFeaturePartial>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.NetworkFeaturePartial> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("route_server", org.openapitools.client.model.RouteServerNetworkFeaturePartial.class);
                        classByDiscriminatorValue.put("RouteServerNetworkFeaturePartial", org.openapitools.client.model.RouteServerNetworkFeaturePartial.class);
                        classByDiscriminatorValue.put("NetworkFeaturePartial", org.openapitools.client.model.NetworkFeaturePartial.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.NetworkService.class, new TypeSelector<org.openapitools.client.model.NetworkService>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.NetworkService> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("cloud_vc", org.openapitools.client.model.CloudNetworkService.class);
                        classByDiscriminatorValue.put("exchange_lan", org.openapitools.client.model.ExchangeLanNetworkService.class);
                        classByDiscriminatorValue.put("mp2mp_vc", org.openapitools.client.model.MP2MPNetworkService.class);
                        classByDiscriminatorValue.put("p2mp_vc", org.openapitools.client.model.P2MPNetworkService.class);
                        classByDiscriminatorValue.put("p2p_vc", org.openapitools.client.model.P2PNetworkService.class);
                        classByDiscriminatorValue.put("CloudNetworkService", org.openapitools.client.model.CloudNetworkService.class);
                        classByDiscriminatorValue.put("ExchangeLanNetworkService", org.openapitools.client.model.ExchangeLanNetworkService.class);
                        classByDiscriminatorValue.put("MP2MPNetworkService", org.openapitools.client.model.MP2MPNetworkService.class);
                        classByDiscriminatorValue.put("P2MPNetworkService", org.openapitools.client.model.P2MPNetworkService.class);
                        classByDiscriminatorValue.put("P2PNetworkService", org.openapitools.client.model.P2PNetworkService.class);
                        classByDiscriminatorValue.put("NetworkService", org.openapitools.client.model.NetworkService.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.NetworkServiceConfig.class, new TypeSelector<org.openapitools.client.model.NetworkServiceConfig>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.NetworkServiceConfig> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("cloud_vc", org.openapitools.client.model.CloudNetworkServiceConfig.class);
                        classByDiscriminatorValue.put("exchange_lan", org.openapitools.client.model.ExchangeLanNetworkServiceConfig.class);
                        classByDiscriminatorValue.put("mp2mp_vc", org.openapitools.client.model.MP2MPNetworkServiceConfig.class);
                        classByDiscriminatorValue.put("p2mp_vc", org.openapitools.client.model.P2MPNetworkServiceConfig.class);
                        classByDiscriminatorValue.put("p2p_vc", org.openapitools.client.model.P2PNetworkServiceConfig.class);
                        classByDiscriminatorValue.put("CloudNetworkServiceConfig", org.openapitools.client.model.CloudNetworkServiceConfig.class);
                        classByDiscriminatorValue.put("ExchangeLanNetworkServiceConfig", org.openapitools.client.model.ExchangeLanNetworkServiceConfig.class);
                        classByDiscriminatorValue.put("MP2MPNetworkServiceConfig", org.openapitools.client.model.MP2MPNetworkServiceConfig.class);
                        classByDiscriminatorValue.put("P2MPNetworkServiceConfig", org.openapitools.client.model.P2MPNetworkServiceConfig.class);
                        classByDiscriminatorValue.put("P2PNetworkServiceConfig", org.openapitools.client.model.P2PNetworkServiceConfig.class);
                        classByDiscriminatorValue.put("NetworkServiceConfig", org.openapitools.client.model.NetworkServiceConfig.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.NetworkServiceConfigPartial.class, new TypeSelector<org.openapitools.client.model.NetworkServiceConfigPartial>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.NetworkServiceConfigPartial> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("cloud_vc", org.openapitools.client.model.CloudNetworkServiceConfigPartial.class);
                        classByDiscriminatorValue.put("exchange_lan", org.openapitools.client.model.ExchangeLanNetworkServiceConfigPartial.class);
                        classByDiscriminatorValue.put("mp2mp_vc", org.openapitools.client.model.MP2MPNetworkServiceConfigPartial.class);
                        classByDiscriminatorValue.put("p2mp_vc", org.openapitools.client.model.P2MPNetworkServiceConfigPartial.class);
                        classByDiscriminatorValue.put("p2p_vc", org.openapitools.client.model.P2PNetworkServiceConfigPartial.class);
                        classByDiscriminatorValue.put("CloudNetworkServiceConfigPartial", org.openapitools.client.model.CloudNetworkServiceConfigPartial.class);
                        classByDiscriminatorValue.put("ExchangeLanNetworkServiceConfigPartial", org.openapitools.client.model.ExchangeLanNetworkServiceConfigPartial.class);
                        classByDiscriminatorValue.put("MP2MPNetworkServiceConfigPartial", org.openapitools.client.model.MP2MPNetworkServiceConfigPartial.class);
                        classByDiscriminatorValue.put("P2MPNetworkServiceConfigPartial", org.openapitools.client.model.P2MPNetworkServiceConfigPartial.class);
                        classByDiscriminatorValue.put("P2PNetworkServiceConfigPartial", org.openapitools.client.model.P2PNetworkServiceConfigPartial.class);
                        classByDiscriminatorValue.put("NetworkServiceConfigPartial", org.openapitools.client.model.NetworkServiceConfigPartial.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.NetworkServiceConfigRequest.class, new TypeSelector<org.openapitools.client.model.NetworkServiceConfigRequest>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.NetworkServiceConfigRequest> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("cloud_vc", org.openapitools.client.model.CloudNetworkServiceConfigRequest.class);
                        classByDiscriminatorValue.put("exchange_lan", org.openapitools.client.model.ExchangeLanNetworkServiceConfigRequest.class);
                        classByDiscriminatorValue.put("mp2mp_vc", org.openapitools.client.model.MP2MPNetworkServiceConfigRequest.class);
                        classByDiscriminatorValue.put("p2mp_vc", org.openapitools.client.model.P2MPNetworkServiceConfigRequest.class);
                        classByDiscriminatorValue.put("p2p_vc", org.openapitools.client.model.P2PNetworkServiceConfigRequest.class);
                        classByDiscriminatorValue.put("CloudNetworkServiceConfigRequest", org.openapitools.client.model.CloudNetworkServiceConfigRequest.class);
                        classByDiscriminatorValue.put("ExchangeLanNetworkServiceConfigRequest", org.openapitools.client.model.ExchangeLanNetworkServiceConfigRequest.class);
                        classByDiscriminatorValue.put("MP2MPNetworkServiceConfigRequest", org.openapitools.client.model.MP2MPNetworkServiceConfigRequest.class);
                        classByDiscriminatorValue.put("P2MPNetworkServiceConfigRequest", org.openapitools.client.model.P2MPNetworkServiceConfigRequest.class);
                        classByDiscriminatorValue.put("P2PNetworkServiceConfigRequest", org.openapitools.client.model.P2PNetworkServiceConfigRequest.class);
                        classByDiscriminatorValue.put("NetworkServiceConfigRequest", org.openapitools.client.model.NetworkServiceConfigRequest.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.NetworkServiceConfigRequestPartial.class, new TypeSelector<org.openapitools.client.model.NetworkServiceConfigRequestPartial>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.NetworkServiceConfigRequestPartial> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("cloud_vc", org.openapitools.client.model.CloudNetworkServiceConfigRequestPartial.class);
                        classByDiscriminatorValue.put("exchange_lan", org.openapitools.client.model.ExchangeLanNetworkServiceConfigRequestPartial.class);
                        classByDiscriminatorValue.put("mp2mp_vc", org.openapitools.client.model.MP2MPNetworkServiceConfigRequestPartial.class);
                        classByDiscriminatorValue.put("p2mp_vc", org.openapitools.client.model.P2MPNetworkServiceConfigRequestPartial.class);
                        classByDiscriminatorValue.put("p2p_vc", org.openapitools.client.model.P2PNetworkServiceConfigRequestPartial.class);
                        classByDiscriminatorValue.put("CloudNetworkServiceConfigRequestPartial", org.openapitools.client.model.CloudNetworkServiceConfigRequestPartial.class);
                        classByDiscriminatorValue.put("ExchangeLanNetworkServiceConfigRequestPartial", org.openapitools.client.model.ExchangeLanNetworkServiceConfigRequestPartial.class);
                        classByDiscriminatorValue.put("MP2MPNetworkServiceConfigRequestPartial", org.openapitools.client.model.MP2MPNetworkServiceConfigRequestPartial.class);
                        classByDiscriminatorValue.put("P2MPNetworkServiceConfigRequestPartial", org.openapitools.client.model.P2MPNetworkServiceConfigRequestPartial.class);
                        classByDiscriminatorValue.put("P2PNetworkServiceConfigRequestPartial", org.openapitools.client.model.P2PNetworkServiceConfigRequestPartial.class);
                        classByDiscriminatorValue.put("NetworkServiceConfigRequestPartial", org.openapitools.client.model.NetworkServiceConfigRequestPartial.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.NetworkServiceConfigUpdate.class, new TypeSelector<org.openapitools.client.model.NetworkServiceConfigUpdate>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.NetworkServiceConfigUpdate> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("cloud_vc", org.openapitools.client.model.CloudNetworkServiceConfigUpdate.class);
                        classByDiscriminatorValue.put("exchange_lan", org.openapitools.client.model.ExchangeLanNetworkServiceConfigUpdate.class);
                        classByDiscriminatorValue.put("mp2mp_vc", org.openapitools.client.model.MP2MPNetworkServiceConfigRequest.class);
                        classByDiscriminatorValue.put("p2mp_vc", org.openapitools.client.model.P2MPNetworkServiceConfigRequest.class);
                        classByDiscriminatorValue.put("p2p_vc", org.openapitools.client.model.P2PNetworkServiceConfigUpdate.class);
                        classByDiscriminatorValue.put("CloudNetworkServiceConfigUpdate", org.openapitools.client.model.CloudNetworkServiceConfigUpdate.class);
                        classByDiscriminatorValue.put("ExchangeLanNetworkServiceConfigUpdate", org.openapitools.client.model.ExchangeLanNetworkServiceConfigUpdate.class);
                        classByDiscriminatorValue.put("MP2MPNetworkServiceConfigRequest", org.openapitools.client.model.MP2MPNetworkServiceConfigRequest.class);
                        classByDiscriminatorValue.put("P2MPNetworkServiceConfigRequest", org.openapitools.client.model.P2MPNetworkServiceConfigRequest.class);
                        classByDiscriminatorValue.put("P2PNetworkServiceConfigUpdate", org.openapitools.client.model.P2PNetworkServiceConfigUpdate.class);
                        classByDiscriminatorValue.put("NetworkServiceConfigUpdate", org.openapitools.client.model.NetworkServiceConfigUpdate.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.NetworkServiceConfigUpdatePartial.class, new TypeSelector<org.openapitools.client.model.NetworkServiceConfigUpdatePartial>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.NetworkServiceConfigUpdatePartial> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("cloud_vc", org.openapitools.client.model.CloudNetworkServiceConfigUpdatePartial.class);
                        classByDiscriminatorValue.put("exchange_lan", org.openapitools.client.model.ExchangeLanNetworkServiceConfigUpdatePartial.class);
                        classByDiscriminatorValue.put("mp2mp_vc", org.openapitools.client.model.MP2MPNetworkServiceConfigRequestPartial.class);
                        classByDiscriminatorValue.put("p2mp_vc", org.openapitools.client.model.P2MPNetworkServiceConfigRequestPartial.class);
                        classByDiscriminatorValue.put("p2p_vc", org.openapitools.client.model.P2PNetworkServiceConfigUpdatePartial.class);
                        classByDiscriminatorValue.put("CloudNetworkServiceConfigUpdatePartial", org.openapitools.client.model.CloudNetworkServiceConfigUpdatePartial.class);
                        classByDiscriminatorValue.put("ExchangeLanNetworkServiceConfigUpdatePartial", org.openapitools.client.model.ExchangeLanNetworkServiceConfigUpdatePartial.class);
                        classByDiscriminatorValue.put("MP2MPNetworkServiceConfigRequestPartial", org.openapitools.client.model.MP2MPNetworkServiceConfigRequestPartial.class);
                        classByDiscriminatorValue.put("P2MPNetworkServiceConfigRequestPartial", org.openapitools.client.model.P2MPNetworkServiceConfigRequestPartial.class);
                        classByDiscriminatorValue.put("P2PNetworkServiceConfigUpdatePartial", org.openapitools.client.model.P2PNetworkServiceConfigUpdatePartial.class);
                        classByDiscriminatorValue.put("NetworkServiceConfigUpdatePartial", org.openapitools.client.model.NetworkServiceConfigUpdatePartial.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.NetworkServiceDeleteResponse.class, new TypeSelector<org.openapitools.client.model.NetworkServiceDeleteResponse>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.NetworkServiceDeleteResponse> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("cloud_vc", org.openapitools.client.model.CloudNetworkService.class);
                        classByDiscriminatorValue.put("mp2mp_vc", org.openapitools.client.model.MP2MPNetworkService.class);
                        classByDiscriminatorValue.put("p2mp_vc", org.openapitools.client.model.P2MPNetworkService.class);
                        classByDiscriminatorValue.put("p2p_vc", org.openapitools.client.model.P2PNetworkService.class);
                        classByDiscriminatorValue.put("CloudNetworkService", org.openapitools.client.model.CloudNetworkService.class);
                        classByDiscriminatorValue.put("MP2MPNetworkService", org.openapitools.client.model.MP2MPNetworkService.class);
                        classByDiscriminatorValue.put("P2MPNetworkService", org.openapitools.client.model.P2MPNetworkService.class);
                        classByDiscriminatorValue.put("P2PNetworkService", org.openapitools.client.model.P2PNetworkService.class);
                        classByDiscriminatorValue.put("NetworkServiceDeleteResponse", org.openapitools.client.model.NetworkServiceDeleteResponse.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.NetworkServiceDeleteResponsePartial.class, new TypeSelector<org.openapitools.client.model.NetworkServiceDeleteResponsePartial>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.NetworkServiceDeleteResponsePartial> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("cloud_vc", org.openapitools.client.model.CloudNetworkServicePartial.class);
                        classByDiscriminatorValue.put("mp2mp_vc", org.openapitools.client.model.MP2MPNetworkServicePartial.class);
                        classByDiscriminatorValue.put("p2mp_vc", org.openapitools.client.model.P2MPNetworkServicePartial.class);
                        classByDiscriminatorValue.put("p2p_vc", org.openapitools.client.model.P2PNetworkServicePartial.class);
                        classByDiscriminatorValue.put("CloudNetworkServicePartial", org.openapitools.client.model.CloudNetworkServicePartial.class);
                        classByDiscriminatorValue.put("MP2MPNetworkServicePartial", org.openapitools.client.model.MP2MPNetworkServicePartial.class);
                        classByDiscriminatorValue.put("P2MPNetworkServicePartial", org.openapitools.client.model.P2MPNetworkServicePartial.class);
                        classByDiscriminatorValue.put("P2PNetworkServicePartial", org.openapitools.client.model.P2PNetworkServicePartial.class);
                        classByDiscriminatorValue.put("NetworkServiceDeleteResponsePartial", org.openapitools.client.model.NetworkServiceDeleteResponsePartial.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.NetworkServicePartial.class, new TypeSelector<org.openapitools.client.model.NetworkServicePartial>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.NetworkServicePartial> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("cloud_vc", org.openapitools.client.model.CloudNetworkServicePartial.class);
                        classByDiscriminatorValue.put("exchange_lan", org.openapitools.client.model.ExchangeLanNetworkServicePartial.class);
                        classByDiscriminatorValue.put("mp2mp_vc", org.openapitools.client.model.MP2MPNetworkServicePartial.class);
                        classByDiscriminatorValue.put("p2mp_vc", org.openapitools.client.model.P2MPNetworkServicePartial.class);
                        classByDiscriminatorValue.put("p2p_vc", org.openapitools.client.model.P2PNetworkServicePartial.class);
                        classByDiscriminatorValue.put("CloudNetworkServicePartial", org.openapitools.client.model.CloudNetworkServicePartial.class);
                        classByDiscriminatorValue.put("ExchangeLanNetworkServicePartial", org.openapitools.client.model.ExchangeLanNetworkServicePartial.class);
                        classByDiscriminatorValue.put("MP2MPNetworkServicePartial", org.openapitools.client.model.MP2MPNetworkServicePartial.class);
                        classByDiscriminatorValue.put("P2MPNetworkServicePartial", org.openapitools.client.model.P2MPNetworkServicePartial.class);
                        classByDiscriminatorValue.put("P2PNetworkServicePartial", org.openapitools.client.model.P2PNetworkServicePartial.class);
                        classByDiscriminatorValue.put("NetworkServicePartial", org.openapitools.client.model.NetworkServicePartial.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.NetworkServiceRequest.class, new TypeSelector<org.openapitools.client.model.NetworkServiceRequest>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.NetworkServiceRequest> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("cloud_vc", org.openapitools.client.model.CloudNetworkServiceRequest.class);
                        classByDiscriminatorValue.put("mp2mp_vc", org.openapitools.client.model.MP2MPNetworkServiceRequest.class);
                        classByDiscriminatorValue.put("p2mp_vc", org.openapitools.client.model.P2MPNetworkServiceRequest.class);
                        classByDiscriminatorValue.put("p2p_vc", org.openapitools.client.model.P2PNetworkServiceRequest.class);
                        classByDiscriminatorValue.put("CloudNetworkServiceRequest", org.openapitools.client.model.CloudNetworkServiceRequest.class);
                        classByDiscriminatorValue.put("MP2MPNetworkServiceRequest", org.openapitools.client.model.MP2MPNetworkServiceRequest.class);
                        classByDiscriminatorValue.put("P2MPNetworkServiceRequest", org.openapitools.client.model.P2MPNetworkServiceRequest.class);
                        classByDiscriminatorValue.put("P2PNetworkServiceRequest", org.openapitools.client.model.P2PNetworkServiceRequest.class);
                        classByDiscriminatorValue.put("NetworkServiceRequest", org.openapitools.client.model.NetworkServiceRequest.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.NetworkServiceRequestPartial.class, new TypeSelector<org.openapitools.client.model.NetworkServiceRequestPartial>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.NetworkServiceRequestPartial> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("cloud_vc", org.openapitools.client.model.CloudNetworkServiceRequestPartial.class);
                        classByDiscriminatorValue.put("mp2mp_vc", org.openapitools.client.model.MP2MPNetworkServiceRequestPartial.class);
                        classByDiscriminatorValue.put("p2mp_vc", org.openapitools.client.model.P2MPNetworkServiceRequestPartial.class);
                        classByDiscriminatorValue.put("p2p_vc", org.openapitools.client.model.P2PNetworkServiceRequestPartial.class);
                        classByDiscriminatorValue.put("CloudNetworkServiceRequestPartial", org.openapitools.client.model.CloudNetworkServiceRequestPartial.class);
                        classByDiscriminatorValue.put("MP2MPNetworkServiceRequestPartial", org.openapitools.client.model.MP2MPNetworkServiceRequestPartial.class);
                        classByDiscriminatorValue.put("P2MPNetworkServiceRequestPartial", org.openapitools.client.model.P2MPNetworkServiceRequestPartial.class);
                        classByDiscriminatorValue.put("P2PNetworkServiceRequestPartial", org.openapitools.client.model.P2PNetworkServiceRequestPartial.class);
                        classByDiscriminatorValue.put("NetworkServiceRequestPartial", org.openapitools.client.model.NetworkServiceRequestPartial.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ProductOffering.class, new TypeSelector<org.openapitools.client.model.ProductOffering>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ProductOffering> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("cloud_vc", org.openapitools.client.model.CloudNetworkProductOffering.class);
                        classByDiscriminatorValue.put("exchange_lan", org.openapitools.client.model.ExchangeLanNetworkProductOffering.class);
                        classByDiscriminatorValue.put("mp2mp_vc", org.openapitools.client.model.MP2MPNetworkProductOffering.class);
                        classByDiscriminatorValue.put("p2mp_vc", org.openapitools.client.model.P2MPNetworkProductOffering.class);
                        classByDiscriminatorValue.put("p2p_vc", org.openapitools.client.model.P2PNetworkProductOffering.class);
                        classByDiscriminatorValue.put("CloudNetworkProductOffering", org.openapitools.client.model.CloudNetworkProductOffering.class);
                        classByDiscriminatorValue.put("ExchangeLanNetworkProductOffering", org.openapitools.client.model.ExchangeLanNetworkProductOffering.class);
                        classByDiscriminatorValue.put("MP2MPNetworkProductOffering", org.openapitools.client.model.MP2MPNetworkProductOffering.class);
                        classByDiscriminatorValue.put("P2MPNetworkProductOffering", org.openapitools.client.model.P2MPNetworkProductOffering.class);
                        classByDiscriminatorValue.put("P2PNetworkProductOffering", org.openapitools.client.model.P2PNetworkProductOffering.class);
                        classByDiscriminatorValue.put("ProductOffering", org.openapitools.client.model.ProductOffering.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.ProductOfferingPartial.class, new TypeSelector<org.openapitools.client.model.ProductOfferingPartial>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.ProductOfferingPartial> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("cloud_vc", org.openapitools.client.model.CloudNetworkProductOfferingPartial.class);
                        classByDiscriminatorValue.put("exchange_lan", org.openapitools.client.model.ExchangeLanNetworkProductOfferingPartial.class);
                        classByDiscriminatorValue.put("mp2mp_vc", org.openapitools.client.model.MP2MPNetworkProductOfferingPartial.class);
                        classByDiscriminatorValue.put("p2mp_vc", org.openapitools.client.model.P2MPNetworkProductOfferingPartial.class);
                        classByDiscriminatorValue.put("p2p_vc", org.openapitools.client.model.P2PNetworkProductOfferingPartial.class);
                        classByDiscriminatorValue.put("CloudNetworkProductOfferingPartial", org.openapitools.client.model.CloudNetworkProductOfferingPartial.class);
                        classByDiscriminatorValue.put("ExchangeLanNetworkProductOfferingPartial", org.openapitools.client.model.ExchangeLanNetworkProductOfferingPartial.class);
                        classByDiscriminatorValue.put("MP2MPNetworkProductOfferingPartial", org.openapitools.client.model.MP2MPNetworkProductOfferingPartial.class);
                        classByDiscriminatorValue.put("P2MPNetworkProductOfferingPartial", org.openapitools.client.model.P2MPNetworkProductOfferingPartial.class);
                        classByDiscriminatorValue.put("P2PNetworkProductOfferingPartial", org.openapitools.client.model.P2PNetworkProductOfferingPartial.class);
                        classByDiscriminatorValue.put("ProductOfferingPartial", org.openapitools.client.model.ProductOfferingPartial.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.VlanConfig.class, new TypeSelector<org.openapitools.client.model.VlanConfig>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.VlanConfig> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("dot1q", org.openapitools.client.model.VLanConfigDot1Q.class);
                        classByDiscriminatorValue.put("port", org.openapitools.client.model.VLanConfigPort.class);
                        classByDiscriminatorValue.put("qinq", org.openapitools.client.model.VLanConfigQinQ.class);
                        classByDiscriminatorValue.put("VLanConfigDot1Q", org.openapitools.client.model.VLanConfigDot1Q.class);
                        classByDiscriminatorValue.put("VLanConfigPort", org.openapitools.client.model.VLanConfigPort.class);
                        classByDiscriminatorValue.put("VLanConfigQinQ", org.openapitools.client.model.VLanConfigQinQ.class);
                        classByDiscriminatorValue.put("VlanConfig", org.openapitools.client.model.VlanConfig.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "vlan_type"));
                    }
          })
                .registerTypeSelector(org.openapitools.client.model.VlanConfigPartial.class, new TypeSelector<org.openapitools.client.model.VlanConfigPartial>() {
                    @Override
                    public Class<? extends org.openapitools.client.model.VlanConfigPartial> getClassForElement(JsonElement readElement) {
                        Map<String, Class> classByDiscriminatorValue = new HashMap<String, Class>();
                        classByDiscriminatorValue.put("dot1q", org.openapitools.client.model.VLanConfigDot1QPartial.class);
                        classByDiscriminatorValue.put("port", org.openapitools.client.model.VLanConfigPortPartial.class);
                        classByDiscriminatorValue.put("qinq", org.openapitools.client.model.VLanConfigQinQPartial.class);
                        classByDiscriminatorValue.put("VLanConfigDot1QPartial", org.openapitools.client.model.VLanConfigDot1QPartial.class);
                        classByDiscriminatorValue.put("VLanConfigPortPartial", org.openapitools.client.model.VLanConfigPortPartial.class);
                        classByDiscriminatorValue.put("VLanConfigQinQPartial", org.openapitools.client.model.VLanConfigQinQPartial.class);
                        classByDiscriminatorValue.put("VlanConfigPartial", org.openapitools.client.model.VlanConfigPartial.class);
                        return getClassByDiscriminator(classByDiscriminatorValue,
                                getDiscriminatorValue(readElement, "vlan_type"));
                    }
          })
        ;
        GsonBuilder builder = fireBuilder.createGsonBuilder();
        return builder;
    }

    private static String getDiscriminatorValue(JsonElement readElement, String discriminatorField) {
        JsonElement element = readElement.getAsJsonObject().get(discriminatorField);
        if (null == element) {
            throw new IllegalArgumentException("missing discriminator field: <" + discriminatorField + ">");
        }
        return element.getAsString();
    }

    /**
     * Returns the Java class that implements the OpenAPI schema for the specified discriminator value.
     *
     * @param classByDiscriminatorValue The map of discriminator values to Java classes.
     * @param discriminatorValue The value of the OpenAPI discriminator in the input data.
     * @return The Java class that implements the OpenAPI schema
     */
    private static Class getClassByDiscriminator(Map classByDiscriminatorValue, String discriminatorValue) {
        Class clazz = (Class) classByDiscriminatorValue.get(discriminatorValue);
        if (null == clazz) {
            throw new IllegalArgumentException("cannot determine model class of name: <" + discriminatorValue + ">");
        }
        return clazz;
    }

    static {
        GsonBuilder gsonBuilder = createGson();
        gsonBuilder.registerTypeAdapter(Date.class, dateTypeAdapter);
        gsonBuilder.registerTypeAdapter(java.sql.Date.class, sqlDateTypeAdapter);
        gsonBuilder.registerTypeAdapter(OffsetDateTime.class, offsetDateTimeTypeAdapter);
        gsonBuilder.registerTypeAdapter(LocalDate.class, localDateTypeAdapter);
        gsonBuilder.registerTypeAdapter(byte[].class, byteArrayAdapter);
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.Account.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.AccountPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.AccountRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.AccountRequestPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.AccountUpdate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.AccountUpdatePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.AccountsList400Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.AccountsList401Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.AccountsList403Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.AccountsRead404Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.Address.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.AddressPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.AllowMemberJoiningRule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.AllowMemberJoiningRulePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.AllowMemberJoiningRuleRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.AllowMemberJoiningRuleRequestPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.AllowMemberJoiningRuleUpdate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.AllowMemberJoiningRuleUpdatePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.AuthToken.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.AuthTokenPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.AuthTokenRefresh401Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.AuthTokenRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.AuthTokenRequestPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.BillingInformation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.BillingInformationPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.Cancelable.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.CancelablePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.CancellationPolicy.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.CancellationPolicyPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.CancellationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.CancellationRequestPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.CloudNetworkProductOffering.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.CloudNetworkProductOfferingPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.CloudNetworkService.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.CloudNetworkServiceConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.CloudNetworkServiceConfigPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.CloudNetworkServiceConfigRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.CloudNetworkServiceConfigRequestPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.CloudNetworkServiceConfigUpdate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.CloudNetworkServiceConfigUpdatePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.CloudNetworkServicePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.CloudNetworkServiceRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.CloudNetworkServiceRequestPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.Connection.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ConnectionPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ConnectionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ConnectionRequestPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ConnectionUpdate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ConnectionUpdatePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.Consumable.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ConsumablePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.Contact.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ContactPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ContactRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ContactRequestPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ContactUpdate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ContactUpdatePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.Contactable.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ContactablePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ContactsDestroy400Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DenyMemberJoiningRule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DenyMemberJoiningRulePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DenyMemberJoiningRuleRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DenyMemberJoiningRuleRequestPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DenyMemberJoiningRuleUpdate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DenyMemberJoiningRuleUpdatePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.Device.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeviceCapability.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeviceCapabilityPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeviceConnection.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DeviceConnectionPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.DevicePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.Event.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.EventPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ExchangeLanNetworkProductOffering.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ExchangeLanNetworkProductOfferingPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ExchangeLanNetworkService.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ExchangeLanNetworkServiceConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ExchangeLanNetworkServiceConfigPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ExchangeLanNetworkServiceConfigRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ExchangeLanNetworkServiceConfigRequestPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ExchangeLanNetworkServiceConfigUpdate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ExchangeLanNetworkServiceConfigUpdatePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ExchangeLanNetworkServicePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ExternalReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ExternalReferencePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.Facility.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.FacilityPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.HealthResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.HealthResponsePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.IXPSpecificFeatureFlag.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.IXPSpecificFeatureFlagPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ImplementationResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ImplementationResponsePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.Invoiceable.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.InvoiceablePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.IpAddress.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.IpAddressPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.IpAddressRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.IpAddressRequestPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.IpAddressUpdate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.IpAddressUpdatePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.MP2MPNetworkProductOffering.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.MP2MPNetworkProductOfferingPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.MP2MPNetworkService.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.MP2MPNetworkServiceConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.MP2MPNetworkServiceConfigPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.MP2MPNetworkServiceConfigRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.MP2MPNetworkServiceConfigRequestPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.MP2MPNetworkServiceConfigUpdate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.MP2MPNetworkServiceConfigUpdatePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.MP2MPNetworkServicePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.MP2MPNetworkServiceRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.MP2MPNetworkServiceRequestPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.MacAddress.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.MacAddressPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.MacAddressRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.MacAddressRequestPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.Manageable.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ManageablePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.MemberJoiningRule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.MemberJoiningRulePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.MemberJoiningRuleRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.MemberJoiningRuleRequestPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.MemberJoiningRuleUpdate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.MemberJoiningRuleUpdatePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.MetroArea.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.MetroAreaNetwork.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.MetroAreaNetworkPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.MetroAreaPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NetworkFeature.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NetworkFeatureConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NetworkFeatureConfigPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NetworkFeatureConfigRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NetworkFeatureConfigRequestPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NetworkFeatureConfigUpdate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NetworkFeatureConfigUpdatePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NetworkFeaturePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NetworkService.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NetworkServiceChangeRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NetworkServiceChangeRequestPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NetworkServiceConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NetworkServiceConfigPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NetworkServiceConfigRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NetworkServiceConfigRequestPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NetworkServiceConfigUpdate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NetworkServiceConfigUpdatePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NetworkServiceConfigsDestroy400Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NetworkServiceDeleteResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NetworkServiceDeleteResponsePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NetworkServicePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NetworkServiceRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.NetworkServiceRequestPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.Ownable.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.OwnablePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.P2MPNetworkProductOffering.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.P2MPNetworkProductOfferingPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.P2MPNetworkService.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.P2MPNetworkServiceConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.P2MPNetworkServiceConfigPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.P2MPNetworkServiceConfigRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.P2MPNetworkServiceConfigRequestPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.P2MPNetworkServiceConfigUpdate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.P2MPNetworkServiceConfigUpdatePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.P2MPNetworkServicePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.P2MPNetworkServiceRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.P2MPNetworkServiceRequestPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.P2PNetworkProductOffering.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.P2PNetworkProductOfferingPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.P2PNetworkService.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.P2PNetworkServiceConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.P2PNetworkServiceConfigPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.P2PNetworkServiceConfigRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.P2PNetworkServiceConfigRequestPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.P2PNetworkServiceConfigUpdate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.P2PNetworkServiceConfigUpdatePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.P2PNetworkServicePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.P2PNetworkServiceRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.P2PNetworkServiceRequestPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PointOfPresence.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PointOfPresencePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.Port.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PortPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PortRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PortRequestPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PortUpdate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.PortUpdatePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ProblemResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ProblemResponsePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ProductOffering.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.ProductOfferingPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RateLimitedNetworkServiceConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RateLimitedNetworkServiceConfigPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RefreshTokenRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RefreshTokenRequestPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.Role.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RoleAssignment.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RoleAssignmentPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RoleAssignmentRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RoleAssignmentRequestPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RoleAssignmentUpdate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RoleAssignmentUpdatePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RoleAssignmentsCreate400Response.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RolePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RoleRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RoleRequestPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RoleUpdate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RoleUpdatePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RouteServerNetworkFeature.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RouteServerNetworkFeatureConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RouteServerNetworkFeatureConfigPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RouteServerNetworkFeatureConfigRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RouteServerNetworkFeatureConfigRequestPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RouteServerNetworkFeatureConfigUpdate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RouteServerNetworkFeatureConfigUpdatePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.RouteServerNetworkFeaturePartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.Stateful.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.StatefulPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.Status.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.StatusPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.VLanConfigDot1Q.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.VLanConfigDot1QPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.VLanConfigPort.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.VLanConfigPortPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.VLanConfigQinQ.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.VLanConfigQinQPartial.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.VlanConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new org.openapitools.client.model.VlanConfigPartial.CustomTypeAdapterFactory());
        gson = gsonBuilder.create();
    }

    /**
     * Get Gson.
     *
     * @return Gson
     */
    public static Gson getGson() {
        return gson;
    }

    /**
     * Set Gson.
     *
     * @param gson Gson
     */
    public static void setGson(Gson gson) {
        JSON.gson = gson;
    }

    public static void setLenientOnJson(boolean lenientOnJson) {
        isLenientOnJson = lenientOnJson;
    }

    /**
     * Serialize the given Java object into JSON string.
     *
     * @param obj Object
     * @return String representation of the JSON
     */
    public static String serialize(Object obj) {
        return gson.toJson(obj);
    }

    /**
     * Deserialize the given JSON string to Java object.
     *
     * @param <T>        Type
     * @param body       The JSON string
     * @param returnType The type to deserialize into
     * @return The deserialized Java object
     */
    @SuppressWarnings("unchecked")
    public static <T> T deserialize(String body, Type returnType) {
        try {
            if (isLenientOnJson) {
                JsonReader jsonReader = new JsonReader(new StringReader(body));
                // see https://google-gson.googlecode.com/svn/trunk/gson/docs/javadocs/com/google/gson/stream/JsonReader.html#setLenient(boolean)
                jsonReader.setLenient(true);
                return gson.fromJson(jsonReader, returnType);
            } else {
                return gson.fromJson(body, returnType);
            }
        } catch (JsonParseException e) {
            // Fallback processing when failed to parse JSON form response body:
            // return the response body string directly for the String return type;
            if (returnType.equals(String.class)) {
                return (T) body;
            } else {
                throw (e);
            }
        }
    }

    /**
     * Gson TypeAdapter for Byte Array type
     */
    public static class ByteArrayAdapter extends TypeAdapter<byte[]> {

        @Override
        public void write(JsonWriter out, byte[] value) throws IOException {
            if (value == null) {
                out.nullValue();
            } else {
                out.value(ByteString.of(value).base64());
            }
        }

        @Override
        public byte[] read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String bytesAsBase64 = in.nextString();
                    ByteString byteString = ByteString.decodeBase64(bytesAsBase64);
                    return byteString.toByteArray();
            }
        }
    }

    /**
     * Gson TypeAdapter for JSR310 OffsetDateTime type
     */
    public static class OffsetDateTimeTypeAdapter extends TypeAdapter<OffsetDateTime> {

        private DateTimeFormatter formatter;

        public OffsetDateTimeTypeAdapter() {
            this(DateTimeFormatter.ISO_OFFSET_DATE_TIME);
        }

        public OffsetDateTimeTypeAdapter(DateTimeFormatter formatter) {
            this.formatter = formatter;
        }

        public void setFormat(DateTimeFormatter dateFormat) {
            this.formatter = dateFormat;
        }

        @Override
        public void write(JsonWriter out, OffsetDateTime date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                out.value(formatter.format(date));
            }
        }

        @Override
        public OffsetDateTime read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    if (date.endsWith("+0000")) {
                        date = date.substring(0, date.length()-5) + "Z";
                    }
                    return OffsetDateTime.parse(date, formatter);
            }
        }
    }

    /**
     * Gson TypeAdapter for JSR310 LocalDate type
     */
    public static class LocalDateTypeAdapter extends TypeAdapter<LocalDate> {

        private DateTimeFormatter formatter;

        public LocalDateTypeAdapter() {
            this(DateTimeFormatter.ISO_LOCAL_DATE);
        }

        public LocalDateTypeAdapter(DateTimeFormatter formatter) {
            this.formatter = formatter;
        }

        public void setFormat(DateTimeFormatter dateFormat) {
            this.formatter = dateFormat;
        }

        @Override
        public void write(JsonWriter out, LocalDate date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                out.value(formatter.format(date));
            }
        }

        @Override
        public LocalDate read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    return LocalDate.parse(date, formatter);
            }
        }
    }

    public static void setOffsetDateTimeFormat(DateTimeFormatter dateFormat) {
        offsetDateTimeTypeAdapter.setFormat(dateFormat);
    }

    public static void setLocalDateFormat(DateTimeFormatter dateFormat) {
        localDateTypeAdapter.setFormat(dateFormat);
    }

    /**
     * Gson TypeAdapter for java.sql.Date type
     * If the dateFormat is null, a simple "yyyy-MM-dd" format will be used
     * (more efficient than SimpleDateFormat).
     */
    public static class SqlDateTypeAdapter extends TypeAdapter<java.sql.Date> {

        private DateFormat dateFormat;

        public SqlDateTypeAdapter() {}

        public SqlDateTypeAdapter(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        public void setFormat(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        @Override
        public void write(JsonWriter out, java.sql.Date date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                String value;
                if (dateFormat != null) {
                    value = dateFormat.format(date);
                } else {
                    value = date.toString();
                }
                out.value(value);
            }
        }

        @Override
        public java.sql.Date read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    try {
                        if (dateFormat != null) {
                            return new java.sql.Date(dateFormat.parse(date).getTime());
                        }
                        return new java.sql.Date(ISO8601Utils.parse(date, new ParsePosition(0)).getTime());
                    } catch (ParseException e) {
                        throw new JsonParseException(e);
                    }
            }
        }
    }

    /**
     * Gson TypeAdapter for java.util.Date type
     * If the dateFormat is null, ISO8601Utils will be used.
     */
    public static class DateTypeAdapter extends TypeAdapter<Date> {

        private DateFormat dateFormat;

        public DateTypeAdapter() {}

        public DateTypeAdapter(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        public void setFormat(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        @Override
        public void write(JsonWriter out, Date date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                String value;
                if (dateFormat != null) {
                    value = dateFormat.format(date);
                } else {
                    value = ISO8601Utils.format(date, true);
                }
                out.value(value);
            }
        }

        @Override
        public Date read(JsonReader in) throws IOException {
            try {
                switch (in.peek()) {
                    case NULL:
                        in.nextNull();
                        return null;
                    default:
                        String date = in.nextString();
                        try {
                            if (dateFormat != null) {
                                return dateFormat.parse(date);
                            }
                            return ISO8601Utils.parse(date, new ParsePosition(0));
                        } catch (ParseException e) {
                            throw new JsonParseException(e);
                        }
                }
            } catch (IllegalArgumentException e) {
                throw new JsonParseException(e);
            }
        }
    }

    public static void setDateFormat(DateFormat dateFormat) {
        dateTypeAdapter.setFormat(dateFormat);
    }

    public static void setSqlDateFormat(DateFormat dateFormat) {
        sqlDateTypeAdapter.setFormat(dateFormat);
    }
}
