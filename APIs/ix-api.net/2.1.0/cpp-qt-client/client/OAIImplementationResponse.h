/**
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImplementationResponse.h
 *
 * 
 */

#ifndef OAIImplementationResponse_H
#define OAIImplementationResponse_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIImplementationResponse : public OAIObject {
public:
    OAIImplementationResponse();
    OAIImplementationResponse(QString json);
    ~OAIImplementationResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getSchemaVersion() const;
    void setSchemaVersion(const QString &schema_version);
    bool is_schema_version_Set() const;
    bool is_schema_version_Valid() const;

    QString getServiceVersion() const;
    void setServiceVersion(const QString &service_version);
    bool is_service_version_Set() const;
    bool is_service_version_Valid() const;

    QList<QString> getSupportedNetworkFeatureConfigTypes() const;
    void setSupportedNetworkFeatureConfigTypes(const QList<QString> &supported_network_feature_config_types);
    bool is_supported_network_feature_config_types_Set() const;
    bool is_supported_network_feature_config_types_Valid() const;

    QList<QString> getSupportedNetworkFeatureTypes() const;
    void setSupportedNetworkFeatureTypes(const QList<QString> &supported_network_feature_types);
    bool is_supported_network_feature_types_Set() const;
    bool is_supported_network_feature_types_Valid() const;

    QList<QString> getSupportedNetworkServiceConfigTypes() const;
    void setSupportedNetworkServiceConfigTypes(const QList<QString> &supported_network_service_config_types);
    bool is_supported_network_service_config_types_Set() const;
    bool is_supported_network_service_config_types_Valid() const;

    QList<QString> getSupportedNetworkServiceTypes() const;
    void setSupportedNetworkServiceTypes(const QList<QString> &supported_network_service_types);
    bool is_supported_network_service_types_Set() const;
    bool is_supported_network_service_types_Valid() const;

    QList<QString> getSupportedOperations() const;
    void setSupportedOperations(const QList<QString> &supported_operations);
    bool is_supported_operations_Set() const;
    bool is_supported_operations_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_schema_version;
    bool m_schema_version_isSet;
    bool m_schema_version_isValid;

    QString m_service_version;
    bool m_service_version_isSet;
    bool m_service_version_isValid;

    QList<QString> m_supported_network_feature_config_types;
    bool m_supported_network_feature_config_types_isSet;
    bool m_supported_network_feature_config_types_isValid;

    QList<QString> m_supported_network_feature_types;
    bool m_supported_network_feature_types_isSet;
    bool m_supported_network_feature_types_isValid;

    QList<QString> m_supported_network_service_config_types;
    bool m_supported_network_service_config_types_isSet;
    bool m_supported_network_service_config_types_isValid;

    QList<QString> m_supported_network_service_types;
    bool m_supported_network_service_types_isSet;
    bool m_supported_network_service_types_isValid;

    QList<QString> m_supported_operations;
    bool m_supported_operations_isSet;
    bool m_supported_operations_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImplementationResponse)

#endif // OAIImplementationResponse_H
