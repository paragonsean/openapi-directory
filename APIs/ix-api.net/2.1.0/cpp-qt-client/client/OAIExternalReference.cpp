/**
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExternalReference.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExternalReference::OAIExternalReference(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExternalReference::OAIExternalReference() {
    this->initializeModel();
}

OAIExternalReference::~OAIExternalReference() {}

void OAIExternalReference::initializeModel() {

    m_external_ref_isSet = false;
    m_external_ref_isValid = false;
}

void OAIExternalReference::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExternalReference::fromJsonObject(QJsonObject json) {

    m_external_ref_isValid = ::OpenAPI::fromJsonValue(m_external_ref, json[QString("external_ref")]);
    m_external_ref_isSet = !json[QString("external_ref")].isNull() && m_external_ref_isValid;
}

QString OAIExternalReference::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExternalReference::asJsonObject() const {
    QJsonObject obj;
    if (m_external_ref_isSet) {
        obj.insert(QString("external_ref"), ::OpenAPI::toJsonValue(m_external_ref));
    }
    return obj;
}

QString OAIExternalReference::getExternalRef() const {
    return m_external_ref;
}
void OAIExternalReference::setExternalRef(const QString &external_ref) {
    m_external_ref = external_ref;
    m_external_ref_isSet = true;
}

bool OAIExternalReference::is_external_ref_Set() const{
    return m_external_ref_isSet;
}

bool OAIExternalReference::is_external_ref_Valid() const{
    return m_external_ref_isValid;
}

bool OAIExternalReference::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_external_ref_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExternalReference::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
