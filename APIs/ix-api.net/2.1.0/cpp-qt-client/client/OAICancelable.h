/**
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICancelable.h
 *
 * 
 */

#ifndef OAICancelable_H
#define OAICancelable_H

#include <QJsonObject>

#include <QDate>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICancelable : public OAIObject {
public:
    OAICancelable();
    OAICancelable(QString json);
    ~OAICancelable() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDate getChargedUntil() const;
    void setChargedUntil(const QDate &charged_until);
    bool is_charged_until_Set() const;
    bool is_charged_until_Valid() const;

    QDate getDecommissionAt() const;
    void setDecommissionAt(const QDate &decommission_at);
    bool is_decommission_at_Set() const;
    bool is_decommission_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDate m_charged_until;
    bool m_charged_until_isSet;
    bool m_charged_until_isValid;

    QDate m_decommission_at;
    bool m_decommission_at_isSet;
    bool m_decommission_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICancelable)

#endif // OAICancelable_H
