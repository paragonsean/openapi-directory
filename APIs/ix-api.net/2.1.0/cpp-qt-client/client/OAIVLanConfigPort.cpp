/**
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVLanConfigPort.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVLanConfigPort::OAIVLanConfigPort(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVLanConfigPort::OAIVLanConfigPort() {
    this->initializeModel();
}

OAIVLanConfigPort::~OAIVLanConfigPort() {}

void OAIVLanConfigPort::initializeModel() {

    m_vlan_type_isSet = false;
    m_vlan_type_isValid = false;
}

void OAIVLanConfigPort::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVLanConfigPort::fromJsonObject(QJsonObject json) {

    m_vlan_type_isValid = ::OpenAPI::fromJsonValue(m_vlan_type, json[QString("vlan_type")]);
    m_vlan_type_isSet = !json[QString("vlan_type")].isNull() && m_vlan_type_isValid;
}

QString OAIVLanConfigPort::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVLanConfigPort::asJsonObject() const {
    QJsonObject obj;
    if (m_vlan_type_isSet) {
        obj.insert(QString("vlan_type"), ::OpenAPI::toJsonValue(m_vlan_type));
    }
    return obj;
}

QString OAIVLanConfigPort::getVlanType() const {
    return m_vlan_type;
}
void OAIVLanConfigPort::setVlanType(const QString &vlan_type) {
    m_vlan_type = vlan_type;
    m_vlan_type_isSet = true;
}

bool OAIVLanConfigPort::is_vlan_type_Set() const{
    return m_vlan_type_isSet;
}

bool OAIVLanConfigPort::is_vlan_type_Valid() const{
    return m_vlan_type_isValid;
}

bool OAIVLanConfigPort::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_vlan_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVLanConfigPort::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_vlan_type_isValid && true;
}

} // namespace OpenAPI
