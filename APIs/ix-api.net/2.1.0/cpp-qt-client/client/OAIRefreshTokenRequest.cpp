/**
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRefreshTokenRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRefreshTokenRequest::OAIRefreshTokenRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRefreshTokenRequest::OAIRefreshTokenRequest() {
    this->initializeModel();
}

OAIRefreshTokenRequest::~OAIRefreshTokenRequest() {}

void OAIRefreshTokenRequest::initializeModel() {

    m_refresh_token_isSet = false;
    m_refresh_token_isValid = false;
}

void OAIRefreshTokenRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRefreshTokenRequest::fromJsonObject(QJsonObject json) {

    m_refresh_token_isValid = ::OpenAPI::fromJsonValue(m_refresh_token, json[QString("refresh_token")]);
    m_refresh_token_isSet = !json[QString("refresh_token")].isNull() && m_refresh_token_isValid;
}

QString OAIRefreshTokenRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRefreshTokenRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_refresh_token_isSet) {
        obj.insert(QString("refresh_token"), ::OpenAPI::toJsonValue(m_refresh_token));
    }
    return obj;
}

QString OAIRefreshTokenRequest::getRefreshToken() const {
    return m_refresh_token;
}
void OAIRefreshTokenRequest::setRefreshToken(const QString &refresh_token) {
    m_refresh_token = refresh_token;
    m_refresh_token_isSet = true;
}

bool OAIRefreshTokenRequest::is_refresh_token_Set() const{
    return m_refresh_token_isSet;
}

bool OAIRefreshTokenRequest::is_refresh_token_Valid() const{
    return m_refresh_token_isValid;
}

bool OAIRefreshTokenRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_refresh_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRefreshTokenRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_refresh_token_isValid && true;
}

} // namespace OpenAPI
