/**
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeviceCapabilityPartial.h
 *
 * Device Capability
 */

#ifndef OAIDeviceCapabilityPartial_H
#define OAIDeviceCapabilityPartial_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDeviceCapabilityPartial : public OAIObject {
public:
    OAIDeviceCapabilityPartial();
    OAIDeviceCapabilityPartial(QString json);
    ~OAIDeviceCapabilityPartial() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAvailability() const;
    void setAvailability(const qint32 &availability);
    bool is_availability_Set() const;
    bool is_availability_Valid() const;

    qint32 getMaxLag() const;
    void setMaxLag(const qint32 &max_lag);
    bool is_max_lag_Set() const;
    bool is_max_lag_Valid() const;

    QString getMediaType() const;
    void setMediaType(const QString &media_type);
    bool is_media_type_Set() const;
    bool is_media_type_Valid() const;

    qint32 getSpeed() const;
    void setSpeed(const qint32 &speed);
    bool is_speed_Set() const;
    bool is_speed_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_availability;
    bool m_availability_isSet;
    bool m_availability_isValid;

    qint32 m_max_lag;
    bool m_max_lag_isSet;
    bool m_max_lag_isValid;

    QString m_media_type;
    bool m_media_type_isSet;
    bool m_media_type_isValid;

    qint32 m_speed;
    bool m_speed_isSet;
    bool m_speed_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeviceCapabilityPartial)

#endif // OAIDeviceCapabilityPartial_H
