/**
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINetworkFeatureConfig.h
 *
 * Polymorphic Network Feature Config
 */

#ifndef OAINetworkFeatureConfig_H
#define OAINetworkFeatureConfig_H

#include <QJsonObject>

#include "OAIRouteServerNetworkFeatureConfig.h"
#include "OAIStatus.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStatus;

class OAINetworkFeatureConfig : public OAIObject {
public:
    OAINetworkFeatureConfig();
    OAINetworkFeatureConfig(QString json);
    ~OAINetworkFeatureConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAsSetV4() const;
    void setAsSetV4(const QString &as_set_v4);
    bool is_as_set_v4_Set() const;
    bool is_as_set_v4_Valid() const;

    QString getAsSetV6() const;
    void setAsSetV6(const QString &as_set_v6);
    bool is_as_set_v6_Set() const;
    bool is_as_set_v6_Valid() const;

    qint64 getAsn() const;
    void setAsn(const qint64 &asn);
    bool is_asn_Set() const;
    bool is_asn_Valid() const;

    QString getBgpSessionType() const;
    void setBgpSessionType(const QString &bgp_session_type);
    bool is_bgp_session_type_Set() const;
    bool is_bgp_session_type_Valid() const;

    QString getBillingAccount() const;
    void setBillingAccount(const QString &billing_account);
    bool is_billing_account_Set() const;
    bool is_billing_account_Valid() const;

    QString getConsumingAccount() const;
    void setConsumingAccount(const QString &consuming_account);
    bool is_consuming_account_Set() const;
    bool is_consuming_account_Valid() const;

    QString getContractRef() const;
    void setContractRef(const QString &contract_ref);
    bool is_contract_ref_Set() const;
    bool is_contract_ref_Valid() const;

    QString getExternalRef() const;
    void setExternalRef(const QString &external_ref);
    bool is_external_ref_Set() const;
    bool is_external_ref_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isInsertIxpAsn() const;
    void setInsertIxpAsn(const bool &insert_ixp_asn);
    bool is_insert_ixp_asn_Set() const;
    bool is_insert_ixp_asn_Valid() const;

    QString getIp() const;
    void setIp(const QString &ip);
    bool is_ip_Set() const;
    bool is_ip_Valid() const;

    QString getManagingAccount() const;
    void setManagingAccount(const QString &managing_account);
    bool is_managing_account_Set() const;
    bool is_managing_account_Valid() const;

    qint32 getMaxPrefixV4() const;
    void setMaxPrefixV4(const qint32 &max_prefix_v4);
    bool is_max_prefix_v4_Set() const;
    bool is_max_prefix_v4_Valid() const;

    qint32 getMaxPrefixV6() const;
    void setMaxPrefixV6(const qint32 &max_prefix_v6);
    bool is_max_prefix_v6_Set() const;
    bool is_max_prefix_v6_Valid() const;

    QString getNetworkFeature() const;
    void setNetworkFeature(const QString &network_feature);
    bool is_network_feature_Set() const;
    bool is_network_feature_Valid() const;

    QString getNetworkServiceConfig() const;
    void setNetworkServiceConfig(const QString &network_service_config);
    bool is_network_service_config_Set() const;
    bool is_network_service_config_Valid() const;

    QString getPassword() const;
    void setPassword(const QString &password);
    bool is_password_Set() const;
    bool is_password_Valid() const;

    QString getPurchaseOrder() const;
    void setPurchaseOrder(const QString &purchase_order);
    bool is_purchase_order_Set() const;
    bool is_purchase_order_Valid() const;

    QList<QString> getRoleAssignments() const;
    void setRoleAssignments(const QList<QString> &role_assignments);
    bool is_role_assignments_Set() const;
    bool is_role_assignments_Valid() const;

    QString getSessionMode() const;
    void setSessionMode(const QString &session_mode);
    bool is_session_mode_Set() const;
    bool is_session_mode_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QList<OAIStatus> getStatus() const;
    void setStatus(const QList<OAIStatus> &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_as_set_v4;
    bool m_as_set_v4_isSet;
    bool m_as_set_v4_isValid;

    QString m_as_set_v6;
    bool m_as_set_v6_isSet;
    bool m_as_set_v6_isValid;

    qint64 m_asn;
    bool m_asn_isSet;
    bool m_asn_isValid;

    QString m_bgp_session_type;
    bool m_bgp_session_type_isSet;
    bool m_bgp_session_type_isValid;

    QString m_billing_account;
    bool m_billing_account_isSet;
    bool m_billing_account_isValid;

    QString m_consuming_account;
    bool m_consuming_account_isSet;
    bool m_consuming_account_isValid;

    QString m_contract_ref;
    bool m_contract_ref_isSet;
    bool m_contract_ref_isValid;

    QString m_external_ref;
    bool m_external_ref_isSet;
    bool m_external_ref_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_insert_ixp_asn;
    bool m_insert_ixp_asn_isSet;
    bool m_insert_ixp_asn_isValid;

    QString m_ip;
    bool m_ip_isSet;
    bool m_ip_isValid;

    QString m_managing_account;
    bool m_managing_account_isSet;
    bool m_managing_account_isValid;

    qint32 m_max_prefix_v4;
    bool m_max_prefix_v4_isSet;
    bool m_max_prefix_v4_isValid;

    qint32 m_max_prefix_v6;
    bool m_max_prefix_v6_isSet;
    bool m_max_prefix_v6_isValid;

    QString m_network_feature;
    bool m_network_feature_isSet;
    bool m_network_feature_isValid;

    QString m_network_service_config;
    bool m_network_service_config_isSet;
    bool m_network_service_config_isValid;

    QString m_password;
    bool m_password_isSet;
    bool m_password_isValid;

    QString m_purchase_order;
    bool m_purchase_order_isSet;
    bool m_purchase_order_isValid;

    QList<QString> m_role_assignments;
    bool m_role_assignments_isSet;
    bool m_role_assignments_isValid;

    QString m_session_mode;
    bool m_session_mode_isSet;
    bool m_session_mode_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QList<OAIStatus> m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINetworkFeatureConfig)

#endif // OAINetworkFeatureConfig_H
