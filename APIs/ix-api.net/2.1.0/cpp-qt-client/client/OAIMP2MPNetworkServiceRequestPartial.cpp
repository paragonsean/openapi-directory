/**
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMP2MPNetworkServiceRequestPartial.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMP2MPNetworkServiceRequestPartial::OAIMP2MPNetworkServiceRequestPartial(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMP2MPNetworkServiceRequestPartial::OAIMP2MPNetworkServiceRequestPartial() {
    this->initializeModel();
}

OAIMP2MPNetworkServiceRequestPartial::~OAIMP2MPNetworkServiceRequestPartial() {}

void OAIMP2MPNetworkServiceRequestPartial::initializeModel() {

    m_billing_account_isSet = false;
    m_billing_account_isValid = false;

    m_consuming_account_isSet = false;
    m_consuming_account_isValid = false;

    m_contract_ref_isSet = false;
    m_contract_ref_isValid = false;

    m_external_ref_isSet = false;
    m_external_ref_isValid = false;

    m_managing_account_isSet = false;
    m_managing_account_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_product_offering_isSet = false;
    m_product_offering_isValid = false;

    m_r_public_isSet = false;
    m_r_public_isValid = false;

    m_purchase_order_isSet = false;
    m_purchase_order_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIMP2MPNetworkServiceRequestPartial::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMP2MPNetworkServiceRequestPartial::fromJsonObject(QJsonObject json) {

    m_billing_account_isValid = ::OpenAPI::fromJsonValue(m_billing_account, json[QString("billing_account")]);
    m_billing_account_isSet = !json[QString("billing_account")].isNull() && m_billing_account_isValid;

    m_consuming_account_isValid = ::OpenAPI::fromJsonValue(m_consuming_account, json[QString("consuming_account")]);
    m_consuming_account_isSet = !json[QString("consuming_account")].isNull() && m_consuming_account_isValid;

    m_contract_ref_isValid = ::OpenAPI::fromJsonValue(m_contract_ref, json[QString("contract_ref")]);
    m_contract_ref_isSet = !json[QString("contract_ref")].isNull() && m_contract_ref_isValid;

    m_external_ref_isValid = ::OpenAPI::fromJsonValue(m_external_ref, json[QString("external_ref")]);
    m_external_ref_isSet = !json[QString("external_ref")].isNull() && m_external_ref_isValid;

    m_managing_account_isValid = ::OpenAPI::fromJsonValue(m_managing_account, json[QString("managing_account")]);
    m_managing_account_isSet = !json[QString("managing_account")].isNull() && m_managing_account_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_product_offering_isValid = ::OpenAPI::fromJsonValue(m_product_offering, json[QString("product_offering")]);
    m_product_offering_isSet = !json[QString("product_offering")].isNull() && m_product_offering_isValid;

    m_r_public_isValid = ::OpenAPI::fromJsonValue(m_r_public, json[QString("public")]);
    m_r_public_isSet = !json[QString("public")].isNull() && m_r_public_isValid;

    m_purchase_order_isValid = ::OpenAPI::fromJsonValue(m_purchase_order, json[QString("purchase_order")]);
    m_purchase_order_isSet = !json[QString("purchase_order")].isNull() && m_purchase_order_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIMP2MPNetworkServiceRequestPartial::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMP2MPNetworkServiceRequestPartial::asJsonObject() const {
    QJsonObject obj;
    if (m_billing_account_isSet) {
        obj.insert(QString("billing_account"), ::OpenAPI::toJsonValue(m_billing_account));
    }
    if (m_consuming_account_isSet) {
        obj.insert(QString("consuming_account"), ::OpenAPI::toJsonValue(m_consuming_account));
    }
    if (m_contract_ref_isSet) {
        obj.insert(QString("contract_ref"), ::OpenAPI::toJsonValue(m_contract_ref));
    }
    if (m_external_ref_isSet) {
        obj.insert(QString("external_ref"), ::OpenAPI::toJsonValue(m_external_ref));
    }
    if (m_managing_account_isSet) {
        obj.insert(QString("managing_account"), ::OpenAPI::toJsonValue(m_managing_account));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_product_offering_isSet) {
        obj.insert(QString("product_offering"), ::OpenAPI::toJsonValue(m_product_offering));
    }
    if (m_r_public_isSet) {
        obj.insert(QString("public"), ::OpenAPI::toJsonValue(m_r_public));
    }
    if (m_purchase_order_isSet) {
        obj.insert(QString("purchase_order"), ::OpenAPI::toJsonValue(m_purchase_order));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIMP2MPNetworkServiceRequestPartial::getBillingAccount() const {
    return m_billing_account;
}
void OAIMP2MPNetworkServiceRequestPartial::setBillingAccount(const QString &billing_account) {
    m_billing_account = billing_account;
    m_billing_account_isSet = true;
}

bool OAIMP2MPNetworkServiceRequestPartial::is_billing_account_Set() const{
    return m_billing_account_isSet;
}

bool OAIMP2MPNetworkServiceRequestPartial::is_billing_account_Valid() const{
    return m_billing_account_isValid;
}

QString OAIMP2MPNetworkServiceRequestPartial::getConsumingAccount() const {
    return m_consuming_account;
}
void OAIMP2MPNetworkServiceRequestPartial::setConsumingAccount(const QString &consuming_account) {
    m_consuming_account = consuming_account;
    m_consuming_account_isSet = true;
}

bool OAIMP2MPNetworkServiceRequestPartial::is_consuming_account_Set() const{
    return m_consuming_account_isSet;
}

bool OAIMP2MPNetworkServiceRequestPartial::is_consuming_account_Valid() const{
    return m_consuming_account_isValid;
}

QString OAIMP2MPNetworkServiceRequestPartial::getContractRef() const {
    return m_contract_ref;
}
void OAIMP2MPNetworkServiceRequestPartial::setContractRef(const QString &contract_ref) {
    m_contract_ref = contract_ref;
    m_contract_ref_isSet = true;
}

bool OAIMP2MPNetworkServiceRequestPartial::is_contract_ref_Set() const{
    return m_contract_ref_isSet;
}

bool OAIMP2MPNetworkServiceRequestPartial::is_contract_ref_Valid() const{
    return m_contract_ref_isValid;
}

QString OAIMP2MPNetworkServiceRequestPartial::getExternalRef() const {
    return m_external_ref;
}
void OAIMP2MPNetworkServiceRequestPartial::setExternalRef(const QString &external_ref) {
    m_external_ref = external_ref;
    m_external_ref_isSet = true;
}

bool OAIMP2MPNetworkServiceRequestPartial::is_external_ref_Set() const{
    return m_external_ref_isSet;
}

bool OAIMP2MPNetworkServiceRequestPartial::is_external_ref_Valid() const{
    return m_external_ref_isValid;
}

QString OAIMP2MPNetworkServiceRequestPartial::getManagingAccount() const {
    return m_managing_account;
}
void OAIMP2MPNetworkServiceRequestPartial::setManagingAccount(const QString &managing_account) {
    m_managing_account = managing_account;
    m_managing_account_isSet = true;
}

bool OAIMP2MPNetworkServiceRequestPartial::is_managing_account_Set() const{
    return m_managing_account_isSet;
}

bool OAIMP2MPNetworkServiceRequestPartial::is_managing_account_Valid() const{
    return m_managing_account_isValid;
}

QString OAIMP2MPNetworkServiceRequestPartial::getName() const {
    return m_name;
}
void OAIMP2MPNetworkServiceRequestPartial::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIMP2MPNetworkServiceRequestPartial::is_name_Set() const{
    return m_name_isSet;
}

bool OAIMP2MPNetworkServiceRequestPartial::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIMP2MPNetworkServiceRequestPartial::getProductOffering() const {
    return m_product_offering;
}
void OAIMP2MPNetworkServiceRequestPartial::setProductOffering(const QString &product_offering) {
    m_product_offering = product_offering;
    m_product_offering_isSet = true;
}

bool OAIMP2MPNetworkServiceRequestPartial::is_product_offering_Set() const{
    return m_product_offering_isSet;
}

bool OAIMP2MPNetworkServiceRequestPartial::is_product_offering_Valid() const{
    return m_product_offering_isValid;
}

bool OAIMP2MPNetworkServiceRequestPartial::isRPublic() const {
    return m_r_public;
}
void OAIMP2MPNetworkServiceRequestPartial::setRPublic(const bool &r_public) {
    m_r_public = r_public;
    m_r_public_isSet = true;
}

bool OAIMP2MPNetworkServiceRequestPartial::is_r_public_Set() const{
    return m_r_public_isSet;
}

bool OAIMP2MPNetworkServiceRequestPartial::is_r_public_Valid() const{
    return m_r_public_isValid;
}

QString OAIMP2MPNetworkServiceRequestPartial::getPurchaseOrder() const {
    return m_purchase_order;
}
void OAIMP2MPNetworkServiceRequestPartial::setPurchaseOrder(const QString &purchase_order) {
    m_purchase_order = purchase_order;
    m_purchase_order_isSet = true;
}

bool OAIMP2MPNetworkServiceRequestPartial::is_purchase_order_Set() const{
    return m_purchase_order_isSet;
}

bool OAIMP2MPNetworkServiceRequestPartial::is_purchase_order_Valid() const{
    return m_purchase_order_isValid;
}

QString OAIMP2MPNetworkServiceRequestPartial::getType() const {
    return m_type;
}
void OAIMP2MPNetworkServiceRequestPartial::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIMP2MPNetworkServiceRequestPartial::is_type_Set() const{
    return m_type_isSet;
}

bool OAIMP2MPNetworkServiceRequestPartial::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIMP2MPNetworkServiceRequestPartial::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_billing_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_consuming_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contract_ref_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_ref_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_managing_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_offering_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_public_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_purchase_order_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMP2MPNetworkServiceRequestPartial::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_type_isValid && true;
}

} // namespace OpenAPI
