/**
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContactable.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContactable::OAIContactable(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContactable::OAIContactable() {
    this->initializeModel();
}

OAIContactable::~OAIContactable() {}

void OAIContactable::initializeModel() {

    m_role_assignments_isSet = false;
    m_role_assignments_isValid = false;
}

void OAIContactable::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContactable::fromJsonObject(QJsonObject json) {

    m_role_assignments_isValid = ::OpenAPI::fromJsonValue(m_role_assignments, json[QString("role_assignments")]);
    m_role_assignments_isSet = !json[QString("role_assignments")].isNull() && m_role_assignments_isValid;
}

QString OAIContactable::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContactable::asJsonObject() const {
    QJsonObject obj;
    if (m_role_assignments.size() > 0) {
        obj.insert(QString("role_assignments"), ::OpenAPI::toJsonValue(m_role_assignments));
    }
    return obj;
}

QList<QString> OAIContactable::getRoleAssignments() const {
    return m_role_assignments;
}
void OAIContactable::setRoleAssignments(const QList<QString> &role_assignments) {
    m_role_assignments = role_assignments;
    m_role_assignments_isSet = true;
}

bool OAIContactable::is_role_assignments_Set() const{
    return m_role_assignments_isSet;
}

bool OAIContactable::is_role_assignments_Valid() const{
    return m_role_assignments_isValid;
}

bool OAIContactable::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_role_assignments.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContactable::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_role_assignments_isValid && true;
}

} // namespace OpenAPI
