/**
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAccountRequestPartial.h
 *
 * Account Request
 */

#ifndef OAIAccountRequestPartial_H
#define OAIAccountRequestPartial_H

#include <QJsonObject>

#include "OAIAddress.h"
#include "OAIBillingInformation.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAddress;
class OAIBillingInformation;

class OAIAccountRequestPartial : public OAIObject {
public:
    OAIAccountRequestPartial();
    OAIAccountRequestPartial(QString json);
    ~OAIAccountRequestPartial() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAddress getAddress() const;
    void setAddress(const OAIAddress &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    OAIBillingInformation getBillingInformation() const;
    void setBillingInformation(const OAIBillingInformation &billing_information);
    bool is_billing_information_Set() const;
    bool is_billing_information_Valid() const;

    bool isDiscoverable() const;
    void setDiscoverable(const bool &discoverable);
    bool is_discoverable_Set() const;
    bool is_discoverable_Valid() const;

    QString getExternalRef() const;
    void setExternalRef(const QString &external_ref);
    bool is_external_ref_Set() const;
    bool is_external_ref_Valid() const;

    QString getLegalName() const;
    void setLegalName(const QString &legal_name);
    bool is_legal_name_Set() const;
    bool is_legal_name_Valid() const;

    QString getManagingAccount() const;
    void setManagingAccount(const QString &managing_account);
    bool is_managing_account_Set() const;
    bool is_managing_account_Valid() const;

    QList<QString> getMetroAreaNetworkPresence() const;
    void setMetroAreaNetworkPresence(const QList<QString> &metro_area_network_presence);
    bool is_metro_area_network_presence_Set() const;
    bool is_metro_area_network_presence_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAddress m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    OAIBillingInformation m_billing_information;
    bool m_billing_information_isSet;
    bool m_billing_information_isValid;

    bool m_discoverable;
    bool m_discoverable_isSet;
    bool m_discoverable_isValid;

    QString m_external_ref;
    bool m_external_ref_isSet;
    bool m_external_ref_isValid;

    QString m_legal_name;
    bool m_legal_name_isSet;
    bool m_legal_name_isValid;

    QString m_managing_account;
    bool m_managing_account_isSet;
    bool m_managing_account_isValid;

    QList<QString> m_metro_area_network_presence;
    bool m_metro_area_network_presence_isSet;
    bool m_metro_area_network_presence_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAccountRequestPartial)

#endif // OAIAccountRequestPartial_H
