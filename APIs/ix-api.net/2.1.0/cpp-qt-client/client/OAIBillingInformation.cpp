/**
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBillingInformation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBillingInformation::OAIBillingInformation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBillingInformation::OAIBillingInformation() {
    this->initializeModel();
}

OAIBillingInformation::~OAIBillingInformation() {}

void OAIBillingInformation::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_vat_number_isSet = false;
    m_vat_number_isValid = false;
}

void OAIBillingInformation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBillingInformation::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_vat_number_isValid = ::OpenAPI::fromJsonValue(m_vat_number, json[QString("vat_number")]);
    m_vat_number_isSet = !json[QString("vat_number")].isNull() && m_vat_number_isValid;
}

QString OAIBillingInformation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBillingInformation::asJsonObject() const {
    QJsonObject obj;
    if (m_address.isSet()) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_vat_number_isSet) {
        obj.insert(QString("vat_number"), ::OpenAPI::toJsonValue(m_vat_number));
    }
    return obj;
}

OAIAddress OAIBillingInformation::getAddress() const {
    return m_address;
}
void OAIBillingInformation::setAddress(const OAIAddress &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIBillingInformation::is_address_Set() const{
    return m_address_isSet;
}

bool OAIBillingInformation::is_address_Valid() const{
    return m_address_isValid;
}

QString OAIBillingInformation::getName() const {
    return m_name;
}
void OAIBillingInformation::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIBillingInformation::is_name_Set() const{
    return m_name_isSet;
}

bool OAIBillingInformation::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIBillingInformation::getVatNumber() const {
    return m_vat_number;
}
void OAIBillingInformation::setVatNumber(const QString &vat_number) {
    m_vat_number = vat_number;
    m_vat_number_isSet = true;
}

bool OAIBillingInformation::is_vat_number_Set() const{
    return m_vat_number_isSet;
}

bool OAIBillingInformation::is_vat_number_Valid() const{
    return m_vat_number_isValid;
}

bool OAIBillingInformation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vat_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBillingInformation::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_address_isValid && m_name_isValid && true;
}

} // namespace OpenAPI
