/**
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIpAddress.h
 *
 * 
 */

#ifndef OAIIpAddress_H
#define OAIIpAddress_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIpAddress : public OAIObject {
public:
    OAIIpAddress();
    OAIIpAddress(QString json);
    ~OAIIpAddress() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAddress() const;
    void setAddress(const QString &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    QString getConsumingAccount() const;
    void setConsumingAccount(const QString &consuming_account);
    bool is_consuming_account_Set() const;
    bool is_consuming_account_Valid() const;

    QString getExternalRef() const;
    void setExternalRef(const QString &external_ref);
    bool is_external_ref_Set() const;
    bool is_external_ref_Valid() const;

    QString getFqdn() const;
    void setFqdn(const QString &fqdn);
    bool is_fqdn_Set() const;
    bool is_fqdn_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getManagingAccount() const;
    void setManagingAccount(const QString &managing_account);
    bool is_managing_account_Set() const;
    bool is_managing_account_Valid() const;

    qint32 getPrefixLength() const;
    void setPrefixLength(const qint32 &prefix_length);
    bool is_prefix_length_Set() const;
    bool is_prefix_length_Valid() const;

    QDateTime getValidNotAfter() const;
    void setValidNotAfter(const QDateTime &valid_not_after);
    bool is_valid_not_after_Set() const;
    bool is_valid_not_after_Valid() const;

    QDateTime getValidNotBefore() const;
    void setValidNotBefore(const QDateTime &valid_not_before);
    bool is_valid_not_before_Set() const;
    bool is_valid_not_before_Valid() const;

    qint32 getVersion() const;
    void setVersion(const qint32 &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    QString m_consuming_account;
    bool m_consuming_account_isSet;
    bool m_consuming_account_isValid;

    QString m_external_ref;
    bool m_external_ref_isSet;
    bool m_external_ref_isValid;

    QString m_fqdn;
    bool m_fqdn_isSet;
    bool m_fqdn_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_managing_account;
    bool m_managing_account_isSet;
    bool m_managing_account_isValid;

    qint32 m_prefix_length;
    bool m_prefix_length_isSet;
    bool m_prefix_length_isValid;

    QDateTime m_valid_not_after;
    bool m_valid_not_after_isSet;
    bool m_valid_not_after_isValid;

    QDateTime m_valid_not_before;
    bool m_valid_not_before_isSet;
    bool m_valid_not_before_isValid;

    qint32 m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIpAddress)

#endif // OAIIpAddress_H
