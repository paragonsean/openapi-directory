/**
 * IX-API
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHealthResponsePartial.h
 *
 * Health Status Response
 */

#ifndef OAIHealthResponsePartial_H
#define OAIHealthResponsePartial_H

#include <QJsonObject>

#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIHealthResponsePartial : public OAIObject {
public:
    OAIHealthResponsePartial();
    OAIHealthResponsePartial(QString json);
    ~OAIHealthResponsePartial() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QMap<QString, QString>> getChecks() const;
    void setChecks(const QMap<QString, QMap<QString, QString>> &checks);
    bool is_checks_Set() const;
    bool is_checks_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QMap<QString, QString> getLinks() const;
    void setLinks(const QMap<QString, QString> &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    QList<QString> getNotes() const;
    void setNotes(const QList<QString> &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    QString getOutput() const;
    void setOutput(const QString &output);
    bool is_output_Set() const;
    bool is_output_Valid() const;

    QString getReleaseId() const;
    void setReleaseId(const QString &release_id);
    bool is_release_id_Set() const;
    bool is_release_id_Valid() const;

    QString getServiceId() const;
    void setServiceId(const QString &service_id);
    bool is_service_id_Set() const;
    bool is_service_id_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QMap<QString, QString>> m_checks;
    bool m_checks_isSet;
    bool m_checks_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QMap<QString, QString> m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    QList<QString> m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    QString m_output;
    bool m_output_isSet;
    bool m_output_isValid;

    QString m_release_id;
    bool m_release_id_isSet;
    bool m_release_id_isValid;

    QString m_service_id;
    bool m_service_id_isSet;
    bool m_service_id_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHealthResponsePartial)

#endif // OAIHealthResponsePartial_H
