# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VLanConfigPort(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, vlan_type: str=None):
        """VLanConfigPort - a model defined in OpenAPI

        :param vlan_type: The vlan_type of this VLanConfigPort.
        """
        self.openapi_types = {
            'vlan_type': str
        }

        self.attribute_map = {
            'vlan_type': 'vlan_type'
        }

        self._vlan_type = vlan_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VLanConfigPort':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VLanConfigPort of this VLanConfigPort.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def vlan_type(self):
        """Gets the vlan_type of this VLanConfigPort.


        :return: The vlan_type of this VLanConfigPort.
        :rtype: str
        """
        return self._vlan_type

    @vlan_type.setter
    def vlan_type(self, vlan_type):
        """Sets the vlan_type of this VLanConfigPort.


        :param vlan_type: The vlan_type of this VLanConfigPort.
        :type vlan_type: str
        """
        if vlan_type is None:
            raise ValueError("Invalid value for `vlan_type`, must not be `None`")

        self._vlan_type = vlan_type
