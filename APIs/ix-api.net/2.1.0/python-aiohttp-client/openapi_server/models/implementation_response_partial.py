# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ImplementationResponsePartial(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, schema_version: str=None, service_version: str=None, supported_network_feature_config_types: List[str]=None, supported_network_feature_types: List[str]=None, supported_network_service_config_types: List[str]=None, supported_network_service_types: List[str]=None, supported_operations: List[str]=None):
        """ImplementationResponsePartial - a model defined in OpenAPI

        :param schema_version: The schema_version of this ImplementationResponsePartial.
        :param service_version: The service_version of this ImplementationResponsePartial.
        :param supported_network_feature_config_types: The supported_network_feature_config_types of this ImplementationResponsePartial.
        :param supported_network_feature_types: The supported_network_feature_types of this ImplementationResponsePartial.
        :param supported_network_service_config_types: The supported_network_service_config_types of this ImplementationResponsePartial.
        :param supported_network_service_types: The supported_network_service_types of this ImplementationResponsePartial.
        :param supported_operations: The supported_operations of this ImplementationResponsePartial.
        """
        self.openapi_types = {
            'schema_version': str,
            'service_version': str,
            'supported_network_feature_config_types': List[str],
            'supported_network_feature_types': List[str],
            'supported_network_service_config_types': List[str],
            'supported_network_service_types': List[str],
            'supported_operations': List[str]
        }

        self.attribute_map = {
            'schema_version': 'schema_version',
            'service_version': 'service_version',
            'supported_network_feature_config_types': 'supported_network_feature_config_types',
            'supported_network_feature_types': 'supported_network_feature_types',
            'supported_network_service_config_types': 'supported_network_service_config_types',
            'supported_network_service_types': 'supported_network_service_types',
            'supported_operations': 'supported_operations'
        }

        self._schema_version = schema_version
        self._service_version = service_version
        self._supported_network_feature_config_types = supported_network_feature_config_types
        self._supported_network_feature_types = supported_network_feature_types
        self._supported_network_service_config_types = supported_network_service_config_types
        self._supported_network_service_types = supported_network_service_types
        self._supported_operations = supported_operations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImplementationResponsePartial':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImplementationResponsePartial of this ImplementationResponsePartial.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def schema_version(self):
        """Gets the schema_version of this ImplementationResponsePartial.

        Version of the implemented IX-API schema. 

        :return: The schema_version of this ImplementationResponsePartial.
        :rtype: str
        """
        return self._schema_version

    @schema_version.setter
    def schema_version(self, schema_version):
        """Sets the schema_version of this ImplementationResponsePartial.

        Version of the implemented IX-API schema. 

        :param schema_version: The schema_version of this ImplementationResponsePartial.
        :type schema_version: str
        """

        self._schema_version = schema_version

    @property
    def service_version(self):
        """Gets the service_version of this ImplementationResponsePartial.

        Version of the API service. 

        :return: The service_version of this ImplementationResponsePartial.
        :rtype: str
        """
        return self._service_version

    @service_version.setter
    def service_version(self, service_version):
        """Sets the service_version of this ImplementationResponsePartial.

        Version of the API service. 

        :param service_version: The service_version of this ImplementationResponsePartial.
        :type service_version: str
        """

        self._service_version = service_version

    @property
    def supported_network_feature_config_types(self):
        """Gets the supported_network_feature_config_types of this ImplementationResponsePartial.

        Array of supported network feature config types. 

        :return: The supported_network_feature_config_types of this ImplementationResponsePartial.
        :rtype: List[str]
        """
        return self._supported_network_feature_config_types

    @supported_network_feature_config_types.setter
    def supported_network_feature_config_types(self, supported_network_feature_config_types):
        """Sets the supported_network_feature_config_types of this ImplementationResponsePartial.

        Array of supported network feature config types. 

        :param supported_network_feature_config_types: The supported_network_feature_config_types of this ImplementationResponsePartial.
        :type supported_network_feature_config_types: List[str]
        """

        self._supported_network_feature_config_types = supported_network_feature_config_types

    @property
    def supported_network_feature_types(self):
        """Gets the supported_network_feature_types of this ImplementationResponsePartial.

        Array of supported network feature types. 

        :return: The supported_network_feature_types of this ImplementationResponsePartial.
        :rtype: List[str]
        """
        return self._supported_network_feature_types

    @supported_network_feature_types.setter
    def supported_network_feature_types(self, supported_network_feature_types):
        """Sets the supported_network_feature_types of this ImplementationResponsePartial.

        Array of supported network feature types. 

        :param supported_network_feature_types: The supported_network_feature_types of this ImplementationResponsePartial.
        :type supported_network_feature_types: List[str]
        """

        self._supported_network_feature_types = supported_network_feature_types

    @property
    def supported_network_service_config_types(self):
        """Gets the supported_network_service_config_types of this ImplementationResponsePartial.

        Array of supported network service config types. 

        :return: The supported_network_service_config_types of this ImplementationResponsePartial.
        :rtype: List[str]
        """
        return self._supported_network_service_config_types

    @supported_network_service_config_types.setter
    def supported_network_service_config_types(self, supported_network_service_config_types):
        """Sets the supported_network_service_config_types of this ImplementationResponsePartial.

        Array of supported network service config types. 

        :param supported_network_service_config_types: The supported_network_service_config_types of this ImplementationResponsePartial.
        :type supported_network_service_config_types: List[str]
        """

        self._supported_network_service_config_types = supported_network_service_config_types

    @property
    def supported_network_service_types(self):
        """Gets the supported_network_service_types of this ImplementationResponsePartial.

        Array of network service types, supported by the IX. 

        :return: The supported_network_service_types of this ImplementationResponsePartial.
        :rtype: List[str]
        """
        return self._supported_network_service_types

    @supported_network_service_types.setter
    def supported_network_service_types(self, supported_network_service_types):
        """Sets the supported_network_service_types of this ImplementationResponsePartial.

        Array of network service types, supported by the IX. 

        :param supported_network_service_types: The supported_network_service_types of this ImplementationResponsePartial.
        :type supported_network_service_types: List[str]
        """

        self._supported_network_service_types = supported_network_service_types

    @property
    def supported_operations(self):
        """Gets the supported_operations of this ImplementationResponsePartial.

        Array of implemented operations of the ix-api schema. 

        :return: The supported_operations of this ImplementationResponsePartial.
        :rtype: List[str]
        """
        return self._supported_operations

    @supported_operations.setter
    def supported_operations(self, supported_operations):
        """Sets the supported_operations of this ImplementationResponsePartial.

        Array of implemented operations of the ix-api schema. 

        :param supported_operations: The supported_operations of this ImplementationResponsePartial.
        :type supported_operations: List[str]
        """

        self._supported_operations = supported_operations
