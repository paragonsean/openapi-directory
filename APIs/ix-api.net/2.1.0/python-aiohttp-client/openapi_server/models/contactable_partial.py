# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContactablePartial(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, role_assignments: List[str]=None):
        """ContactablePartial - a model defined in OpenAPI

        :param role_assignments: The role_assignments of this ContactablePartial.
        """
        self.openapi_types = {
            'role_assignments': List[str]
        }

        self.attribute_map = {
            'role_assignments': 'role_assignments'
        }

        self._role_assignments = role_assignments

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContactablePartial':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContactablePartial of this ContactablePartial.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def role_assignments(self):
        """Gets the role_assignments of this ContactablePartial.

        A set of `RoleAssignment`s. See the documentation on the specific `required_contact_roles`, `nfc_required_contact_roles` or `nsc_required_contact_roles` on what `RoleAssignment`s to provide. 

        :return: The role_assignments of this ContactablePartial.
        :rtype: List[str]
        """
        return self._role_assignments

    @role_assignments.setter
    def role_assignments(self, role_assignments):
        """Sets the role_assignments of this ContactablePartial.

        A set of `RoleAssignment`s. See the documentation on the specific `required_contact_roles`, `nfc_required_contact_roles` or `nsc_required_contact_roles` on what `RoleAssignment`s to provide. 

        :param role_assignments: The role_assignments of this ContactablePartial.
        :type role_assignments: List[str]
        """

        self._role_assignments = role_assignments
