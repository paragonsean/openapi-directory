# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ManageablePartial(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, managing_account: str=None):
        """ManageablePartial - a model defined in OpenAPI

        :param managing_account: The managing_account of this ManageablePartial.
        """
        self.openapi_types = {
            'managing_account': str
        }

        self.attribute_map = {
            'managing_account': 'managing_account'
        }

        self._managing_account = managing_account

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ManageablePartial':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ManageablePartial of this ManageablePartial.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def managing_account(self):
        """Gets the managing_account of this ManageablePartial.

        The `id` of the account responsible for managing the service via the API. A manager can read and update the state of entities. 

        :return: The managing_account of this ManageablePartial.
        :rtype: str
        """
        return self._managing_account

    @managing_account.setter
    def managing_account(self, managing_account):
        """Sets the managing_account of this ManageablePartial.

        The `id` of the account responsible for managing the service via the API. A manager can read and update the state of entities. 

        :param managing_account: The managing_account of this ManageablePartial.
        :type managing_account: str
        """

        self._managing_account = managing_account
