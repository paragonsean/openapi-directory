# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HistoricalExchangeRate200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount: str=None, _date: str=None, _from: str=None, rate: float=None, to: str=None):
        """HistoricalExchangeRate200Response - a model defined in OpenAPI

        :param amount: The amount of this HistoricalExchangeRate200Response.
        :param _date: The _date of this HistoricalExchangeRate200Response.
        :param _from: The _from of this HistoricalExchangeRate200Response.
        :param rate: The rate of this HistoricalExchangeRate200Response.
        :param to: The to of this HistoricalExchangeRate200Response.
        """
        self.openapi_types = {
            'amount': str,
            '_date': str,
            '_from': str,
            'rate': float,
            'to': str
        }

        self.attribute_map = {
            'amount': 'amount',
            '_date': 'date',
            '_from': 'from',
            'rate': 'rate',
            'to': 'to'
        }

        self._amount = amount
        self.__date = _date
        self.__from = _from
        self._rate = rate
        self._to = to

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HistoricalExchangeRate200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The historicalExchangeRate_200_response of this HistoricalExchangeRate200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this HistoricalExchangeRate200Response.


        :return: The amount of this HistoricalExchangeRate200Response.
        :rtype: str
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this HistoricalExchangeRate200Response.


        :param amount: The amount of this HistoricalExchangeRate200Response.
        :type amount: str
        """

        self._amount = amount

    @property
    def _date(self):
        """Gets the _date of this HistoricalExchangeRate200Response.


        :return: The _date of this HistoricalExchangeRate200Response.
        :rtype: str
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this HistoricalExchangeRate200Response.


        :param _date: The _date of this HistoricalExchangeRate200Response.
        :type _date: str
        """

        self.__date = _date

    @property
    def _from(self):
        """Gets the _from of this HistoricalExchangeRate200Response.


        :return: The _from of this HistoricalExchangeRate200Response.
        :rtype: str
        """
        return self.__from

    @_from.setter
    def _from(self, _from):
        """Sets the _from of this HistoricalExchangeRate200Response.


        :param _from: The _from of this HistoricalExchangeRate200Response.
        :type _from: str
        """

        self.__from = _from

    @property
    def rate(self):
        """Gets the rate of this HistoricalExchangeRate200Response.


        :return: The rate of this HistoricalExchangeRate200Response.
        :rtype: float
        """
        return self._rate

    @rate.setter
    def rate(self, rate):
        """Sets the rate of this HistoricalExchangeRate200Response.


        :param rate: The rate of this HistoricalExchangeRate200Response.
        :type rate: float
        """

        self._rate = rate

    @property
    def to(self):
        """Gets the to of this HistoricalExchangeRate200Response.


        :return: The to of this HistoricalExchangeRate200Response.
        :rtype: str
        """
        return self._to

    @to.setter
    def to(self, to):
        """Sets the to of this HistoricalExchangeRate200Response.


        :param to: The to of this HistoricalExchangeRate200Response.
        :type to: str
        """

        self._to = to
