/**
 * Up API
 * The Up API gives you programmatic access to your balances and transaction data. You can request past transactions or set up webhooks to receive real-time events when new transactions hit your account. It’s new, it’s exciting and it’s just the beginning. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CategoryResourceRelationshipsChildren from './CategoryResourceRelationshipsChildren';
import CategoryResourceRelationshipsParent from './CategoryResourceRelationshipsParent';

/**
 * The CategoryResourceRelationships model module.
 * @module model/CategoryResourceRelationships
 * @version v1
 */
class CategoryResourceRelationships {
    /**
     * Constructs a new <code>CategoryResourceRelationships</code>.
     * @alias module:model/CategoryResourceRelationships
     * @param children {module:model/CategoryResourceRelationshipsChildren} 
     * @param parent {module:model/CategoryResourceRelationshipsParent} 
     */
    constructor(children, parent) { 
        
        CategoryResourceRelationships.initialize(this, children, parent);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, children, parent) { 
        obj['children'] = children;
        obj['parent'] = parent;
    }

    /**
     * Constructs a <code>CategoryResourceRelationships</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CategoryResourceRelationships} obj Optional instance to populate.
     * @return {module:model/CategoryResourceRelationships} The populated <code>CategoryResourceRelationships</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CategoryResourceRelationships();

            if (data.hasOwnProperty('children')) {
                obj['children'] = CategoryResourceRelationshipsChildren.constructFromObject(data['children']);
            }
            if (data.hasOwnProperty('parent')) {
                obj['parent'] = CategoryResourceRelationshipsParent.constructFromObject(data['parent']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CategoryResourceRelationships</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CategoryResourceRelationships</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CategoryResourceRelationships.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `children`
        if (data['children']) { // data not null
          CategoryResourceRelationshipsChildren.validateJSON(data['children']);
        }
        // validate the optional field `parent`
        if (data['parent']) { // data not null
          CategoryResourceRelationshipsParent.validateJSON(data['parent']);
        }

        return true;
    }


}

CategoryResourceRelationships.RequiredProperties = ["children", "parent"];

/**
 * @member {module:model/CategoryResourceRelationshipsChildren} children
 */
CategoryResourceRelationships.prototype['children'] = undefined;

/**
 * @member {module:model/CategoryResourceRelationshipsParent} parent
 */
CategoryResourceRelationships.prototype['parent'] = undefined;






export default CategoryResourceRelationships;

