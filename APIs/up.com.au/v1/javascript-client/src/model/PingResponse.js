/**
 * Up API
 * The Up API gives you programmatic access to your balances and transaction data. You can request past transactions or set up webhooks to receive real-time events when new transactions hit your account. It’s new, it’s exciting and it’s just the beginning. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PingResponseMeta from './PingResponseMeta';

/**
 * The PingResponse model module.
 * @module model/PingResponse
 * @version v1
 */
class PingResponse {
    /**
     * Constructs a new <code>PingResponse</code>.
     * Basic ping response to verify authentication. 
     * @alias module:model/PingResponse
     * @param meta {module:model/PingResponseMeta} 
     */
    constructor(meta) { 
        
        PingResponse.initialize(this, meta);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, meta) { 
        obj['meta'] = meta;
    }

    /**
     * Constructs a <code>PingResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PingResponse} obj Optional instance to populate.
     * @return {module:model/PingResponse} The populated <code>PingResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PingResponse();

            if (data.hasOwnProperty('meta')) {
                obj['meta'] = PingResponseMeta.constructFromObject(data['meta']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PingResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PingResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PingResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `meta`
        if (data['meta']) { // data not null
          PingResponseMeta.validateJSON(data['meta']);
        }

        return true;
    }


}

PingResponse.RequiredProperties = ["meta"];

/**
 * @member {module:model/PingResponseMeta} meta
 */
PingResponse.prototype['meta'] = undefined;






export default PingResponse;

