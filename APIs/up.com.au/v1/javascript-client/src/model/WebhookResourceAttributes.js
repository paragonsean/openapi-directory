/**
 * Up API
 * The Up API gives you programmatic access to your balances and transaction data. You can request past transactions or set up webhooks to receive real-time events when new transactions hit your account. It’s new, it’s exciting and it’s just the beginning. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WebhookResourceAttributes model module.
 * @module model/WebhookResourceAttributes
 * @version v1
 */
class WebhookResourceAttributes {
    /**
     * Constructs a new <code>WebhookResourceAttributes</code>.
     * @alias module:model/WebhookResourceAttributes
     * @param createdAt {Date} The date-time at which this webhook was created. 
     * @param description {String} An optional description that was provided at the time the webhook was created. 
     * @param url {String} The URL that this webhook is configured to `POST` events to. 
     */
    constructor(createdAt, description, url) { 
        
        WebhookResourceAttributes.initialize(this, createdAt, description, url);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, createdAt, description, url) { 
        obj['createdAt'] = createdAt;
        obj['description'] = description;
        obj['url'] = url;
    }

    /**
     * Constructs a <code>WebhookResourceAttributes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebhookResourceAttributes} obj Optional instance to populate.
     * @return {module:model/WebhookResourceAttributes} The populated <code>WebhookResourceAttributes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebhookResourceAttributes();

            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('secretKey')) {
                obj['secretKey'] = ApiClient.convertToType(data['secretKey'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WebhookResourceAttributes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WebhookResourceAttributes</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WebhookResourceAttributes.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['secretKey'] && !(typeof data['secretKey'] === 'string' || data['secretKey'] instanceof String)) {
            throw new Error("Expected the field `secretKey` to be a primitive type in the JSON string but got " + data['secretKey']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}

WebhookResourceAttributes.RequiredProperties = ["createdAt", "description", "url"];

/**
 * The date-time at which this webhook was created. 
 * @member {Date} createdAt
 */
WebhookResourceAttributes.prototype['createdAt'] = undefined;

/**
 * An optional description that was provided at the time the webhook was created. 
 * @member {String} description
 */
WebhookResourceAttributes.prototype['description'] = undefined;

/**
 * A shared secret key used to sign all webhook events sent to the configured webhook URL. This field is returned only once, upon the initial creation of the webhook. If lost, create a new webhook and delete this webhook.  The webhook URL receives a request with a `X-Up-Authenticity-Signature` header, which is the SHA-256 HMAC of the entire raw request body signed using this `secretKey`. It is advised to compute and check this signature to verify the authenticity of requests sent to the webhook URL. See [Handling webhook events](#callback_post_webhookURL) for full details. 
 * @member {String} secretKey
 */
WebhookResourceAttributes.prototype['secretKey'] = undefined;

/**
 * The URL that this webhook is configured to `POST` events to. 
 * @member {String} url
 */
WebhookResourceAttributes.prototype['url'] = undefined;






export default WebhookResourceAttributes;

