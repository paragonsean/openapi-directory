# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.webhook_event_type_enum import WebhookEventTypeEnum
from openapi_server import util


class WebhookEventResourceAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, event_type: WebhookEventTypeEnum=None):
        """WebhookEventResourceAttributes - a model defined in OpenAPI

        :param created_at: The created_at of this WebhookEventResourceAttributes.
        :param event_type: The event_type of this WebhookEventResourceAttributes.
        """
        self.openapi_types = {
            'created_at': datetime,
            'event_type': WebhookEventTypeEnum
        }

        self.attribute_map = {
            'created_at': 'createdAt',
            'event_type': 'eventType'
        }

        self._created_at = created_at
        self._event_type = event_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WebhookEventResourceAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WebhookEventResource_attributes of this WebhookEventResourceAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this WebhookEventResourceAttributes.

        The date-time at which this event was generated. 

        :return: The created_at of this WebhookEventResourceAttributes.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this WebhookEventResourceAttributes.

        The date-time at which this event was generated. 

        :param created_at: The created_at of this WebhookEventResourceAttributes.
        :type created_at: datetime
        """
        if created_at is None:
            raise ValueError("Invalid value for `created_at`, must not be `None`")

        self._created_at = created_at

    @property
    def event_type(self):
        """Gets the event_type of this WebhookEventResourceAttributes.

        The type of this event. This can be used to determine what action to take in response to the event. 

        :return: The event_type of this WebhookEventResourceAttributes.
        :rtype: WebhookEventTypeEnum
        """
        return self._event_type

    @event_type.setter
    def event_type(self, event_type):
        """Sets the event_type of this WebhookEventResourceAttributes.

        The type of this event. This can be used to determine what action to take in response to the event. 

        :param event_type: The event_type of this WebhookEventResourceAttributes.
        :type event_type: WebhookEventTypeEnum
        """
        if event_type is None:
            raise ValueError("Invalid value for `event_type`, must not be `None`")

        self._event_type = event_type
