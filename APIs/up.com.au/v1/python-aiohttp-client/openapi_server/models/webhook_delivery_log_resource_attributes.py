# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.webhook_delivery_log_resource_attributes_request import WebhookDeliveryLogResourceAttributesRequest
from openapi_server.models.webhook_delivery_log_resource_attributes_response import WebhookDeliveryLogResourceAttributesResponse
from openapi_server.models.webhook_delivery_status_enum import WebhookDeliveryStatusEnum
from openapi_server import util


class WebhookDeliveryLogResourceAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, delivery_status: WebhookDeliveryStatusEnum=None, request: WebhookDeliveryLogResourceAttributesRequest=None, response: WebhookDeliveryLogResourceAttributesResponse=None):
        """WebhookDeliveryLogResourceAttributes - a model defined in OpenAPI

        :param created_at: The created_at of this WebhookDeliveryLogResourceAttributes.
        :param delivery_status: The delivery_status of this WebhookDeliveryLogResourceAttributes.
        :param request: The request of this WebhookDeliveryLogResourceAttributes.
        :param response: The response of this WebhookDeliveryLogResourceAttributes.
        """
        self.openapi_types = {
            'created_at': datetime,
            'delivery_status': WebhookDeliveryStatusEnum,
            'request': WebhookDeliveryLogResourceAttributesRequest,
            'response': WebhookDeliveryLogResourceAttributesResponse
        }

        self.attribute_map = {
            'created_at': 'createdAt',
            'delivery_status': 'deliveryStatus',
            'request': 'request',
            'response': 'response'
        }

        self._created_at = created_at
        self._delivery_status = delivery_status
        self._request = request
        self._response = response

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WebhookDeliveryLogResourceAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WebhookDeliveryLogResource_attributes of this WebhookDeliveryLogResourceAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this WebhookDeliveryLogResourceAttributes.

        The date-time at which this log entry was created. 

        :return: The created_at of this WebhookDeliveryLogResourceAttributes.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this WebhookDeliveryLogResourceAttributes.

        The date-time at which this log entry was created. 

        :param created_at: The created_at of this WebhookDeliveryLogResourceAttributes.
        :type created_at: datetime
        """
        if created_at is None:
            raise ValueError("Invalid value for `created_at`, must not be `None`")

        self._created_at = created_at

    @property
    def delivery_status(self):
        """Gets the delivery_status of this WebhookDeliveryLogResourceAttributes.

        The success or failure status of this delivery attempt. 

        :return: The delivery_status of this WebhookDeliveryLogResourceAttributes.
        :rtype: WebhookDeliveryStatusEnum
        """
        return self._delivery_status

    @delivery_status.setter
    def delivery_status(self, delivery_status):
        """Sets the delivery_status of this WebhookDeliveryLogResourceAttributes.

        The success or failure status of this delivery attempt. 

        :param delivery_status: The delivery_status of this WebhookDeliveryLogResourceAttributes.
        :type delivery_status: WebhookDeliveryStatusEnum
        """
        if delivery_status is None:
            raise ValueError("Invalid value for `delivery_status`, must not be `None`")

        self._delivery_status = delivery_status

    @property
    def request(self):
        """Gets the request of this WebhookDeliveryLogResourceAttributes.


        :return: The request of this WebhookDeliveryLogResourceAttributes.
        :rtype: WebhookDeliveryLogResourceAttributesRequest
        """
        return self._request

    @request.setter
    def request(self, request):
        """Sets the request of this WebhookDeliveryLogResourceAttributes.


        :param request: The request of this WebhookDeliveryLogResourceAttributes.
        :type request: WebhookDeliveryLogResourceAttributesRequest
        """
        if request is None:
            raise ValueError("Invalid value for `request`, must not be `None`")

        self._request = request

    @property
    def response(self):
        """Gets the response of this WebhookDeliveryLogResourceAttributes.


        :return: The response of this WebhookDeliveryLogResourceAttributes.
        :rtype: WebhookDeliveryLogResourceAttributesResponse
        """
        return self._response

    @response.setter
    def response(self, response):
        """Sets the response of this WebhookDeliveryLogResourceAttributes.


        :param response: The response of this WebhookDeliveryLogResourceAttributes.
        :type response: WebhookDeliveryLogResourceAttributesResponse
        """
        if response is None:
            raise ValueError("Invalid value for `response`, must not be `None`")

        self._response = response
