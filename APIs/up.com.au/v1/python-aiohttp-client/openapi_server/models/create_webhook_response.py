# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.webhook_resource import WebhookResource
from openapi_server import util


class CreateWebhookResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data: WebhookResource=None):
        """CreateWebhookResponse - a model defined in OpenAPI

        :param data: The data of this CreateWebhookResponse.
        """
        self.openapi_types = {
            'data': WebhookResource
        }

        self.attribute_map = {
            'data': 'data'
        }

        self._data = data

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateWebhookResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateWebhookResponse of this CreateWebhookResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data(self):
        """Gets the data of this CreateWebhookResponse.

        The webhook that was created. 

        :return: The data of this CreateWebhookResponse.
        :rtype: WebhookResource
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this CreateWebhookResponse.

        The webhook that was created. 

        :param data: The data of this CreateWebhookResponse.
        :type data: WebhookResource
        """
        if data is None:
            raise ValueError("Invalid value for `data`, must not be `None`")

        self._data = data
