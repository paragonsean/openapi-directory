/*
 * Up API
 * The Up API gives you programmatic access to your balances and transaction data. You can request past transactions or set up webhooks to receive real-time events when new transactions hit your account. It’s new, it’s exciting and it’s just the beginning. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Specifies the nature of the success or failure of a webhook delivery attempt to the subscribed webhook URL. The currently returned values are described below:  - **&#x60;DELIVERED&#x60;**: The event was delivered to the webhook URL   successfully and a &#x60;200&#x60; response was received. - **&#x60;UNDELIVERABLE&#x60;**: The webhook URL was not reachable, or timed out. - **&#x60;BAD_RESPONSE_CODE&#x60;**: The event was delivered to the webhook URL   but a non-&#x60;200&#x60; response was received. 
 */
@JsonAdapter(WebhookDeliveryStatusEnum.Adapter.class)
public enum WebhookDeliveryStatusEnum {
  
  DELIVERED("DELIVERED"),
  
  UNDELIVERABLE("UNDELIVERABLE"),
  
  BAD_RESPONSE_CODE("BAD_RESPONSE_CODE");

  private String value;

  WebhookDeliveryStatusEnum(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static WebhookDeliveryStatusEnum fromValue(String value) {
    for (WebhookDeliveryStatusEnum b : WebhookDeliveryStatusEnum.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<WebhookDeliveryStatusEnum> {
    @Override
    public void write(final JsonWriter jsonWriter, final WebhookDeliveryStatusEnum enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public WebhookDeliveryStatusEnum read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return WebhookDeliveryStatusEnum.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    WebhookDeliveryStatusEnum.fromValue(value);
  }
}

