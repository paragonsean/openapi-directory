/**
 * Up API
 * The Up API gives you programmatic access to your balances and transaction data. You can request past transactions or set up webhooks to receive real-time events when new transactions hit your account. It’s new, it’s exciting and it’s just the beginning. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountResource_attributes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountResource_attributes::OAIAccountResource_attributes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountResource_attributes::OAIAccountResource_attributes() {
    this->initializeModel();
}

OAIAccountResource_attributes::~OAIAccountResource_attributes() {}

void OAIAccountResource_attributes::initializeModel() {

    m_account_type_isSet = false;
    m_account_type_isValid = false;

    m_balance_isSet = false;
    m_balance_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_ownership_type_isSet = false;
    m_ownership_type_isValid = false;
}

void OAIAccountResource_attributes::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccountResource_attributes::fromJsonObject(QJsonObject json) {

    m_account_type_isValid = ::OpenAPI::fromJsonValue(m_account_type, json[QString("accountType")]);
    m_account_type_isSet = !json[QString("accountType")].isNull() && m_account_type_isValid;

    m_balance_isValid = ::OpenAPI::fromJsonValue(m_balance, json[QString("balance")]);
    m_balance_isSet = !json[QString("balance")].isNull() && m_balance_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_ownership_type_isValid = ::OpenAPI::fromJsonValue(m_ownership_type, json[QString("ownershipType")]);
    m_ownership_type_isSet = !json[QString("ownershipType")].isNull() && m_ownership_type_isValid;
}

QString OAIAccountResource_attributes::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccountResource_attributes::asJsonObject() const {
    QJsonObject obj;
    if (m_account_type.isSet()) {
        obj.insert(QString("accountType"), ::OpenAPI::toJsonValue(m_account_type));
    }
    if (m_balance.isSet()) {
        obj.insert(QString("balance"), ::OpenAPI::toJsonValue(m_balance));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_ownership_type.isSet()) {
        obj.insert(QString("ownershipType"), ::OpenAPI::toJsonValue(m_ownership_type));
    }
    return obj;
}

OAIAccountTypeEnum OAIAccountResource_attributes::getAccountType() const {
    return m_account_type;
}
void OAIAccountResource_attributes::setAccountType(const OAIAccountTypeEnum &account_type) {
    m_account_type = account_type;
    m_account_type_isSet = true;
}

bool OAIAccountResource_attributes::is_account_type_Set() const{
    return m_account_type_isSet;
}

bool OAIAccountResource_attributes::is_account_type_Valid() const{
    return m_account_type_isValid;
}

OAIMoneyObject OAIAccountResource_attributes::getBalance() const {
    return m_balance;
}
void OAIAccountResource_attributes::setBalance(const OAIMoneyObject &balance) {
    m_balance = balance;
    m_balance_isSet = true;
}

bool OAIAccountResource_attributes::is_balance_Set() const{
    return m_balance_isSet;
}

bool OAIAccountResource_attributes::is_balance_Valid() const{
    return m_balance_isValid;
}

QDateTime OAIAccountResource_attributes::getCreatedAt() const {
    return m_created_at;
}
void OAIAccountResource_attributes::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIAccountResource_attributes::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIAccountResource_attributes::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIAccountResource_attributes::getDisplayName() const {
    return m_display_name;
}
void OAIAccountResource_attributes::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIAccountResource_attributes::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIAccountResource_attributes::is_display_name_Valid() const{
    return m_display_name_isValid;
}

OAIOwnershipTypeEnum OAIAccountResource_attributes::getOwnershipType() const {
    return m_ownership_type;
}
void OAIAccountResource_attributes::setOwnershipType(const OAIOwnershipTypeEnum &ownership_type) {
    m_ownership_type = ownership_type;
    m_ownership_type_isSet = true;
}

bool OAIAccountResource_attributes::is_ownership_type_Set() const{
    return m_ownership_type_isSet;
}

bool OAIAccountResource_attributes::is_ownership_type_Valid() const{
    return m_ownership_type_isValid;
}

bool OAIAccountResource_attributes::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_balance.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ownership_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccountResource_attributes::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_type_isValid && m_balance_isValid && m_created_at_isValid && m_display_name_isValid && m_ownership_type_isValid && true;
}

} // namespace OpenAPI
