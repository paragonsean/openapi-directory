/**
 * Up API
 * The Up API gives you programmatic access to your balances and transaction data. You can request past transactions or set up webhooks to receive real-time events when new transactions hit your account. It’s new, it’s exciting and it’s just the beginning. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWebhookEventTypeEnum.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWebhookEventTypeEnum::OAIWebhookEventTypeEnum(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWebhookEventTypeEnum::OAIWebhookEventTypeEnum() {
    this->initializeModel();
}

OAIWebhookEventTypeEnum::~OAIWebhookEventTypeEnum() {}

void OAIWebhookEventTypeEnum::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIWebhookEventTypeEnum::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIWebhookEventTypeEnum::fromJson(QString jsonString) {
    
    if ( jsonString.compare("TRANSACTION_CREATED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWebhookEventTypeEnum::TRANSACTION_CREATED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TRANSACTION_SETTLED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWebhookEventTypeEnum::TRANSACTION_SETTLED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TRANSACTION_DELETED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWebhookEventTypeEnum::TRANSACTION_DELETED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWebhookEventTypeEnum::PING;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIWebhookEventTypeEnum::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIWebhookEventTypeEnum::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIWebhookEventTypeEnum::TRANSACTION_CREATED:
            val = "TRANSACTION_CREATED";
            break;
        case eOAIWebhookEventTypeEnum::TRANSACTION_SETTLED:
            val = "TRANSACTION_SETTLED";
            break;
        case eOAIWebhookEventTypeEnum::TRANSACTION_DELETED:
            val = "TRANSACTION_DELETED";
            break;
        case eOAIWebhookEventTypeEnum::PING:
            val = "PING";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIWebhookEventTypeEnum::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIWebhookEventTypeEnum::eOAIWebhookEventTypeEnum OAIWebhookEventTypeEnum::getValue() const {
    return m_value;
}

void OAIWebhookEventTypeEnum::setValue(const OAIWebhookEventTypeEnum::eOAIWebhookEventTypeEnum& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIWebhookEventTypeEnum::isSet() const {
    
    return m_value_isSet;
}

bool OAIWebhookEventTypeEnum::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
