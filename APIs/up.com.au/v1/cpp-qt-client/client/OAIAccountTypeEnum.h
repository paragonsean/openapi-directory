/**
 * Up API
 * The Up API gives you programmatic access to your balances and transaction data. You can request past transactions or set up webhooks to receive real-time events when new transactions hit your account. It’s new, it’s exciting and it’s just the beginning. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAccountTypeEnum.h
 *
 * Specifies the type of bank account. Currently returned values are &#x60;SAVER&#x60; and &#x60;TRANSACTIONAL&#x60;. 
 */

#ifndef OAIAccountTypeEnum_H
#define OAIAccountTypeEnum_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAccountTypeEnum : public OAIEnum {
public:
    OAIAccountTypeEnum();
    OAIAccountTypeEnum(QString json);
    ~OAIAccountTypeEnum() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAIAccountTypeEnum {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        SAVER, 
        TRANSACTIONAL
    };
    OAIAccountTypeEnum::eOAIAccountTypeEnum getValue() const;
    void setValue(const OAIAccountTypeEnum::eOAIAccountTypeEnum& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAIAccountTypeEnum m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAccountTypeEnum)

#endif // OAIAccountTypeEnum_H
