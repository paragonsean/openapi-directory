/**
 * Up API
 * The Up API gives you programmatic access to your balances and transaction data. You can request past transactions or set up webhooks to receive real-time events when new transactions hit your account. It’s new, it’s exciting and it’s just the beginning. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWebhookResource_relationships.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWebhookResource_relationships::OAIWebhookResource_relationships(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWebhookResource_relationships::OAIWebhookResource_relationships() {
    this->initializeModel();
}

OAIWebhookResource_relationships::~OAIWebhookResource_relationships() {}

void OAIWebhookResource_relationships::initializeModel() {

    m_logs_isSet = false;
    m_logs_isValid = false;
}

void OAIWebhookResource_relationships::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWebhookResource_relationships::fromJsonObject(QJsonObject json) {

    m_logs_isValid = ::OpenAPI::fromJsonValue(m_logs, json[QString("logs")]);
    m_logs_isSet = !json[QString("logs")].isNull() && m_logs_isValid;
}

QString OAIWebhookResource_relationships::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWebhookResource_relationships::asJsonObject() const {
    QJsonObject obj;
    if (m_logs.isSet()) {
        obj.insert(QString("logs"), ::OpenAPI::toJsonValue(m_logs));
    }
    return obj;
}

OAIAccountResource_relationships_transactions OAIWebhookResource_relationships::getLogs() const {
    return m_logs;
}
void OAIWebhookResource_relationships::setLogs(const OAIAccountResource_relationships_transactions &logs) {
    m_logs = logs;
    m_logs_isSet = true;
}

bool OAIWebhookResource_relationships::is_logs_Set() const{
    return m_logs_isSet;
}

bool OAIWebhookResource_relationships::is_logs_Valid() const{
    return m_logs_isValid;
}

bool OAIWebhookResource_relationships::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_logs.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWebhookResource_relationships::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_logs_isValid && true;
}

} // namespace OpenAPI
