/**
 * Up API
 * The Up API gives you programmatic access to your balances and transaction data. You can request past transactions or set up webhooks to receive real-time events when new transactions hit your account. It’s new, it’s exciting and it’s just the beginning. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITransactionResource_relationships.h
 *
 * 
 */

#ifndef OAITransactionResource_relationships_H
#define OAITransactionResource_relationships_H

#include <QJsonObject>

#include "OAICategoryResource_relationships_parent.h"
#include "OAITransactionResource_relationships_account.h"
#include "OAITransactionResource_relationships_category.h"
#include "OAITransactionResource_relationships_tags.h"
#include "OAITransactionResource_relationships_transferAccount.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITransactionResource_relationships_account;
class OAITransactionResource_relationships_category;
class OAICategoryResource_relationships_parent;
class OAITransactionResource_relationships_tags;
class OAITransactionResource_relationships_transferAccount;

class OAITransactionResource_relationships : public OAIObject {
public:
    OAITransactionResource_relationships();
    OAITransactionResource_relationships(QString json);
    ~OAITransactionResource_relationships() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAITransactionResource_relationships_account getAccount() const;
    void setAccount(const OAITransactionResource_relationships_account &account);
    bool is_account_Set() const;
    bool is_account_Valid() const;

    OAITransactionResource_relationships_category getCategory() const;
    void setCategory(const OAITransactionResource_relationships_category &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    OAICategoryResource_relationships_parent getParentCategory() const;
    void setParentCategory(const OAICategoryResource_relationships_parent &parent_category);
    bool is_parent_category_Set() const;
    bool is_parent_category_Valid() const;

    OAITransactionResource_relationships_tags getTags() const;
    void setTags(const OAITransactionResource_relationships_tags &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAITransactionResource_relationships_transferAccount getTransferAccount() const;
    void setTransferAccount(const OAITransactionResource_relationships_transferAccount &transfer_account);
    bool is_transfer_account_Set() const;
    bool is_transfer_account_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAITransactionResource_relationships_account m_account;
    bool m_account_isSet;
    bool m_account_isValid;

    OAITransactionResource_relationships_category m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    OAICategoryResource_relationships_parent m_parent_category;
    bool m_parent_category_isSet;
    bool m_parent_category_isValid;

    OAITransactionResource_relationships_tags m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAITransactionResource_relationships_transferAccount m_transfer_account;
    bool m_transfer_account_isSet;
    bool m_transfer_account_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITransactionResource_relationships)

#endif // OAITransactionResource_relationships_H
