/**
 * Up API
 * The Up API gives you programmatic access to your balances and transaction data. You can request past transactions or set up webhooks to receive real-time events when new transactions hit your account. It’s new, it’s exciting and it’s just the beginning. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountTypeEnum.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountTypeEnum::OAIAccountTypeEnum(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountTypeEnum::OAIAccountTypeEnum() {
    this->initializeModel();
}

OAIAccountTypeEnum::~OAIAccountTypeEnum() {}

void OAIAccountTypeEnum::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAccountTypeEnum::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAccountTypeEnum::fromJson(QString jsonString) {
    
    if ( jsonString.compare("SAVER", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAccountTypeEnum::SAVER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TRANSACTIONAL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAccountTypeEnum::TRANSACTIONAL;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAccountTypeEnum::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAccountTypeEnum::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAccountTypeEnum::SAVER:
            val = "SAVER";
            break;
        case eOAIAccountTypeEnum::TRANSACTIONAL:
            val = "TRANSACTIONAL";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAccountTypeEnum::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAccountTypeEnum::eOAIAccountTypeEnum OAIAccountTypeEnum::getValue() const {
    return m_value;
}

void OAIAccountTypeEnum::setValue(const OAIAccountTypeEnum::eOAIAccountTypeEnum& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAccountTypeEnum::isSet() const {
    
    return m_value_isSet;
}

bool OAIAccountTypeEnum::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
