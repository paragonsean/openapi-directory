/**
 * Up API
 * The Up API gives you programmatic access to your balances and transaction data. You can request past transactions or set up webhooks to receive real-time events when new transactions hit your account. It’s new, it’s exciting and it’s just the beginning. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWebhookDeliveryStatusEnum.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWebhookDeliveryStatusEnum::OAIWebhookDeliveryStatusEnum(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWebhookDeliveryStatusEnum::OAIWebhookDeliveryStatusEnum() {
    this->initializeModel();
}

OAIWebhookDeliveryStatusEnum::~OAIWebhookDeliveryStatusEnum() {}

void OAIWebhookDeliveryStatusEnum::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIWebhookDeliveryStatusEnum::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIWebhookDeliveryStatusEnum::fromJson(QString jsonString) {
    
    if ( jsonString.compare("DELIVERED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWebhookDeliveryStatusEnum::DELIVERED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UNDELIVERABLE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWebhookDeliveryStatusEnum::UNDELIVERABLE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BAD_RESPONSE_CODE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWebhookDeliveryStatusEnum::BAD_RESPONSE_CODE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIWebhookDeliveryStatusEnum::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIWebhookDeliveryStatusEnum::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIWebhookDeliveryStatusEnum::DELIVERED:
            val = "DELIVERED";
            break;
        case eOAIWebhookDeliveryStatusEnum::UNDELIVERABLE:
            val = "UNDELIVERABLE";
            break;
        case eOAIWebhookDeliveryStatusEnum::BAD_RESPONSE_CODE:
            val = "BAD_RESPONSE_CODE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIWebhookDeliveryStatusEnum::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIWebhookDeliveryStatusEnum::eOAIWebhookDeliveryStatusEnum OAIWebhookDeliveryStatusEnum::getValue() const {
    return m_value;
}

void OAIWebhookDeliveryStatusEnum::setValue(const OAIWebhookDeliveryStatusEnum::eOAIWebhookDeliveryStatusEnum& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIWebhookDeliveryStatusEnum::isSet() const {
    
    return m_value_isSet;
}

bool OAIWebhookDeliveryStatusEnum::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
