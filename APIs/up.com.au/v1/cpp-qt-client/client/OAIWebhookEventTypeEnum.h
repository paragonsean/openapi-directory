/**
 * Up API
 * The Up API gives you programmatic access to your balances and transaction data. You can request past transactions or set up webhooks to receive real-time events when new transactions hit your account. It’s new, it’s exciting and it’s just the beginning. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWebhookEventTypeEnum.h
 *
 * Specifies the type of a webhook event. This can be used to determine what action to take in response to the event, such as which relationships to expect. 
 */

#ifndef OAIWebhookEventTypeEnum_H
#define OAIWebhookEventTypeEnum_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWebhookEventTypeEnum : public OAIEnum {
public:
    OAIWebhookEventTypeEnum();
    OAIWebhookEventTypeEnum(QString json);
    ~OAIWebhookEventTypeEnum() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAIWebhookEventTypeEnum {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        TRANSACTION_CREATED, 
        TRANSACTION_SETTLED, 
        TRANSACTION_DELETED, 
        PING
    };
    OAIWebhookEventTypeEnum::eOAIWebhookEventTypeEnum getValue() const;
    void setValue(const OAIWebhookEventTypeEnum::eOAIWebhookEventTypeEnum& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAIWebhookEventTypeEnum m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWebhookEventTypeEnum)

#endif // OAIWebhookEventTypeEnum_H
