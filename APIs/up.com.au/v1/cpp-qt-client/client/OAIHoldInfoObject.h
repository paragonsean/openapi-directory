/**
 * Up API
 * The Up API gives you programmatic access to your balances and transaction data. You can request past transactions or set up webhooks to receive real-time events when new transactions hit your account. It’s new, it’s exciting and it’s just the beginning. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHoldInfoObject.h
 *
 * Provides information about the amount at which a transaction was in the &#x60;HELD&#x60; status. 
 */

#ifndef OAIHoldInfoObject_H
#define OAIHoldInfoObject_H

#include <QJsonObject>

#include "OAIMoneyObject.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMoneyObject;

class OAIHoldInfoObject : public OAIObject {
public:
    OAIHoldInfoObject();
    OAIHoldInfoObject(QString json);
    ~OAIHoldInfoObject() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIMoneyObject getAmount() const;
    void setAmount(const OAIMoneyObject &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    OAIMoneyObject getForeignAmount() const;
    void setForeignAmount(const OAIMoneyObject &foreign_amount);
    bool is_foreign_amount_Set() const;
    bool is_foreign_amount_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIMoneyObject m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    OAIMoneyObject m_foreign_amount;
    bool m_foreign_amount_isSet;
    bool m_foreign_amount_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHoldInfoObject)

#endif // OAIHoldInfoObject_H
