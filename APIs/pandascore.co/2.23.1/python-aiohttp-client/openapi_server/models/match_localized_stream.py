# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MatchLocalizedStream(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, embed_url: object=None, raw_url: object=None):
        """MatchLocalizedStream - a model defined in OpenAPI

        :param embed_url: The embed_url of this MatchLocalizedStream.
        :param raw_url: The raw_url of this MatchLocalizedStream.
        """
        self.openapi_types = {
            'embed_url': object,
            'raw_url': object
        }

        self.attribute_map = {
            'embed_url': 'embed_url',
            'raw_url': 'raw_url'
        }

        self._embed_url = embed_url
        self._raw_url = raw_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MatchLocalizedStream':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MatchLocalizedStream of this MatchLocalizedStream.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def embed_url(self):
        """Gets the embed_url of this MatchLocalizedStream.


        :return: The embed_url of this MatchLocalizedStream.
        :rtype: object
        """
        return self._embed_url

    @embed_url.setter
    def embed_url(self, embed_url):
        """Sets the embed_url of this MatchLocalizedStream.


        :param embed_url: The embed_url of this MatchLocalizedStream.
        :type embed_url: object
        """
        if embed_url is None:
            raise ValueError("Invalid value for `embed_url`, must not be `None`")

        self._embed_url = embed_url

    @property
    def raw_url(self):
        """Gets the raw_url of this MatchLocalizedStream.


        :return: The raw_url of this MatchLocalizedStream.
        :rtype: object
        """
        return self._raw_url

    @raw_url.setter
    def raw_url(self, raw_url):
        """Sets the raw_url of this MatchLocalizedStream.


        :param raw_url: The raw_url of this MatchLocalizedStream.
        :type raw_url: object
        """
        if raw_url is None:
            raise ValueError("Invalid value for `raw_url`, must not be `None`")

        self._raw_url = raw_url
