# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TransportPagerDutyGet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, data_segment_code: str=None, id: str=None, pager_duty_api_token: str=None, pager_duty_dedup_key: str=None, pager_duty_event_action: str=None, pager_duty_payload_class: str=None, pager_duty_payload_component: str=None, pager_duty_payload_group: str=None, pager_duty_payload_severity: str=None, pager_duty_payload_source: str=None, pager_duty_routing_key: str=None, partition: str=None, resource_owner: str=None, transport_name: str=None):
        """TransportPagerDutyGet - a model defined in OpenAPI

        :param created_at: The created_at of this TransportPagerDutyGet.
        :param data_segment_code: The data_segment_code of this TransportPagerDutyGet.
        :param id: The id of this TransportPagerDutyGet.
        :param pager_duty_api_token: The pager_duty_api_token of this TransportPagerDutyGet.
        :param pager_duty_dedup_key: The pager_duty_dedup_key of this TransportPagerDutyGet.
        :param pager_duty_event_action: The pager_duty_event_action of this TransportPagerDutyGet.
        :param pager_duty_payload_class: The pager_duty_payload_class of this TransportPagerDutyGet.
        :param pager_duty_payload_component: The pager_duty_payload_component of this TransportPagerDutyGet.
        :param pager_duty_payload_group: The pager_duty_payload_group of this TransportPagerDutyGet.
        :param pager_duty_payload_severity: The pager_duty_payload_severity of this TransportPagerDutyGet.
        :param pager_duty_payload_source: The pager_duty_payload_source of this TransportPagerDutyGet.
        :param pager_duty_routing_key: The pager_duty_routing_key of this TransportPagerDutyGet.
        :param partition: The partition of this TransportPagerDutyGet.
        :param resource_owner: The resource_owner of this TransportPagerDutyGet.
        :param transport_name: The transport_name of this TransportPagerDutyGet.
        """
        self.openapi_types = {
            'created_at': datetime,
            'data_segment_code': str,
            'id': str,
            'pager_duty_api_token': str,
            'pager_duty_dedup_key': str,
            'pager_duty_event_action': str,
            'pager_duty_payload_class': str,
            'pager_duty_payload_component': str,
            'pager_duty_payload_group': str,
            'pager_duty_payload_severity': str,
            'pager_duty_payload_source': str,
            'pager_duty_routing_key': str,
            'partition': str,
            'resource_owner': str,
            'transport_name': str
        }

        self.attribute_map = {
            'created_at': 'createdAt',
            'data_segment_code': 'dataSegmentCode',
            'id': 'id',
            'pager_duty_api_token': 'pagerDutyApiToken',
            'pager_duty_dedup_key': 'pagerDutyDedupKey',
            'pager_duty_event_action': 'pagerDutyEventAction',
            'pager_duty_payload_class': 'pagerDutyPayloadClass',
            'pager_duty_payload_component': 'pagerDutyPayloadComponent',
            'pager_duty_payload_group': 'pagerDutyPayloadGroup',
            'pager_duty_payload_severity': 'pagerDutyPayloadSeverity',
            'pager_duty_payload_source': 'pagerDutyPayloadSource',
            'pager_duty_routing_key': 'pagerDutyRoutingKey',
            'partition': 'partition',
            'resource_owner': 'resourceOwner',
            'transport_name': 'transportName'
        }

        self._created_at = created_at
        self._data_segment_code = data_segment_code
        self._id = id
        self._pager_duty_api_token = pager_duty_api_token
        self._pager_duty_dedup_key = pager_duty_dedup_key
        self._pager_duty_event_action = pager_duty_event_action
        self._pager_duty_payload_class = pager_duty_payload_class
        self._pager_duty_payload_component = pager_duty_payload_component
        self._pager_duty_payload_group = pager_duty_payload_group
        self._pager_duty_payload_severity = pager_duty_payload_severity
        self._pager_duty_payload_source = pager_duty_payload_source
        self._pager_duty_routing_key = pager_duty_routing_key
        self._partition = partition
        self._resource_owner = resource_owner
        self._transport_name = transport_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TransportPagerDutyGet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TransportPagerDuty-get of this TransportPagerDutyGet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this TransportPagerDutyGet.

        When the resource instance was created. This date-time is in the UTC timezone.

        :return: The created_at of this TransportPagerDutyGet.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this TransportPagerDutyGet.

        When the resource instance was created. This date-time is in the UTC timezone.

        :param created_at: The created_at of this TransportPagerDutyGet.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def data_segment_code(self):
        """Gets the data_segment_code of this TransportPagerDutyGet.

        User-provided string on which to segment and filter data. Max 50 characters.

        :return: The data_segment_code of this TransportPagerDutyGet.
        :rtype: str
        """
        return self._data_segment_code

    @data_segment_code.setter
    def data_segment_code(self, data_segment_code):
        """Sets the data_segment_code of this TransportPagerDutyGet.

        User-provided string on which to segment and filter data. Max 50 characters.

        :param data_segment_code: The data_segment_code of this TransportPagerDutyGet.
        :type data_segment_code: str
        """
        if data_segment_code is not None and len(data_segment_code) > 50:
            raise ValueError("Invalid value for `data_segment_code`, length must be less than or equal to `50`")

        self._data_segment_code = data_segment_code

    @property
    def id(self):
        """Gets the id of this TransportPagerDutyGet.

        The unique identifier of the resource instance.

        :return: The id of this TransportPagerDutyGet.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TransportPagerDutyGet.

        The unique identifier of the resource instance.

        :param id: The id of this TransportPagerDutyGet.
        :type id: str
        """

        self._id = id

    @property
    def pager_duty_api_token(self):
        """Gets the pager_duty_api_token of this TransportPagerDutyGet.

        The API token for the Pager Duty service. Stored in encrypted format.

        :return: The pager_duty_api_token of this TransportPagerDutyGet.
        :rtype: str
        """
        return self._pager_duty_api_token

    @pager_duty_api_token.setter
    def pager_duty_api_token(self, pager_duty_api_token):
        """Sets the pager_duty_api_token of this TransportPagerDutyGet.

        The API token for the Pager Duty service. Stored in encrypted format.

        :param pager_duty_api_token: The pager_duty_api_token of this TransportPagerDutyGet.
        :type pager_duty_api_token: str
        """
        if pager_duty_api_token is None:
            raise ValueError("Invalid value for `pager_duty_api_token`, must not be `None`")
        if pager_duty_api_token is not None and len(pager_duty_api_token) > 1000:
            raise ValueError("Invalid value for `pager_duty_api_token`, length must be less than or equal to `1000`")

        self._pager_duty_api_token = pager_duty_api_token

    @property
    def pager_duty_dedup_key(self):
        """Gets the pager_duty_dedup_key of this TransportPagerDutyGet.

        The dedup key for the Pager Duty service.

        :return: The pager_duty_dedup_key of this TransportPagerDutyGet.
        :rtype: str
        """
        return self._pager_duty_dedup_key

    @pager_duty_dedup_key.setter
    def pager_duty_dedup_key(self, pager_duty_dedup_key):
        """Sets the pager_duty_dedup_key of this TransportPagerDutyGet.

        The dedup key for the Pager Duty service.

        :param pager_duty_dedup_key: The pager_duty_dedup_key of this TransportPagerDutyGet.
        :type pager_duty_dedup_key: str
        """
        if pager_duty_dedup_key is not None and len(pager_duty_dedup_key) > 255:
            raise ValueError("Invalid value for `pager_duty_dedup_key`, length must be less than or equal to `255`")

        self._pager_duty_dedup_key = pager_duty_dedup_key

    @property
    def pager_duty_event_action(self):
        """Gets the pager_duty_event_action of this TransportPagerDutyGet.

        The event action for the Pager Duty service.

        :return: The pager_duty_event_action of this TransportPagerDutyGet.
        :rtype: str
        """
        return self._pager_duty_event_action

    @pager_duty_event_action.setter
    def pager_duty_event_action(self, pager_duty_event_action):
        """Sets the pager_duty_event_action of this TransportPagerDutyGet.

        The event action for the Pager Duty service.

        :param pager_duty_event_action: The pager_duty_event_action of this TransportPagerDutyGet.
        :type pager_duty_event_action: str
        """
        if pager_duty_event_action is None:
            raise ValueError("Invalid value for `pager_duty_event_action`, must not be `None`")
        if pager_duty_event_action is not None and len(pager_duty_event_action) > 255:
            raise ValueError("Invalid value for `pager_duty_event_action`, length must be less than or equal to `255`")

        self._pager_duty_event_action = pager_duty_event_action

    @property
    def pager_duty_payload_class(self):
        """Gets the pager_duty_payload_class of this TransportPagerDutyGet.

        The payload class for the Pager Duty service.

        :return: The pager_duty_payload_class of this TransportPagerDutyGet.
        :rtype: str
        """
        return self._pager_duty_payload_class

    @pager_duty_payload_class.setter
    def pager_duty_payload_class(self, pager_duty_payload_class):
        """Sets the pager_duty_payload_class of this TransportPagerDutyGet.

        The payload class for the Pager Duty service.

        :param pager_duty_payload_class: The pager_duty_payload_class of this TransportPagerDutyGet.
        :type pager_duty_payload_class: str
        """
        if pager_duty_payload_class is not None and len(pager_duty_payload_class) > 255:
            raise ValueError("Invalid value for `pager_duty_payload_class`, length must be less than or equal to `255`")

        self._pager_duty_payload_class = pager_duty_payload_class

    @property
    def pager_duty_payload_component(self):
        """Gets the pager_duty_payload_component of this TransportPagerDutyGet.

        The payload component for the Pager Duty service.

        :return: The pager_duty_payload_component of this TransportPagerDutyGet.
        :rtype: str
        """
        return self._pager_duty_payload_component

    @pager_duty_payload_component.setter
    def pager_duty_payload_component(self, pager_duty_payload_component):
        """Sets the pager_duty_payload_component of this TransportPagerDutyGet.

        The payload component for the Pager Duty service.

        :param pager_duty_payload_component: The pager_duty_payload_component of this TransportPagerDutyGet.
        :type pager_duty_payload_component: str
        """
        if pager_duty_payload_component is not None and len(pager_duty_payload_component) > 255:
            raise ValueError("Invalid value for `pager_duty_payload_component`, length must be less than or equal to `255`")

        self._pager_duty_payload_component = pager_duty_payload_component

    @property
    def pager_duty_payload_group(self):
        """Gets the pager_duty_payload_group of this TransportPagerDutyGet.

        The payload group for the Pager Duty service.

        :return: The pager_duty_payload_group of this TransportPagerDutyGet.
        :rtype: str
        """
        return self._pager_duty_payload_group

    @pager_duty_payload_group.setter
    def pager_duty_payload_group(self, pager_duty_payload_group):
        """Sets the pager_duty_payload_group of this TransportPagerDutyGet.

        The payload group for the Pager Duty service.

        :param pager_duty_payload_group: The pager_duty_payload_group of this TransportPagerDutyGet.
        :type pager_duty_payload_group: str
        """
        if pager_duty_payload_group is not None and len(pager_duty_payload_group) > 255:
            raise ValueError("Invalid value for `pager_duty_payload_group`, length must be less than or equal to `255`")

        self._pager_duty_payload_group = pager_duty_payload_group

    @property
    def pager_duty_payload_severity(self):
        """Gets the pager_duty_payload_severity of this TransportPagerDutyGet.

        The payload severity for the Pager Duty service.

        :return: The pager_duty_payload_severity of this TransportPagerDutyGet.
        :rtype: str
        """
        return self._pager_duty_payload_severity

    @pager_duty_payload_severity.setter
    def pager_duty_payload_severity(self, pager_duty_payload_severity):
        """Sets the pager_duty_payload_severity of this TransportPagerDutyGet.

        The payload severity for the Pager Duty service.

        :param pager_duty_payload_severity: The pager_duty_payload_severity of this TransportPagerDutyGet.
        :type pager_duty_payload_severity: str
        """
        if pager_duty_payload_severity is not None and len(pager_duty_payload_severity) > 255:
            raise ValueError("Invalid value for `pager_duty_payload_severity`, length must be less than or equal to `255`")

        self._pager_duty_payload_severity = pager_duty_payload_severity

    @property
    def pager_duty_payload_source(self):
        """Gets the pager_duty_payload_source of this TransportPagerDutyGet.

        The payload source for the Pager Duty service.

        :return: The pager_duty_payload_source of this TransportPagerDutyGet.
        :rtype: str
        """
        return self._pager_duty_payload_source

    @pager_duty_payload_source.setter
    def pager_duty_payload_source(self, pager_duty_payload_source):
        """Sets the pager_duty_payload_source of this TransportPagerDutyGet.

        The payload source for the Pager Duty service.

        :param pager_duty_payload_source: The pager_duty_payload_source of this TransportPagerDutyGet.
        :type pager_duty_payload_source: str
        """
        if pager_duty_payload_source is not None and len(pager_duty_payload_source) > 255:
            raise ValueError("Invalid value for `pager_duty_payload_source`, length must be less than or equal to `255`")

        self._pager_duty_payload_source = pager_duty_payload_source

    @property
    def pager_duty_routing_key(self):
        """Gets the pager_duty_routing_key of this TransportPagerDutyGet.

        The routing key for the Pager Duty service.

        :return: The pager_duty_routing_key of this TransportPagerDutyGet.
        :rtype: str
        """
        return self._pager_duty_routing_key

    @pager_duty_routing_key.setter
    def pager_duty_routing_key(self, pager_duty_routing_key):
        """Sets the pager_duty_routing_key of this TransportPagerDutyGet.

        The routing key for the Pager Duty service.

        :param pager_duty_routing_key: The pager_duty_routing_key of this TransportPagerDutyGet.
        :type pager_duty_routing_key: str
        """
        if pager_duty_routing_key is None:
            raise ValueError("Invalid value for `pager_duty_routing_key`, must not be `None`")
        if pager_duty_routing_key is not None and len(pager_duty_routing_key) > 255:
            raise ValueError("Invalid value for `pager_duty_routing_key`, length must be less than or equal to `255`")

        self._pager_duty_routing_key = pager_duty_routing_key

    @property
    def partition(self):
        """Gets the partition of this TransportPagerDutyGet.

        The partition that contains this resource instance. The resource cannot be moved to another partition.

        :return: The partition of this TransportPagerDutyGet.
        :rtype: str
        """
        return self._partition

    @partition.setter
    def partition(self, partition):
        """Sets the partition of this TransportPagerDutyGet.

        The partition that contains this resource instance. The resource cannot be moved to another partition.

        :param partition: The partition of this TransportPagerDutyGet.
        :type partition: str
        """
        if partition is None:
            raise ValueError("Invalid value for `partition`, must not be `None`")

        self._partition = partition

    @property
    def resource_owner(self):
        """Gets the resource_owner of this TransportPagerDutyGet.

        The name of the person who owns this resource.

        :return: The resource_owner of this TransportPagerDutyGet.
        :rtype: str
        """
        return self._resource_owner

    @resource_owner.setter
    def resource_owner(self, resource_owner):
        """Sets the resource_owner of this TransportPagerDutyGet.

        The name of the person who owns this resource.

        :param resource_owner: The resource_owner of this TransportPagerDutyGet.
        :type resource_owner: str
        """

        self._resource_owner = resource_owner

    @property
    def transport_name(self):
        """Gets the transport_name of this TransportPagerDutyGet.

        The name of the transport.

        :return: The transport_name of this TransportPagerDutyGet.
        :rtype: str
        """
        return self._transport_name

    @transport_name.setter
    def transport_name(self, transport_name):
        """Sets the transport_name of this TransportPagerDutyGet.

        The name of the transport.

        :param transport_name: The transport_name of this TransportPagerDutyGet.
        :type transport_name: str
        """
        if transport_name is None:
            raise ValueError("Invalid value for `transport_name`, must not be `None`")
        if transport_name is not None and len(transport_name) > 255:
            raise ValueError("Invalid value for `transport_name`, length must be less than or equal to `255`")

        self._transport_name = transport_name
