# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.alert_log_jsonld_get_context import AlertLogJsonldGetContext
from openapi_server import util


class TransportPlivoJsonldGet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, context: AlertLogJsonldGetContext=None, id: str=None, type: str=None, created_at: datetime=None, data_segment_code: str=None, id: str=None, partition: str=None, plivo_auth_id: str=None, plivo_auth_token: str=None, plivo_from: str=None, resource_owner: str=None, transport_name: str=None):
        """TransportPlivoJsonldGet - a model defined in OpenAPI

        :param context: The context of this TransportPlivoJsonldGet.
        :param id: The id of this TransportPlivoJsonldGet.
        :param type: The type of this TransportPlivoJsonldGet.
        :param created_at: The created_at of this TransportPlivoJsonldGet.
        :param data_segment_code: The data_segment_code of this TransportPlivoJsonldGet.
        :param id: The id of this TransportPlivoJsonldGet.
        :param partition: The partition of this TransportPlivoJsonldGet.
        :param plivo_auth_id: The plivo_auth_id of this TransportPlivoJsonldGet.
        :param plivo_auth_token: The plivo_auth_token of this TransportPlivoJsonldGet.
        :param plivo_from: The plivo_from of this TransportPlivoJsonldGet.
        :param resource_owner: The resource_owner of this TransportPlivoJsonldGet.
        :param transport_name: The transport_name of this TransportPlivoJsonldGet.
        """
        self.openapi_types = {
            'context': AlertLogJsonldGetContext,
            'id': str,
            'type': str,
            'created_at': datetime,
            'data_segment_code': str,
            'id': str,
            'partition': str,
            'plivo_auth_id': str,
            'plivo_auth_token': str,
            'plivo_from': str,
            'resource_owner': str,
            'transport_name': str
        }

        self.attribute_map = {
            'context': '@context',
            'id': '@id',
            'type': '@type',
            'created_at': 'createdAt',
            'data_segment_code': 'dataSegmentCode',
            'id': 'id',
            'partition': 'partition',
            'plivo_auth_id': 'plivoAuthId',
            'plivo_auth_token': 'plivoAuthToken',
            'plivo_from': 'plivoFrom',
            'resource_owner': 'resourceOwner',
            'transport_name': 'transportName'
        }

        self._context = context
        self._id = id
        self._type = type
        self._created_at = created_at
        self._data_segment_code = data_segment_code
        self._id = id
        self._partition = partition
        self._plivo_auth_id = plivo_auth_id
        self._plivo_auth_token = plivo_auth_token
        self._plivo_from = plivo_from
        self._resource_owner = resource_owner
        self._transport_name = transport_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TransportPlivoJsonldGet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TransportPlivo.jsonld-get of this TransportPlivoJsonldGet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def context(self):
        """Gets the context of this TransportPlivoJsonldGet.


        :return: The context of this TransportPlivoJsonldGet.
        :rtype: AlertLogJsonldGetContext
        """
        return self._context

    @context.setter
    def context(self, context):
        """Sets the context of this TransportPlivoJsonldGet.


        :param context: The context of this TransportPlivoJsonldGet.
        :type context: AlertLogJsonldGetContext
        """

        self._context = context

    @property
    def id(self):
        """Gets the id of this TransportPlivoJsonldGet.


        :return: The id of this TransportPlivoJsonldGet.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TransportPlivoJsonldGet.


        :param id: The id of this TransportPlivoJsonldGet.
        :type id: str
        """

        self._id = id

    @property
    def type(self):
        """Gets the type of this TransportPlivoJsonldGet.


        :return: The type of this TransportPlivoJsonldGet.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this TransportPlivoJsonldGet.


        :param type: The type of this TransportPlivoJsonldGet.
        :type type: str
        """

        self._type = type

    @property
    def created_at(self):
        """Gets the created_at of this TransportPlivoJsonldGet.

        When the resource instance was created. This date-time is in the UTC timezone.

        :return: The created_at of this TransportPlivoJsonldGet.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this TransportPlivoJsonldGet.

        When the resource instance was created. This date-time is in the UTC timezone.

        :param created_at: The created_at of this TransportPlivoJsonldGet.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def data_segment_code(self):
        """Gets the data_segment_code of this TransportPlivoJsonldGet.

        User-provided string on which to segment and filter data. Max 50 characters.

        :return: The data_segment_code of this TransportPlivoJsonldGet.
        :rtype: str
        """
        return self._data_segment_code

    @data_segment_code.setter
    def data_segment_code(self, data_segment_code):
        """Sets the data_segment_code of this TransportPlivoJsonldGet.

        User-provided string on which to segment and filter data. Max 50 characters.

        :param data_segment_code: The data_segment_code of this TransportPlivoJsonldGet.
        :type data_segment_code: str
        """
        if data_segment_code is not None and len(data_segment_code) > 50:
            raise ValueError("Invalid value for `data_segment_code`, length must be less than or equal to `50`")

        self._data_segment_code = data_segment_code

    @property
    def id(self):
        """Gets the id of this TransportPlivoJsonldGet.

        The unique identifier of the resource instance.

        :return: The id of this TransportPlivoJsonldGet.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TransportPlivoJsonldGet.

        The unique identifier of the resource instance.

        :param id: The id of this TransportPlivoJsonldGet.
        :type id: str
        """

        self._id = id

    @property
    def partition(self):
        """Gets the partition of this TransportPlivoJsonldGet.

        The partition that contains this resource instance. The resource cannot be moved to another partition.

        :return: The partition of this TransportPlivoJsonldGet.
        :rtype: str
        """
        return self._partition

    @partition.setter
    def partition(self, partition):
        """Sets the partition of this TransportPlivoJsonldGet.

        The partition that contains this resource instance. The resource cannot be moved to another partition.

        :param partition: The partition of this TransportPlivoJsonldGet.
        :type partition: str
        """
        if partition is None:
            raise ValueError("Invalid value for `partition`, must not be `None`")

        self._partition = partition

    @property
    def plivo_auth_id(self):
        """Gets the plivo_auth_id of this TransportPlivoJsonldGet.

        The auth ID for the Plivo service.

        :return: The plivo_auth_id of this TransportPlivoJsonldGet.
        :rtype: str
        """
        return self._plivo_auth_id

    @plivo_auth_id.setter
    def plivo_auth_id(self, plivo_auth_id):
        """Sets the plivo_auth_id of this TransportPlivoJsonldGet.

        The auth ID for the Plivo service.

        :param plivo_auth_id: The plivo_auth_id of this TransportPlivoJsonldGet.
        :type plivo_auth_id: str
        """
        if plivo_auth_id is None:
            raise ValueError("Invalid value for `plivo_auth_id`, must not be `None`")
        if plivo_auth_id is not None and len(plivo_auth_id) > 255:
            raise ValueError("Invalid value for `plivo_auth_id`, length must be less than or equal to `255`")

        self._plivo_auth_id = plivo_auth_id

    @property
    def plivo_auth_token(self):
        """Gets the plivo_auth_token of this TransportPlivoJsonldGet.

        The auth token for the Plivo service. Stored in encrypted format.

        :return: The plivo_auth_token of this TransportPlivoJsonldGet.
        :rtype: str
        """
        return self._plivo_auth_token

    @plivo_auth_token.setter
    def plivo_auth_token(self, plivo_auth_token):
        """Sets the plivo_auth_token of this TransportPlivoJsonldGet.

        The auth token for the Plivo service. Stored in encrypted format.

        :param plivo_auth_token: The plivo_auth_token of this TransportPlivoJsonldGet.
        :type plivo_auth_token: str
        """
        if plivo_auth_token is None:
            raise ValueError("Invalid value for `plivo_auth_token`, must not be `None`")
        if plivo_auth_token is not None and len(plivo_auth_token) > 1000:
            raise ValueError("Invalid value for `plivo_auth_token`, length must be less than or equal to `1000`")

        self._plivo_auth_token = plivo_auth_token

    @property
    def plivo_from(self):
        """Gets the plivo_from of this TransportPlivoJsonldGet.

        The sender value for the Plivo service.

        :return: The plivo_from of this TransportPlivoJsonldGet.
        :rtype: str
        """
        return self._plivo_from

    @plivo_from.setter
    def plivo_from(self, plivo_from):
        """Sets the plivo_from of this TransportPlivoJsonldGet.

        The sender value for the Plivo service.

        :param plivo_from: The plivo_from of this TransportPlivoJsonldGet.
        :type plivo_from: str
        """
        if plivo_from is None:
            raise ValueError("Invalid value for `plivo_from`, must not be `None`")
        if plivo_from is not None and len(plivo_from) > 255:
            raise ValueError("Invalid value for `plivo_from`, length must be less than or equal to `255`")

        self._plivo_from = plivo_from

    @property
    def resource_owner(self):
        """Gets the resource_owner of this TransportPlivoJsonldGet.

        The name of the person who owns this resource.

        :return: The resource_owner of this TransportPlivoJsonldGet.
        :rtype: str
        """
        return self._resource_owner

    @resource_owner.setter
    def resource_owner(self, resource_owner):
        """Sets the resource_owner of this TransportPlivoJsonldGet.

        The name of the person who owns this resource.

        :param resource_owner: The resource_owner of this TransportPlivoJsonldGet.
        :type resource_owner: str
        """

        self._resource_owner = resource_owner

    @property
    def transport_name(self):
        """Gets the transport_name of this TransportPlivoJsonldGet.

        The name of the transport.

        :return: The transport_name of this TransportPlivoJsonldGet.
        :rtype: str
        """
        return self._transport_name

    @transport_name.setter
    def transport_name(self, transport_name):
        """Sets the transport_name of this TransportPlivoJsonldGet.

        The name of the transport.

        :param transport_name: The transport_name of this TransportPlivoJsonldGet.
        :type transport_name: str
        """
        if transport_name is None:
            raise ValueError("Invalid value for `transport_name`, must not be `None`")
        if transport_name is not None and len(transport_name) > 255:
            raise ValueError("Invalid value for `transport_name`, length must be less than or equal to `255`")

        self._transport_name = transport_name
