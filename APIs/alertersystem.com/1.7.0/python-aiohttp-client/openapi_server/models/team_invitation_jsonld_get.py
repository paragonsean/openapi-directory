# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.alert_log_jsonld_get_context import AlertLogJsonldGetContext
from openapi_server import util


class TeamInvitationJsonldGet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, context: AlertLogJsonldGetContext=None, id: str=None, type: str=None, created_at: datetime=None, data_segment_code: str=None, id: str=None, invitee_email: str=None, invitee_first_name: str=None, invitee_last_name: str=None, partition: str=None, resource_owner: str=None, status_at: datetime=None, team_invitation_status: str=None, team_member_role_code: str=None):
        """TeamInvitationJsonldGet - a model defined in OpenAPI

        :param context: The context of this TeamInvitationJsonldGet.
        :param id: The id of this TeamInvitationJsonldGet.
        :param type: The type of this TeamInvitationJsonldGet.
        :param created_at: The created_at of this TeamInvitationJsonldGet.
        :param data_segment_code: The data_segment_code of this TeamInvitationJsonldGet.
        :param id: The id of this TeamInvitationJsonldGet.
        :param invitee_email: The invitee_email of this TeamInvitationJsonldGet.
        :param invitee_first_name: The invitee_first_name of this TeamInvitationJsonldGet.
        :param invitee_last_name: The invitee_last_name of this TeamInvitationJsonldGet.
        :param partition: The partition of this TeamInvitationJsonldGet.
        :param resource_owner: The resource_owner of this TeamInvitationJsonldGet.
        :param status_at: The status_at of this TeamInvitationJsonldGet.
        :param team_invitation_status: The team_invitation_status of this TeamInvitationJsonldGet.
        :param team_member_role_code: The team_member_role_code of this TeamInvitationJsonldGet.
        """
        self.openapi_types = {
            'context': AlertLogJsonldGetContext,
            'id': str,
            'type': str,
            'created_at': datetime,
            'data_segment_code': str,
            'id': str,
            'invitee_email': str,
            'invitee_first_name': str,
            'invitee_last_name': str,
            'partition': str,
            'resource_owner': str,
            'status_at': datetime,
            'team_invitation_status': str,
            'team_member_role_code': str
        }

        self.attribute_map = {
            'context': '@context',
            'id': '@id',
            'type': '@type',
            'created_at': 'createdAt',
            'data_segment_code': 'dataSegmentCode',
            'id': 'id',
            'invitee_email': 'inviteeEmail',
            'invitee_first_name': 'inviteeFirstName',
            'invitee_last_name': 'inviteeLastName',
            'partition': 'partition',
            'resource_owner': 'resourceOwner',
            'status_at': 'statusAt',
            'team_invitation_status': 'teamInvitationStatus',
            'team_member_role_code': 'teamMemberRoleCode'
        }

        self._context = context
        self._id = id
        self._type = type
        self._created_at = created_at
        self._data_segment_code = data_segment_code
        self._id = id
        self._invitee_email = invitee_email
        self._invitee_first_name = invitee_first_name
        self._invitee_last_name = invitee_last_name
        self._partition = partition
        self._resource_owner = resource_owner
        self._status_at = status_at
        self._team_invitation_status = team_invitation_status
        self._team_member_role_code = team_member_role_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TeamInvitationJsonldGet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TeamInvitation.jsonld-get of this TeamInvitationJsonldGet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def context(self):
        """Gets the context of this TeamInvitationJsonldGet.


        :return: The context of this TeamInvitationJsonldGet.
        :rtype: AlertLogJsonldGetContext
        """
        return self._context

    @context.setter
    def context(self, context):
        """Sets the context of this TeamInvitationJsonldGet.


        :param context: The context of this TeamInvitationJsonldGet.
        :type context: AlertLogJsonldGetContext
        """

        self._context = context

    @property
    def id(self):
        """Gets the id of this TeamInvitationJsonldGet.


        :return: The id of this TeamInvitationJsonldGet.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TeamInvitationJsonldGet.


        :param id: The id of this TeamInvitationJsonldGet.
        :type id: str
        """

        self._id = id

    @property
    def type(self):
        """Gets the type of this TeamInvitationJsonldGet.


        :return: The type of this TeamInvitationJsonldGet.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this TeamInvitationJsonldGet.


        :param type: The type of this TeamInvitationJsonldGet.
        :type type: str
        """

        self._type = type

    @property
    def created_at(self):
        """Gets the created_at of this TeamInvitationJsonldGet.

        When the resource instance was created. This date-time is in the UTC timezone.

        :return: The created_at of this TeamInvitationJsonldGet.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this TeamInvitationJsonldGet.

        When the resource instance was created. This date-time is in the UTC timezone.

        :param created_at: The created_at of this TeamInvitationJsonldGet.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def data_segment_code(self):
        """Gets the data_segment_code of this TeamInvitationJsonldGet.

        User-provided string on which to segment and filter data. Max 50 characters.

        :return: The data_segment_code of this TeamInvitationJsonldGet.
        :rtype: str
        """
        return self._data_segment_code

    @data_segment_code.setter
    def data_segment_code(self, data_segment_code):
        """Sets the data_segment_code of this TeamInvitationJsonldGet.

        User-provided string on which to segment and filter data. Max 50 characters.

        :param data_segment_code: The data_segment_code of this TeamInvitationJsonldGet.
        :type data_segment_code: str
        """
        if data_segment_code is not None and len(data_segment_code) > 50:
            raise ValueError("Invalid value for `data_segment_code`, length must be less than or equal to `50`")

        self._data_segment_code = data_segment_code

    @property
    def id(self):
        """Gets the id of this TeamInvitationJsonldGet.

        The unique identifier of the resource instance.

        :return: The id of this TeamInvitationJsonldGet.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TeamInvitationJsonldGet.

        The unique identifier of the resource instance.

        :param id: The id of this TeamInvitationJsonldGet.
        :type id: str
        """

        self._id = id

    @property
    def invitee_email(self):
        """Gets the invitee_email of this TeamInvitationJsonldGet.

        The email address of the person that is being invited.

        :return: The invitee_email of this TeamInvitationJsonldGet.
        :rtype: str
        """
        return self._invitee_email

    @invitee_email.setter
    def invitee_email(self, invitee_email):
        """Sets the invitee_email of this TeamInvitationJsonldGet.

        The email address of the person that is being invited.

        :param invitee_email: The invitee_email of this TeamInvitationJsonldGet.
        :type invitee_email: str
        """
        if invitee_email is None:
            raise ValueError("Invalid value for `invitee_email`, must not be `None`")

        self._invitee_email = invitee_email

    @property
    def invitee_first_name(self):
        """Gets the invitee_first_name of this TeamInvitationJsonldGet.

        The first name of the person that is being invited.

        :return: The invitee_first_name of this TeamInvitationJsonldGet.
        :rtype: str
        """
        return self._invitee_first_name

    @invitee_first_name.setter
    def invitee_first_name(self, invitee_first_name):
        """Sets the invitee_first_name of this TeamInvitationJsonldGet.

        The first name of the person that is being invited.

        :param invitee_first_name: The invitee_first_name of this TeamInvitationJsonldGet.
        :type invitee_first_name: str
        """
        if invitee_first_name is None:
            raise ValueError("Invalid value for `invitee_first_name`, must not be `None`")

        self._invitee_first_name = invitee_first_name

    @property
    def invitee_last_name(self):
        """Gets the invitee_last_name of this TeamInvitationJsonldGet.

        The last name of the person that is being invited.

        :return: The invitee_last_name of this TeamInvitationJsonldGet.
        :rtype: str
        """
        return self._invitee_last_name

    @invitee_last_name.setter
    def invitee_last_name(self, invitee_last_name):
        """Sets the invitee_last_name of this TeamInvitationJsonldGet.

        The last name of the person that is being invited.

        :param invitee_last_name: The invitee_last_name of this TeamInvitationJsonldGet.
        :type invitee_last_name: str
        """
        if invitee_last_name is None:
            raise ValueError("Invalid value for `invitee_last_name`, must not be `None`")

        self._invitee_last_name = invitee_last_name

    @property
    def partition(self):
        """Gets the partition of this TeamInvitationJsonldGet.

        The partition that contains this resource instance. The resource cannot be moved to another partition.

        :return: The partition of this TeamInvitationJsonldGet.
        :rtype: str
        """
        return self._partition

    @partition.setter
    def partition(self, partition):
        """Sets the partition of this TeamInvitationJsonldGet.

        The partition that contains this resource instance. The resource cannot be moved to another partition.

        :param partition: The partition of this TeamInvitationJsonldGet.
        :type partition: str
        """
        if partition is None:
            raise ValueError("Invalid value for `partition`, must not be `None`")

        self._partition = partition

    @property
    def resource_owner(self):
        """Gets the resource_owner of this TeamInvitationJsonldGet.

        The name of the person who owns this resource.

        :return: The resource_owner of this TeamInvitationJsonldGet.
        :rtype: str
        """
        return self._resource_owner

    @resource_owner.setter
    def resource_owner(self, resource_owner):
        """Sets the resource_owner of this TeamInvitationJsonldGet.

        The name of the person who owns this resource.

        :param resource_owner: The resource_owner of this TeamInvitationJsonldGet.
        :type resource_owner: str
        """

        self._resource_owner = resource_owner

    @property
    def status_at(self):
        """Gets the status_at of this TeamInvitationJsonldGet.

        When the current status too effect. This date-time is in the UTC timezone. 

        :return: The status_at of this TeamInvitationJsonldGet.
        :rtype: datetime
        """
        return self._status_at

    @status_at.setter
    def status_at(self, status_at):
        """Sets the status_at of this TeamInvitationJsonldGet.

        When the current status too effect. This date-time is in the UTC timezone. 

        :param status_at: The status_at of this TeamInvitationJsonldGet.
        :type status_at: datetime
        """

        self._status_at = status_at

    @property
    def team_invitation_status(self):
        """Gets the team_invitation_status of this TeamInvitationJsonldGet.

        The current status of the invitation.

        :return: The team_invitation_status of this TeamInvitationJsonldGet.
        :rtype: str
        """
        return self._team_invitation_status

    @team_invitation_status.setter
    def team_invitation_status(self, team_invitation_status):
        """Sets the team_invitation_status of this TeamInvitationJsonldGet.

        The current status of the invitation.

        :param team_invitation_status: The team_invitation_status of this TeamInvitationJsonldGet.
        :type team_invitation_status: str
        """

        self._team_invitation_status = team_invitation_status

    @property
    def team_member_role_code(self):
        """Gets the team_member_role_code of this TeamInvitationJsonldGet.

        The role of the team member on the team.

        :return: The team_member_role_code of this TeamInvitationJsonldGet.
        :rtype: str
        """
        return self._team_member_role_code

    @team_member_role_code.setter
    def team_member_role_code(self, team_member_role_code):
        """Sets the team_member_role_code of this TeamInvitationJsonldGet.

        The role of the team member on the team.

        :param team_member_role_code: The team_member_role_code of this TeamInvitationJsonldGet.
        :type team_member_role_code: str
        """

        self._team_member_role_code = team_member_role_code
