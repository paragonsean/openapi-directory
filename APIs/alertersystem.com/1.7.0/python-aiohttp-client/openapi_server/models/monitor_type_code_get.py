# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MonitorTypeCodeGet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code_description: str=None, code_description_expanded: str=None, id: str=None):
        """MonitorTypeCodeGet - a model defined in OpenAPI

        :param code_description: The code_description of this MonitorTypeCodeGet.
        :param code_description_expanded: The code_description_expanded of this MonitorTypeCodeGet.
        :param id: The id of this MonitorTypeCodeGet.
        """
        self.openapi_types = {
            'code_description': str,
            'code_description_expanded': str,
            'id': str
        }

        self.attribute_map = {
            'code_description': 'codeDescription',
            'code_description_expanded': 'codeDescriptionExpanded',
            'id': 'id'
        }

        self._code_description = code_description
        self._code_description_expanded = code_description_expanded
        self._id = id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MonitorTypeCodeGet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MonitorTypeCode-get of this MonitorTypeCodeGet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code_description(self):
        """Gets the code_description of this MonitorTypeCodeGet.


        :return: The code_description of this MonitorTypeCodeGet.
        :rtype: str
        """
        return self._code_description

    @code_description.setter
    def code_description(self, code_description):
        """Sets the code_description of this MonitorTypeCodeGet.


        :param code_description: The code_description of this MonitorTypeCodeGet.
        :type code_description: str
        """

        self._code_description = code_description

    @property
    def code_description_expanded(self):
        """Gets the code_description_expanded of this MonitorTypeCodeGet.


        :return: The code_description_expanded of this MonitorTypeCodeGet.
        :rtype: str
        """
        return self._code_description_expanded

    @code_description_expanded.setter
    def code_description_expanded(self, code_description_expanded):
        """Sets the code_description_expanded of this MonitorTypeCodeGet.


        :param code_description_expanded: The code_description_expanded of this MonitorTypeCodeGet.
        :type code_description_expanded: str
        """

        self._code_description_expanded = code_description_expanded

    @property
    def id(self):
        """Gets the id of this MonitorTypeCodeGet.


        :return: The id of this MonitorTypeCodeGet.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this MonitorTypeCodeGet.


        :param id: The id of this MonitorTypeCodeGet.
        :type id: str
        """

        self._id = id
