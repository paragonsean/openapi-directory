# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.alert_log_jsonld_get_context import AlertLogJsonldGetContext
from openapi_server import util


class TimezoneCodeJsonldGet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, context: AlertLogJsonldGetContext=None, id: str=None, type: str=None, code_name: str=None, id: str=None, offset_from_utc: float=None, timezone_date_string: str=None):
        """TimezoneCodeJsonldGet - a model defined in OpenAPI

        :param context: The context of this TimezoneCodeJsonldGet.
        :param id: The id of this TimezoneCodeJsonldGet.
        :param type: The type of this TimezoneCodeJsonldGet.
        :param code_name: The code_name of this TimezoneCodeJsonldGet.
        :param id: The id of this TimezoneCodeJsonldGet.
        :param offset_from_utc: The offset_from_utc of this TimezoneCodeJsonldGet.
        :param timezone_date_string: The timezone_date_string of this TimezoneCodeJsonldGet.
        """
        self.openapi_types = {
            'context': AlertLogJsonldGetContext,
            'id': str,
            'type': str,
            'code_name': str,
            'id': str,
            'offset_from_utc': float,
            'timezone_date_string': str
        }

        self.attribute_map = {
            'context': '@context',
            'id': '@id',
            'type': '@type',
            'code_name': 'codeName',
            'id': 'id',
            'offset_from_utc': 'offsetFromUtc',
            'timezone_date_string': 'timezoneDateString'
        }

        self._context = context
        self._id = id
        self._type = type
        self._code_name = code_name
        self._id = id
        self._offset_from_utc = offset_from_utc
        self._timezone_date_string = timezone_date_string

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TimezoneCodeJsonldGet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TimezoneCode.jsonld-get of this TimezoneCodeJsonldGet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def context(self):
        """Gets the context of this TimezoneCodeJsonldGet.


        :return: The context of this TimezoneCodeJsonldGet.
        :rtype: AlertLogJsonldGetContext
        """
        return self._context

    @context.setter
    def context(self, context):
        """Sets the context of this TimezoneCodeJsonldGet.


        :param context: The context of this TimezoneCodeJsonldGet.
        :type context: AlertLogJsonldGetContext
        """

        self._context = context

    @property
    def id(self):
        """Gets the id of this TimezoneCodeJsonldGet.


        :return: The id of this TimezoneCodeJsonldGet.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TimezoneCodeJsonldGet.


        :param id: The id of this TimezoneCodeJsonldGet.
        :type id: str
        """

        self._id = id

    @property
    def type(self):
        """Gets the type of this TimezoneCodeJsonldGet.


        :return: The type of this TimezoneCodeJsonldGet.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this TimezoneCodeJsonldGet.


        :param type: The type of this TimezoneCodeJsonldGet.
        :type type: str
        """

        self._type = type

    @property
    def code_name(self):
        """Gets the code_name of this TimezoneCodeJsonldGet.

        The name of the code.

        :return: The code_name of this TimezoneCodeJsonldGet.
        :rtype: str
        """
        return self._code_name

    @code_name.setter
    def code_name(self, code_name):
        """Sets the code_name of this TimezoneCodeJsonldGet.

        The name of the code.

        :param code_name: The code_name of this TimezoneCodeJsonldGet.
        :type code_name: str
        """

        self._code_name = code_name

    @property
    def id(self):
        """Gets the id of this TimezoneCodeJsonldGet.

        The unique identifier of the resource instance.

        :return: The id of this TimezoneCodeJsonldGet.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TimezoneCodeJsonldGet.

        The unique identifier of the resource instance.

        :param id: The id of this TimezoneCodeJsonldGet.
        :type id: str
        """

        self._id = id

    @property
    def offset_from_utc(self):
        """Gets the offset_from_utc of this TimezoneCodeJsonldGet.

        The numeric offset from the UTC timezone.

        :return: The offset_from_utc of this TimezoneCodeJsonldGet.
        :rtype: float
        """
        return self._offset_from_utc

    @offset_from_utc.setter
    def offset_from_utc(self, offset_from_utc):
        """Sets the offset_from_utc of this TimezoneCodeJsonldGet.

        The numeric offset from the UTC timezone.

        :param offset_from_utc: The offset_from_utc of this TimezoneCodeJsonldGet.
        :type offset_from_utc: float
        """

        self._offset_from_utc = offset_from_utc

    @property
    def timezone_date_string(self):
        """Gets the timezone_date_string of this TimezoneCodeJsonldGet.

        The text offset from the UTC timezone that forms part of the ISO 8601 date time format.

        :return: The timezone_date_string of this TimezoneCodeJsonldGet.
        :rtype: str
        """
        return self._timezone_date_string

    @timezone_date_string.setter
    def timezone_date_string(self, timezone_date_string):
        """Sets the timezone_date_string of this TimezoneCodeJsonldGet.

        The text offset from the UTC timezone that forms part of the ISO 8601 date time format.

        :param timezone_date_string: The timezone_date_string of this TimezoneCodeJsonldGet.
        :type timezone_date_string: str
        """

        self._timezone_date_string = timezone_date_string
