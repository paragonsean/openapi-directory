# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.api_alert_log_get_collection200_response_hydra_search import ApiAlertLogGetCollection200ResponseHydraSearch
from openapi_server.models.api_alert_log_get_collection200_response_hydra_view import ApiAlertLogGetCollection200ResponseHydraView
from openapi_server.models.transport_smsc_jsonld_get import TransportSmscJsonldGet
from openapi_server import util


class ApiTransportSmscGetCollection200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hydramember: List[TransportSmscJsonldGet]=None, hydrasearch: ApiAlertLogGetCollection200ResponseHydraSearch=None, hydratotal_items: int=None, hydraview: ApiAlertLogGetCollection200ResponseHydraView=None):
        """ApiTransportSmscGetCollection200Response - a model defined in OpenAPI

        :param hydramember: The hydramember of this ApiTransportSmscGetCollection200Response.
        :param hydrasearch: The hydrasearch of this ApiTransportSmscGetCollection200Response.
        :param hydratotal_items: The hydratotal_items of this ApiTransportSmscGetCollection200Response.
        :param hydraview: The hydraview of this ApiTransportSmscGetCollection200Response.
        """
        self.openapi_types = {
            'hydramember': List[TransportSmscJsonldGet],
            'hydrasearch': ApiAlertLogGetCollection200ResponseHydraSearch,
            'hydratotal_items': int,
            'hydraview': ApiAlertLogGetCollection200ResponseHydraView
        }

        self.attribute_map = {
            'hydramember': 'hydra:member',
            'hydrasearch': 'hydra:search',
            'hydratotal_items': 'hydra:totalItems',
            'hydraview': 'hydra:view'
        }

        self._hydramember = hydramember
        self._hydrasearch = hydrasearch
        self._hydratotal_items = hydratotal_items
        self._hydraview = hydraview

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiTransportSmscGetCollection200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The api_transport_smsc_get_collection_200_response of this ApiTransportSmscGetCollection200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hydramember(self):
        """Gets the hydramember of this ApiTransportSmscGetCollection200Response.


        :return: The hydramember of this ApiTransportSmscGetCollection200Response.
        :rtype: List[TransportSmscJsonldGet]
        """
        return self._hydramember

    @hydramember.setter
    def hydramember(self, hydramember):
        """Sets the hydramember of this ApiTransportSmscGetCollection200Response.


        :param hydramember: The hydramember of this ApiTransportSmscGetCollection200Response.
        :type hydramember: List[TransportSmscJsonldGet]
        """
        if hydramember is None:
            raise ValueError("Invalid value for `hydramember`, must not be `None`")

        self._hydramember = hydramember

    @property
    def hydrasearch(self):
        """Gets the hydrasearch of this ApiTransportSmscGetCollection200Response.


        :return: The hydrasearch of this ApiTransportSmscGetCollection200Response.
        :rtype: ApiAlertLogGetCollection200ResponseHydraSearch
        """
        return self._hydrasearch

    @hydrasearch.setter
    def hydrasearch(self, hydrasearch):
        """Sets the hydrasearch of this ApiTransportSmscGetCollection200Response.


        :param hydrasearch: The hydrasearch of this ApiTransportSmscGetCollection200Response.
        :type hydrasearch: ApiAlertLogGetCollection200ResponseHydraSearch
        """

        self._hydrasearch = hydrasearch

    @property
    def hydratotal_items(self):
        """Gets the hydratotal_items of this ApiTransportSmscGetCollection200Response.


        :return: The hydratotal_items of this ApiTransportSmscGetCollection200Response.
        :rtype: int
        """
        return self._hydratotal_items

    @hydratotal_items.setter
    def hydratotal_items(self, hydratotal_items):
        """Sets the hydratotal_items of this ApiTransportSmscGetCollection200Response.


        :param hydratotal_items: The hydratotal_items of this ApiTransportSmscGetCollection200Response.
        :type hydratotal_items: int
        """
        if hydratotal_items is not None and hydratotal_items < 0:
            raise ValueError("Invalid value for `hydratotal_items`, must be a value greater than or equal to `0`")

        self._hydratotal_items = hydratotal_items

    @property
    def hydraview(self):
        """Gets the hydraview of this ApiTransportSmscGetCollection200Response.


        :return: The hydraview of this ApiTransportSmscGetCollection200Response.
        :rtype: ApiAlertLogGetCollection200ResponseHydraView
        """
        return self._hydraview

    @hydraview.setter
    def hydraview(self, hydraview):
        """Sets the hydraview of this ApiTransportSmscGetCollection200Response.


        :param hydraview: The hydraview of this ApiTransportSmscGetCollection200Response.
        :type hydraview: ApiAlertLogGetCollection200ResponseHydraView
        """

        self._hydraview = hydraview
