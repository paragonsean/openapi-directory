# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApiAlertLogGetCollection200ResponseHydraSearchHydraMappingInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type: str=None, _property: str=None, required: bool=None, variable: str=None):
        """ApiAlertLogGetCollection200ResponseHydraSearchHydraMappingInner - a model defined in OpenAPI

        :param type: The type of this ApiAlertLogGetCollection200ResponseHydraSearchHydraMappingInner.
        :param _property: The _property of this ApiAlertLogGetCollection200ResponseHydraSearchHydraMappingInner.
        :param required: The required of this ApiAlertLogGetCollection200ResponseHydraSearchHydraMappingInner.
        :param variable: The variable of this ApiAlertLogGetCollection200ResponseHydraSearchHydraMappingInner.
        """
        self.openapi_types = {
            'type': str,
            '_property': str,
            'required': bool,
            'variable': str
        }

        self.attribute_map = {
            'type': '@type',
            '_property': 'property',
            'required': 'required',
            'variable': 'variable'
        }

        self._type = type
        self.__property = _property
        self._required = required
        self._variable = variable

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiAlertLogGetCollection200ResponseHydraSearchHydraMappingInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The api_alert_log_get_collection_200_response_hydra_search_hydra_mapping_inner of this ApiAlertLogGetCollection200ResponseHydraSearchHydraMappingInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self):
        """Gets the type of this ApiAlertLogGetCollection200ResponseHydraSearchHydraMappingInner.


        :return: The type of this ApiAlertLogGetCollection200ResponseHydraSearchHydraMappingInner.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ApiAlertLogGetCollection200ResponseHydraSearchHydraMappingInner.


        :param type: The type of this ApiAlertLogGetCollection200ResponseHydraSearchHydraMappingInner.
        :type type: str
        """

        self._type = type

    @property
    def _property(self):
        """Gets the _property of this ApiAlertLogGetCollection200ResponseHydraSearchHydraMappingInner.


        :return: The _property of this ApiAlertLogGetCollection200ResponseHydraSearchHydraMappingInner.
        :rtype: str
        """
        return self.__property

    @_property.setter
    def _property(self, _property):
        """Sets the _property of this ApiAlertLogGetCollection200ResponseHydraSearchHydraMappingInner.


        :param _property: The _property of this ApiAlertLogGetCollection200ResponseHydraSearchHydraMappingInner.
        :type _property: str
        """

        self.__property = _property

    @property
    def required(self):
        """Gets the required of this ApiAlertLogGetCollection200ResponseHydraSearchHydraMappingInner.


        :return: The required of this ApiAlertLogGetCollection200ResponseHydraSearchHydraMappingInner.
        :rtype: bool
        """
        return self._required

    @required.setter
    def required(self, required):
        """Sets the required of this ApiAlertLogGetCollection200ResponseHydraSearchHydraMappingInner.


        :param required: The required of this ApiAlertLogGetCollection200ResponseHydraSearchHydraMappingInner.
        :type required: bool
        """

        self._required = required

    @property
    def variable(self):
        """Gets the variable of this ApiAlertLogGetCollection200ResponseHydraSearchHydraMappingInner.


        :return: The variable of this ApiAlertLogGetCollection200ResponseHydraSearchHydraMappingInner.
        :rtype: str
        """
        return self._variable

    @variable.setter
    def variable(self, variable):
        """Sets the variable of this ApiAlertLogGetCollection200ResponseHydraSearchHydraMappingInner.


        :param variable: The variable of this ApiAlertLogGetCollection200ResponseHydraSearchHydraMappingInner.
        :type variable: str
        """

        self._variable = variable
