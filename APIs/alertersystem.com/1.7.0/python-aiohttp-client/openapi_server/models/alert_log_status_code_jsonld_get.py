# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.alert_log_jsonld_get_context import AlertLogJsonldGetContext
from openapi_server import util


class AlertLogStatusCodeJsonldGet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, context: AlertLogJsonldGetContext=None, id: str=None, type: str=None, id: str=None):
        """AlertLogStatusCodeJsonldGet - a model defined in OpenAPI

        :param context: The context of this AlertLogStatusCodeJsonldGet.
        :param id: The id of this AlertLogStatusCodeJsonldGet.
        :param type: The type of this AlertLogStatusCodeJsonldGet.
        :param id: The id of this AlertLogStatusCodeJsonldGet.
        """
        self.openapi_types = {
            'context': AlertLogJsonldGetContext,
            'id': str,
            'type': str,
            'id': str
        }

        self.attribute_map = {
            'context': '@context',
            'id': '@id',
            'type': '@type',
            'id': 'id'
        }

        self._context = context
        self._id = id
        self._type = type
        self._id = id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AlertLogStatusCodeJsonldGet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AlertLogStatusCode.jsonld-get of this AlertLogStatusCodeJsonldGet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def context(self):
        """Gets the context of this AlertLogStatusCodeJsonldGet.


        :return: The context of this AlertLogStatusCodeJsonldGet.
        :rtype: AlertLogJsonldGetContext
        """
        return self._context

    @context.setter
    def context(self, context):
        """Sets the context of this AlertLogStatusCodeJsonldGet.


        :param context: The context of this AlertLogStatusCodeJsonldGet.
        :type context: AlertLogJsonldGetContext
        """

        self._context = context

    @property
    def id(self):
        """Gets the id of this AlertLogStatusCodeJsonldGet.


        :return: The id of this AlertLogStatusCodeJsonldGet.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AlertLogStatusCodeJsonldGet.


        :param id: The id of this AlertLogStatusCodeJsonldGet.
        :type id: str
        """

        self._id = id

    @property
    def type(self):
        """Gets the type of this AlertLogStatusCodeJsonldGet.


        :return: The type of this AlertLogStatusCodeJsonldGet.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this AlertLogStatusCodeJsonldGet.


        :param type: The type of this AlertLogStatusCodeJsonldGet.
        :type type: str
        """

        self._type = type

    @property
    def id(self):
        """Gets the id of this AlertLogStatusCodeJsonldGet.


        :return: The id of this AlertLogStatusCodeJsonldGet.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AlertLogStatusCodeJsonldGet.


        :param id: The id of this AlertLogStatusCodeJsonldGet.
        :type id: str
        """

        self._id = id
