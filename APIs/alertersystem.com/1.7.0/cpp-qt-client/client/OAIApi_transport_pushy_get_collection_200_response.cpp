/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApi_transport_pushy_get_collection_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApi_transport_pushy_get_collection_200_response::OAIApi_transport_pushy_get_collection_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApi_transport_pushy_get_collection_200_response::OAIApi_transport_pushy_get_collection_200_response() {
    this->initializeModel();
}

OAIApi_transport_pushy_get_collection_200_response::~OAIApi_transport_pushy_get_collection_200_response() {}

void OAIApi_transport_pushy_get_collection_200_response::initializeModel() {

    m_hydramember_isSet = false;
    m_hydramember_isValid = false;

    m_hydrasearch_isSet = false;
    m_hydrasearch_isValid = false;

    m_hydratotal_items_isSet = false;
    m_hydratotal_items_isValid = false;

    m_hydraview_isSet = false;
    m_hydraview_isValid = false;
}

void OAIApi_transport_pushy_get_collection_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApi_transport_pushy_get_collection_200_response::fromJsonObject(QJsonObject json) {

    m_hydramember_isValid = ::OpenAPI::fromJsonValue(m_hydramember, json[QString("hydra:member")]);
    m_hydramember_isSet = !json[QString("hydra:member")].isNull() && m_hydramember_isValid;

    m_hydrasearch_isValid = ::OpenAPI::fromJsonValue(m_hydrasearch, json[QString("hydra:search")]);
    m_hydrasearch_isSet = !json[QString("hydra:search")].isNull() && m_hydrasearch_isValid;

    m_hydratotal_items_isValid = ::OpenAPI::fromJsonValue(m_hydratotal_items, json[QString("hydra:totalItems")]);
    m_hydratotal_items_isSet = !json[QString("hydra:totalItems")].isNull() && m_hydratotal_items_isValid;

    m_hydraview_isValid = ::OpenAPI::fromJsonValue(m_hydraview, json[QString("hydra:view")]);
    m_hydraview_isSet = !json[QString("hydra:view")].isNull() && m_hydraview_isValid;
}

QString OAIApi_transport_pushy_get_collection_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApi_transport_pushy_get_collection_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_hydramember.size() > 0) {
        obj.insert(QString("hydra:member"), ::OpenAPI::toJsonValue(m_hydramember));
    }
    if (m_hydrasearch.isSet()) {
        obj.insert(QString("hydra:search"), ::OpenAPI::toJsonValue(m_hydrasearch));
    }
    if (m_hydratotal_items_isSet) {
        obj.insert(QString("hydra:totalItems"), ::OpenAPI::toJsonValue(m_hydratotal_items));
    }
    if (m_hydraview.isSet()) {
        obj.insert(QString("hydra:view"), ::OpenAPI::toJsonValue(m_hydraview));
    }
    return obj;
}

QList<OAITransportPushy_jsonld_get> OAIApi_transport_pushy_get_collection_200_response::getHydramember() const {
    return m_hydramember;
}
void OAIApi_transport_pushy_get_collection_200_response::setHydramember(const QList<OAITransportPushy_jsonld_get> &hydramember) {
    m_hydramember = hydramember;
    m_hydramember_isSet = true;
}

bool OAIApi_transport_pushy_get_collection_200_response::is_hydramember_Set() const{
    return m_hydramember_isSet;
}

bool OAIApi_transport_pushy_get_collection_200_response::is_hydramember_Valid() const{
    return m_hydramember_isValid;
}

OAIApi_alert_log_get_collection_200_response_hydra_search OAIApi_transport_pushy_get_collection_200_response::getHydrasearch() const {
    return m_hydrasearch;
}
void OAIApi_transport_pushy_get_collection_200_response::setHydrasearch(const OAIApi_alert_log_get_collection_200_response_hydra_search &hydrasearch) {
    m_hydrasearch = hydrasearch;
    m_hydrasearch_isSet = true;
}

bool OAIApi_transport_pushy_get_collection_200_response::is_hydrasearch_Set() const{
    return m_hydrasearch_isSet;
}

bool OAIApi_transport_pushy_get_collection_200_response::is_hydrasearch_Valid() const{
    return m_hydrasearch_isValid;
}

qint32 OAIApi_transport_pushy_get_collection_200_response::getHydratotalItems() const {
    return m_hydratotal_items;
}
void OAIApi_transport_pushy_get_collection_200_response::setHydratotalItems(const qint32 &hydratotal_items) {
    m_hydratotal_items = hydratotal_items;
    m_hydratotal_items_isSet = true;
}

bool OAIApi_transport_pushy_get_collection_200_response::is_hydratotal_items_Set() const{
    return m_hydratotal_items_isSet;
}

bool OAIApi_transport_pushy_get_collection_200_response::is_hydratotal_items_Valid() const{
    return m_hydratotal_items_isValid;
}

OAIApi_alert_log_get_collection_200_response_hydra_view OAIApi_transport_pushy_get_collection_200_response::getHydraview() const {
    return m_hydraview;
}
void OAIApi_transport_pushy_get_collection_200_response::setHydraview(const OAIApi_alert_log_get_collection_200_response_hydra_view &hydraview) {
    m_hydraview = hydraview;
    m_hydraview_isSet = true;
}

bool OAIApi_transport_pushy_get_collection_200_response::is_hydraview_Set() const{
    return m_hydraview_isSet;
}

bool OAIApi_transport_pushy_get_collection_200_response::is_hydraview_Valid() const{
    return m_hydraview_isValid;
}

bool OAIApi_transport_pushy_get_collection_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_hydramember.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_hydrasearch.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_hydratotal_items_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hydraview.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApi_transport_pushy_get_collection_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_hydramember_isValid && true;
}

} // namespace OpenAPI
