/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITransportRingCentral_put.h
 *
 * The TransportRingCentral resource is a collection of transports that carry dispatched alerts to the external Ring Central service.
 */

#ifndef OAITransportRingCentral_put_H
#define OAITransportRingCentral_put_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITransportRingCentral_put : public OAIObject {
public:
    OAITransportRingCentral_put();
    OAITransportRingCentral_put(QString json);
    ~OAITransportRingCentral_put() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDataSegmentCode() const;
    void setDataSegmentCode(const QString &data_segment_code);
    bool is_data_segment_code_Set() const;
    bool is_data_segment_code_Valid() const;

    QString getRingCentralApiToken() const;
    void setRingCentralApiToken(const QString &ring_central_api_token);
    bool is_ring_central_api_token_Set() const;
    bool is_ring_central_api_token_Valid() const;

    QString getRingCentralFrom() const;
    void setRingCentralFrom(const QString &ring_central_from);
    bool is_ring_central_from_Set() const;
    bool is_ring_central_from_Valid() const;

    QString getTransportName() const;
    void setTransportName(const QString &transport_name);
    bool is_transport_name_Set() const;
    bool is_transport_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_data_segment_code;
    bool m_data_segment_code_isSet;
    bool m_data_segment_code_isValid;

    QString m_ring_central_api_token;
    bool m_ring_central_api_token_isSet;
    bool m_ring_central_api_token_isValid;

    QString m_ring_central_from;
    bool m_ring_central_from_isSet;
    bool m_ring_central_from_isValid;

    QString m_transport_name;
    bool m_transport_name_isSet;
    bool m_transport_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITransportRingCentral_put)

#endif // OAITransportRingCentral_put_H
