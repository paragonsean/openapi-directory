/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApi_alert_log_get_collection_200_response_hydra_search.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApi_alert_log_get_collection_200_response_hydra_search::OAIApi_alert_log_get_collection_200_response_hydra_search(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApi_alert_log_get_collection_200_response_hydra_search::OAIApi_alert_log_get_collection_200_response_hydra_search() {
    this->initializeModel();
}

OAIApi_alert_log_get_collection_200_response_hydra_search::~OAIApi_alert_log_get_collection_200_response_hydra_search() {}

void OAIApi_alert_log_get_collection_200_response_hydra_search::initializeModel() {

    m_type_isSet = false;
    m_type_isValid = false;

    m_hydramapping_isSet = false;
    m_hydramapping_isValid = false;

    m_hydratemplate_isSet = false;
    m_hydratemplate_isValid = false;

    m_hydravariable_representation_isSet = false;
    m_hydravariable_representation_isValid = false;
}

void OAIApi_alert_log_get_collection_200_response_hydra_search::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApi_alert_log_get_collection_200_response_hydra_search::fromJsonObject(QJsonObject json) {

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("@type")]);
    m_type_isSet = !json[QString("@type")].isNull() && m_type_isValid;

    m_hydramapping_isValid = ::OpenAPI::fromJsonValue(m_hydramapping, json[QString("hydra:mapping")]);
    m_hydramapping_isSet = !json[QString("hydra:mapping")].isNull() && m_hydramapping_isValid;

    m_hydratemplate_isValid = ::OpenAPI::fromJsonValue(m_hydratemplate, json[QString("hydra:template")]);
    m_hydratemplate_isSet = !json[QString("hydra:template")].isNull() && m_hydratemplate_isValid;

    m_hydravariable_representation_isValid = ::OpenAPI::fromJsonValue(m_hydravariable_representation, json[QString("hydra:variableRepresentation")]);
    m_hydravariable_representation_isSet = !json[QString("hydra:variableRepresentation")].isNull() && m_hydravariable_representation_isValid;
}

QString OAIApi_alert_log_get_collection_200_response_hydra_search::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApi_alert_log_get_collection_200_response_hydra_search::asJsonObject() const {
    QJsonObject obj;
    if (m_type_isSet) {
        obj.insert(QString("@type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_hydramapping.size() > 0) {
        obj.insert(QString("hydra:mapping"), ::OpenAPI::toJsonValue(m_hydramapping));
    }
    if (m_hydratemplate_isSet) {
        obj.insert(QString("hydra:template"), ::OpenAPI::toJsonValue(m_hydratemplate));
    }
    if (m_hydravariable_representation_isSet) {
        obj.insert(QString("hydra:variableRepresentation"), ::OpenAPI::toJsonValue(m_hydravariable_representation));
    }
    return obj;
}

QString OAIApi_alert_log_get_collection_200_response_hydra_search::getType() const {
    return m_type;
}
void OAIApi_alert_log_get_collection_200_response_hydra_search::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIApi_alert_log_get_collection_200_response_hydra_search::is_type_Set() const{
    return m_type_isSet;
}

bool OAIApi_alert_log_get_collection_200_response_hydra_search::is_type_Valid() const{
    return m_type_isValid;
}

QList<OAIApi_alert_log_get_collection_200_response_hydra_search_hydra_mapping_inner> OAIApi_alert_log_get_collection_200_response_hydra_search::getHydramapping() const {
    return m_hydramapping;
}
void OAIApi_alert_log_get_collection_200_response_hydra_search::setHydramapping(const QList<OAIApi_alert_log_get_collection_200_response_hydra_search_hydra_mapping_inner> &hydramapping) {
    m_hydramapping = hydramapping;
    m_hydramapping_isSet = true;
}

bool OAIApi_alert_log_get_collection_200_response_hydra_search::is_hydramapping_Set() const{
    return m_hydramapping_isSet;
}

bool OAIApi_alert_log_get_collection_200_response_hydra_search::is_hydramapping_Valid() const{
    return m_hydramapping_isValid;
}

QString OAIApi_alert_log_get_collection_200_response_hydra_search::getHydratemplate() const {
    return m_hydratemplate;
}
void OAIApi_alert_log_get_collection_200_response_hydra_search::setHydratemplate(const QString &hydratemplate) {
    m_hydratemplate = hydratemplate;
    m_hydratemplate_isSet = true;
}

bool OAIApi_alert_log_get_collection_200_response_hydra_search::is_hydratemplate_Set() const{
    return m_hydratemplate_isSet;
}

bool OAIApi_alert_log_get_collection_200_response_hydra_search::is_hydratemplate_Valid() const{
    return m_hydratemplate_isValid;
}

QString OAIApi_alert_log_get_collection_200_response_hydra_search::getHydravariableRepresentation() const {
    return m_hydravariable_representation;
}
void OAIApi_alert_log_get_collection_200_response_hydra_search::setHydravariableRepresentation(const QString &hydravariable_representation) {
    m_hydravariable_representation = hydravariable_representation;
    m_hydravariable_representation_isSet = true;
}

bool OAIApi_alert_log_get_collection_200_response_hydra_search::is_hydravariable_representation_Set() const{
    return m_hydravariable_representation_isSet;
}

bool OAIApi_alert_log_get_collection_200_response_hydra_search::is_hydravariable_representation_Valid() const{
    return m_hydravariable_representation_isValid;
}

bool OAIApi_alert_log_get_collection_200_response_hydra_search::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hydramapping.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_hydratemplate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hydravariable_representation_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApi_alert_log_get_collection_200_response_hydra_search::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
