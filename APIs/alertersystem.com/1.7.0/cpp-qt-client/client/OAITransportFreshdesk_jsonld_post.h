/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITransportFreshdesk_jsonld_post.h
 *
 * The TransportFreshdesk resource is a collection of transports that carry dispatched alerts to the external Freshdesk service.
 */

#ifndef OAITransportFreshdesk_jsonld_post_H
#define OAITransportFreshdesk_jsonld_post_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITransportFreshdesk_jsonld_post : public OAIObject {
public:
    OAITransportFreshdesk_jsonld_post();
    OAITransportFreshdesk_jsonld_post(QString json);
    ~OAITransportFreshdesk_jsonld_post() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDataSegmentCode() const;
    void setDataSegmentCode(const QString &data_segment_code);
    bool is_data_segment_code_Set() const;
    bool is_data_segment_code_Valid() const;

    QString getFreshdeskApiKey() const;
    void setFreshdeskApiKey(const QString &freshdesk_api_key);
    bool is_freshdesk_api_key_Set() const;
    bool is_freshdesk_api_key_Valid() const;

    QString getFreshdeskEmail() const;
    void setFreshdeskEmail(const QString &freshdesk_email);
    bool is_freshdesk_email_Set() const;
    bool is_freshdesk_email_Valid() const;

    QString getFreshdeskHost() const;
    void setFreshdeskHost(const QString &freshdesk_host);
    bool is_freshdesk_host_Set() const;
    bool is_freshdesk_host_Valid() const;

    QString getFreshdeskPriority() const;
    void setFreshdeskPriority(const QString &freshdesk_priority);
    bool is_freshdesk_priority_Set() const;
    bool is_freshdesk_priority_Valid() const;

    QString getFreshdeskType() const;
    void setFreshdeskType(const QString &freshdesk_type);
    bool is_freshdesk_type_Set() const;
    bool is_freshdesk_type_Valid() const;

    QString getPartition() const;
    void setPartition(const QString &partition);
    bool is_partition_Set() const;
    bool is_partition_Valid() const;

    QString getTransportName() const;
    void setTransportName(const QString &transport_name);
    bool is_transport_name_Set() const;
    bool is_transport_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_data_segment_code;
    bool m_data_segment_code_isSet;
    bool m_data_segment_code_isValid;

    QString m_freshdesk_api_key;
    bool m_freshdesk_api_key_isSet;
    bool m_freshdesk_api_key_isValid;

    QString m_freshdesk_email;
    bool m_freshdesk_email_isSet;
    bool m_freshdesk_email_isValid;

    QString m_freshdesk_host;
    bool m_freshdesk_host_isSet;
    bool m_freshdesk_host_isValid;

    QString m_freshdesk_priority;
    bool m_freshdesk_priority_isSet;
    bool m_freshdesk_priority_isValid;

    QString m_freshdesk_type;
    bool m_freshdesk_type_isSet;
    bool m_freshdesk_type_isValid;

    QString m_partition;
    bool m_partition_isSet;
    bool m_partition_isValid;

    QString m_transport_name;
    bool m_transport_name_isSet;
    bool m_transport_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITransportFreshdesk_jsonld_post)

#endif // OAITransportFreshdesk_jsonld_post_H
