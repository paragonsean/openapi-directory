/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAlertLog_jsonld_get.h
 *
 * The AlertLog resource is a chronological record of all the alerts that have been triggered, including the status of each alert.
 */

#ifndef OAIAlertLog_jsonld_get_H
#define OAIAlertLog_jsonld_get_H

#include <QJsonObject>

#include "OAIAlertLog_jsonld_get__context.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAlertLog_jsonld_get__context;

class OAIAlertLog_jsonld_get : public OAIObject {
public:
    OAIAlertLog_jsonld_get();
    OAIAlertLog_jsonld_get(QString json);
    ~OAIAlertLog_jsonld_get() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAlertLog_jsonld_get__context getContext() const;
    void setContext(const OAIAlertLog_jsonld_get__context &context);
    bool is_context_Set() const;
    bool is_context_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getAlertLogErrorMessage() const;
    void setAlertLogErrorMessage(const QString &alert_log_error_message);
    bool is_alert_log_error_message_Set() const;
    bool is_alert_log_error_message_Valid() const;

    QString getAlertLogMessageId() const;
    void setAlertLogMessageId(const QString &alert_log_message_id);
    bool is_alert_log_message_id_Set() const;
    bool is_alert_log_message_id_Valid() const;

    QString getAlertLogStatusCode() const;
    void setAlertLogStatusCode(const QString &alert_log_status_code);
    bool is_alert_log_status_code_Set() const;
    bool is_alert_log_status_code_Valid() const;

    QString getAlertService() const;
    void setAlertService(const QString &alert_service);
    bool is_alert_service_Set() const;
    bool is_alert_service_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getDataSegmentCode() const;
    void setDataSegmentCode(const QString &data_segment_code);
    bool is_data_segment_code_Set() const;
    bool is_data_segment_code_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getMonitor() const;
    void setMonitor(const QString &monitor);
    bool is_monitor_Set() const;
    bool is_monitor_Valid() const;

    QString getPartition() const;
    void setPartition(const QString &partition);
    bool is_partition_Set() const;
    bool is_partition_Valid() const;

    QString getPing() const;
    void setPing(const QString &ping);
    bool is_ping_Set() const;
    bool is_ping_Valid() const;

    QString getResourceOwner() const;
    void setResourceOwner(const QString &resource_owner);
    bool is_resource_owner_Set() const;
    bool is_resource_owner_Valid() const;

    QString getWebhookResponseBody() const;
    void setWebhookResponseBody(const QString &webhook_response_body);
    bool is_webhook_response_body_Set() const;
    bool is_webhook_response_body_Valid() const;

    QList<QString> getWebhookResponseHeaders() const;
    void setWebhookResponseHeaders(const QList<QString> &webhook_response_headers);
    bool is_webhook_response_headers_Set() const;
    bool is_webhook_response_headers_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAlertLog_jsonld_get__context m_context;
    bool m_context_isSet;
    bool m_context_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_alert_log_error_message;
    bool m_alert_log_error_message_isSet;
    bool m_alert_log_error_message_isValid;

    QString m_alert_log_message_id;
    bool m_alert_log_message_id_isSet;
    bool m_alert_log_message_id_isValid;

    QString m_alert_log_status_code;
    bool m_alert_log_status_code_isSet;
    bool m_alert_log_status_code_isValid;

    QString m_alert_service;
    bool m_alert_service_isSet;
    bool m_alert_service_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_data_segment_code;
    bool m_data_segment_code_isSet;
    bool m_data_segment_code_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_monitor;
    bool m_monitor_isSet;
    bool m_monitor_isValid;

    QString m_partition;
    bool m_partition_isSet;
    bool m_partition_isValid;

    QString m_ping;
    bool m_ping_isSet;
    bool m_ping_isValid;

    QString m_resource_owner;
    bool m_resource_owner_isSet;
    bool m_resource_owner_isValid;

    QString m_webhook_response_body;
    bool m_webhook_response_body_isSet;
    bool m_webhook_response_body_isValid;

    QList<QString> m_webhook_response_headers;
    bool m_webhook_response_headers_isSet;
    bool m_webhook_response_headers_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAlertLog_jsonld_get)

#endif // OAIAlertLog_jsonld_get_H
