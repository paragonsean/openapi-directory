/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreditsConsumption_get.h
 *
 * The CreditsConsumption resource is a chronological record of all the credits that have been consumed, including the reason for the consumption.
 */

#ifndef OAICreditsConsumption_get_H
#define OAICreditsConsumption_get_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreditsConsumption_get : public OAIObject {
public:
    OAICreditsConsumption_get();
    OAICreditsConsumption_get(QString json);
    ~OAICreditsConsumption_get() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getCreditsConsumptionEventCode() const;
    void setCreditsConsumptionEventCode(const QString &credits_consumption_event_code);
    bool is_credits_consumption_event_code_Set() const;
    bool is_credits_consumption_event_code_Valid() const;

    QString getCreditsConsumptionNotes() const;
    void setCreditsConsumptionNotes(const QString &credits_consumption_notes);
    bool is_credits_consumption_notes_Set() const;
    bool is_credits_consumption_notes_Valid() const;

    QString getCreditsEventId() const;
    void setCreditsEventId(const QString &credits_event_id);
    bool is_credits_event_id_Set() const;
    bool is_credits_event_id_Valid() const;

    QString getCreditsEventIri() const;
    void setCreditsEventIri(const QString &credits_event_iri);
    bool is_credits_event_iri_Set() const;
    bool is_credits_event_iri_Valid() const;

    QString getCreditsUsed() const;
    void setCreditsUsed(const QString &credits_used);
    bool is_credits_used_Set() const;
    bool is_credits_used_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_credits_consumption_event_code;
    bool m_credits_consumption_event_code_isSet;
    bool m_credits_consumption_event_code_isValid;

    QString m_credits_consumption_notes;
    bool m_credits_consumption_notes_isSet;
    bool m_credits_consumption_notes_isValid;

    QString m_credits_event_id;
    bool m_credits_event_id_isSet;
    bool m_credits_event_id_isValid;

    QString m_credits_event_iri;
    bool m_credits_event_iri_isSet;
    bool m_credits_event_iri_isValid;

    QString m_credits_used;
    bool m_credits_used_isSet;
    bool m_credits_used_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreditsConsumption_get)

#endif // OAICreditsConsumption_get_H
