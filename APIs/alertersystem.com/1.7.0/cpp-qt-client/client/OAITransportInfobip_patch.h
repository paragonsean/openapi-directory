/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITransportInfobip_patch.h
 *
 * The TransportInfobip resource is a collection of transports that carry dispatched alerts to the external Infobip service.
 */

#ifndef OAITransportInfobip_patch_H
#define OAITransportInfobip_patch_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITransportInfobip_patch : public OAIObject {
public:
    OAITransportInfobip_patch();
    OAITransportInfobip_patch(QString json);
    ~OAITransportInfobip_patch() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDataSegmentCode() const;
    void setDataSegmentCode(const QString &data_segment_code);
    bool is_data_segment_code_Set() const;
    bool is_data_segment_code_Valid() const;

    QString getInfobipAuthToken() const;
    void setInfobipAuthToken(const QString &infobip_auth_token);
    bool is_infobip_auth_token_Set() const;
    bool is_infobip_auth_token_Valid() const;

    QString getInfobipFrom() const;
    void setInfobipFrom(const QString &infobip_from);
    bool is_infobip_from_Set() const;
    bool is_infobip_from_Valid() const;

    QString getInfobipHost() const;
    void setInfobipHost(const QString &infobip_host);
    bool is_infobip_host_Set() const;
    bool is_infobip_host_Valid() const;

    QString getTransportName() const;
    void setTransportName(const QString &transport_name);
    bool is_transport_name_Set() const;
    bool is_transport_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_data_segment_code;
    bool m_data_segment_code_isSet;
    bool m_data_segment_code_isValid;

    QString m_infobip_auth_token;
    bool m_infobip_auth_token_isSet;
    bool m_infobip_auth_token_isValid;

    QString m_infobip_from;
    bool m_infobip_from_isSet;
    bool m_infobip_from_isValid;

    QString m_infobip_host;
    bool m_infobip_host_isSet;
    bool m_infobip_host_isValid;

    QString m_transport_name;
    bool m_transport_name_isSet;
    bool m_transport_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITransportInfobip_patch)

#endif // OAITransportInfobip_patch_H
