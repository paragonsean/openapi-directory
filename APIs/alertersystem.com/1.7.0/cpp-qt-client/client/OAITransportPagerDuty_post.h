/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITransportPagerDuty_post.h
 *
 * The TransportPagerDuty resource is a collection of transports that carry dispatched alerts to the external Pager Duty service.
 */

#ifndef OAITransportPagerDuty_post_H
#define OAITransportPagerDuty_post_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITransportPagerDuty_post : public OAIObject {
public:
    OAITransportPagerDuty_post();
    OAITransportPagerDuty_post(QString json);
    ~OAITransportPagerDuty_post() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDataSegmentCode() const;
    void setDataSegmentCode(const QString &data_segment_code);
    bool is_data_segment_code_Set() const;
    bool is_data_segment_code_Valid() const;

    QString getPagerDutyApiToken() const;
    void setPagerDutyApiToken(const QString &pager_duty_api_token);
    bool is_pager_duty_api_token_Set() const;
    bool is_pager_duty_api_token_Valid() const;

    QString getPagerDutyDedupKey() const;
    void setPagerDutyDedupKey(const QString &pager_duty_dedup_key);
    bool is_pager_duty_dedup_key_Set() const;
    bool is_pager_duty_dedup_key_Valid() const;

    QString getPagerDutyEventAction() const;
    void setPagerDutyEventAction(const QString &pager_duty_event_action);
    bool is_pager_duty_event_action_Set() const;
    bool is_pager_duty_event_action_Valid() const;

    QString getPagerDutyPayloadClass() const;
    void setPagerDutyPayloadClass(const QString &pager_duty_payload_class);
    bool is_pager_duty_payload_class_Set() const;
    bool is_pager_duty_payload_class_Valid() const;

    QString getPagerDutyPayloadComponent() const;
    void setPagerDutyPayloadComponent(const QString &pager_duty_payload_component);
    bool is_pager_duty_payload_component_Set() const;
    bool is_pager_duty_payload_component_Valid() const;

    QString getPagerDutyPayloadGroup() const;
    void setPagerDutyPayloadGroup(const QString &pager_duty_payload_group);
    bool is_pager_duty_payload_group_Set() const;
    bool is_pager_duty_payload_group_Valid() const;

    QString getPagerDutyPayloadSeverity() const;
    void setPagerDutyPayloadSeverity(const QString &pager_duty_payload_severity);
    bool is_pager_duty_payload_severity_Set() const;
    bool is_pager_duty_payload_severity_Valid() const;

    QString getPagerDutyPayloadSource() const;
    void setPagerDutyPayloadSource(const QString &pager_duty_payload_source);
    bool is_pager_duty_payload_source_Set() const;
    bool is_pager_duty_payload_source_Valid() const;

    QString getPagerDutyRoutingKey() const;
    void setPagerDutyRoutingKey(const QString &pager_duty_routing_key);
    bool is_pager_duty_routing_key_Set() const;
    bool is_pager_duty_routing_key_Valid() const;

    QString getPartition() const;
    void setPartition(const QString &partition);
    bool is_partition_Set() const;
    bool is_partition_Valid() const;

    QString getTransportName() const;
    void setTransportName(const QString &transport_name);
    bool is_transport_name_Set() const;
    bool is_transport_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_data_segment_code;
    bool m_data_segment_code_isSet;
    bool m_data_segment_code_isValid;

    QString m_pager_duty_api_token;
    bool m_pager_duty_api_token_isSet;
    bool m_pager_duty_api_token_isValid;

    QString m_pager_duty_dedup_key;
    bool m_pager_duty_dedup_key_isSet;
    bool m_pager_duty_dedup_key_isValid;

    QString m_pager_duty_event_action;
    bool m_pager_duty_event_action_isSet;
    bool m_pager_duty_event_action_isValid;

    QString m_pager_duty_payload_class;
    bool m_pager_duty_payload_class_isSet;
    bool m_pager_duty_payload_class_isValid;

    QString m_pager_duty_payload_component;
    bool m_pager_duty_payload_component_isSet;
    bool m_pager_duty_payload_component_isValid;

    QString m_pager_duty_payload_group;
    bool m_pager_duty_payload_group_isSet;
    bool m_pager_duty_payload_group_isValid;

    QString m_pager_duty_payload_severity;
    bool m_pager_duty_payload_severity_isSet;
    bool m_pager_duty_payload_severity_isValid;

    QString m_pager_duty_payload_source;
    bool m_pager_duty_payload_source_isSet;
    bool m_pager_duty_payload_source_isValid;

    QString m_pager_duty_routing_key;
    bool m_pager_duty_routing_key_isSet;
    bool m_pager_duty_routing_key_isValid;

    QString m_partition;
    bool m_partition_isSet;
    bool m_partition_isValid;

    QString m_transport_name;
    bool m_transport_name_isSet;
    bool m_transport_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITransportPagerDuty_post)

#endif // OAITransportPagerDuty_post_H
