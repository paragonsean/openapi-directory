/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPing_post.h
 *
 * The Ping resource is a collection of pings that have been sent to monitors in the user account.
 */

#ifndef OAIPing_post_H
#define OAIPing_post_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPing_post : public OAIObject {
public:
    OAIPing_post();
    OAIPing_post(QString json);
    ~OAIPing_post() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getExpectNextPingAt() const;
    void setExpectNextPingAt(const QDateTime &expect_next_ping_at);
    bool is_expect_next_ping_at_Set() const;
    bool is_expect_next_ping_at_Valid() const;

    qint32 getExpectNextPingAtEpoch() const;
    void setExpectNextPingAtEpoch(const qint32 &expect_next_ping_at_epoch);
    bool is_expect_next_ping_at_epoch_Set() const;
    bool is_expect_next_ping_at_epoch_Valid() const;

    QString getMonitor() const;
    void setMonitor(const QString &monitor);
    bool is_monitor_Set() const;
    bool is_monitor_Valid() const;

    QString getPingCustomCode() const;
    void setPingCustomCode(const QString &ping_custom_code);
    bool is_ping_custom_code_Set() const;
    bool is_ping_custom_code_Valid() const;

    QString getPingCustomPayload() const;
    void setPingCustomPayload(const QString &ping_custom_payload);
    bool is_ping_custom_payload_Set() const;
    bool is_ping_custom_payload_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_expect_next_ping_at;
    bool m_expect_next_ping_at_isSet;
    bool m_expect_next_ping_at_isValid;

    qint32 m_expect_next_ping_at_epoch;
    bool m_expect_next_ping_at_epoch_isSet;
    bool m_expect_next_ping_at_epoch_isValid;

    QString m_monitor;
    bool m_monitor_isSet;
    bool m_monitor_isValid;

    QString m_ping_custom_code;
    bool m_ping_custom_code_isSet;
    bool m_ping_custom_code_isValid;

    QString m_ping_custom_payload;
    bool m_ping_custom_payload_isSet;
    bool m_ping_custom_payload_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPing_post)

#endif // OAIPing_post_H
