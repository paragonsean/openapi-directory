/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITransportAlerta_jsonld_put.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITransportAlerta_jsonld_put::OAITransportAlerta_jsonld_put(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITransportAlerta_jsonld_put::OAITransportAlerta_jsonld_put() {
    this->initializeModel();
}

OAITransportAlerta_jsonld_put::~OAITransportAlerta_jsonld_put() {}

void OAITransportAlerta_jsonld_put::initializeModel() {

    m_alerta_api_key_isSet = false;
    m_alerta_api_key_isValid = false;

    m_alerta_correlate_isSet = false;
    m_alerta_correlate_isValid = false;

    m_alerta_environment_isSet = false;
    m_alerta_environment_isValid = false;

    m_alerta_event_isSet = false;
    m_alerta_event_isValid = false;

    m_alerta_group_isSet = false;
    m_alerta_group_isValid = false;

    m_alerta_host_isSet = false;
    m_alerta_host_isValid = false;

    m_alerta_origin_isSet = false;
    m_alerta_origin_isValid = false;

    m_alerta_resource_isSet = false;
    m_alerta_resource_isValid = false;

    m_alerta_service_isSet = false;
    m_alerta_service_isValid = false;

    m_alerta_severity_isSet = false;
    m_alerta_severity_isValid = false;

    m_alerta_status_isSet = false;
    m_alerta_status_isValid = false;

    m_alerta_tags_isSet = false;
    m_alerta_tags_isValid = false;

    m_alerta_type_isSet = false;
    m_alerta_type_isValid = false;

    m_data_segment_code_isSet = false;
    m_data_segment_code_isValid = false;

    m_transport_name_isSet = false;
    m_transport_name_isValid = false;
}

void OAITransportAlerta_jsonld_put::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITransportAlerta_jsonld_put::fromJsonObject(QJsonObject json) {

    m_alerta_api_key_isValid = ::OpenAPI::fromJsonValue(m_alerta_api_key, json[QString("alertaApiKey")]);
    m_alerta_api_key_isSet = !json[QString("alertaApiKey")].isNull() && m_alerta_api_key_isValid;

    m_alerta_correlate_isValid = ::OpenAPI::fromJsonValue(m_alerta_correlate, json[QString("alertaCorrelate")]);
    m_alerta_correlate_isSet = !json[QString("alertaCorrelate")].isNull() && m_alerta_correlate_isValid;

    m_alerta_environment_isValid = ::OpenAPI::fromJsonValue(m_alerta_environment, json[QString("alertaEnvironment")]);
    m_alerta_environment_isSet = !json[QString("alertaEnvironment")].isNull() && m_alerta_environment_isValid;

    m_alerta_event_isValid = ::OpenAPI::fromJsonValue(m_alerta_event, json[QString("alertaEvent")]);
    m_alerta_event_isSet = !json[QString("alertaEvent")].isNull() && m_alerta_event_isValid;

    m_alerta_group_isValid = ::OpenAPI::fromJsonValue(m_alerta_group, json[QString("alertaGroup")]);
    m_alerta_group_isSet = !json[QString("alertaGroup")].isNull() && m_alerta_group_isValid;

    m_alerta_host_isValid = ::OpenAPI::fromJsonValue(m_alerta_host, json[QString("alertaHost")]);
    m_alerta_host_isSet = !json[QString("alertaHost")].isNull() && m_alerta_host_isValid;

    m_alerta_origin_isValid = ::OpenAPI::fromJsonValue(m_alerta_origin, json[QString("alertaOrigin")]);
    m_alerta_origin_isSet = !json[QString("alertaOrigin")].isNull() && m_alerta_origin_isValid;

    m_alerta_resource_isValid = ::OpenAPI::fromJsonValue(m_alerta_resource, json[QString("alertaResource")]);
    m_alerta_resource_isSet = !json[QString("alertaResource")].isNull() && m_alerta_resource_isValid;

    m_alerta_service_isValid = ::OpenAPI::fromJsonValue(m_alerta_service, json[QString("alertaService")]);
    m_alerta_service_isSet = !json[QString("alertaService")].isNull() && m_alerta_service_isValid;

    m_alerta_severity_isValid = ::OpenAPI::fromJsonValue(m_alerta_severity, json[QString("alertaSeverity")]);
    m_alerta_severity_isSet = !json[QString("alertaSeverity")].isNull() && m_alerta_severity_isValid;

    m_alerta_status_isValid = ::OpenAPI::fromJsonValue(m_alerta_status, json[QString("alertaStatus")]);
    m_alerta_status_isSet = !json[QString("alertaStatus")].isNull() && m_alerta_status_isValid;

    m_alerta_tags_isValid = ::OpenAPI::fromJsonValue(m_alerta_tags, json[QString("alertaTags")]);
    m_alerta_tags_isSet = !json[QString("alertaTags")].isNull() && m_alerta_tags_isValid;

    m_alerta_type_isValid = ::OpenAPI::fromJsonValue(m_alerta_type, json[QString("alertaType")]);
    m_alerta_type_isSet = !json[QString("alertaType")].isNull() && m_alerta_type_isValid;

    m_data_segment_code_isValid = ::OpenAPI::fromJsonValue(m_data_segment_code, json[QString("dataSegmentCode")]);
    m_data_segment_code_isSet = !json[QString("dataSegmentCode")].isNull() && m_data_segment_code_isValid;

    m_transport_name_isValid = ::OpenAPI::fromJsonValue(m_transport_name, json[QString("transportName")]);
    m_transport_name_isSet = !json[QString("transportName")].isNull() && m_transport_name_isValid;
}

QString OAITransportAlerta_jsonld_put::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITransportAlerta_jsonld_put::asJsonObject() const {
    QJsonObject obj;
    if (m_alerta_api_key_isSet) {
        obj.insert(QString("alertaApiKey"), ::OpenAPI::toJsonValue(m_alerta_api_key));
    }
    if (m_alerta_correlate_isSet) {
        obj.insert(QString("alertaCorrelate"), ::OpenAPI::toJsonValue(m_alerta_correlate));
    }
    if (m_alerta_environment_isSet) {
        obj.insert(QString("alertaEnvironment"), ::OpenAPI::toJsonValue(m_alerta_environment));
    }
    if (m_alerta_event_isSet) {
        obj.insert(QString("alertaEvent"), ::OpenAPI::toJsonValue(m_alerta_event));
    }
    if (m_alerta_group_isSet) {
        obj.insert(QString("alertaGroup"), ::OpenAPI::toJsonValue(m_alerta_group));
    }
    if (m_alerta_host_isSet) {
        obj.insert(QString("alertaHost"), ::OpenAPI::toJsonValue(m_alerta_host));
    }
    if (m_alerta_origin_isSet) {
        obj.insert(QString("alertaOrigin"), ::OpenAPI::toJsonValue(m_alerta_origin));
    }
    if (m_alerta_resource_isSet) {
        obj.insert(QString("alertaResource"), ::OpenAPI::toJsonValue(m_alerta_resource));
    }
    if (m_alerta_service_isSet) {
        obj.insert(QString("alertaService"), ::OpenAPI::toJsonValue(m_alerta_service));
    }
    if (m_alerta_severity_isSet) {
        obj.insert(QString("alertaSeverity"), ::OpenAPI::toJsonValue(m_alerta_severity));
    }
    if (m_alerta_status_isSet) {
        obj.insert(QString("alertaStatus"), ::OpenAPI::toJsonValue(m_alerta_status));
    }
    if (m_alerta_tags_isSet) {
        obj.insert(QString("alertaTags"), ::OpenAPI::toJsonValue(m_alerta_tags));
    }
    if (m_alerta_type_isSet) {
        obj.insert(QString("alertaType"), ::OpenAPI::toJsonValue(m_alerta_type));
    }
    if (m_data_segment_code_isSet) {
        obj.insert(QString("dataSegmentCode"), ::OpenAPI::toJsonValue(m_data_segment_code));
    }
    if (m_transport_name_isSet) {
        obj.insert(QString("transportName"), ::OpenAPI::toJsonValue(m_transport_name));
    }
    return obj;
}

QString OAITransportAlerta_jsonld_put::getAlertaApiKey() const {
    return m_alerta_api_key;
}
void OAITransportAlerta_jsonld_put::setAlertaApiKey(const QString &alerta_api_key) {
    m_alerta_api_key = alerta_api_key;
    m_alerta_api_key_isSet = true;
}

bool OAITransportAlerta_jsonld_put::is_alerta_api_key_Set() const{
    return m_alerta_api_key_isSet;
}

bool OAITransportAlerta_jsonld_put::is_alerta_api_key_Valid() const{
    return m_alerta_api_key_isValid;
}

QString OAITransportAlerta_jsonld_put::getAlertaCorrelate() const {
    return m_alerta_correlate;
}
void OAITransportAlerta_jsonld_put::setAlertaCorrelate(const QString &alerta_correlate) {
    m_alerta_correlate = alerta_correlate;
    m_alerta_correlate_isSet = true;
}

bool OAITransportAlerta_jsonld_put::is_alerta_correlate_Set() const{
    return m_alerta_correlate_isSet;
}

bool OAITransportAlerta_jsonld_put::is_alerta_correlate_Valid() const{
    return m_alerta_correlate_isValid;
}

QString OAITransportAlerta_jsonld_put::getAlertaEnvironment() const {
    return m_alerta_environment;
}
void OAITransportAlerta_jsonld_put::setAlertaEnvironment(const QString &alerta_environment) {
    m_alerta_environment = alerta_environment;
    m_alerta_environment_isSet = true;
}

bool OAITransportAlerta_jsonld_put::is_alerta_environment_Set() const{
    return m_alerta_environment_isSet;
}

bool OAITransportAlerta_jsonld_put::is_alerta_environment_Valid() const{
    return m_alerta_environment_isValid;
}

QString OAITransportAlerta_jsonld_put::getAlertaEvent() const {
    return m_alerta_event;
}
void OAITransportAlerta_jsonld_put::setAlertaEvent(const QString &alerta_event) {
    m_alerta_event = alerta_event;
    m_alerta_event_isSet = true;
}

bool OAITransportAlerta_jsonld_put::is_alerta_event_Set() const{
    return m_alerta_event_isSet;
}

bool OAITransportAlerta_jsonld_put::is_alerta_event_Valid() const{
    return m_alerta_event_isValid;
}

QString OAITransportAlerta_jsonld_put::getAlertaGroup() const {
    return m_alerta_group;
}
void OAITransportAlerta_jsonld_put::setAlertaGroup(const QString &alerta_group) {
    m_alerta_group = alerta_group;
    m_alerta_group_isSet = true;
}

bool OAITransportAlerta_jsonld_put::is_alerta_group_Set() const{
    return m_alerta_group_isSet;
}

bool OAITransportAlerta_jsonld_put::is_alerta_group_Valid() const{
    return m_alerta_group_isValid;
}

QString OAITransportAlerta_jsonld_put::getAlertaHost() const {
    return m_alerta_host;
}
void OAITransportAlerta_jsonld_put::setAlertaHost(const QString &alerta_host) {
    m_alerta_host = alerta_host;
    m_alerta_host_isSet = true;
}

bool OAITransportAlerta_jsonld_put::is_alerta_host_Set() const{
    return m_alerta_host_isSet;
}

bool OAITransportAlerta_jsonld_put::is_alerta_host_Valid() const{
    return m_alerta_host_isValid;
}

QString OAITransportAlerta_jsonld_put::getAlertaOrigin() const {
    return m_alerta_origin;
}
void OAITransportAlerta_jsonld_put::setAlertaOrigin(const QString &alerta_origin) {
    m_alerta_origin = alerta_origin;
    m_alerta_origin_isSet = true;
}

bool OAITransportAlerta_jsonld_put::is_alerta_origin_Set() const{
    return m_alerta_origin_isSet;
}

bool OAITransportAlerta_jsonld_put::is_alerta_origin_Valid() const{
    return m_alerta_origin_isValid;
}

QString OAITransportAlerta_jsonld_put::getAlertaResource() const {
    return m_alerta_resource;
}
void OAITransportAlerta_jsonld_put::setAlertaResource(const QString &alerta_resource) {
    m_alerta_resource = alerta_resource;
    m_alerta_resource_isSet = true;
}

bool OAITransportAlerta_jsonld_put::is_alerta_resource_Set() const{
    return m_alerta_resource_isSet;
}

bool OAITransportAlerta_jsonld_put::is_alerta_resource_Valid() const{
    return m_alerta_resource_isValid;
}

QString OAITransportAlerta_jsonld_put::getAlertaService() const {
    return m_alerta_service;
}
void OAITransportAlerta_jsonld_put::setAlertaService(const QString &alerta_service) {
    m_alerta_service = alerta_service;
    m_alerta_service_isSet = true;
}

bool OAITransportAlerta_jsonld_put::is_alerta_service_Set() const{
    return m_alerta_service_isSet;
}

bool OAITransportAlerta_jsonld_put::is_alerta_service_Valid() const{
    return m_alerta_service_isValid;
}

QString OAITransportAlerta_jsonld_put::getAlertaSeverity() const {
    return m_alerta_severity;
}
void OAITransportAlerta_jsonld_put::setAlertaSeverity(const QString &alerta_severity) {
    m_alerta_severity = alerta_severity;
    m_alerta_severity_isSet = true;
}

bool OAITransportAlerta_jsonld_put::is_alerta_severity_Set() const{
    return m_alerta_severity_isSet;
}

bool OAITransportAlerta_jsonld_put::is_alerta_severity_Valid() const{
    return m_alerta_severity_isValid;
}

QString OAITransportAlerta_jsonld_put::getAlertaStatus() const {
    return m_alerta_status;
}
void OAITransportAlerta_jsonld_put::setAlertaStatus(const QString &alerta_status) {
    m_alerta_status = alerta_status;
    m_alerta_status_isSet = true;
}

bool OAITransportAlerta_jsonld_put::is_alerta_status_Set() const{
    return m_alerta_status_isSet;
}

bool OAITransportAlerta_jsonld_put::is_alerta_status_Valid() const{
    return m_alerta_status_isValid;
}

QString OAITransportAlerta_jsonld_put::getAlertaTags() const {
    return m_alerta_tags;
}
void OAITransportAlerta_jsonld_put::setAlertaTags(const QString &alerta_tags) {
    m_alerta_tags = alerta_tags;
    m_alerta_tags_isSet = true;
}

bool OAITransportAlerta_jsonld_put::is_alerta_tags_Set() const{
    return m_alerta_tags_isSet;
}

bool OAITransportAlerta_jsonld_put::is_alerta_tags_Valid() const{
    return m_alerta_tags_isValid;
}

QString OAITransportAlerta_jsonld_put::getAlertaType() const {
    return m_alerta_type;
}
void OAITransportAlerta_jsonld_put::setAlertaType(const QString &alerta_type) {
    m_alerta_type = alerta_type;
    m_alerta_type_isSet = true;
}

bool OAITransportAlerta_jsonld_put::is_alerta_type_Set() const{
    return m_alerta_type_isSet;
}

bool OAITransportAlerta_jsonld_put::is_alerta_type_Valid() const{
    return m_alerta_type_isValid;
}

QString OAITransportAlerta_jsonld_put::getDataSegmentCode() const {
    return m_data_segment_code;
}
void OAITransportAlerta_jsonld_put::setDataSegmentCode(const QString &data_segment_code) {
    m_data_segment_code = data_segment_code;
    m_data_segment_code_isSet = true;
}

bool OAITransportAlerta_jsonld_put::is_data_segment_code_Set() const{
    return m_data_segment_code_isSet;
}

bool OAITransportAlerta_jsonld_put::is_data_segment_code_Valid() const{
    return m_data_segment_code_isValid;
}

QString OAITransportAlerta_jsonld_put::getTransportName() const {
    return m_transport_name;
}
void OAITransportAlerta_jsonld_put::setTransportName(const QString &transport_name) {
    m_transport_name = transport_name;
    m_transport_name_isSet = true;
}

bool OAITransportAlerta_jsonld_put::is_transport_name_Set() const{
    return m_transport_name_isSet;
}

bool OAITransportAlerta_jsonld_put::is_transport_name_Valid() const{
    return m_transport_name_isValid;
}

bool OAITransportAlerta_jsonld_put::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_alerta_api_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_alerta_correlate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_alerta_environment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_alerta_event_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_alerta_group_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_alerta_host_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_alerta_origin_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_alerta_resource_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_alerta_service_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_alerta_severity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_alerta_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_alerta_tags_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_alerta_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_segment_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transport_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITransportAlerta_jsonld_put::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_alerta_api_key_isValid && m_alerta_event_isValid && m_alerta_host_isValid && m_alerta_resource_isValid && m_transport_name_isValid && true;
}

} // namespace OpenAPI
