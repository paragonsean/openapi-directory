/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AlerterSystemApi);
  }
}(this, function(expect, AlerterSystemApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AlerterSystemApi.TransportFreshdeskGet();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TransportFreshdeskGet', function() {
    it('should create an instance of TransportFreshdeskGet', function() {
      // uncomment below and update the code to test TransportFreshdeskGet
      //var instance = new AlerterSystemApi.TransportFreshdeskGet();
      //expect(instance).to.be.a(AlerterSystemApi.TransportFreshdeskGet);
    });

    it('should have the property createdAt (base name: "createdAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new AlerterSystemApi.TransportFreshdeskGet();
      //expect(instance).to.be();
    });

    it('should have the property dataSegmentCode (base name: "dataSegmentCode")', function() {
      // uncomment below and update the code to test the property dataSegmentCode
      //var instance = new AlerterSystemApi.TransportFreshdeskGet();
      //expect(instance).to.be();
    });

    it('should have the property freshdeskApiKey (base name: "freshdeskApiKey")', function() {
      // uncomment below and update the code to test the property freshdeskApiKey
      //var instance = new AlerterSystemApi.TransportFreshdeskGet();
      //expect(instance).to.be();
    });

    it('should have the property freshdeskEmail (base name: "freshdeskEmail")', function() {
      // uncomment below and update the code to test the property freshdeskEmail
      //var instance = new AlerterSystemApi.TransportFreshdeskGet();
      //expect(instance).to.be();
    });

    it('should have the property freshdeskHost (base name: "freshdeskHost")', function() {
      // uncomment below and update the code to test the property freshdeskHost
      //var instance = new AlerterSystemApi.TransportFreshdeskGet();
      //expect(instance).to.be();
    });

    it('should have the property freshdeskPriority (base name: "freshdeskPriority")', function() {
      // uncomment below and update the code to test the property freshdeskPriority
      //var instance = new AlerterSystemApi.TransportFreshdeskGet();
      //expect(instance).to.be();
    });

    it('should have the property freshdeskType (base name: "freshdeskType")', function() {
      // uncomment below and update the code to test the property freshdeskType
      //var instance = new AlerterSystemApi.TransportFreshdeskGet();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new AlerterSystemApi.TransportFreshdeskGet();
      //expect(instance).to.be();
    });

    it('should have the property partition (base name: "partition")', function() {
      // uncomment below and update the code to test the property partition
      //var instance = new AlerterSystemApi.TransportFreshdeskGet();
      //expect(instance).to.be();
    });

    it('should have the property resourceOwner (base name: "resourceOwner")', function() {
      // uncomment below and update the code to test the property resourceOwner
      //var instance = new AlerterSystemApi.TransportFreshdeskGet();
      //expect(instance).to.be();
    });

    it('should have the property transportName (base name: "transportName")', function() {
      // uncomment below and update the code to test the property transportName
      //var instance = new AlerterSystemApi.TransportFreshdeskGet();
      //expect(instance).to.be();
    });

  });

}));
