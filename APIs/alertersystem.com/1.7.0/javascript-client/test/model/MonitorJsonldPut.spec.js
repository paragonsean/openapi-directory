/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AlerterSystemApi);
  }
}(this, function(expect, AlerterSystemApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AlerterSystemApi.MonitorJsonldPut();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MonitorJsonldPut', function() {
    it('should create an instance of MonitorJsonldPut', function() {
      // uncomment below and update the code to test MonitorJsonldPut
      //var instance = new AlerterSystemApi.MonitorJsonldPut();
      //expect(instance).to.be.a(AlerterSystemApi.MonitorJsonldPut);
    });

    it('should have the property alertPayloadExtended (base name: "alertPayloadExtended")', function() {
      // uncomment below and update the code to test the property alertPayloadExtended
      //var instance = new AlerterSystemApi.MonitorJsonldPut();
      //expect(instance).to.be();
    });

    it('should have the property alertPayloadShort (base name: "alertPayloadShort")', function() {
      // uncomment below and update the code to test the property alertPayloadShort
      //var instance = new AlerterSystemApi.MonitorJsonldPut();
      //expect(instance).to.be();
    });

    it('should have the property alertServices (base name: "alertServices")', function() {
      // uncomment below and update the code to test the property alertServices
      //var instance = new AlerterSystemApi.MonitorJsonldPut();
      //expect(instance).to.be();
    });

    it('should have the property allowUnauthenticatedPings (base name: "allowUnauthenticatedPings")', function() {
      // uncomment below and update the code to test the property allowUnauthenticatedPings
      //var instance = new AlerterSystemApi.MonitorJsonldPut();
      //expect(instance).to.be();
    });

    it('should have the property contentCheckMustNotExist (base name: "contentCheckMustNotExist")', function() {
      // uncomment below and update the code to test the property contentCheckMustNotExist
      //var instance = new AlerterSystemApi.MonitorJsonldPut();
      //expect(instance).to.be();
    });

    it('should have the property contentCheckText (base name: "contentCheckText")', function() {
      // uncomment below and update the code to test the property contentCheckText
      //var instance = new AlerterSystemApi.MonitorJsonldPut();
      //expect(instance).to.be();
    });

    it('should have the property contentCheckUrl (base name: "contentCheckUrl")', function() {
      // uncomment below and update the code to test the property contentCheckUrl
      //var instance = new AlerterSystemApi.MonitorJsonldPut();
      //expect(instance).to.be();
    });

    it('should have the property contentCheckXpathFilter (base name: "contentCheckXpathFilter")', function() {
      // uncomment below and update the code to test the property contentCheckXpathFilter
      //var instance = new AlerterSystemApi.MonitorJsonldPut();
      //expect(instance).to.be();
    });

    it('should have the property dataSegmentCode (base name: "dataSegmentCode")', function() {
      // uncomment below and update the code to test the property dataSegmentCode
      //var instance = new AlerterSystemApi.MonitorJsonldPut();
      //expect(instance).to.be();
    });

    it('should have the property graceSeconds (base name: "graceSeconds")', function() {
      // uncomment below and update the code to test the property graceSeconds
      //var instance = new AlerterSystemApi.MonitorJsonldPut();
      //expect(instance).to.be();
    });

    it('should have the property intervalDays (base name: "intervalDays")', function() {
      // uncomment below and update the code to test the property intervalDays
      //var instance = new AlerterSystemApi.MonitorJsonldPut();
      //expect(instance).to.be();
    });

    it('should have the property intervalHours (base name: "intervalHours")', function() {
      // uncomment below and update the code to test the property intervalHours
      //var instance = new AlerterSystemApi.MonitorJsonldPut();
      //expect(instance).to.be();
    });

    it('should have the property intervalMinutes (base name: "intervalMinutes")', function() {
      // uncomment below and update the code to test the property intervalMinutes
      //var instance = new AlerterSystemApi.MonitorJsonldPut();
      //expect(instance).to.be();
    });

    it('should have the property intervalMonths (base name: "intervalMonths")', function() {
      // uncomment below and update the code to test the property intervalMonths
      //var instance = new AlerterSystemApi.MonitorJsonldPut();
      //expect(instance).to.be();
    });

    it('should have the property intervalSeconds (base name: "intervalSeconds")', function() {
      // uncomment below and update the code to test the property intervalSeconds
      //var instance = new AlerterSystemApi.MonitorJsonldPut();
      //expect(instance).to.be();
    });

    it('should have the property intervalYears (base name: "intervalYears")', function() {
      // uncomment below and update the code to test the property intervalYears
      //var instance = new AlerterSystemApi.MonitorJsonldPut();
      //expect(instance).to.be();
    });

    it('should have the property isMonitorPaused (base name: "isMonitorPaused")', function() {
      // uncomment below and update the code to test the property isMonitorPaused
      //var instance = new AlerterSystemApi.MonitorJsonldPut();
      //expect(instance).to.be();
    });

    it('should have the property monitorName (base name: "monitorName")', function() {
      // uncomment below and update the code to test the property monitorName
      //var instance = new AlerterSystemApi.MonitorJsonldPut();
      //expect(instance).to.be();
    });

    it('should have the property monitorNotes (base name: "monitorNotes")', function() {
      // uncomment below and update the code to test the property monitorNotes
      //var instance = new AlerterSystemApi.MonitorJsonldPut();
      //expect(instance).to.be();
    });

    it('should have the property publicDescription (base name: "publicDescription")', function() {
      // uncomment below and update the code to test the property publicDescription
      //var instance = new AlerterSystemApi.MonitorJsonldPut();
      //expect(instance).to.be();
    });

    it('should have the property startMonitorAt (base name: "startMonitorAt")', function() {
      // uncomment below and update the code to test the property startMonitorAt
      //var instance = new AlerterSystemApi.MonitorJsonldPut();
      //expect(instance).to.be();
    });

    it('should have the property timezoneCode (base name: "timezoneCode")', function() {
      // uncomment below and update the code to test the property timezoneCode
      //var instance = new AlerterSystemApi.MonitorJsonldPut();
      //expect(instance).to.be();
    });

    it('should have the property webResponseSecondsLimit (base name: "webResponseSecondsLimit")', function() {
      // uncomment below and update the code to test the property webResponseSecondsLimit
      //var instance = new AlerterSystemApi.MonitorJsonldPut();
      //expect(instance).to.be();
    });

    it('should have the property webResponseUrl (base name: "webResponseUrl")', function() {
      // uncomment below and update the code to test the property webResponseUrl
      //var instance = new AlerterSystemApi.MonitorJsonldPut();
      //expect(instance).to.be();
    });

  });

}));
