/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TransportPlivoPut model module.
 * @module model/TransportPlivoPut
 * @version 1.7.0
 */
class TransportPlivoPut {
    /**
     * Constructs a new <code>TransportPlivoPut</code>.
     * The TransportPlivo resource is a collection of transports that carry dispatched alerts to the external Plivo service.
     * @alias module:model/TransportPlivoPut
     * @param plivoAuthId {String} The auth ID for the Plivo service.
     * @param plivoAuthToken {String} The auth token for the Plivo service. Stored in encrypted format.
     * @param plivoFrom {String} The sender value for the Plivo service.
     * @param transportName {String} The name of the transport.
     */
    constructor(plivoAuthId, plivoAuthToken, plivoFrom, transportName) { 
        
        TransportPlivoPut.initialize(this, plivoAuthId, plivoAuthToken, plivoFrom, transportName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, plivoAuthId, plivoAuthToken, plivoFrom, transportName) { 
        obj['plivoAuthId'] = plivoAuthId;
        obj['plivoAuthToken'] = plivoAuthToken;
        obj['plivoFrom'] = plivoFrom;
        obj['transportName'] = transportName;
    }

    /**
     * Constructs a <code>TransportPlivoPut</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransportPlivoPut} obj Optional instance to populate.
     * @return {module:model/TransportPlivoPut} The populated <code>TransportPlivoPut</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransportPlivoPut();

            if (data.hasOwnProperty('dataSegmentCode')) {
                obj['dataSegmentCode'] = ApiClient.convertToType(data['dataSegmentCode'], 'String');
            }
            if (data.hasOwnProperty('plivoAuthId')) {
                obj['plivoAuthId'] = ApiClient.convertToType(data['plivoAuthId'], 'String');
            }
            if (data.hasOwnProperty('plivoAuthToken')) {
                obj['plivoAuthToken'] = ApiClient.convertToType(data['plivoAuthToken'], 'String');
            }
            if (data.hasOwnProperty('plivoFrom')) {
                obj['plivoFrom'] = ApiClient.convertToType(data['plivoFrom'], 'String');
            }
            if (data.hasOwnProperty('transportName')) {
                obj['transportName'] = ApiClient.convertToType(data['transportName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TransportPlivoPut</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TransportPlivoPut</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TransportPlivoPut.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['dataSegmentCode'] && !(typeof data['dataSegmentCode'] === 'string' || data['dataSegmentCode'] instanceof String)) {
            throw new Error("Expected the field `dataSegmentCode` to be a primitive type in the JSON string but got " + data['dataSegmentCode']);
        }
        // ensure the json data is a string
        if (data['plivoAuthId'] && !(typeof data['plivoAuthId'] === 'string' || data['plivoAuthId'] instanceof String)) {
            throw new Error("Expected the field `plivoAuthId` to be a primitive type in the JSON string but got " + data['plivoAuthId']);
        }
        // ensure the json data is a string
        if (data['plivoAuthToken'] && !(typeof data['plivoAuthToken'] === 'string' || data['plivoAuthToken'] instanceof String)) {
            throw new Error("Expected the field `plivoAuthToken` to be a primitive type in the JSON string but got " + data['plivoAuthToken']);
        }
        // ensure the json data is a string
        if (data['plivoFrom'] && !(typeof data['plivoFrom'] === 'string' || data['plivoFrom'] instanceof String)) {
            throw new Error("Expected the field `plivoFrom` to be a primitive type in the JSON string but got " + data['plivoFrom']);
        }
        // ensure the json data is a string
        if (data['transportName'] && !(typeof data['transportName'] === 'string' || data['transportName'] instanceof String)) {
            throw new Error("Expected the field `transportName` to be a primitive type in the JSON string but got " + data['transportName']);
        }

        return true;
    }


}

TransportPlivoPut.RequiredProperties = ["plivoAuthId", "plivoAuthToken", "plivoFrom", "transportName"];

/**
 * User-provided string on which to segment and filter data. Max 50 characters.
 * @member {String} dataSegmentCode
 */
TransportPlivoPut.prototype['dataSegmentCode'] = undefined;

/**
 * The auth ID for the Plivo service.
 * @member {String} plivoAuthId
 */
TransportPlivoPut.prototype['plivoAuthId'] = undefined;

/**
 * The auth token for the Plivo service. Stored in encrypted format.
 * @member {String} plivoAuthToken
 */
TransportPlivoPut.prototype['plivoAuthToken'] = undefined;

/**
 * The sender value for the Plivo service.
 * @member {String} plivoFrom
 */
TransportPlivoPut.prototype['plivoFrom'] = undefined;

/**
 * The name of the transport.
 * @member {String} transportName
 */
TransportPlivoPut.prototype['transportName'] = undefined;






export default TransportPlivoPut;

