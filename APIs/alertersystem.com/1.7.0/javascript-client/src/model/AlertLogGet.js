/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AlertLogGet model module.
 * @module model/AlertLogGet
 * @version 1.7.0
 */
class AlertLogGet {
    /**
     * Constructs a new <code>AlertLogGet</code>.
     * The AlertLog resource is a chronological record of all the alerts that have been triggered, including the status of each alert.
     * @alias module:model/AlertLogGet
     */
    constructor() { 
        
        AlertLogGet.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AlertLogGet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AlertLogGet} obj Optional instance to populate.
     * @return {module:model/AlertLogGet} The populated <code>AlertLogGet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AlertLogGet();

            if (data.hasOwnProperty('alertLogErrorMessage')) {
                obj['alertLogErrorMessage'] = ApiClient.convertToType(data['alertLogErrorMessage'], 'String');
            }
            if (data.hasOwnProperty('alertLogMessageId')) {
                obj['alertLogMessageId'] = ApiClient.convertToType(data['alertLogMessageId'], 'String');
            }
            if (data.hasOwnProperty('alertLogStatusCode')) {
                obj['alertLogStatusCode'] = ApiClient.convertToType(data['alertLogStatusCode'], 'String');
            }
            if (data.hasOwnProperty('alertService')) {
                obj['alertService'] = ApiClient.convertToType(data['alertService'], 'String');
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('dataSegmentCode')) {
                obj['dataSegmentCode'] = ApiClient.convertToType(data['dataSegmentCode'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('monitor')) {
                obj['monitor'] = ApiClient.convertToType(data['monitor'], 'String');
            }
            if (data.hasOwnProperty('partition')) {
                obj['partition'] = ApiClient.convertToType(data['partition'], 'String');
            }
            if (data.hasOwnProperty('ping')) {
                obj['ping'] = ApiClient.convertToType(data['ping'], 'String');
            }
            if (data.hasOwnProperty('resourceOwner')) {
                obj['resourceOwner'] = ApiClient.convertToType(data['resourceOwner'], 'String');
            }
            if (data.hasOwnProperty('webhookResponseBody')) {
                obj['webhookResponseBody'] = ApiClient.convertToType(data['webhookResponseBody'], 'String');
            }
            if (data.hasOwnProperty('webhookResponseHeaders')) {
                obj['webhookResponseHeaders'] = ApiClient.convertToType(data['webhookResponseHeaders'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AlertLogGet</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AlertLogGet</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['alertLogErrorMessage'] && !(typeof data['alertLogErrorMessage'] === 'string' || data['alertLogErrorMessage'] instanceof String)) {
            throw new Error("Expected the field `alertLogErrorMessage` to be a primitive type in the JSON string but got " + data['alertLogErrorMessage']);
        }
        // ensure the json data is a string
        if (data['alertLogMessageId'] && !(typeof data['alertLogMessageId'] === 'string' || data['alertLogMessageId'] instanceof String)) {
            throw new Error("Expected the field `alertLogMessageId` to be a primitive type in the JSON string but got " + data['alertLogMessageId']);
        }
        // ensure the json data is a string
        if (data['alertLogStatusCode'] && !(typeof data['alertLogStatusCode'] === 'string' || data['alertLogStatusCode'] instanceof String)) {
            throw new Error("Expected the field `alertLogStatusCode` to be a primitive type in the JSON string but got " + data['alertLogStatusCode']);
        }
        // ensure the json data is a string
        if (data['alertService'] && !(typeof data['alertService'] === 'string' || data['alertService'] instanceof String)) {
            throw new Error("Expected the field `alertService` to be a primitive type in the JSON string but got " + data['alertService']);
        }
        // ensure the json data is a string
        if (data['dataSegmentCode'] && !(typeof data['dataSegmentCode'] === 'string' || data['dataSegmentCode'] instanceof String)) {
            throw new Error("Expected the field `dataSegmentCode` to be a primitive type in the JSON string but got " + data['dataSegmentCode']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['monitor'] && !(typeof data['monitor'] === 'string' || data['monitor'] instanceof String)) {
            throw new Error("Expected the field `monitor` to be a primitive type in the JSON string but got " + data['monitor']);
        }
        // ensure the json data is a string
        if (data['partition'] && !(typeof data['partition'] === 'string' || data['partition'] instanceof String)) {
            throw new Error("Expected the field `partition` to be a primitive type in the JSON string but got " + data['partition']);
        }
        // ensure the json data is a string
        if (data['ping'] && !(typeof data['ping'] === 'string' || data['ping'] instanceof String)) {
            throw new Error("Expected the field `ping` to be a primitive type in the JSON string but got " + data['ping']);
        }
        // ensure the json data is a string
        if (data['resourceOwner'] && !(typeof data['resourceOwner'] === 'string' || data['resourceOwner'] instanceof String)) {
            throw new Error("Expected the field `resourceOwner` to be a primitive type in the JSON string but got " + data['resourceOwner']);
        }
        // ensure the json data is a string
        if (data['webhookResponseBody'] && !(typeof data['webhookResponseBody'] === 'string' || data['webhookResponseBody'] instanceof String)) {
            throw new Error("Expected the field `webhookResponseBody` to be a primitive type in the JSON string but got " + data['webhookResponseBody']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['webhookResponseHeaders'])) {
            throw new Error("Expected the field `webhookResponseHeaders` to be an array in the JSON data but got " + data['webhookResponseHeaders']);
        }

        return true;
    }


}



/**
 * The reason why the dispatch of the alert failed.
 * @member {String} alertLogErrorMessage
 */
AlertLogGet.prototype['alertLogErrorMessage'] = undefined;

/**
 * The id of the successfully dispatched message as received from the transport that was used.
 * @member {String} alertLogMessageId
 */
AlertLogGet.prototype['alertLogMessageId'] = undefined;

/**
 * The status of the alert log.
 * @member {String} alertLogStatusCode
 */
AlertLogGet.prototype['alertLogStatusCode'] = undefined;

/**
 * The alert service that is related to this resource.
 * @member {String} alertService
 */
AlertLogGet.prototype['alertService'] = undefined;

/**
 * When the resource instance was created. This date-time is in the UTC timezone.
 * @member {Date} createdAt
 */
AlertLogGet.prototype['createdAt'] = undefined;

/**
 * User-provided string on which to segment and filter data. Max 50 characters.
 * @member {String} dataSegmentCode
 */
AlertLogGet.prototype['dataSegmentCode'] = undefined;

/**
 * The unique identifier of the resource instance.
 * @member {String} id
 */
AlertLogGet.prototype['id'] = undefined;

/**
 * The monitor that is related to this resource instance.
 * @member {String} monitor
 */
AlertLogGet.prototype['monitor'] = undefined;

/**
 * The partition that contains this resource instance. The resource cannot be moved to another partition.
 * @member {String} partition
 */
AlertLogGet.prototype['partition'] = undefined;

/**
 * The ping that triggered this resource instance.
 * @member {String} ping
 */
AlertLogGet.prototype['ping'] = undefined;

/**
 * The name of the person who owns this resource.
 * @member {String} resourceOwner
 */
AlertLogGet.prototype['resourceOwner'] = undefined;

/**
 * The response body returned by a successful request to a webhook URL. Length limited to 1,000 characters.
 * @member {String} webhookResponseBody
 */
AlertLogGet.prototype['webhookResponseBody'] = undefined;

/**
 * The response headers returned by a successful request to a webhook URL.
 * @member {Array.<String>} webhookResponseHeaders
 */
AlertLogGet.prototype['webhookResponseHeaders'] = undefined;






export default AlertLogGet;

