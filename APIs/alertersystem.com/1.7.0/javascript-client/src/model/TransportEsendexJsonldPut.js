/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TransportEsendexJsonldPut model module.
 * @module model/TransportEsendexJsonldPut
 * @version 1.7.0
 */
class TransportEsendexJsonldPut {
    /**
     * Constructs a new <code>TransportEsendexJsonldPut</code>.
     * The TransportEsendex resource is a collection of transports that carry dispatched alerts to the external Esendex service.
     * @alias module:model/TransportEsendexJsonldPut
     * @param esendexAccountReference {String} The account reference that the message should be sent from for the Esendex service.
     * @param esendexFrom {String} The alphanumeric originator for the message to appear to originate from for the Esendex service.
     * @param esendexPassword {String} The API password for the Esendex service. Stored in encrypted format.
     * @param esendexUsername {String} The account email for the Esendex service.
     * @param transportName {String} The name of the transport.
     */
    constructor(esendexAccountReference, esendexFrom, esendexPassword, esendexUsername, transportName) { 
        
        TransportEsendexJsonldPut.initialize(this, esendexAccountReference, esendexFrom, esendexPassword, esendexUsername, transportName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, esendexAccountReference, esendexFrom, esendexPassword, esendexUsername, transportName) { 
        obj['esendexAccountReference'] = esendexAccountReference;
        obj['esendexFrom'] = esendexFrom;
        obj['esendexPassword'] = esendexPassword;
        obj['esendexUsername'] = esendexUsername;
        obj['transportName'] = transportName;
    }

    /**
     * Constructs a <code>TransportEsendexJsonldPut</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransportEsendexJsonldPut} obj Optional instance to populate.
     * @return {module:model/TransportEsendexJsonldPut} The populated <code>TransportEsendexJsonldPut</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransportEsendexJsonldPut();

            if (data.hasOwnProperty('dataSegmentCode')) {
                obj['dataSegmentCode'] = ApiClient.convertToType(data['dataSegmentCode'], 'String');
            }
            if (data.hasOwnProperty('esendexAccountReference')) {
                obj['esendexAccountReference'] = ApiClient.convertToType(data['esendexAccountReference'], 'String');
            }
            if (data.hasOwnProperty('esendexFrom')) {
                obj['esendexFrom'] = ApiClient.convertToType(data['esendexFrom'], 'String');
            }
            if (data.hasOwnProperty('esendexPassword')) {
                obj['esendexPassword'] = ApiClient.convertToType(data['esendexPassword'], 'String');
            }
            if (data.hasOwnProperty('esendexUsername')) {
                obj['esendexUsername'] = ApiClient.convertToType(data['esendexUsername'], 'String');
            }
            if (data.hasOwnProperty('transportName')) {
                obj['transportName'] = ApiClient.convertToType(data['transportName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TransportEsendexJsonldPut</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TransportEsendexJsonldPut</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TransportEsendexJsonldPut.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['dataSegmentCode'] && !(typeof data['dataSegmentCode'] === 'string' || data['dataSegmentCode'] instanceof String)) {
            throw new Error("Expected the field `dataSegmentCode` to be a primitive type in the JSON string but got " + data['dataSegmentCode']);
        }
        // ensure the json data is a string
        if (data['esendexAccountReference'] && !(typeof data['esendexAccountReference'] === 'string' || data['esendexAccountReference'] instanceof String)) {
            throw new Error("Expected the field `esendexAccountReference` to be a primitive type in the JSON string but got " + data['esendexAccountReference']);
        }
        // ensure the json data is a string
        if (data['esendexFrom'] && !(typeof data['esendexFrom'] === 'string' || data['esendexFrom'] instanceof String)) {
            throw new Error("Expected the field `esendexFrom` to be a primitive type in the JSON string but got " + data['esendexFrom']);
        }
        // ensure the json data is a string
        if (data['esendexPassword'] && !(typeof data['esendexPassword'] === 'string' || data['esendexPassword'] instanceof String)) {
            throw new Error("Expected the field `esendexPassword` to be a primitive type in the JSON string but got " + data['esendexPassword']);
        }
        // ensure the json data is a string
        if (data['esendexUsername'] && !(typeof data['esendexUsername'] === 'string' || data['esendexUsername'] instanceof String)) {
            throw new Error("Expected the field `esendexUsername` to be a primitive type in the JSON string but got " + data['esendexUsername']);
        }
        // ensure the json data is a string
        if (data['transportName'] && !(typeof data['transportName'] === 'string' || data['transportName'] instanceof String)) {
            throw new Error("Expected the field `transportName` to be a primitive type in the JSON string but got " + data['transportName']);
        }

        return true;
    }


}

TransportEsendexJsonldPut.RequiredProperties = ["esendexAccountReference", "esendexFrom", "esendexPassword", "esendexUsername", "transportName"];

/**
 * User-provided string on which to segment and filter data. Max 50 characters.
 * @member {String} dataSegmentCode
 */
TransportEsendexJsonldPut.prototype['dataSegmentCode'] = undefined;

/**
 * The account reference that the message should be sent from for the Esendex service.
 * @member {String} esendexAccountReference
 */
TransportEsendexJsonldPut.prototype['esendexAccountReference'] = undefined;

/**
 * The alphanumeric originator for the message to appear to originate from for the Esendex service.
 * @member {String} esendexFrom
 */
TransportEsendexJsonldPut.prototype['esendexFrom'] = undefined;

/**
 * The API password for the Esendex service. Stored in encrypted format.
 * @member {String} esendexPassword
 */
TransportEsendexJsonldPut.prototype['esendexPassword'] = undefined;

/**
 * The account email for the Esendex service.
 * @member {String} esendexUsername
 */
TransportEsendexJsonldPut.prototype['esendexUsername'] = undefined;

/**
 * The name of the transport.
 * @member {String} transportName
 */
TransportEsendexJsonldPut.prototype['transportName'] = undefined;






export default TransportEsendexJsonldPut;

