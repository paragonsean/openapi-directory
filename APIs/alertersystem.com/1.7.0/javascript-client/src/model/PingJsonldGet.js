/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AlertLogJsonldGetContext from './AlertLogJsonldGetContext';

/**
 * The PingJsonldGet model module.
 * @module model/PingJsonldGet
 * @version 1.7.0
 */
class PingJsonldGet {
    /**
     * Constructs a new <code>PingJsonldGet</code>.
     * The Ping resource is a collection of pings that have been sent to monitors in the user account.
     * @alias module:model/PingJsonldGet
     * @param monitor {String} The monitor that is related to this resource instance.
     */
    constructor(monitor) { 
        
        PingJsonldGet.initialize(this, monitor);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, monitor) { 
        obj['monitor'] = monitor;
    }

    /**
     * Constructs a <code>PingJsonldGet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PingJsonldGet} obj Optional instance to populate.
     * @return {module:model/PingJsonldGet} The populated <code>PingJsonldGet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PingJsonldGet();

            if (data.hasOwnProperty('@context')) {
                obj['@context'] = AlertLogJsonldGetContext.constructFromObject(data['@context']);
            }
            if (data.hasOwnProperty('@id')) {
                obj['@id'] = ApiClient.convertToType(data['@id'], 'String');
            }
            if (data.hasOwnProperty('@type')) {
                obj['@type'] = ApiClient.convertToType(data['@type'], 'String');
            }
            if (data.hasOwnProperty('alertLogs')) {
                obj['alertLogs'] = ApiClient.convertToType(data['alertLogs'], ['String']);
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('dataSegmentCode')) {
                obj['dataSegmentCode'] = ApiClient.convertToType(data['dataSegmentCode'], 'String');
            }
            if (data.hasOwnProperty('expectNextPingAt')) {
                obj['expectNextPingAt'] = ApiClient.convertToType(data['expectNextPingAt'], 'Date');
            }
            if (data.hasOwnProperty('expectNextPingAtEpoch')) {
                obj['expectNextPingAtEpoch'] = ApiClient.convertToType(data['expectNextPingAtEpoch'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('ipAddress')) {
                obj['ipAddress'] = ApiClient.convertToType(data['ipAddress'], 'String');
            }
            if (data.hasOwnProperty('monitor')) {
                obj['monitor'] = ApiClient.convertToType(data['monitor'], 'String');
            }
            if (data.hasOwnProperty('monitorStatusLog')) {
                obj['monitorStatusLog'] = ApiClient.convertToType(data['monitorStatusLog'], 'String');
            }
            if (data.hasOwnProperty('partition')) {
                obj['partition'] = ApiClient.convertToType(data['partition'], 'String');
            }
            if (data.hasOwnProperty('pingCustomCode')) {
                obj['pingCustomCode'] = ApiClient.convertToType(data['pingCustomCode'], 'String');
            }
            if (data.hasOwnProperty('pingCustomPayload')) {
                obj['pingCustomPayload'] = ApiClient.convertToType(data['pingCustomPayload'], 'String');
            }
            if (data.hasOwnProperty('pingMethodCode')) {
                obj['pingMethodCode'] = ApiClient.convertToType(data['pingMethodCode'], 'String');
            }
            if (data.hasOwnProperty('resourceOwner')) {
                obj['resourceOwner'] = ApiClient.convertToType(data['resourceOwner'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PingJsonldGet</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PingJsonldGet</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PingJsonldGet.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `@context`
        if (data['@context']) { // data not null
          AlertLogJsonldGetContext.validateJSON(data['@context']);
        }
        // ensure the json data is a string
        if (data['@id'] && !(typeof data['@id'] === 'string' || data['@id'] instanceof String)) {
            throw new Error("Expected the field `@id` to be a primitive type in the JSON string but got " + data['@id']);
        }
        // ensure the json data is a string
        if (data['@type'] && !(typeof data['@type'] === 'string' || data['@type'] instanceof String)) {
            throw new Error("Expected the field `@type` to be a primitive type in the JSON string but got " + data['@type']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['alertLogs'])) {
            throw new Error("Expected the field `alertLogs` to be an array in the JSON data but got " + data['alertLogs']);
        }
        // ensure the json data is a string
        if (data['dataSegmentCode'] && !(typeof data['dataSegmentCode'] === 'string' || data['dataSegmentCode'] instanceof String)) {
            throw new Error("Expected the field `dataSegmentCode` to be a primitive type in the JSON string but got " + data['dataSegmentCode']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['ipAddress'] && !(typeof data['ipAddress'] === 'string' || data['ipAddress'] instanceof String)) {
            throw new Error("Expected the field `ipAddress` to be a primitive type in the JSON string but got " + data['ipAddress']);
        }
        // ensure the json data is a string
        if (data['monitor'] && !(typeof data['monitor'] === 'string' || data['monitor'] instanceof String)) {
            throw new Error("Expected the field `monitor` to be a primitive type in the JSON string but got " + data['monitor']);
        }
        // ensure the json data is a string
        if (data['monitorStatusLog'] && !(typeof data['monitorStatusLog'] === 'string' || data['monitorStatusLog'] instanceof String)) {
            throw new Error("Expected the field `monitorStatusLog` to be a primitive type in the JSON string but got " + data['monitorStatusLog']);
        }
        // ensure the json data is a string
        if (data['partition'] && !(typeof data['partition'] === 'string' || data['partition'] instanceof String)) {
            throw new Error("Expected the field `partition` to be a primitive type in the JSON string but got " + data['partition']);
        }
        // ensure the json data is a string
        if (data['pingCustomCode'] && !(typeof data['pingCustomCode'] === 'string' || data['pingCustomCode'] instanceof String)) {
            throw new Error("Expected the field `pingCustomCode` to be a primitive type in the JSON string but got " + data['pingCustomCode']);
        }
        // ensure the json data is a string
        if (data['pingCustomPayload'] && !(typeof data['pingCustomPayload'] === 'string' || data['pingCustomPayload'] instanceof String)) {
            throw new Error("Expected the field `pingCustomPayload` to be a primitive type in the JSON string but got " + data['pingCustomPayload']);
        }
        // ensure the json data is a string
        if (data['pingMethodCode'] && !(typeof data['pingMethodCode'] === 'string' || data['pingMethodCode'] instanceof String)) {
            throw new Error("Expected the field `pingMethodCode` to be a primitive type in the JSON string but got " + data['pingMethodCode']);
        }
        // ensure the json data is a string
        if (data['resourceOwner'] && !(typeof data['resourceOwner'] === 'string' || data['resourceOwner'] instanceof String)) {
            throw new Error("Expected the field `resourceOwner` to be a primitive type in the JSON string but got " + data['resourceOwner']);
        }

        return true;
    }


}

PingJsonldGet.RequiredProperties = ["monitor"];

/**
 * @member {module:model/AlertLogJsonldGetContext} @context
 */
PingJsonldGet.prototype['@context'] = undefined;

/**
 * @member {String} @id
 */
PingJsonldGet.prototype['@id'] = undefined;

/**
 * @member {String} @type
 */
PingJsonldGet.prototype['@type'] = undefined;

/**
 * The alert logs that are related to this resource instance.
 * @member {Array.<String>} alertLogs
 */
PingJsonldGet.prototype['alertLogs'] = undefined;

/**
 * When the resource instance was created. This date-time is in the UTC timezone.
 * @member {Date} createdAt
 */
PingJsonldGet.prototype['createdAt'] = undefined;

/**
 * User-provided string on which to segment and filter data. Max 50 characters.
 * @member {String} dataSegmentCode
 */
PingJsonldGet.prototype['dataSegmentCode'] = undefined;

/**
 * When to expect the next ping for a Last Ping monitor type. This date-time is always interpreted to be in the timezone of the monitor. Any UTC offset is ignored. Supply either \"expectNextPingAt\", or \"expectNextPingAtEpoch\", or a X_NEXT_PING request header, not more than one of those options. Must be blank for other monitor types.
 * @member {Date} expectNextPingAt
 */
PingJsonldGet.prototype['expectNextPingAt'] = undefined;

/**
 * When to expect the next ping for a Last Ping monitor type, expressed in epoch timestamp format. Supply either \"expectNextPingAt\", or \"expectNextPingAtEpoch\", or a X_NEXT_PING request header, not more than one of those options. Must be blank for other monitor types.
 * @member {Number} expectNextPingAtEpoch
 */
PingJsonldGet.prototype['expectNextPingAtEpoch'] = undefined;

/**
 * The unique identifier of the resource instance.
 * @member {String} id
 */
PingJsonldGet.prototype['id'] = undefined;

/**
 * The IP address where this resource originated.
 * @member {String} ipAddress
 */
PingJsonldGet.prototype['ipAddress'] = undefined;

/**
 * The monitor that is related to this resource instance.
 * @member {String} monitor
 */
PingJsonldGet.prototype['monitor'] = undefined;

/**
 * The monitor status that resulted from the ping.
 * @member {String} monitorStatusLog
 */
PingJsonldGet.prototype['monitorStatusLog'] = undefined;

/**
 * The partition that contains this resource instance. The resource cannot be moved to another partition.
 * @member {String} partition
 */
PingJsonldGet.prototype['partition'] = undefined;

/**
 * The client-supplied custom code that is appended to the ping. Only the first 10 characters are used and saved.
 * @member {String} pingCustomCode
 */
PingJsonldGet.prototype['pingCustomCode'] = undefined;

/**
 * The client-supplied custom payload that is saved with the ping. Only the first 100 characters are saved. This value overrides the value of an monitor's alert payload, if the ping results in an alert.
 * @member {String} pingCustomPayload
 */
PingJsonldGet.prototype['pingCustomPayload'] = undefined;

/**
 * The method of the ping.
 * @member {String} pingMethodCode
 */
PingJsonldGet.prototype['pingMethodCode'] = undefined;

/**
 * The name of the person who owns this resource.
 * @member {String} resourceOwner
 */
PingJsonldGet.prototype['resourceOwner'] = undefined;






export default PingJsonldGet;

