/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TransportOvhCloudJsonldPut model module.
 * @module model/TransportOvhCloudJsonldPut
 * @version 1.7.0
 */
class TransportOvhCloudJsonldPut {
    /**
     * Constructs a new <code>TransportOvhCloudJsonldPut</code>.
     * The TransportOvhCloud resource is a collection of transports that carry dispatched alerts to the external OVHcloud service.
     * @alias module:model/TransportOvhCloudJsonldPut
     * @param ovhCloudApplicationKey {String} The application key for the OVHcloud service.
     * @param ovhCloudApplicationSecret {String} The application secret for the OVHcloud service. Stored in encrypted format.
     * @param ovhCloudConsumerKey {String} The consumer key for the OVHcloud service.
     * @param ovhCloudServiceName {String} The service name for the OVHcloud service.
     * @param transportName {String} The name of the transport.
     */
    constructor(ovhCloudApplicationKey, ovhCloudApplicationSecret, ovhCloudConsumerKey, ovhCloudServiceName, transportName) { 
        
        TransportOvhCloudJsonldPut.initialize(this, ovhCloudApplicationKey, ovhCloudApplicationSecret, ovhCloudConsumerKey, ovhCloudServiceName, transportName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ovhCloudApplicationKey, ovhCloudApplicationSecret, ovhCloudConsumerKey, ovhCloudServiceName, transportName) { 
        obj['ovhCloudApplicationKey'] = ovhCloudApplicationKey;
        obj['ovhCloudApplicationSecret'] = ovhCloudApplicationSecret;
        obj['ovhCloudConsumerKey'] = ovhCloudConsumerKey;
        obj['ovhCloudServiceName'] = ovhCloudServiceName;
        obj['transportName'] = transportName;
    }

    /**
     * Constructs a <code>TransportOvhCloudJsonldPut</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransportOvhCloudJsonldPut} obj Optional instance to populate.
     * @return {module:model/TransportOvhCloudJsonldPut} The populated <code>TransportOvhCloudJsonldPut</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransportOvhCloudJsonldPut();

            if (data.hasOwnProperty('dataSegmentCode')) {
                obj['dataSegmentCode'] = ApiClient.convertToType(data['dataSegmentCode'], 'String');
            }
            if (data.hasOwnProperty('ovhCloudApplicationKey')) {
                obj['ovhCloudApplicationKey'] = ApiClient.convertToType(data['ovhCloudApplicationKey'], 'String');
            }
            if (data.hasOwnProperty('ovhCloudApplicationSecret')) {
                obj['ovhCloudApplicationSecret'] = ApiClient.convertToType(data['ovhCloudApplicationSecret'], 'String');
            }
            if (data.hasOwnProperty('ovhCloudConsumerKey')) {
                obj['ovhCloudConsumerKey'] = ApiClient.convertToType(data['ovhCloudConsumerKey'], 'String');
            }
            if (data.hasOwnProperty('ovhCloudSender')) {
                obj['ovhCloudSender'] = ApiClient.convertToType(data['ovhCloudSender'], 'String');
            }
            if (data.hasOwnProperty('ovhCloudServiceName')) {
                obj['ovhCloudServiceName'] = ApiClient.convertToType(data['ovhCloudServiceName'], 'String');
            }
            if (data.hasOwnProperty('transportName')) {
                obj['transportName'] = ApiClient.convertToType(data['transportName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TransportOvhCloudJsonldPut</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TransportOvhCloudJsonldPut</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TransportOvhCloudJsonldPut.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['dataSegmentCode'] && !(typeof data['dataSegmentCode'] === 'string' || data['dataSegmentCode'] instanceof String)) {
            throw new Error("Expected the field `dataSegmentCode` to be a primitive type in the JSON string but got " + data['dataSegmentCode']);
        }
        // ensure the json data is a string
        if (data['ovhCloudApplicationKey'] && !(typeof data['ovhCloudApplicationKey'] === 'string' || data['ovhCloudApplicationKey'] instanceof String)) {
            throw new Error("Expected the field `ovhCloudApplicationKey` to be a primitive type in the JSON string but got " + data['ovhCloudApplicationKey']);
        }
        // ensure the json data is a string
        if (data['ovhCloudApplicationSecret'] && !(typeof data['ovhCloudApplicationSecret'] === 'string' || data['ovhCloudApplicationSecret'] instanceof String)) {
            throw new Error("Expected the field `ovhCloudApplicationSecret` to be a primitive type in the JSON string but got " + data['ovhCloudApplicationSecret']);
        }
        // ensure the json data is a string
        if (data['ovhCloudConsumerKey'] && !(typeof data['ovhCloudConsumerKey'] === 'string' || data['ovhCloudConsumerKey'] instanceof String)) {
            throw new Error("Expected the field `ovhCloudConsumerKey` to be a primitive type in the JSON string but got " + data['ovhCloudConsumerKey']);
        }
        // ensure the json data is a string
        if (data['ovhCloudSender'] && !(typeof data['ovhCloudSender'] === 'string' || data['ovhCloudSender'] instanceof String)) {
            throw new Error("Expected the field `ovhCloudSender` to be a primitive type in the JSON string but got " + data['ovhCloudSender']);
        }
        // ensure the json data is a string
        if (data['ovhCloudServiceName'] && !(typeof data['ovhCloudServiceName'] === 'string' || data['ovhCloudServiceName'] instanceof String)) {
            throw new Error("Expected the field `ovhCloudServiceName` to be a primitive type in the JSON string but got " + data['ovhCloudServiceName']);
        }
        // ensure the json data is a string
        if (data['transportName'] && !(typeof data['transportName'] === 'string' || data['transportName'] instanceof String)) {
            throw new Error("Expected the field `transportName` to be a primitive type in the JSON string but got " + data['transportName']);
        }

        return true;
    }


}

TransportOvhCloudJsonldPut.RequiredProperties = ["ovhCloudApplicationKey", "ovhCloudApplicationSecret", "ovhCloudConsumerKey", "ovhCloudServiceName", "transportName"];

/**
 * User-provided string on which to segment and filter data. Max 50 characters.
 * @member {String} dataSegmentCode
 */
TransportOvhCloudJsonldPut.prototype['dataSegmentCode'] = undefined;

/**
 * The application key for the OVHcloud service.
 * @member {String} ovhCloudApplicationKey
 */
TransportOvhCloudJsonldPut.prototype['ovhCloudApplicationKey'] = undefined;

/**
 * The application secret for the OVHcloud service. Stored in encrypted format.
 * @member {String} ovhCloudApplicationSecret
 */
TransportOvhCloudJsonldPut.prototype['ovhCloudApplicationSecret'] = undefined;

/**
 * The consumer key for the OVHcloud service.
 * @member {String} ovhCloudConsumerKey
 */
TransportOvhCloudJsonldPut.prototype['ovhCloudConsumerKey'] = undefined;

/**
 * The optional sender for the OVHcloud service.
 * @member {String} ovhCloudSender
 */
TransportOvhCloudJsonldPut.prototype['ovhCloudSender'] = undefined;

/**
 * The service name for the OVHcloud service.
 * @member {String} ovhCloudServiceName
 */
TransportOvhCloudJsonldPut.prototype['ovhCloudServiceName'] = undefined;

/**
 * The name of the transport.
 * @member {String} transportName
 */
TransportOvhCloudJsonldPut.prototype['transportName'] = undefined;






export default TransportOvhCloudJsonldPut;

