/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TransportIqsmsGet model module.
 * @module model/TransportIqsmsGet
 * @version 1.7.0
 */
class TransportIqsmsGet {
    /**
     * Constructs a new <code>TransportIqsmsGet</code>.
     * The TransportIqsms resource is a collection of transports that carry dispatched alerts to the external Iqsms service.
     * @alias module:model/TransportIqsmsGet
     * @param iqsmsFrom {String} The sender value for the Iqsms service.
     * @param iqsmsLogin {String} The login for the Iqsms service.
     * @param iqsmsPassword {String} The password for the Iqsms service. Stored in encrypted format.
     * @param partition {String} The partition that contains this resource instance. The resource cannot be moved to another partition.
     * @param transportName {String} The name of the transport.
     */
    constructor(iqsmsFrom, iqsmsLogin, iqsmsPassword, partition, transportName) { 
        
        TransportIqsmsGet.initialize(this, iqsmsFrom, iqsmsLogin, iqsmsPassword, partition, transportName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, iqsmsFrom, iqsmsLogin, iqsmsPassword, partition, transportName) { 
        obj['iqsmsFrom'] = iqsmsFrom;
        obj['iqsmsLogin'] = iqsmsLogin;
        obj['iqsmsPassword'] = iqsmsPassword;
        obj['partition'] = partition;
        obj['transportName'] = transportName;
    }

    /**
     * Constructs a <code>TransportIqsmsGet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransportIqsmsGet} obj Optional instance to populate.
     * @return {module:model/TransportIqsmsGet} The populated <code>TransportIqsmsGet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransportIqsmsGet();

            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('dataSegmentCode')) {
                obj['dataSegmentCode'] = ApiClient.convertToType(data['dataSegmentCode'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('iqsmsFrom')) {
                obj['iqsmsFrom'] = ApiClient.convertToType(data['iqsmsFrom'], 'String');
            }
            if (data.hasOwnProperty('iqsmsLogin')) {
                obj['iqsmsLogin'] = ApiClient.convertToType(data['iqsmsLogin'], 'String');
            }
            if (data.hasOwnProperty('iqsmsPassword')) {
                obj['iqsmsPassword'] = ApiClient.convertToType(data['iqsmsPassword'], 'String');
            }
            if (data.hasOwnProperty('partition')) {
                obj['partition'] = ApiClient.convertToType(data['partition'], 'String');
            }
            if (data.hasOwnProperty('resourceOwner')) {
                obj['resourceOwner'] = ApiClient.convertToType(data['resourceOwner'], 'String');
            }
            if (data.hasOwnProperty('transportName')) {
                obj['transportName'] = ApiClient.convertToType(data['transportName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TransportIqsmsGet</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TransportIqsmsGet</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TransportIqsmsGet.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['dataSegmentCode'] && !(typeof data['dataSegmentCode'] === 'string' || data['dataSegmentCode'] instanceof String)) {
            throw new Error("Expected the field `dataSegmentCode` to be a primitive type in the JSON string but got " + data['dataSegmentCode']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['iqsmsFrom'] && !(typeof data['iqsmsFrom'] === 'string' || data['iqsmsFrom'] instanceof String)) {
            throw new Error("Expected the field `iqsmsFrom` to be a primitive type in the JSON string but got " + data['iqsmsFrom']);
        }
        // ensure the json data is a string
        if (data['iqsmsLogin'] && !(typeof data['iqsmsLogin'] === 'string' || data['iqsmsLogin'] instanceof String)) {
            throw new Error("Expected the field `iqsmsLogin` to be a primitive type in the JSON string but got " + data['iqsmsLogin']);
        }
        // ensure the json data is a string
        if (data['iqsmsPassword'] && !(typeof data['iqsmsPassword'] === 'string' || data['iqsmsPassword'] instanceof String)) {
            throw new Error("Expected the field `iqsmsPassword` to be a primitive type in the JSON string but got " + data['iqsmsPassword']);
        }
        // ensure the json data is a string
        if (data['partition'] && !(typeof data['partition'] === 'string' || data['partition'] instanceof String)) {
            throw new Error("Expected the field `partition` to be a primitive type in the JSON string but got " + data['partition']);
        }
        // ensure the json data is a string
        if (data['resourceOwner'] && !(typeof data['resourceOwner'] === 'string' || data['resourceOwner'] instanceof String)) {
            throw new Error("Expected the field `resourceOwner` to be a primitive type in the JSON string but got " + data['resourceOwner']);
        }
        // ensure the json data is a string
        if (data['transportName'] && !(typeof data['transportName'] === 'string' || data['transportName'] instanceof String)) {
            throw new Error("Expected the field `transportName` to be a primitive type in the JSON string but got " + data['transportName']);
        }

        return true;
    }


}

TransportIqsmsGet.RequiredProperties = ["iqsmsFrom", "iqsmsLogin", "iqsmsPassword", "partition", "transportName"];

/**
 * When the resource instance was created. This date-time is in the UTC timezone.
 * @member {Date} createdAt
 */
TransportIqsmsGet.prototype['createdAt'] = undefined;

/**
 * User-provided string on which to segment and filter data. Max 50 characters.
 * @member {String} dataSegmentCode
 */
TransportIqsmsGet.prototype['dataSegmentCode'] = undefined;

/**
 * The unique identifier of the resource instance.
 * @member {String} id
 */
TransportIqsmsGet.prototype['id'] = undefined;

/**
 * The sender value for the Iqsms service.
 * @member {String} iqsmsFrom
 */
TransportIqsmsGet.prototype['iqsmsFrom'] = undefined;

/**
 * The login for the Iqsms service.
 * @member {String} iqsmsLogin
 */
TransportIqsmsGet.prototype['iqsmsLogin'] = undefined;

/**
 * The password for the Iqsms service. Stored in encrypted format.
 * @member {String} iqsmsPassword
 */
TransportIqsmsGet.prototype['iqsmsPassword'] = undefined;

/**
 * The partition that contains this resource instance. The resource cannot be moved to another partition.
 * @member {String} partition
 */
TransportIqsmsGet.prototype['partition'] = undefined;

/**
 * The name of the person who owns this resource.
 * @member {String} resourceOwner
 */
TransportIqsmsGet.prototype['resourceOwner'] = undefined;

/**
 * The name of the transport.
 * @member {String} transportName
 */
TransportIqsmsGet.prototype['transportName'] = undefined;






export default TransportIqsmsGet;

