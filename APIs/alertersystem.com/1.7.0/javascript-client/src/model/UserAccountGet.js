/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UserAccountGet model module.
 * @module model/UserAccountGet
 * @version 1.7.0
 */
class UserAccountGet {
    /**
     * Constructs a new <code>UserAccountGet</code>.
     * The UserAccount resource contains basic information regarding the authenticated user account.
     * @alias module:model/UserAccountGet
     */
    constructor() { 
        
        UserAccountGet.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserAccountGet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserAccountGet} obj Optional instance to populate.
     * @return {module:model/UserAccountGet} The populated <code>UserAccountGet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserAccountGet();

            if (data.hasOwnProperty('accountLevelCode')) {
                obj['accountLevelCode'] = ApiClient.convertToType(data['accountLevelCode'], 'String');
            }
            if (data.hasOwnProperty('creditsOveragePercentTripSwitch')) {
                obj['creditsOveragePercentTripSwitch'] = ApiClient.convertToType(data['creditsOveragePercentTripSwitch'], 'Number');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('firstName')) {
                obj['firstName'] = ApiClient.convertToType(data['firstName'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('isDelinquent')) {
                obj['isDelinquent'] = ApiClient.convertToType(data['isDelinquent'], 'Boolean');
            }
            if (data.hasOwnProperty('lastName')) {
                obj['lastName'] = ApiClient.convertToType(data['lastName'], 'String');
            }
            if (data.hasOwnProperty('timezoneCode')) {
                obj['timezoneCode'] = ApiClient.convertToType(data['timezoneCode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserAccountGet</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserAccountGet</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accountLevelCode'] && !(typeof data['accountLevelCode'] === 'string' || data['accountLevelCode'] instanceof String)) {
            throw new Error("Expected the field `accountLevelCode` to be a primitive type in the JSON string but got " + data['accountLevelCode']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['firstName'] && !(typeof data['firstName'] === 'string' || data['firstName'] instanceof String)) {
            throw new Error("Expected the field `firstName` to be a primitive type in the JSON string but got " + data['firstName']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['lastName'] && !(typeof data['lastName'] === 'string' || data['lastName'] instanceof String)) {
            throw new Error("Expected the field `lastName` to be a primitive type in the JSON string but got " + data['lastName']);
        }
        // ensure the json data is a string
        if (data['timezoneCode'] && !(typeof data['timezoneCode'] === 'string' || data['timezoneCode'] instanceof String)) {
            throw new Error("Expected the field `timezoneCode` to be a primitive type in the JSON string but got " + data['timezoneCode']);
        }

        return true;
    }


}



/**
 * The account level of the user.
 * @member {String} accountLevelCode
 */
UserAccountGet.prototype['accountLevelCode'] = undefined;

/**
 * If the credits consumed in the billing period are this percentage above the account plan's included credits, cease further consumption of credits until the end of the billing period. Any integer between 1 and 1,000. Optional. Leave blank for no limit.
 * @member {Number} creditsOveragePercentTripSwitch
 */
UserAccountGet.prototype['creditsOveragePercentTripSwitch'] = undefined;

/**
 * The email address of the user.
 * @member {String} email
 */
UserAccountGet.prototype['email'] = undefined;

/**
 * The first name of the user.
 * @member {String} firstName
 */
UserAccountGet.prototype['firstName'] = undefined;

/**
 * The unique identifier of the resource instance.
 * @member {String} id
 */
UserAccountGet.prototype['id'] = undefined;

/**
 * Whether the user account has overdue payments.
 * @member {Boolean} isDelinquent
 */
UserAccountGet.prototype['isDelinquent'] = undefined;

/**
 * The last name of the user.
 * @member {String} lastName
 */
UserAccountGet.prototype['lastName'] = undefined;

/**
 * The timezone of the user.
 * @member {String} timezoneCode
 */
UserAccountGet.prototype['timezoneCode'] = undefined;






export default UserAccountGet;

