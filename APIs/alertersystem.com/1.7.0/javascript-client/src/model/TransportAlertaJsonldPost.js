/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TransportAlertaJsonldPost model module.
 * @module model/TransportAlertaJsonldPost
 * @version 1.7.0
 */
class TransportAlertaJsonldPost {
    /**
     * Constructs a new <code>TransportAlertaJsonldPost</code>.
     * The TransportAlerta resource is a collection of transports that carry dispatched alerts to the external Alerta service.
     * @alias module:model/TransportAlertaJsonldPost
     * @param alertaApiKey {String} The API key for the Alerta service.
     * @param alertaEvent {String} The event value for the Alerta service.
     * @param alertaHost {String} The host name for the Alerta service (omit the \"https://\" part).
     * @param alertaResource {String} The resource value for the Alerta service.
     * @param partition {String} The partition that contains this resource instance. The resource cannot be moved to another partition.
     * @param transportName {String} The name of the transport.
     */
    constructor(alertaApiKey, alertaEvent, alertaHost, alertaResource, partition, transportName) { 
        
        TransportAlertaJsonldPost.initialize(this, alertaApiKey, alertaEvent, alertaHost, alertaResource, partition, transportName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, alertaApiKey, alertaEvent, alertaHost, alertaResource, partition, transportName) { 
        obj['alertaApiKey'] = alertaApiKey;
        obj['alertaEvent'] = alertaEvent;
        obj['alertaHost'] = alertaHost;
        obj['alertaResource'] = alertaResource;
        obj['partition'] = partition;
        obj['transportName'] = transportName;
    }

    /**
     * Constructs a <code>TransportAlertaJsonldPost</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransportAlertaJsonldPost} obj Optional instance to populate.
     * @return {module:model/TransportAlertaJsonldPost} The populated <code>TransportAlertaJsonldPost</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransportAlertaJsonldPost();

            if (data.hasOwnProperty('alertaApiKey')) {
                obj['alertaApiKey'] = ApiClient.convertToType(data['alertaApiKey'], 'String');
            }
            if (data.hasOwnProperty('alertaCorrelate')) {
                obj['alertaCorrelate'] = ApiClient.convertToType(data['alertaCorrelate'], 'String');
            }
            if (data.hasOwnProperty('alertaEnvironment')) {
                obj['alertaEnvironment'] = ApiClient.convertToType(data['alertaEnvironment'], 'String');
            }
            if (data.hasOwnProperty('alertaEvent')) {
                obj['alertaEvent'] = ApiClient.convertToType(data['alertaEvent'], 'String');
            }
            if (data.hasOwnProperty('alertaGroup')) {
                obj['alertaGroup'] = ApiClient.convertToType(data['alertaGroup'], 'String');
            }
            if (data.hasOwnProperty('alertaHost')) {
                obj['alertaHost'] = ApiClient.convertToType(data['alertaHost'], 'String');
            }
            if (data.hasOwnProperty('alertaOrigin')) {
                obj['alertaOrigin'] = ApiClient.convertToType(data['alertaOrigin'], 'String');
            }
            if (data.hasOwnProperty('alertaResource')) {
                obj['alertaResource'] = ApiClient.convertToType(data['alertaResource'], 'String');
            }
            if (data.hasOwnProperty('alertaService')) {
                obj['alertaService'] = ApiClient.convertToType(data['alertaService'], 'String');
            }
            if (data.hasOwnProperty('alertaSeverity')) {
                obj['alertaSeverity'] = ApiClient.convertToType(data['alertaSeverity'], 'String');
            }
            if (data.hasOwnProperty('alertaStatus')) {
                obj['alertaStatus'] = ApiClient.convertToType(data['alertaStatus'], 'String');
            }
            if (data.hasOwnProperty('alertaTags')) {
                obj['alertaTags'] = ApiClient.convertToType(data['alertaTags'], 'String');
            }
            if (data.hasOwnProperty('alertaType')) {
                obj['alertaType'] = ApiClient.convertToType(data['alertaType'], 'String');
            }
            if (data.hasOwnProperty('dataSegmentCode')) {
                obj['dataSegmentCode'] = ApiClient.convertToType(data['dataSegmentCode'], 'String');
            }
            if (data.hasOwnProperty('partition')) {
                obj['partition'] = ApiClient.convertToType(data['partition'], 'String');
            }
            if (data.hasOwnProperty('transportName')) {
                obj['transportName'] = ApiClient.convertToType(data['transportName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TransportAlertaJsonldPost</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TransportAlertaJsonldPost</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TransportAlertaJsonldPost.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['alertaApiKey'] && !(typeof data['alertaApiKey'] === 'string' || data['alertaApiKey'] instanceof String)) {
            throw new Error("Expected the field `alertaApiKey` to be a primitive type in the JSON string but got " + data['alertaApiKey']);
        }
        // ensure the json data is a string
        if (data['alertaCorrelate'] && !(typeof data['alertaCorrelate'] === 'string' || data['alertaCorrelate'] instanceof String)) {
            throw new Error("Expected the field `alertaCorrelate` to be a primitive type in the JSON string but got " + data['alertaCorrelate']);
        }
        // ensure the json data is a string
        if (data['alertaEnvironment'] && !(typeof data['alertaEnvironment'] === 'string' || data['alertaEnvironment'] instanceof String)) {
            throw new Error("Expected the field `alertaEnvironment` to be a primitive type in the JSON string but got " + data['alertaEnvironment']);
        }
        // ensure the json data is a string
        if (data['alertaEvent'] && !(typeof data['alertaEvent'] === 'string' || data['alertaEvent'] instanceof String)) {
            throw new Error("Expected the field `alertaEvent` to be a primitive type in the JSON string but got " + data['alertaEvent']);
        }
        // ensure the json data is a string
        if (data['alertaGroup'] && !(typeof data['alertaGroup'] === 'string' || data['alertaGroup'] instanceof String)) {
            throw new Error("Expected the field `alertaGroup` to be a primitive type in the JSON string but got " + data['alertaGroup']);
        }
        // ensure the json data is a string
        if (data['alertaHost'] && !(typeof data['alertaHost'] === 'string' || data['alertaHost'] instanceof String)) {
            throw new Error("Expected the field `alertaHost` to be a primitive type in the JSON string but got " + data['alertaHost']);
        }
        // ensure the json data is a string
        if (data['alertaOrigin'] && !(typeof data['alertaOrigin'] === 'string' || data['alertaOrigin'] instanceof String)) {
            throw new Error("Expected the field `alertaOrigin` to be a primitive type in the JSON string but got " + data['alertaOrigin']);
        }
        // ensure the json data is a string
        if (data['alertaResource'] && !(typeof data['alertaResource'] === 'string' || data['alertaResource'] instanceof String)) {
            throw new Error("Expected the field `alertaResource` to be a primitive type in the JSON string but got " + data['alertaResource']);
        }
        // ensure the json data is a string
        if (data['alertaService'] && !(typeof data['alertaService'] === 'string' || data['alertaService'] instanceof String)) {
            throw new Error("Expected the field `alertaService` to be a primitive type in the JSON string but got " + data['alertaService']);
        }
        // ensure the json data is a string
        if (data['alertaSeverity'] && !(typeof data['alertaSeverity'] === 'string' || data['alertaSeverity'] instanceof String)) {
            throw new Error("Expected the field `alertaSeverity` to be a primitive type in the JSON string but got " + data['alertaSeverity']);
        }
        // ensure the json data is a string
        if (data['alertaStatus'] && !(typeof data['alertaStatus'] === 'string' || data['alertaStatus'] instanceof String)) {
            throw new Error("Expected the field `alertaStatus` to be a primitive type in the JSON string but got " + data['alertaStatus']);
        }
        // ensure the json data is a string
        if (data['alertaTags'] && !(typeof data['alertaTags'] === 'string' || data['alertaTags'] instanceof String)) {
            throw new Error("Expected the field `alertaTags` to be a primitive type in the JSON string but got " + data['alertaTags']);
        }
        // ensure the json data is a string
        if (data['alertaType'] && !(typeof data['alertaType'] === 'string' || data['alertaType'] instanceof String)) {
            throw new Error("Expected the field `alertaType` to be a primitive type in the JSON string but got " + data['alertaType']);
        }
        // ensure the json data is a string
        if (data['dataSegmentCode'] && !(typeof data['dataSegmentCode'] === 'string' || data['dataSegmentCode'] instanceof String)) {
            throw new Error("Expected the field `dataSegmentCode` to be a primitive type in the JSON string but got " + data['dataSegmentCode']);
        }
        // ensure the json data is a string
        if (data['partition'] && !(typeof data['partition'] === 'string' || data['partition'] instanceof String)) {
            throw new Error("Expected the field `partition` to be a primitive type in the JSON string but got " + data['partition']);
        }
        // ensure the json data is a string
        if (data['transportName'] && !(typeof data['transportName'] === 'string' || data['transportName'] instanceof String)) {
            throw new Error("Expected the field `transportName` to be a primitive type in the JSON string but got " + data['transportName']);
        }

        return true;
    }


}

TransportAlertaJsonldPost.RequiredProperties = ["alertaApiKey", "alertaEvent", "alertaHost", "alertaResource", "partition", "transportName"];

/**
 * The API key for the Alerta service.
 * @member {String} alertaApiKey
 */
TransportAlertaJsonldPost.prototype['alertaApiKey'] = undefined;

/**
 * The comma-separated list of related event names for the Alerta service.
 * @member {String} alertaCorrelate
 */
TransportAlertaJsonldPost.prototype['alertaCorrelate'] = undefined;

/**
 * The environment value for the Alerta service.
 * @member {String} alertaEnvironment
 */
TransportAlertaJsonldPost.prototype['alertaEnvironment'] = undefined;

/**
 * The event value for the Alerta service.
 * @member {String} alertaEvent
 */
TransportAlertaJsonldPost.prototype['alertaEvent'] = undefined;

/**
 * The group value for the Alerta service.
 * @member {String} alertaGroup
 */
TransportAlertaJsonldPost.prototype['alertaGroup'] = undefined;

/**
 * The host name for the Alerta service (omit the \"https://\" part).
 * @member {String} alertaHost
 */
TransportAlertaJsonldPost.prototype['alertaHost'] = undefined;

/**
 * The origin value for the Alerta service.
 * @member {String} alertaOrigin
 */
TransportAlertaJsonldPost.prototype['alertaOrigin'] = undefined;

/**
 * The resource value for the Alerta service.
 * @member {String} alertaResource
 */
TransportAlertaJsonldPost.prototype['alertaResource'] = undefined;

/**
 * The comma-separated list of affected services for the Alerta service.
 * @member {String} alertaService
 */
TransportAlertaJsonldPost.prototype['alertaService'] = undefined;

/**
 * The severity value for the Alerta service.
 * @member {String} alertaSeverity
 */
TransportAlertaJsonldPost.prototype['alertaSeverity'] = undefined;

/**
 * The status value for the Alerta service.
 * @member {String} alertaStatus
 */
TransportAlertaJsonldPost.prototype['alertaStatus'] = undefined;

/**
 * The comma-separated list of tags for the Alerta service.
 * @member {String} alertaTags
 */
TransportAlertaJsonldPost.prototype['alertaTags'] = undefined;

/**
 * The type value for the Alerta service.
 * @member {String} alertaType
 */
TransportAlertaJsonldPost.prototype['alertaType'] = undefined;

/**
 * User-provided string on which to segment and filter data. Max 50 characters.
 * @member {String} dataSegmentCode
 */
TransportAlertaJsonldPost.prototype['dataSegmentCode'] = undefined;

/**
 * The partition that contains this resource instance. The resource cannot be moved to another partition.
 * @member {String} partition
 */
TransportAlertaJsonldPost.prototype['partition'] = undefined;

/**
 * The name of the transport.
 * @member {String} transportName
 */
TransportAlertaJsonldPost.prototype['transportName'] = undefined;






export default TransportAlertaJsonldPost;

