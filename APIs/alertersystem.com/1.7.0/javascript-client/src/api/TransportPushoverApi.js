/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiTransportPushoverGetCollection200Response from '../model/ApiTransportPushoverGetCollection200Response';
import TransportPushoverGet from '../model/TransportPushoverGet';
import TransportPushoverJsonldGet from '../model/TransportPushoverJsonldGet';
import TransportPushoverJsonldPost from '../model/TransportPushoverJsonldPost';
import TransportPushoverJsonldPut from '../model/TransportPushoverJsonldPut';
import TransportPushoverPatch from '../model/TransportPushoverPatch';
import TransportPushoverPost from '../model/TransportPushoverPost';
import TransportPushoverPut from '../model/TransportPushoverPut';

/**
* TransportPushover service.
* @module api/TransportPushoverApi
* @version 1.7.0
*/
export default class TransportPushoverApi {

    /**
    * Constructs a new TransportPushoverApi. 
    * @alias module:api/TransportPushoverApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiTransportPushoverGetCollection operation.
     * @callback module:api/TransportPushoverApi~apiTransportPushoverGetCollectionCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TransportPushoverGet>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the collection of TransportPushover resources.
     * Retrieves the collection of TransportPushover resources.
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 1)] The collection page number
     * @param {String} [dataSegmentCode] 
     * @param {Array.<String>} [dataSegmentCode2] 
     * @param {String} [partition] 
     * @param {Array.<String>} [partition2] 
     * @param {Array.<String>} [properties] Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}
     * @param {module:api/TransportPushoverApi~apiTransportPushoverGetCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TransportPushoverGet>}
     */
    apiTransportPushoverGetCollection(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'dataSegmentCode': opts['dataSegmentCode'],
        'dataSegmentCode[]': this.apiClient.buildCollectionParam(opts['dataSegmentCode2'], 'multi'),
        'partition': opts['partition'],
        'partition[]': this.apiClient.buildCollectionParam(opts['partition2'], 'multi'),
        'properties[]': this.apiClient.buildCollectionParam(opts['properties'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = [TransportPushoverGet];
      return this.apiClient.callApi(
        '/api/transport-pushover', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportPushoverIdDelete operation.
     * @callback module:api/TransportPushoverApi~apiTransportPushoverIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes the TransportPushover resource.
     * Removes the TransportPushover resource.
     * @param {String} id TransportPushover identifier
     * @param {module:api/TransportPushoverApi~apiTransportPushoverIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiTransportPushoverIdDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportPushoverIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/transport-pushover/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportPushoverIdGet operation.
     * @callback module:api/TransportPushoverApi~apiTransportPushoverIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportPushoverGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a TransportPushover resource.
     * Retrieves a TransportPushover resource.
     * @param {String} id TransportPushover identifier
     * @param {module:api/TransportPushoverApi~apiTransportPushoverIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportPushoverGet}
     */
    apiTransportPushoverIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportPushoverIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportPushoverGet;
      return this.apiClient.callApi(
        '/api/transport-pushover/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportPushoverIdPatch operation.
     * @callback module:api/TransportPushoverApi~apiTransportPushoverIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportPushoverGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the TransportPushover resource.
     * Updates the TransportPushover resource.
     * @param {String} id TransportPushover identifier
     * @param {module:model/TransportPushoverPatch} transportPushoverPatch The updated TransportPushover resource
     * @param {module:api/TransportPushoverApi~apiTransportPushoverIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportPushoverGet}
     */
    apiTransportPushoverIdPatch(id, transportPushoverPatch, callback) {
      let postBody = transportPushoverPatch;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportPushoverIdPatch");
      }
      // verify the required parameter 'transportPushoverPatch' is set
      if (transportPushoverPatch === undefined || transportPushoverPatch === null) {
        throw new Error("Missing the required parameter 'transportPushoverPatch' when calling apiTransportPushoverIdPatch");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/merge-patch+json'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportPushoverGet;
      return this.apiClient.callApi(
        '/api/transport-pushover/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportPushoverIdPut operation.
     * @callback module:api/TransportPushoverApi~apiTransportPushoverIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportPushoverGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Replaces the TransportPushover resource.
     * Replaces the TransportPushover resource.
     * @param {String} id TransportPushover identifier
     * @param {module:model/TransportPushoverPut} transportPushoverPut The updated TransportPushover resource
     * @param {module:api/TransportPushoverApi~apiTransportPushoverIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportPushoverGet}
     */
    apiTransportPushoverIdPut(id, transportPushoverPut, callback) {
      let postBody = transportPushoverPut;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportPushoverIdPut");
      }
      // verify the required parameter 'transportPushoverPut' is set
      if (transportPushoverPut === undefined || transportPushoverPut === null) {
        throw new Error("Missing the required parameter 'transportPushoverPut' when calling apiTransportPushoverIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportPushoverGet;
      return this.apiClient.callApi(
        '/api/transport-pushover/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportPushoverPost operation.
     * @callback module:api/TransportPushoverApi~apiTransportPushoverPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportPushoverGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a TransportPushover resource.
     * Creates a TransportPushover resource.
     * @param {module:model/TransportPushoverPost} transportPushoverPost The new TransportPushover resource
     * @param {module:api/TransportPushoverApi~apiTransportPushoverPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportPushoverGet}
     */
    apiTransportPushoverPost(transportPushoverPost, callback) {
      let postBody = transportPushoverPost;
      // verify the required parameter 'transportPushoverPost' is set
      if (transportPushoverPost === undefined || transportPushoverPost === null) {
        throw new Error("Missing the required parameter 'transportPushoverPost' when calling apiTransportPushoverPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportPushoverGet;
      return this.apiClient.callApi(
        '/api/transport-pushover', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
