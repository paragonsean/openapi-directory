/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiTransportSpotHitGetCollection200Response from '../model/ApiTransportSpotHitGetCollection200Response';
import TransportSpotHitGet from '../model/TransportSpotHitGet';
import TransportSpotHitJsonldGet from '../model/TransportSpotHitJsonldGet';
import TransportSpotHitJsonldPost from '../model/TransportSpotHitJsonldPost';
import TransportSpotHitJsonldPut from '../model/TransportSpotHitJsonldPut';
import TransportSpotHitPatch from '../model/TransportSpotHitPatch';
import TransportSpotHitPost from '../model/TransportSpotHitPost';
import TransportSpotHitPut from '../model/TransportSpotHitPut';

/**
* TransportSpotHit service.
* @module api/TransportSpotHitApi
* @version 1.7.0
*/
export default class TransportSpotHitApi {

    /**
    * Constructs a new TransportSpotHitApi. 
    * @alias module:api/TransportSpotHitApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiTransportSpotHitGetCollection operation.
     * @callback module:api/TransportSpotHitApi~apiTransportSpotHitGetCollectionCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TransportSpotHitGet>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the collection of TransportSpotHit resources.
     * Retrieves the collection of TransportSpotHit resources.
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 1)] The collection page number
     * @param {String} [dataSegmentCode] 
     * @param {Array.<String>} [dataSegmentCode2] 
     * @param {String} [partition] 
     * @param {Array.<String>} [partition2] 
     * @param {Array.<String>} [properties] Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}
     * @param {module:api/TransportSpotHitApi~apiTransportSpotHitGetCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TransportSpotHitGet>}
     */
    apiTransportSpotHitGetCollection(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'dataSegmentCode': opts['dataSegmentCode'],
        'dataSegmentCode[]': this.apiClient.buildCollectionParam(opts['dataSegmentCode2'], 'multi'),
        'partition': opts['partition'],
        'partition[]': this.apiClient.buildCollectionParam(opts['partition2'], 'multi'),
        'properties[]': this.apiClient.buildCollectionParam(opts['properties'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = [TransportSpotHitGet];
      return this.apiClient.callApi(
        '/api/transport-spot-hit', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportSpotHitIdDelete operation.
     * @callback module:api/TransportSpotHitApi~apiTransportSpotHitIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes the TransportSpotHit resource.
     * Removes the TransportSpotHit resource.
     * @param {String} id TransportSpotHit identifier
     * @param {module:api/TransportSpotHitApi~apiTransportSpotHitIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiTransportSpotHitIdDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportSpotHitIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/transport-spot-hit/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportSpotHitIdGet operation.
     * @callback module:api/TransportSpotHitApi~apiTransportSpotHitIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportSpotHitGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a TransportSpotHit resource.
     * Retrieves a TransportSpotHit resource.
     * @param {String} id TransportSpotHit identifier
     * @param {module:api/TransportSpotHitApi~apiTransportSpotHitIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportSpotHitGet}
     */
    apiTransportSpotHitIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportSpotHitIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportSpotHitGet;
      return this.apiClient.callApi(
        '/api/transport-spot-hit/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportSpotHitIdPatch operation.
     * @callback module:api/TransportSpotHitApi~apiTransportSpotHitIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportSpotHitGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the TransportSpotHit resource.
     * Updates the TransportSpotHit resource.
     * @param {String} id TransportSpotHit identifier
     * @param {module:model/TransportSpotHitPatch} transportSpotHitPatch The updated TransportSpotHit resource
     * @param {module:api/TransportSpotHitApi~apiTransportSpotHitIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportSpotHitGet}
     */
    apiTransportSpotHitIdPatch(id, transportSpotHitPatch, callback) {
      let postBody = transportSpotHitPatch;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportSpotHitIdPatch");
      }
      // verify the required parameter 'transportSpotHitPatch' is set
      if (transportSpotHitPatch === undefined || transportSpotHitPatch === null) {
        throw new Error("Missing the required parameter 'transportSpotHitPatch' when calling apiTransportSpotHitIdPatch");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/merge-patch+json'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportSpotHitGet;
      return this.apiClient.callApi(
        '/api/transport-spot-hit/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportSpotHitIdPut operation.
     * @callback module:api/TransportSpotHitApi~apiTransportSpotHitIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportSpotHitGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Replaces the TransportSpotHit resource.
     * Replaces the TransportSpotHit resource.
     * @param {String} id TransportSpotHit identifier
     * @param {module:model/TransportSpotHitPut} transportSpotHitPut The updated TransportSpotHit resource
     * @param {module:api/TransportSpotHitApi~apiTransportSpotHitIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportSpotHitGet}
     */
    apiTransportSpotHitIdPut(id, transportSpotHitPut, callback) {
      let postBody = transportSpotHitPut;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportSpotHitIdPut");
      }
      // verify the required parameter 'transportSpotHitPut' is set
      if (transportSpotHitPut === undefined || transportSpotHitPut === null) {
        throw new Error("Missing the required parameter 'transportSpotHitPut' when calling apiTransportSpotHitIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportSpotHitGet;
      return this.apiClient.callApi(
        '/api/transport-spot-hit/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportSpotHitPost operation.
     * @callback module:api/TransportSpotHitApi~apiTransportSpotHitPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportSpotHitGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a TransportSpotHit resource.
     * Creates a TransportSpotHit resource.
     * @param {module:model/TransportSpotHitPost} transportSpotHitPost The new TransportSpotHit resource
     * @param {module:api/TransportSpotHitApi~apiTransportSpotHitPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportSpotHitGet}
     */
    apiTransportSpotHitPost(transportSpotHitPost, callback) {
      let postBody = transportSpotHitPost;
      // verify the required parameter 'transportSpotHitPost' is set
      if (transportSpotHitPost === undefined || transportSpotHitPost === null) {
        throw new Error("Missing the required parameter 'transportSpotHitPost' when calling apiTransportSpotHitPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportSpotHitGet;
      return this.apiClient.callApi(
        '/api/transport-spot-hit', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
