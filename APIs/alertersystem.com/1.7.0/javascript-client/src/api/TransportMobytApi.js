/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiTransportMobytGetCollection200Response from '../model/ApiTransportMobytGetCollection200Response';
import TransportMobytGet from '../model/TransportMobytGet';
import TransportMobytJsonldGet from '../model/TransportMobytJsonldGet';
import TransportMobytJsonldPost from '../model/TransportMobytJsonldPost';
import TransportMobytJsonldPut from '../model/TransportMobytJsonldPut';
import TransportMobytPatch from '../model/TransportMobytPatch';
import TransportMobytPost from '../model/TransportMobytPost';
import TransportMobytPut from '../model/TransportMobytPut';

/**
* TransportMobyt service.
* @module api/TransportMobytApi
* @version 1.7.0
*/
export default class TransportMobytApi {

    /**
    * Constructs a new TransportMobytApi. 
    * @alias module:api/TransportMobytApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiTransportMobytGetCollection operation.
     * @callback module:api/TransportMobytApi~apiTransportMobytGetCollectionCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TransportMobytGet>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the collection of TransportMobyt resources.
     * Retrieves the collection of TransportMobyt resources.
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 1)] The collection page number
     * @param {String} [dataSegmentCode] 
     * @param {Array.<String>} [dataSegmentCode2] 
     * @param {String} [partition] 
     * @param {Array.<String>} [partition2] 
     * @param {Array.<String>} [properties] Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}
     * @param {module:api/TransportMobytApi~apiTransportMobytGetCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TransportMobytGet>}
     */
    apiTransportMobytGetCollection(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'dataSegmentCode': opts['dataSegmentCode'],
        'dataSegmentCode[]': this.apiClient.buildCollectionParam(opts['dataSegmentCode2'], 'multi'),
        'partition': opts['partition'],
        'partition[]': this.apiClient.buildCollectionParam(opts['partition2'], 'multi'),
        'properties[]': this.apiClient.buildCollectionParam(opts['properties'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = [TransportMobytGet];
      return this.apiClient.callApi(
        '/api/transport-mobyt', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportMobytIdDelete operation.
     * @callback module:api/TransportMobytApi~apiTransportMobytIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes the TransportMobyt resource.
     * Removes the TransportMobyt resource.
     * @param {String} id TransportMobyt identifier
     * @param {module:api/TransportMobytApi~apiTransportMobytIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiTransportMobytIdDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportMobytIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/transport-mobyt/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportMobytIdGet operation.
     * @callback module:api/TransportMobytApi~apiTransportMobytIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportMobytGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a TransportMobyt resource.
     * Retrieves a TransportMobyt resource.
     * @param {String} id TransportMobyt identifier
     * @param {module:api/TransportMobytApi~apiTransportMobytIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportMobytGet}
     */
    apiTransportMobytIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportMobytIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportMobytGet;
      return this.apiClient.callApi(
        '/api/transport-mobyt/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportMobytIdPatch operation.
     * @callback module:api/TransportMobytApi~apiTransportMobytIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportMobytGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the TransportMobyt resource.
     * Updates the TransportMobyt resource.
     * @param {String} id TransportMobyt identifier
     * @param {module:model/TransportMobytPatch} transportMobytPatch The updated TransportMobyt resource
     * @param {module:api/TransportMobytApi~apiTransportMobytIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportMobytGet}
     */
    apiTransportMobytIdPatch(id, transportMobytPatch, callback) {
      let postBody = transportMobytPatch;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportMobytIdPatch");
      }
      // verify the required parameter 'transportMobytPatch' is set
      if (transportMobytPatch === undefined || transportMobytPatch === null) {
        throw new Error("Missing the required parameter 'transportMobytPatch' when calling apiTransportMobytIdPatch");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/merge-patch+json'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportMobytGet;
      return this.apiClient.callApi(
        '/api/transport-mobyt/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportMobytIdPut operation.
     * @callback module:api/TransportMobytApi~apiTransportMobytIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportMobytGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Replaces the TransportMobyt resource.
     * Replaces the TransportMobyt resource.
     * @param {String} id TransportMobyt identifier
     * @param {module:model/TransportMobytPut} transportMobytPut The updated TransportMobyt resource
     * @param {module:api/TransportMobytApi~apiTransportMobytIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportMobytGet}
     */
    apiTransportMobytIdPut(id, transportMobytPut, callback) {
      let postBody = transportMobytPut;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportMobytIdPut");
      }
      // verify the required parameter 'transportMobytPut' is set
      if (transportMobytPut === undefined || transportMobytPut === null) {
        throw new Error("Missing the required parameter 'transportMobytPut' when calling apiTransportMobytIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportMobytGet;
      return this.apiClient.callApi(
        '/api/transport-mobyt/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportMobytPost operation.
     * @callback module:api/TransportMobytApi~apiTransportMobytPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportMobytGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a TransportMobyt resource.
     * Creates a TransportMobyt resource.
     * @param {module:model/TransportMobytPost} transportMobytPost The new TransportMobyt resource
     * @param {module:api/TransportMobytApi~apiTransportMobytPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportMobytGet}
     */
    apiTransportMobytPost(transportMobytPost, callback) {
      let postBody = transportMobytPost;
      // verify the required parameter 'transportMobytPost' is set
      if (transportMobytPost === undefined || transportMobytPost === null) {
        throw new Error("Missing the required parameter 'transportMobytPost' when calling apiTransportMobytPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportMobytGet;
      return this.apiClient.callApi(
        '/api/transport-mobyt', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
