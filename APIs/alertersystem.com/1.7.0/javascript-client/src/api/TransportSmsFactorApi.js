/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiTransportSmsFactorGetCollection200Response from '../model/ApiTransportSmsFactorGetCollection200Response';
import TransportSmsFactorGet from '../model/TransportSmsFactorGet';
import TransportSmsFactorJsonldGet from '../model/TransportSmsFactorJsonldGet';
import TransportSmsFactorJsonldPost from '../model/TransportSmsFactorJsonldPost';
import TransportSmsFactorJsonldPut from '../model/TransportSmsFactorJsonldPut';
import TransportSmsFactorPatch from '../model/TransportSmsFactorPatch';
import TransportSmsFactorPost from '../model/TransportSmsFactorPost';
import TransportSmsFactorPut from '../model/TransportSmsFactorPut';

/**
* TransportSmsFactor service.
* @module api/TransportSmsFactorApi
* @version 1.7.0
*/
export default class TransportSmsFactorApi {

    /**
    * Constructs a new TransportSmsFactorApi. 
    * @alias module:api/TransportSmsFactorApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiTransportSmsFactorGetCollection operation.
     * @callback module:api/TransportSmsFactorApi~apiTransportSmsFactorGetCollectionCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TransportSmsFactorGet>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the collection of TransportSmsFactor resources.
     * Retrieves the collection of TransportSmsFactor resources.
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 1)] The collection page number
     * @param {String} [dataSegmentCode] 
     * @param {Array.<String>} [dataSegmentCode2] 
     * @param {String} [partition] 
     * @param {Array.<String>} [partition2] 
     * @param {Array.<String>} [properties] Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}
     * @param {module:api/TransportSmsFactorApi~apiTransportSmsFactorGetCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TransportSmsFactorGet>}
     */
    apiTransportSmsFactorGetCollection(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'dataSegmentCode': opts['dataSegmentCode'],
        'dataSegmentCode[]': this.apiClient.buildCollectionParam(opts['dataSegmentCode2'], 'multi'),
        'partition': opts['partition'],
        'partition[]': this.apiClient.buildCollectionParam(opts['partition2'], 'multi'),
        'properties[]': this.apiClient.buildCollectionParam(opts['properties'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = [TransportSmsFactorGet];
      return this.apiClient.callApi(
        '/api/transport-sms-factor', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportSmsFactorIdDelete operation.
     * @callback module:api/TransportSmsFactorApi~apiTransportSmsFactorIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes the TransportSmsFactor resource.
     * Removes the TransportSmsFactor resource.
     * @param {String} id TransportSmsFactor identifier
     * @param {module:api/TransportSmsFactorApi~apiTransportSmsFactorIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiTransportSmsFactorIdDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportSmsFactorIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/transport-sms-factor/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportSmsFactorIdGet operation.
     * @callback module:api/TransportSmsFactorApi~apiTransportSmsFactorIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportSmsFactorGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a TransportSmsFactor resource.
     * Retrieves a TransportSmsFactor resource.
     * @param {String} id TransportSmsFactor identifier
     * @param {module:api/TransportSmsFactorApi~apiTransportSmsFactorIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportSmsFactorGet}
     */
    apiTransportSmsFactorIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportSmsFactorIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportSmsFactorGet;
      return this.apiClient.callApi(
        '/api/transport-sms-factor/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportSmsFactorIdPatch operation.
     * @callback module:api/TransportSmsFactorApi~apiTransportSmsFactorIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportSmsFactorGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the TransportSmsFactor resource.
     * Updates the TransportSmsFactor resource.
     * @param {String} id TransportSmsFactor identifier
     * @param {module:model/TransportSmsFactorPatch} transportSmsFactorPatch The updated TransportSmsFactor resource
     * @param {module:api/TransportSmsFactorApi~apiTransportSmsFactorIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportSmsFactorGet}
     */
    apiTransportSmsFactorIdPatch(id, transportSmsFactorPatch, callback) {
      let postBody = transportSmsFactorPatch;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportSmsFactorIdPatch");
      }
      // verify the required parameter 'transportSmsFactorPatch' is set
      if (transportSmsFactorPatch === undefined || transportSmsFactorPatch === null) {
        throw new Error("Missing the required parameter 'transportSmsFactorPatch' when calling apiTransportSmsFactorIdPatch");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/merge-patch+json'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportSmsFactorGet;
      return this.apiClient.callApi(
        '/api/transport-sms-factor/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportSmsFactorIdPut operation.
     * @callback module:api/TransportSmsFactorApi~apiTransportSmsFactorIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportSmsFactorGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Replaces the TransportSmsFactor resource.
     * Replaces the TransportSmsFactor resource.
     * @param {String} id TransportSmsFactor identifier
     * @param {module:model/TransportSmsFactorPut} transportSmsFactorPut The updated TransportSmsFactor resource
     * @param {module:api/TransportSmsFactorApi~apiTransportSmsFactorIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportSmsFactorGet}
     */
    apiTransportSmsFactorIdPut(id, transportSmsFactorPut, callback) {
      let postBody = transportSmsFactorPut;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportSmsFactorIdPut");
      }
      // verify the required parameter 'transportSmsFactorPut' is set
      if (transportSmsFactorPut === undefined || transportSmsFactorPut === null) {
        throw new Error("Missing the required parameter 'transportSmsFactorPut' when calling apiTransportSmsFactorIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportSmsFactorGet;
      return this.apiClient.callApi(
        '/api/transport-sms-factor/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportSmsFactorPost operation.
     * @callback module:api/TransportSmsFactorApi~apiTransportSmsFactorPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportSmsFactorGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a TransportSmsFactor resource.
     * Creates a TransportSmsFactor resource.
     * @param {module:model/TransportSmsFactorPost} transportSmsFactorPost The new TransportSmsFactor resource
     * @param {module:api/TransportSmsFactorApi~apiTransportSmsFactorPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportSmsFactorGet}
     */
    apiTransportSmsFactorPost(transportSmsFactorPost, callback) {
      let postBody = transportSmsFactorPost;
      // verify the required parameter 'transportSmsFactorPost' is set
      if (transportSmsFactorPost === undefined || transportSmsFactorPost === null) {
        throw new Error("Missing the required parameter 'transportSmsFactorPost' when calling apiTransportSmsFactorPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportSmsFactorGet;
      return this.apiClient.callApi(
        '/api/transport-sms-factor', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
