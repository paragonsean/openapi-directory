/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiTransportZulipGetCollection200Response from '../model/ApiTransportZulipGetCollection200Response';
import TransportZulipGet from '../model/TransportZulipGet';
import TransportZulipJsonldGet from '../model/TransportZulipJsonldGet';
import TransportZulipJsonldPost from '../model/TransportZulipJsonldPost';
import TransportZulipJsonldPut from '../model/TransportZulipJsonldPut';
import TransportZulipPatch from '../model/TransportZulipPatch';
import TransportZulipPost from '../model/TransportZulipPost';
import TransportZulipPut from '../model/TransportZulipPut';

/**
* TransportZulip service.
* @module api/TransportZulipApi
* @version 1.7.0
*/
export default class TransportZulipApi {

    /**
    * Constructs a new TransportZulipApi. 
    * @alias module:api/TransportZulipApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiTransportZulipGetCollection operation.
     * @callback module:api/TransportZulipApi~apiTransportZulipGetCollectionCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TransportZulipGet>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the collection of TransportZulip resources.
     * Retrieves the collection of TransportZulip resources.
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 1)] The collection page number
     * @param {String} [dataSegmentCode] 
     * @param {Array.<String>} [dataSegmentCode2] 
     * @param {String} [partition] 
     * @param {Array.<String>} [partition2] 
     * @param {Array.<String>} [properties] Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}
     * @param {module:api/TransportZulipApi~apiTransportZulipGetCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TransportZulipGet>}
     */
    apiTransportZulipGetCollection(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'dataSegmentCode': opts['dataSegmentCode'],
        'dataSegmentCode[]': this.apiClient.buildCollectionParam(opts['dataSegmentCode2'], 'multi'),
        'partition': opts['partition'],
        'partition[]': this.apiClient.buildCollectionParam(opts['partition2'], 'multi'),
        'properties[]': this.apiClient.buildCollectionParam(opts['properties'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = [TransportZulipGet];
      return this.apiClient.callApi(
        '/api/transport-zulip', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportZulipIdDelete operation.
     * @callback module:api/TransportZulipApi~apiTransportZulipIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes the TransportZulip resource.
     * Removes the TransportZulip resource.
     * @param {String} id TransportZulip identifier
     * @param {module:api/TransportZulipApi~apiTransportZulipIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiTransportZulipIdDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportZulipIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/transport-zulip/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportZulipIdGet operation.
     * @callback module:api/TransportZulipApi~apiTransportZulipIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportZulipGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a TransportZulip resource.
     * Retrieves a TransportZulip resource.
     * @param {String} id TransportZulip identifier
     * @param {module:api/TransportZulipApi~apiTransportZulipIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportZulipGet}
     */
    apiTransportZulipIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportZulipIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportZulipGet;
      return this.apiClient.callApi(
        '/api/transport-zulip/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportZulipIdPatch operation.
     * @callback module:api/TransportZulipApi~apiTransportZulipIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportZulipGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the TransportZulip resource.
     * Updates the TransportZulip resource.
     * @param {String} id TransportZulip identifier
     * @param {module:model/TransportZulipPatch} transportZulipPatch The updated TransportZulip resource
     * @param {module:api/TransportZulipApi~apiTransportZulipIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportZulipGet}
     */
    apiTransportZulipIdPatch(id, transportZulipPatch, callback) {
      let postBody = transportZulipPatch;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportZulipIdPatch");
      }
      // verify the required parameter 'transportZulipPatch' is set
      if (transportZulipPatch === undefined || transportZulipPatch === null) {
        throw new Error("Missing the required parameter 'transportZulipPatch' when calling apiTransportZulipIdPatch");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/merge-patch+json'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportZulipGet;
      return this.apiClient.callApi(
        '/api/transport-zulip/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportZulipIdPut operation.
     * @callback module:api/TransportZulipApi~apiTransportZulipIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportZulipGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Replaces the TransportZulip resource.
     * Replaces the TransportZulip resource.
     * @param {String} id TransportZulip identifier
     * @param {module:model/TransportZulipPut} transportZulipPut The updated TransportZulip resource
     * @param {module:api/TransportZulipApi~apiTransportZulipIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportZulipGet}
     */
    apiTransportZulipIdPut(id, transportZulipPut, callback) {
      let postBody = transportZulipPut;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportZulipIdPut");
      }
      // verify the required parameter 'transportZulipPut' is set
      if (transportZulipPut === undefined || transportZulipPut === null) {
        throw new Error("Missing the required parameter 'transportZulipPut' when calling apiTransportZulipIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportZulipGet;
      return this.apiClient.callApi(
        '/api/transport-zulip/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportZulipPost operation.
     * @callback module:api/TransportZulipApi~apiTransportZulipPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportZulipGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a TransportZulip resource.
     * Creates a TransportZulip resource.
     * @param {module:model/TransportZulipPost} transportZulipPost The new TransportZulip resource
     * @param {module:api/TransportZulipApi~apiTransportZulipPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportZulipGet}
     */
    apiTransportZulipPost(transportZulipPost, callback) {
      let postBody = transportZulipPost;
      // verify the required parameter 'transportZulipPost' is set
      if (transportZulipPost === undefined || transportZulipPost === null) {
        throw new Error("Missing the required parameter 'transportZulipPost' when calling apiTransportZulipPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportZulipGet;
      return this.apiClient.callApi(
        '/api/transport-zulip', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
