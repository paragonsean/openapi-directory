/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiPartitionGetCollection200Response from '../model/ApiPartitionGetCollection200Response';
import PartitionGet from '../model/PartitionGet';
import PartitionJsonldGet from '../model/PartitionJsonldGet';
import PartitionJsonldPost from '../model/PartitionJsonldPost';
import PartitionJsonldPut from '../model/PartitionJsonldPut';
import PartitionPatch from '../model/PartitionPatch';
import PartitionPost from '../model/PartitionPost';
import PartitionPut from '../model/PartitionPut';

/**
* Partition service.
* @module api/PartitionApi
* @version 1.7.0
*/
export default class PartitionApi {

    /**
    * Constructs a new PartitionApi. 
    * @alias module:api/PartitionApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiPartitionGetCollection operation.
     * @callback module:api/PartitionApi~apiPartitionGetCollectionCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/PartitionGet>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the collection of Partition resources.
     * Retrieves the collection of Partition resources.
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 1)] The collection page number
     * @param {String} [dataSegmentCode] 
     * @param {Array.<String>} [dataSegmentCode2] 
     * @param {Array.<String>} [properties] Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}
     * @param {module:api/PartitionApi~apiPartitionGetCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/PartitionGet>}
     */
    apiPartitionGetCollection(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'dataSegmentCode': opts['dataSegmentCode'],
        'dataSegmentCode[]': this.apiClient.buildCollectionParam(opts['dataSegmentCode2'], 'multi'),
        'properties[]': this.apiClient.buildCollectionParam(opts['properties'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = [PartitionGet];
      return this.apiClient.callApi(
        '/api/partition', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPartitionIdDelete operation.
     * @callback module:api/PartitionApi~apiPartitionIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes the Partition resource.
     * Removes the Partition resource.
     * @param {String} id Partition identifier
     * @param {module:api/PartitionApi~apiPartitionIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiPartitionIdDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiPartitionIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/partition/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPartitionIdGet operation.
     * @callback module:api/PartitionApi~apiPartitionIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PartitionGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a Partition resource.
     * Retrieves a Partition resource.
     * @param {String} id Partition identifier
     * @param {module:api/PartitionApi~apiPartitionIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PartitionGet}
     */
    apiPartitionIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiPartitionIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = PartitionGet;
      return this.apiClient.callApi(
        '/api/partition/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPartitionIdPatch operation.
     * @callback module:api/PartitionApi~apiPartitionIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PartitionGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the Partition resource.
     * Updates the Partition resource.
     * @param {String} id Partition identifier
     * @param {module:model/PartitionPatch} partitionPatch The updated Partition resource
     * @param {module:api/PartitionApi~apiPartitionIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PartitionGet}
     */
    apiPartitionIdPatch(id, partitionPatch, callback) {
      let postBody = partitionPatch;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiPartitionIdPatch");
      }
      // verify the required parameter 'partitionPatch' is set
      if (partitionPatch === undefined || partitionPatch === null) {
        throw new Error("Missing the required parameter 'partitionPatch' when calling apiPartitionIdPatch");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/merge-patch+json'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = PartitionGet;
      return this.apiClient.callApi(
        '/api/partition/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPartitionIdPut operation.
     * @callback module:api/PartitionApi~apiPartitionIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PartitionGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Replaces the Partition resource.
     * Replaces the Partition resource.
     * @param {String} id Partition identifier
     * @param {module:model/PartitionPut} partitionPut The updated Partition resource
     * @param {module:api/PartitionApi~apiPartitionIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PartitionGet}
     */
    apiPartitionIdPut(id, partitionPut, callback) {
      let postBody = partitionPut;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiPartitionIdPut");
      }
      // verify the required parameter 'partitionPut' is set
      if (partitionPut === undefined || partitionPut === null) {
        throw new Error("Missing the required parameter 'partitionPut' when calling apiPartitionIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = PartitionGet;
      return this.apiClient.callApi(
        '/api/partition/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPartitionPost operation.
     * @callback module:api/PartitionApi~apiPartitionPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PartitionGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a Partition resource.
     * Creates a Partition resource.
     * @param {module:model/PartitionPost} partitionPost The new Partition resource
     * @param {module:api/PartitionApi~apiPartitionPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PartitionGet}
     */
    apiPartitionPost(partitionPost, callback) {
      let postBody = partitionPost;
      // verify the required parameter 'partitionPost' is set
      if (partitionPost === undefined || partitionPost === null) {
        throw new Error("Missing the required parameter 'partitionPost' when calling apiPartitionPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = PartitionGet;
      return this.apiClient.callApi(
        '/api/partition', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
