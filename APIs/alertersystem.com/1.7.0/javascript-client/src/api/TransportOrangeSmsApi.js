/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiTransportOrangeSmsGetCollection200Response from '../model/ApiTransportOrangeSmsGetCollection200Response';
import TransportOrangeSmsGet from '../model/TransportOrangeSmsGet';
import TransportOrangeSmsJsonldGet from '../model/TransportOrangeSmsJsonldGet';
import TransportOrangeSmsJsonldPost from '../model/TransportOrangeSmsJsonldPost';
import TransportOrangeSmsJsonldPut from '../model/TransportOrangeSmsJsonldPut';
import TransportOrangeSmsPatch from '../model/TransportOrangeSmsPatch';
import TransportOrangeSmsPost from '../model/TransportOrangeSmsPost';
import TransportOrangeSmsPut from '../model/TransportOrangeSmsPut';

/**
* TransportOrangeSms service.
* @module api/TransportOrangeSmsApi
* @version 1.7.0
*/
export default class TransportOrangeSmsApi {

    /**
    * Constructs a new TransportOrangeSmsApi. 
    * @alias module:api/TransportOrangeSmsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiTransportOrangeSmsGetCollection operation.
     * @callback module:api/TransportOrangeSmsApi~apiTransportOrangeSmsGetCollectionCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TransportOrangeSmsGet>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the collection of TransportOrangeSms resources.
     * Retrieves the collection of TransportOrangeSms resources.
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 1)] The collection page number
     * @param {String} [dataSegmentCode] 
     * @param {Array.<String>} [dataSegmentCode2] 
     * @param {String} [partition] 
     * @param {Array.<String>} [partition2] 
     * @param {Array.<String>} [properties] Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}
     * @param {module:api/TransportOrangeSmsApi~apiTransportOrangeSmsGetCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TransportOrangeSmsGet>}
     */
    apiTransportOrangeSmsGetCollection(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'dataSegmentCode': opts['dataSegmentCode'],
        'dataSegmentCode[]': this.apiClient.buildCollectionParam(opts['dataSegmentCode2'], 'multi'),
        'partition': opts['partition'],
        'partition[]': this.apiClient.buildCollectionParam(opts['partition2'], 'multi'),
        'properties[]': this.apiClient.buildCollectionParam(opts['properties'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = [TransportOrangeSmsGet];
      return this.apiClient.callApi(
        '/api/transport-orange-sms', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportOrangeSmsIdDelete operation.
     * @callback module:api/TransportOrangeSmsApi~apiTransportOrangeSmsIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes the TransportOrangeSms resource.
     * Removes the TransportOrangeSms resource.
     * @param {String} id TransportOrangeSms identifier
     * @param {module:api/TransportOrangeSmsApi~apiTransportOrangeSmsIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiTransportOrangeSmsIdDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportOrangeSmsIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/transport-orange-sms/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportOrangeSmsIdGet operation.
     * @callback module:api/TransportOrangeSmsApi~apiTransportOrangeSmsIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportOrangeSmsGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a TransportOrangeSms resource.
     * Retrieves a TransportOrangeSms resource.
     * @param {String} id TransportOrangeSms identifier
     * @param {module:api/TransportOrangeSmsApi~apiTransportOrangeSmsIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportOrangeSmsGet}
     */
    apiTransportOrangeSmsIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportOrangeSmsIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportOrangeSmsGet;
      return this.apiClient.callApi(
        '/api/transport-orange-sms/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportOrangeSmsIdPatch operation.
     * @callback module:api/TransportOrangeSmsApi~apiTransportOrangeSmsIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportOrangeSmsGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the TransportOrangeSms resource.
     * Updates the TransportOrangeSms resource.
     * @param {String} id TransportOrangeSms identifier
     * @param {module:model/TransportOrangeSmsPatch} transportOrangeSmsPatch The updated TransportOrangeSms resource
     * @param {module:api/TransportOrangeSmsApi~apiTransportOrangeSmsIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportOrangeSmsGet}
     */
    apiTransportOrangeSmsIdPatch(id, transportOrangeSmsPatch, callback) {
      let postBody = transportOrangeSmsPatch;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportOrangeSmsIdPatch");
      }
      // verify the required parameter 'transportOrangeSmsPatch' is set
      if (transportOrangeSmsPatch === undefined || transportOrangeSmsPatch === null) {
        throw new Error("Missing the required parameter 'transportOrangeSmsPatch' when calling apiTransportOrangeSmsIdPatch");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/merge-patch+json'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportOrangeSmsGet;
      return this.apiClient.callApi(
        '/api/transport-orange-sms/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportOrangeSmsIdPut operation.
     * @callback module:api/TransportOrangeSmsApi~apiTransportOrangeSmsIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportOrangeSmsGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Replaces the TransportOrangeSms resource.
     * Replaces the TransportOrangeSms resource.
     * @param {String} id TransportOrangeSms identifier
     * @param {module:model/TransportOrangeSmsPut} transportOrangeSmsPut The updated TransportOrangeSms resource
     * @param {module:api/TransportOrangeSmsApi~apiTransportOrangeSmsIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportOrangeSmsGet}
     */
    apiTransportOrangeSmsIdPut(id, transportOrangeSmsPut, callback) {
      let postBody = transportOrangeSmsPut;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportOrangeSmsIdPut");
      }
      // verify the required parameter 'transportOrangeSmsPut' is set
      if (transportOrangeSmsPut === undefined || transportOrangeSmsPut === null) {
        throw new Error("Missing the required parameter 'transportOrangeSmsPut' when calling apiTransportOrangeSmsIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportOrangeSmsGet;
      return this.apiClient.callApi(
        '/api/transport-orange-sms/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportOrangeSmsPost operation.
     * @callback module:api/TransportOrangeSmsApi~apiTransportOrangeSmsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportOrangeSmsGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a TransportOrangeSms resource.
     * Creates a TransportOrangeSms resource.
     * @param {module:model/TransportOrangeSmsPost} transportOrangeSmsPost The new TransportOrangeSms resource
     * @param {module:api/TransportOrangeSmsApi~apiTransportOrangeSmsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportOrangeSmsGet}
     */
    apiTransportOrangeSmsPost(transportOrangeSmsPost, callback) {
      let postBody = transportOrangeSmsPost;
      // verify the required parameter 'transportOrangeSmsPost' is set
      if (transportOrangeSmsPost === undefined || transportOrangeSmsPost === null) {
        throw new Error("Missing the required parameter 'transportOrangeSmsPost' when calling apiTransportOrangeSmsPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportOrangeSmsGet;
      return this.apiClient.callApi(
        '/api/transport-orange-sms', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
