/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiTransportSms77GetCollection200Response from '../model/ApiTransportSms77GetCollection200Response';
import TransportSms77Get from '../model/TransportSms77Get';
import TransportSms77JsonldGet from '../model/TransportSms77JsonldGet';
import TransportSms77JsonldPost from '../model/TransportSms77JsonldPost';
import TransportSms77JsonldPut from '../model/TransportSms77JsonldPut';
import TransportSms77Patch from '../model/TransportSms77Patch';
import TransportSms77Post from '../model/TransportSms77Post';
import TransportSms77Put from '../model/TransportSms77Put';

/**
* TransportSms77 service.
* @module api/TransportSms77Api
* @version 1.7.0
*/
export default class TransportSms77Api {

    /**
    * Constructs a new TransportSms77Api. 
    * @alias module:api/TransportSms77Api
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiTransportSms77GetCollection operation.
     * @callback module:api/TransportSms77Api~apiTransportSms77GetCollectionCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TransportSms77Get>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the collection of TransportSms77 resources.
     * Retrieves the collection of TransportSms77 resources.
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 1)] The collection page number
     * @param {String} [dataSegmentCode] 
     * @param {Array.<String>} [dataSegmentCode2] 
     * @param {String} [partition] 
     * @param {Array.<String>} [partition2] 
     * @param {Array.<String>} [properties] Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}
     * @param {module:api/TransportSms77Api~apiTransportSms77GetCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TransportSms77Get>}
     */
    apiTransportSms77GetCollection(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'dataSegmentCode': opts['dataSegmentCode'],
        'dataSegmentCode[]': this.apiClient.buildCollectionParam(opts['dataSegmentCode2'], 'multi'),
        'partition': opts['partition'],
        'partition[]': this.apiClient.buildCollectionParam(opts['partition2'], 'multi'),
        'properties[]': this.apiClient.buildCollectionParam(opts['properties'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = [TransportSms77Get];
      return this.apiClient.callApi(
        '/api/transport-sms77', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportSms77IdDelete operation.
     * @callback module:api/TransportSms77Api~apiTransportSms77IdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes the TransportSms77 resource.
     * Removes the TransportSms77 resource.
     * @param {String} id TransportSms77 identifier
     * @param {module:api/TransportSms77Api~apiTransportSms77IdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiTransportSms77IdDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportSms77IdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/transport-sms77/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportSms77IdGet operation.
     * @callback module:api/TransportSms77Api~apiTransportSms77IdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportSms77Get} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a TransportSms77 resource.
     * Retrieves a TransportSms77 resource.
     * @param {String} id TransportSms77 identifier
     * @param {module:api/TransportSms77Api~apiTransportSms77IdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportSms77Get}
     */
    apiTransportSms77IdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportSms77IdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportSms77Get;
      return this.apiClient.callApi(
        '/api/transport-sms77/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportSms77IdPatch operation.
     * @callback module:api/TransportSms77Api~apiTransportSms77IdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportSms77Get} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the TransportSms77 resource.
     * Updates the TransportSms77 resource.
     * @param {String} id TransportSms77 identifier
     * @param {module:model/TransportSms77Patch} transportSms77Patch The updated TransportSms77 resource
     * @param {module:api/TransportSms77Api~apiTransportSms77IdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportSms77Get}
     */
    apiTransportSms77IdPatch(id, transportSms77Patch, callback) {
      let postBody = transportSms77Patch;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportSms77IdPatch");
      }
      // verify the required parameter 'transportSms77Patch' is set
      if (transportSms77Patch === undefined || transportSms77Patch === null) {
        throw new Error("Missing the required parameter 'transportSms77Patch' when calling apiTransportSms77IdPatch");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/merge-patch+json'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportSms77Get;
      return this.apiClient.callApi(
        '/api/transport-sms77/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportSms77IdPut operation.
     * @callback module:api/TransportSms77Api~apiTransportSms77IdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportSms77Get} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Replaces the TransportSms77 resource.
     * Replaces the TransportSms77 resource.
     * @param {String} id TransportSms77 identifier
     * @param {module:model/TransportSms77Put} transportSms77Put The updated TransportSms77 resource
     * @param {module:api/TransportSms77Api~apiTransportSms77IdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportSms77Get}
     */
    apiTransportSms77IdPut(id, transportSms77Put, callback) {
      let postBody = transportSms77Put;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportSms77IdPut");
      }
      // verify the required parameter 'transportSms77Put' is set
      if (transportSms77Put === undefined || transportSms77Put === null) {
        throw new Error("Missing the required parameter 'transportSms77Put' when calling apiTransportSms77IdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportSms77Get;
      return this.apiClient.callApi(
        '/api/transport-sms77/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportSms77Post operation.
     * @callback module:api/TransportSms77Api~apiTransportSms77PostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportSms77Get} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a TransportSms77 resource.
     * Creates a TransportSms77 resource.
     * @param {module:model/TransportSms77Post} transportSms77Post The new TransportSms77 resource
     * @param {module:api/TransportSms77Api~apiTransportSms77PostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportSms77Get}
     */
    apiTransportSms77Post(transportSms77Post, callback) {
      let postBody = transportSms77Post;
      // verify the required parameter 'transportSms77Post' is set
      if (transportSms77Post === undefined || transportSms77Post === null) {
        throw new Error("Missing the required parameter 'transportSms77Post' when calling apiTransportSms77Post");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportSms77Get;
      return this.apiClient.callApi(
        '/api/transport-sms77', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
