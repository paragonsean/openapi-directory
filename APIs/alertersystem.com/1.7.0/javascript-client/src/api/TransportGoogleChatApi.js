/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiTransportGoogleChatGetCollection200Response from '../model/ApiTransportGoogleChatGetCollection200Response';
import TransportGoogleChatGet from '../model/TransportGoogleChatGet';
import TransportGoogleChatJsonldGet from '../model/TransportGoogleChatJsonldGet';
import TransportGoogleChatJsonldPost from '../model/TransportGoogleChatJsonldPost';
import TransportGoogleChatJsonldPut from '../model/TransportGoogleChatJsonldPut';
import TransportGoogleChatPatch from '../model/TransportGoogleChatPatch';
import TransportGoogleChatPost from '../model/TransportGoogleChatPost';
import TransportGoogleChatPut from '../model/TransportGoogleChatPut';

/**
* TransportGoogleChat service.
* @module api/TransportGoogleChatApi
* @version 1.7.0
*/
export default class TransportGoogleChatApi {

    /**
    * Constructs a new TransportGoogleChatApi. 
    * @alias module:api/TransportGoogleChatApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiTransportGoogleChatGetCollection operation.
     * @callback module:api/TransportGoogleChatApi~apiTransportGoogleChatGetCollectionCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TransportGoogleChatGet>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the collection of TransportGoogleChat resources.
     * Retrieves the collection of TransportGoogleChat resources.
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 1)] The collection page number
     * @param {String} [dataSegmentCode] 
     * @param {Array.<String>} [dataSegmentCode2] 
     * @param {String} [partition] 
     * @param {Array.<String>} [partition2] 
     * @param {Array.<String>} [properties] Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}
     * @param {module:api/TransportGoogleChatApi~apiTransportGoogleChatGetCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TransportGoogleChatGet>}
     */
    apiTransportGoogleChatGetCollection(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'dataSegmentCode': opts['dataSegmentCode'],
        'dataSegmentCode[]': this.apiClient.buildCollectionParam(opts['dataSegmentCode2'], 'multi'),
        'partition': opts['partition'],
        'partition[]': this.apiClient.buildCollectionParam(opts['partition2'], 'multi'),
        'properties[]': this.apiClient.buildCollectionParam(opts['properties'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = [TransportGoogleChatGet];
      return this.apiClient.callApi(
        '/api/transport-google-chat', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportGoogleChatIdDelete operation.
     * @callback module:api/TransportGoogleChatApi~apiTransportGoogleChatIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes the TransportGoogleChat resource.
     * Removes the TransportGoogleChat resource.
     * @param {String} id TransportGoogleChat identifier
     * @param {module:api/TransportGoogleChatApi~apiTransportGoogleChatIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiTransportGoogleChatIdDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportGoogleChatIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/transport-google-chat/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportGoogleChatIdGet operation.
     * @callback module:api/TransportGoogleChatApi~apiTransportGoogleChatIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportGoogleChatGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a TransportGoogleChat resource.
     * Retrieves a TransportGoogleChat resource.
     * @param {String} id TransportGoogleChat identifier
     * @param {module:api/TransportGoogleChatApi~apiTransportGoogleChatIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportGoogleChatGet}
     */
    apiTransportGoogleChatIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportGoogleChatIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportGoogleChatGet;
      return this.apiClient.callApi(
        '/api/transport-google-chat/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportGoogleChatIdPatch operation.
     * @callback module:api/TransportGoogleChatApi~apiTransportGoogleChatIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportGoogleChatGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the TransportGoogleChat resource.
     * Updates the TransportGoogleChat resource.
     * @param {String} id TransportGoogleChat identifier
     * @param {module:model/TransportGoogleChatPatch} transportGoogleChatPatch The updated TransportGoogleChat resource
     * @param {module:api/TransportGoogleChatApi~apiTransportGoogleChatIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportGoogleChatGet}
     */
    apiTransportGoogleChatIdPatch(id, transportGoogleChatPatch, callback) {
      let postBody = transportGoogleChatPatch;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportGoogleChatIdPatch");
      }
      // verify the required parameter 'transportGoogleChatPatch' is set
      if (transportGoogleChatPatch === undefined || transportGoogleChatPatch === null) {
        throw new Error("Missing the required parameter 'transportGoogleChatPatch' when calling apiTransportGoogleChatIdPatch");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/merge-patch+json'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportGoogleChatGet;
      return this.apiClient.callApi(
        '/api/transport-google-chat/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportGoogleChatIdPut operation.
     * @callback module:api/TransportGoogleChatApi~apiTransportGoogleChatIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportGoogleChatGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Replaces the TransportGoogleChat resource.
     * Replaces the TransportGoogleChat resource.
     * @param {String} id TransportGoogleChat identifier
     * @param {module:model/TransportGoogleChatPut} transportGoogleChatPut The updated TransportGoogleChat resource
     * @param {module:api/TransportGoogleChatApi~apiTransportGoogleChatIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportGoogleChatGet}
     */
    apiTransportGoogleChatIdPut(id, transportGoogleChatPut, callback) {
      let postBody = transportGoogleChatPut;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportGoogleChatIdPut");
      }
      // verify the required parameter 'transportGoogleChatPut' is set
      if (transportGoogleChatPut === undefined || transportGoogleChatPut === null) {
        throw new Error("Missing the required parameter 'transportGoogleChatPut' when calling apiTransportGoogleChatIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportGoogleChatGet;
      return this.apiClient.callApi(
        '/api/transport-google-chat/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportGoogleChatPost operation.
     * @callback module:api/TransportGoogleChatApi~apiTransportGoogleChatPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportGoogleChatGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a TransportGoogleChat resource.
     * Creates a TransportGoogleChat resource.
     * @param {module:model/TransportGoogleChatPost} transportGoogleChatPost The new TransportGoogleChat resource
     * @param {module:api/TransportGoogleChatApi~apiTransportGoogleChatPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportGoogleChatGet}
     */
    apiTransportGoogleChatPost(transportGoogleChatPost, callback) {
      let postBody = transportGoogleChatPost;
      // verify the required parameter 'transportGoogleChatPost' is set
      if (transportGoogleChatPost === undefined || transportGoogleChatPost === null) {
        throw new Error("Missing the required parameter 'transportGoogleChatPost' when calling apiTransportGoogleChatPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportGoogleChatGet;
      return this.apiClient.callApi(
        '/api/transport-google-chat', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
