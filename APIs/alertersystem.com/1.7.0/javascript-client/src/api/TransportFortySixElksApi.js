/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiTransportFortySixElksGetCollection200Response from '../model/ApiTransportFortySixElksGetCollection200Response';
import TransportFortySixElksGet from '../model/TransportFortySixElksGet';
import TransportFortySixElksJsonldGet from '../model/TransportFortySixElksJsonldGet';
import TransportFortySixElksJsonldPost from '../model/TransportFortySixElksJsonldPost';
import TransportFortySixElksJsonldPut from '../model/TransportFortySixElksJsonldPut';
import TransportFortySixElksPatch from '../model/TransportFortySixElksPatch';
import TransportFortySixElksPost from '../model/TransportFortySixElksPost';
import TransportFortySixElksPut from '../model/TransportFortySixElksPut';

/**
* TransportFortySixElks service.
* @module api/TransportFortySixElksApi
* @version 1.7.0
*/
export default class TransportFortySixElksApi {

    /**
    * Constructs a new TransportFortySixElksApi. 
    * @alias module:api/TransportFortySixElksApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiTransportFortySixElksGetCollection operation.
     * @callback module:api/TransportFortySixElksApi~apiTransportFortySixElksGetCollectionCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TransportFortySixElksGet>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the collection of TransportFortySixElks resources.
     * Retrieves the collection of TransportFortySixElks resources.
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 1)] The collection page number
     * @param {String} [dataSegmentCode] 
     * @param {Array.<String>} [dataSegmentCode2] 
     * @param {String} [partition] 
     * @param {Array.<String>} [partition2] 
     * @param {Array.<String>} [properties] Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}
     * @param {module:api/TransportFortySixElksApi~apiTransportFortySixElksGetCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TransportFortySixElksGet>}
     */
    apiTransportFortySixElksGetCollection(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'dataSegmentCode': opts['dataSegmentCode'],
        'dataSegmentCode[]': this.apiClient.buildCollectionParam(opts['dataSegmentCode2'], 'multi'),
        'partition': opts['partition'],
        'partition[]': this.apiClient.buildCollectionParam(opts['partition2'], 'multi'),
        'properties[]': this.apiClient.buildCollectionParam(opts['properties'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = [TransportFortySixElksGet];
      return this.apiClient.callApi(
        '/api/transport-forty-six-elks', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportFortySixElksIdDelete operation.
     * @callback module:api/TransportFortySixElksApi~apiTransportFortySixElksIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes the TransportFortySixElks resource.
     * Removes the TransportFortySixElks resource.
     * @param {String} id TransportFortySixElks identifier
     * @param {module:api/TransportFortySixElksApi~apiTransportFortySixElksIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiTransportFortySixElksIdDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportFortySixElksIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/transport-forty-six-elks/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportFortySixElksIdGet operation.
     * @callback module:api/TransportFortySixElksApi~apiTransportFortySixElksIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportFortySixElksGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a TransportFortySixElks resource.
     * Retrieves a TransportFortySixElks resource.
     * @param {String} id TransportFortySixElks identifier
     * @param {module:api/TransportFortySixElksApi~apiTransportFortySixElksIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportFortySixElksGet}
     */
    apiTransportFortySixElksIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportFortySixElksIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportFortySixElksGet;
      return this.apiClient.callApi(
        '/api/transport-forty-six-elks/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportFortySixElksIdPatch operation.
     * @callback module:api/TransportFortySixElksApi~apiTransportFortySixElksIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportFortySixElksGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the TransportFortySixElks resource.
     * Updates the TransportFortySixElks resource.
     * @param {String} id TransportFortySixElks identifier
     * @param {module:model/TransportFortySixElksPatch} transportFortySixElksPatch The updated TransportFortySixElks resource
     * @param {module:api/TransportFortySixElksApi~apiTransportFortySixElksIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportFortySixElksGet}
     */
    apiTransportFortySixElksIdPatch(id, transportFortySixElksPatch, callback) {
      let postBody = transportFortySixElksPatch;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportFortySixElksIdPatch");
      }
      // verify the required parameter 'transportFortySixElksPatch' is set
      if (transportFortySixElksPatch === undefined || transportFortySixElksPatch === null) {
        throw new Error("Missing the required parameter 'transportFortySixElksPatch' when calling apiTransportFortySixElksIdPatch");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/merge-patch+json'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportFortySixElksGet;
      return this.apiClient.callApi(
        '/api/transport-forty-six-elks/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportFortySixElksIdPut operation.
     * @callback module:api/TransportFortySixElksApi~apiTransportFortySixElksIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportFortySixElksGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Replaces the TransportFortySixElks resource.
     * Replaces the TransportFortySixElks resource.
     * @param {String} id TransportFortySixElks identifier
     * @param {module:model/TransportFortySixElksPut} transportFortySixElksPut The updated TransportFortySixElks resource
     * @param {module:api/TransportFortySixElksApi~apiTransportFortySixElksIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportFortySixElksGet}
     */
    apiTransportFortySixElksIdPut(id, transportFortySixElksPut, callback) {
      let postBody = transportFortySixElksPut;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportFortySixElksIdPut");
      }
      // verify the required parameter 'transportFortySixElksPut' is set
      if (transportFortySixElksPut === undefined || transportFortySixElksPut === null) {
        throw new Error("Missing the required parameter 'transportFortySixElksPut' when calling apiTransportFortySixElksIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportFortySixElksGet;
      return this.apiClient.callApi(
        '/api/transport-forty-six-elks/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportFortySixElksPost operation.
     * @callback module:api/TransportFortySixElksApi~apiTransportFortySixElksPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportFortySixElksGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a TransportFortySixElks resource.
     * Creates a TransportFortySixElks resource.
     * @param {module:model/TransportFortySixElksPost} transportFortySixElksPost The new TransportFortySixElks resource
     * @param {module:api/TransportFortySixElksApi~apiTransportFortySixElksPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportFortySixElksGet}
     */
    apiTransportFortySixElksPost(transportFortySixElksPost, callback) {
      let postBody = transportFortySixElksPost;
      // verify the required parameter 'transportFortySixElksPost' is set
      if (transportFortySixElksPost === undefined || transportFortySixElksPost === null) {
        throw new Error("Missing the required parameter 'transportFortySixElksPost' when calling apiTransportFortySixElksPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportFortySixElksGet;
      return this.apiClient.callApi(
        '/api/transport-forty-six-elks', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
