/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiTransportTurboSmsGetCollection200Response from '../model/ApiTransportTurboSmsGetCollection200Response';
import TransportTurboSmsGet from '../model/TransportTurboSmsGet';
import TransportTurboSmsJsonldGet from '../model/TransportTurboSmsJsonldGet';
import TransportTurboSmsJsonldPost from '../model/TransportTurboSmsJsonldPost';
import TransportTurboSmsJsonldPut from '../model/TransportTurboSmsJsonldPut';
import TransportTurboSmsPatch from '../model/TransportTurboSmsPatch';
import TransportTurboSmsPost from '../model/TransportTurboSmsPost';
import TransportTurboSmsPut from '../model/TransportTurboSmsPut';

/**
* TransportTurboSms service.
* @module api/TransportTurboSmsApi
* @version 1.7.0
*/
export default class TransportTurboSmsApi {

    /**
    * Constructs a new TransportTurboSmsApi. 
    * @alias module:api/TransportTurboSmsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiTransportTurboSmsGetCollection operation.
     * @callback module:api/TransportTurboSmsApi~apiTransportTurboSmsGetCollectionCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TransportTurboSmsGet>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the collection of TransportTurboSms resources.
     * Retrieves the collection of TransportTurboSms resources.
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 1)] The collection page number
     * @param {String} [dataSegmentCode] 
     * @param {Array.<String>} [dataSegmentCode2] 
     * @param {String} [partition] 
     * @param {Array.<String>} [partition2] 
     * @param {Array.<String>} [properties] Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}
     * @param {module:api/TransportTurboSmsApi~apiTransportTurboSmsGetCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TransportTurboSmsGet>}
     */
    apiTransportTurboSmsGetCollection(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'dataSegmentCode': opts['dataSegmentCode'],
        'dataSegmentCode[]': this.apiClient.buildCollectionParam(opts['dataSegmentCode2'], 'multi'),
        'partition': opts['partition'],
        'partition[]': this.apiClient.buildCollectionParam(opts['partition2'], 'multi'),
        'properties[]': this.apiClient.buildCollectionParam(opts['properties'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = [TransportTurboSmsGet];
      return this.apiClient.callApi(
        '/api/transport-turbo-sms', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportTurboSmsIdDelete operation.
     * @callback module:api/TransportTurboSmsApi~apiTransportTurboSmsIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes the TransportTurboSms resource.
     * Removes the TransportTurboSms resource.
     * @param {String} id TransportTurboSms identifier
     * @param {module:api/TransportTurboSmsApi~apiTransportTurboSmsIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiTransportTurboSmsIdDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportTurboSmsIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/transport-turbo-sms/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportTurboSmsIdGet operation.
     * @callback module:api/TransportTurboSmsApi~apiTransportTurboSmsIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportTurboSmsGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a TransportTurboSms resource.
     * Retrieves a TransportTurboSms resource.
     * @param {String} id TransportTurboSms identifier
     * @param {module:api/TransportTurboSmsApi~apiTransportTurboSmsIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportTurboSmsGet}
     */
    apiTransportTurboSmsIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportTurboSmsIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportTurboSmsGet;
      return this.apiClient.callApi(
        '/api/transport-turbo-sms/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportTurboSmsIdPatch operation.
     * @callback module:api/TransportTurboSmsApi~apiTransportTurboSmsIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportTurboSmsGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the TransportTurboSms resource.
     * Updates the TransportTurboSms resource.
     * @param {String} id TransportTurboSms identifier
     * @param {module:model/TransportTurboSmsPatch} transportTurboSmsPatch The updated TransportTurboSms resource
     * @param {module:api/TransportTurboSmsApi~apiTransportTurboSmsIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportTurboSmsGet}
     */
    apiTransportTurboSmsIdPatch(id, transportTurboSmsPatch, callback) {
      let postBody = transportTurboSmsPatch;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportTurboSmsIdPatch");
      }
      // verify the required parameter 'transportTurboSmsPatch' is set
      if (transportTurboSmsPatch === undefined || transportTurboSmsPatch === null) {
        throw new Error("Missing the required parameter 'transportTurboSmsPatch' when calling apiTransportTurboSmsIdPatch");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/merge-patch+json'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportTurboSmsGet;
      return this.apiClient.callApi(
        '/api/transport-turbo-sms/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportTurboSmsIdPut operation.
     * @callback module:api/TransportTurboSmsApi~apiTransportTurboSmsIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportTurboSmsGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Replaces the TransportTurboSms resource.
     * Replaces the TransportTurboSms resource.
     * @param {String} id TransportTurboSms identifier
     * @param {module:model/TransportTurboSmsPut} transportTurboSmsPut The updated TransportTurboSms resource
     * @param {module:api/TransportTurboSmsApi~apiTransportTurboSmsIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportTurboSmsGet}
     */
    apiTransportTurboSmsIdPut(id, transportTurboSmsPut, callback) {
      let postBody = transportTurboSmsPut;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportTurboSmsIdPut");
      }
      // verify the required parameter 'transportTurboSmsPut' is set
      if (transportTurboSmsPut === undefined || transportTurboSmsPut === null) {
        throw new Error("Missing the required parameter 'transportTurboSmsPut' when calling apiTransportTurboSmsIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportTurboSmsGet;
      return this.apiClient.callApi(
        '/api/transport-turbo-sms/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportTurboSmsPost operation.
     * @callback module:api/TransportTurboSmsApi~apiTransportTurboSmsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportTurboSmsGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a TransportTurboSms resource.
     * Creates a TransportTurboSms resource.
     * @param {module:model/TransportTurboSmsPost} transportTurboSmsPost The new TransportTurboSms resource
     * @param {module:api/TransportTurboSmsApi~apiTransportTurboSmsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportTurboSmsGet}
     */
    apiTransportTurboSmsPost(transportTurboSmsPost, callback) {
      let postBody = transportTurboSmsPost;
      // verify the required parameter 'transportTurboSmsPost' is set
      if (transportTurboSmsPost === undefined || transportTurboSmsPost === null) {
        throw new Error("Missing the required parameter 'transportTurboSmsPost' when calling apiTransportTurboSmsPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportTurboSmsGet;
      return this.apiClient.callApi(
        '/api/transport-turbo-sms', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
