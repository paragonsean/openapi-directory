/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiTransportEsendexGetCollection200Response from '../model/ApiTransportEsendexGetCollection200Response';
import TransportEsendexGet from '../model/TransportEsendexGet';
import TransportEsendexJsonldGet from '../model/TransportEsendexJsonldGet';
import TransportEsendexJsonldPost from '../model/TransportEsendexJsonldPost';
import TransportEsendexJsonldPut from '../model/TransportEsendexJsonldPut';
import TransportEsendexPatch from '../model/TransportEsendexPatch';
import TransportEsendexPost from '../model/TransportEsendexPost';
import TransportEsendexPut from '../model/TransportEsendexPut';

/**
* TransportEsendex service.
* @module api/TransportEsendexApi
* @version 1.7.0
*/
export default class TransportEsendexApi {

    /**
    * Constructs a new TransportEsendexApi. 
    * @alias module:api/TransportEsendexApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiTransportEsendexGetCollection operation.
     * @callback module:api/TransportEsendexApi~apiTransportEsendexGetCollectionCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TransportEsendexGet>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the collection of TransportEsendex resources.
     * Retrieves the collection of TransportEsendex resources.
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 1)] The collection page number
     * @param {String} [dataSegmentCode] 
     * @param {Array.<String>} [dataSegmentCode2] 
     * @param {String} [partition] 
     * @param {Array.<String>} [partition2] 
     * @param {Array.<String>} [properties] Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}
     * @param {module:api/TransportEsendexApi~apiTransportEsendexGetCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TransportEsendexGet>}
     */
    apiTransportEsendexGetCollection(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'dataSegmentCode': opts['dataSegmentCode'],
        'dataSegmentCode[]': this.apiClient.buildCollectionParam(opts['dataSegmentCode2'], 'multi'),
        'partition': opts['partition'],
        'partition[]': this.apiClient.buildCollectionParam(opts['partition2'], 'multi'),
        'properties[]': this.apiClient.buildCollectionParam(opts['properties'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = [TransportEsendexGet];
      return this.apiClient.callApi(
        '/api/transport-esendex', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportEsendexIdDelete operation.
     * @callback module:api/TransportEsendexApi~apiTransportEsendexIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes the TransportEsendex resource.
     * Removes the TransportEsendex resource.
     * @param {String} id TransportEsendex identifier
     * @param {module:api/TransportEsendexApi~apiTransportEsendexIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiTransportEsendexIdDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportEsendexIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/transport-esendex/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportEsendexIdGet operation.
     * @callback module:api/TransportEsendexApi~apiTransportEsendexIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportEsendexGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a TransportEsendex resource.
     * Retrieves a TransportEsendex resource.
     * @param {String} id TransportEsendex identifier
     * @param {module:api/TransportEsendexApi~apiTransportEsendexIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportEsendexGet}
     */
    apiTransportEsendexIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportEsendexIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportEsendexGet;
      return this.apiClient.callApi(
        '/api/transport-esendex/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportEsendexIdPatch operation.
     * @callback module:api/TransportEsendexApi~apiTransportEsendexIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportEsendexGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the TransportEsendex resource.
     * Updates the TransportEsendex resource.
     * @param {String} id TransportEsendex identifier
     * @param {module:model/TransportEsendexPatch} transportEsendexPatch The updated TransportEsendex resource
     * @param {module:api/TransportEsendexApi~apiTransportEsendexIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportEsendexGet}
     */
    apiTransportEsendexIdPatch(id, transportEsendexPatch, callback) {
      let postBody = transportEsendexPatch;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportEsendexIdPatch");
      }
      // verify the required parameter 'transportEsendexPatch' is set
      if (transportEsendexPatch === undefined || transportEsendexPatch === null) {
        throw new Error("Missing the required parameter 'transportEsendexPatch' when calling apiTransportEsendexIdPatch");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/merge-patch+json'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportEsendexGet;
      return this.apiClient.callApi(
        '/api/transport-esendex/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportEsendexIdPut operation.
     * @callback module:api/TransportEsendexApi~apiTransportEsendexIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportEsendexGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Replaces the TransportEsendex resource.
     * Replaces the TransportEsendex resource.
     * @param {String} id TransportEsendex identifier
     * @param {module:model/TransportEsendexPut} transportEsendexPut The updated TransportEsendex resource
     * @param {module:api/TransportEsendexApi~apiTransportEsendexIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportEsendexGet}
     */
    apiTransportEsendexIdPut(id, transportEsendexPut, callback) {
      let postBody = transportEsendexPut;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportEsendexIdPut");
      }
      // verify the required parameter 'transportEsendexPut' is set
      if (transportEsendexPut === undefined || transportEsendexPut === null) {
        throw new Error("Missing the required parameter 'transportEsendexPut' when calling apiTransportEsendexIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportEsendexGet;
      return this.apiClient.callApi(
        '/api/transport-esendex/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportEsendexPost operation.
     * @callback module:api/TransportEsendexApi~apiTransportEsendexPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportEsendexGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a TransportEsendex resource.
     * Creates a TransportEsendex resource.
     * @param {module:model/TransportEsendexPost} transportEsendexPost The new TransportEsendex resource
     * @param {module:api/TransportEsendexApi~apiTransportEsendexPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportEsendexGet}
     */
    apiTransportEsendexPost(transportEsendexPost, callback) {
      let postBody = transportEsendexPost;
      // verify the required parameter 'transportEsendexPost' is set
      if (transportEsendexPost === undefined || transportEsendexPost === null) {
        throw new Error("Missing the required parameter 'transportEsendexPost' when calling apiTransportEsendexPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportEsendexGet;
      return this.apiClient.callApi(
        '/api/transport-esendex', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
