/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiTransportTwilioGetCollection200Response from '../model/ApiTransportTwilioGetCollection200Response';
import TransportTwilioGet from '../model/TransportTwilioGet';
import TransportTwilioJsonldGet from '../model/TransportTwilioJsonldGet';
import TransportTwilioJsonldPost from '../model/TransportTwilioJsonldPost';
import TransportTwilioJsonldPut from '../model/TransportTwilioJsonldPut';
import TransportTwilioPatch from '../model/TransportTwilioPatch';
import TransportTwilioPost from '../model/TransportTwilioPost';
import TransportTwilioPut from '../model/TransportTwilioPut';

/**
* TransportTwilio service.
* @module api/TransportTwilioApi
* @version 1.7.0
*/
export default class TransportTwilioApi {

    /**
    * Constructs a new TransportTwilioApi. 
    * @alias module:api/TransportTwilioApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiTransportTwilioGetCollection operation.
     * @callback module:api/TransportTwilioApi~apiTransportTwilioGetCollectionCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TransportTwilioGet>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the collection of TransportTwilio resources.
     * Retrieves the collection of TransportTwilio resources.
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 1)] The collection page number
     * @param {String} [dataSegmentCode] 
     * @param {Array.<String>} [dataSegmentCode2] 
     * @param {String} [partition] 
     * @param {Array.<String>} [partition2] 
     * @param {Array.<String>} [properties] Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}
     * @param {module:api/TransportTwilioApi~apiTransportTwilioGetCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TransportTwilioGet>}
     */
    apiTransportTwilioGetCollection(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'dataSegmentCode': opts['dataSegmentCode'],
        'dataSegmentCode[]': this.apiClient.buildCollectionParam(opts['dataSegmentCode2'], 'multi'),
        'partition': opts['partition'],
        'partition[]': this.apiClient.buildCollectionParam(opts['partition2'], 'multi'),
        'properties[]': this.apiClient.buildCollectionParam(opts['properties'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = [TransportTwilioGet];
      return this.apiClient.callApi(
        '/api/transport-twilio', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportTwilioIdDelete operation.
     * @callback module:api/TransportTwilioApi~apiTransportTwilioIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes the TransportTwilio resource.
     * Removes the TransportTwilio resource.
     * @param {String} id TransportTwilio identifier
     * @param {module:api/TransportTwilioApi~apiTransportTwilioIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiTransportTwilioIdDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportTwilioIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/transport-twilio/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportTwilioIdGet operation.
     * @callback module:api/TransportTwilioApi~apiTransportTwilioIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportTwilioGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a TransportTwilio resource.
     * Retrieves a TransportTwilio resource.
     * @param {String} id TransportTwilio identifier
     * @param {module:api/TransportTwilioApi~apiTransportTwilioIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportTwilioGet}
     */
    apiTransportTwilioIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportTwilioIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportTwilioGet;
      return this.apiClient.callApi(
        '/api/transport-twilio/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportTwilioIdPatch operation.
     * @callback module:api/TransportTwilioApi~apiTransportTwilioIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportTwilioGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the TransportTwilio resource.
     * Updates the TransportTwilio resource.
     * @param {String} id TransportTwilio identifier
     * @param {module:model/TransportTwilioPatch} transportTwilioPatch The updated TransportTwilio resource
     * @param {module:api/TransportTwilioApi~apiTransportTwilioIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportTwilioGet}
     */
    apiTransportTwilioIdPatch(id, transportTwilioPatch, callback) {
      let postBody = transportTwilioPatch;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportTwilioIdPatch");
      }
      // verify the required parameter 'transportTwilioPatch' is set
      if (transportTwilioPatch === undefined || transportTwilioPatch === null) {
        throw new Error("Missing the required parameter 'transportTwilioPatch' when calling apiTransportTwilioIdPatch");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/merge-patch+json'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportTwilioGet;
      return this.apiClient.callApi(
        '/api/transport-twilio/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportTwilioIdPut operation.
     * @callback module:api/TransportTwilioApi~apiTransportTwilioIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportTwilioGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Replaces the TransportTwilio resource.
     * Replaces the TransportTwilio resource.
     * @param {String} id TransportTwilio identifier
     * @param {module:model/TransportTwilioPut} transportTwilioPut The updated TransportTwilio resource
     * @param {module:api/TransportTwilioApi~apiTransportTwilioIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportTwilioGet}
     */
    apiTransportTwilioIdPut(id, transportTwilioPut, callback) {
      let postBody = transportTwilioPut;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportTwilioIdPut");
      }
      // verify the required parameter 'transportTwilioPut' is set
      if (transportTwilioPut === undefined || transportTwilioPut === null) {
        throw new Error("Missing the required parameter 'transportTwilioPut' when calling apiTransportTwilioIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportTwilioGet;
      return this.apiClient.callApi(
        '/api/transport-twilio/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportTwilioPost operation.
     * @callback module:api/TransportTwilioApi~apiTransportTwilioPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportTwilioGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a TransportTwilio resource.
     * Creates a TransportTwilio resource.
     * @param {module:model/TransportTwilioPost} transportTwilioPost The new TransportTwilio resource
     * @param {module:api/TransportTwilioApi~apiTransportTwilioPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportTwilioGet}
     */
    apiTransportTwilioPost(transportTwilioPost, callback) {
      let postBody = transportTwilioPost;
      // verify the required parameter 'transportTwilioPost' is set
      if (transportTwilioPost === undefined || transportTwilioPost === null) {
        throw new Error("Missing the required parameter 'transportTwilioPost' when calling apiTransportTwilioPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportTwilioGet;
      return this.apiClient.callApi(
        '/api/transport-twilio', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
