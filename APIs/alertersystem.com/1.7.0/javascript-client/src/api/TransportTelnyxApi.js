/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiTransportTelnyxGetCollection200Response from '../model/ApiTransportTelnyxGetCollection200Response';
import TransportTelnyxGet from '../model/TransportTelnyxGet';
import TransportTelnyxJsonldGet from '../model/TransportTelnyxJsonldGet';
import TransportTelnyxJsonldPost from '../model/TransportTelnyxJsonldPost';
import TransportTelnyxJsonldPut from '../model/TransportTelnyxJsonldPut';
import TransportTelnyxPatch from '../model/TransportTelnyxPatch';
import TransportTelnyxPost from '../model/TransportTelnyxPost';
import TransportTelnyxPut from '../model/TransportTelnyxPut';

/**
* TransportTelnyx service.
* @module api/TransportTelnyxApi
* @version 1.7.0
*/
export default class TransportTelnyxApi {

    /**
    * Constructs a new TransportTelnyxApi. 
    * @alias module:api/TransportTelnyxApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiTransportTelnyxGetCollection operation.
     * @callback module:api/TransportTelnyxApi~apiTransportTelnyxGetCollectionCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TransportTelnyxGet>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the collection of TransportTelnyx resources.
     * Retrieves the collection of TransportTelnyx resources.
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 1)] The collection page number
     * @param {String} [dataSegmentCode] 
     * @param {Array.<String>} [dataSegmentCode2] 
     * @param {String} [partition] 
     * @param {Array.<String>} [partition2] 
     * @param {Array.<String>} [properties] Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}
     * @param {module:api/TransportTelnyxApi~apiTransportTelnyxGetCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TransportTelnyxGet>}
     */
    apiTransportTelnyxGetCollection(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'dataSegmentCode': opts['dataSegmentCode'],
        'dataSegmentCode[]': this.apiClient.buildCollectionParam(opts['dataSegmentCode2'], 'multi'),
        'partition': opts['partition'],
        'partition[]': this.apiClient.buildCollectionParam(opts['partition2'], 'multi'),
        'properties[]': this.apiClient.buildCollectionParam(opts['properties'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = [TransportTelnyxGet];
      return this.apiClient.callApi(
        '/api/transport-telnyx', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportTelnyxIdDelete operation.
     * @callback module:api/TransportTelnyxApi~apiTransportTelnyxIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes the TransportTelnyx resource.
     * Removes the TransportTelnyx resource.
     * @param {String} id TransportTelnyx identifier
     * @param {module:api/TransportTelnyxApi~apiTransportTelnyxIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiTransportTelnyxIdDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportTelnyxIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/transport-telnyx/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportTelnyxIdGet operation.
     * @callback module:api/TransportTelnyxApi~apiTransportTelnyxIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportTelnyxGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a TransportTelnyx resource.
     * Retrieves a TransportTelnyx resource.
     * @param {String} id TransportTelnyx identifier
     * @param {module:api/TransportTelnyxApi~apiTransportTelnyxIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportTelnyxGet}
     */
    apiTransportTelnyxIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportTelnyxIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportTelnyxGet;
      return this.apiClient.callApi(
        '/api/transport-telnyx/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportTelnyxIdPatch operation.
     * @callback module:api/TransportTelnyxApi~apiTransportTelnyxIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportTelnyxGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the TransportTelnyx resource.
     * Updates the TransportTelnyx resource.
     * @param {String} id TransportTelnyx identifier
     * @param {module:model/TransportTelnyxPatch} transportTelnyxPatch The updated TransportTelnyx resource
     * @param {module:api/TransportTelnyxApi~apiTransportTelnyxIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportTelnyxGet}
     */
    apiTransportTelnyxIdPatch(id, transportTelnyxPatch, callback) {
      let postBody = transportTelnyxPatch;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportTelnyxIdPatch");
      }
      // verify the required parameter 'transportTelnyxPatch' is set
      if (transportTelnyxPatch === undefined || transportTelnyxPatch === null) {
        throw new Error("Missing the required parameter 'transportTelnyxPatch' when calling apiTransportTelnyxIdPatch");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/merge-patch+json'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportTelnyxGet;
      return this.apiClient.callApi(
        '/api/transport-telnyx/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportTelnyxIdPut operation.
     * @callback module:api/TransportTelnyxApi~apiTransportTelnyxIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportTelnyxGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Replaces the TransportTelnyx resource.
     * Replaces the TransportTelnyx resource.
     * @param {String} id TransportTelnyx identifier
     * @param {module:model/TransportTelnyxPut} transportTelnyxPut The updated TransportTelnyx resource
     * @param {module:api/TransportTelnyxApi~apiTransportTelnyxIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportTelnyxGet}
     */
    apiTransportTelnyxIdPut(id, transportTelnyxPut, callback) {
      let postBody = transportTelnyxPut;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportTelnyxIdPut");
      }
      // verify the required parameter 'transportTelnyxPut' is set
      if (transportTelnyxPut === undefined || transportTelnyxPut === null) {
        throw new Error("Missing the required parameter 'transportTelnyxPut' when calling apiTransportTelnyxIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportTelnyxGet;
      return this.apiClient.callApi(
        '/api/transport-telnyx/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportTelnyxPost operation.
     * @callback module:api/TransportTelnyxApi~apiTransportTelnyxPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportTelnyxGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a TransportTelnyx resource.
     * Creates a TransportTelnyx resource.
     * @param {module:model/TransportTelnyxPost} transportTelnyxPost The new TransportTelnyx resource
     * @param {module:api/TransportTelnyxApi~apiTransportTelnyxPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportTelnyxGet}
     */
    apiTransportTelnyxPost(transportTelnyxPost, callback) {
      let postBody = transportTelnyxPost;
      // verify the required parameter 'transportTelnyxPost' is set
      if (transportTelnyxPost === undefined || transportTelnyxPost === null) {
        throw new Error("Missing the required parameter 'transportTelnyxPost' when calling apiTransportTelnyxPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportTelnyxGet;
      return this.apiClient.callApi(
        '/api/transport-telnyx', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
