/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiTransportHelpScoutGetCollection200Response from '../model/ApiTransportHelpScoutGetCollection200Response';
import TransportHelpScoutGet from '../model/TransportHelpScoutGet';
import TransportHelpScoutJsonldGet from '../model/TransportHelpScoutJsonldGet';
import TransportHelpScoutJsonldPost from '../model/TransportHelpScoutJsonldPost';
import TransportHelpScoutJsonldPut from '../model/TransportHelpScoutJsonldPut';
import TransportHelpScoutPatch from '../model/TransportHelpScoutPatch';
import TransportHelpScoutPost from '../model/TransportHelpScoutPost';
import TransportHelpScoutPut from '../model/TransportHelpScoutPut';

/**
* TransportHelpScout service.
* @module api/TransportHelpScoutApi
* @version 1.7.0
*/
export default class TransportHelpScoutApi {

    /**
    * Constructs a new TransportHelpScoutApi. 
    * @alias module:api/TransportHelpScoutApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiTransportHelpScoutGetCollection operation.
     * @callback module:api/TransportHelpScoutApi~apiTransportHelpScoutGetCollectionCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TransportHelpScoutGet>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the collection of TransportHelpScout resources.
     * Retrieves the collection of TransportHelpScout resources.
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 1)] The collection page number
     * @param {String} [dataSegmentCode] 
     * @param {Array.<String>} [dataSegmentCode2] 
     * @param {String} [partition] 
     * @param {Array.<String>} [partition2] 
     * @param {Array.<String>} [properties] Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}
     * @param {module:api/TransportHelpScoutApi~apiTransportHelpScoutGetCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TransportHelpScoutGet>}
     */
    apiTransportHelpScoutGetCollection(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'dataSegmentCode': opts['dataSegmentCode'],
        'dataSegmentCode[]': this.apiClient.buildCollectionParam(opts['dataSegmentCode2'], 'multi'),
        'partition': opts['partition'],
        'partition[]': this.apiClient.buildCollectionParam(opts['partition2'], 'multi'),
        'properties[]': this.apiClient.buildCollectionParam(opts['properties'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = [TransportHelpScoutGet];
      return this.apiClient.callApi(
        '/api/transport-help-scout', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportHelpScoutIdDelete operation.
     * @callback module:api/TransportHelpScoutApi~apiTransportHelpScoutIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes the TransportHelpScout resource.
     * Removes the TransportHelpScout resource.
     * @param {String} id TransportHelpScout identifier
     * @param {module:api/TransportHelpScoutApi~apiTransportHelpScoutIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiTransportHelpScoutIdDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportHelpScoutIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/transport-help-scout/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportHelpScoutIdGet operation.
     * @callback module:api/TransportHelpScoutApi~apiTransportHelpScoutIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportHelpScoutGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a TransportHelpScout resource.
     * Retrieves a TransportHelpScout resource.
     * @param {String} id TransportHelpScout identifier
     * @param {module:api/TransportHelpScoutApi~apiTransportHelpScoutIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportHelpScoutGet}
     */
    apiTransportHelpScoutIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportHelpScoutIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportHelpScoutGet;
      return this.apiClient.callApi(
        '/api/transport-help-scout/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportHelpScoutIdPatch operation.
     * @callback module:api/TransportHelpScoutApi~apiTransportHelpScoutIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportHelpScoutGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the TransportHelpScout resource.
     * Updates the TransportHelpScout resource.
     * @param {String} id TransportHelpScout identifier
     * @param {module:model/TransportHelpScoutPatch} transportHelpScoutPatch The updated TransportHelpScout resource
     * @param {module:api/TransportHelpScoutApi~apiTransportHelpScoutIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportHelpScoutGet}
     */
    apiTransportHelpScoutIdPatch(id, transportHelpScoutPatch, callback) {
      let postBody = transportHelpScoutPatch;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportHelpScoutIdPatch");
      }
      // verify the required parameter 'transportHelpScoutPatch' is set
      if (transportHelpScoutPatch === undefined || transportHelpScoutPatch === null) {
        throw new Error("Missing the required parameter 'transportHelpScoutPatch' when calling apiTransportHelpScoutIdPatch");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/merge-patch+json'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportHelpScoutGet;
      return this.apiClient.callApi(
        '/api/transport-help-scout/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportHelpScoutIdPut operation.
     * @callback module:api/TransportHelpScoutApi~apiTransportHelpScoutIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportHelpScoutGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Replaces the TransportHelpScout resource.
     * Replaces the TransportHelpScout resource.
     * @param {String} id TransportHelpScout identifier
     * @param {module:model/TransportHelpScoutPut} transportHelpScoutPut The updated TransportHelpScout resource
     * @param {module:api/TransportHelpScoutApi~apiTransportHelpScoutIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportHelpScoutGet}
     */
    apiTransportHelpScoutIdPut(id, transportHelpScoutPut, callback) {
      let postBody = transportHelpScoutPut;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportHelpScoutIdPut");
      }
      // verify the required parameter 'transportHelpScoutPut' is set
      if (transportHelpScoutPut === undefined || transportHelpScoutPut === null) {
        throw new Error("Missing the required parameter 'transportHelpScoutPut' when calling apiTransportHelpScoutIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportHelpScoutGet;
      return this.apiClient.callApi(
        '/api/transport-help-scout/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportHelpScoutPost operation.
     * @callback module:api/TransportHelpScoutApi~apiTransportHelpScoutPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportHelpScoutGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a TransportHelpScout resource.
     * Creates a TransportHelpScout resource.
     * @param {module:model/TransportHelpScoutPost} transportHelpScoutPost The new TransportHelpScout resource
     * @param {module:api/TransportHelpScoutApi~apiTransportHelpScoutPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportHelpScoutGet}
     */
    apiTransportHelpScoutPost(transportHelpScoutPost, callback) {
      let postBody = transportHelpScoutPost;
      // verify the required parameter 'transportHelpScoutPost' is set
      if (transportHelpScoutPost === undefined || transportHelpScoutPost === null) {
        throw new Error("Missing the required parameter 'transportHelpScoutPost' when calling apiTransportHelpScoutPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportHelpScoutGet;
      return this.apiClient.callApi(
        '/api/transport-help-scout', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
