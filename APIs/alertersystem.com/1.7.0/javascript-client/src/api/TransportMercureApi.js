/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiTransportMercureGetCollection200Response from '../model/ApiTransportMercureGetCollection200Response';
import TransportMercureGet from '../model/TransportMercureGet';
import TransportMercureJsonldGet from '../model/TransportMercureJsonldGet';
import TransportMercureJsonldPost from '../model/TransportMercureJsonldPost';
import TransportMercureJsonldPut from '../model/TransportMercureJsonldPut';
import TransportMercurePatch from '../model/TransportMercurePatch';
import TransportMercurePost from '../model/TransportMercurePost';
import TransportMercurePut from '../model/TransportMercurePut';

/**
* TransportMercure service.
* @module api/TransportMercureApi
* @version 1.7.0
*/
export default class TransportMercureApi {

    /**
    * Constructs a new TransportMercureApi. 
    * @alias module:api/TransportMercureApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiTransportMercureGetCollection operation.
     * @callback module:api/TransportMercureApi~apiTransportMercureGetCollectionCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TransportMercureGet>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the collection of TransportMercure resources.
     * Retrieves the collection of TransportMercure resources.
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 1)] The collection page number
     * @param {String} [dataSegmentCode] 
     * @param {Array.<String>} [dataSegmentCode2] 
     * @param {String} [partition] 
     * @param {Array.<String>} [partition2] 
     * @param {Array.<String>} [properties] Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}
     * @param {module:api/TransportMercureApi~apiTransportMercureGetCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TransportMercureGet>}
     */
    apiTransportMercureGetCollection(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'dataSegmentCode': opts['dataSegmentCode'],
        'dataSegmentCode[]': this.apiClient.buildCollectionParam(opts['dataSegmentCode2'], 'multi'),
        'partition': opts['partition'],
        'partition[]': this.apiClient.buildCollectionParam(opts['partition2'], 'multi'),
        'properties[]': this.apiClient.buildCollectionParam(opts['properties'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = [TransportMercureGet];
      return this.apiClient.callApi(
        '/api/transport-mercure', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportMercureIdDelete operation.
     * @callback module:api/TransportMercureApi~apiTransportMercureIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes the TransportMercure resource.
     * Removes the TransportMercure resource.
     * @param {String} id TransportMercure identifier
     * @param {module:api/TransportMercureApi~apiTransportMercureIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiTransportMercureIdDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportMercureIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/transport-mercure/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportMercureIdGet operation.
     * @callback module:api/TransportMercureApi~apiTransportMercureIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportMercureGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a TransportMercure resource.
     * Retrieves a TransportMercure resource.
     * @param {String} id TransportMercure identifier
     * @param {module:api/TransportMercureApi~apiTransportMercureIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportMercureGet}
     */
    apiTransportMercureIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportMercureIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportMercureGet;
      return this.apiClient.callApi(
        '/api/transport-mercure/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportMercureIdPatch operation.
     * @callback module:api/TransportMercureApi~apiTransportMercureIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportMercureGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the TransportMercure resource.
     * Updates the TransportMercure resource.
     * @param {String} id TransportMercure identifier
     * @param {module:model/TransportMercurePatch} transportMercurePatch The updated TransportMercure resource
     * @param {module:api/TransportMercureApi~apiTransportMercureIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportMercureGet}
     */
    apiTransportMercureIdPatch(id, transportMercurePatch, callback) {
      let postBody = transportMercurePatch;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportMercureIdPatch");
      }
      // verify the required parameter 'transportMercurePatch' is set
      if (transportMercurePatch === undefined || transportMercurePatch === null) {
        throw new Error("Missing the required parameter 'transportMercurePatch' when calling apiTransportMercureIdPatch");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/merge-patch+json'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportMercureGet;
      return this.apiClient.callApi(
        '/api/transport-mercure/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportMercureIdPut operation.
     * @callback module:api/TransportMercureApi~apiTransportMercureIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportMercureGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Replaces the TransportMercure resource.
     * Replaces the TransportMercure resource.
     * @param {String} id TransportMercure identifier
     * @param {module:model/TransportMercurePut} transportMercurePut The updated TransportMercure resource
     * @param {module:api/TransportMercureApi~apiTransportMercureIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportMercureGet}
     */
    apiTransportMercureIdPut(id, transportMercurePut, callback) {
      let postBody = transportMercurePut;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportMercureIdPut");
      }
      // verify the required parameter 'transportMercurePut' is set
      if (transportMercurePut === undefined || transportMercurePut === null) {
        throw new Error("Missing the required parameter 'transportMercurePut' when calling apiTransportMercureIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportMercureGet;
      return this.apiClient.callApi(
        '/api/transport-mercure/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportMercurePost operation.
     * @callback module:api/TransportMercureApi~apiTransportMercurePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportMercureGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a TransportMercure resource.
     * Creates a TransportMercure resource.
     * @param {module:model/TransportMercurePost} transportMercurePost The new TransportMercure resource
     * @param {module:api/TransportMercureApi~apiTransportMercurePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportMercureGet}
     */
    apiTransportMercurePost(transportMercurePost, callback) {
      let postBody = transportMercurePost;
      // verify the required parameter 'transportMercurePost' is set
      if (transportMercurePost === undefined || transportMercurePost === null) {
        throw new Error("Missing the required parameter 'transportMercurePost' when calling apiTransportMercurePost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportMercureGet;
      return this.apiClient.callApi(
        '/api/transport-mercure', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
