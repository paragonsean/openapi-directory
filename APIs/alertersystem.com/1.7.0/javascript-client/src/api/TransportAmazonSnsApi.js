/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiTransportAmazonSnsGetCollection200Response from '../model/ApiTransportAmazonSnsGetCollection200Response';
import TransportAmazonSnsGet from '../model/TransportAmazonSnsGet';
import TransportAmazonSnsJsonldGet from '../model/TransportAmazonSnsJsonldGet';
import TransportAmazonSnsJsonldPost from '../model/TransportAmazonSnsJsonldPost';
import TransportAmazonSnsJsonldPut from '../model/TransportAmazonSnsJsonldPut';
import TransportAmazonSnsPatch from '../model/TransportAmazonSnsPatch';
import TransportAmazonSnsPost from '../model/TransportAmazonSnsPost';
import TransportAmazonSnsPut from '../model/TransportAmazonSnsPut';

/**
* TransportAmazonSns service.
* @module api/TransportAmazonSnsApi
* @version 1.7.0
*/
export default class TransportAmazonSnsApi {

    /**
    * Constructs a new TransportAmazonSnsApi. 
    * @alias module:api/TransportAmazonSnsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiTransportAmazonSnsGetCollection operation.
     * @callback module:api/TransportAmazonSnsApi~apiTransportAmazonSnsGetCollectionCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TransportAmazonSnsGet>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the collection of TransportAmazonSns resources.
     * Retrieves the collection of TransportAmazonSns resources.
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 1)] The collection page number
     * @param {String} [dataSegmentCode] 
     * @param {Array.<String>} [dataSegmentCode2] 
     * @param {String} [partition] 
     * @param {Array.<String>} [partition2] 
     * @param {Array.<String>} [properties] Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}
     * @param {module:api/TransportAmazonSnsApi~apiTransportAmazonSnsGetCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TransportAmazonSnsGet>}
     */
    apiTransportAmazonSnsGetCollection(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'dataSegmentCode': opts['dataSegmentCode'],
        'dataSegmentCode[]': this.apiClient.buildCollectionParam(opts['dataSegmentCode2'], 'multi'),
        'partition': opts['partition'],
        'partition[]': this.apiClient.buildCollectionParam(opts['partition2'], 'multi'),
        'properties[]': this.apiClient.buildCollectionParam(opts['properties'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = [TransportAmazonSnsGet];
      return this.apiClient.callApi(
        '/api/transport-amazon-sns', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportAmazonSnsIdDelete operation.
     * @callback module:api/TransportAmazonSnsApi~apiTransportAmazonSnsIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes the TransportAmazonSns resource.
     * Removes the TransportAmazonSns resource.
     * @param {String} id TransportAmazonSns identifier
     * @param {module:api/TransportAmazonSnsApi~apiTransportAmazonSnsIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiTransportAmazonSnsIdDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportAmazonSnsIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/transport-amazon-sns/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportAmazonSnsIdGet operation.
     * @callback module:api/TransportAmazonSnsApi~apiTransportAmazonSnsIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportAmazonSnsGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a TransportAmazonSns resource.
     * Retrieves a TransportAmazonSns resource.
     * @param {String} id TransportAmazonSns identifier
     * @param {module:api/TransportAmazonSnsApi~apiTransportAmazonSnsIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportAmazonSnsGet}
     */
    apiTransportAmazonSnsIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportAmazonSnsIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportAmazonSnsGet;
      return this.apiClient.callApi(
        '/api/transport-amazon-sns/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportAmazonSnsIdPatch operation.
     * @callback module:api/TransportAmazonSnsApi~apiTransportAmazonSnsIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportAmazonSnsGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the TransportAmazonSns resource.
     * Updates the TransportAmazonSns resource.
     * @param {String} id TransportAmazonSns identifier
     * @param {module:model/TransportAmazonSnsPatch} transportAmazonSnsPatch The updated TransportAmazonSns resource
     * @param {module:api/TransportAmazonSnsApi~apiTransportAmazonSnsIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportAmazonSnsGet}
     */
    apiTransportAmazonSnsIdPatch(id, transportAmazonSnsPatch, callback) {
      let postBody = transportAmazonSnsPatch;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportAmazonSnsIdPatch");
      }
      // verify the required parameter 'transportAmazonSnsPatch' is set
      if (transportAmazonSnsPatch === undefined || transportAmazonSnsPatch === null) {
        throw new Error("Missing the required parameter 'transportAmazonSnsPatch' when calling apiTransportAmazonSnsIdPatch");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/merge-patch+json'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportAmazonSnsGet;
      return this.apiClient.callApi(
        '/api/transport-amazon-sns/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportAmazonSnsIdPut operation.
     * @callback module:api/TransportAmazonSnsApi~apiTransportAmazonSnsIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportAmazonSnsGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Replaces the TransportAmazonSns resource.
     * Replaces the TransportAmazonSns resource.
     * @param {String} id TransportAmazonSns identifier
     * @param {module:model/TransportAmazonSnsPut} transportAmazonSnsPut The updated TransportAmazonSns resource
     * @param {module:api/TransportAmazonSnsApi~apiTransportAmazonSnsIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportAmazonSnsGet}
     */
    apiTransportAmazonSnsIdPut(id, transportAmazonSnsPut, callback) {
      let postBody = transportAmazonSnsPut;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportAmazonSnsIdPut");
      }
      // verify the required parameter 'transportAmazonSnsPut' is set
      if (transportAmazonSnsPut === undefined || transportAmazonSnsPut === null) {
        throw new Error("Missing the required parameter 'transportAmazonSnsPut' when calling apiTransportAmazonSnsIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportAmazonSnsGet;
      return this.apiClient.callApi(
        '/api/transport-amazon-sns/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportAmazonSnsPost operation.
     * @callback module:api/TransportAmazonSnsApi~apiTransportAmazonSnsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportAmazonSnsGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a TransportAmazonSns resource.
     * Creates a TransportAmazonSns resource.
     * @param {module:model/TransportAmazonSnsPost} transportAmazonSnsPost The new TransportAmazonSns resource
     * @param {module:api/TransportAmazonSnsApi~apiTransportAmazonSnsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportAmazonSnsGet}
     */
    apiTransportAmazonSnsPost(transportAmazonSnsPost, callback) {
      let postBody = transportAmazonSnsPost;
      // verify the required parameter 'transportAmazonSnsPost' is set
      if (transportAmazonSnsPost === undefined || transportAmazonSnsPost === null) {
        throw new Error("Missing the required parameter 'transportAmazonSnsPost' when calling apiTransportAmazonSnsPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportAmazonSnsGet;
      return this.apiClient.callApi(
        '/api/transport-amazon-sns', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
