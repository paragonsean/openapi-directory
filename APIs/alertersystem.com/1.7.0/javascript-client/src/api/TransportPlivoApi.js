/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiTransportPlivoGetCollection200Response from '../model/ApiTransportPlivoGetCollection200Response';
import TransportPlivoGet from '../model/TransportPlivoGet';
import TransportPlivoJsonldGet from '../model/TransportPlivoJsonldGet';
import TransportPlivoJsonldPost from '../model/TransportPlivoJsonldPost';
import TransportPlivoJsonldPut from '../model/TransportPlivoJsonldPut';
import TransportPlivoPatch from '../model/TransportPlivoPatch';
import TransportPlivoPost from '../model/TransportPlivoPost';
import TransportPlivoPut from '../model/TransportPlivoPut';

/**
* TransportPlivo service.
* @module api/TransportPlivoApi
* @version 1.7.0
*/
export default class TransportPlivoApi {

    /**
    * Constructs a new TransportPlivoApi. 
    * @alias module:api/TransportPlivoApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiTransportPlivoGetCollection operation.
     * @callback module:api/TransportPlivoApi~apiTransportPlivoGetCollectionCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TransportPlivoGet>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the collection of TransportPlivo resources.
     * Retrieves the collection of TransportPlivo resources.
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 1)] The collection page number
     * @param {String} [dataSegmentCode] 
     * @param {Array.<String>} [dataSegmentCode2] 
     * @param {String} [partition] 
     * @param {Array.<String>} [partition2] 
     * @param {Array.<String>} [properties] Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}
     * @param {module:api/TransportPlivoApi~apiTransportPlivoGetCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TransportPlivoGet>}
     */
    apiTransportPlivoGetCollection(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'dataSegmentCode': opts['dataSegmentCode'],
        'dataSegmentCode[]': this.apiClient.buildCollectionParam(opts['dataSegmentCode2'], 'multi'),
        'partition': opts['partition'],
        'partition[]': this.apiClient.buildCollectionParam(opts['partition2'], 'multi'),
        'properties[]': this.apiClient.buildCollectionParam(opts['properties'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = [TransportPlivoGet];
      return this.apiClient.callApi(
        '/api/transport-plivo', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportPlivoIdDelete operation.
     * @callback module:api/TransportPlivoApi~apiTransportPlivoIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes the TransportPlivo resource.
     * Removes the TransportPlivo resource.
     * @param {String} id TransportPlivo identifier
     * @param {module:api/TransportPlivoApi~apiTransportPlivoIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiTransportPlivoIdDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportPlivoIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/transport-plivo/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportPlivoIdGet operation.
     * @callback module:api/TransportPlivoApi~apiTransportPlivoIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportPlivoGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a TransportPlivo resource.
     * Retrieves a TransportPlivo resource.
     * @param {String} id TransportPlivo identifier
     * @param {module:api/TransportPlivoApi~apiTransportPlivoIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportPlivoGet}
     */
    apiTransportPlivoIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportPlivoIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportPlivoGet;
      return this.apiClient.callApi(
        '/api/transport-plivo/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportPlivoIdPatch operation.
     * @callback module:api/TransportPlivoApi~apiTransportPlivoIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportPlivoGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the TransportPlivo resource.
     * Updates the TransportPlivo resource.
     * @param {String} id TransportPlivo identifier
     * @param {module:model/TransportPlivoPatch} transportPlivoPatch The updated TransportPlivo resource
     * @param {module:api/TransportPlivoApi~apiTransportPlivoIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportPlivoGet}
     */
    apiTransportPlivoIdPatch(id, transportPlivoPatch, callback) {
      let postBody = transportPlivoPatch;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportPlivoIdPatch");
      }
      // verify the required parameter 'transportPlivoPatch' is set
      if (transportPlivoPatch === undefined || transportPlivoPatch === null) {
        throw new Error("Missing the required parameter 'transportPlivoPatch' when calling apiTransportPlivoIdPatch");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/merge-patch+json'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportPlivoGet;
      return this.apiClient.callApi(
        '/api/transport-plivo/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportPlivoIdPut operation.
     * @callback module:api/TransportPlivoApi~apiTransportPlivoIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportPlivoGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Replaces the TransportPlivo resource.
     * Replaces the TransportPlivo resource.
     * @param {String} id TransportPlivo identifier
     * @param {module:model/TransportPlivoPut} transportPlivoPut The updated TransportPlivo resource
     * @param {module:api/TransportPlivoApi~apiTransportPlivoIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportPlivoGet}
     */
    apiTransportPlivoIdPut(id, transportPlivoPut, callback) {
      let postBody = transportPlivoPut;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportPlivoIdPut");
      }
      // verify the required parameter 'transportPlivoPut' is set
      if (transportPlivoPut === undefined || transportPlivoPut === null) {
        throw new Error("Missing the required parameter 'transportPlivoPut' when calling apiTransportPlivoIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportPlivoGet;
      return this.apiClient.callApi(
        '/api/transport-plivo/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportPlivoPost operation.
     * @callback module:api/TransportPlivoApi~apiTransportPlivoPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportPlivoGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a TransportPlivo resource.
     * Creates a TransportPlivo resource.
     * @param {module:model/TransportPlivoPost} transportPlivoPost The new TransportPlivo resource
     * @param {module:api/TransportPlivoApi~apiTransportPlivoPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportPlivoGet}
     */
    apiTransportPlivoPost(transportPlivoPost, callback) {
      let postBody = transportPlivoPost;
      // verify the required parameter 'transportPlivoPost' is set
      if (transportPlivoPost === undefined || transportPlivoPost === null) {
        throw new Error("Missing the required parameter 'transportPlivoPost' when calling apiTransportPlivoPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportPlivoGet;
      return this.apiClient.callApi(
        '/api/transport-plivo', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
