/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiTransportClickSendGetCollection200Response from '../model/ApiTransportClickSendGetCollection200Response';
import TransportClickSendGet from '../model/TransportClickSendGet';
import TransportClickSendJsonldGet from '../model/TransportClickSendJsonldGet';
import TransportClickSendJsonldPost from '../model/TransportClickSendJsonldPost';
import TransportClickSendJsonldPut from '../model/TransportClickSendJsonldPut';
import TransportClickSendPatch from '../model/TransportClickSendPatch';
import TransportClickSendPost from '../model/TransportClickSendPost';
import TransportClickSendPut from '../model/TransportClickSendPut';

/**
* TransportClickSend service.
* @module api/TransportClickSendApi
* @version 1.7.0
*/
export default class TransportClickSendApi {

    /**
    * Constructs a new TransportClickSendApi. 
    * @alias module:api/TransportClickSendApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiTransportClickSendGetCollection operation.
     * @callback module:api/TransportClickSendApi~apiTransportClickSendGetCollectionCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TransportClickSendGet>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the collection of TransportClickSend resources.
     * Retrieves the collection of TransportClickSend resources.
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 1)] The collection page number
     * @param {String} [dataSegmentCode] 
     * @param {Array.<String>} [dataSegmentCode2] 
     * @param {String} [partition] 
     * @param {Array.<String>} [partition2] 
     * @param {Array.<String>} [properties] Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}
     * @param {module:api/TransportClickSendApi~apiTransportClickSendGetCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TransportClickSendGet>}
     */
    apiTransportClickSendGetCollection(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'dataSegmentCode': opts['dataSegmentCode'],
        'dataSegmentCode[]': this.apiClient.buildCollectionParam(opts['dataSegmentCode2'], 'multi'),
        'partition': opts['partition'],
        'partition[]': this.apiClient.buildCollectionParam(opts['partition2'], 'multi'),
        'properties[]': this.apiClient.buildCollectionParam(opts['properties'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = [TransportClickSendGet];
      return this.apiClient.callApi(
        '/api/transport-click-send', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportClickSendIdDelete operation.
     * @callback module:api/TransportClickSendApi~apiTransportClickSendIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes the TransportClickSend resource.
     * Removes the TransportClickSend resource.
     * @param {String} id TransportClickSend identifier
     * @param {module:api/TransportClickSendApi~apiTransportClickSendIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiTransportClickSendIdDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportClickSendIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/transport-click-send/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportClickSendIdGet operation.
     * @callback module:api/TransportClickSendApi~apiTransportClickSendIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportClickSendGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a TransportClickSend resource.
     * Retrieves a TransportClickSend resource.
     * @param {String} id TransportClickSend identifier
     * @param {module:api/TransportClickSendApi~apiTransportClickSendIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportClickSendGet}
     */
    apiTransportClickSendIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportClickSendIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportClickSendGet;
      return this.apiClient.callApi(
        '/api/transport-click-send/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportClickSendIdPatch operation.
     * @callback module:api/TransportClickSendApi~apiTransportClickSendIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportClickSendGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the TransportClickSend resource.
     * Updates the TransportClickSend resource.
     * @param {String} id TransportClickSend identifier
     * @param {module:model/TransportClickSendPatch} transportClickSendPatch The updated TransportClickSend resource
     * @param {module:api/TransportClickSendApi~apiTransportClickSendIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportClickSendGet}
     */
    apiTransportClickSendIdPatch(id, transportClickSendPatch, callback) {
      let postBody = transportClickSendPatch;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportClickSendIdPatch");
      }
      // verify the required parameter 'transportClickSendPatch' is set
      if (transportClickSendPatch === undefined || transportClickSendPatch === null) {
        throw new Error("Missing the required parameter 'transportClickSendPatch' when calling apiTransportClickSendIdPatch");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/merge-patch+json'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportClickSendGet;
      return this.apiClient.callApi(
        '/api/transport-click-send/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportClickSendIdPut operation.
     * @callback module:api/TransportClickSendApi~apiTransportClickSendIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportClickSendGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Replaces the TransportClickSend resource.
     * Replaces the TransportClickSend resource.
     * @param {String} id TransportClickSend identifier
     * @param {module:model/TransportClickSendPut} transportClickSendPut The updated TransportClickSend resource
     * @param {module:api/TransportClickSendApi~apiTransportClickSendIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportClickSendGet}
     */
    apiTransportClickSendIdPut(id, transportClickSendPut, callback) {
      let postBody = transportClickSendPut;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportClickSendIdPut");
      }
      // verify the required parameter 'transportClickSendPut' is set
      if (transportClickSendPut === undefined || transportClickSendPut === null) {
        throw new Error("Missing the required parameter 'transportClickSendPut' when calling apiTransportClickSendIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportClickSendGet;
      return this.apiClient.callApi(
        '/api/transport-click-send/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportClickSendPost operation.
     * @callback module:api/TransportClickSendApi~apiTransportClickSendPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportClickSendGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a TransportClickSend resource.
     * Creates a TransportClickSend resource.
     * @param {module:model/TransportClickSendPost} transportClickSendPost The new TransportClickSend resource
     * @param {module:api/TransportClickSendApi~apiTransportClickSendPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportClickSendGet}
     */
    apiTransportClickSendPost(transportClickSendPost, callback) {
      let postBody = transportClickSendPost;
      // verify the required parameter 'transportClickSendPost' is set
      if (transportClickSendPost === undefined || transportClickSendPost === null) {
        throw new Error("Missing the required parameter 'transportClickSendPost' when calling apiTransportClickSendPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportClickSendGet;
      return this.apiClient.callApi(
        '/api/transport-click-send', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
