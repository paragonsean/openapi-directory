/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiTransportGotifyGetCollection200Response from '../model/ApiTransportGotifyGetCollection200Response';
import TransportGotifyGet from '../model/TransportGotifyGet';
import TransportGotifyJsonldGet from '../model/TransportGotifyJsonldGet';
import TransportGotifyJsonldPost from '../model/TransportGotifyJsonldPost';
import TransportGotifyJsonldPut from '../model/TransportGotifyJsonldPut';
import TransportGotifyPatch from '../model/TransportGotifyPatch';
import TransportGotifyPost from '../model/TransportGotifyPost';
import TransportGotifyPut from '../model/TransportGotifyPut';

/**
* TransportGotify service.
* @module api/TransportGotifyApi
* @version 1.7.0
*/
export default class TransportGotifyApi {

    /**
    * Constructs a new TransportGotifyApi. 
    * @alias module:api/TransportGotifyApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiTransportGotifyGetCollection operation.
     * @callback module:api/TransportGotifyApi~apiTransportGotifyGetCollectionCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TransportGotifyGet>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the collection of TransportGotify resources.
     * Retrieves the collection of TransportGotify resources.
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 1)] The collection page number
     * @param {String} [dataSegmentCode] 
     * @param {Array.<String>} [dataSegmentCode2] 
     * @param {String} [partition] 
     * @param {Array.<String>} [partition2] 
     * @param {Array.<String>} [properties] Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}
     * @param {module:api/TransportGotifyApi~apiTransportGotifyGetCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TransportGotifyGet>}
     */
    apiTransportGotifyGetCollection(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'dataSegmentCode': opts['dataSegmentCode'],
        'dataSegmentCode[]': this.apiClient.buildCollectionParam(opts['dataSegmentCode2'], 'multi'),
        'partition': opts['partition'],
        'partition[]': this.apiClient.buildCollectionParam(opts['partition2'], 'multi'),
        'properties[]': this.apiClient.buildCollectionParam(opts['properties'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = [TransportGotifyGet];
      return this.apiClient.callApi(
        '/api/transport-gotify', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportGotifyIdDelete operation.
     * @callback module:api/TransportGotifyApi~apiTransportGotifyIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes the TransportGotify resource.
     * Removes the TransportGotify resource.
     * @param {String} id TransportGotify identifier
     * @param {module:api/TransportGotifyApi~apiTransportGotifyIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiTransportGotifyIdDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportGotifyIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/transport-gotify/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportGotifyIdGet operation.
     * @callback module:api/TransportGotifyApi~apiTransportGotifyIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportGotifyGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a TransportGotify resource.
     * Retrieves a TransportGotify resource.
     * @param {String} id TransportGotify identifier
     * @param {module:api/TransportGotifyApi~apiTransportGotifyIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportGotifyGet}
     */
    apiTransportGotifyIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportGotifyIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportGotifyGet;
      return this.apiClient.callApi(
        '/api/transport-gotify/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportGotifyIdPatch operation.
     * @callback module:api/TransportGotifyApi~apiTransportGotifyIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportGotifyGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the TransportGotify resource.
     * Updates the TransportGotify resource.
     * @param {String} id TransportGotify identifier
     * @param {module:model/TransportGotifyPatch} transportGotifyPatch The updated TransportGotify resource
     * @param {module:api/TransportGotifyApi~apiTransportGotifyIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportGotifyGet}
     */
    apiTransportGotifyIdPatch(id, transportGotifyPatch, callback) {
      let postBody = transportGotifyPatch;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportGotifyIdPatch");
      }
      // verify the required parameter 'transportGotifyPatch' is set
      if (transportGotifyPatch === undefined || transportGotifyPatch === null) {
        throw new Error("Missing the required parameter 'transportGotifyPatch' when calling apiTransportGotifyIdPatch");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/merge-patch+json'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportGotifyGet;
      return this.apiClient.callApi(
        '/api/transport-gotify/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportGotifyIdPut operation.
     * @callback module:api/TransportGotifyApi~apiTransportGotifyIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportGotifyGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Replaces the TransportGotify resource.
     * Replaces the TransportGotify resource.
     * @param {String} id TransportGotify identifier
     * @param {module:model/TransportGotifyPut} transportGotifyPut The updated TransportGotify resource
     * @param {module:api/TransportGotifyApi~apiTransportGotifyIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportGotifyGet}
     */
    apiTransportGotifyIdPut(id, transportGotifyPut, callback) {
      let postBody = transportGotifyPut;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportGotifyIdPut");
      }
      // verify the required parameter 'transportGotifyPut' is set
      if (transportGotifyPut === undefined || transportGotifyPut === null) {
        throw new Error("Missing the required parameter 'transportGotifyPut' when calling apiTransportGotifyIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportGotifyGet;
      return this.apiClient.callApi(
        '/api/transport-gotify/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportGotifyPost operation.
     * @callback module:api/TransportGotifyApi~apiTransportGotifyPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportGotifyGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a TransportGotify resource.
     * Creates a TransportGotify resource.
     * @param {module:model/TransportGotifyPost} transportGotifyPost The new TransportGotify resource
     * @param {module:api/TransportGotifyApi~apiTransportGotifyPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportGotifyGet}
     */
    apiTransportGotifyPost(transportGotifyPost, callback) {
      let postBody = transportGotifyPost;
      // verify the required parameter 'transportGotifyPost' is set
      if (transportGotifyPost === undefined || transportGotifyPost === null) {
        throw new Error("Missing the required parameter 'transportGotifyPost' when calling apiTransportGotifyPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportGotifyGet;
      return this.apiClient.callApi(
        '/api/transport-gotify', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
