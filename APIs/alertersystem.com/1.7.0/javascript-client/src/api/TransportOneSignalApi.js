/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiTransportOneSignalGetCollection200Response from '../model/ApiTransportOneSignalGetCollection200Response';
import TransportOneSignalGet from '../model/TransportOneSignalGet';
import TransportOneSignalJsonldGet from '../model/TransportOneSignalJsonldGet';
import TransportOneSignalJsonldPost from '../model/TransportOneSignalJsonldPost';
import TransportOneSignalJsonldPut from '../model/TransportOneSignalJsonldPut';
import TransportOneSignalPatch from '../model/TransportOneSignalPatch';
import TransportOneSignalPost from '../model/TransportOneSignalPost';
import TransportOneSignalPut from '../model/TransportOneSignalPut';

/**
* TransportOneSignal service.
* @module api/TransportOneSignalApi
* @version 1.7.0
*/
export default class TransportOneSignalApi {

    /**
    * Constructs a new TransportOneSignalApi. 
    * @alias module:api/TransportOneSignalApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiTransportOneSignalGetCollection operation.
     * @callback module:api/TransportOneSignalApi~apiTransportOneSignalGetCollectionCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TransportOneSignalGet>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the collection of TransportOneSignal resources.
     * Retrieves the collection of TransportOneSignal resources.
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 1)] The collection page number
     * @param {String} [dataSegmentCode] 
     * @param {Array.<String>} [dataSegmentCode2] 
     * @param {String} [partition] 
     * @param {Array.<String>} [partition2] 
     * @param {Array.<String>} [properties] Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}
     * @param {module:api/TransportOneSignalApi~apiTransportOneSignalGetCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TransportOneSignalGet>}
     */
    apiTransportOneSignalGetCollection(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'dataSegmentCode': opts['dataSegmentCode'],
        'dataSegmentCode[]': this.apiClient.buildCollectionParam(opts['dataSegmentCode2'], 'multi'),
        'partition': opts['partition'],
        'partition[]': this.apiClient.buildCollectionParam(opts['partition2'], 'multi'),
        'properties[]': this.apiClient.buildCollectionParam(opts['properties'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = [TransportOneSignalGet];
      return this.apiClient.callApi(
        '/api/transport-one-signal', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportOneSignalIdDelete operation.
     * @callback module:api/TransportOneSignalApi~apiTransportOneSignalIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes the TransportOneSignal resource.
     * Removes the TransportOneSignal resource.
     * @param {String} id TransportOneSignal identifier
     * @param {module:api/TransportOneSignalApi~apiTransportOneSignalIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiTransportOneSignalIdDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportOneSignalIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/transport-one-signal/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportOneSignalIdGet operation.
     * @callback module:api/TransportOneSignalApi~apiTransportOneSignalIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportOneSignalGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a TransportOneSignal resource.
     * Retrieves a TransportOneSignal resource.
     * @param {String} id TransportOneSignal identifier
     * @param {module:api/TransportOneSignalApi~apiTransportOneSignalIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportOneSignalGet}
     */
    apiTransportOneSignalIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportOneSignalIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportOneSignalGet;
      return this.apiClient.callApi(
        '/api/transport-one-signal/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportOneSignalIdPatch operation.
     * @callback module:api/TransportOneSignalApi~apiTransportOneSignalIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportOneSignalGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the TransportOneSignal resource.
     * Updates the TransportOneSignal resource.
     * @param {String} id TransportOneSignal identifier
     * @param {module:model/TransportOneSignalPatch} transportOneSignalPatch The updated TransportOneSignal resource
     * @param {module:api/TransportOneSignalApi~apiTransportOneSignalIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportOneSignalGet}
     */
    apiTransportOneSignalIdPatch(id, transportOneSignalPatch, callback) {
      let postBody = transportOneSignalPatch;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportOneSignalIdPatch");
      }
      // verify the required parameter 'transportOneSignalPatch' is set
      if (transportOneSignalPatch === undefined || transportOneSignalPatch === null) {
        throw new Error("Missing the required parameter 'transportOneSignalPatch' when calling apiTransportOneSignalIdPatch");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/merge-patch+json'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportOneSignalGet;
      return this.apiClient.callApi(
        '/api/transport-one-signal/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportOneSignalIdPut operation.
     * @callback module:api/TransportOneSignalApi~apiTransportOneSignalIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportOneSignalGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Replaces the TransportOneSignal resource.
     * Replaces the TransportOneSignal resource.
     * @param {String} id TransportOneSignal identifier
     * @param {module:model/TransportOneSignalPut} transportOneSignalPut The updated TransportOneSignal resource
     * @param {module:api/TransportOneSignalApi~apiTransportOneSignalIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportOneSignalGet}
     */
    apiTransportOneSignalIdPut(id, transportOneSignalPut, callback) {
      let postBody = transportOneSignalPut;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportOneSignalIdPut");
      }
      // verify the required parameter 'transportOneSignalPut' is set
      if (transportOneSignalPut === undefined || transportOneSignalPut === null) {
        throw new Error("Missing the required parameter 'transportOneSignalPut' when calling apiTransportOneSignalIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportOneSignalGet;
      return this.apiClient.callApi(
        '/api/transport-one-signal/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportOneSignalPost operation.
     * @callback module:api/TransportOneSignalApi~apiTransportOneSignalPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportOneSignalGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a TransportOneSignal resource.
     * Creates a TransportOneSignal resource.
     * @param {module:model/TransportOneSignalPost} transportOneSignalPost The new TransportOneSignal resource
     * @param {module:api/TransportOneSignalApi~apiTransportOneSignalPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportOneSignalGet}
     */
    apiTransportOneSignalPost(transportOneSignalPost, callback) {
      let postBody = transportOneSignalPost;
      // verify the required parameter 'transportOneSignalPost' is set
      if (transportOneSignalPost === undefined || transportOneSignalPost === null) {
        throw new Error("Missing the required parameter 'transportOneSignalPost' when calling apiTransportOneSignalPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportOneSignalGet;
      return this.apiClient.callApi(
        '/api/transport-one-signal', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
