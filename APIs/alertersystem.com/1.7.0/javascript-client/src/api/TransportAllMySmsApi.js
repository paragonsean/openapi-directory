/**
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiTransportAllMySmsGetCollection200Response from '../model/ApiTransportAllMySmsGetCollection200Response';
import TransportAllMySmsGet from '../model/TransportAllMySmsGet';
import TransportAllMySmsJsonldGet from '../model/TransportAllMySmsJsonldGet';
import TransportAllMySmsJsonldPost from '../model/TransportAllMySmsJsonldPost';
import TransportAllMySmsJsonldPut from '../model/TransportAllMySmsJsonldPut';
import TransportAllMySmsPatch from '../model/TransportAllMySmsPatch';
import TransportAllMySmsPost from '../model/TransportAllMySmsPost';
import TransportAllMySmsPut from '../model/TransportAllMySmsPut';

/**
* TransportAllMySms service.
* @module api/TransportAllMySmsApi
* @version 1.7.0
*/
export default class TransportAllMySmsApi {

    /**
    * Constructs a new TransportAllMySmsApi. 
    * @alias module:api/TransportAllMySmsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiTransportAllMySmsGetCollection operation.
     * @callback module:api/TransportAllMySmsApi~apiTransportAllMySmsGetCollectionCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TransportAllMySmsGet>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the collection of TransportAllMySms resources.
     * Retrieves the collection of TransportAllMySms resources.
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 1)] The collection page number
     * @param {String} [dataSegmentCode] 
     * @param {Array.<String>} [dataSegmentCode2] 
     * @param {String} [partition] 
     * @param {Array.<String>} [partition2] 
     * @param {Array.<String>} [properties] Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}
     * @param {module:api/TransportAllMySmsApi~apiTransportAllMySmsGetCollectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TransportAllMySmsGet>}
     */
    apiTransportAllMySmsGetCollection(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'dataSegmentCode': opts['dataSegmentCode'],
        'dataSegmentCode[]': this.apiClient.buildCollectionParam(opts['dataSegmentCode2'], 'multi'),
        'partition': opts['partition'],
        'partition[]': this.apiClient.buildCollectionParam(opts['partition2'], 'multi'),
        'properties[]': this.apiClient.buildCollectionParam(opts['properties'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = [TransportAllMySmsGet];
      return this.apiClient.callApi(
        '/api/transport-all-my-sms', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportAllMySmsIdDelete operation.
     * @callback module:api/TransportAllMySmsApi~apiTransportAllMySmsIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes the TransportAllMySms resource.
     * Removes the TransportAllMySms resource.
     * @param {String} id TransportAllMySms identifier
     * @param {module:api/TransportAllMySmsApi~apiTransportAllMySmsIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiTransportAllMySmsIdDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportAllMySmsIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/transport-all-my-sms/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportAllMySmsIdGet operation.
     * @callback module:api/TransportAllMySmsApi~apiTransportAllMySmsIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportAllMySmsGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a TransportAllMySms resource.
     * Retrieves a TransportAllMySms resource.
     * @param {String} id TransportAllMySms identifier
     * @param {module:api/TransportAllMySmsApi~apiTransportAllMySmsIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportAllMySmsGet}
     */
    apiTransportAllMySmsIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportAllMySmsIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportAllMySmsGet;
      return this.apiClient.callApi(
        '/api/transport-all-my-sms/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportAllMySmsIdPatch operation.
     * @callback module:api/TransportAllMySmsApi~apiTransportAllMySmsIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportAllMySmsGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the TransportAllMySms resource.
     * Updates the TransportAllMySms resource.
     * @param {String} id TransportAllMySms identifier
     * @param {module:model/TransportAllMySmsPatch} transportAllMySmsPatch The updated TransportAllMySms resource
     * @param {module:api/TransportAllMySmsApi~apiTransportAllMySmsIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportAllMySmsGet}
     */
    apiTransportAllMySmsIdPatch(id, transportAllMySmsPatch, callback) {
      let postBody = transportAllMySmsPatch;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportAllMySmsIdPatch");
      }
      // verify the required parameter 'transportAllMySmsPatch' is set
      if (transportAllMySmsPatch === undefined || transportAllMySmsPatch === null) {
        throw new Error("Missing the required parameter 'transportAllMySmsPatch' when calling apiTransportAllMySmsIdPatch");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/merge-patch+json'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportAllMySmsGet;
      return this.apiClient.callApi(
        '/api/transport-all-my-sms/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportAllMySmsIdPut operation.
     * @callback module:api/TransportAllMySmsApi~apiTransportAllMySmsIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportAllMySmsGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Replaces the TransportAllMySms resource.
     * Replaces the TransportAllMySms resource.
     * @param {String} id TransportAllMySms identifier
     * @param {module:model/TransportAllMySmsPut} transportAllMySmsPut The updated TransportAllMySms resource
     * @param {module:api/TransportAllMySmsApi~apiTransportAllMySmsIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportAllMySmsGet}
     */
    apiTransportAllMySmsIdPut(id, transportAllMySmsPut, callback) {
      let postBody = transportAllMySmsPut;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiTransportAllMySmsIdPut");
      }
      // verify the required parameter 'transportAllMySmsPut' is set
      if (transportAllMySmsPut === undefined || transportAllMySmsPut === null) {
        throw new Error("Missing the required parameter 'transportAllMySmsPut' when calling apiTransportAllMySmsIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportAllMySmsGet;
      return this.apiClient.callApi(
        '/api/transport-all-my-sms/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiTransportAllMySmsPost operation.
     * @callback module:api/TransportAllMySmsApi~apiTransportAllMySmsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransportAllMySmsGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a TransportAllMySms resource.
     * Creates a TransportAllMySms resource.
     * @param {module:model/TransportAllMySmsPost} transportAllMySmsPost The new TransportAllMySms resource
     * @param {module:api/TransportAllMySmsApi~apiTransportAllMySmsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransportAllMySmsGet}
     */
    apiTransportAllMySmsPost(transportAllMySmsPost, callback) {
      let postBody = transportAllMySmsPost;
      // verify the required parameter 'transportAllMySmsPost' is set
      if (transportAllMySmsPost === undefined || transportAllMySmsPost === null) {
        throw new Error("Missing the required parameter 'transportAllMySmsPost' when calling apiTransportAllMySmsPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = ['application/json', 'application/ld+json', 'text/html'];
      let accepts = ['application/json', 'application/ld+json', 'text/html'];
      let returnType = TransportAllMySmsGet;
      return this.apiClient.callApi(
        '/api/transport-all-my-sms', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
