/*
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiTransportBandwidthGetCollection200Response;
import org.openapitools.client.model.TransportBandwidthGet;
import org.openapitools.client.model.TransportBandwidthJsonldGet;
import org.openapitools.client.model.TransportBandwidthJsonldPost;
import org.openapitools.client.model.TransportBandwidthJsonldPut;
import org.openapitools.client.model.TransportBandwidthPatch;
import org.openapitools.client.model.TransportBandwidthPost;
import org.openapitools.client.model.TransportBandwidthPut;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransportBandwidthApi
 */
@Disabled
public class TransportBandwidthApiTest {

    private final TransportBandwidthApi api = new TransportBandwidthApi();

    /**
     * Retrieves the collection of TransportBandwidth resources.
     *
     * Retrieves the collection of TransportBandwidth resources.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportBandwidthGetCollectionTest() throws ApiException {
        Integer page = null;
        String dataSegmentCode = null;
        List<String> dataSegmentCode2 = null;
        String partition = null;
        List<String> partition2 = null;
        List<String> properties = null;
        List<TransportBandwidthGet> response = api.apiTransportBandwidthGetCollection(page, dataSegmentCode, dataSegmentCode2, partition, partition2, properties);
        // TODO: test validations
    }

    /**
     * Removes the TransportBandwidth resource.
     *
     * Removes the TransportBandwidth resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportBandwidthIdDeleteTest() throws ApiException {
        String id = null;
        api.apiTransportBandwidthIdDelete(id);
        // TODO: test validations
    }

    /**
     * Retrieves a TransportBandwidth resource.
     *
     * Retrieves a TransportBandwidth resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportBandwidthIdGetTest() throws ApiException {
        String id = null;
        TransportBandwidthGet response = api.apiTransportBandwidthIdGet(id);
        // TODO: test validations
    }

    /**
     * Updates the TransportBandwidth resource.
     *
     * Updates the TransportBandwidth resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportBandwidthIdPatchTest() throws ApiException {
        String id = null;
        TransportBandwidthPatch transportBandwidthPatch = null;
        TransportBandwidthGet response = api.apiTransportBandwidthIdPatch(id, transportBandwidthPatch);
        // TODO: test validations
    }

    /**
     * Replaces the TransportBandwidth resource.
     *
     * Replaces the TransportBandwidth resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportBandwidthIdPutTest() throws ApiException {
        String id = null;
        TransportBandwidthPut transportBandwidthPut = null;
        TransportBandwidthGet response = api.apiTransportBandwidthIdPut(id, transportBandwidthPut);
        // TODO: test validations
    }

    /**
     * Creates a TransportBandwidth resource.
     *
     * Creates a TransportBandwidth resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportBandwidthPostTest() throws ApiException {
        TransportBandwidthPost transportBandwidthPost = null;
        TransportBandwidthGet response = api.apiTransportBandwidthPost(transportBandwidthPost);
        // TODO: test validations
    }

}
