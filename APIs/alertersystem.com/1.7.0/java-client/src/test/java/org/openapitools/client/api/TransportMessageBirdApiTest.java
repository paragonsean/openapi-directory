/*
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiTransportMessageBirdGetCollection200Response;
import org.openapitools.client.model.TransportMessageBirdGet;
import org.openapitools.client.model.TransportMessageBirdJsonldGet;
import org.openapitools.client.model.TransportMessageBirdJsonldPost;
import org.openapitools.client.model.TransportMessageBirdJsonldPut;
import org.openapitools.client.model.TransportMessageBirdPatch;
import org.openapitools.client.model.TransportMessageBirdPost;
import org.openapitools.client.model.TransportMessageBirdPut;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransportMessageBirdApi
 */
@Disabled
public class TransportMessageBirdApiTest {

    private final TransportMessageBirdApi api = new TransportMessageBirdApi();

    /**
     * Retrieves the collection of TransportMessageBird resources.
     *
     * Retrieves the collection of TransportMessageBird resources.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportMessageBirdGetCollectionTest() throws ApiException {
        Integer page = null;
        String dataSegmentCode = null;
        List<String> dataSegmentCode2 = null;
        String partition = null;
        List<String> partition2 = null;
        List<String> properties = null;
        List<TransportMessageBirdGet> response = api.apiTransportMessageBirdGetCollection(page, dataSegmentCode, dataSegmentCode2, partition, partition2, properties);
        // TODO: test validations
    }

    /**
     * Removes the TransportMessageBird resource.
     *
     * Removes the TransportMessageBird resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportMessageBirdIdDeleteTest() throws ApiException {
        String id = null;
        api.apiTransportMessageBirdIdDelete(id);
        // TODO: test validations
    }

    /**
     * Retrieves a TransportMessageBird resource.
     *
     * Retrieves a TransportMessageBird resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportMessageBirdIdGetTest() throws ApiException {
        String id = null;
        TransportMessageBirdGet response = api.apiTransportMessageBirdIdGet(id);
        // TODO: test validations
    }

    /**
     * Updates the TransportMessageBird resource.
     *
     * Updates the TransportMessageBird resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportMessageBirdIdPatchTest() throws ApiException {
        String id = null;
        TransportMessageBirdPatch transportMessageBirdPatch = null;
        TransportMessageBirdGet response = api.apiTransportMessageBirdIdPatch(id, transportMessageBirdPatch);
        // TODO: test validations
    }

    /**
     * Replaces the TransportMessageBird resource.
     *
     * Replaces the TransportMessageBird resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportMessageBirdIdPutTest() throws ApiException {
        String id = null;
        TransportMessageBirdPut transportMessageBirdPut = null;
        TransportMessageBirdGet response = api.apiTransportMessageBirdIdPut(id, transportMessageBirdPut);
        // TODO: test validations
    }

    /**
     * Creates a TransportMessageBird resource.
     *
     * Creates a TransportMessageBird resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportMessageBirdPostTest() throws ApiException {
        TransportMessageBirdPost transportMessageBirdPost = null;
        TransportMessageBirdGet response = api.apiTransportMessageBirdPost(transportMessageBirdPost);
        // TODO: test validations
    }

}
