/*
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiTransportSendberryGetCollection200Response;
import org.openapitools.client.model.TransportSendberryGet;
import org.openapitools.client.model.TransportSendberryJsonldGet;
import org.openapitools.client.model.TransportSendberryJsonldPost;
import org.openapitools.client.model.TransportSendberryJsonldPut;
import org.openapitools.client.model.TransportSendberryPatch;
import org.openapitools.client.model.TransportSendberryPost;
import org.openapitools.client.model.TransportSendberryPut;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransportSendberryApi
 */
@Disabled
public class TransportSendberryApiTest {

    private final TransportSendberryApi api = new TransportSendberryApi();

    /**
     * Retrieves the collection of TransportSendberry resources.
     *
     * Retrieves the collection of TransportSendberry resources.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportSendberryGetCollectionTest() throws ApiException {
        Integer page = null;
        String dataSegmentCode = null;
        List<String> dataSegmentCode2 = null;
        String partition = null;
        List<String> partition2 = null;
        List<String> properties = null;
        List<TransportSendberryGet> response = api.apiTransportSendberryGetCollection(page, dataSegmentCode, dataSegmentCode2, partition, partition2, properties);
        // TODO: test validations
    }

    /**
     * Removes the TransportSendberry resource.
     *
     * Removes the TransportSendberry resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportSendberryIdDeleteTest() throws ApiException {
        String id = null;
        api.apiTransportSendberryIdDelete(id);
        // TODO: test validations
    }

    /**
     * Retrieves a TransportSendberry resource.
     *
     * Retrieves a TransportSendberry resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportSendberryIdGetTest() throws ApiException {
        String id = null;
        TransportSendberryGet response = api.apiTransportSendberryIdGet(id);
        // TODO: test validations
    }

    /**
     * Updates the TransportSendberry resource.
     *
     * Updates the TransportSendberry resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportSendberryIdPatchTest() throws ApiException {
        String id = null;
        TransportSendberryPatch transportSendberryPatch = null;
        TransportSendberryGet response = api.apiTransportSendberryIdPatch(id, transportSendberryPatch);
        // TODO: test validations
    }

    /**
     * Replaces the TransportSendberry resource.
     *
     * Replaces the TransportSendberry resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportSendberryIdPutTest() throws ApiException {
        String id = null;
        TransportSendberryPut transportSendberryPut = null;
        TransportSendberryGet response = api.apiTransportSendberryIdPut(id, transportSendberryPut);
        // TODO: test validations
    }

    /**
     * Creates a TransportSendberry resource.
     *
     * Creates a TransportSendberry resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportSendberryPostTest() throws ApiException {
        TransportSendberryPost transportSendberryPost = null;
        TransportSendberryGet response = api.apiTransportSendberryPost(transportSendberryPost);
        // TODO: test validations
    }

}
