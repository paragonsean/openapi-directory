/*
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiTransportRocketChatGetCollection200Response;
import org.openapitools.client.model.TransportRocketChatGet;
import org.openapitools.client.model.TransportRocketChatJsonldGet;
import org.openapitools.client.model.TransportRocketChatJsonldPost;
import org.openapitools.client.model.TransportRocketChatJsonldPut;
import org.openapitools.client.model.TransportRocketChatPatch;
import org.openapitools.client.model.TransportRocketChatPost;
import org.openapitools.client.model.TransportRocketChatPut;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransportRocketChatApi
 */
@Disabled
public class TransportRocketChatApiTest {

    private final TransportRocketChatApi api = new TransportRocketChatApi();

    /**
     * Retrieves the collection of TransportRocketChat resources.
     *
     * Retrieves the collection of TransportRocketChat resources.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportRocketChatGetCollectionTest() throws ApiException {
        Integer page = null;
        String dataSegmentCode = null;
        List<String> dataSegmentCode2 = null;
        String partition = null;
        List<String> partition2 = null;
        List<String> properties = null;
        List<TransportRocketChatGet> response = api.apiTransportRocketChatGetCollection(page, dataSegmentCode, dataSegmentCode2, partition, partition2, properties);
        // TODO: test validations
    }

    /**
     * Removes the TransportRocketChat resource.
     *
     * Removes the TransportRocketChat resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportRocketChatIdDeleteTest() throws ApiException {
        String id = null;
        api.apiTransportRocketChatIdDelete(id);
        // TODO: test validations
    }

    /**
     * Retrieves a TransportRocketChat resource.
     *
     * Retrieves a TransportRocketChat resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportRocketChatIdGetTest() throws ApiException {
        String id = null;
        TransportRocketChatGet response = api.apiTransportRocketChatIdGet(id);
        // TODO: test validations
    }

    /**
     * Updates the TransportRocketChat resource.
     *
     * Updates the TransportRocketChat resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportRocketChatIdPatchTest() throws ApiException {
        String id = null;
        TransportRocketChatPatch transportRocketChatPatch = null;
        TransportRocketChatGet response = api.apiTransportRocketChatIdPatch(id, transportRocketChatPatch);
        // TODO: test validations
    }

    /**
     * Replaces the TransportRocketChat resource.
     *
     * Replaces the TransportRocketChat resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportRocketChatIdPutTest() throws ApiException {
        String id = null;
        TransportRocketChatPut transportRocketChatPut = null;
        TransportRocketChatGet response = api.apiTransportRocketChatIdPut(id, transportRocketChatPut);
        // TODO: test validations
    }

    /**
     * Creates a TransportRocketChat resource.
     *
     * Creates a TransportRocketChat resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportRocketChatPostTest() throws ApiException {
        TransportRocketChatPost transportRocketChatPost = null;
        TransportRocketChatGet response = api.apiTransportRocketChatPost(transportRocketChatPost);
        // TODO: test validations
    }

}
