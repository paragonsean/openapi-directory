/*
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiTransportMicrosoftTeamsGetCollection200Response;
import org.openapitools.client.model.TransportMicrosoftTeamsGet;
import org.openapitools.client.model.TransportMicrosoftTeamsJsonldGet;
import org.openapitools.client.model.TransportMicrosoftTeamsJsonldPost;
import org.openapitools.client.model.TransportMicrosoftTeamsJsonldPut;
import org.openapitools.client.model.TransportMicrosoftTeamsPatch;
import org.openapitools.client.model.TransportMicrosoftTeamsPost;
import org.openapitools.client.model.TransportMicrosoftTeamsPut;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransportMicrosoftTeamsApi
 */
@Disabled
public class TransportMicrosoftTeamsApiTest {

    private final TransportMicrosoftTeamsApi api = new TransportMicrosoftTeamsApi();

    /**
     * Retrieves the collection of TransportMicrosoftTeams resources.
     *
     * Retrieves the collection of TransportMicrosoftTeams resources.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportMicrosoftTeamsGetCollectionTest() throws ApiException {
        Integer page = null;
        String dataSegmentCode = null;
        List<String> dataSegmentCode2 = null;
        String partition = null;
        List<String> partition2 = null;
        List<String> properties = null;
        List<TransportMicrosoftTeamsGet> response = api.apiTransportMicrosoftTeamsGetCollection(page, dataSegmentCode, dataSegmentCode2, partition, partition2, properties);
        // TODO: test validations
    }

    /**
     * Removes the TransportMicrosoftTeams resource.
     *
     * Removes the TransportMicrosoftTeams resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportMicrosoftTeamsIdDeleteTest() throws ApiException {
        String id = null;
        api.apiTransportMicrosoftTeamsIdDelete(id);
        // TODO: test validations
    }

    /**
     * Retrieves a TransportMicrosoftTeams resource.
     *
     * Retrieves a TransportMicrosoftTeams resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportMicrosoftTeamsIdGetTest() throws ApiException {
        String id = null;
        TransportMicrosoftTeamsGet response = api.apiTransportMicrosoftTeamsIdGet(id);
        // TODO: test validations
    }

    /**
     * Updates the TransportMicrosoftTeams resource.
     *
     * Updates the TransportMicrosoftTeams resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportMicrosoftTeamsIdPatchTest() throws ApiException {
        String id = null;
        TransportMicrosoftTeamsPatch transportMicrosoftTeamsPatch = null;
        TransportMicrosoftTeamsGet response = api.apiTransportMicrosoftTeamsIdPatch(id, transportMicrosoftTeamsPatch);
        // TODO: test validations
    }

    /**
     * Replaces the TransportMicrosoftTeams resource.
     *
     * Replaces the TransportMicrosoftTeams resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportMicrosoftTeamsIdPutTest() throws ApiException {
        String id = null;
        TransportMicrosoftTeamsPut transportMicrosoftTeamsPut = null;
        TransportMicrosoftTeamsGet response = api.apiTransportMicrosoftTeamsIdPut(id, transportMicrosoftTeamsPut);
        // TODO: test validations
    }

    /**
     * Creates a TransportMicrosoftTeams resource.
     *
     * Creates a TransportMicrosoftTeams resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportMicrosoftTeamsPostTest() throws ApiException {
        TransportMicrosoftTeamsPost transportMicrosoftTeamsPost = null;
        TransportMicrosoftTeamsGet response = api.apiTransportMicrosoftTeamsPost(transportMicrosoftTeamsPost);
        // TODO: test validations
    }

}
