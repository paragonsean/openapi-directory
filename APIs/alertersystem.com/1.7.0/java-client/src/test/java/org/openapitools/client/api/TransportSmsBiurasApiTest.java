/*
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiTransportSmsBiurasGetCollection200Response;
import org.openapitools.client.model.TransportSmsBiurasGet;
import org.openapitools.client.model.TransportSmsBiurasJsonldGet;
import org.openapitools.client.model.TransportSmsBiurasJsonldPost;
import org.openapitools.client.model.TransportSmsBiurasJsonldPut;
import org.openapitools.client.model.TransportSmsBiurasPatch;
import org.openapitools.client.model.TransportSmsBiurasPost;
import org.openapitools.client.model.TransportSmsBiurasPut;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransportSmsBiurasApi
 */
@Disabled
public class TransportSmsBiurasApiTest {

    private final TransportSmsBiurasApi api = new TransportSmsBiurasApi();

    /**
     * Retrieves the collection of TransportSmsBiuras resources.
     *
     * Retrieves the collection of TransportSmsBiuras resources.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportSmsBiurasGetCollectionTest() throws ApiException {
        Integer page = null;
        String dataSegmentCode = null;
        List<String> dataSegmentCode2 = null;
        String partition = null;
        List<String> partition2 = null;
        List<String> properties = null;
        List<TransportSmsBiurasGet> response = api.apiTransportSmsBiurasGetCollection(page, dataSegmentCode, dataSegmentCode2, partition, partition2, properties);
        // TODO: test validations
    }

    /**
     * Removes the TransportSmsBiuras resource.
     *
     * Removes the TransportSmsBiuras resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportSmsBiurasIdDeleteTest() throws ApiException {
        String id = null;
        api.apiTransportSmsBiurasIdDelete(id);
        // TODO: test validations
    }

    /**
     * Retrieves a TransportSmsBiuras resource.
     *
     * Retrieves a TransportSmsBiuras resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportSmsBiurasIdGetTest() throws ApiException {
        String id = null;
        TransportSmsBiurasGet response = api.apiTransportSmsBiurasIdGet(id);
        // TODO: test validations
    }

    /**
     * Updates the TransportSmsBiuras resource.
     *
     * Updates the TransportSmsBiuras resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportSmsBiurasIdPatchTest() throws ApiException {
        String id = null;
        TransportSmsBiurasPatch transportSmsBiurasPatch = null;
        TransportSmsBiurasGet response = api.apiTransportSmsBiurasIdPatch(id, transportSmsBiurasPatch);
        // TODO: test validations
    }

    /**
     * Replaces the TransportSmsBiuras resource.
     *
     * Replaces the TransportSmsBiuras resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportSmsBiurasIdPutTest() throws ApiException {
        String id = null;
        TransportSmsBiurasPut transportSmsBiurasPut = null;
        TransportSmsBiurasGet response = api.apiTransportSmsBiurasIdPut(id, transportSmsBiurasPut);
        // TODO: test validations
    }

    /**
     * Creates a TransportSmsBiuras resource.
     *
     * Creates a TransportSmsBiuras resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportSmsBiurasPostTest() throws ApiException {
        TransportSmsBiurasPost transportSmsBiurasPost = null;
        TransportSmsBiurasGet response = api.apiTransportSmsBiurasPost(transportSmsBiurasPost);
        // TODO: test validations
    }

}
