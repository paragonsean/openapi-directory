/*
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiTransportSmsFactorGetCollection200Response;
import org.openapitools.client.model.TransportSmsFactorGet;
import org.openapitools.client.model.TransportSmsFactorJsonldGet;
import org.openapitools.client.model.TransportSmsFactorJsonldPost;
import org.openapitools.client.model.TransportSmsFactorJsonldPut;
import org.openapitools.client.model.TransportSmsFactorPatch;
import org.openapitools.client.model.TransportSmsFactorPost;
import org.openapitools.client.model.TransportSmsFactorPut;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransportSmsFactorApi
 */
@Disabled
public class TransportSmsFactorApiTest {

    private final TransportSmsFactorApi api = new TransportSmsFactorApi();

    /**
     * Retrieves the collection of TransportSmsFactor resources.
     *
     * Retrieves the collection of TransportSmsFactor resources.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportSmsFactorGetCollectionTest() throws ApiException {
        Integer page = null;
        String dataSegmentCode = null;
        List<String> dataSegmentCode2 = null;
        String partition = null;
        List<String> partition2 = null;
        List<String> properties = null;
        List<TransportSmsFactorGet> response = api.apiTransportSmsFactorGetCollection(page, dataSegmentCode, dataSegmentCode2, partition, partition2, properties);
        // TODO: test validations
    }

    /**
     * Removes the TransportSmsFactor resource.
     *
     * Removes the TransportSmsFactor resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportSmsFactorIdDeleteTest() throws ApiException {
        String id = null;
        api.apiTransportSmsFactorIdDelete(id);
        // TODO: test validations
    }

    /**
     * Retrieves a TransportSmsFactor resource.
     *
     * Retrieves a TransportSmsFactor resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportSmsFactorIdGetTest() throws ApiException {
        String id = null;
        TransportSmsFactorGet response = api.apiTransportSmsFactorIdGet(id);
        // TODO: test validations
    }

    /**
     * Updates the TransportSmsFactor resource.
     *
     * Updates the TransportSmsFactor resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportSmsFactorIdPatchTest() throws ApiException {
        String id = null;
        TransportSmsFactorPatch transportSmsFactorPatch = null;
        TransportSmsFactorGet response = api.apiTransportSmsFactorIdPatch(id, transportSmsFactorPatch);
        // TODO: test validations
    }

    /**
     * Replaces the TransportSmsFactor resource.
     *
     * Replaces the TransportSmsFactor resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportSmsFactorIdPutTest() throws ApiException {
        String id = null;
        TransportSmsFactorPut transportSmsFactorPut = null;
        TransportSmsFactorGet response = api.apiTransportSmsFactorIdPut(id, transportSmsFactorPut);
        // TODO: test validations
    }

    /**
     * Creates a TransportSmsFactor resource.
     *
     * Creates a TransportSmsFactor resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportSmsFactorPostTest() throws ApiException {
        TransportSmsFactorPost transportSmsFactorPost = null;
        TransportSmsFactorGet response = api.apiTransportSmsFactorPost(transportSmsFactorPost);
        // TODO: test validations
    }

}
