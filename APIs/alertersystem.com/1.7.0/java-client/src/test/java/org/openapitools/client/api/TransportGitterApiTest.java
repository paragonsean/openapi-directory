/*
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiTransportGitterGetCollection200Response;
import org.openapitools.client.model.TransportGitterGet;
import org.openapitools.client.model.TransportGitterJsonldGet;
import org.openapitools.client.model.TransportGitterJsonldPost;
import org.openapitools.client.model.TransportGitterJsonldPut;
import org.openapitools.client.model.TransportGitterPatch;
import org.openapitools.client.model.TransportGitterPost;
import org.openapitools.client.model.TransportGitterPut;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransportGitterApi
 */
@Disabled
public class TransportGitterApiTest {

    private final TransportGitterApi api = new TransportGitterApi();

    /**
     * Retrieves the collection of TransportGitter resources.
     *
     * Retrieves the collection of TransportGitter resources.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportGitterGetCollectionTest() throws ApiException {
        Integer page = null;
        String dataSegmentCode = null;
        List<String> dataSegmentCode2 = null;
        String partition = null;
        List<String> partition2 = null;
        List<String> properties = null;
        List<TransportGitterGet> response = api.apiTransportGitterGetCollection(page, dataSegmentCode, dataSegmentCode2, partition, partition2, properties);
        // TODO: test validations
    }

    /**
     * Removes the TransportGitter resource.
     *
     * Removes the TransportGitter resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportGitterIdDeleteTest() throws ApiException {
        String id = null;
        api.apiTransportGitterIdDelete(id);
        // TODO: test validations
    }

    /**
     * Retrieves a TransportGitter resource.
     *
     * Retrieves a TransportGitter resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportGitterIdGetTest() throws ApiException {
        String id = null;
        TransportGitterGet response = api.apiTransportGitterIdGet(id);
        // TODO: test validations
    }

    /**
     * Updates the TransportGitter resource.
     *
     * Updates the TransportGitter resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportGitterIdPatchTest() throws ApiException {
        String id = null;
        TransportGitterPatch transportGitterPatch = null;
        TransportGitterGet response = api.apiTransportGitterIdPatch(id, transportGitterPatch);
        // TODO: test validations
    }

    /**
     * Replaces the TransportGitter resource.
     *
     * Replaces the TransportGitter resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportGitterIdPutTest() throws ApiException {
        String id = null;
        TransportGitterPut transportGitterPut = null;
        TransportGitterGet response = api.apiTransportGitterIdPut(id, transportGitterPut);
        // TODO: test validations
    }

    /**
     * Creates a TransportGitter resource.
     *
     * Creates a TransportGitter resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportGitterPostTest() throws ApiException {
        TransportGitterPost transportGitterPost = null;
        TransportGitterGet response = api.apiTransportGitterPost(transportGitterPost);
        // TODO: test validations
    }

}
