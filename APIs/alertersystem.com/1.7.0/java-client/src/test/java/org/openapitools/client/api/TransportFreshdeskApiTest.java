/*
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiTransportFreshdeskGetCollection200Response;
import org.openapitools.client.model.TransportFreshdeskGet;
import org.openapitools.client.model.TransportFreshdeskJsonldGet;
import org.openapitools.client.model.TransportFreshdeskJsonldPost;
import org.openapitools.client.model.TransportFreshdeskJsonldPut;
import org.openapitools.client.model.TransportFreshdeskPatch;
import org.openapitools.client.model.TransportFreshdeskPost;
import org.openapitools.client.model.TransportFreshdeskPut;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransportFreshdeskApi
 */
@Disabled
public class TransportFreshdeskApiTest {

    private final TransportFreshdeskApi api = new TransportFreshdeskApi();

    /**
     * Retrieves the collection of TransportFreshdesk resources.
     *
     * Retrieves the collection of TransportFreshdesk resources.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportFreshdeskGetCollectionTest() throws ApiException {
        Integer page = null;
        String dataSegmentCode = null;
        List<String> dataSegmentCode2 = null;
        String partition = null;
        List<String> partition2 = null;
        List<String> properties = null;
        List<TransportFreshdeskGet> response = api.apiTransportFreshdeskGetCollection(page, dataSegmentCode, dataSegmentCode2, partition, partition2, properties);
        // TODO: test validations
    }

    /**
     * Removes the TransportFreshdesk resource.
     *
     * Removes the TransportFreshdesk resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportFreshdeskIdDeleteTest() throws ApiException {
        String id = null;
        api.apiTransportFreshdeskIdDelete(id);
        // TODO: test validations
    }

    /**
     * Retrieves a TransportFreshdesk resource.
     *
     * Retrieves a TransportFreshdesk resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportFreshdeskIdGetTest() throws ApiException {
        String id = null;
        TransportFreshdeskGet response = api.apiTransportFreshdeskIdGet(id);
        // TODO: test validations
    }

    /**
     * Updates the TransportFreshdesk resource.
     *
     * Updates the TransportFreshdesk resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportFreshdeskIdPatchTest() throws ApiException {
        String id = null;
        TransportFreshdeskPatch transportFreshdeskPatch = null;
        TransportFreshdeskGet response = api.apiTransportFreshdeskIdPatch(id, transportFreshdeskPatch);
        // TODO: test validations
    }

    /**
     * Replaces the TransportFreshdesk resource.
     *
     * Replaces the TransportFreshdesk resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportFreshdeskIdPutTest() throws ApiException {
        String id = null;
        TransportFreshdeskPut transportFreshdeskPut = null;
        TransportFreshdeskGet response = api.apiTransportFreshdeskIdPut(id, transportFreshdeskPut);
        // TODO: test validations
    }

    /**
     * Creates a TransportFreshdesk resource.
     *
     * Creates a TransportFreshdesk resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportFreshdeskPostTest() throws ApiException {
        TransportFreshdeskPost transportFreshdeskPost = null;
        TransportFreshdeskGet response = api.apiTransportFreshdeskPost(transportFreshdeskPost);
        // TODO: test validations
    }

}
