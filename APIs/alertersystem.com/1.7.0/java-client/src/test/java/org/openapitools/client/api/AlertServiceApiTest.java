/*
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AlertServiceGet;
import org.openapitools.client.model.AlertServiceJsonldGet;
import org.openapitools.client.model.AlertServiceJsonldPost;
import org.openapitools.client.model.AlertServiceJsonldPut;
import org.openapitools.client.model.AlertServicePatch;
import org.openapitools.client.model.AlertServicePost;
import org.openapitools.client.model.AlertServicePut;
import org.openapitools.client.model.ApiAlertServiceGetCollection200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AlertServiceApi
 */
@Disabled
public class AlertServiceApiTest {

    private final AlertServiceApi api = new AlertServiceApi();

    /**
     * Retrieves the collection of AlertService resources.
     *
     * Retrieves the collection of AlertService resources.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiAlertServiceGetCollectionTest() throws ApiException {
        Integer page = null;
        String dataSegmentCode = null;
        List<String> dataSegmentCode2 = null;
        String partition = null;
        List<String> partition2 = null;
        List<String> properties = null;
        List<AlertServiceGet> response = api.apiAlertServiceGetCollection(page, dataSegmentCode, dataSegmentCode2, partition, partition2, properties);
        // TODO: test validations
    }

    /**
     * Removes the AlertService resource.
     *
     * Removes the AlertService resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiAlertServiceIdDeleteTest() throws ApiException {
        String id = null;
        api.apiAlertServiceIdDelete(id);
        // TODO: test validations
    }

    /**
     * Retrieves a AlertService resource.
     *
     * Retrieves a AlertService resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiAlertServiceIdGetTest() throws ApiException {
        String id = null;
        AlertServiceGet response = api.apiAlertServiceIdGet(id);
        // TODO: test validations
    }

    /**
     * Updates the AlertService resource.
     *
     * Updates the AlertService resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiAlertServiceIdPatchTest() throws ApiException {
        String id = null;
        AlertServicePatch alertServicePatch = null;
        AlertServiceGet response = api.apiAlertServiceIdPatch(id, alertServicePatch);
        // TODO: test validations
    }

    /**
     * Replaces the AlertService resource.
     *
     * Replaces the AlertService resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiAlertServiceIdPutTest() throws ApiException {
        String id = null;
        AlertServicePut alertServicePut = null;
        AlertServiceGet response = api.apiAlertServiceIdPut(id, alertServicePut);
        // TODO: test validations
    }

    /**
     * Creates a AlertService resource.
     *
     * Creates a AlertService resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiAlertServicePostTest() throws ApiException {
        AlertServicePost alertServicePost = null;
        AlertServiceGet response = api.apiAlertServicePost(alertServicePost);
        // TODO: test validations
    }

}
