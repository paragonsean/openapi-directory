/*
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiTransportClickSendGetCollection200Response;
import org.openapitools.client.model.TransportClickSendGet;
import org.openapitools.client.model.TransportClickSendJsonldGet;
import org.openapitools.client.model.TransportClickSendJsonldPost;
import org.openapitools.client.model.TransportClickSendJsonldPut;
import org.openapitools.client.model.TransportClickSendPatch;
import org.openapitools.client.model.TransportClickSendPost;
import org.openapitools.client.model.TransportClickSendPut;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransportClickSendApi
 */
@Disabled
public class TransportClickSendApiTest {

    private final TransportClickSendApi api = new TransportClickSendApi();

    /**
     * Retrieves the collection of TransportClickSend resources.
     *
     * Retrieves the collection of TransportClickSend resources.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportClickSendGetCollectionTest() throws ApiException {
        Integer page = null;
        String dataSegmentCode = null;
        List<String> dataSegmentCode2 = null;
        String partition = null;
        List<String> partition2 = null;
        List<String> properties = null;
        List<TransportClickSendGet> response = api.apiTransportClickSendGetCollection(page, dataSegmentCode, dataSegmentCode2, partition, partition2, properties);
        // TODO: test validations
    }

    /**
     * Removes the TransportClickSend resource.
     *
     * Removes the TransportClickSend resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportClickSendIdDeleteTest() throws ApiException {
        String id = null;
        api.apiTransportClickSendIdDelete(id);
        // TODO: test validations
    }

    /**
     * Retrieves a TransportClickSend resource.
     *
     * Retrieves a TransportClickSend resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportClickSendIdGetTest() throws ApiException {
        String id = null;
        TransportClickSendGet response = api.apiTransportClickSendIdGet(id);
        // TODO: test validations
    }

    /**
     * Updates the TransportClickSend resource.
     *
     * Updates the TransportClickSend resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportClickSendIdPatchTest() throws ApiException {
        String id = null;
        TransportClickSendPatch transportClickSendPatch = null;
        TransportClickSendGet response = api.apiTransportClickSendIdPatch(id, transportClickSendPatch);
        // TODO: test validations
    }

    /**
     * Replaces the TransportClickSend resource.
     *
     * Replaces the TransportClickSend resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportClickSendIdPutTest() throws ApiException {
        String id = null;
        TransportClickSendPut transportClickSendPut = null;
        TransportClickSendGet response = api.apiTransportClickSendIdPut(id, transportClickSendPut);
        // TODO: test validations
    }

    /**
     * Creates a TransportClickSend resource.
     *
     * Creates a TransportClickSend resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportClickSendPostTest() throws ApiException {
        TransportClickSendPost transportClickSendPost = null;
        TransportClickSendGet response = api.apiTransportClickSendPost(transportClickSendPost);
        // TODO: test validations
    }

}
