/*
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiTransportOneSignalGetCollection200Response;
import org.openapitools.client.model.TransportOneSignalGet;
import org.openapitools.client.model.TransportOneSignalJsonldGet;
import org.openapitools.client.model.TransportOneSignalJsonldPost;
import org.openapitools.client.model.TransportOneSignalJsonldPut;
import org.openapitools.client.model.TransportOneSignalPatch;
import org.openapitools.client.model.TransportOneSignalPost;
import org.openapitools.client.model.TransportOneSignalPut;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransportOneSignalApi
 */
@Disabled
public class TransportOneSignalApiTest {

    private final TransportOneSignalApi api = new TransportOneSignalApi();

    /**
     * Retrieves the collection of TransportOneSignal resources.
     *
     * Retrieves the collection of TransportOneSignal resources.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportOneSignalGetCollectionTest() throws ApiException {
        Integer page = null;
        String dataSegmentCode = null;
        List<String> dataSegmentCode2 = null;
        String partition = null;
        List<String> partition2 = null;
        List<String> properties = null;
        List<TransportOneSignalGet> response = api.apiTransportOneSignalGetCollection(page, dataSegmentCode, dataSegmentCode2, partition, partition2, properties);
        // TODO: test validations
    }

    /**
     * Removes the TransportOneSignal resource.
     *
     * Removes the TransportOneSignal resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportOneSignalIdDeleteTest() throws ApiException {
        String id = null;
        api.apiTransportOneSignalIdDelete(id);
        // TODO: test validations
    }

    /**
     * Retrieves a TransportOneSignal resource.
     *
     * Retrieves a TransportOneSignal resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportOneSignalIdGetTest() throws ApiException {
        String id = null;
        TransportOneSignalGet response = api.apiTransportOneSignalIdGet(id);
        // TODO: test validations
    }

    /**
     * Updates the TransportOneSignal resource.
     *
     * Updates the TransportOneSignal resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportOneSignalIdPatchTest() throws ApiException {
        String id = null;
        TransportOneSignalPatch transportOneSignalPatch = null;
        TransportOneSignalGet response = api.apiTransportOneSignalIdPatch(id, transportOneSignalPatch);
        // TODO: test validations
    }

    /**
     * Replaces the TransportOneSignal resource.
     *
     * Replaces the TransportOneSignal resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportOneSignalIdPutTest() throws ApiException {
        String id = null;
        TransportOneSignalPut transportOneSignalPut = null;
        TransportOneSignalGet response = api.apiTransportOneSignalIdPut(id, transportOneSignalPut);
        // TODO: test validations
    }

    /**
     * Creates a TransportOneSignal resource.
     *
     * Creates a TransportOneSignal resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportOneSignalPostTest() throws ApiException {
        TransportOneSignalPost transportOneSignalPost = null;
        TransportOneSignalGet response = api.apiTransportOneSignalPost(transportOneSignalPost);
        // TODO: test validations
    }

}
