/*
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiTransportWebhookGetCollection200Response;
import org.openapitools.client.model.TransportWebhookGet;
import org.openapitools.client.model.TransportWebhookJsonldGet;
import org.openapitools.client.model.TransportWebhookJsonldPost;
import org.openapitools.client.model.TransportWebhookJsonldPut;
import org.openapitools.client.model.TransportWebhookPatch;
import org.openapitools.client.model.TransportWebhookPost;
import org.openapitools.client.model.TransportWebhookPut;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransportWebhookApi
 */
@Disabled
public class TransportWebhookApiTest {

    private final TransportWebhookApi api = new TransportWebhookApi();

    /**
     * Retrieves the collection of TransportWebhook resources.
     *
     * Retrieves the collection of TransportWebhook resources.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportWebhookGetCollectionTest() throws ApiException {
        Integer page = null;
        String dataSegmentCode = null;
        List<String> dataSegmentCode2 = null;
        String partition = null;
        List<String> partition2 = null;
        List<String> properties = null;
        List<TransportWebhookGet> response = api.apiTransportWebhookGetCollection(page, dataSegmentCode, dataSegmentCode2, partition, partition2, properties);
        // TODO: test validations
    }

    /**
     * Removes the TransportWebhook resource.
     *
     * Removes the TransportWebhook resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportWebhookIdDeleteTest() throws ApiException {
        String id = null;
        api.apiTransportWebhookIdDelete(id);
        // TODO: test validations
    }

    /**
     * Retrieves a TransportWebhook resource.
     *
     * Retrieves a TransportWebhook resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportWebhookIdGetTest() throws ApiException {
        String id = null;
        TransportWebhookGet response = api.apiTransportWebhookIdGet(id);
        // TODO: test validations
    }

    /**
     * Updates the TransportWebhook resource.
     *
     * Updates the TransportWebhook resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportWebhookIdPatchTest() throws ApiException {
        String id = null;
        TransportWebhookPatch transportWebhookPatch = null;
        TransportWebhookGet response = api.apiTransportWebhookIdPatch(id, transportWebhookPatch);
        // TODO: test validations
    }

    /**
     * Replaces the TransportWebhook resource.
     *
     * Replaces the TransportWebhook resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportWebhookIdPutTest() throws ApiException {
        String id = null;
        TransportWebhookPut transportWebhookPut = null;
        TransportWebhookGet response = api.apiTransportWebhookIdPut(id, transportWebhookPut);
        // TODO: test validations
    }

    /**
     * Creates a TransportWebhook resource.
     *
     * Creates a TransportWebhook resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportWebhookPostTest() throws ApiException {
        TransportWebhookPost transportWebhookPost = null;
        TransportWebhookGet response = api.apiTransportWebhookPost(transportWebhookPost);
        // TODO: test validations
    }

}
