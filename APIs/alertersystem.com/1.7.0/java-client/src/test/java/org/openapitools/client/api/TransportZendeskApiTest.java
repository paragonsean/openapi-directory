/*
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiTransportZendeskGetCollection200Response;
import org.openapitools.client.model.TransportZendeskGet;
import org.openapitools.client.model.TransportZendeskJsonldGet;
import org.openapitools.client.model.TransportZendeskJsonldPost;
import org.openapitools.client.model.TransportZendeskJsonldPut;
import org.openapitools.client.model.TransportZendeskPatch;
import org.openapitools.client.model.TransportZendeskPost;
import org.openapitools.client.model.TransportZendeskPut;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransportZendeskApi
 */
@Disabled
public class TransportZendeskApiTest {

    private final TransportZendeskApi api = new TransportZendeskApi();

    /**
     * Retrieves the collection of TransportZendesk resources.
     *
     * Retrieves the collection of TransportZendesk resources.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportZendeskGetCollectionTest() throws ApiException {
        Integer page = null;
        String dataSegmentCode = null;
        List<String> dataSegmentCode2 = null;
        String partition = null;
        List<String> partition2 = null;
        List<String> properties = null;
        List<TransportZendeskGet> response = api.apiTransportZendeskGetCollection(page, dataSegmentCode, dataSegmentCode2, partition, partition2, properties);
        // TODO: test validations
    }

    /**
     * Removes the TransportZendesk resource.
     *
     * Removes the TransportZendesk resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportZendeskIdDeleteTest() throws ApiException {
        String id = null;
        api.apiTransportZendeskIdDelete(id);
        // TODO: test validations
    }

    /**
     * Retrieves a TransportZendesk resource.
     *
     * Retrieves a TransportZendesk resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportZendeskIdGetTest() throws ApiException {
        String id = null;
        TransportZendeskGet response = api.apiTransportZendeskIdGet(id);
        // TODO: test validations
    }

    /**
     * Updates the TransportZendesk resource.
     *
     * Updates the TransportZendesk resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportZendeskIdPatchTest() throws ApiException {
        String id = null;
        TransportZendeskPatch transportZendeskPatch = null;
        TransportZendeskGet response = api.apiTransportZendeskIdPatch(id, transportZendeskPatch);
        // TODO: test validations
    }

    /**
     * Replaces the TransportZendesk resource.
     *
     * Replaces the TransportZendesk resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportZendeskIdPutTest() throws ApiException {
        String id = null;
        TransportZendeskPut transportZendeskPut = null;
        TransportZendeskGet response = api.apiTransportZendeskIdPut(id, transportZendeskPut);
        // TODO: test validations
    }

    /**
     * Creates a TransportZendesk resource.
     *
     * Creates a TransportZendesk resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportZendeskPostTest() throws ApiException {
        TransportZendeskPost transportZendeskPost = null;
        TransportZendeskGet response = api.apiTransportZendeskPost(transportZendeskPost);
        // TODO: test validations
    }

}
