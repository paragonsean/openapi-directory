/*
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiMediaObjectGetCollection200Response;
import java.io.File;
import org.openapitools.client.model.MediaObjectGet;
import org.openapitools.client.model.MediaObjectJsonldGet;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MediaObjectApi
 */
@Disabled
public class MediaObjectApiTest {

    private final MediaObjectApi api = new MediaObjectApi();

    /**
     * Retrieves the collection of MediaObject resources.
     *
     * Retrieves the collection of MediaObject resources.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiMediaObjectGetCollectionTest() throws ApiException {
        Integer page = null;
        String dataSegmentCode = null;
        List<String> dataSegmentCode2 = null;
        String partition = null;
        List<String> partition2 = null;
        List<String> properties = null;
        List<MediaObjectGet> response = api.apiMediaObjectGetCollection(page, dataSegmentCode, dataSegmentCode2, partition, partition2, properties);
        // TODO: test validations
    }

    /**
     * Removes the MediaObject resource.
     *
     * Removes the MediaObject resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiMediaObjectIdDeleteTest() throws ApiException {
        String id = null;
        api.apiMediaObjectIdDelete(id);
        // TODO: test validations
    }

    /**
     * Retrieves a MediaObject resource.
     *
     * Retrieves a MediaObject resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiMediaObjectIdGetTest() throws ApiException {
        String id = null;
        MediaObjectGet response = api.apiMediaObjectIdGet(id);
        // TODO: test validations
    }

    /**
     * Creates a MediaObject resource.
     *
     * Creates a MediaObject resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiMediaObjectPostTest() throws ApiException {
        String dataSegmentCode = null;
        File _file = null;
        String keywords = null;
        String partition = null;
        MediaObjectGet response = api.apiMediaObjectPost(dataSegmentCode, _file, keywords, partition);
        // TODO: test validations
    }

}
