/*
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiPingGetCollection200Response;
import org.openapitools.client.model.PingGet;
import org.openapitools.client.model.PingJsonldGet;
import org.openapitools.client.model.PingJsonldPost;
import org.openapitools.client.model.PingPost;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PingApi
 */
@Disabled
public class PingApiTest {

    private final PingApi api = new PingApi();

    /**
     * Retrieves the collection of Ping resources.
     *
     * Retrieves the collection of Ping resources.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiPingGetCollectionTest() throws ApiException {
        Integer page = null;
        String dataSegmentCode = null;
        List<String> dataSegmentCode2 = null;
        String monitor = null;
        List<String> monitor2 = null;
        String partition = null;
        List<String> partition2 = null;
        List<String> properties = null;
        List<PingGet> response = api.apiPingGetCollection(page, dataSegmentCode, dataSegmentCode2, monitor, monitor2, partition, partition2, properties);
        // TODO: test validations
    }

    /**
     * Retrieves a Ping resource.
     *
     * Retrieves a Ping resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiPingIdGetTest() throws ApiException {
        String id = null;
        PingGet response = api.apiPingIdGet(id);
        // TODO: test validations
    }

    /**
     * Creates a Ping resource.
     *
     * Creates a Ping resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiPingPostTest() throws ApiException {
        PingPost pingPost = null;
        PingGet response = api.apiPingPost(pingPost);
        // TODO: test validations
    }

}
