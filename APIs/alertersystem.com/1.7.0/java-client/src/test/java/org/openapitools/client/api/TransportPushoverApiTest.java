/*
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiTransportPushoverGetCollection200Response;
import org.openapitools.client.model.TransportPushoverGet;
import org.openapitools.client.model.TransportPushoverJsonldGet;
import org.openapitools.client.model.TransportPushoverJsonldPost;
import org.openapitools.client.model.TransportPushoverJsonldPut;
import org.openapitools.client.model.TransportPushoverPatch;
import org.openapitools.client.model.TransportPushoverPost;
import org.openapitools.client.model.TransportPushoverPut;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransportPushoverApi
 */
@Disabled
public class TransportPushoverApiTest {

    private final TransportPushoverApi api = new TransportPushoverApi();

    /**
     * Retrieves the collection of TransportPushover resources.
     *
     * Retrieves the collection of TransportPushover resources.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportPushoverGetCollectionTest() throws ApiException {
        Integer page = null;
        String dataSegmentCode = null;
        List<String> dataSegmentCode2 = null;
        String partition = null;
        List<String> partition2 = null;
        List<String> properties = null;
        List<TransportPushoverGet> response = api.apiTransportPushoverGetCollection(page, dataSegmentCode, dataSegmentCode2, partition, partition2, properties);
        // TODO: test validations
    }

    /**
     * Removes the TransportPushover resource.
     *
     * Removes the TransportPushover resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportPushoverIdDeleteTest() throws ApiException {
        String id = null;
        api.apiTransportPushoverIdDelete(id);
        // TODO: test validations
    }

    /**
     * Retrieves a TransportPushover resource.
     *
     * Retrieves a TransportPushover resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportPushoverIdGetTest() throws ApiException {
        String id = null;
        TransportPushoverGet response = api.apiTransportPushoverIdGet(id);
        // TODO: test validations
    }

    /**
     * Updates the TransportPushover resource.
     *
     * Updates the TransportPushover resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportPushoverIdPatchTest() throws ApiException {
        String id = null;
        TransportPushoverPatch transportPushoverPatch = null;
        TransportPushoverGet response = api.apiTransportPushoverIdPatch(id, transportPushoverPatch);
        // TODO: test validations
    }

    /**
     * Replaces the TransportPushover resource.
     *
     * Replaces the TransportPushover resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportPushoverIdPutTest() throws ApiException {
        String id = null;
        TransportPushoverPut transportPushoverPut = null;
        TransportPushoverGet response = api.apiTransportPushoverIdPut(id, transportPushoverPut);
        // TODO: test validations
    }

    /**
     * Creates a TransportPushover resource.
     *
     * Creates a TransportPushover resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportPushoverPostTest() throws ApiException {
        TransportPushoverPost transportPushoverPost = null;
        TransportPushoverGet response = api.apiTransportPushoverPost(transportPushoverPost);
        // TODO: test validations
    }

}
