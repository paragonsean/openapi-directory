/*
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiTransportTwitterGetCollection200Response;
import org.openapitools.client.model.TransportTwitterGet;
import org.openapitools.client.model.TransportTwitterJsonldGet;
import org.openapitools.client.model.TransportTwitterJsonldPost;
import org.openapitools.client.model.TransportTwitterJsonldPut;
import org.openapitools.client.model.TransportTwitterPatch;
import org.openapitools.client.model.TransportTwitterPost;
import org.openapitools.client.model.TransportTwitterPut;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransportTwitterApi
 */
@Disabled
public class TransportTwitterApiTest {

    private final TransportTwitterApi api = new TransportTwitterApi();

    /**
     * Retrieves the collection of TransportTwitter resources.
     *
     * Retrieves the collection of TransportTwitter resources.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportTwitterGetCollectionTest() throws ApiException {
        Integer page = null;
        String dataSegmentCode = null;
        List<String> dataSegmentCode2 = null;
        String partition = null;
        List<String> partition2 = null;
        List<String> properties = null;
        List<TransportTwitterGet> response = api.apiTransportTwitterGetCollection(page, dataSegmentCode, dataSegmentCode2, partition, partition2, properties);
        // TODO: test validations
    }

    /**
     * Removes the TransportTwitter resource.
     *
     * Removes the TransportTwitter resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportTwitterIdDeleteTest() throws ApiException {
        String id = null;
        api.apiTransportTwitterIdDelete(id);
        // TODO: test validations
    }

    /**
     * Retrieves a TransportTwitter resource.
     *
     * Retrieves a TransportTwitter resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportTwitterIdGetTest() throws ApiException {
        String id = null;
        TransportTwitterGet response = api.apiTransportTwitterIdGet(id);
        // TODO: test validations
    }

    /**
     * Updates the TransportTwitter resource.
     *
     * Updates the TransportTwitter resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportTwitterIdPatchTest() throws ApiException {
        String id = null;
        TransportTwitterPatch transportTwitterPatch = null;
        TransportTwitterGet response = api.apiTransportTwitterIdPatch(id, transportTwitterPatch);
        // TODO: test validations
    }

    /**
     * Replaces the TransportTwitter resource.
     *
     * Replaces the TransportTwitter resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportTwitterIdPutTest() throws ApiException {
        String id = null;
        TransportTwitterPut transportTwitterPut = null;
        TransportTwitterGet response = api.apiTransportTwitterIdPut(id, transportTwitterPut);
        // TODO: test validations
    }

    /**
     * Creates a TransportTwitter resource.
     *
     * Creates a TransportTwitter resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportTwitterPostTest() throws ApiException {
        TransportTwitterPost transportTwitterPost = null;
        TransportTwitterGet response = api.apiTransportTwitterPost(transportTwitterPost);
        // TODO: test validations
    }

}
