/*
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiTransportFirebaseGetCollection200Response;
import org.openapitools.client.model.TransportFirebaseGet;
import org.openapitools.client.model.TransportFirebaseJsonldGet;
import org.openapitools.client.model.TransportFirebaseJsonldPost;
import org.openapitools.client.model.TransportFirebaseJsonldPut;
import org.openapitools.client.model.TransportFirebasePatch;
import org.openapitools.client.model.TransportFirebasePost;
import org.openapitools.client.model.TransportFirebasePut;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransportFirebaseApi
 */
@Disabled
public class TransportFirebaseApiTest {

    private final TransportFirebaseApi api = new TransportFirebaseApi();

    /**
     * Retrieves the collection of TransportFirebase resources.
     *
     * Retrieves the collection of TransportFirebase resources.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportFirebaseGetCollectionTest() throws ApiException {
        Integer page = null;
        String dataSegmentCode = null;
        List<String> dataSegmentCode2 = null;
        String partition = null;
        List<String> partition2 = null;
        List<String> properties = null;
        List<TransportFirebaseGet> response = api.apiTransportFirebaseGetCollection(page, dataSegmentCode, dataSegmentCode2, partition, partition2, properties);
        // TODO: test validations
    }

    /**
     * Removes the TransportFirebase resource.
     *
     * Removes the TransportFirebase resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportFirebaseIdDeleteTest() throws ApiException {
        String id = null;
        api.apiTransportFirebaseIdDelete(id);
        // TODO: test validations
    }

    /**
     * Retrieves a TransportFirebase resource.
     *
     * Retrieves a TransportFirebase resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportFirebaseIdGetTest() throws ApiException {
        String id = null;
        TransportFirebaseGet response = api.apiTransportFirebaseIdGet(id);
        // TODO: test validations
    }

    /**
     * Updates the TransportFirebase resource.
     *
     * Updates the TransportFirebase resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportFirebaseIdPatchTest() throws ApiException {
        String id = null;
        TransportFirebasePatch transportFirebasePatch = null;
        TransportFirebaseGet response = api.apiTransportFirebaseIdPatch(id, transportFirebasePatch);
        // TODO: test validations
    }

    /**
     * Replaces the TransportFirebase resource.
     *
     * Replaces the TransportFirebase resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportFirebaseIdPutTest() throws ApiException {
        String id = null;
        TransportFirebasePut transportFirebasePut = null;
        TransportFirebaseGet response = api.apiTransportFirebaseIdPut(id, transportFirebasePut);
        // TODO: test validations
    }

    /**
     * Creates a TransportFirebase resource.
     *
     * Creates a TransportFirebase resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportFirebasePostTest() throws ApiException {
        TransportFirebasePost transportFirebasePost = null;
        TransportFirebaseGet response = api.apiTransportFirebasePost(transportFirebasePost);
        // TODO: test validations
    }

}
