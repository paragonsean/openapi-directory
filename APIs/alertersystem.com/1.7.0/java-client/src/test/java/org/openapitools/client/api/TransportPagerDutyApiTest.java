/*
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiTransportPagerDutyGetCollection200Response;
import org.openapitools.client.model.TransportPagerDutyGet;
import org.openapitools.client.model.TransportPagerDutyJsonldGet;
import org.openapitools.client.model.TransportPagerDutyJsonldPost;
import org.openapitools.client.model.TransportPagerDutyJsonldPut;
import org.openapitools.client.model.TransportPagerDutyPatch;
import org.openapitools.client.model.TransportPagerDutyPost;
import org.openapitools.client.model.TransportPagerDutyPut;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransportPagerDutyApi
 */
@Disabled
public class TransportPagerDutyApiTest {

    private final TransportPagerDutyApi api = new TransportPagerDutyApi();

    /**
     * Retrieves the collection of TransportPagerDuty resources.
     *
     * Retrieves the collection of TransportPagerDuty resources.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportPagerDutyGetCollectionTest() throws ApiException {
        Integer page = null;
        String dataSegmentCode = null;
        List<String> dataSegmentCode2 = null;
        String partition = null;
        List<String> partition2 = null;
        List<String> properties = null;
        List<TransportPagerDutyGet> response = api.apiTransportPagerDutyGetCollection(page, dataSegmentCode, dataSegmentCode2, partition, partition2, properties);
        // TODO: test validations
    }

    /**
     * Removes the TransportPagerDuty resource.
     *
     * Removes the TransportPagerDuty resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportPagerDutyIdDeleteTest() throws ApiException {
        String id = null;
        api.apiTransportPagerDutyIdDelete(id);
        // TODO: test validations
    }

    /**
     * Retrieves a TransportPagerDuty resource.
     *
     * Retrieves a TransportPagerDuty resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportPagerDutyIdGetTest() throws ApiException {
        String id = null;
        TransportPagerDutyGet response = api.apiTransportPagerDutyIdGet(id);
        // TODO: test validations
    }

    /**
     * Updates the TransportPagerDuty resource.
     *
     * Updates the TransportPagerDuty resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportPagerDutyIdPatchTest() throws ApiException {
        String id = null;
        TransportPagerDutyPatch transportPagerDutyPatch = null;
        TransportPagerDutyGet response = api.apiTransportPagerDutyIdPatch(id, transportPagerDutyPatch);
        // TODO: test validations
    }

    /**
     * Replaces the TransportPagerDuty resource.
     *
     * Replaces the TransportPagerDuty resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportPagerDutyIdPutTest() throws ApiException {
        String id = null;
        TransportPagerDutyPut transportPagerDutyPut = null;
        TransportPagerDutyGet response = api.apiTransportPagerDutyIdPut(id, transportPagerDutyPut);
        // TODO: test validations
    }

    /**
     * Creates a TransportPagerDuty resource.
     *
     * Creates a TransportPagerDuty resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportPagerDutyPostTest() throws ApiException {
        TransportPagerDutyPost transportPagerDutyPost = null;
        TransportPagerDutyGet response = api.apiTransportPagerDutyPost(transportPagerDutyPost);
        // TODO: test validations
    }

}
