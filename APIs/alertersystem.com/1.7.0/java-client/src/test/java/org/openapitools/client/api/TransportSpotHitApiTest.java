/*
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiTransportSpotHitGetCollection200Response;
import org.openapitools.client.model.TransportSpotHitGet;
import org.openapitools.client.model.TransportSpotHitJsonldGet;
import org.openapitools.client.model.TransportSpotHitJsonldPost;
import org.openapitools.client.model.TransportSpotHitJsonldPut;
import org.openapitools.client.model.TransportSpotHitPatch;
import org.openapitools.client.model.TransportSpotHitPost;
import org.openapitools.client.model.TransportSpotHitPut;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransportSpotHitApi
 */
@Disabled
public class TransportSpotHitApiTest {

    private final TransportSpotHitApi api = new TransportSpotHitApi();

    /**
     * Retrieves the collection of TransportSpotHit resources.
     *
     * Retrieves the collection of TransportSpotHit resources.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportSpotHitGetCollectionTest() throws ApiException {
        Integer page = null;
        String dataSegmentCode = null;
        List<String> dataSegmentCode2 = null;
        String partition = null;
        List<String> partition2 = null;
        List<String> properties = null;
        List<TransportSpotHitGet> response = api.apiTransportSpotHitGetCollection(page, dataSegmentCode, dataSegmentCode2, partition, partition2, properties);
        // TODO: test validations
    }

    /**
     * Removes the TransportSpotHit resource.
     *
     * Removes the TransportSpotHit resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportSpotHitIdDeleteTest() throws ApiException {
        String id = null;
        api.apiTransportSpotHitIdDelete(id);
        // TODO: test validations
    }

    /**
     * Retrieves a TransportSpotHit resource.
     *
     * Retrieves a TransportSpotHit resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportSpotHitIdGetTest() throws ApiException {
        String id = null;
        TransportSpotHitGet response = api.apiTransportSpotHitIdGet(id);
        // TODO: test validations
    }

    /**
     * Updates the TransportSpotHit resource.
     *
     * Updates the TransportSpotHit resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportSpotHitIdPatchTest() throws ApiException {
        String id = null;
        TransportSpotHitPatch transportSpotHitPatch = null;
        TransportSpotHitGet response = api.apiTransportSpotHitIdPatch(id, transportSpotHitPatch);
        // TODO: test validations
    }

    /**
     * Replaces the TransportSpotHit resource.
     *
     * Replaces the TransportSpotHit resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportSpotHitIdPutTest() throws ApiException {
        String id = null;
        TransportSpotHitPut transportSpotHitPut = null;
        TransportSpotHitGet response = api.apiTransportSpotHitIdPut(id, transportSpotHitPut);
        // TODO: test validations
    }

    /**
     * Creates a TransportSpotHit resource.
     *
     * Creates a TransportSpotHit resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportSpotHitPostTest() throws ApiException {
        TransportSpotHitPost transportSpotHitPost = null;
        TransportSpotHitGet response = api.apiTransportSpotHitPost(transportSpotHitPost);
        // TODO: test validations
    }

}
