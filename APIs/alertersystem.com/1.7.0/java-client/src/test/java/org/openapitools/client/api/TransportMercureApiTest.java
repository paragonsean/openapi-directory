/*
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiTransportMercureGetCollection200Response;
import org.openapitools.client.model.TransportMercureGet;
import org.openapitools.client.model.TransportMercureJsonldGet;
import org.openapitools.client.model.TransportMercureJsonldPost;
import org.openapitools.client.model.TransportMercureJsonldPut;
import org.openapitools.client.model.TransportMercurePatch;
import org.openapitools.client.model.TransportMercurePost;
import org.openapitools.client.model.TransportMercurePut;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransportMercureApi
 */
@Disabled
public class TransportMercureApiTest {

    private final TransportMercureApi api = new TransportMercureApi();

    /**
     * Retrieves the collection of TransportMercure resources.
     *
     * Retrieves the collection of TransportMercure resources.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportMercureGetCollectionTest() throws ApiException {
        Integer page = null;
        String dataSegmentCode = null;
        List<String> dataSegmentCode2 = null;
        String partition = null;
        List<String> partition2 = null;
        List<String> properties = null;
        List<TransportMercureGet> response = api.apiTransportMercureGetCollection(page, dataSegmentCode, dataSegmentCode2, partition, partition2, properties);
        // TODO: test validations
    }

    /**
     * Removes the TransportMercure resource.
     *
     * Removes the TransportMercure resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportMercureIdDeleteTest() throws ApiException {
        String id = null;
        api.apiTransportMercureIdDelete(id);
        // TODO: test validations
    }

    /**
     * Retrieves a TransportMercure resource.
     *
     * Retrieves a TransportMercure resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportMercureIdGetTest() throws ApiException {
        String id = null;
        TransportMercureGet response = api.apiTransportMercureIdGet(id);
        // TODO: test validations
    }

    /**
     * Updates the TransportMercure resource.
     *
     * Updates the TransportMercure resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportMercureIdPatchTest() throws ApiException {
        String id = null;
        TransportMercurePatch transportMercurePatch = null;
        TransportMercureGet response = api.apiTransportMercureIdPatch(id, transportMercurePatch);
        // TODO: test validations
    }

    /**
     * Replaces the TransportMercure resource.
     *
     * Replaces the TransportMercure resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportMercureIdPutTest() throws ApiException {
        String id = null;
        TransportMercurePut transportMercurePut = null;
        TransportMercureGet response = api.apiTransportMercureIdPut(id, transportMercurePut);
        // TODO: test validations
    }

    /**
     * Creates a TransportMercure resource.
     *
     * Creates a TransportMercure resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportMercurePostTest() throws ApiException {
        TransportMercurePost transportMercurePost = null;
        TransportMercureGet response = api.apiTransportMercurePost(transportMercurePost);
        // TODO: test validations
    }

}
