/*
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiTransportMessageMediaGetCollection200Response;
import org.openapitools.client.model.TransportMessageMediaGet;
import org.openapitools.client.model.TransportMessageMediaJsonldGet;
import org.openapitools.client.model.TransportMessageMediaJsonldPost;
import org.openapitools.client.model.TransportMessageMediaJsonldPut;
import org.openapitools.client.model.TransportMessageMediaPatch;
import org.openapitools.client.model.TransportMessageMediaPost;
import org.openapitools.client.model.TransportMessageMediaPut;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransportMessageMediaApi
 */
@Disabled
public class TransportMessageMediaApiTest {

    private final TransportMessageMediaApi api = new TransportMessageMediaApi();

    /**
     * Retrieves the collection of TransportMessageMedia resources.
     *
     * Retrieves the collection of TransportMessageMedia resources.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportMessageMediaGetCollectionTest() throws ApiException {
        Integer page = null;
        String dataSegmentCode = null;
        List<String> dataSegmentCode2 = null;
        String partition = null;
        List<String> partition2 = null;
        List<String> properties = null;
        List<TransportMessageMediaGet> response = api.apiTransportMessageMediaGetCollection(page, dataSegmentCode, dataSegmentCode2, partition, partition2, properties);
        // TODO: test validations
    }

    /**
     * Removes the TransportMessageMedia resource.
     *
     * Removes the TransportMessageMedia resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportMessageMediaIdDeleteTest() throws ApiException {
        String id = null;
        api.apiTransportMessageMediaIdDelete(id);
        // TODO: test validations
    }

    /**
     * Retrieves a TransportMessageMedia resource.
     *
     * Retrieves a TransportMessageMedia resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportMessageMediaIdGetTest() throws ApiException {
        String id = null;
        TransportMessageMediaGet response = api.apiTransportMessageMediaIdGet(id);
        // TODO: test validations
    }

    /**
     * Updates the TransportMessageMedia resource.
     *
     * Updates the TransportMessageMedia resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportMessageMediaIdPatchTest() throws ApiException {
        String id = null;
        TransportMessageMediaPatch transportMessageMediaPatch = null;
        TransportMessageMediaGet response = api.apiTransportMessageMediaIdPatch(id, transportMessageMediaPatch);
        // TODO: test validations
    }

    /**
     * Replaces the TransportMessageMedia resource.
     *
     * Replaces the TransportMessageMedia resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportMessageMediaIdPutTest() throws ApiException {
        String id = null;
        TransportMessageMediaPut transportMessageMediaPut = null;
        TransportMessageMediaGet response = api.apiTransportMessageMediaIdPut(id, transportMessageMediaPut);
        // TODO: test validations
    }

    /**
     * Creates a TransportMessageMedia resource.
     *
     * Creates a TransportMessageMedia resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportMessageMediaPostTest() throws ApiException {
        TransportMessageMediaPost transportMessageMediaPost = null;
        TransportMessageMediaGet response = api.apiTransportMessageMediaPost(transportMessageMediaPost);
        // TODO: test validations
    }

}
