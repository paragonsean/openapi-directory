/*
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiTransportInfobipGetCollection200Response;
import org.openapitools.client.model.TransportInfobipGet;
import org.openapitools.client.model.TransportInfobipJsonldGet;
import org.openapitools.client.model.TransportInfobipJsonldPost;
import org.openapitools.client.model.TransportInfobipJsonldPut;
import org.openapitools.client.model.TransportInfobipPatch;
import org.openapitools.client.model.TransportInfobipPost;
import org.openapitools.client.model.TransportInfobipPut;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransportInfobipApi
 */
@Disabled
public class TransportInfobipApiTest {

    private final TransportInfobipApi api = new TransportInfobipApi();

    /**
     * Retrieves the collection of TransportInfobip resources.
     *
     * Retrieves the collection of TransportInfobip resources.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportInfobipGetCollectionTest() throws ApiException {
        Integer page = null;
        String dataSegmentCode = null;
        List<String> dataSegmentCode2 = null;
        String partition = null;
        List<String> partition2 = null;
        List<String> properties = null;
        List<TransportInfobipGet> response = api.apiTransportInfobipGetCollection(page, dataSegmentCode, dataSegmentCode2, partition, partition2, properties);
        // TODO: test validations
    }

    /**
     * Removes the TransportInfobip resource.
     *
     * Removes the TransportInfobip resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportInfobipIdDeleteTest() throws ApiException {
        String id = null;
        api.apiTransportInfobipIdDelete(id);
        // TODO: test validations
    }

    /**
     * Retrieves a TransportInfobip resource.
     *
     * Retrieves a TransportInfobip resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportInfobipIdGetTest() throws ApiException {
        String id = null;
        TransportInfobipGet response = api.apiTransportInfobipIdGet(id);
        // TODO: test validations
    }

    /**
     * Updates the TransportInfobip resource.
     *
     * Updates the TransportInfobip resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportInfobipIdPatchTest() throws ApiException {
        String id = null;
        TransportInfobipPatch transportInfobipPatch = null;
        TransportInfobipGet response = api.apiTransportInfobipIdPatch(id, transportInfobipPatch);
        // TODO: test validations
    }

    /**
     * Replaces the TransportInfobip resource.
     *
     * Replaces the TransportInfobip resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportInfobipIdPutTest() throws ApiException {
        String id = null;
        TransportInfobipPut transportInfobipPut = null;
        TransportInfobipGet response = api.apiTransportInfobipIdPut(id, transportInfobipPut);
        // TODO: test validations
    }

    /**
     * Creates a TransportInfobip resource.
     *
     * Creates a TransportInfobip resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportInfobipPostTest() throws ApiException {
        TransportInfobipPost transportInfobipPost = null;
        TransportInfobipGet response = api.apiTransportInfobipPost(transportInfobipPost);
        // TODO: test validations
    }

}
