/*
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiTransportVonageGetCollection200Response;
import org.openapitools.client.model.TransportVonageGet;
import org.openapitools.client.model.TransportVonageJsonldGet;
import org.openapitools.client.model.TransportVonageJsonldPost;
import org.openapitools.client.model.TransportVonageJsonldPut;
import org.openapitools.client.model.TransportVonagePatch;
import org.openapitools.client.model.TransportVonagePost;
import org.openapitools.client.model.TransportVonagePut;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransportVonageApi
 */
@Disabled
public class TransportVonageApiTest {

    private final TransportVonageApi api = new TransportVonageApi();

    /**
     * Retrieves the collection of TransportVonage resources.
     *
     * Retrieves the collection of TransportVonage resources.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportVonageGetCollectionTest() throws ApiException {
        Integer page = null;
        String dataSegmentCode = null;
        List<String> dataSegmentCode2 = null;
        String partition = null;
        List<String> partition2 = null;
        List<String> properties = null;
        List<TransportVonageGet> response = api.apiTransportVonageGetCollection(page, dataSegmentCode, dataSegmentCode2, partition, partition2, properties);
        // TODO: test validations
    }

    /**
     * Removes the TransportVonage resource.
     *
     * Removes the TransportVonage resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportVonageIdDeleteTest() throws ApiException {
        String id = null;
        api.apiTransportVonageIdDelete(id);
        // TODO: test validations
    }

    /**
     * Retrieves a TransportVonage resource.
     *
     * Retrieves a TransportVonage resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportVonageIdGetTest() throws ApiException {
        String id = null;
        TransportVonageGet response = api.apiTransportVonageIdGet(id);
        // TODO: test validations
    }

    /**
     * Updates the TransportVonage resource.
     *
     * Updates the TransportVonage resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportVonageIdPatchTest() throws ApiException {
        String id = null;
        TransportVonagePatch transportVonagePatch = null;
        TransportVonageGet response = api.apiTransportVonageIdPatch(id, transportVonagePatch);
        // TODO: test validations
    }

    /**
     * Replaces the TransportVonage resource.
     *
     * Replaces the TransportVonage resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportVonageIdPutTest() throws ApiException {
        String id = null;
        TransportVonagePut transportVonagePut = null;
        TransportVonageGet response = api.apiTransportVonageIdPut(id, transportVonagePut);
        // TODO: test validations
    }

    /**
     * Creates a TransportVonage resource.
     *
     * Creates a TransportVonage resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiTransportVonagePostTest() throws ApiException {
        TransportVonagePost transportVonagePost = null;
        TransportVonageGet response = api.apiTransportVonagePost(transportVonagePost);
        // TODO: test validations
    }

}
