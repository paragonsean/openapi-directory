/*
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ApiAlertLogGetCollection200ResponseHydraSearch;
import org.openapitools.client.model.ApiAlertLogGetCollection200ResponseHydraView;
import org.openapitools.client.model.TransportZendeskJsonldGet;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ApiTransportZendeskGetCollection200Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:22:03.392245-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ApiTransportZendeskGetCollection200Response {
  public static final String SERIALIZED_NAME_HYDRA_COLON_MEMBER = "hydra:member";
  @SerializedName(SERIALIZED_NAME_HYDRA_COLON_MEMBER)
  private List<TransportZendeskJsonldGet> hydraColonMember = new ArrayList<>();

  public static final String SERIALIZED_NAME_HYDRA_COLON_SEARCH = "hydra:search";
  @SerializedName(SERIALIZED_NAME_HYDRA_COLON_SEARCH)
  private ApiAlertLogGetCollection200ResponseHydraSearch hydraColonSearch;

  public static final String SERIALIZED_NAME_HYDRA_COLON_TOTAL_ITEMS = "hydra:totalItems";
  @SerializedName(SERIALIZED_NAME_HYDRA_COLON_TOTAL_ITEMS)
  private Integer hydraColonTotalItems;

  public static final String SERIALIZED_NAME_HYDRA_COLON_VIEW = "hydra:view";
  @SerializedName(SERIALIZED_NAME_HYDRA_COLON_VIEW)
  private ApiAlertLogGetCollection200ResponseHydraView hydraColonView;

  public ApiTransportZendeskGetCollection200Response() {
  }

  public ApiTransportZendeskGetCollection200Response hydraColonMember(List<TransportZendeskJsonldGet> hydraColonMember) {
    this.hydraColonMember = hydraColonMember;
    return this;
  }

  public ApiTransportZendeskGetCollection200Response addHydraColonMemberItem(TransportZendeskJsonldGet hydraColonMemberItem) {
    if (this.hydraColonMember == null) {
      this.hydraColonMember = new ArrayList<>();
    }
    this.hydraColonMember.add(hydraColonMemberItem);
    return this;
  }

  /**
   * Get hydraColonMember
   * @return hydraColonMember
   */
  @javax.annotation.Nonnull
  public List<TransportZendeskJsonldGet> getHydraColonMember() {
    return hydraColonMember;
  }

  public void setHydraColonMember(List<TransportZendeskJsonldGet> hydraColonMember) {
    this.hydraColonMember = hydraColonMember;
  }


  public ApiTransportZendeskGetCollection200Response hydraColonSearch(ApiAlertLogGetCollection200ResponseHydraSearch hydraColonSearch) {
    this.hydraColonSearch = hydraColonSearch;
    return this;
  }

  /**
   * Get hydraColonSearch
   * @return hydraColonSearch
   */
  @javax.annotation.Nullable
  public ApiAlertLogGetCollection200ResponseHydraSearch getHydraColonSearch() {
    return hydraColonSearch;
  }

  public void setHydraColonSearch(ApiAlertLogGetCollection200ResponseHydraSearch hydraColonSearch) {
    this.hydraColonSearch = hydraColonSearch;
  }


  public ApiTransportZendeskGetCollection200Response hydraColonTotalItems(Integer hydraColonTotalItems) {
    this.hydraColonTotalItems = hydraColonTotalItems;
    return this;
  }

  /**
   * Get hydraColonTotalItems
   * minimum: 0
   * @return hydraColonTotalItems
   */
  @javax.annotation.Nullable
  public Integer getHydraColonTotalItems() {
    return hydraColonTotalItems;
  }

  public void setHydraColonTotalItems(Integer hydraColonTotalItems) {
    this.hydraColonTotalItems = hydraColonTotalItems;
  }


  public ApiTransportZendeskGetCollection200Response hydraColonView(ApiAlertLogGetCollection200ResponseHydraView hydraColonView) {
    this.hydraColonView = hydraColonView;
    return this;
  }

  /**
   * Get hydraColonView
   * @return hydraColonView
   */
  @javax.annotation.Nullable
  public ApiAlertLogGetCollection200ResponseHydraView getHydraColonView() {
    return hydraColonView;
  }

  public void setHydraColonView(ApiAlertLogGetCollection200ResponseHydraView hydraColonView) {
    this.hydraColonView = hydraColonView;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiTransportZendeskGetCollection200Response apiTransportZendeskGetCollection200Response = (ApiTransportZendeskGetCollection200Response) o;
    return Objects.equals(this.hydraColonMember, apiTransportZendeskGetCollection200Response.hydraColonMember) &&
        Objects.equals(this.hydraColonSearch, apiTransportZendeskGetCollection200Response.hydraColonSearch) &&
        Objects.equals(this.hydraColonTotalItems, apiTransportZendeskGetCollection200Response.hydraColonTotalItems) &&
        Objects.equals(this.hydraColonView, apiTransportZendeskGetCollection200Response.hydraColonView);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hydraColonMember, hydraColonSearch, hydraColonTotalItems, hydraColonView);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiTransportZendeskGetCollection200Response {\n");
    sb.append("    hydraColonMember: ").append(toIndentedString(hydraColonMember)).append("\n");
    sb.append("    hydraColonSearch: ").append(toIndentedString(hydraColonSearch)).append("\n");
    sb.append("    hydraColonTotalItems: ").append(toIndentedString(hydraColonTotalItems)).append("\n");
    sb.append("    hydraColonView: ").append(toIndentedString(hydraColonView)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("hydra:member");
    openapiFields.add("hydra:search");
    openapiFields.add("hydra:totalItems");
    openapiFields.add("hydra:view");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("hydra:member");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ApiTransportZendeskGetCollection200Response
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApiTransportZendeskGetCollection200Response.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApiTransportZendeskGetCollection200Response is not found in the empty JSON string", ApiTransportZendeskGetCollection200Response.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ApiTransportZendeskGetCollection200Response.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApiTransportZendeskGetCollection200Response` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ApiTransportZendeskGetCollection200Response.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the json data is an array
      if (!jsonObj.get("hydra:member").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `hydra:member` to be an array in the JSON string but got `%s`", jsonObj.get("hydra:member").toString()));
      }

      JsonArray jsonArrayhydraColonMember = jsonObj.getAsJsonArray("hydra:member");
      // validate the required field `hydra:member` (array)
      for (int i = 0; i < jsonArrayhydraColonMember.size(); i++) {
        TransportZendeskJsonldGet.validateJsonElement(jsonArrayhydraColonMember.get(i));
      };
      // validate the optional field `hydra:search`
      if (jsonObj.get("hydra:search") != null && !jsonObj.get("hydra:search").isJsonNull()) {
        ApiAlertLogGetCollection200ResponseHydraSearch.validateJsonElement(jsonObj.get("hydra:search"));
      }
      // validate the optional field `hydra:view`
      if (jsonObj.get("hydra:view") != null && !jsonObj.get("hydra:view").isJsonNull()) {
        ApiAlertLogGetCollection200ResponseHydraView.validateJsonElement(jsonObj.get("hydra:view"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApiTransportZendeskGetCollection200Response.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApiTransportZendeskGetCollection200Response' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApiTransportZendeskGetCollection200Response> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApiTransportZendeskGetCollection200Response.class));

       return (TypeAdapter<T>) new TypeAdapter<ApiTransportZendeskGetCollection200Response>() {
           @Override
           public void write(JsonWriter out, ApiTransportZendeskGetCollection200Response value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApiTransportZendeskGetCollection200Response read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ApiTransportZendeskGetCollection200Response given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ApiTransportZendeskGetCollection200Response
   * @throws IOException if the JSON string is invalid with respect to ApiTransportZendeskGetCollection200Response
   */
  public static ApiTransportZendeskGetCollection200Response fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApiTransportZendeskGetCollection200Response.class);
  }

  /**
   * Convert an instance of ApiTransportZendeskGetCollection200Response to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

