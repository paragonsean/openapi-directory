/*
 * Alerter System API
 * <p>This is the <a href=\"/\">Alerter System</a> API playground. More documentation is available at the <a href=\"/help/developers/\">API Help Center</a>.</p><p>The \"Available Authorizations\" in the Authorize popup only applies to this playground web interface. Other <a href=\"/help/developers/authorization/\">authorizations</a> are available for the actual API.</p>
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ApiAlertLogGetCollection200ResponseHydraSearchHydraMappingInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ApiAlertLogGetCollection200ResponseHydraSearch
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:22:03.392245-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ApiAlertLogGetCollection200ResponseHydraSearch {
  public static final String SERIALIZED_NAME_AT_TYPE = "@type";
  @SerializedName(SERIALIZED_NAME_AT_TYPE)
  private String atType;

  public static final String SERIALIZED_NAME_HYDRA_COLON_MAPPING = "hydra:mapping";
  @SerializedName(SERIALIZED_NAME_HYDRA_COLON_MAPPING)
  private List<ApiAlertLogGetCollection200ResponseHydraSearchHydraMappingInner> hydraColonMapping = new ArrayList<>();

  public static final String SERIALIZED_NAME_HYDRA_COLON_TEMPLATE = "hydra:template";
  @SerializedName(SERIALIZED_NAME_HYDRA_COLON_TEMPLATE)
  private String hydraColonTemplate;

  public static final String SERIALIZED_NAME_HYDRA_COLON_VARIABLE_REPRESENTATION = "hydra:variableRepresentation";
  @SerializedName(SERIALIZED_NAME_HYDRA_COLON_VARIABLE_REPRESENTATION)
  private String hydraColonVariableRepresentation;

  public ApiAlertLogGetCollection200ResponseHydraSearch() {
  }

  public ApiAlertLogGetCollection200ResponseHydraSearch atType(String atType) {
    this.atType = atType;
    return this;
  }

  /**
   * Get atType
   * @return atType
   */
  @javax.annotation.Nullable
  public String getAtType() {
    return atType;
  }

  public void setAtType(String atType) {
    this.atType = atType;
  }


  public ApiAlertLogGetCollection200ResponseHydraSearch hydraColonMapping(List<ApiAlertLogGetCollection200ResponseHydraSearchHydraMappingInner> hydraColonMapping) {
    this.hydraColonMapping = hydraColonMapping;
    return this;
  }

  public ApiAlertLogGetCollection200ResponseHydraSearch addHydraColonMappingItem(ApiAlertLogGetCollection200ResponseHydraSearchHydraMappingInner hydraColonMappingItem) {
    if (this.hydraColonMapping == null) {
      this.hydraColonMapping = new ArrayList<>();
    }
    this.hydraColonMapping.add(hydraColonMappingItem);
    return this;
  }

  /**
   * Get hydraColonMapping
   * @return hydraColonMapping
   */
  @javax.annotation.Nullable
  public List<ApiAlertLogGetCollection200ResponseHydraSearchHydraMappingInner> getHydraColonMapping() {
    return hydraColonMapping;
  }

  public void setHydraColonMapping(List<ApiAlertLogGetCollection200ResponseHydraSearchHydraMappingInner> hydraColonMapping) {
    this.hydraColonMapping = hydraColonMapping;
  }


  public ApiAlertLogGetCollection200ResponseHydraSearch hydraColonTemplate(String hydraColonTemplate) {
    this.hydraColonTemplate = hydraColonTemplate;
    return this;
  }

  /**
   * Get hydraColonTemplate
   * @return hydraColonTemplate
   */
  @javax.annotation.Nullable
  public String getHydraColonTemplate() {
    return hydraColonTemplate;
  }

  public void setHydraColonTemplate(String hydraColonTemplate) {
    this.hydraColonTemplate = hydraColonTemplate;
  }


  public ApiAlertLogGetCollection200ResponseHydraSearch hydraColonVariableRepresentation(String hydraColonVariableRepresentation) {
    this.hydraColonVariableRepresentation = hydraColonVariableRepresentation;
    return this;
  }

  /**
   * Get hydraColonVariableRepresentation
   * @return hydraColonVariableRepresentation
   */
  @javax.annotation.Nullable
  public String getHydraColonVariableRepresentation() {
    return hydraColonVariableRepresentation;
  }

  public void setHydraColonVariableRepresentation(String hydraColonVariableRepresentation) {
    this.hydraColonVariableRepresentation = hydraColonVariableRepresentation;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiAlertLogGetCollection200ResponseHydraSearch apiAlertLogGetCollection200ResponseHydraSearch = (ApiAlertLogGetCollection200ResponseHydraSearch) o;
    return Objects.equals(this.atType, apiAlertLogGetCollection200ResponseHydraSearch.atType) &&
        Objects.equals(this.hydraColonMapping, apiAlertLogGetCollection200ResponseHydraSearch.hydraColonMapping) &&
        Objects.equals(this.hydraColonTemplate, apiAlertLogGetCollection200ResponseHydraSearch.hydraColonTemplate) &&
        Objects.equals(this.hydraColonVariableRepresentation, apiAlertLogGetCollection200ResponseHydraSearch.hydraColonVariableRepresentation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(atType, hydraColonMapping, hydraColonTemplate, hydraColonVariableRepresentation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiAlertLogGetCollection200ResponseHydraSearch {\n");
    sb.append("    atType: ").append(toIndentedString(atType)).append("\n");
    sb.append("    hydraColonMapping: ").append(toIndentedString(hydraColonMapping)).append("\n");
    sb.append("    hydraColonTemplate: ").append(toIndentedString(hydraColonTemplate)).append("\n");
    sb.append("    hydraColonVariableRepresentation: ").append(toIndentedString(hydraColonVariableRepresentation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("@type");
    openapiFields.add("hydra:mapping");
    openapiFields.add("hydra:template");
    openapiFields.add("hydra:variableRepresentation");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ApiAlertLogGetCollection200ResponseHydraSearch
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApiAlertLogGetCollection200ResponseHydraSearch.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApiAlertLogGetCollection200ResponseHydraSearch is not found in the empty JSON string", ApiAlertLogGetCollection200ResponseHydraSearch.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ApiAlertLogGetCollection200ResponseHydraSearch.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApiAlertLogGetCollection200ResponseHydraSearch` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("@type") != null && !jsonObj.get("@type").isJsonNull()) && !jsonObj.get("@type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `@type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("@type").toString()));
      }
      if (jsonObj.get("hydra:mapping") != null && !jsonObj.get("hydra:mapping").isJsonNull()) {
        JsonArray jsonArrayhydraColonMapping = jsonObj.getAsJsonArray("hydra:mapping");
        if (jsonArrayhydraColonMapping != null) {
          // ensure the json data is an array
          if (!jsonObj.get("hydra:mapping").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `hydra:mapping` to be an array in the JSON string but got `%s`", jsonObj.get("hydra:mapping").toString()));
          }

          // validate the optional field `hydra:mapping` (array)
          for (int i = 0; i < jsonArrayhydraColonMapping.size(); i++) {
            ApiAlertLogGetCollection200ResponseHydraSearchHydraMappingInner.validateJsonElement(jsonArrayhydraColonMapping.get(i));
          };
        }
      }
      if ((jsonObj.get("hydra:template") != null && !jsonObj.get("hydra:template").isJsonNull()) && !jsonObj.get("hydra:template").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hydra:template` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hydra:template").toString()));
      }
      if ((jsonObj.get("hydra:variableRepresentation") != null && !jsonObj.get("hydra:variableRepresentation").isJsonNull()) && !jsonObj.get("hydra:variableRepresentation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hydra:variableRepresentation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hydra:variableRepresentation").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApiAlertLogGetCollection200ResponseHydraSearch.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApiAlertLogGetCollection200ResponseHydraSearch' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApiAlertLogGetCollection200ResponseHydraSearch> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApiAlertLogGetCollection200ResponseHydraSearch.class));

       return (TypeAdapter<T>) new TypeAdapter<ApiAlertLogGetCollection200ResponseHydraSearch>() {
           @Override
           public void write(JsonWriter out, ApiAlertLogGetCollection200ResponseHydraSearch value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApiAlertLogGetCollection200ResponseHydraSearch read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ApiAlertLogGetCollection200ResponseHydraSearch given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ApiAlertLogGetCollection200ResponseHydraSearch
   * @throws IOException if the JSON string is invalid with respect to ApiAlertLogGetCollection200ResponseHydraSearch
   */
  public static ApiAlertLogGetCollection200ResponseHydraSearch fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApiAlertLogGetCollection200ResponseHydraSearch.class);
  }

  /**
   * Convert an instance of ApiAlertLogGetCollection200ResponseHydraSearch to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

