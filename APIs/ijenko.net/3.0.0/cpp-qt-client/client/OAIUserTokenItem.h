/**
 * IoEÂ² IoT API - to create end-user applications
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: contact@ijenko.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserTokenItem.h
 *
 * Token for User API access
 */

#ifndef OAIUserTokenItem_H
#define OAIUserTokenItem_H

#include <QJsonObject>

#include "OAIPlaceItem.h"
#include "OAIUserItem.h"
#include <QDateTime>
#include <QSet>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPlaceItem;
class OAIUserItem;

class OAIUserTokenItem : public OAIObject {
public:
    OAIUserTokenItem();
    OAIUserTokenItem(QString json);
    ~OAIUserTokenItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAppName() const;
    void setAppName(const QString &app_name);
    bool is_app_name_Set() const;
    bool is_app_name_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QDateTime getLastUse() const;
    void setLastUse(const QDateTime &last_use);
    bool is_last_use_Set() const;
    bool is_last_use_Valid() const;

    QSet<OAIPlaceItem> getPlaces() const;
    void setPlaces(const QSet<OAIPlaceItem> &places);
    bool is_places_Set() const;
    bool is_places_Valid() const;

    QDateTime getRefreshTokenExpires() const;
    void setRefreshTokenExpires(const QDateTime &refresh_token_expires);
    bool is_refresh_token_expires_Set() const;
    bool is_refresh_token_expires_Valid() const;

    bool isSelf() const;
    void setSelf(const bool &self);
    bool is_self_Set() const;
    bool is_self_Valid() const;

    OAIUserItem getUser() const;
    void setUser(const OAIUserItem &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_app_name;
    bool m_app_name_isSet;
    bool m_app_name_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QDateTime m_last_use;
    bool m_last_use_isSet;
    bool m_last_use_isValid;

    QSet<OAIPlaceItem> m_places;
    bool m_places_isSet;
    bool m_places_isValid;

    QDateTime m_refresh_token_expires;
    bool m_refresh_token_expires_isSet;
    bool m_refresh_token_expires_isValid;

    bool m_self;
    bool m_self_isSet;
    bool m_self_isValid;

    OAIUserItem m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserTokenItem)

#endif // OAIUserTokenItem_H
