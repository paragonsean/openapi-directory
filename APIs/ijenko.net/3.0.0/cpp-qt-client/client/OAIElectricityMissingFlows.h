/**
 * IoEÂ² IoT API - to create end-user applications
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: contact@ijenko.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIElectricityMissingFlows.h
 *
 * List of missing flows (not available either directly or indirectly)
 */

#ifndef OAIElectricityMissingFlows_H
#define OAIElectricityMissingFlows_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIElectricityMissingFlows : public OAIObject {
public:
    OAIElectricityMissingFlows();
    OAIElectricityMissingFlows(QString json);
    ~OAIElectricityMissingFlows() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isBatteryCharge() const;
    void setBatteryCharge(const bool &battery_charge);
    bool is_battery_charge_Set() const;
    bool is_battery_charge_Valid() const;

    bool isBatteryDischarge() const;
    void setBatteryDischarge(const bool &battery_discharge);
    bool is_battery_discharge_Set() const;
    bool is_battery_discharge_Valid() const;

    bool isBatteryGrid() const;
    void setBatteryGrid(const bool &battery_grid);
    bool is_battery_grid_Set() const;
    bool is_battery_grid_Valid() const;

    bool isElecDrawn() const;
    void setElecDrawn(const bool &elec_drawn);
    bool is_elec_drawn_Set() const;
    bool is_elec_drawn_Valid() const;

    bool isElecFeedIn() const;
    void setElecFeedIn(const bool &elec_feed_in);
    bool is_elec_feed_in_Set() const;
    bool is_elec_feed_in_Valid() const;

    bool isElecFromHousehold() const;
    void setElecFromHousehold(const bool &elec_from_household);
    bool is_elec_from_household_Set() const;
    bool is_elec_from_household_Valid() const;

    bool isElecLocal() const;
    void setElecLocal(const bool &elec_local);
    bool is_elec_local_Set() const;
    bool is_elec_local_Valid() const;

    bool isElecToPv() const;
    void setElecToPv(const bool &elec_to_pv);
    bool is_elec_to_pv_Set() const;
    bool is_elec_to_pv_Valid() const;

    bool isElecTotalGen() const;
    void setElecTotalGen(const bool &elec_total_gen);
    bool is_elec_total_gen_Set() const;
    bool is_elec_total_gen_Valid() const;

    bool isElecTotalUsage() const;
    void setElecTotalUsage(const bool &elec_total_usage);
    bool is_elec_total_usage_Set() const;
    bool is_elec_total_usage_Valid() const;

    bool isElecUsage() const;
    void setElecUsage(const bool &elec_usage);
    bool is_elec_usage_Set() const;
    bool is_elec_usage_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_battery_charge;
    bool m_battery_charge_isSet;
    bool m_battery_charge_isValid;

    bool m_battery_discharge;
    bool m_battery_discharge_isSet;
    bool m_battery_discharge_isValid;

    bool m_battery_grid;
    bool m_battery_grid_isSet;
    bool m_battery_grid_isValid;

    bool m_elec_drawn;
    bool m_elec_drawn_isSet;
    bool m_elec_drawn_isValid;

    bool m_elec_feed_in;
    bool m_elec_feed_in_isSet;
    bool m_elec_feed_in_isValid;

    bool m_elec_from_household;
    bool m_elec_from_household_isSet;
    bool m_elec_from_household_isValid;

    bool m_elec_local;
    bool m_elec_local_isSet;
    bool m_elec_local_isValid;

    bool m_elec_to_pv;
    bool m_elec_to_pv_isSet;
    bool m_elec_to_pv_isValid;

    bool m_elec_total_gen;
    bool m_elec_total_gen_isSet;
    bool m_elec_total_gen_isValid;

    bool m_elec_total_usage;
    bool m_elec_total_usage_isSet;
    bool m_elec_total_usage_isValid;

    bool m_elec_usage;
    bool m_elec_usage_isSet;
    bool m_elec_usage_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIElectricityMissingFlows)

#endif // OAIElectricityMissingFlows_H
