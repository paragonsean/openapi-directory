/**
 * IoEÂ² IoT API - to create end-user applications
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: contact@ijenko.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIElectricityStatusCode.h
 *
 * Status code. 200000 means OK. Other codes indicate full or partial failure.
 */

#ifndef OAIElectricityStatusCode_H
#define OAIElectricityStatusCode_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIElectricityStatusCode : public OAIEnum {
public:
    OAIElectricityStatusCode();
    OAIElectricityStatusCode(QString json);
    ~OAIElectricityStatusCode() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAIElectricityStatusCode : int {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        _200000, 
        _200001, 
        _200002
    };
    OAIElectricityStatusCode::eOAIElectricityStatusCode getValue() const;
    void setValue(const OAIElectricityStatusCode::eOAIElectricityStatusCode& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAIElectricityStatusCode m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIElectricityStatusCode)

#endif // OAIElectricityStatusCode_H
