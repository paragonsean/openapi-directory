/**
 * IoEÂ² IoT API - to create end-user applications
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: contact@ijenko.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AttributeValue model module.
 * @module model/AttributeValue
 * @version 3.0.0
 */
class AttributeValue {
    /**
     * Constructs a new <code>AttributeValue</code>.
     * @alias module:model/AttributeValue
     * @param value {Object} null/boolean/integer/number/string/object/array
     * @param when {Date} 
     */
    constructor(value, when) { 
        
        AttributeValue.initialize(this, value, when);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, value, when) { 
        obj['value'] = value;
        obj['when'] = when;
    }

    /**
     * Constructs a <code>AttributeValue</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AttributeValue} obj Optional instance to populate.
     * @return {module:model/AttributeValue} The populated <code>AttributeValue</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AttributeValue();

            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], Object);
            }
            if (data.hasOwnProperty('when')) {
                obj['when'] = ApiClient.convertToType(data['when'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AttributeValue</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AttributeValue</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AttributeValue.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

AttributeValue.RequiredProperties = ["value", "when"];

/**
 * null/boolean/integer/number/string/object/array
 * @member {Object} value
 */
AttributeValue.prototype['value'] = undefined;

/**
 * @member {Date} when
 */
AttributeValue.prototype['when'] = undefined;






export default AttributeValue;

