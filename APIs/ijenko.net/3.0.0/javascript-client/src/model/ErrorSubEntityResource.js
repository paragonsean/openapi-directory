/**
 * IoEÂ² IoT API - to create end-user applications
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: contact@ijenko.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ErrorSubEntityResourceParent from './ErrorSubEntityResourceParent';

/**
 * The ErrorSubEntityResource model module.
 * @module model/ErrorSubEntityResource
 * @version 3.0.0
 */
class ErrorSubEntityResource {
    /**
     * Constructs a new <code>ErrorSubEntityResource</code>.
     * @alias module:model/ErrorSubEntityResource
     * @param entity {module:model/ErrorSubEntityResource.EntityEnum} 
     * @param href {String} 
     * @param id {String} 
     */
    constructor(entity, href, id) { 
        
        ErrorSubEntityResource.initialize(this, entity, href, id);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, entity, href, id) { 
        obj['entity'] = entity;
        obj['href'] = href;
        obj['id'] = id;
    }

    /**
     * Constructs a <code>ErrorSubEntityResource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ErrorSubEntityResource} obj Optional instance to populate.
     * @return {module:model/ErrorSubEntityResource} The populated <code>ErrorSubEntityResource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ErrorSubEntityResource();

            if (data.hasOwnProperty('entity')) {
                obj['entity'] = ApiClient.convertToType(data['entity'], 'String');
            }
            if (data.hasOwnProperty('href')) {
                obj['href'] = ApiClient.convertToType(data['href'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('parent')) {
                obj['parent'] = ErrorSubEntityResourceParent.constructFromObject(data['parent']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ErrorSubEntityResource</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ErrorSubEntityResource</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ErrorSubEntityResource.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['entity'] && !(typeof data['entity'] === 'string' || data['entity'] instanceof String)) {
            throw new Error("Expected the field `entity` to be a primitive type in the JSON string but got " + data['entity']);
        }
        // ensure the json data is a string
        if (data['href'] && !(typeof data['href'] === 'string' || data['href'] instanceof String)) {
            throw new Error("Expected the field `href` to be a primitive type in the JSON string but got " + data['href']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `parent`
        if (data['parent']) { // data not null
          ErrorSubEntityResourceParent.validateJSON(data['parent']);
        }

        return true;
    }


}

ErrorSubEntityResource.RequiredProperties = ["entity", "href", "id"];

/**
 * @member {module:model/ErrorSubEntityResource.EntityEnum} entity
 */
ErrorSubEntityResource.prototype['entity'] = undefined;

/**
 * @member {String} href
 */
ErrorSubEntityResource.prototype['href'] = undefined;

/**
 * @member {String} id
 */
ErrorSubEntityResource.prototype['id'] = undefined;

/**
 * @member {module:model/ErrorSubEntityResourceParent} parent
 */
ErrorSubEntityResource.prototype['parent'] = undefined;





/**
 * Allowed values for the <code>entity</code> property.
 * @enum {String}
 * @readonly
 */
ErrorSubEntityResource['EntityEnum'] = {

    /**
     * value: "Action"
     * @const
     */
    "Action": "Action",

    /**
     * value: "Attribute"
     * @const
     */
    "Attribute": "Attribute",

    /**
     * value: "Bus"
     * @const
     */
    "Bus": "Bus"
};



export default ErrorSubEntityResource;

