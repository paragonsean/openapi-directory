/**
 * IoEÂ² IoT API - to create end-user applications
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: contact@ijenko.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BusItem model module.
 * @module model/BusItem
 * @version 3.0.0
 */
class BusItem {
    /**
     * Constructs a new <code>BusItem</code>.
     * @alias module:model/BusItem
     * @param functionality {String} Unique identifier of the *Functionality*
     * @param id {String} 
     * @param protocol {String} 
     */
    constructor(functionality, id, protocol) { 
        
        BusItem.initialize(this, functionality, id, protocol);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, functionality, id, protocol) { 
        obj['functionality'] = functionality;
        obj['id'] = id;
        obj['protocol'] = protocol;
    }

    /**
     * Constructs a <code>BusItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BusItem} obj Optional instance to populate.
     * @return {module:model/BusItem} The populated <code>BusItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BusItem();

            if (data.hasOwnProperty('functionality')) {
                obj['functionality'] = ApiClient.convertToType(data['functionality'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('protocol')) {
                obj['protocol'] = ApiClient.convertToType(data['protocol'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BusItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BusItem</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BusItem.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['functionality'] && !(typeof data['functionality'] === 'string' || data['functionality'] instanceof String)) {
            throw new Error("Expected the field `functionality` to be a primitive type in the JSON string but got " + data['functionality']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['protocol'] && !(typeof data['protocol'] === 'string' || data['protocol'] instanceof String)) {
            throw new Error("Expected the field `protocol` to be a primitive type in the JSON string but got " + data['protocol']);
        }

        return true;
    }


}

BusItem.RequiredProperties = ["functionality", "id", "protocol"];

/**
 * Unique identifier of the *Functionality*
 * @member {String} functionality
 */
BusItem.prototype['functionality'] = undefined;

/**
 * @member {String} id
 */
BusItem.prototype['id'] = undefined;

/**
 * @member {String} protocol
 */
BusItem.prototype['protocol'] = undefined;






export default BusItem;

