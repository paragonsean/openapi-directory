# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ElectricityFlowName(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    BATTERY_CHARGE = 'battery_charge'
    BATTERY_DISCHARGE = 'battery_discharge'
    BATTERY_GRID = 'battery_grid'
    ELEC_TOTAL_GEN = 'elec_total_gen'
    ELEC_TOTAL_USAGE = 'elec_total_usage'
    ELEC_FEED_IN = 'elec_feed_in'
    ELEC_DRAWN = 'elec_drawn'
    ELEC_LOCAL = 'elec_local'
    ELEC_FROM_HOUSEHOLD = 'elec_from_household'
    ELEC_TO_PV = 'elec_to_pv'
    ELEC_USAGE = 'elec_usage'

    def __init__(self):
        """ElectricityFlowName - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ElectricityFlowName':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ElectricityFlowName of this ElectricityFlowName.
        """
        return util.deserialize_model(dikt, cls)
