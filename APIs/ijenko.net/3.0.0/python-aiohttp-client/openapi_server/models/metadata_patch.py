# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MetadataPatch(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, add: Dict[str, object]=None, remove: list[str]=None):
        """MetadataPatch - a model defined in OpenAPI

        :param add: The add of this MetadataPatch.
        :param remove: The remove of this MetadataPatch.
        """
        self.openapi_types = {
            'add': Dict[str, object],
            'remove': list[str]
        }

        self.attribute_map = {
            'add': 'add',
            'remove': 'remove'
        }

        self._add = add
        self._remove = remove

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MetadataPatch':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MetadataPatch of this MetadataPatch.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def add(self):
        """Gets the add of this MetadataPatch.

        list of pairs key/value to add/replace

        :return: The add of this MetadataPatch.
        :rtype: Dict[str, object]
        """
        return self._add

    @add.setter
    def add(self, add):
        """Sets the add of this MetadataPatch.

        list of pairs key/value to add/replace

        :param add: The add of this MetadataPatch.
        :type add: Dict[str, object]
        """

        self._add = add

    @property
    def remove(self):
        """Gets the remove of this MetadataPatch.

        list of keys to remove

        :return: The remove of this MetadataPatch.
        :rtype: list[str]
        """
        return self._remove

    @remove.setter
    def remove(self, remove):
        """Sets the remove of this MetadataPatch.

        list of keys to remove

        :param remove: The remove of this MetadataPatch.
        :type remove: list[str]
        """

        self._remove = remove
