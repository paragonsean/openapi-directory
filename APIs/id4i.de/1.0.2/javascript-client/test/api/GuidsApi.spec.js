/**
 * ID4i API
 * ID4i HTTP API
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: info@bluerain.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Id4iApi);
  }
}(this, function(expect, Id4iApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Id4iApi.GuidsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GuidsApi', function() {
    describe('addGuidAlias_0', function() {
      it('should call addGuidAlias_0 successfully', function(done) {
        //uncomment below and update the code to test addGuidAlias_0
        //instance.addGuidAlias_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createGuid', function() {
      it('should call createGuid successfully', function(done) {
        //uncomment below and update the code to test createGuid
        //instance.createGuid(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteProperties_0', function() {
      it('should call deleteProperties_0 successfully', function(done) {
        //uncomment below and update the code to test deleteProperties_0
        //instance.deleteProperties_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCollections', function() {
      it('should call getCollections successfully', function(done) {
        //uncomment below and update the code to test getCollections
        //instance.getCollections(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGuid', function() {
      it('should call getGuid successfully', function(done) {
        //uncomment below and update the code to test getGuid
        //instance.getGuid(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGuidAliases_0', function() {
      it('should call getGuidAliases_0 successfully', function(done) {
        //uncomment below and update the code to test getGuidAliases_0
        //instance.getGuidAliases_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGuidsWithoutCollection', function() {
      it('should call getGuidsWithoutCollection successfully', function(done) {
        //uncomment below and update the code to test getGuidsWithoutCollection
        //instance.getGuidsWithoutCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getId4n', function() {
      it('should call getId4n successfully', function(done) {
        //uncomment below and update the code to test getId4n
        //instance.getId4n(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMultipleProperties_0', function() {
      it('should call getMultipleProperties_0 successfully', function(done) {
        //uncomment below and update the code to test getMultipleProperties_0
        //instance.getMultipleProperties_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProperties_0', function() {
      it('should call getProperties_0 successfully', function(done) {
        //uncomment below and update the code to test getProperties_0
        //instance.getProperties_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('importGS1Codes', function() {
      it('should call importGS1Codes successfully', function(done) {
        //uncomment below and update the code to test importGS1Codes
        //instance.importGS1Codes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchProperties_0', function() {
      it('should call patchProperties_0 successfully', function(done) {
        //uncomment below and update the code to test patchProperties_0
        //instance.patchProperties_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeGuidAlias_0', function() {
      it('should call removeGuidAlias_0 successfully', function(done) {
        //uncomment below and update the code to test removeGuidAlias_0
        //instance.removeGuidAlias_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateGuid', function() {
      it('should call updateGuid successfully', function(done) {
        //uncomment below and update the code to test updateGuid
        //instance.updateGuid(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
