/**
 * ID4i API
 * ID4i HTTP API
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: info@bluerain.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiError from '../model/ApiError';
import AppInfoPresentation from '../model/AppInfoPresentation';

/**
* MetaInformation service.
* @module api/MetaInformationApi
* @version 1.0.2
*/
export default class MetaInformationApi {

    /**
    * Constructs a new MetaInformationApi. 
    * @alias module:api/MetaInformationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the applicationInfo operation.
     * @callback module:api/MetaInformationApi~applicationInfoCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AppInfoPresentation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve version information about ID4i
     * Retrieving version information about ID4i.
     * @param {module:api/MetaInformationApi~applicationInfoCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AppInfoPresentation}
     */
    applicationInfo(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = AppInfoPresentation;
      return this.apiClient.callApi(
        '/api/v1/info', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
