/**
 * ID4i API
 * ID4i HTTP API
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: info@bluerain.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiError from '../model/ApiError';
import PaginatedResponseOfChangeLogEntry from '../model/PaginatedResponseOfChangeLogEntry';

/**
* Auditing service.
* @module api/AuditingApi
* @version 1.0.2
*/
export default class AuditingApi {

    /**
    * Constructs a new AuditingApi. 
    * @alias module:api/AuditingApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the listOrganizationChangeLog operation.
     * @callback module:api/AuditingApi~listOrganizationChangeLogCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaginatedResponseOfChangeLogEntry} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List change log entries of an organization
     * Listing change log entries of the specified organization id.
     * @param {String} organizationId The namespace identifying the organization whose change log entries are to be listed
     * @param {Object} opts Optional parameters
     * @param {String} [messageMimeType = 'text/mustache')] The Mime-type for the message format that should be returned. e.g. 'text/plain' or 'text/mustache' 
     * @param {Date} [fromDate] From date time as UTC Date-Time format
     * @param {Date} [toDate] To date time as UTC Date-Time format
     * @param {Number} [offset] Start with the n-th element
     * @param {Number} [limit] The maximum count of returned elements
     * @param {module:api/AuditingApi~listOrganizationChangeLogCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaginatedResponseOfChangeLogEntry}
     */
    listOrganizationChangeLog(organizationId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'organizationId' is set
      if (organizationId === undefined || organizationId === null) {
        throw new Error("Missing the required parameter 'organizationId' when calling listOrganizationChangeLog");
      }

      let pathParams = {
        'organizationId': organizationId
      };
      let queryParams = {
        'messageMimeType': opts['messageMimeType'],
        'fromDate': opts['fromDate'],
        'toDate': opts['toDate'],
        'offset': opts['offset'],
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Authorization'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = PaginatedResponseOfChangeLogEntry;
      return this.apiClient.callApi(
        '/api/v1/changelog/organization/{organizationId}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
