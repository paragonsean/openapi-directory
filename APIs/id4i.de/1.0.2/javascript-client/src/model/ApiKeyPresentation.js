/**
 * ID4i API
 * ID4i HTTP API
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: info@bluerain.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApiKeyPresentation model module.
 * @module model/ApiKeyPresentation
 * @version 1.0.2
 */
class ApiKeyPresentation {
    /**
     * Constructs a new <code>ApiKeyPresentation</code>.
     * @alias module:model/ApiKeyPresentation
     * @param active {Boolean} Whether this API key is active
     * @param createdAt {Number} The UTC unix timestamp of when this api key has been created
     * @param createdBy {String} 
     * @param key {String} The api key identifier
     * @param label {String} The label / name of the api key
     * @param organizationId {String} The organization namespace this api key belongs to
     */
    constructor(active, createdAt, createdBy, key, label, organizationId) { 
        
        ApiKeyPresentation.initialize(this, active, createdAt, createdBy, key, label, organizationId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, active, createdAt, createdBy, key, label, organizationId) { 
        obj['active'] = active;
        obj['createdAt'] = createdAt;
        obj['createdBy'] = createdBy;
        obj['key'] = key;
        obj['label'] = label;
        obj['organizationId'] = organizationId;
    }

    /**
     * Constructs a <code>ApiKeyPresentation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiKeyPresentation} obj Optional instance to populate.
     * @return {module:model/ApiKeyPresentation} The populated <code>ApiKeyPresentation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiKeyPresentation();

            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Number');
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = ApiClient.convertToType(data['createdBy'], 'String');
            }
            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
            if (data.hasOwnProperty('organizationId')) {
                obj['organizationId'] = ApiClient.convertToType(data['organizationId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiKeyPresentation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiKeyPresentation</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApiKeyPresentation.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['createdBy'] && !(typeof data['createdBy'] === 'string' || data['createdBy'] instanceof String)) {
            throw new Error("Expected the field `createdBy` to be a primitive type in the JSON string but got " + data['createdBy']);
        }
        // ensure the json data is a string
        if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
            throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
        }
        // ensure the json data is a string
        if (data['label'] && !(typeof data['label'] === 'string' || data['label'] instanceof String)) {
            throw new Error("Expected the field `label` to be a primitive type in the JSON string but got " + data['label']);
        }
        // ensure the json data is a string
        if (data['organizationId'] && !(typeof data['organizationId'] === 'string' || data['organizationId'] instanceof String)) {
            throw new Error("Expected the field `organizationId` to be a primitive type in the JSON string but got " + data['organizationId']);
        }

        return true;
    }


}

ApiKeyPresentation.RequiredProperties = ["active", "createdAt", "createdBy", "key", "label", "organizationId"];

/**
 * Whether this API key is active
 * @member {Boolean} active
 */
ApiKeyPresentation.prototype['active'] = undefined;

/**
 * The UTC unix timestamp of when this api key has been created
 * @member {Number} createdAt
 */
ApiKeyPresentation.prototype['createdAt'] = undefined;

/**
 * @member {String} createdBy
 */
ApiKeyPresentation.prototype['createdBy'] = undefined;

/**
 * The api key identifier
 * @member {String} key
 */
ApiKeyPresentation.prototype['key'] = undefined;

/**
 * The label / name of the api key
 * @member {String} label
 */
ApiKeyPresentation.prototype['label'] = undefined;

/**
 * The organization namespace this api key belongs to
 * @member {String} organizationId
 */
ApiKeyPresentation.prototype['organizationId'] = undefined;






export default ApiKeyPresentation;

