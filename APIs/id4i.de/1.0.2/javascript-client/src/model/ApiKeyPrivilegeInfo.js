/**
 * ID4i API
 * ID4i HTTP API
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: info@bluerain.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApiKeyPrivilegeInfo model module.
 * @module model/ApiKeyPrivilegeInfo
 * @version 1.0.2
 */
class ApiKeyPrivilegeInfo {
    /**
     * Constructs a new <code>ApiKeyPrivilegeInfo</code>.
     * @alias module:model/ApiKeyPrivilegeInfo
     * @param id4nAssociated {Boolean} 
     * @param name {String} 
     */
    constructor(id4nAssociated, name) { 
        
        ApiKeyPrivilegeInfo.initialize(this, id4nAssociated, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id4nAssociated, name) { 
        obj['id4nAssociated'] = id4nAssociated;
        obj['name'] = name;
    }

    /**
     * Constructs a <code>ApiKeyPrivilegeInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiKeyPrivilegeInfo} obj Optional instance to populate.
     * @return {module:model/ApiKeyPrivilegeInfo} The populated <code>ApiKeyPrivilegeInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiKeyPrivilegeInfo();

            if (data.hasOwnProperty('allowsBillableOperations')) {
                obj['allowsBillableOperations'] = ApiClient.convertToType(data['allowsBillableOperations'], 'Boolean');
            }
            if (data.hasOwnProperty('helpText')) {
                obj['helpText'] = ApiClient.convertToType(data['helpText'], 'String');
            }
            if (data.hasOwnProperty('id4nAssociated')) {
                obj['id4nAssociated'] = ApiClient.convertToType(data['id4nAssociated'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiKeyPrivilegeInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiKeyPrivilegeInfo</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApiKeyPrivilegeInfo.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['helpText'] && !(typeof data['helpText'] === 'string' || data['helpText'] instanceof String)) {
            throw new Error("Expected the field `helpText` to be a primitive type in the JSON string but got " + data['helpText']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}

ApiKeyPrivilegeInfo.RequiredProperties = ["id4nAssociated", "name"];

/**
 * @member {Boolean} allowsBillableOperations
 */
ApiKeyPrivilegeInfo.prototype['allowsBillableOperations'] = undefined;

/**
 * @member {String} helpText
 */
ApiKeyPrivilegeInfo.prototype['helpText'] = undefined;

/**
 * @member {Boolean} id4nAssociated
 */
ApiKeyPrivilegeInfo.prototype['id4nAssociated'] = undefined;

/**
 * @member {String} name
 */
ApiKeyPrivilegeInfo.prototype['name'] = undefined;






export default ApiKeyPrivilegeInfo;

