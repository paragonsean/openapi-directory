/**
 * ID4i API
 * ID4i HTTP API
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: info@bluerain.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Visibility from './Visibility';

/**
 * The HistoryItemUpdate model module.
 * @module model/HistoryItemUpdate
 * @version 1.0.2
 */
class HistoryItemUpdate {
    /**
     * Constructs a new <code>HistoryItemUpdate</code>.
     * GUID history item update (diff patch)
     * @alias module:model/HistoryItemUpdate
     */
    constructor() { 
        
        HistoryItemUpdate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HistoryItemUpdate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HistoryItemUpdate} obj Optional instance to populate.
     * @return {module:model/HistoryItemUpdate} The populated <code>HistoryItemUpdate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HistoryItemUpdate();

            if (data.hasOwnProperty('organizationId')) {
                obj['organizationId'] = ApiClient.convertToType(data['organizationId'], 'String');
            }
            if (data.hasOwnProperty('visibility')) {
                obj['visibility'] = Visibility.constructFromObject(data['visibility']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HistoryItemUpdate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HistoryItemUpdate</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['organizationId'] && !(typeof data['organizationId'] === 'string' || data['organizationId'] instanceof String)) {
            throw new Error("Expected the field `organizationId` to be a primitive type in the JSON string but got " + data['organizationId']);
        }
        // validate the optional field `visibility`
        if (data['visibility']) { // data not null
          Visibility.validateJSON(data['visibility']);
        }

        return true;
    }


}



/**
 * New organization id displayed for this item. If given, must match the holder of GUID and the organization the history item is found under.
 * @member {String} organizationId
 */
HistoryItemUpdate.prototype['organizationId'] = undefined;

/**
 * @member {module:model/Visibility} visibility
 */
HistoryItemUpdate.prototype['visibility'] = undefined;






export default HistoryItemUpdate;

