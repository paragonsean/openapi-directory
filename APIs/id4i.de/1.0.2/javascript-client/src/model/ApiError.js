/**
 * ID4i API
 * ID4i HTTP API
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: info@bluerain.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApiError model module.
 * @module model/ApiError
 * @version 1.0.2
 */
class ApiError {
    /**
     * Constructs a new <code>ApiError</code>.
     * @alias module:model/ApiError
     * @param code {module:model/ApiError.CodeEnum} 
     * @param errorId {String} 
     * @param errorList {Array.<module:model/ApiError>} 
     * @param message {String} 
     */
    constructor(code, errorId, errorList, message) { 
        
        ApiError.initialize(this, code, errorId, errorList, message);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, code, errorId, errorList, message) { 
        obj['code'] = code;
        obj['errorId'] = errorId;
        obj['errorList'] = errorList;
        obj['message'] = message;
    }

    /**
     * Constructs a <code>ApiError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiError} obj Optional instance to populate.
     * @return {module:model/ApiError} The populated <code>ApiError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiError();

            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('errorId')) {
                obj['errorId'] = ApiClient.convertToType(data['errorId'], 'String');
            }
            if (data.hasOwnProperty('errorList')) {
                obj['errorList'] = ApiClient.convertToType(data['errorList'], [ApiError]);
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiError</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiError</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApiError.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }
        // ensure the json data is a string
        if (data['errorId'] && !(typeof data['errorId'] === 'string' || data['errorId'] instanceof String)) {
            throw new Error("Expected the field `errorId` to be a primitive type in the JSON string but got " + data['errorId']);
        }
        if (data['errorList']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['errorList'])) {
                throw new Error("Expected the field `errorList` to be an array in the JSON data but got " + data['errorList']);
            }
            // validate the optional field `errorList` (array)
            for (const item of data['errorList']) {
                ApiError.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }

        return true;
    }


}

ApiError.RequiredProperties = ["code", "errorId", "errorList", "message"];

/**
 * @member {module:model/ApiError.CodeEnum} code
 */
ApiError.prototype['code'] = undefined;

/**
 * @member {String} errorId
 */
ApiError.prototype['errorId'] = undefined;

/**
 * @member {Array.<module:model/ApiError>} errorList
 */
ApiError.prototype['errorList'] = undefined;

/**
 * @member {String} message
 */
ApiError.prototype['message'] = undefined;





/**
 * Allowed values for the <code>code</code> property.
 * @enum {String}
 * @readonly
 */
ApiError['CodeEnum'] = {

    /**
     * value: "ERR_REGISTRATION_VERIFICATION_NO_TOKEN"
     * @const
     */
    "REGISTRATION_VERIFICATION_NO_TOKEN": "ERR_REGISTRATION_VERIFICATION_NO_TOKEN",

    /**
     * value: "ERR_REGISTRATION_VERIFICATION_INVALID_TOKEN"
     * @const
     */
    "REGISTRATION_VERIFICATION_INVALID_TOKEN": "ERR_REGISTRATION_VERIFICATION_INVALID_TOKEN",

    /**
     * value: "ERR_REGISTRATION_VERIFICATION_EXPIRED_TOKEN"
     * @const
     */
    "REGISTRATION_VERIFICATION_EXPIRED_TOKEN": "ERR_REGISTRATION_VERIFICATION_EXPIRED_TOKEN",

    /**
     * value: "ERR_AUTHENTICATION_NO_TOKEN"
     * @const
     */
    "AUTHENTICATION_NO_TOKEN": "ERR_AUTHENTICATION_NO_TOKEN",

    /**
     * value: "ERR_AUTHENTICATION_INVALID_TOKEN"
     * @const
     */
    "AUTHENTICATION_INVALID_TOKEN": "ERR_AUTHENTICATION_INVALID_TOKEN",

    /**
     * value: "ERR_AUTHENTICATION_EXPIRED_TOKEN"
     * @const
     */
    "AUTHENTICATION_EXPIRED_TOKEN": "ERR_AUTHENTICATION_EXPIRED_TOKEN",

    /**
     * value: "ERR_AUTHENTICATION_FAILED"
     * @const
     */
    "AUTHENTICATION_FAILED": "ERR_AUTHENTICATION_FAILED",

    /**
     * value: "ERR_AUTHORIZATION_MISSING_PRIVILEGES"
     * @const
     */
    "AUTHORIZATION_MISSING_PRIVILEGES": "ERR_AUTHORIZATION_MISSING_PRIVILEGES",

    /**
     * value: "ERR_AUTHORIZATION_FORBIDDEN"
     * @const
     */
    "AUTHORIZATION_FORBIDDEN": "ERR_AUTHORIZATION_FORBIDDEN",

    /**
     * value: "ERR_AUTHORIZATION_REQUIRE_USER"
     * @const
     */
    "AUTHORIZATION_REQUIRE_USER": "ERR_AUTHORIZATION_REQUIRE_USER",

    /**
     * value: "ERR_INPUT_VALIDATION_FAILED"
     * @const
     */
    "INPUT_VALIDATION_FAILED": "ERR_INPUT_VALIDATION_FAILED",

    /**
     * value: "ERR_FIELD_INPUT_VALIDATION_FAILED"
     * @const
     */
    "FIELD_INPUT_VALIDATION_FAILED": "ERR_FIELD_INPUT_VALIDATION_FAILED",

    /**
     * value: "ERR_VALIDATION_CONSTRAINT_FAILED"
     * @const
     */
    "VALIDATION_CONSTRAINT_FAILED": "ERR_VALIDATION_CONSTRAINT_FAILED",

    /**
     * value: "ERR_INPUT_NOT_READABLE"
     * @const
     */
    "INPUT_NOT_READABLE": "ERR_INPUT_NOT_READABLE",

    /**
     * value: "ERR_INVALID_INPUT_PARAMETER"
     * @const
     */
    "INVALID_INPUT_PARAMETER": "ERR_INVALID_INPUT_PARAMETER",

    /**
     * value: "ERR_GUID_CREATION"
     * @const
     */
    "GUID_CREATION": "ERR_GUID_CREATION",

    /**
     * value: "ERR_INVALID_ID4N_OBJECT_TYPE"
     * @const
     */
    "INVALID_ID4N_OBJECT_TYPE": "ERR_INVALID_ID4N_OBJECT_TYPE",

    /**
     * value: "ERR_MISSING_BILLING_INFORMATION"
     * @const
     */
    "MISSING_BILLING_INFORMATION": "ERR_MISSING_BILLING_INFORMATION",

    /**
     * value: "ERR_COLLECTION_UPDATE_DENIED"
     * @const
     */
    "COLLECTION_UPDATE_DENIED": "ERR_COLLECTION_UPDATE_DENIED",

    /**
     * value: "ERR_ENTITY_NOT_FOUND"
     * @const
     */
    "ENTITY_NOT_FOUND": "ERR_ENTITY_NOT_FOUND",

    /**
     * value: "ERR_ENTITY_TOO_BIG"
     * @const
     */
    "ENTITY_TOO_BIG": "ERR_ENTITY_TOO_BIG",

    /**
     * value: "ERR_DUPLICATE"
     * @const
     */
    "DUPLICATE": "ERR_DUPLICATE",

    /**
     * value: "ERR_INTERNAL"
     * @const
     */
    "INTERNAL": "ERR_INTERNAL",

    /**
     * value: "ERR_UNKNOWN"
     * @const
     */
    "UNKNOWN": "ERR_UNKNOWN",

    /**
     * value: "ERR_INVALID_ORGANIZATION_USERROLE"
     * @const
     */
    "INVALID_ORGANIZATION_USERROLE": "ERR_INVALID_ORGANIZATION_USERROLE",

    /**
     * value: "ERR_ORGANIZATION_ROLE_INCONSISTENCY"
     * @const
     */
    "ORGANIZATION_ROLE_INCONSISTENCY": "ERR_ORGANIZATION_ROLE_INCONSISTENCY",

    /**
     * value: "ERR_ORGANIZATION_NOT_DELETABLE"
     * @const
     */
    "ORGANIZATION_NOT_DELETABLE": "ERR_ORGANIZATION_NOT_DELETABLE",

    /**
     * value: "ERR_USER_ALREADY_IN_ORGANIZATION"
     * @const
     */
    "USER_ALREADY_IN_ORGANIZATION": "ERR_USER_ALREADY_IN_ORGANIZATION",

    /**
     * value: "ERR_USER_INVITATION_NEEDS_MINIMUM_ONE_ROLE"
     * @const
     */
    "USER_INVITATION_NEEDS_MINIMUM_ONE_ROLE": "ERR_USER_INVITATION_NEEDS_MINIMUM_ONE_ROLE",

    /**
     * value: "ERR_USER_INVITATION_SPECIFY_EMAIL_OR_USERNAME"
     * @const
     */
    "USER_INVITATION_SPECIFY_EMAIL_OR_USERNAME": "ERR_USER_INVITATION_SPECIFY_EMAIL_OR_USERNAME",

    /**
     * value: "ERR_USER_DEACTIVATED"
     * @const
     */
    "USER_DEACTIVATED": "ERR_USER_DEACTIVATED",

    /**
     * value: "ERR_LANGUAGE_NOT_SUPPORTED"
     * @const
     */
    "LANGUAGE_NOT_SUPPORTED": "ERR_LANGUAGE_NOT_SUPPORTED",

    /**
     * value: "ERR_EMAIL_MISSING_TEMPLATE_PARAM"
     * @const
     */
    "EMAIL_MISSING_TEMPLATE_PARAM": "ERR_EMAIL_MISSING_TEMPLATE_PARAM",

    /**
     * value: "ERR_EMAIL_TEMPLATE_NOT_AVAILABLE"
     * @const
     */
    "EMAIL_TEMPLATE_NOT_AVAILABLE": "ERR_EMAIL_TEMPLATE_NOT_AVAILABLE",

    /**
     * value: "ERR_EMAIL_PREPARATION_FAILED"
     * @const
     */
    "EMAIL_PREPARATION_FAILED": "ERR_EMAIL_PREPARATION_FAILED",

    /**
     * value: "ERR_IMAGE_CONVERSION"
     * @const
     */
    "IMAGE_CONVERSION": "ERR_IMAGE_CONVERSION",

    /**
     * value: "ERR_UPLOAD_TOO_LARGE"
     * @const
     */
    "UPLOAD_TOO_LARGE": "ERR_UPLOAD_TOO_LARGE",

    /**
     * value: "ERR_INVALID_ALIAS_TYPE"
     * @const
     */
    "INVALID_ALIAS_TYPE": "ERR_INVALID_ALIAS_TYPE",

    /**
     * value: "ERR_INVALID_URI_TEMPLATE"
     * @const
     */
    "INVALID_URI_TEMPLATE": "ERR_INVALID_URI_TEMPLATE",

    /**
     * value: "ERR_INVALID_URI_TEMPLATE_VARIABLE"
     * @const
     */
    "INVALID_URI_TEMPLATE_VARIABLE": "ERR_INVALID_URI_TEMPLATE_VARIABLE",

    /**
     * value: "ERR_INVALID_NAMESPACE"
     * @const
     */
    "INVALID_NAMESPACE": "ERR_INVALID_NAMESPACE",

    /**
     * value: "ERR_INVALID_PROPERTY_KEY"
     * @const
     */
    "INVALID_PROPERTY_KEY": "ERR_INVALID_PROPERTY_KEY",

    /**
     * value: "ERR_INVALID_FILTER"
     * @const
     */
    "INVALID_FILTER": "ERR_INVALID_FILTER",

    /**
     * value: "ERR_NAMESPACE_ALREADY_EXISTS"
     * @const
     */
    "NAMESPACE_ALREADY_EXISTS": "ERR_NAMESPACE_ALREADY_EXISTS",

    /**
     * value: "ERR_INSECURE_PASSWORD"
     * @const
     */
    "INSECURE_PASSWORD": "ERR_INSECURE_PASSWORD",

    /**
     * value: "ERR_TRANSFER_DENIED"
     * @const
     */
    "TRANSFER_DENIED": "ERR_TRANSFER_DENIED",

    /**
     * value: "ERR_INVALID_PHYSICAL_STATE"
     * @const
     */
    "INVALID_PHYSICAL_STATE": "ERR_INVALID_PHYSICAL_STATE",

    /**
     * value: "ERR_INVALID_HISTORY_PROPERTY_NAMESPACE"
     * @const
     */
    "INVALID_HISTORY_PROPERTY_NAMESPACE": "ERR_INVALID_HISTORY_PROPERTY_NAMESPACE",

    /**
     * value: "ERR_INVALID_HISTORY_PROPERTY_VALUE"
     * @const
     */
    "INVALID_HISTORY_PROPERTY_VALUE": "ERR_INVALID_HISTORY_PROPERTY_VALUE",

    /**
     * value: "ERR_ORGA_CANNOT_BE_OWN_PARTNER"
     * @const
     */
    "ORGA_CANNOT_BE_OWN_PARTNER": "ERR_ORGA_CANNOT_BE_OWN_PARTNER",

    /**
     * value: "ERR_INVALID_GS1_CODE"
     * @const
     */
    "INVALID_GS1_CODE": "ERR_INVALID_GS1_CODE",

    /**
     * value: "ERR_INVALID_GS1_CHAR_IN_CODE"
     * @const
     */
    "INVALID_GS1_CHAR_IN_CODE": "ERR_INVALID_GS1_CHAR_IN_CODE",

    /**
     * value: "ERR_INVALID_GS1_CODE_NOT_UNIQUE"
     * @const
     */
    "INVALID_GS1_CODE_NOT_UNIQUE": "ERR_INVALID_GS1_CODE_NOT_UNIQUE",

    /**
     * value: "ERR_INVALID_GS1_GTIN"
     * @const
     */
    "INVALID_GS1_GTIN": "ERR_INVALID_GS1_GTIN",

    /**
     * value: "ERR_GS1_CODE_CURRENTLY_UNSUPPORTED"
     * @const
     */
    "GS1_CODE_CURRENTLY_UNSUPPORTED": "ERR_GS1_CODE_CURRENTLY_UNSUPPORTED"
};



export default ApiError;

