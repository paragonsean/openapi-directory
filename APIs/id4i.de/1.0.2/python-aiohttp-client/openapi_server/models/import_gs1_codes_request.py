# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.list_of_gs1s import ListOfGS1s
from openapi_server import util


class ImportGS1CodesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, list_of_gs1s: ListOfGS1s=None, organization_id: str=None):
        """ImportGS1CodesRequest - a model defined in OpenAPI

        :param list_of_gs1s: The list_of_gs1s of this ImportGS1CodesRequest.
        :param organization_id: The organization_id of this ImportGS1CodesRequest.
        """
        self.openapi_types = {
            'list_of_gs1s': ListOfGS1s,
            'organization_id': str
        }

        self.attribute_map = {
            'list_of_gs1s': 'listOfGS1s',
            'organization_id': 'organizationId'
        }

        self._list_of_gs1s = list_of_gs1s
        self._organization_id = organization_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImportGS1CodesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImportGS1CodesRequest of this ImportGS1CodesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def list_of_gs1s(self):
        """Gets the list_of_gs1s of this ImportGS1CodesRequest.


        :return: The list_of_gs1s of this ImportGS1CodesRequest.
        :rtype: ListOfGS1s
        """
        return self._list_of_gs1s

    @list_of_gs1s.setter
    def list_of_gs1s(self, list_of_gs1s):
        """Sets the list_of_gs1s of this ImportGS1CodesRequest.


        :param list_of_gs1s: The list_of_gs1s of this ImportGS1CodesRequest.
        :type list_of_gs1s: ListOfGS1s
        """
        if list_of_gs1s is None:
            raise ValueError("Invalid value for `list_of_gs1s`, must not be `None`")

        self._list_of_gs1s = list_of_gs1s

    @property
    def organization_id(self):
        """Gets the organization_id of this ImportGS1CodesRequest.

        The organization where the GS1/Mapp code is imported.

        :return: The organization_id of this ImportGS1CodesRequest.
        :rtype: str
        """
        return self._organization_id

    @organization_id.setter
    def organization_id(self, organization_id):
        """Sets the organization_id of this ImportGS1CodesRequest.

        The organization where the GS1/Mapp code is imported.

        :param organization_id: The organization_id of this ImportGS1CodesRequest.
        :type organization_id: str
        """
        if organization_id is None:
            raise ValueError("Invalid value for `organization_id`, must not be `None`")

        self._organization_id = organization_id
