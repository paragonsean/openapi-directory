# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.organization import Organization
from openapi_server.models.organization_address import OrganizationAddress
from openapi_server import util


class WhoIsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aliases: Dict[str, str]=None, organization: Organization=None, organization_address: OrganizationAddress=None):
        """WhoIsResponse - a model defined in OpenAPI

        :param aliases: The aliases of this WhoIsResponse.
        :param organization: The organization of this WhoIsResponse.
        :param organization_address: The organization_address of this WhoIsResponse.
        """
        self.openapi_types = {
            'aliases': Dict[str, str],
            'organization': Organization,
            'organization_address': OrganizationAddress
        }

        self.attribute_map = {
            'aliases': 'aliases',
            'organization': 'organization',
            'organization_address': 'organizationAddress'
        }

        self._aliases = aliases
        self._organization = organization
        self._organization_address = organization_address

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WhoIsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WhoIsResponse of this WhoIsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aliases(self):
        """Gets the aliases of this WhoIsResponse.


        :return: The aliases of this WhoIsResponse.
        :rtype: Dict[str, str]
        """
        return self._aliases

    @aliases.setter
    def aliases(self, aliases):
        """Sets the aliases of this WhoIsResponse.


        :param aliases: The aliases of this WhoIsResponse.
        :type aliases: Dict[str, str]
        """

        self._aliases = aliases

    @property
    def organization(self):
        """Gets the organization of this WhoIsResponse.


        :return: The organization of this WhoIsResponse.
        :rtype: Organization
        """
        return self._organization

    @organization.setter
    def organization(self, organization):
        """Sets the organization of this WhoIsResponse.


        :param organization: The organization of this WhoIsResponse.
        :type organization: Organization
        """

        self._organization = organization

    @property
    def organization_address(self):
        """Gets the organization_address of this WhoIsResponse.


        :return: The organization_address of this WhoIsResponse.
        :rtype: OrganizationAddress
        """
        return self._organization_address

    @organization_address.setter
    def organization_address(self, organization_address):
        """Sets the organization_address of this WhoIsResponse.


        :param organization_address: The organization_address of this WhoIsResponse.
        :type organization_address: OrganizationAddress
        """

        self._organization_address = organization_address
