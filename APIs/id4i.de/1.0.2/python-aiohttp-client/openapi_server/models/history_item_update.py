# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.visibility import Visibility
from openapi_server import util


class HistoryItemUpdate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, organization_id: str=None, visibility: Visibility=None):
        """HistoryItemUpdate - a model defined in OpenAPI

        :param organization_id: The organization_id of this HistoryItemUpdate.
        :param visibility: The visibility of this HistoryItemUpdate.
        """
        self.openapi_types = {
            'organization_id': str,
            'visibility': Visibility
        }

        self.attribute_map = {
            'organization_id': 'organizationId',
            'visibility': 'visibility'
        }

        self._organization_id = organization_id
        self._visibility = visibility

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HistoryItemUpdate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HistoryItemUpdate of this HistoryItemUpdate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def organization_id(self):
        """Gets the organization_id of this HistoryItemUpdate.

        New organization id displayed for this item. If given, must match the holder of GUID and the organization the history item is found under.

        :return: The organization_id of this HistoryItemUpdate.
        :rtype: str
        """
        return self._organization_id

    @organization_id.setter
    def organization_id(self, organization_id):
        """Sets the organization_id of this HistoryItemUpdate.

        New organization id displayed for this item. If given, must match the holder of GUID and the organization the history item is found under.

        :param organization_id: The organization_id of this HistoryItemUpdate.
        :type organization_id: str
        """

        self._organization_id = organization_id

    @property
    def visibility(self):
        """Gets the visibility of this HistoryItemUpdate.


        :return: The visibility of this HistoryItemUpdate.
        :rtype: Visibility
        """
        return self._visibility

    @visibility.setter
    def visibility(self, visibility):
        """Sets the visibility of this HistoryItemUpdate.


        :param visibility: The visibility of this HistoryItemUpdate.
        :type visibility: Visibility
        """

        self._visibility = visibility
