# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.organization_user_invitation import OrganizationUserInvitation
from openapi_server import util


class OrganizationUserInvitationListRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, invitations: List[OrganizationUserInvitation]=None):
        """OrganizationUserInvitationListRequest - a model defined in OpenAPI

        :param invitations: The invitations of this OrganizationUserInvitationListRequest.
        """
        self.openapi_types = {
            'invitations': List[OrganizationUserInvitation]
        }

        self.attribute_map = {
            'invitations': 'invitations'
        }

        self._invitations = invitations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrganizationUserInvitationListRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrganizationUserInvitationListRequest of this OrganizationUserInvitationListRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def invitations(self):
        """Gets the invitations of this OrganizationUserInvitationListRequest.


        :return: The invitations of this OrganizationUserInvitationListRequest.
        :rtype: List[OrganizationUserInvitation]
        """
        return self._invitations

    @invitations.setter
    def invitations(self, invitations):
        """Sets the invitations of this OrganizationUserInvitationListRequest.


        :param invitations: The invitations of this OrganizationUserInvitationListRequest.
        :type invitations: List[OrganizationUserInvitation]
        """
        if invitations is None:
            raise ValueError("Invalid value for `invitations`, must not be `None`")

        self._invitations = invitations
