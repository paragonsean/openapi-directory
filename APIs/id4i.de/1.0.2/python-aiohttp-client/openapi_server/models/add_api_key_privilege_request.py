# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AddApiKeyPrivilegeRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, privilege: str=None):
        """AddApiKeyPrivilegeRequest - a model defined in OpenAPI

        :param privilege: The privilege of this AddApiKeyPrivilegeRequest.
        """
        self.openapi_types = {
            'privilege': str
        }

        self.attribute_map = {
            'privilege': 'privilege'
        }

        self._privilege = privilege

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddApiKeyPrivilegeRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddApiKeyPrivilegeRequest of this AddApiKeyPrivilegeRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def privilege(self):
        """Gets the privilege of this AddApiKeyPrivilegeRequest.


        :return: The privilege of this AddApiKeyPrivilegeRequest.
        :rtype: str
        """
        return self._privilege

    @privilege.setter
    def privilege(self, privilege):
        """Sets the privilege of this AddApiKeyPrivilegeRequest.


        :param privilege: The privilege of this AddApiKeyPrivilegeRequest.
        :type privilege: str
        """
        if privilege is None:
            raise ValueError("Invalid value for `privilege`, must not be `None`")

        self._privilege = privilege
