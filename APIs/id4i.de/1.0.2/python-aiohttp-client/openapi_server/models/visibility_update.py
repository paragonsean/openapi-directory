# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VisibilityUpdate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, public: bool=None, shared_with_organization_ids: List[str]=None):
        """VisibilityUpdate - a model defined in OpenAPI

        :param public: The public of this VisibilityUpdate.
        :param shared_with_organization_ids: The shared_with_organization_ids of this VisibilityUpdate.
        """
        self.openapi_types = {
            'public': bool,
            'shared_with_organization_ids': List[str]
        }

        self.attribute_map = {
            'public': 'public',
            'shared_with_organization_ids': 'sharedWithOrganizationIds'
        }

        self._public = public
        self._shared_with_organization_ids = shared_with_organization_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VisibilityUpdate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VisibilityUpdate of this VisibilityUpdate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def public(self):
        """Gets the public of this VisibilityUpdate.

        Document is publicly readable (if ID4N is owned by the same organization)

        :return: The public of this VisibilityUpdate.
        :rtype: bool
        """
        return self._public

    @public.setter
    def public(self, public):
        """Sets the public of this VisibilityUpdate.

        Document is publicly readable (if ID4N is owned by the same organization)

        :param public: The public of this VisibilityUpdate.
        :type public: bool
        """

        self._public = public

    @property
    def shared_with_organization_ids(self):
        """Gets the shared_with_organization_ids of this VisibilityUpdate.

        Document is readable by these organizations (independend of ID4N ownership)

        :return: The shared_with_organization_ids of this VisibilityUpdate.
        :rtype: List[str]
        """
        return self._shared_with_organization_ids

    @shared_with_organization_ids.setter
    def shared_with_organization_ids(self, shared_with_organization_ids):
        """Sets the shared_with_organization_ids of this VisibilityUpdate.

        Document is readable by these organizations (independend of ID4N ownership)

        :param shared_with_organization_ids: The shared_with_organization_ids of this VisibilityUpdate.
        :type shared_with_organization_ids: List[str]
        """

        self._shared_with_organization_ids = shared_with_organization_ids
