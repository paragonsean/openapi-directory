# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class QueueUpdateRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active: bool=None, id: str=None, purge_queue: bool=None):
        """QueueUpdateRequest - a model defined in OpenAPI

        :param active: The active of this QueueUpdateRequest.
        :param id: The id of this QueueUpdateRequest.
        :param purge_queue: The purge_queue of this QueueUpdateRequest.
        """
        self.openapi_types = {
            'active': bool,
            'id': str,
            'purge_queue': bool
        }

        self.attribute_map = {
            'active': 'active',
            'id': 'id',
            'purge_queue': 'purgeQueue'
        }

        self._active = active
        self._id = id
        self._purge_queue = purge_queue

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QueueUpdateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QueueUpdateRequest of this QueueUpdateRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active(self):
        """Gets the active of this QueueUpdateRequest.

        If this value is set to false the queue will be deleted.

        :return: The active of this QueueUpdateRequest.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this QueueUpdateRequest.

        If this value is set to false the queue will be deleted.

        :param active: The active of this QueueUpdateRequest.
        :type active: bool
        """

        self._active = active

    @property
    def id(self):
        """Gets the id of this QueueUpdateRequest.


        :return: The id of this QueueUpdateRequest.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this QueueUpdateRequest.


        :param id: The id of this QueueUpdateRequest.
        :type id: str
        """

        self._id = id

    @property
    def purge_queue(self):
        """Gets the purge_queue of this QueueUpdateRequest.

        Set this value to true if you want to purge the queue.

        :return: The purge_queue of this QueueUpdateRequest.
        :rtype: bool
        """
        return self._purge_queue

    @purge_queue.setter
    def purge_queue(self, purge_queue):
        """Sets the purge_queue of this QueueUpdateRequest.

        Set this value to true if you want to purge the queue.

        :param purge_queue: The purge_queue of this QueueUpdateRequest.
        :type purge_queue: bool
        """

        self._purge_queue = purge_queue
