# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.visibility import Visibility
from openapi_server import util


class Document(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, filename: str=None, mime_type: str=None, owner_organization_id: str=None, visibility: Visibility=None):
        """Document - a model defined in OpenAPI

        :param filename: The filename of this Document.
        :param mime_type: The mime_type of this Document.
        :param owner_organization_id: The owner_organization_id of this Document.
        :param visibility: The visibility of this Document.
        """
        self.openapi_types = {
            'filename': str,
            'mime_type': str,
            'owner_organization_id': str,
            'visibility': Visibility
        }

        self.attribute_map = {
            'filename': 'filename',
            'mime_type': 'mimeType',
            'owner_organization_id': 'ownerOrganizationId',
            'visibility': 'visibility'
        }

        self._filename = filename
        self._mime_type = mime_type
        self._owner_organization_id = owner_organization_id
        self._visibility = visibility

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Document':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Document of this Document.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def filename(self):
        """Gets the filename of this Document.

        File Name

        :return: The filename of this Document.
        :rtype: str
        """
        return self._filename

    @filename.setter
    def filename(self, filename):
        """Sets the filename of this Document.

        File Name

        :param filename: The filename of this Document.
        :type filename: str
        """

        self._filename = filename

    @property
    def mime_type(self):
        """Gets the mime_type of this Document.

        Mime Type

        :return: The mime_type of this Document.
        :rtype: str
        """
        return self._mime_type

    @mime_type.setter
    def mime_type(self, mime_type):
        """Sets the mime_type of this Document.

        Mime Type

        :param mime_type: The mime_type of this Document.
        :type mime_type: str
        """

        self._mime_type = mime_type

    @property
    def owner_organization_id(self):
        """Gets the owner_organization_id of this Document.

        The organization's namespace which owns the document

        :return: The owner_organization_id of this Document.
        :rtype: str
        """
        return self._owner_organization_id

    @owner_organization_id.setter
    def owner_organization_id(self, owner_organization_id):
        """Sets the owner_organization_id of this Document.

        The organization's namespace which owns the document

        :param owner_organization_id: The owner_organization_id of this Document.
        :type owner_organization_id: str
        """

        self._owner_organization_id = owner_organization_id

    @property
    def visibility(self):
        """Gets the visibility of this Document.


        :return: The visibility of this Document.
        :rtype: Visibility
        """
        return self._visibility

    @visibility.setter
    def visibility(self, visibility):
        """Sets the visibility of this Document.


        :param visibility: The visibility of this Document.
        :type visibility: Visibility
        """

        self._visibility = visibility
