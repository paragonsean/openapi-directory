openapi: 3.0.0
info:
  contact:
    email: info@bluerain.de
    name: BlueRain Software GmbH & Co. KG
    url: http://bluerain.de
  description: ID4i HTTP API
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://id4i.de
  title: ID4i API
  version: 1.0.2
  x-apisguru-categories:
  - enterprise
  x-logo:
    backgroundColor: '#FAFAFA'
    url: https://id4i.de/wp-content/uploads/2017/11/id4d_logo_h87.png
  x-origin:
  - format: openapi
    url: https://backend.id4i.de/docs/swagger.json
    version: "3.0"
  x-providerName: id4i.de
servers:
- url: //backend.id4i.de
tags:
- description: "User accounts allows people to register for ID4i and login. All permissions\
    \ and roles for interactive ID4i usage (as opposed to machine-to-machine interactions)\
    \ are attached to Organizations and User Accounts. The API allows users to register,\
    \ verify their registration, login and reset their passwords."
  name: Accounts
- description: Guid Alias Controller
  name: Alias
- description: Api Key Controller
  name: Api Keys
- description: Auditing services allow to review changes made by users or api keys.
    Changelog messages can be resolved as plain text or formatted message with parameters.
  name: Auditing
- description: Billing Controller
  name: Billing
- description: Collection Controller
  name: Collections
- description: Guid Alias Controller
  name: Guids
- description: Allows to retrieve a GUID's history and to publish new history items.
  name: History
- description: Services can use images stored with public visibility. This API allows
    you to retrieve the stored image by ID.
  name: Images
- description: Organization Messaging Controller
  name: Messaging
- description: App Info Controller
  name: Meta Information
- description: Country Controller
  name: Organizations
- description: Go Controller
  name: Public Services
- description: Routing Controller
  name: Routing
- description: Document Storage Controller
  name: Storage
- description: Id 4n Transfer Controller
  name: Transfer
- description: Who Is Controller
  name: WhoIs
paths:
  /account/password:
    post:
      description: 'Requesting a reset for a new password. '
      operationId: request_password_reset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
        description: Contains the required information to request a new password.
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
          description: OK
        "201":
          description: Created
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      summary: Request password reset
      tags:
      - Accounts
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
      x-codegen-request-body-name: body
    put:
      description: Setting a new password and verifying the request to set the password.
      operationId: verify_password_reset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetVerificationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/PasswordResetVerificationRequest'
        description: Contains the new password and the verification token to set the
          new password.
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SimpleMessageResponse'
          description: OK
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      summary: Verify password reset
      tags:
      - Accounts
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
      x-codegen-request-body-name: body
  /account/registration:
    post:
      description: Registering a new user.
      operationId: register_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
        description: The user information about the new created user.
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistrationResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserRegistrationResponse'
          description: OK
        "201":
          description: Created
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      summary: Register user
      tags:
      - Accounts
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
      x-codegen-request-body-name: body
    put:
      description: Completing a registration e.g. for invited users. Finish registration
        with a username and a password.
      operationId: complete_registration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteUserRegistrationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CompleteUserRegistrationRequest'
        description: "Contains the verification token, the username and the initial\
          \ password."
        required: true
        x-body-name: body
      responses:
        "200":
          description: OK
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      summary: Complete registration
      tags:
      - Accounts
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
      x-codegen-request-body-name: body
  /account/verification:
    post:
      description: Verifies a new user registration.
      operationId: verify_user_registration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationVerificationTokenPresentation'
          application/xml:
            schema:
              $ref: '#/components/schemas/RegistrationVerificationTokenPresentation'
        description: The token for user verification.
        required: true
        x-body-name: body
      responses:
        "200":
          description: OK
        "201":
          description: Created
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      summary: Verify registration
      tags:
      - Accounts
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
      x-codegen-request-body-name: body
  /api/v1/apikeys:
    get:
      description: Finding all API key assigned to the specified organization in a
        paginated manner.
      operationId: list_all_api_keys_of_organization
      parameters:
      - description: The namespace of the organization to search in.
        explode: true
        in: query
        name: organizationId
        required: false
        schema:
          type: string
        style: form
      - description: Start with the n-th element
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum count of returned elements
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfApiKeyPresentation'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfApiKeyPresentation'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Find API key by organization
      tags:
      - Api Keys
      x-openapi-router-controller: openapi_server.controllers.api_keys_controller
    post:
      description: Creation of a new API key.
      operationId: create_new_api_key
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKeyCreationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ApiKeyCreationRequest'
        description: API key to be created.
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyPresentation'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiKeyPresentation'
          description: OK
        "201":
          description: Created
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Create API key
      tags:
      - Api Keys
      x-openapi-router-controller: openapi_server.controllers.api_keys_controller
      x-codegen-request-body-name: body
  /api/v1/apikeys/privileges:
    get:
      description: Listing all possible API key privileges.
      operationId: list_all_api_key_privileges
      parameters:
      - description: id4nConcerning
        explode: true
        in: query
        name: id4nConcerning
        required: false
        schema:
          type: boolean
        style: form
      - description: Start with the n-th element
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum count of returned elements
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfApiKeyPrivilegeInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfApiKeyPrivilegeInfo'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: List all privileges
      tags:
      - Api Keys
      x-openapi-router-controller: openapi_server.controllers.api_keys_controller
  /api/v1/apikeys/{key}:
    delete:
      description: Deletion of an API key.
      operationId: delete_api_key
      parameters:
      - description: The API key to delete.
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Delete API key
      tags:
      - Api Keys
      x-openapi-router-controller: openapi_server.controllers.api_keys_controller
    get:
      description: Showing the details of an API key.
      operationId: get_api_key
      parameters:
      - description: The API key to show.
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyPresentation'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiKeyPresentation'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Show API key
      tags:
      - Api Keys
      x-openapi-router-controller: openapi_server.controllers.api_keys_controller
    put:
      description: "API keys can be updated with new labels, and be activated and\
        \ deactivated. The secret or UUID cannot be changed."
      operationId: update_api_key
      parameters:
      - description: The API key to be updated.
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKeyChangeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ApiKeyChangeRequest'
        description: The new values to apply.
        required: true
        x-body-name: body
      responses:
        "200":
          description: OK
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Update API keys
      tags:
      - Api Keys
      x-openapi-router-controller: openapi_server.controllers.api_keys_controller
      x-codegen-request-body-name: body
  /api/v1/apikeys/{key}/privileges:
    delete:
      operationId: remove_api_key_privilege
      parameters:
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveApiKeyPrivilegeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/RemoveApiKeyPrivilegeRequest'
        description: removeApiKeyPrivilegeRequest
        required: true
        x-body-name: body
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Remove privilege
      tags:
      - Api Keys
      x-openapi-router-controller: openapi_server.controllers.api_keys_controller
      x-codegen-request-body-name: body
    get:
      operationId: list_api_key_privileges
      parameters:
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      - description: Start with the n-th element
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum count of returned elements
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfApiKeyPrivilege'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfApiKeyPrivilege'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: List privileges
      tags:
      - Api Keys
      x-openapi-router-controller: openapi_server.controllers.api_keys_controller
    post:
      operationId: add_api_key_privilege
      parameters:
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddApiKeyPrivilegeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/AddApiKeyPrivilegeRequest'
        description: addApiKeyPrivilegeRequest
        required: true
        x-body-name: body
      responses:
        "200":
          description: OK
        "201":
          description: Created
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Add privilege
      tags:
      - Api Keys
      x-openapi-router-controller: openapi_server.controllers.api_keys_controller
      x-codegen-request-body-name: body
  /api/v1/apikeys/{key}/privileges/{privilege}/id4ns:
    delete:
      operationId: remove_api_key_privilege_for_id4ns
      parameters:
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      - description: privilege
        explode: false
        in: path
        name: privilege
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ListOfId4ns'
        x-body-name: body
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Remove id4ns of a privilege
      tags:
      - Api Keys
      x-openapi-router-controller: openapi_server.controllers.api_keys_controller
      x-codegen-request-body-name: body
    get:
      description: Listing ID4ns of a id4n concerning privilege
      operationId: list_id4ns
      parameters:
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      - description: privilege
        explode: false
        in: path
        name: privilege
        required: true
        schema:
          type: string
        style: simple
      - description: Start with the n-th element
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum count of returned elements
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfId4nPresentation'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfId4nPresentation'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: ID4ns of a privilege
      tags:
      - Api Keys
      x-openapi-router-controller: openapi_server.controllers.api_keys_controller
    post:
      operationId: add_api_key_privilege_for_id4ns
      parameters:
      - description: key
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      - description: privilege
        explode: false
        in: path
        name: privilege
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ListOfId4ns'
        x-body-name: body
      responses:
        "200":
          description: OK
        "201":
          description: Created
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Add ID4ns of a privilege
      tags:
      - Api Keys
      x-openapi-router-controller: openapi_server.controllers.api_keys_controller
      x-codegen-request-body-name: body
  /api/v1/billing/{organizationId}:
    get:
      operationId: get_sum_for_organization
      parameters:
      - description: The organization to compute the billing information for
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - description: Billing start date
        explode: true
        in: query
        name: fromDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Billing end date
        explode: true
        in: query
        name: toDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceCosts'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceCosts'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Get billing amount of services for a given organization
      tags:
      - Billing
      x-openapi-router-controller: openapi_server.controllers.billing_controller
  /api/v1/billing/{organizationId}/positions:
    get:
      operationId: get_positions_for_organization
      parameters:
      - description: The organization to compute the billing information for
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - description: Billing start date
        explode: true
        in: query
        name: fromDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Billing end date
        explode: true
        in: query
        name: toDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BillingPosition'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/BillingPosition'
                type: array
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Get billing positions for a given organization
      tags:
      - Billing
      x-openapi-router-controller: openapi_server.controllers.billing_controller
  /api/v1/changelog/organization/{organizationId}/:
    get:
      description: Listing change log entries of the specified organization id.
      operationId: list_organization_change_log
      parameters:
      - description: The namespace identifying the organization whose change log entries
          are to be listed
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - description: 'The Mime-type for the message format that should be returned.
          e.g. ''text/plain'' or ''text/mustache'' '
        explode: true
        in: query
        name: messageMimeType
        required: false
        schema:
          default: text/mustache
          type: string
        style: form
      - description: From date time as UTC Date-Time format
        explode: true
        in: query
        name: fromDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: To date time as UTC Date-Time format
        explode: true
        in: query
        name: toDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Start with the n-th element
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum count of returned elements
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfChangeLogEntry'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfChangeLogEntry'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: List change log entries of an organization
      tags:
      - Auditing
      x-openapi-router-controller: openapi_server.controllers.auditing_controller
  /api/v1/collections:
    post:
      operationId: create_collection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCollectionRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateCollectionRequest'
        description: createInfo
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Id4n'
            application/xml:
              schema:
                $ref: '#/components/schemas/Id4n'
          description: OK
        "201":
          description: Created
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Create collection
      tags:
      - Collections
      x-openapi-router-controller: openapi_server.controllers.collections_controller
      x-codegen-request-body-name: body
  /api/v1/collections/{id4n}:
    delete:
      operationId: delete_collection
      parameters:
      - description: id4n
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Delete collection
      tags:
      - Collections
      x-openapi-router-controller: openapi_server.controllers.collections_controller
    get:
      operationId: find_collection
      parameters:
      - description: id4n
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuidCollection'
            application/xml:
              schema:
                $ref: '#/components/schemas/GuidCollection'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Find collection
      tags:
      - Collections
      x-openapi-router-controller: openapi_server.controllers.collections_controller
    patch:
      description: Update collection changing only the given values
      operationId: update_collection
      parameters:
      - description: id4n
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuidCollection'
          application/xml:
            schema:
              $ref: '#/components/schemas/GuidCollection'
        description: request
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - Authorization: []
      summary: Update collection
      tags:
      - Collections
      x-openapi-router-controller: openapi_server.controllers.collections_controller
      x-codegen-request-body-name: body
  /api/v1/collections/{id4n}/elements:
    delete:
      operationId: remove_elements_from_collection
      parameters:
      - description: id4n
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ListOfId4ns2'
        x-body-name: body
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Remove elements from collection
      tags:
      - Collections
      x-openapi-router-controller: openapi_server.controllers.collections_controller
      x-codegen-request-body-name: body
    get:
      operationId: list_elements_of_collection
      parameters:
      - description: id4n
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      - description: Start with the n-th element
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum count of returned elements
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The organization namespace.
        explode: true
        in: query
        name: organizationId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfGuid'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfGuid'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: List contents of the collection
      tags:
      - Collections
      x-openapi-router-controller: openapi_server.controllers.collections_controller
    post:
      operationId: add_elements_to_collection
      parameters:
      - description: id4n
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ListOfId4ns2'
        x-body-name: body
      responses:
        "200":
          description: OK
        "201":
          description: Created
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Add elements to collection
      tags:
      - Collections
      x-openapi-router-controller: openapi_server.controllers.collections_controller
      x-codegen-request-body-name: body
  /api/v1/countries:
    get:
      operationId: list_countries
      parameters:
      - description: Start with the n-th element
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum count of returned elements
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfCountry'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfCountry'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: List countries
      tags:
      - Organizations
      x-openapi-router-controller: openapi_server.controllers.organizations_controller
  /api/v1/documents/{id4n}:
    get:
      description: Listing all documents of an id4n
      operationId: list_all_documents
      parameters:
      - description: id4n
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      - description: Filter by owner organization
        explode: true
        in: query
        name: owner
        required: false
        schema:
          type: string
        style: form
      - description: Start with the n-th element
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum count of returned elements
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfDocument'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfDocument'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: List documents
      tags:
      - Storage
      x-openapi-router-controller: openapi_server.controllers.storage_controller
  /api/v1/documents/{id4n}/{organizationId}:
    get:
      description: Listing documents of an id4n seen by a specified organization
      operationId: list_documents
      parameters:
      - description: organizationId
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - description: id4n
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      - description: Filter by owner organization
        explode: true
        in: query
        name: owner
        required: false
        schema:
          type: string
        style: form
      - description: Start with the n-th element
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum count of returned elements
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfDocument'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfDocument'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: List organization specific documents
      tags:
      - Storage
      x-openapi-router-controller: openapi_server.controllers.storage_controller
    post:
      description: The documents' mime type is suggested on octet-stream data. Otherwise
        the specified content mime type is used.
      operationId: create_document
      parameters:
      - description: organizationId
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - description: id4n
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/createDocument'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
            application/xml:
              schema:
                $ref: '#/components/schemas/Document'
          description: OK
        "201":
          description: Created
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Create an document for an id4n
      tags:
      - Storage
      x-openapi-router-controller: openapi_server.controllers.storage_controller
      x-codegen-request-body-name: body
    put:
      description: 'Creating or overwriting an existing document '
      operationId: put_document
      parameters:
      - description: organizationId
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - description: id4n
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/createDocument'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
            application/xml:
              schema:
                $ref: '#/components/schemas/Document'
          description: OK
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Put an document for an id4n
      tags:
      - Storage
      x-openapi-router-controller: openapi_server.controllers.storage_controller
      x-codegen-request-body-name: body
  /api/v1/documents/{id4n}/{organizationId}/{fileName}:
    delete:
      operationId: delete_document
      parameters:
      - description: organizationId
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - description: id4n
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      - description: fileName
        explode: false
        in: path
        name: fileName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Delete a document
      tags:
      - Storage
      x-openapi-router-controller: openapi_server.controllers.storage_controller
    get:
      operationId: read_document
      parameters:
      - description: organizationId
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - description: id4n
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      - description: fileName
        explode: false
        in: path
        name: fileName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: byte
                type: string
            application/xml:
              schema:
                format: byte
                type: string
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Read document contents
      tags:
      - Storage
      x-openapi-router-controller: openapi_server.controllers.storage_controller
  /api/v1/documents/{id4n}/{organizationId}/{fileName}/metadata:
    get:
      operationId: get_document
      parameters:
      - description: organizationId
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - description: id4n
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      - description: fileName
        explode: false
        in: path
        name: fileName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
            application/xml:
              schema:
                $ref: '#/components/schemas/Document'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: "Retrieve a document (meta-data only, no content)"
      tags:
      - Storage
      x-openapi-router-controller: openapi_server.controllers.storage_controller
    patch:
      operationId: update_document_metadata
      parameters:
      - description: organizationId
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - description: id4n
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      - description: fileName
        explode: false
        in: path
        name: fileName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentUpdate'
          application/xml:
            schema:
              $ref: '#/components/schemas/DocumentUpdate'
        description: document
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
            application/xml:
              schema:
                $ref: '#/components/schemas/Document'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - Authorization: []
      summary: Update a document
      tags:
      - Storage
      x-openapi-router-controller: openapi_server.controllers.storage_controller
      x-codegen-request-body-name: body
  /api/v1/guids:
    post:
      description: Creating one or more GUIDs with a specified length.
      operationId: create_guid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGuidRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateGuidRequest'
        description: GUID creation model
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOfId4ns'
            application/xml:
              schema:
                $ref: '#/components/schemas/ListOfId4ns'
          description: OK
        "201":
          description: Created
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Create GUID(s)
      tags:
      - Guids
      x-openapi-router-controller: openapi_server.controllers.guids_controller
      x-codegen-request-body-name: body
  /api/v1/guids/withoutCollection:
    get:
      operationId: get_guids_without_collection
      parameters:
      - description: The namespace of the organization to search GUIDs for
        explode: true
        in: query
        name: organizationId
        required: true
        schema:
          type: string
        style: form
      - description: Start with the n-th element
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum count of returned elements
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfGuid'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfGuid'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Retrieve GUIDs not in any collection
      tags:
      - Guids
      x-openapi-router-controller: openapi_server.controllers.guids_controller
  /api/v1/guids/{id4n}:
    get:
      operationId: get_guid
      parameters:
      - description: The GUID number
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      - description: The organization namespace to resolve.
        explode: true
        in: query
        name: organizationId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Guid'
            application/xml:
              schema:
                $ref: '#/components/schemas/Guid'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Retrieve GUID information
      tags:
      - Guids
      x-openapi-router-controller: openapi_server.controllers.guids_controller
    patch:
      description: Allows ownership transfer.
      operationId: update_guid
      parameters:
      - description: The GUID number
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Guid'
          application/xml:
            schema:
              $ref: '#/components/schemas/Guid'
        description: request
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - Authorization: []
      summary: Change GUID information.
      tags:
      - Guids
      x-openapi-router-controller: openapi_server.controllers.guids_controller
      x-codegen-request-body-name: body
  /api/v1/history/{id4n}:
    get:
      description: Lists the history of a GUID
      operationId: filtered_list
      parameters:
      - description: GUID to retrieve the history for
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      - description: Also return private history entries
        explode: true
        in: query
        name: includePrivate
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Show only entries created by one of the given organizations.
          This parameter can be used multiple times.
        explode: true
        in: query
        name: organization
        required: false
        schema:
          type: string
        style: form
      - description: Show only entries matching one of the given history item types.
          This parameter can be used multiple times.
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - CREATED
          - DESTROYED
          - RECYCLED
          - SHIPMENT_PREPARED
          - STORED
          - RETRIEVED_FROM_STORAGE
          - PACKAGED
          - DISPATCHED
          - RECEIVED
          - DELIVERY_REFUSED
          - REPROCESSING_STARTED
          - REPROCESSING_STEP_STARTED
          - REPROCESSING_STEP_CANCELLED
          - REPROCESSING_STEP_FINISHED
          - REPROCESSING_CANCELLED
          - REPROCESSING_FINISHED
          - DISASSEMBLED
          - MAINTENANCE_STARTED
          - MAINTENANCE_STEP_STARTED
          - MAINTENANCE_STEP_CANCELLED
          - MAINTENANCE_STEP_FINISHED
          - MAINTENANCE_CANCELLED
          - MAINTENANCE_FINISHED
          - PRODUCTION_STARTED
          - PRODUCTION_CANCELLED
          - PRODUCTION_FINISHED
          - PRODUCTION_STEP_STARTED
          - PRODUCTION_STEP_CANCELLED
          - PRODUCTION_STEP_FINISHED
          - QUALITY_CHECK_PERFORMED
          items:
            enum:
            - CREATED
            - DESTROYED
            - RECYCLED
            - SHIPMENT_PREPARED
            - STORED
            - RETRIEVED_FROM_STORAGE
            - PACKAGED
            - DISPATCHED
            - RECEIVED
            - DELIVERY_REFUSED
            - REPROCESSING_STARTED
            - REPROCESSING_STEP_STARTED
            - REPROCESSING_STEP_CANCELLED
            - REPROCESSING_STEP_FINISHED
            - REPROCESSING_CANCELLED
            - REPROCESSING_FINISHED
            - DISASSEMBLED
            - MAINTENANCE_STARTED
            - MAINTENANCE_STEP_STARTED
            - MAINTENANCE_STEP_CANCELLED
            - MAINTENANCE_STEP_FINISHED
            - MAINTENANCE_CANCELLED
            - MAINTENANCE_FINISHED
            - PRODUCTION_STARTED
            - PRODUCTION_CANCELLED
            - PRODUCTION_FINISHED
            - PRODUCTION_STEP_STARTED
            - PRODUCTION_STEP_CANCELLED
            - PRODUCTION_STEP_FINISHED
            - QUALITY_CHECK_PERFORMED
            type: string
          type: array
        style: form
      - description: Show only entries matching one of the given history item qualifiers
          (additional property de.id4i.history.item.qualifier). This parameter can
          be used multiple times.
        explode: true
        in: query
        name: qualifier
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: From date time as UTC Date-Time format
        explode: true
        in: query
        name: fromDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: To date time as UTC Date-Time format
        explode: true
        in: query
        name: toDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Start with the n-th element
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum count of returned elements
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfHistoryItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfHistoryItem'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: List history
      tags:
      - History
      x-openapi-router-controller: openapi_server.controllers.history_controller
    post:
      description: Add a new history item
      operationId: add_item
      parameters:
      - description: GUID to retrieve the history for
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HistoryItem'
          application/xml:
            schema:
              $ref: '#/components/schemas/HistoryItem'
        description: The history item to publish
        required: true
        x-body-name: body
      responses:
        "200":
          description: OK
        "201":
          description: Created
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Add history item
      tags:
      - History
      x-openapi-router-controller: openapi_server.controllers.history_controller
      x-codegen-request-body-name: body
  /api/v1/history/{id4n}/{organizationId}:
    get:
      deprecated: true
      description: DEPRECATED - please use filteredList with organization parameter
        to achieve the same functionality
      operationId: list
      parameters:
      - description: GUID to retrieve the history for
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      - description: organizationId
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - description: Also return private history entries
        explode: true
        in: query
        name: includePrivate
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Start with the n-th element
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum count of returned elements
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfHistoryItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfHistoryItem'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: DEPRECATED - List history
      tags:
      - History
      x-openapi-router-controller: openapi_server.controllers.history_controller
  /api/v1/history/{id4n}/{organizationId}/{sequenceId}:
    get:
      operationId: retrieve_item
      parameters:
      - description: GUID to retrieve the history for
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      - description: organizationId
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - description: sequenceId
        explode: false
        in: path
        name: sequenceId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoryItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/HistoryItem'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Get history item
      tags:
      - History
      x-openapi-router-controller: openapi_server.controllers.history_controller
    patch:
      operationId: update_item
      parameters:
      - description: GUID to retrieve the history for
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      - description: organizationId
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - description: sequenceId
        explode: false
        in: path
        name: sequenceId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HistoryItemUpdate'
          application/xml:
            schema:
              $ref: '#/components/schemas/HistoryItemUpdate'
        description: update
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoryItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/HistoryItem'
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - Authorization: []
      summary: Update history item
      tags:
      - History
      x-openapi-router-controller: openapi_server.controllers.history_controller
      x-codegen-request-body-name: body
  /api/v1/history/{id4n}/{organizationId}/{sequenceId}/visibility:
    put:
      operationId: update_item_visibility
      parameters:
      - description: GUID to retrieve the history for
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      - description: organizationId
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - description: sequenceId
        explode: false
        in: path
        name: sequenceId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Visibility'
          application/xml:
            schema:
              $ref: '#/components/schemas/Visibility'
        description: History item visibility restrictions
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoryItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/HistoryItem'
          description: OK
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Set history item visibility
      tags:
      - History
      x-openapi-router-controller: openapi_server.controllers.history_controller
      x-codegen-request-body-name: body
  /api/v1/id4ns/{id4n}:
    get:
      description: Retrieving basic information about an ID like the type and the
        creation time.
      operationId: get_id4n
      parameters:
      - description: The ID to resolve to
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      - description: The organization namespace to resolve.
        explode: true
        in: query
        name: organizationId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Id4nPresentation'
            application/xml:
              schema:
                $ref: '#/components/schemas/Id4nPresentation'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Retrieve ID4n information
      tags:
      - Guids
      x-openapi-router-controller: openapi_server.controllers.guids_controller
  /api/v1/id4ns/{id4n}/alias:
    get:
      description: Looks up the alias for each alias type (group and single) and returns
        a map of all aliases found.
      operationId: get_guid_aliases
      parameters:
      - description: The GUID or Collection to operate on
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
            application/xml:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Get all aliases for the given GUID or Collection.
      tags:
      - Alias
      - Guids
      x-openapi-router-controller: openapi_server.controllers.alias_controller
  /api/v1/id4ns/{id4n}/alias/{aliasType}:
    delete:
      description: Remove the alias of the given type
      operationId: remove_guid_alias
      parameters:
      - description: The GUID or Collection to operate on
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      - description: "Alias type, see the corresponding API model"
        explode: false
        in: path
        name: aliasType
        required: true
        schema:
          enum:
          - gtin
          - article
          - mapp
          - item
          - rfid
          - tracking
          - eclass
          - unspsc
          - product
          - material
          - reference
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Remove aliases from GUID or Collection
      tags:
      - Alias
      - Guids
      x-openapi-router-controller: openapi_server.controllers.alias_controller
    post:
      description: "Adds or replaces aliases for single ID4ns (alias type item and\
        \ mapp) or groups of ID4ns (alias types gtin, ean and article)"
      operationId: add_guid_alias
      parameters:
      - description: The GUID or Collection to operate on
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      - description: "Alias type, see the corresponding API model"
        explode: false
        in: path
        name: aliasType
        required: true
        schema:
          enum:
          - gtin
          - article
          - mapp
          - item
          - rfid
          - tracking
          - eclass
          - unspsc
          - product
          - material
          - reference
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuidAlias'
          application/xml:
            schema:
              $ref: '#/components/schemas/GuidAlias'
        description: The alias to add or update
        required: true
        x-body-name: body
      responses:
        "200":
          description: OK
        "201":
          description: Created
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Add alias for GUID or Collection
      tags:
      - Alias
      - Guids
      x-openapi-router-controller: openapi_server.controllers.alias_controller
      x-codegen-request-body-name: body
  /api/v1/id4ns/{id4n}/collections:
    get:
      description: Retrieving all owned or holding collections the specified id4n
        is assigned to.
      operationId: get_collections
      parameters:
      - description: The ID which the collections should contain
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      - description: The organization holding the collections.
        explode: true
        in: query
        name: organizationId
        required: false
        schema:
          type: string
        style: form
      - description: Start with the n-th element
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum count of returned elements
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfGuidCollection'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfGuidCollection'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Retrieve collections of an ID
      tags:
      - Guids
      x-openapi-router-controller: openapi_server.controllers.guids_controller
  /api/v1/id4ns/{id4n}/properties:
    delete:
      description: "Partial deletion of id4n properties. If the property does not\
        \ exist, it will be ignored."
      operationId: delete_properties
      parameters:
      - description: The id4n
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      - description: The organization namespace to work on while deleting the properties.
        explode: true
        in: query
        name: organizationId
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
          application/xml:
            schema:
              items:
                type: string
              type: array
        description: A set of property keys to delete.
        required: true
        x-body-name: body
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Delete ID4n properties
      tags:
      - Collections
      - Guids
      x-openapi-router-controller: openapi_server.controllers.collections_controller
      x-codegen-request-body-name: body
    get:
      description: List all properties of an id4n.
      operationId: get_properties
      parameters:
      - description: The id4n
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      - description: The organization namespace.
        explode: true
        in: query
        name: organizationId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
            application/xml:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Retrieve ID4n properties
      tags:
      - Collections
      - Guids
      x-openapi-router-controller: openapi_server.controllers.collections_controller
    patch:
      description: Partial updating of id4n properties. If a property contains a null
        value the property will be deleted other values will be saved and overwritten
        if they already exist.
      operationId: patch_properties
      parameters:
      - description: The id4n
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      - description: The organization namespace to work on while patching the properties.
        explode: true
        in: query
        name: organizationId
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              type: object
          application/xml:
            schema:
              additionalProperties:
                type: string
              type: object
        description: The properties to update.
        required: true
        x-body-name: body
      responses:
        "200":
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - Authorization: []
      summary: Patch ID4n properties
      tags:
      - Collections
      - Guids
      x-openapi-router-controller: openapi_server.controllers.collections_controller
      x-codegen-request-body-name: body
  /api/v1/import/gs1:
    post:
      description: Importing GS1/MAPP codes that contain unique components.
      operationId: import_gs1_codes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportGS1CodesRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ImportGS1CodesRequest'
        description: The information how the MAPP codes should be imported and the
          list of MAPP codes
        required: true
        x-body-name: body
      responses:
        "200":
          description: OK
        "201":
          description: Created
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Import GS1/MAPP codes
      tags:
      - Guids
      x-openapi-router-controller: openapi_server.controllers.guids_controller
      x-codegen-request-body-name: body
  /api/v1/info:
    get:
      description: Retrieving version information about ID4i.
      operationId: application_info
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppInfoPresentation'
            application/xml:
              schema:
                $ref: '#/components/schemas/AppInfoPresentation'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Retrieve version information about ID4i
      tags:
      - Meta Information
      x-openapi-router-controller: openapi_server.controllers.meta_information_controller
  /api/v1/microstorage/{id4n}/{organization}:
    get:
      operationId: read_from_microstorage
      parameters:
      - description: organization
        explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - description: id4n
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: byte
                type: string
            application/xml:
              schema:
                format: byte
                type: string
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Read data from microstorage
      tags:
      - Storage
      x-openapi-router-controller: openapi_server.controllers.storage_controller
    put:
      operationId: write_to_microstorage
      parameters:
      - description: organization
        explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - description: id4n
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      - description: Content-Type
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      - description: Content-Length
        explode: false
        in: header
        name: Content-Length
        required: false
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              format: byte
              type: string
        description: body
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
          description: OK
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Write data to microstorage
      tags:
      - Storage
      x-openapi-router-controller: openapi_server.controllers.storage_controller
      x-codegen-request-body-name: body
  /api/v1/multiple/id4ns/properties:
    get:
      description: Get a list of ID4n properties for the specified ID4ns.
      operationId: get_multiple_properties
      parameters:
      - description: The list of ID4ns to resolve.
        explode: true
        in: query
        name: id4ns
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The organization namespace.
        explode: true
        in: query
        name: organizationId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOfId4nProperties'
            application/xml:
              schema:
                $ref: '#/components/schemas/ListOfId4nProperties'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Get multiple ID4n properties
      tags:
      - Collections
      - Guids
      x-openapi-router-controller: openapi_server.controllers.collections_controller
  /api/v1/organizations:
    post:
      description: Creating a new organization.
      operationId: create_organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/xml:
            schema:
              $ref: '#/components/schemas/Organization'
        description: Organization to be created
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization'
          description: OK
        "201":
          description: Created
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Create organization
      tags:
      - Organizations
      x-openapi-router-controller: openapi_server.controllers.organizations_controller
      x-codegen-request-body-name: body
  /api/v1/organizations/{organizationId}:
    delete:
      operationId: delete_organization
      parameters:
      - description: The namespace of the organization to be deleted.
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Delete organization
      tags:
      - Organizations
      x-openapi-router-controller: openapi_server.controllers.organizations_controller
    get:
      description: Returns a single organization.
      operationId: find_organization
      parameters:
      - description: The namespace of the organization to be retrieved.
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Find organization by id/namespace
      tags:
      - Organizations
      x-openapi-router-controller: openapi_server.controllers.organizations_controller
    put:
      operationId: update_organization
      parameters:
      - description: The namespace of the organization to be updated.
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUpdate'
          application/xml:
            schema:
              $ref: '#/components/schemas/OrganizationUpdate'
        description: Updated organization object
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization'
          description: OK
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Update organization
      tags:
      - Organizations
      x-openapi-router-controller: openapi_server.controllers.organizations_controller
      x-codegen-request-body-name: body
  /api/v1/organizations/{organizationId}/addresses/billing:
    delete:
      operationId: delete_organization_billing_address
      parameters:
      - description: organizationId
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Remove billing address
      tags:
      - Organizations
      x-openapi-router-controller: openapi_server.controllers.organizations_controller
    get:
      operationId: find_organization_billing_address
      parameters:
      - description: organizationId
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationAddress'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationAddress'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Retrieve billing address
      tags:
      - Organizations
      x-openapi-router-controller: openapi_server.controllers.organizations_controller
    put:
      operationId: update_organization_billing_address
      parameters:
      - description: organizationId
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/OrganizationAddress'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationAddress'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationAddress'
          description: OK
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Store billing address
      tags:
      - Organizations
      x-openapi-router-controller: openapi_server.controllers.organizations_controller
      x-codegen-request-body-name: body
  /api/v1/organizations/{organizationId}/addresses/default:
    get:
      operationId: find_organization_address
      parameters:
      - description: organizationId
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationAddress'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationAddress'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Retrieve address
      tags:
      - Organizations
      x-openapi-router-controller: openapi_server.controllers.organizations_controller
    put:
      operationId: update_organization_address
      parameters:
      - description: organizationId
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/OrganizationAddress'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationAddress'
            application/xml:
              schema:
                $ref: '#/components/schemas/OrganizationAddress'
          description: OK
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Store address
      tags:
      - Organizations
      x-openapi-router-controller: openapi_server.controllers.organizations_controller
      x-codegen-request-body-name: body
  /api/v1/organizations/{organizationId}/collections:
    get:
      description: "Retrieving all collections of an organization in a paginated manner.\
        \ You may filter the results by specifying id4n properties with filter operations\
        \ (eq, in, ne) in the query parameters. e.g. `com.yourcompany.orderId.eq=1234`\
        \  "
      operationId: get_all_collections_of_organization
      parameters:
      - description: Start with the n-th element
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum count of returned elements
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The namespace of the organization
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - description: Filter by this type
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - ROUTING_COLLECTION
          - LOGISTIC_COLLECTION
          - LABELLED_COLLECTION
          type: string
        style: form
      - description: Filter by this label
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Filter by this label prefix
        explode: true
        in: query
        name: labelPrefix
        required: false
        schema:
          maximum: 2147483647
          minimum: 1
          type: string
        style: form
      - description: List of i4dn property filter. e.g. "com.myorga.state:IN:waiting|processing"
          or "com.myorga.orderId:EQ:SAP001"
        explode: true
        in: query
        name: property
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfGuidCollection'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfGuidCollection'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Get collections of organization
      tags:
      - Collections
      - Organizations
      x-openapi-router-controller: openapi_server.controllers.collections_controller
  /api/v1/organizations/{organizationId}/logo:
    delete:
      operationId: delete_organization_logo
      parameters:
      - description: The namespace of the organization where the logo should be deleted.
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Delete organization logo
      tags:
      - Organizations
      x-openapi-router-controller: openapi_server.controllers.organizations_controller
    post:
      description: Updating an organization logo using a multipart file upload.
      operationId: set_organization_logo
      parameters:
      - description: The namespace of the organization where the logo should be updated.
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/setOrganizationLogo_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicImagePresentation'
            application/xml:
              schema:
                $ref: '#/components/schemas/PublicImagePresentation'
          description: OK
        "201":
          description: Created
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Update organization logo
      tags:
      - Organizations
      x-openapi-router-controller: openapi_server.controllers.organizations_controller
      x-codegen-request-body-name: body
  /api/v1/organizations/{organizationId}/messaging:
    get:
      operationId: get_default_queue
      parameters:
      - description: organizationId
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueuePresentation'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueuePresentation'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      tags:
      - Messaging
      x-openapi-router-controller: openapi_server.controllers.messaging_controller
    patch:
      operationId: patch_default_queue
      parameters:
      - description: organizationId
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueueUpdateRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/QueueUpdateRequest'
        description: request
        required: true
        x-body-name: body
      responses:
        "200":
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - Authorization: []
      tags:
      - Messaging
      x-openapi-router-controller: openapi_server.controllers.messaging_controller
      x-codegen-request-body-name: body
  /api/v1/organizations/{organizationId}/messaging/enqueueCustomMessage:
    post:
      description: Enqueue a custom organisation message with custom data.
      operationId: enqueue_custom_message
      parameters:
      - description: The organisation namespace
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendCustomMessage'
          application/xml:
            schema:
              $ref: '#/components/schemas/SendCustomMessage'
        description: request
        required: true
        x-body-name: body
      responses:
        "200":
          description: OK
        "201":
          description: Created
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Enqueue a custom message
      tags:
      - Messaging
      x-openapi-router-controller: openapi_server.controllers.messaging_controller
      x-codegen-request-body-name: body
  /api/v1/organizations/{organizationId}/partner:
    delete:
      description: Removing a partner organization
      operationId: remove_partner_organization
      parameters:
      - description: The namespace of the organization
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemovePartnerRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/RemovePartnerRequest'
        description: request
        required: true
        x-body-name: body
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Remove partner
      tags:
      - Organizations
      x-openapi-router-controller: openapi_server.controllers.organizations_controller
      x-codegen-request-body-name: body
    get:
      description: Listing partners in a paginated manner.
      operationId: get_partner_organizations
      parameters:
      - description: The namespace of the organization to query partner organizations
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - description: Start with the n-th element
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum count of returned elements
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfPartnerOrganization'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfPartnerOrganization'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Get partners of an organization
      tags:
      - Organizations
      x-openapi-router-controller: openapi_server.controllers.organizations_controller
    put:
      description: Adding a partner organization. If the given organization is already
        a partner the result will be state 200 too.
      operationId: add_partner_organization
      parameters:
      - description: The namespace of the organization
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPartnerRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/AddPartnerRequest'
        description: request
        required: true
        x-body-name: body
      responses:
        "200":
          description: OK
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Add partner
      tags:
      - Organizations
      x-openapi-router-controller: openapi_server.controllers.organizations_controller
      x-codegen-request-body-name: body
  /api/v1/organizations/{organizationId}/privileges:
    get:
      description: Listing all privileges of the current user/APIKey of the specified
        organization.
      operationId: get_organization_privileges
      parameters:
      - description: The namespace of the organization
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
            application/xml:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: List my privileges
      tags:
      - Organizations
      x-openapi-router-controller: openapi_server.controllers.organizations_controller
  /api/v1/organizations/{organizationId}/roles:
    get:
      description: Listing users and their roles in a paginated manner.
      operationId: get_all_organization_roles
      parameters:
      - description: Start with the n-th element
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum count of returned elements
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: organizationId
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfUserRoles'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfUserRoles'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: List users and their roles
      tags:
      - Accounts
      - Organizations
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
  /api/v1/organizations/{organizationId}/users:
    get:
      description: Finding users in the specified organization in a paginated manner.
      operationId: get_users_of_organization
      parameters:
      - description: Start with the n-th element
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum count of returned elements
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: organizationId
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfUserPresentation'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfUserPresentation'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Find users in organization
      tags:
      - Accounts
      - Organizations
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
  /api/v1/organizations/{organizationId}/users/invite:
    post:
      operationId: invite_users
      parameters:
      - description: The namespace of the organization where users should be invited
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUserInvitationListRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/OrganizationUserInvitationListRequest'
        description: invitationList
        required: true
        x-body-name: body
      responses:
        "200":
          description: OK
        "201":
          description: Created
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Invite Users
      tags:
      - Accounts
      - Organizations
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
      x-codegen-request-body-name: body
  /api/v1/organizations/{organizationId}/users/{username}/roles:
    delete:
      operationId: remove_user_roles
      parameters:
      - description: The namespace of the organization
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - description: username
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ChangeRoleRequest'
        x-body-name: body
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Remove role(s) from user
      tags:
      - Accounts
      - Organizations
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
      x-codegen-request-body-name: body
    get:
      operationId: get_user_roles
      parameters:
      - description: The namespace of the organization
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - description: username
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: Start with the n-th element
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum count of returned elements
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfstring'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfstring'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Get user roles by username
      tags:
      - Accounts
      - Organizations
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
    post:
      operationId: add_user_roles
      parameters:
      - description: The namespace of the organization
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - description: username
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ChangeRoleRequest'
        x-body-name: body
      responses:
        "200":
          description: OK
        "201":
          description: Created
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Add role(s) to user
      tags:
      - Accounts
      - Organizations
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
      x-codegen-request-body-name: body
  /api/v1/public/documents/{id4n}:
    get:
      description: Listing all public documents of an id4n
      operationId: list_all_public_documents
      parameters:
      - description: organizationId
        explode: true
        in: query
        name: organizationId
        required: false
        schema:
          type: string
        style: form
      - description: id4n
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      - description: Filter by owner organization
        explode: true
        in: query
        name: owner
        required: false
        schema:
          type: string
        style: form
      - description: Start with the n-th element
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum count of returned elements
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfDocument'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfDocument'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: List public documents
      tags:
      - Public Services
      - Storage
      x-openapi-router-controller: openapi_server.controllers.public_services_controller
  /api/v1/public/documents/{id4n}/{organizationId}/{fileName}:
    get:
      operationId: read_public_document
      parameters:
      - description: organizationId
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - description: id4n
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      - description: fileName
        explode: false
        in: path
        name: fileName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: byte
                type: string
            application/xml:
              schema:
                format: byte
                type: string
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Read public document contents
      tags:
      - Public Services
      - Storage
      x-openapi-router-controller: openapi_server.controllers.public_services_controller
  /api/v1/public/documents/{id4n}/{organizationId}/{fileName}/metadata:
    get:
      operationId: get_public_document
      parameters:
      - description: organizationId
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - description: id4n
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      - description: fileName
        explode: false
        in: path
        name: fileName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
            application/xml:
              schema:
                $ref: '#/components/schemas/Document'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: "Retrieve a public document (meta-data only, no content)"
      tags:
      - Public Services
      - Storage
      x-openapi-router-controller: openapi_server.controllers.public_services_controller
  /api/v1/public/history/{id4n}:
    get:
      description: Only contains public history items
      operationId: list_public_history
      parameters:
      - description: GUID to retrieve the history for
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      - description: Start with the n-th element
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum count of returned elements
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfHistoryItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfHistoryItem'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Shows the public history of the given GUID
      tags:
      - Public Services
      x-openapi-router-controller: openapi_server.controllers.public_services_controller
  /api/v1/public/image/{imageID}:
    get:
      operationId: resolve_image_using_get
      parameters:
      - description: The id of the image to be resolved.
        explode: false
        in: path
        name: imageID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: byte
                type: string
            application/xml:
              schema:
                format: byte
                type: string
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Resolve image
      tags:
      - Images
      - Public Services
      x-openapi-router-controller: openapi_server.controllers.images_controller
  /api/v1/public/organizations/{organizationId}:
    get:
      operationId: read_organization_info
      parameters:
      - description: Organization ID
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Read public organization information
      tags:
      - Public Services
      x-openapi-router-controller: openapi_server.controllers.public_services_controller
  /api/v1/public/routes/{id4n}:
    get:
      operationId: get_routes
      parameters:
      - description: id4n
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      - description: type
        explode: true
        in: query
        name: type
        required: true
        schema:
          default: web
          type: string
        style: form
      - description: interpolate
        explode: true
        in: query
        name: interpolate
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Route'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Route'
                type: array
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Retrieve all public routes for a GUID
      tags:
      - Public Services
      x-openapi-router-controller: openapi_server.controllers.public_services_controller
  /api/v1/roles:
    get:
      description: Listing of roles.
      operationId: list_all_roles
      parameters:
      - description: If specified the roles will be filtered containing that privilege.
        explode: true
        in: query
        name: privilege
        required: false
        schema:
          type: string
        style: form
      - description: Start with the n-th element
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum count of returned elements
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfRole'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfRole'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: List roles
      tags:
      - Accounts
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
  /api/v1/routingfiles/{id4n}:
    get:
      operationId: get_routing_file
      parameters:
      - description: id4n
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      - description: organizationId
        explode: true
        in: query
        name: organizationId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingFile'
            application/xml:
              schema:
                $ref: '#/components/schemas/RoutingFile'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Retrieve routing file
      tags:
      - Routing
      x-openapi-router-controller: openapi_server.controllers.routing_controller
    put:
      operationId: update_routing_file
      parameters:
      - description: id4n
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingFileRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/RoutingFileRequest'
        description: rfr
        required: true
        x-body-name: body
      responses:
        "200":
          description: OK
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Store routing file
      tags:
      - Routing
      x-openapi-router-controller: openapi_server.controllers.routing_controller
      x-codegen-request-body-name: body
  /api/v1/routingfiles/{id4n}/route/{type}:
    get:
      operationId: get_route
      parameters:
      - description: id4n
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      - description: The type of route you want to have
        explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      - description: privateRoutes
        explode: true
        in: query
        name: privateRoutes
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: publicRoutes
        explode: true
        in: query
        name: publicRoutes
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: interpolate
        explode: true
        in: query
        name: interpolate
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
            application/xml:
              schema:
                $ref: '#/components/schemas/Route'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Retrieve current route of a GUID (or ID4N)
      tags:
      - Routing
      x-openapi-router-controller: openapi_server.controllers.routing_controller
  /api/v1/routingfiles/{id4n}/routes/{type}:
    get:
      operationId: get_all_routes
      parameters:
      - description: id4n
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      - description: The type of route you want to have
        explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      - description: organizationId
        explode: true
        in: query
        name: organizationId
        required: false
        schema:
          type: string
        style: form
      - description: interpolate
        explode: true
        in: query
        name: interpolate
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Route'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Route'
                type: array
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Retrieve all routes of a GUID (or ID4N)
      tags:
      - Routing
      x-openapi-router-controller: openapi_server.controllers.routing_controller
  /api/v1/search/guids:
    get:
      operationId: search_by_alias
      parameters:
      - description: The alias to search for
        explode: true
        in: query
        name: alias
        required: true
        schema:
          type: string
        style: form
      - description: Alias type type to search for
        explode: true
        in: query
        name: aliasType
        required: true
        schema:
          enum:
          - gtin
          - article
          - mapp
          - item
          - rfid
          - tracking
          - eclass
          - unspsc
          - product
          - material
          - reference
          type: string
        style: form
      - description: Start with the n-th element
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum count of returned elements
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfGuid'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfGuid'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Search for GUIDs by alias
      tags:
      - Alias
      x-openapi-router-controller: openapi_server.controllers.alias_controller
  /api/v1/search/guids/aliases/types:
    get:
      description: Retrieve this list to find out all alias types to use with alias
        search and change operations
      operationId: get_guid_alias_types
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  enum:
                  - gtin
                  - article
                  - mapp
                  - item
                  - rfid
                  - tracking
                  - eclass
                  - unspsc
                  - product
                  - material
                  - reference
                  type: string
                type: array
            application/xml:
              schema:
                items:
                  enum:
                  - gtin
                  - article
                  - mapp
                  - item
                  - rfid
                  - tracking
                  - eclass
                  - unspsc
                  - product
                  - material
                  - reference
                  type: string
                type: array
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: List all supported alias types
      tags:
      - Alias
      x-openapi-router-controller: openapi_server.controllers.alias_controller
  /api/v1/transfers/{id4n}/receiveInfo:
    put:
      description: Taking ownership can be forbidden by a previous owner. See methods
        prepare and getInfo
      operationId: receive
      parameters:
      - description: This ID4N identifies the object to take hold of
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferReceiveInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/TransferReceiveInfo'
        description: Required information to receive an id4n object
        required: true
        x-body-name: body
      responses:
        "200":
          description: OK
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: "Transfer a GUID or collection, obtaining it (i.e. becoming the holder)\
        \ and if allowed also taking ownership"
      tags:
      - Transfer
      x-openapi-router-controller: openapi_server.controllers.transfer_controller
      x-codegen-request-body-name: body
  /api/v1/transfers/{id4n}/sendInfo:
    get:
      operationId: get_send_info
      parameters:
      - description: The ID4N to retrieve information about
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferSendInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/TransferSendInfo'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Show transfer preparation information
      tags:
      - Transfer
      x-openapi-router-controller: openapi_server.controllers.transfer_controller
    put:
      operationId: prepare
      parameters:
      - description: The ID4N to prepare for transfer
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferSendInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/TransferSendInfo'
        description: Transfer preparation status
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
          description: OK
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Prepare an object for transfer
      tags:
      - Transfer
      x-openapi-router-controller: openapi_server.controllers.transfer_controller
      x-codegen-request-body-name: body
  /api/v1/user/organizations:
    get:
      operationId: get_organizations_of_user
      parameters:
      - description: role
        explode: true
        in: query
        name: role
        required: false
        schema:
          type: string
        style: form
      - description: Start with the n-th element
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum count of returned elements
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfOrganization'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfOrganization'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Retrieve organizations of user
      tags:
      - Accounts
      - Organizations
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
  /api/v1/users:
    get:
      operationId: find_users
      parameters:
      - explode: true
        in: query
        name: usernamePrefix
        required: false
        schema:
          type: string
        style: form
      - description: Start with the n-th element
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum count of returned elements
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfUserPresentation'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaginatedResponseOfUserPresentation'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Find users
      tags:
      - Accounts
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
  /api/v1/users/{username}:
    get:
      operationId: find_user_by_username
      parameters:
      - description: username
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPresentation'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserPresentation'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      security:
      - Authorization: []
      summary: Find by username
      tags:
      - Accounts
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
  /go/{guid}:
    get:
      description: "Forwarding to the designated route defined in the routing,"
      operationId: go
      parameters:
      - description: guid
        explode: false
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      summary: Forward
      tags:
      - Public Services
      x-openapi-router-controller: openapi_server.controllers.public_services_controller
  /login:
    post:
      description: ID4i API Login
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCredentials'
          application/xml:
            schema:
              $ref: '#/components/schemas/AccountCredentials'
        required: true
        x-body-name: body
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
      tags:
      - Accounts
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
      x-codegen-request-body-name: body
  /whois/{id4n}:
    get:
      operationId: resolve_who_is_entry
      parameters:
      - description: id4n
        explode: false
        in: path
        name: id4n
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhoIsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WhoIsResponse'
          description: OK
        "202":
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Method not allowed
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Acceptable
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Server Error
      summary: Resolve owner of id4n
      tags:
      - Public Services
      - WhoIs
      x-openapi-router-controller: openapi_server.controllers.public_services_controller
components:
  requestBodies:
    ChangeRoleRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChangeRoleRequest'
        application/xml:
          schema:
            $ref: '#/components/schemas/ChangeRoleRequest'
      description: changeRoleRequest
      required: true
    ListOfId4ns:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListOfId4ns'
        application/xml:
          schema:
            $ref: '#/components/schemas/ListOfId4ns'
      description: id4ns
      required: true
    ListOfId4ns2:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListOfId4ns'
        application/xml:
          schema:
            $ref: '#/components/schemas/ListOfId4ns'
      description: listOfGuids
      required: true
    OrganizationAddress:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganizationAddress'
        application/xml:
          schema:
            $ref: '#/components/schemas/OrganizationAddress'
      description: addressResource
      required: true
    createDocument:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/putDocument_request'
      required: true
  schemas:
    AccountCredentials:
      example:
        password: password
        login: login
      properties:
        login:
          title: login
          type: string
        password:
          title: password
          type: string
      title: AccountCredentials
      type: object
    AddApiKeyPrivilegeRequest:
      example:
        privilege: privilege
      properties:
        privilege:
          title: privilege
          type: string
      required:
      - privilege
      title: AddApiKeyPrivilegeRequest
      type: object
    AddPartnerRequest:
      example:
        organizationId: org.acme
      properties:
        organizationId:
          description: The namespace of the partner organization to add
          example: org.acme
          title: organizationId
          type: string
      required:
      - organizationId
      title: AddPartnerRequest
      type: object
    ApiError:
      example:
        code: ERR_REGISTRATION_VERIFICATION_NO_TOKEN
        errorList:
        - null
        - null
        errorId: errorId
        message: message
      properties:
        code:
          enum:
          - ERR_REGISTRATION_VERIFICATION_NO_TOKEN
          - ERR_REGISTRATION_VERIFICATION_INVALID_TOKEN
          - ERR_REGISTRATION_VERIFICATION_EXPIRED_TOKEN
          - ERR_AUTHENTICATION_NO_TOKEN
          - ERR_AUTHENTICATION_INVALID_TOKEN
          - ERR_AUTHENTICATION_EXPIRED_TOKEN
          - ERR_AUTHENTICATION_FAILED
          - ERR_AUTHORIZATION_MISSING_PRIVILEGES
          - ERR_AUTHORIZATION_FORBIDDEN
          - ERR_AUTHORIZATION_REQUIRE_USER
          - ERR_INPUT_VALIDATION_FAILED
          - ERR_FIELD_INPUT_VALIDATION_FAILED
          - ERR_VALIDATION_CONSTRAINT_FAILED
          - ERR_INPUT_NOT_READABLE
          - ERR_INVALID_INPUT_PARAMETER
          - ERR_GUID_CREATION
          - ERR_INVALID_ID4N_OBJECT_TYPE
          - ERR_MISSING_BILLING_INFORMATION
          - ERR_COLLECTION_UPDATE_DENIED
          - ERR_ENTITY_NOT_FOUND
          - ERR_ENTITY_TOO_BIG
          - ERR_DUPLICATE
          - ERR_INTERNAL
          - ERR_UNKNOWN
          - ERR_INVALID_ORGANIZATION_USERROLE
          - ERR_ORGANIZATION_ROLE_INCONSISTENCY
          - ERR_ORGANIZATION_NOT_DELETABLE
          - ERR_USER_ALREADY_IN_ORGANIZATION
          - ERR_USER_INVITATION_NEEDS_MINIMUM_ONE_ROLE
          - ERR_USER_INVITATION_SPECIFY_EMAIL_OR_USERNAME
          - ERR_USER_DEACTIVATED
          - ERR_LANGUAGE_NOT_SUPPORTED
          - ERR_EMAIL_MISSING_TEMPLATE_PARAM
          - ERR_EMAIL_TEMPLATE_NOT_AVAILABLE
          - ERR_EMAIL_PREPARATION_FAILED
          - ERR_IMAGE_CONVERSION
          - ERR_UPLOAD_TOO_LARGE
          - ERR_INVALID_ALIAS_TYPE
          - ERR_INVALID_URI_TEMPLATE
          - ERR_INVALID_URI_TEMPLATE_VARIABLE
          - ERR_INVALID_NAMESPACE
          - ERR_INVALID_PROPERTY_KEY
          - ERR_INVALID_FILTER
          - ERR_NAMESPACE_ALREADY_EXISTS
          - ERR_INSECURE_PASSWORD
          - ERR_TRANSFER_DENIED
          - ERR_INVALID_PHYSICAL_STATE
          - ERR_INVALID_HISTORY_PROPERTY_NAMESPACE
          - ERR_INVALID_HISTORY_PROPERTY_VALUE
          - ERR_ORGA_CANNOT_BE_OWN_PARTNER
          - ERR_INVALID_GS1_CODE
          - ERR_INVALID_GS1_CHAR_IN_CODE
          - ERR_INVALID_GS1_CODE_NOT_UNIQUE
          - ERR_INVALID_GS1_GTIN
          - ERR_GS1_CODE_CURRENTLY_UNSUPPORTED
          title: code
          type: string
        errorId:
          title: errorId
          type: string
        errorList:
          items:
            $ref: '#/components/schemas/ApiError'
          title: errorList
          type: array
        message:
          title: message
          type: string
      required:
      - code
      - errorId
      - errorList
      - message
      title: ApiError
      type: object
    ApiKeyChangeRequest:
      example:
        newLabel: newLabel
        active: true
      properties:
        active:
          title: active
          type: boolean
        newLabel:
          maxLength: 50
          minLength: 5
          title: newLabel
          type: string
      required:
      - newLabel
      title: ApiKeyChangeRequest
      type: object
    ApiKeyCreationRequest:
      example:
        organizationId: de.acme
        label: label
        secret: secret
      properties:
        label:
          maxLength: 50
          minLength: 5
          title: label
          type: string
        organizationId:
          example: de.acme
          title: organizationId
          type: string
        secret:
          maxLength: 500
          minLength: 10
          title: secret
          type: string
      required:
      - label
      - organizationId
      - secret
      title: ApiKeyCreationRequest
      type: object
    ApiKeyPresentation:
      example:
        organizationId: de.acme
        createdAt: 1517232722
        createdBy: user123
        active: true
        label: My Api Key
        key: 39978f49-6ff1-4147-bf0f-9910185084b7
      properties:
        active:
          description: Whether this API key is active
          example: true
          title: active
          type: boolean
        createdAt:
          description: The UTC unix timestamp of when this api key has been created
          example: 1517232722
          format: int64
          title: createdAt
          type: integer
        createdBy:
          example: user123
          title: createdBy
          type: string
        key:
          description: The api key identifier
          example: 39978f49-6ff1-4147-bf0f-9910185084b7
          title: key
          type: string
        label:
          description: The label / name of the api key
          example: My Api Key
          title: label
          type: string
        organizationId:
          description: The organization namespace this api key belongs to
          example: de.acme
          title: organizationId
          type: string
      required:
      - active
      - createdAt
      - createdBy
      - key
      - label
      - organizationId
      title: ApiKeyPresentation
      type: object
    ApiKeyPrivilege:
      example:
        privilege: privilege
        id4nAssociated: true
      properties:
        id4nAssociated:
          title: id4nAssociated
          type: boolean
        privilege:
          title: privilege
          type: string
      required:
      - id4nAssociated
      - privilege
      title: ApiKeyPrivilege
      type: object
    ApiKeyPrivilegeInfo:
      example:
        helpText: helpText
        name: name
        allowsBillableOperations: true
        id4nAssociated: true
      properties:
        allowsBillableOperations:
          title: allowsBillableOperations
          type: boolean
        helpText:
          title: helpText
          type: string
        id4nAssociated:
          title: id4nAssociated
          type: boolean
        name:
          title: name
          type: string
      required:
      - id4nAssociated
      - name
      title: ApiKeyPrivilegeInfo
      type: object
    AppInfoPresentation:
      example:
        productionMode: true
        commitTime: commitTime
        name: name
        branch: branch
        version: version
        revision: revision
      properties:
        branch:
          title: branch
          type: string
        commitTime:
          title: commitTime
          type: string
        name:
          title: name
          type: string
        productionMode:
          title: productionMode
          type: boolean
        revision:
          title: revision
          type: string
        version:
          title: version
          type: string
      title: AppInfoPresentation
      type: object
    BillingPosition:
      example:
        amount: 0
        singlePrice: 1.4658129805029452
        unit: unit
        service: service
        count: 6.027456183070403
        description: description
        sum: 5.962133916683182
      properties:
        amount:
          format: int64
          title: amount
          type: integer
        count:
          title: count
          type: number
        description:
          title: description
          type: string
        service:
          title: service
          type: string
        singlePrice:
          title: singlePrice
          type: number
        sum:
          title: sum
          type: number
        unit:
          title: unit
          type: string
      required:
      - amount
      - count
      - description
      - service
      - singlePrice
      - sum
      - unit
      title: BillingPosition
      type: object
    ChangeLogEntry:
      description: A changelog entry
      example:
        messageProperties:
          object: nearly every object
          user:
            type: user
            value: a.vratny
        id: e100123
        message: "User {{&user}} has changed the title of {{&object}}"
        timestamp: 1517232722
      properties:
        id:
          description: The unique id of the changelog entry
          example: e100123
          readOnly: true
          title: id
          type: string
        message:
          description: The message as template or rendered as plain text
          example: "User {{&user}} has changed the title of {{&object}}"
          readOnly: true
          title: message
          type: string
        messageProperties:
          additionalProperties:
            type: object
          description: 'The values of the properties in the message. May be nested
            as object with a value field '
          example:
            object: nearly every object
            user:
              type: user
              value: a.vratny
          readOnly: true
          title: messageProperties
          type: object
        timestamp:
          description: The UTC unix timestamp when this change occurred
          example: 1517232722
          format: int64
          readOnly: true
          title: timestamp
          type: integer
      title: ChangeLogEntry
      type: object
    ChangeRoleRequest:
      example:
        roles:
        - roles
        - roles
      properties:
        roles:
          items:
            type: string
          title: roles
          type: array
      title: ChangeRoleRequest
      type: object
    CompleteUserRegistrationRequest:
      example:
        password: password
        verificationToken: verificationToken
        username: username
      properties:
        password:
          maxLength: 99
          minLength: 8
          title: password
          type: string
        username:
          pattern: "[a-zA-Z0-9_.-]{6,50}"
          title: username
          type: string
        verificationToken:
          title: verificationToken
          type: string
      required:
      - password
      - username
      - verificationToken
      title: CompleteUserRegistrationRequest
      type: object
    Country:
      example:
        code: code
        name: name
      properties:
        code:
          title: code
          type: string
        name:
          title: name
          type: string
      required:
      - code
      - name
      title: Country
      type: object
    CreateCollectionRequest:
      example:
        organizationId: de.acme
        length: 25
        label: label
        type: ROUTING_COLLECTION
      properties:
        label:
          maxLength: 128
          minLength: 5
          title: label
          type: string
        length:
          exclusiveMaximum: false
          exclusiveMinimum: false
          format: int32
          maximum: 255
          minimum: 6
          title: length
          type: integer
        organizationId:
          example: de.acme
          title: organizationId
          type: string
        type:
          enum:
          - ROUTING_COLLECTION
          - LOGISTIC_COLLECTION
          - LABELLED_COLLECTION
          title: type
          type: string
      required:
      - length
      - organizationId
      - type
      title: CreateCollectionRequest
      type: object
    CreateGuidRequest:
      description: GUID creation information
      example:
        organizationId: de.acme
        count: 1
        length: 40
      properties:
        count:
          description: The total number of GUIDs to create
          example: 1
          exclusiveMaximum: false
          exclusiveMinimum: false
          format: int32
          maximum: 1000
          minimum: 1
          title: count
          type: integer
        length:
          description: The charactersequence length of the GUID
          example: 40
          exclusiveMaximum: false
          exclusiveMinimum: false
          format: int32
          maximum: 255
          minimum: 7
          title: length
          type: integer
        organizationId:
          description: The namespace of the organization where the generated GUIDs
            should be assigned.
          example: de.acme
          title: organizationId
          type: string
      required:
      - count
      - length
      - organizationId
      title: CreateGuidRequest
      type: object
    Document:
      example:
        filename: publicInfo.pdf
        visibility:
          public: true
          sharedOrganizationIds:
          - de.acme
          - com.porsche
          - de.bluerain
        ownerOrganizationId: de.bluerain
        mimeType: text/plain
      properties:
        filename:
          description: File Name
          example: publicInfo.pdf
          title: filename
          type: string
        mimeType:
          description: Mime Type
          example: text/plain
          title: mimeType
          type: string
        ownerOrganizationId:
          description: The organization's namespace which owns the document
          example: de.bluerain
          readOnly: true
          title: ownerOrganizationId
          type: string
        visibility:
          $ref: '#/components/schemas/Visibility'
      title: Document
      type: object
    DocumentUpdate:
      example:
        filename: publicInfo.pdf
        visibility:
          sharedWithOrganizationIds:
          - de.acme
          - com.porsche
          - de.bluerain
          public: true
        mimeType: text/plain
      properties:
        filename:
          description: File Name
          example: publicInfo.pdf
          title: filename
          type: string
        mimeType:
          description: Mime Type
          example: text/plain
          title: mimeType
          type: string
        visibility:
          $ref: '#/components/schemas/VisibilityUpdate'
      title: DocumentUpdate
      type: object
    Guid:
      example:
        physicalState: UNATTACHED
        id4n: 3THvgrWxqgTFC4
        ownerOrganizationId: ownerOrganizationId
        holderOrganizationId: holderOrganizationId
        createdTimestamp: 1517232722
        properties: de.example
      properties:
        createdTimestamp:
          description: The UTC unix timestamp of when this GUID has been created
          example: 1517232722
          format: int64
          readOnly: true
          title: createdTimestamp
          type: integer
        holderOrganizationId:
          description: Organization namespace of the GUID holder
          readOnly: true
          title: holderOrganizationId
          type: string
        id4n:
          description: The ID
          example: 3THvgrWxqgTFC4
          readOnly: true
          title: id4n
          type: string
        ownerOrganizationId:
          description: Organization namespace of the GUID owner
          readOnly: true
          title: ownerOrganizationId
          type: string
        physicalState:
          description: Physical attachment state of the GUID
          enum:
          - UNATTACHED
          - ATTACHED
          - DETACHED
          title: physicalState
          type: string
        properties:
          additionalProperties:
            type: string
          description: The properties of the organization
          example: de.example
          readOnly: true
          title: properties
          type: object
      title: Guid
      type: object
    GuidAlias:
      example:
        alias: alias
      properties:
        alias:
          description: An alias
          example: alias
          maxLength: 255
          minLength: 1
          title: alias
          type: string
      required:
      - alias
      title: GuidAlias
      type: object
    GuidCollection:
      example:
        physicalState: UNATTACHED
        id4n: id4n
        ownerOrganizationId: ownerOrganizationId
        holderOrganizationId: holderOrganizationId
        createdTimestamp: 0
        label: label
        type: ROUTING_COLLECTION
      properties:
        createdTimestamp:
          description: The UTC unix timestamp of when this collection has been created
          format: int64
          readOnly: true
          title: createdTimestamp
          type: integer
        holderOrganizationId:
          description: Organization namespace of the holder of the collection
          title: holderOrganizationId
          type: string
        id4n:
          description: The ID
          readOnly: true
          title: id4n
          type: string
        label:
          maxLength: 128
          minLength: 5
          title: label
          type: string
        ownerOrganizationId:
          description: Organization namespace of the collection owner
          readOnly: true
          title: ownerOrganizationId
          type: string
        physicalState:
          description: Physical attachment state of the collection
          enum:
          - UNATTACHED
          - ATTACHED
          - DETACHED
          title: physicalState
          type: string
        type:
          enum:
          - ROUTING_COLLECTION
          - LOGISTIC_COLLECTION
          - LABELLED_COLLECTION
          readOnly: true
          title: type
          type: string
      title: GuidCollection
      type: object
    HistoryItem:
      description: GUID history item
      example:
        organizationId: org.acme
        visibility:
          public: true
          sharedOrganizationIds:
          - de.acme
          - com.porsche
          - de.bluerain
        ownerOrganizationId: de.bluerain
        additionalProperties:
          key: additionalProperties
        type: DISPATCHED
        sequenceId: 9784
        timestamp: 1517232722
      properties:
        additionalProperties:
          additionalProperties:
            type: string
          description: History items custom additional properties
          title: additionalProperties
          type: object
        organizationId:
          description: Originator of the history item
          example: org.acme
          title: organizationId
          type: string
        ownerOrganizationId:
          description: Owner of the history item
          example: de.bluerain
          readOnly: true
          title: ownerOrganizationId
          type: string
        sequenceId:
          description: Forms the primary key of the history item together with the
            GUID and the organizationId
          example: 9784
          format: int32
          readOnly: true
          title: sequenceId
          type: integer
        timestamp:
          description: History item timestamp
          example: 1517232722
          format: int64
          readOnly: true
          title: timestamp
          type: integer
        type:
          description: Type of the history item
          enum:
          - CREATED
          - DESTROYED
          - RECYCLED
          - SHIPMENT_PREPARED
          - STORED
          - RETRIEVED_FROM_STORAGE
          - PACKAGED
          - DISPATCHED
          - RECEIVED
          - DELIVERY_REFUSED
          - REPROCESSING_STARTED
          - REPROCESSING_STEP_STARTED
          - REPROCESSING_STEP_CANCELLED
          - REPROCESSING_STEP_FINISHED
          - REPROCESSING_CANCELLED
          - REPROCESSING_FINISHED
          - DISASSEMBLED
          - MAINTENANCE_STARTED
          - MAINTENANCE_STEP_STARTED
          - MAINTENANCE_STEP_CANCELLED
          - MAINTENANCE_STEP_FINISHED
          - MAINTENANCE_CANCELLED
          - MAINTENANCE_FINISHED
          - PRODUCTION_STARTED
          - PRODUCTION_CANCELLED
          - PRODUCTION_FINISHED
          - PRODUCTION_STEP_STARTED
          - PRODUCTION_STEP_CANCELLED
          - PRODUCTION_STEP_FINISHED
          - QUALITY_CHECK_PERFORMED
          example: DISPATCHED
          title: type
          type: string
        visibility:
          $ref: '#/components/schemas/Visibility'
      required:
      - organizationId
      - type
      title: HistoryItem
      type: object
    HistoryItemUpdate:
      description: GUID history item update (diff patch)
      example:
        organizationId: de.acme
        visibility:
          public: true
          sharedOrganizationIds:
          - de.acme
          - com.porsche
          - de.bluerain
      properties:
        organizationId:
          description: "New organization id displayed for this item. If given, must\
            \ match the holder of GUID and the organization the history item is found\
            \ under."
          example: de.acme
          title: organizationId
          type: string
        visibility:
          $ref: '#/components/schemas/Visibility'
      title: HistoryItemUpdate
      type: object
    Id4n:
      example:
        id4n: 3THvgrWxqgTFC4
      properties:
        id4n:
          description: The ID
          example: 3THvgrWxqgTFC4
          title: id4n
          type: string
      title: Id4n
      type: object
    Id4nPresentation:
      example:
        id4n: 3THvgrWxqgTFC4
        ownerOrganizationId: org.acme
        holderOrganizationId: de.example
        createdTimestamp: 1517232722
        label: label
        type: GUID
        properties: de.example
      properties:
        createdTimestamp:
          description: The UTC unix timestamp of when this ID has been created
          example: 1517232722
          format: int64
          readOnly: true
          title: createdTimestamp
          type: integer
        holderOrganizationId:
          description: Organization namespace of the holder of the ID
          example: de.example
          readOnly: true
          title: holderOrganizationId
          type: string
        id4n:
          description: The ID
          example: 3THvgrWxqgTFC4
          readOnly: true
          title: id4n
          type: string
        label:
          readOnly: true
          title: label
          type: string
        ownerOrganizationId:
          description: Organization namespace of the ID owner
          example: org.acme
          readOnly: true
          title: ownerOrganizationId
          type: string
        properties:
          additionalProperties:
            type: string
          description: The properties of the organization
          example: de.example
          readOnly: true
          title: properties
          type: object
        type:
          description: The type of ID
          enum:
          - GUID
          - ROUTING_COLLECTION
          - LOGISTIC_COLLECTION
          - LABELLED_COLLECTION
          readOnly: true
          title: type
          type: string
      title: Id4nPresentation
      type: object
    Id4nProperties:
      description: An id4n with its properties
      example:
        id4n: id4n
        properties:
          key: properties
      properties:
        id4n:
          description: The ID4n
          title: id4n
          type: string
        properties:
          additionalProperties:
            type: string
          description: The properties of the ID4n
          title: properties
          type: object
      title: Id4nProperties
      type: object
    ImportGS1CodesRequest:
      description: GS1/MAPP codes import information
      example:
        organizationId: de.acme
        listOfGS1s:
          codes:
          - codes
          - codes
      properties:
        listOfGS1s:
          $ref: '#/components/schemas/ListOfGS1s'
        organizationId:
          description: The organization where the GS1/Mapp code is imported.
          example: de.acme
          title: organizationId
          type: string
      required:
      - listOfGS1s
      - organizationId
      title: ImportGS1CodesRequest
      type: object
    ListOfGS1s:
      description: A list of GS1/MAPP codes
      example:
        codes:
        - codes
        - codes
      properties:
        codes:
          description: A list of GS1/MAPP codes.
          items:
            type: string
          title: codes
          type: array
      title: ListOfGS1s
      type: object
    ListOfId4nProperties:
      description: A list of id4n properties
      example:
        list:
        - id4n: id4n
          properties:
            key: properties
        - id4n: id4n
          properties:
            key: properties
      properties:
        list:
          description: A list containing the id4n with its properties.
          items:
            $ref: '#/components/schemas/Id4nProperties'
          title: list
          type: array
      title: ListOfId4nProperties
      type: object
    ListOfId4ns:
      description: A list of id4ns
      example:
        id4ns:
        - id4ns
        - id4ns
      properties:
        id4ns:
          description: A list of id4ns.
          items:
            type: string
          title: id4ns
          type: array
      title: ListOfId4ns
      type: object
    Organization:
      description: An organization
      example:
        name: ACME Inc.
        namespace: de.acme
        id: 100
        logoURL: /api/v1/public/images/abcdef
      properties:
        id:
          description: "The id of the organization ( Deprecated: Use namespace instead.\
            \ )"
          example: 100
          format: int64
          readOnly: true
          title: id
          type: integer
        logoURL:
          description: URL to a logo of the organization
          example: /api/v1/public/images/abcdef
          readOnly: true
          title: logoURL
          type: string
        name:
          description: The name of the organization
          example: ACME Inc.
          maxLength: 254
          minLength: 3
          title: name
          type: string
        namespace:
          description: The namespace of the organization
          example: de.acme
          maxLength: 255
          minLength: 3
          title: namespace
          type: string
      required:
      - name
      - namespace
      title: Organization
      type: object
    OrganizationAddress:
      example:
        firstname: Max
        city: MyCity
        countryCode: DE
        street: Examplestreet 1
        companyName: ACME Inc.
        postCode: "12345"
        telephone: +49 8088 12345
        countryName: Germany
        lastname: Muster
      properties:
        city:
          example: MyCity
          maxLength: 99
          minLength: 2
          title: city
          type: string
        companyName:
          example: ACME Inc.
          maxLength: 254
          minLength: 0
          title: companyName
          type: string
        countryCode:
          description: The ISO 3166 two-letter country code
          example: DE
          maxLength: 2
          minLength: 0
          title: countryCode
          type: string
        countryName:
          description: The country name
          example: Germany
          readOnly: true
          title: countryName
          type: string
        firstname:
          example: Max
          maxLength: 255
          minLength: 0
          title: firstname
          type: string
        lastname:
          example: Muster
          maxLength: 255
          minLength: 0
          title: lastname
          type: string
        postCode:
          example: "12345"
          maxLength: 40
          minLength: 2
          title: postCode
          type: string
        street:
          example: Examplestreet 1
          maxLength: 254
          minLength: 3
          title: street
          type: string
        telephone:
          description: The telephone number e.g.
          example: +49 8088 12345
          maxLength: 99
          minLength: 0
          title: telephone
          type: string
      required:
      - city
      - countryCode
      - firstname
      - lastname
      - postCode
      - street
      title: OrganizationAddress
      type: object
    OrganizationUpdate:
      description: An organization
      example:
        name: ACME Inc.
      properties:
        name:
          description: The name of the organization
          example: ACME Inc.
          maxLength: 254
          minLength: 3
          title: name
          type: string
      title: OrganizationUpdate
      type: object
    OrganizationUserInvitation:
      example:
        roles:
        - roles
        - roles
        userName: userName
        email: email
      properties:
        email:
          title: email
          type: string
        roles:
          items:
            type: string
          title: roles
          type: array
        userName:
          title: userName
          type: string
      required:
      - roles
      title: OrganizationUserInvitation
      type: object
    OrganizationUserInvitationListRequest:
      example:
        invitations:
        - roles:
          - roles
          - roles
          userName: userName
          email: email
        - roles:
          - roles
          - roles
          userName: userName
          email: email
      properties:
        invitations:
          items:
            $ref: '#/components/schemas/OrganizationUserInvitation'
          title: invitations
          type: array
      required:
      - invitations
      title: OrganizationUserInvitationListRequest
      type: object
    PaginatedResponseOfApiKeyPresentation:
      example:
        total: 200
        offset: 0
        elements:
        - organizationId: de.acme
          createdAt: 1517232722
          createdBy: user123
          active: true
          label: My Api Key
          key: 39978f49-6ff1-4147-bf0f-9910185084b7
        - organizationId: de.acme
          createdAt: 1517232722
          createdBy: user123
          active: true
          label: My Api Key
          key: 39978f49-6ff1-4147-bf0f-9910185084b7
        limit: 100
      properties:
        elements:
          items:
            $ref: '#/components/schemas/ApiKeyPresentation'
          title: elements
          type: array
        limit:
          description: The number of returned elements
          example: 100
          format: int32
          title: limit
          type: integer
        offset:
          description: Starting with the n-th element
          example: 0
          format: int32
          title: offset
          type: integer
        total:
          description: The total number of elements
          example: 200
          format: int32
          title: total
          type: integer
      required:
      - elements
      - limit
      - offset
      title: PaginatedResponseOfApiKeyPresentation
      type: object
    PaginatedResponseOfApiKeyPrivilege:
      example:
        total: 200
        offset: 0
        elements:
        - privilege: privilege
          id4nAssociated: true
        - privilege: privilege
          id4nAssociated: true
        limit: 100
      properties:
        elements:
          items:
            $ref: '#/components/schemas/ApiKeyPrivilege'
          title: elements
          type: array
        limit:
          description: The number of returned elements
          example: 100
          format: int32
          title: limit
          type: integer
        offset:
          description: Starting with the n-th element
          example: 0
          format: int32
          title: offset
          type: integer
        total:
          description: The total number of elements
          example: 200
          format: int32
          title: total
          type: integer
      required:
      - elements
      - limit
      - offset
      title: PaginatedResponseOfApiKeyPrivilege
      type: object
    PaginatedResponseOfApiKeyPrivilegeInfo:
      example:
        total: 200
        offset: 0
        elements:
        - helpText: helpText
          name: name
          allowsBillableOperations: true
          id4nAssociated: true
        - helpText: helpText
          name: name
          allowsBillableOperations: true
          id4nAssociated: true
        limit: 100
      properties:
        elements:
          items:
            $ref: '#/components/schemas/ApiKeyPrivilegeInfo'
          title: elements
          type: array
        limit:
          description: The number of returned elements
          example: 100
          format: int32
          title: limit
          type: integer
        offset:
          description: Starting with the n-th element
          example: 0
          format: int32
          title: offset
          type: integer
        total:
          description: The total number of elements
          example: 200
          format: int32
          title: total
          type: integer
      required:
      - elements
      - limit
      - offset
      title: PaginatedResponseOfApiKeyPrivilegeInfo
      type: object
    PaginatedResponseOfChangeLogEntry:
      example:
        total: 200
        offset: 0
        elements:
        - messageProperties:
            object: nearly every object
            user:
              type: user
              value: a.vratny
          id: e100123
          message: "User {{&user}} has changed the title of {{&object}}"
          timestamp: 1517232722
        - messageProperties:
            object: nearly every object
            user:
              type: user
              value: a.vratny
          id: e100123
          message: "User {{&user}} has changed the title of {{&object}}"
          timestamp: 1517232722
        limit: 100
      properties:
        elements:
          items:
            $ref: '#/components/schemas/ChangeLogEntry'
          title: elements
          type: array
        limit:
          description: The number of returned elements
          example: 100
          format: int32
          title: limit
          type: integer
        offset:
          description: Starting with the n-th element
          example: 0
          format: int32
          title: offset
          type: integer
        total:
          description: The total number of elements
          example: 200
          format: int32
          title: total
          type: integer
      required:
      - elements
      - limit
      - offset
      title: PaginatedResponseOfChangeLogEntry
      type: object
    PaginatedResponseOfCountry:
      example:
        total: 200
        offset: 0
        elements:
        - code: code
          name: name
        - code: code
          name: name
        limit: 100
      properties:
        elements:
          items:
            $ref: '#/components/schemas/Country'
          title: elements
          type: array
        limit:
          description: The number of returned elements
          example: 100
          format: int32
          title: limit
          type: integer
        offset:
          description: Starting with the n-th element
          example: 0
          format: int32
          title: offset
          type: integer
        total:
          description: The total number of elements
          example: 200
          format: int32
          title: total
          type: integer
      required:
      - elements
      - limit
      - offset
      title: PaginatedResponseOfCountry
      type: object
    PaginatedResponseOfDocument:
      example:
        total: 200
        offset: 0
        elements:
        - filename: publicInfo.pdf
          visibility:
            public: true
            sharedOrganizationIds:
            - de.acme
            - com.porsche
            - de.bluerain
          ownerOrganizationId: de.bluerain
          mimeType: text/plain
        - filename: publicInfo.pdf
          visibility:
            public: true
            sharedOrganizationIds:
            - de.acme
            - com.porsche
            - de.bluerain
          ownerOrganizationId: de.bluerain
          mimeType: text/plain
        limit: 100
      properties:
        elements:
          items:
            $ref: '#/components/schemas/Document'
          title: elements
          type: array
        limit:
          description: The number of returned elements
          example: 100
          format: int32
          title: limit
          type: integer
        offset:
          description: Starting with the n-th element
          example: 0
          format: int32
          title: offset
          type: integer
        total:
          description: The total number of elements
          example: 200
          format: int32
          title: total
          type: integer
      required:
      - elements
      - limit
      - offset
      title: PaginatedResponseOfDocument
      type: object
    PaginatedResponseOfGuid:
      example:
        total: 200
        offset: 0
        elements:
        - physicalState: UNATTACHED
          id4n: 3THvgrWxqgTFC4
          ownerOrganizationId: ownerOrganizationId
          holderOrganizationId: holderOrganizationId
          createdTimestamp: 1517232722
          properties: de.example
        - physicalState: UNATTACHED
          id4n: 3THvgrWxqgTFC4
          ownerOrganizationId: ownerOrganizationId
          holderOrganizationId: holderOrganizationId
          createdTimestamp: 1517232722
          properties: de.example
        limit: 100
      properties:
        elements:
          items:
            $ref: '#/components/schemas/Guid'
          title: elements
          type: array
        limit:
          description: The number of returned elements
          example: 100
          format: int32
          title: limit
          type: integer
        offset:
          description: Starting with the n-th element
          example: 0
          format: int32
          title: offset
          type: integer
        total:
          description: The total number of elements
          example: 200
          format: int32
          title: total
          type: integer
      required:
      - elements
      - limit
      - offset
      title: PaginatedResponseOfGuid
      type: object
    PaginatedResponseOfGuidCollection:
      example:
        total: 200
        offset: 0
        elements:
        - physicalState: UNATTACHED
          id4n: id4n
          ownerOrganizationId: ownerOrganizationId
          holderOrganizationId: holderOrganizationId
          createdTimestamp: 0
          label: label
          type: ROUTING_COLLECTION
        - physicalState: UNATTACHED
          id4n: id4n
          ownerOrganizationId: ownerOrganizationId
          holderOrganizationId: holderOrganizationId
          createdTimestamp: 0
          label: label
          type: ROUTING_COLLECTION
        limit: 100
      properties:
        elements:
          items:
            $ref: '#/components/schemas/GuidCollection'
          title: elements
          type: array
        limit:
          description: The number of returned elements
          example: 100
          format: int32
          title: limit
          type: integer
        offset:
          description: Starting with the n-th element
          example: 0
          format: int32
          title: offset
          type: integer
        total:
          description: The total number of elements
          example: 200
          format: int32
          title: total
          type: integer
      required:
      - elements
      - limit
      - offset
      title: PaginatedResponseOfGuidCollection
      type: object
    PaginatedResponseOfHistoryItem:
      example:
        total: 200
        offset: 0
        elements:
        - organizationId: org.acme
          visibility:
            public: true
            sharedOrganizationIds:
            - de.acme
            - com.porsche
            - de.bluerain
          ownerOrganizationId: de.bluerain
          additionalProperties:
            key: additionalProperties
          type: DISPATCHED
          sequenceId: 9784
          timestamp: 1517232722
        - organizationId: org.acme
          visibility:
            public: true
            sharedOrganizationIds:
            - de.acme
            - com.porsche
            - de.bluerain
          ownerOrganizationId: de.bluerain
          additionalProperties:
            key: additionalProperties
          type: DISPATCHED
          sequenceId: 9784
          timestamp: 1517232722
        limit: 100
      properties:
        elements:
          items:
            $ref: '#/components/schemas/HistoryItem'
          title: elements
          type: array
        limit:
          description: The number of returned elements
          example: 100
          format: int32
          title: limit
          type: integer
        offset:
          description: Starting with the n-th element
          example: 0
          format: int32
          title: offset
          type: integer
        total:
          description: The total number of elements
          example: 200
          format: int32
          title: total
          type: integer
      required:
      - elements
      - limit
      - offset
      title: PaginatedResponseOfHistoryItem
      type: object
    PaginatedResponseOfId4nPresentation:
      example:
        total: 200
        offset: 0
        elements:
        - id4n: 3THvgrWxqgTFC4
          ownerOrganizationId: org.acme
          holderOrganizationId: de.example
          createdTimestamp: 1517232722
          label: label
          type: GUID
          properties: de.example
        - id4n: 3THvgrWxqgTFC4
          ownerOrganizationId: org.acme
          holderOrganizationId: de.example
          createdTimestamp: 1517232722
          label: label
          type: GUID
          properties: de.example
        limit: 100
      properties:
        elements:
          items:
            $ref: '#/components/schemas/Id4nPresentation'
          title: elements
          type: array
        limit:
          description: The number of returned elements
          example: 100
          format: int32
          title: limit
          type: integer
        offset:
          description: Starting with the n-th element
          example: 0
          format: int32
          title: offset
          type: integer
        total:
          description: The total number of elements
          example: 200
          format: int32
          title: total
          type: integer
      required:
      - elements
      - limit
      - offset
      title: PaginatedResponseOfId4nPresentation
      type: object
    PaginatedResponseOfOrganization:
      example:
        total: 200
        offset: 0
        elements:
        - name: ACME Inc.
          namespace: de.acme
          id: 100
          logoURL: /api/v1/public/images/abcdef
        - name: ACME Inc.
          namespace: de.acme
          id: 100
          logoURL: /api/v1/public/images/abcdef
        limit: 100
      properties:
        elements:
          items:
            $ref: '#/components/schemas/Organization'
          title: elements
          type: array
        limit:
          description: The number of returned elements
          example: 100
          format: int32
          title: limit
          type: integer
        offset:
          description: Starting with the n-th element
          example: 0
          format: int32
          title: offset
          type: integer
        total:
          description: The total number of elements
          example: 200
          format: int32
          title: total
          type: integer
      required:
      - elements
      - limit
      - offset
      title: PaginatedResponseOfOrganization
      type: object
    PaginatedResponseOfPartnerOrganization:
      example:
        total: 200
        offset: 0
        elements:
        - name: ACME Inc.
          namespace: de.acme
          logoURL: /api/v1/public/images/abcdef
        - name: ACME Inc.
          namespace: de.acme
          logoURL: /api/v1/public/images/abcdef
        limit: 100
      properties:
        elements:
          items:
            $ref: '#/components/schemas/PartnerOrganization'
          title: elements
          type: array
        limit:
          description: The number of returned elements
          example: 100
          format: int32
          title: limit
          type: integer
        offset:
          description: Starting with the n-th element
          example: 0
          format: int32
          title: offset
          type: integer
        total:
          description: The total number of elements
          example: 200
          format: int32
          title: total
          type: integer
      required:
      - elements
      - limit
      - offset
      title: PaginatedResponseOfPartnerOrganization
      type: object
    PaginatedResponseOfRole:
      example:
        total: 200
        offset: 0
        elements:
        - privileges:
          - privileges
          - privileges
          name: name
        - privileges:
          - privileges
          - privileges
          name: name
        limit: 100
      properties:
        elements:
          items:
            $ref: '#/components/schemas/Role'
          title: elements
          type: array
        limit:
          description: The number of returned elements
          example: 100
          format: int32
          title: limit
          type: integer
        offset:
          description: Starting with the n-th element
          example: 0
          format: int32
          title: offset
          type: integer
        total:
          description: The total number of elements
          example: 200
          format: int32
          title: total
          type: integer
      required:
      - elements
      - limit
      - offset
      title: PaginatedResponseOfRole
      type: object
    PaginatedResponseOfUserPresentation:
      example:
        total: 200
        offset: 0
        elements:
        - name: name
          id: id
        - name: name
          id: id
        limit: 100
      properties:
        elements:
          items:
            $ref: '#/components/schemas/UserPresentation'
          title: elements
          type: array
        limit:
          description: The number of returned elements
          example: 100
          format: int32
          title: limit
          type: integer
        offset:
          description: Starting with the n-th element
          example: 0
          format: int32
          title: offset
          type: integer
        total:
          description: The total number of elements
          example: 200
          format: int32
          title: total
          type: integer
      required:
      - elements
      - limit
      - offset
      title: PaginatedResponseOfUserPresentation
      type: object
    PaginatedResponseOfUserRoles:
      example:
        total: 200
        offset: 0
        elements:
        - roles:
          - roles
          - roles
          user:
            name: name
            id: id
        - roles:
          - roles
          - roles
          user:
            name: name
            id: id
        limit: 100
      properties:
        elements:
          items:
            $ref: '#/components/schemas/UserRoles'
          title: elements
          type: array
        limit:
          description: The number of returned elements
          example: 100
          format: int32
          title: limit
          type: integer
        offset:
          description: Starting with the n-th element
          example: 0
          format: int32
          title: offset
          type: integer
        total:
          description: The total number of elements
          example: 200
          format: int32
          title: total
          type: integer
      required:
      - elements
      - limit
      - offset
      title: PaginatedResponseOfUserRoles
      type: object
    PaginatedResponseOfstring:
      example:
        total: 200
        offset: 0
        elements:
        - elements
        - elements
        limit: 100
      properties:
        elements:
          items:
            type: string
          title: elements
          type: array
        limit:
          description: The number of returned elements
          example: 100
          format: int32
          title: limit
          type: integer
        offset:
          description: Starting with the n-th element
          example: 0
          format: int32
          title: offset
          type: integer
        total:
          description: The total number of elements
          example: 200
          format: int32
          title: total
          type: integer
      required:
      - elements
      - limit
      - offset
      title: PaginatedResponseOfstring
      type: object
    PartnerOrganization:
      description: A partner organization
      example:
        name: ACME Inc.
        namespace: de.acme
        logoURL: /api/v1/public/images/abcdef
      properties:
        logoURL:
          description: URL to a logo of the organization
          example: /api/v1/public/images/abcdef
          readOnly: true
          title: logoURL
          type: string
        name:
          description: The name of the organization
          example: ACME Inc.
          maxLength: 254
          minLength: 3
          readOnly: true
          title: name
          type: string
        namespace:
          description: The namespace of the organization
          example: de.acme
          maxLength: 255
          minLength: 3
          readOnly: true
          title: namespace
          type: string
      title: PartnerOrganization
      type: object
    PasswordResetRequest:
      example:
        username: username
      properties:
        username:
          title: username
          type: string
      required:
      - username
      title: PasswordResetRequest
      type: object
    PasswordResetVerificationRequest:
      example:
        password: password
        token: token
      properties:
        password:
          title: password
          type: string
        token:
          title: token
          type: string
      required:
      - password
      - token
      title: PasswordResetVerificationRequest
      type: object
    PublicImagePresentation:
      example:
        uri: /api/v1/public/image/bc671c63-4a9b-46e7-8c59-9bbe1917e6cc
      properties:
        uri:
          description: The uri/url of the image
          example: /api/v1/public/image/bc671c63-4a9b-46e7-8c59-9bbe1917e6cc
          readOnly: true
          title: uri
          type: string
      title: PublicImagePresentation
      type: object
    QueuePresentation:
      example:
        waitingMessages: 0
        active: true
        id: <default>
      properties:
        active:
          example: true
          title: active
          type: boolean
        id:
          example: <default>
          title: id
          type: string
        waitingMessages:
          description: The count of queued messages
          format: int64
          title: waitingMessages
          type: integer
      required:
      - active
      - id
      title: QueuePresentation
      type: object
    QueueUpdateRequest:
      example:
        purgeQueue: false
        active: true
        id: <default>
      properties:
        active:
          description: If this value is set to false the queue will be deleted.
          example: true
          title: active
          type: boolean
        id:
          example: <default>
          title: id
          type: string
        purgeQueue:
          description: Set this value to true if you want to purge the queue.
          example: false
          title: purgeQueue
          type: boolean
      title: QueueUpdateRequest
      type: object
    RegistrationVerificationTokenPresentation:
      example:
        token: token
      properties:
        token:
          title: token
          type: string
      required:
      - token
      title: RegistrationVerificationTokenPresentation
      type: object
    RemoveApiKeyPrivilegeRequest:
      example:
        privilege: privilege
      properties:
        privilege:
          title: privilege
          type: string
      required:
      - privilege
      title: RemoveApiKeyPrivilegeRequest
      type: object
    RemovePartnerRequest:
      example:
        organizationId: org.acme
      properties:
        organizationId:
          description: The namespace of the partner organization to remove
          example: org.acme
          title: organizationId
          type: string
      required:
      - organizationId
      title: RemovePartnerRequest
      type: object
    Role:
      example:
        privileges:
        - privileges
        - privileges
        name: name
      properties:
        name:
          title: name
          type: string
        privileges:
          items:
            type: string
          title: privileges
          type: array
      title: Role
      type: object
    Route:
      example:
        public: true
        validUntil: 6
        params:
          key: params
        priority: 0
        type: type
      properties:
        params:
          additionalProperties:
            type: string
          title: params
          type: object
        priority:
          format: int32
          title: priority
          type: integer
        public:
          title: public
          type: boolean
        type:
          title: type
          type: string
        validUntil:
          format: int64
          title: validUntil
          type: integer
      required:
      - params
      - public
      - type
      title: Route
      type: object
    RoutingFile:
      example:
        routes:
        - public: true
          validUntil: 6
          params:
            key: params
          priority: 0
          type: type
        - public: true
          validUntil: 6
          params:
            key: params
          priority: 0
          type: type
        options:
          deleteOutdatedRoutes: true
      properties:
        options:
          $ref: '#/components/schemas/RoutingOptions'
        routes:
          items:
            $ref: '#/components/schemas/Route'
          title: routes
          type: array
      required:
      - routes
      title: RoutingFile
      type: object
    RoutingFileRequest:
      example:
        organizationId: organizationId
        routing:
          routes:
          - public: true
            validUntil: 6
            params:
              key: params
            priority: 0
            type: type
          - public: true
            validUntil: 6
            params:
              key: params
            priority: 0
            type: type
          options:
            deleteOutdatedRoutes: true
      properties:
        organizationId:
          title: organizationId
          type: string
        routing:
          $ref: '#/components/schemas/RoutingFile'
      required:
      - routing
      title: RoutingFileRequest
      type: object
    RoutingOptions:
      example:
        deleteOutdatedRoutes: true
      properties:
        deleteOutdatedRoutes:
          title: deleteOutdatedRoutes
          type: boolean
      title: RoutingOptions
      type: object
    SendCustomMessage:
      example:
        data: x = y
        name: <event name>
      properties:
        data:
          additionalProperties:
            type: string
          description: Custom data in a map. You may use JSON content
          example: x = y
          title: data
          type: object
        name:
          description: The name of the message (organisation specific)
          example: <event name>
          maxLength: 255
          minLength: 1
          title: name
          type: string
      required:
      - data
      - name
      title: SendCustomMessage
      type: object
    ServiceCosts:
      example:
        listing:
          key: 0.8008281904610115
      properties:
        listing:
          additionalProperties:
            type: number
          title: listing
          type: object
      required:
      - listing
      title: ServiceCosts
      type: object
    SimpleMessageResponse:
      example:
        message: message
      properties:
        message:
          title: message
          type: string
      required:
      - message
      title: SimpleMessageResponse
      type: object
    TransferReceiveInfo:
      example:
        organizationId: de.id4i
      properties:
        organizationId:
          description: "Organization to take the ownership of the ID. If the sender\
            \ chose to keep the ownership, this organization becomes the holder. Otherwise,\
            \ it becomes the new owner."
          example: de.id4i
          title: organizationId
          type: string
      required:
      - organizationId
      title: TransferReceiveInfo
      type: object
    TransferSendInfo:
      example:
        recipientOrganizationIds:
        - de.acme
        - com.porsche
        - de.bluerain
        openForClaims: false
        ownerOrganizationId: de.bluerain
        holderOrganizationId: de.id4i
        keepOwnership: true
      properties:
        holderOrganizationId:
          description: The current holder of the object
          example: de.id4i
          readOnly: true
          title: holderOrganizationId
          type: string
        keepOwnership:
          description: Keep the public ownership while transferring the object
          example: true
          title: keepOwnership
          type: boolean
        openForClaims:
          description: Allow anyone who knows (or can scan) the ID4N to claim ownership
            of this object
          example: false
          title: openForClaims
          type: boolean
        ownerOrganizationId:
          description: The current publicly visible owner of the object
          example: de.bluerain
          readOnly: true
          title: ownerOrganizationId
          type: string
        recipientOrganizationIds:
          description: Allow only these organizations to obtain this object
          example:
          - de.acme
          - com.porsche
          - de.bluerain
          items:
            type: string
          title: recipientOrganizationIds
          type: array
      required:
      - keepOwnership
      - openForClaims
      - recipientOrganizationIds
      title: TransferSendInfo
      type: object
    UserPresentation:
      example:
        name: name
        id: id
      properties:
        id:
          title: id
          type: string
          xml:
            attribute: false
            name: id
            wrapped: false
        name:
          title: name
          type: string
      title: UserPresentation
      type: object
    UserRegistrationRequest:
      example:
        password: password
        email: email
        username: username
      properties:
        email:
          title: email
          type: string
        password:
          maxLength: 99
          minLength: 8
          title: password
          type: string
        username:
          pattern: "[a-zA-Z0-9_.-]{6,50}"
          title: username
          type: string
      required:
      - email
      - password
      - username
      title: UserRegistrationRequest
      type: object
    UserRegistrationResponse:
      example:
        id: 0
        message: message
        email: email
        username: username
      properties:
        email:
          title: email
          type: string
        id:
          format: int64
          title: id
          type: integer
        message:
          title: message
          type: string
        username:
          title: username
          type: string
      required:
      - id
      title: UserRegistrationResponse
      type: object
    UserRoles:
      example:
        roles:
        - roles
        - roles
        user:
          name: name
          id: id
      properties:
        roles:
          items:
            type: string
          title: roles
          type: array
        user:
          $ref: '#/components/schemas/UserPresentation'
      title: UserRoles
      type: object
    Visibility:
      example:
        public: true
        sharedOrganizationIds:
        - de.acme
        - com.porsche
        - de.bluerain
      properties:
        public:
          description: Document is publicly readable (if ID4N is owned by the same
            organization)
          example: true
          title: public
          type: boolean
        sharedOrganizationIds:
          description: Document is readable by these organizations (independend of
            ID4N ownership)
          example:
          - de.acme
          - com.porsche
          - de.bluerain
          items:
            type: string
          title: sharedOrganizationIds
          type: array
      title: Visibility
      type: object
    VisibilityUpdate:
      example:
        sharedWithOrganizationIds:
        - de.acme
        - com.porsche
        - de.bluerain
        public: true
      properties:
        public:
          description: Document is publicly readable (if ID4N is owned by the same
            organization)
          example: true
          title: public
          type: boolean
        sharedWithOrganizationIds:
          description: Document is readable by these organizations (independend of
            ID4N ownership)
          example:
          - de.acme
          - com.porsche
          - de.bluerain
          items:
            type: string
          title: sharedWithOrganizationIds
          type: array
      title: VisibilityUpdate
      type: object
    WhoIsResponse:
      example:
        aliases:
          key: aliases
        organizationAddress:
          firstname: Max
          city: MyCity
          countryCode: DE
          street: Examplestreet 1
          companyName: ACME Inc.
          postCode: "12345"
          telephone: +49 8088 12345
          countryName: Germany
          lastname: Muster
        organization:
          name: ACME Inc.
          namespace: de.acme
          id: 100
          logoURL: /api/v1/public/images/abcdef
      properties:
        aliases:
          additionalProperties:
            type: string
          title: aliases
          type: object
        organization:
          $ref: '#/components/schemas/Organization'
        organizationAddress:
          $ref: '#/components/schemas/OrganizationAddress'
      title: WhoIsResponse
      type: object
    putDocument_request:
      properties:
        content:
          description: content
          format: binary
          type: string
      required:
      - content
      type: object
    setOrganizationLogo_request:
      properties:
        file:
          description: An image containing the new logo.
          format: binary
          type: string
      required:
      - file
      type: object
  securitySchemes:
    Authorization:
      in: header
      name: Authorization
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_Authorization
