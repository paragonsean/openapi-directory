/**
 * ID4i API
 * ID4i HTTP API
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: info@bluerain.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListOfId4nProperties.h
 *
 * A list of id4n properties
 */

#ifndef OAIListOfId4nProperties_H
#define OAIListOfId4nProperties_H

#include <QJsonObject>

#include "OAIId4nProperties.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIId4nProperties;

class OAIListOfId4nProperties : public OAIObject {
public:
    OAIListOfId4nProperties();
    OAIListOfId4nProperties(QString json);
    ~OAIListOfId4nProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIId4nProperties> getList() const;
    void setList(const QList<OAIId4nProperties> &list);
    bool is_list_Set() const;
    bool is_list_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIId4nProperties> m_list;
    bool m_list_isSet;
    bool m_list_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListOfId4nProperties)

#endif // OAIListOfId4nProperties_H
