/**
 * ID4i API
 * ID4i HTTP API
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: info@bluerain.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApiKeyCreationRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApiKeyCreationRequest::OAIApiKeyCreationRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApiKeyCreationRequest::OAIApiKeyCreationRequest() {
    this->initializeModel();
}

OAIApiKeyCreationRequest::~OAIApiKeyCreationRequest() {}

void OAIApiKeyCreationRequest::initializeModel() {

    m_label_isSet = false;
    m_label_isValid = false;

    m_organization_id_isSet = false;
    m_organization_id_isValid = false;

    m_secret_isSet = false;
    m_secret_isValid = false;
}

void OAIApiKeyCreationRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApiKeyCreationRequest::fromJsonObject(QJsonObject json) {

    m_label_isValid = ::OpenAPI::fromJsonValue(m_label, json[QString("label")]);
    m_label_isSet = !json[QString("label")].isNull() && m_label_isValid;

    m_organization_id_isValid = ::OpenAPI::fromJsonValue(m_organization_id, json[QString("organizationId")]);
    m_organization_id_isSet = !json[QString("organizationId")].isNull() && m_organization_id_isValid;

    m_secret_isValid = ::OpenAPI::fromJsonValue(m_secret, json[QString("secret")]);
    m_secret_isSet = !json[QString("secret")].isNull() && m_secret_isValid;
}

QString OAIApiKeyCreationRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApiKeyCreationRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_label_isSet) {
        obj.insert(QString("label"), ::OpenAPI::toJsonValue(m_label));
    }
    if (m_organization_id_isSet) {
        obj.insert(QString("organizationId"), ::OpenAPI::toJsonValue(m_organization_id));
    }
    if (m_secret_isSet) {
        obj.insert(QString("secret"), ::OpenAPI::toJsonValue(m_secret));
    }
    return obj;
}

QString OAIApiKeyCreationRequest::getLabel() const {
    return m_label;
}
void OAIApiKeyCreationRequest::setLabel(const QString &label) {
    m_label = label;
    m_label_isSet = true;
}

bool OAIApiKeyCreationRequest::is_label_Set() const{
    return m_label_isSet;
}

bool OAIApiKeyCreationRequest::is_label_Valid() const{
    return m_label_isValid;
}

QString OAIApiKeyCreationRequest::getOrganizationId() const {
    return m_organization_id;
}
void OAIApiKeyCreationRequest::setOrganizationId(const QString &organization_id) {
    m_organization_id = organization_id;
    m_organization_id_isSet = true;
}

bool OAIApiKeyCreationRequest::is_organization_id_Set() const{
    return m_organization_id_isSet;
}

bool OAIApiKeyCreationRequest::is_organization_id_Valid() const{
    return m_organization_id_isValid;
}

QString OAIApiKeyCreationRequest::getSecret() const {
    return m_secret;
}
void OAIApiKeyCreationRequest::setSecret(const QString &secret) {
    m_secret = secret;
    m_secret_isSet = true;
}

bool OAIApiKeyCreationRequest::is_secret_Set() const{
    return m_secret_isSet;
}

bool OAIApiKeyCreationRequest::is_secret_Valid() const{
    return m_secret_isValid;
}

bool OAIApiKeyCreationRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_organization_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_secret_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApiKeyCreationRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_label_isValid && m_organization_id_isValid && m_secret_isValid && true;
}

} // namespace OpenAPI
