/**
 * ID4i API
 * ID4i HTTP API
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: info@bluerain.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHistoryItem.h
 *
 * GUID history item
 */

#ifndef OAIHistoryItem_H
#define OAIHistoryItem_H

#include <QJsonObject>

#include "OAIVisibility.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVisibility;

class OAIHistoryItem : public OAIObject {
public:
    OAIHistoryItem();
    OAIHistoryItem(QString json);
    ~OAIHistoryItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QString> getAdditionalProperties() const;
    void setAdditionalProperties(const QMap<QString, QString> &additional_properties);
    bool is_additional_properties_Set() const;
    bool is_additional_properties_Valid() const;

    QString getOrganizationId() const;
    void setOrganizationId(const QString &organization_id);
    bool is_organization_id_Set() const;
    bool is_organization_id_Valid() const;

    QString getOwnerOrganizationId() const;
    void setOwnerOrganizationId(const QString &owner_organization_id);
    bool is_owner_organization_id_Set() const;
    bool is_owner_organization_id_Valid() const;

    qint32 getSequenceId() const;
    void setSequenceId(const qint32 &sequence_id);
    bool is_sequence_id_Set() const;
    bool is_sequence_id_Valid() const;

    qint64 getTimestamp() const;
    void setTimestamp(const qint64 &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIVisibility getVisibility() const;
    void setVisibility(const OAIVisibility &visibility);
    bool is_visibility_Set() const;
    bool is_visibility_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QString> m_additional_properties;
    bool m_additional_properties_isSet;
    bool m_additional_properties_isValid;

    QString m_organization_id;
    bool m_organization_id_isSet;
    bool m_organization_id_isValid;

    QString m_owner_organization_id;
    bool m_owner_organization_id_isSet;
    bool m_owner_organization_id_isValid;

    qint32 m_sequence_id;
    bool m_sequence_id_isSet;
    bool m_sequence_id_isValid;

    qint64 m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIVisibility m_visibility;
    bool m_visibility_isSet;
    bool m_visibility_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHistoryItem)

#endif // OAIHistoryItem_H
