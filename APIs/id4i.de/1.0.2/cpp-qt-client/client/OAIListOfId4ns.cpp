/**
 * ID4i API
 * ID4i HTTP API
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: info@bluerain.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListOfId4ns.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListOfId4ns::OAIListOfId4ns(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListOfId4ns::OAIListOfId4ns() {
    this->initializeModel();
}

OAIListOfId4ns::~OAIListOfId4ns() {}

void OAIListOfId4ns::initializeModel() {

    m_id4ns_isSet = false;
    m_id4ns_isValid = false;
}

void OAIListOfId4ns::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListOfId4ns::fromJsonObject(QJsonObject json) {

    m_id4ns_isValid = ::OpenAPI::fromJsonValue(m_id4ns, json[QString("id4ns")]);
    m_id4ns_isSet = !json[QString("id4ns")].isNull() && m_id4ns_isValid;
}

QString OAIListOfId4ns::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListOfId4ns::asJsonObject() const {
    QJsonObject obj;
    if (m_id4ns.size() > 0) {
        obj.insert(QString("id4ns"), ::OpenAPI::toJsonValue(m_id4ns));
    }
    return obj;
}

QList<QString> OAIListOfId4ns::getId4ns() const {
    return m_id4ns;
}
void OAIListOfId4ns::setId4ns(const QList<QString> &id4ns) {
    m_id4ns = id4ns;
    m_id4ns_isSet = true;
}

bool OAIListOfId4ns::is_id4ns_Set() const{
    return m_id4ns_isSet;
}

bool OAIListOfId4ns::is_id4ns_Valid() const{
    return m_id4ns_isValid;
}

bool OAIListOfId4ns::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id4ns.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListOfId4ns::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
