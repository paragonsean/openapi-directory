/**
 * ID4i API
 * ID4i HTTP API
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: info@bluerain.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateCollectionRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateCollectionRequest::OAICreateCollectionRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateCollectionRequest::OAICreateCollectionRequest() {
    this->initializeModel();
}

OAICreateCollectionRequest::~OAICreateCollectionRequest() {}

void OAICreateCollectionRequest::initializeModel() {

    m_label_isSet = false;
    m_label_isValid = false;

    m_length_isSet = false;
    m_length_isValid = false;

    m_organization_id_isSet = false;
    m_organization_id_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAICreateCollectionRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateCollectionRequest::fromJsonObject(QJsonObject json) {

    m_label_isValid = ::OpenAPI::fromJsonValue(m_label, json[QString("label")]);
    m_label_isSet = !json[QString("label")].isNull() && m_label_isValid;

    m_length_isValid = ::OpenAPI::fromJsonValue(m_length, json[QString("length")]);
    m_length_isSet = !json[QString("length")].isNull() && m_length_isValid;

    m_organization_id_isValid = ::OpenAPI::fromJsonValue(m_organization_id, json[QString("organizationId")]);
    m_organization_id_isSet = !json[QString("organizationId")].isNull() && m_organization_id_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAICreateCollectionRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateCollectionRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_label_isSet) {
        obj.insert(QString("label"), ::OpenAPI::toJsonValue(m_label));
    }
    if (m_length_isSet) {
        obj.insert(QString("length"), ::OpenAPI::toJsonValue(m_length));
    }
    if (m_organization_id_isSet) {
        obj.insert(QString("organizationId"), ::OpenAPI::toJsonValue(m_organization_id));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAICreateCollectionRequest::getLabel() const {
    return m_label;
}
void OAICreateCollectionRequest::setLabel(const QString &label) {
    m_label = label;
    m_label_isSet = true;
}

bool OAICreateCollectionRequest::is_label_Set() const{
    return m_label_isSet;
}

bool OAICreateCollectionRequest::is_label_Valid() const{
    return m_label_isValid;
}

qint32 OAICreateCollectionRequest::getLength() const {
    return m_length;
}
void OAICreateCollectionRequest::setLength(const qint32 &length) {
    m_length = length;
    m_length_isSet = true;
}

bool OAICreateCollectionRequest::is_length_Set() const{
    return m_length_isSet;
}

bool OAICreateCollectionRequest::is_length_Valid() const{
    return m_length_isValid;
}

QString OAICreateCollectionRequest::getOrganizationId() const {
    return m_organization_id;
}
void OAICreateCollectionRequest::setOrganizationId(const QString &organization_id) {
    m_organization_id = organization_id;
    m_organization_id_isSet = true;
}

bool OAICreateCollectionRequest::is_organization_id_Set() const{
    return m_organization_id_isSet;
}

bool OAICreateCollectionRequest::is_organization_id_Valid() const{
    return m_organization_id_isValid;
}

QString OAICreateCollectionRequest::getType() const {
    return m_type;
}
void OAICreateCollectionRequest::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAICreateCollectionRequest::is_type_Set() const{
    return m_type_isSet;
}

bool OAICreateCollectionRequest::is_type_Valid() const{
    return m_type_isValid;
}

bool OAICreateCollectionRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_length_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_organization_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateCollectionRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_length_isValid && m_organization_id_isValid && m_type_isValid && true;
}

} // namespace OpenAPI
