/**
 * ID4i API
 * ID4i HTTP API
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: info@bluerain.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBillingPosition.h
 *
 * 
 */

#ifndef OAIBillingPosition_H
#define OAIBillingPosition_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBillingPosition : public OAIObject {
public:
    OAIBillingPosition();
    OAIBillingPosition(QString json);
    ~OAIBillingPosition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getAmount() const;
    void setAmount(const qint64 &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    double getCount() const;
    void setCount(const double &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getService() const;
    void setService(const QString &service);
    bool is_service_Set() const;
    bool is_service_Valid() const;

    double getSinglePrice() const;
    void setSinglePrice(const double &single_price);
    bool is_single_price_Set() const;
    bool is_single_price_Valid() const;

    double getSum() const;
    void setSum(const double &sum);
    bool is_sum_Set() const;
    bool is_sum_Valid() const;

    QString getUnit() const;
    void setUnit(const QString &unit);
    bool is_unit_Set() const;
    bool is_unit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    double m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_service;
    bool m_service_isSet;
    bool m_service_isValid;

    double m_single_price;
    bool m_single_price_isSet;
    bool m_single_price_isValid;

    double m_sum;
    bool m_sum_isSet;
    bool m_sum_isValid;

    QString m_unit;
    bool m_unit_isSet;
    bool m_unit_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBillingPosition)

#endif // OAIBillingPosition_H
