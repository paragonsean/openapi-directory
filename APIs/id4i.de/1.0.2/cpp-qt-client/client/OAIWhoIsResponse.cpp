/**
 * ID4i API
 * ID4i HTTP API
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: info@bluerain.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWhoIsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWhoIsResponse::OAIWhoIsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWhoIsResponse::OAIWhoIsResponse() {
    this->initializeModel();
}

OAIWhoIsResponse::~OAIWhoIsResponse() {}

void OAIWhoIsResponse::initializeModel() {

    m_aliases_isSet = false;
    m_aliases_isValid = false;

    m_organization_isSet = false;
    m_organization_isValid = false;

    m_organization_address_isSet = false;
    m_organization_address_isValid = false;
}

void OAIWhoIsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWhoIsResponse::fromJsonObject(QJsonObject json) {

    m_aliases_isValid = ::OpenAPI::fromJsonValue(m_aliases, json[QString("aliases")]);
    m_aliases_isSet = !json[QString("aliases")].isNull() && m_aliases_isValid;

    m_organization_isValid = ::OpenAPI::fromJsonValue(m_organization, json[QString("organization")]);
    m_organization_isSet = !json[QString("organization")].isNull() && m_organization_isValid;

    m_organization_address_isValid = ::OpenAPI::fromJsonValue(m_organization_address, json[QString("organizationAddress")]);
    m_organization_address_isSet = !json[QString("organizationAddress")].isNull() && m_organization_address_isValid;
}

QString OAIWhoIsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWhoIsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_aliases.size() > 0) {
        obj.insert(QString("aliases"), ::OpenAPI::toJsonValue(m_aliases));
    }
    if (m_organization.isSet()) {
        obj.insert(QString("organization"), ::OpenAPI::toJsonValue(m_organization));
    }
    if (m_organization_address.isSet()) {
        obj.insert(QString("organizationAddress"), ::OpenAPI::toJsonValue(m_organization_address));
    }
    return obj;
}

QMap<QString, QString> OAIWhoIsResponse::getAliases() const {
    return m_aliases;
}
void OAIWhoIsResponse::setAliases(const QMap<QString, QString> &aliases) {
    m_aliases = aliases;
    m_aliases_isSet = true;
}

bool OAIWhoIsResponse::is_aliases_Set() const{
    return m_aliases_isSet;
}

bool OAIWhoIsResponse::is_aliases_Valid() const{
    return m_aliases_isValid;
}

OAIOrganization OAIWhoIsResponse::getOrganization() const {
    return m_organization;
}
void OAIWhoIsResponse::setOrganization(const OAIOrganization &organization) {
    m_organization = organization;
    m_organization_isSet = true;
}

bool OAIWhoIsResponse::is_organization_Set() const{
    return m_organization_isSet;
}

bool OAIWhoIsResponse::is_organization_Valid() const{
    return m_organization_isValid;
}

OAIOrganizationAddress OAIWhoIsResponse::getOrganizationAddress() const {
    return m_organization_address;
}
void OAIWhoIsResponse::setOrganizationAddress(const OAIOrganizationAddress &organization_address) {
    m_organization_address = organization_address;
    m_organization_address_isSet = true;
}

bool OAIWhoIsResponse::is_organization_address_Set() const{
    return m_organization_address_isSet;
}

bool OAIWhoIsResponse::is_organization_address_Valid() const{
    return m_organization_address_isValid;
}

bool OAIWhoIsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aliases.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_organization.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_organization_address.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWhoIsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
