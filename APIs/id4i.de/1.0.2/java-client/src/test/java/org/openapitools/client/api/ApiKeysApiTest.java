/*
 * ID4i API
 * ID4i HTTP API
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: info@bluerain.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AddApiKeyPrivilegeRequest;
import org.openapitools.client.model.ApiError;
import org.openapitools.client.model.ApiKeyChangeRequest;
import org.openapitools.client.model.ApiKeyCreationRequest;
import org.openapitools.client.model.ApiKeyPresentation;
import org.openapitools.client.model.ListOfId4ns;
import org.openapitools.client.model.PaginatedResponseOfApiKeyPresentation;
import org.openapitools.client.model.PaginatedResponseOfApiKeyPrivilege;
import org.openapitools.client.model.PaginatedResponseOfApiKeyPrivilegeInfo;
import org.openapitools.client.model.PaginatedResponseOfId4nPresentation;
import org.openapitools.client.model.RemoveApiKeyPrivilegeRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ApiKeysApi
 */
@Disabled
public class ApiKeysApiTest {

    private final ApiKeysApi api = new ApiKeysApi();

    /**
     * Add privilege
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addApiKeyPrivilegeTest() throws ApiException {
        String key = null;
        AddApiKeyPrivilegeRequest addApiKeyPrivilegeRequest = null;
        api.addApiKeyPrivilege(key, addApiKeyPrivilegeRequest);
        // TODO: test validations
    }

    /**
     * Add ID4ns of a privilege
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addApiKeyPrivilegeForId4nsTest() throws ApiException {
        String key = null;
        String privilege = null;
        ListOfId4ns listOfId4ns = null;
        api.addApiKeyPrivilegeForId4ns(key, privilege, listOfId4ns);
        // TODO: test validations
    }

    /**
     * Create API key
     *
     * Creation of a new API key.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewApiKeyTest() throws ApiException {
        ApiKeyCreationRequest apiKeyCreationRequest = null;
        ApiKeyPresentation response = api.createNewApiKey(apiKeyCreationRequest);
        // TODO: test validations
    }

    /**
     * Delete API key
     *
     * Deletion of an API key.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteApiKeyTest() throws ApiException {
        String key = null;
        api.deleteApiKey(key);
        // TODO: test validations
    }

    /**
     * Show API key
     *
     * Showing the details of an API key.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getApiKeyTest() throws ApiException {
        String key = null;
        ApiKeyPresentation response = api.getApiKey(key);
        // TODO: test validations
    }

    /**
     * List all privileges
     *
     * Listing all possible API key privileges.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAllApiKeyPrivilegesTest() throws ApiException {
        Boolean id4nConcerning = null;
        Integer offset = null;
        Integer limit = null;
        PaginatedResponseOfApiKeyPrivilegeInfo response = api.listAllApiKeyPrivileges(id4nConcerning, offset, limit);
        // TODO: test validations
    }

    /**
     * Find API key by organization
     *
     * Finding all API key assigned to the specified organization in a paginated manner.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAllApiKeysOfOrganizationTest() throws ApiException {
        String organizationId = null;
        Integer offset = null;
        Integer limit = null;
        PaginatedResponseOfApiKeyPresentation response = api.listAllApiKeysOfOrganization(organizationId, offset, limit);
        // TODO: test validations
    }

    /**
     * List privileges
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listApiKeyPrivilegesTest() throws ApiException {
        String key = null;
        Integer offset = null;
        Integer limit = null;
        PaginatedResponseOfApiKeyPrivilege response = api.listApiKeyPrivileges(key, offset, limit);
        // TODO: test validations
    }

    /**
     * ID4ns of a privilege
     *
     * Listing ID4ns of a id4n concerning privilege
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listId4nsTest() throws ApiException {
        String key = null;
        String privilege = null;
        Integer offset = null;
        Integer limit = null;
        PaginatedResponseOfId4nPresentation response = api.listId4ns(key, privilege, offset, limit);
        // TODO: test validations
    }

    /**
     * Remove privilege
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeApiKeyPrivilegeTest() throws ApiException {
        String key = null;
        RemoveApiKeyPrivilegeRequest removeApiKeyPrivilegeRequest = null;
        api.removeApiKeyPrivilege(key, removeApiKeyPrivilegeRequest);
        // TODO: test validations
    }

    /**
     * Remove id4ns of a privilege
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeApiKeyPrivilegeForId4nsTest() throws ApiException {
        String key = null;
        String privilege = null;
        ListOfId4ns listOfId4ns = null;
        api.removeApiKeyPrivilegeForId4ns(key, privilege, listOfId4ns);
        // TODO: test validations
    }

    /**
     * Update API keys
     *
     * API keys can be updated with new labels, and be activated and deactivated. The secret or UUID cannot be changed.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateApiKeyTest() throws ApiException {
        String key = null;
        ApiKeyChangeRequest apiKeyChangeRequest = null;
        api.updateApiKey(key, apiKeyChangeRequest);
        // TODO: test validations
    }

}
