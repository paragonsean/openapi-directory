/*
 * ID4i API
 * ID4i HTTP API
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: info@bluerain.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiError;
import org.openapitools.client.model.TransferReceiveInfo;
import org.openapitools.client.model.TransferSendInfo;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransferApi
 */
@Disabled
public class TransferApiTest {

    private final TransferApi api = new TransferApi();

    /**
     * Show transfer preparation information
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSendInfoTest() throws ApiException {
        String id4n = null;
        TransferSendInfo response = api.getSendInfo(id4n);
        // TODO: test validations
    }

    /**
     * Prepare an object for transfer
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void prepareTest() throws ApiException {
        String id4n = null;
        TransferSendInfo transferSendInfo = null;
        Object response = api.prepare(id4n, transferSendInfo);
        // TODO: test validations
    }

    /**
     * Transfer a GUID or collection, obtaining it (i.e. becoming the holder) and if allowed also taking ownership
     *
     * Taking ownership can be forbidden by a previous owner. See methods prepare and getInfo
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void receiveTest() throws ApiException {
        String id4n = null;
        TransferReceiveInfo transferReceiveInfo = null;
        api.receive(id4n, transferReceiveInfo);
        // TODO: test validations
    }

}
