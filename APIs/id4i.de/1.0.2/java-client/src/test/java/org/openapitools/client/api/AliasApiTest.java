/*
 * ID4i API
 * ID4i HTTP API
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: info@bluerain.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiError;
import org.openapitools.client.model.GuidAlias;
import org.openapitools.client.model.PaginatedResponseOfGuid;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AliasApi
 */
@Disabled
public class AliasApiTest {

    private final AliasApi api = new AliasApi();

    /**
     * Add alias for GUID or Collection
     *
     * Adds or replaces aliases for single ID4ns (alias type item and mapp) or groups of ID4ns (alias types gtin, ean and article)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addGuidAliasTest() throws ApiException {
        String id4n = null;
        String aliasType = null;
        GuidAlias guidAlias = null;
        api.addGuidAlias(id4n, aliasType, guidAlias);
        // TODO: test validations
    }

    /**
     * List all supported alias types
     *
     * Retrieve this list to find out all alias types to use with alias search and change operations
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGuidAliasTypesTest() throws ApiException {
        List<String> response = api.getGuidAliasTypes();
        // TODO: test validations
    }

    /**
     * Get all aliases for the given GUID or Collection.
     *
     * Looks up the alias for each alias type (group and single) and returns a map of all aliases found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGuidAliasesTest() throws ApiException {
        String id4n = null;
        Map<String, String> response = api.getGuidAliases(id4n);
        // TODO: test validations
    }

    /**
     * Remove aliases from GUID or Collection
     *
     * Remove the alias of the given type
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeGuidAliasTest() throws ApiException {
        String id4n = null;
        String aliasType = null;
        api.removeGuidAlias(id4n, aliasType);
        // TODO: test validations
    }

    /**
     * Search for GUIDs by alias
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchByAliasTest() throws ApiException {
        String alias = null;
        String aliasType = null;
        Integer offset = null;
        Integer limit = null;
        PaginatedResponseOfGuid response = api.searchByAlias(alias, aliasType, offset, limit);
        // TODO: test validations
    }

}
