/*
 * Subscriptions API (v2 - DEPRECATED)
 * VTEX Subscriptions REST API Documentation  This documentation describes the available REST APIs for VTEX Subscription System.  With Subscriptions you can set up regularly scheduled deliveries.  All requests need authorization (VTEX Id authentication token or VTEX Appkey and Apptoken headers)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Settings
 */
public class SettingsTest {
    private final Settings model = new Settings();

    /**
     * Model tests for Settings
     */
    @Test
    public void testSettings() {
        // TODO: test Settings
    }

    /**
     * Test the property 'defaultSla'
     */
    @Test
    public void defaultSlaTest() {
        // TODO: test defaultSla
    }

    /**
     * Test the property 'deliveryChannels'
     */
    @Test
    public void deliveryChannelsTest() {
        // TODO: test deliveryChannels
    }

    /**
     * Test the property 'executionHourInUtc'
     */
    @Test
    public void executionHourInUtcTest() {
        // TODO: test executionHourInUtc
    }

    /**
     * Test the property 'isMultipleInstallmentsEnabledOnCreation'
     */
    @Test
    public void isMultipleInstallmentsEnabledOnCreationTest() {
        // TODO: test isMultipleInstallmentsEnabledOnCreation
    }

    /**
     * Test the property 'isMultipleInstallmentsEnabledOnUpdate'
     */
    @Test
    public void isMultipleInstallmentsEnabledOnUpdateTest() {
        // TODO: test isMultipleInstallmentsEnabledOnUpdate
    }

    /**
     * Test the property 'isUsingV3'
     */
    @Test
    public void isUsingV3Test() {
        // TODO: test isUsingV3
    }

    /**
     * Test the property 'manualPriceAllowed'
     */
    @Test
    public void manualPriceAllowedTest() {
        // TODO: test manualPriceAllowed
    }

    /**
     * Test the property 'onMigrationProcess'
     */
    @Test
    public void onMigrationProcessTest() {
        // TODO: test onMigrationProcess
    }

    /**
     * Test the property 'orderCustomDataAppId'
     */
    @Test
    public void orderCustomDataAppIdTest() {
        // TODO: test orderCustomDataAppId
    }

    /**
     * Test the property 'postponeExpiration'
     */
    @Test
    public void postponeExpirationTest() {
        // TODO: test postponeExpiration
    }

    /**
     * Test the property 'randomIdGeneration'
     */
    @Test
    public void randomIdGenerationTest() {
        // TODO: test randomIdGeneration
    }

    /**
     * Test the property 'slaOption'
     */
    @Test
    public void slaOptionTest() {
        // TODO: test slaOption
    }

    /**
     * Test the property 'useItemPriceFromOriginalOrder'
     */
    @Test
    public void useItemPriceFromOriginalOrderTest() {
        // TODO: test useItemPriceFromOriginalOrder
    }

    /**
     * Test the property 'workflowVersion'
     */
    @Test
    public void workflowVersionTest() {
        // TODO: test workflowVersion
    }

}
