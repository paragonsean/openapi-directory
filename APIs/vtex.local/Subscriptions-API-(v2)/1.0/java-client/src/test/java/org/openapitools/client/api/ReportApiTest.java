/*
 * Subscriptions API (v2 - DEPRECATED)
 * VTEX Subscriptions REST API Documentation  This documentation describes the available REST APIs for VTEX Subscription System.  With Subscriptions you can set up regularly scheduled deliveries.  All requests need authorization (VTEX Id authentication token or VTEX Appkey and Apptoken headers)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReportApi
 */
@Disabled
public class ReportApiTest {

    private final ReportApi api = new ReportApi();

    /**
     * Get report status by ID
     *
     * Retrieves the Subscription&#39;s report status, filtering by its reportId.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getreportstatusbyIDTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String reportId = null;
        api.getreportstatusbyID(contentType, accept, reportId);
        // TODO: test validations
    }

    /**
     * Retrieve Subscription report by Status
     *
     * Retrieves Subscriptions&#39; reports, filtering by status. The report will be sent by email, to the address inserted in the API&#39;s path.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void requestreportbyStatusTest() throws ApiException {
        String requesterEmail = null;
        Integer status = null;
        String contentType = null;
        String accept = null;
        api.requestreportbyStatus(requesterEmail, status, contentType, accept);
        // TODO: test validations
    }

    /**
     * Retrieve Subscription report by date
     *
     * Retrieves a report with the subscriptions created at the date interval requested
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void requestreportbydateTest() throws ApiException {
        String requesterEmail = null;
        Integer beginDate = null;
        Integer endDate = null;
        String contentType = null;
        String accept = null;
        api.requestreportbydate(requesterEmail, beginDate, endDate, contentType, accept);
        // TODO: test validations
    }

    /**
     * Retrieve Subscription report by order date
     *
     * Retrieves a report regarding the Subscriptions created during the date interval of orders.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void requestreportbyorderdateTest() throws ApiException {
        String requesterEmail = null;
        Integer beginDate = null;
        Integer endDate = null;
        String contentType = null;
        String accept = null;
        api.requestreportbyorderdate(requesterEmail, beginDate, endDate, contentType, accept);
        // TODO: test validations
    }

    /**
     * Retrieve Subscription report by schedule
     *
     * Retrieves a report regarding the Subscriptions scheduled to execute at the date interval requested
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void requestreportbyscheduleTest() throws ApiException {
        String requesterEmail = null;
        Integer beginDate = null;
        Integer endDate = null;
        String contentType = null;
        String accept = null;
        api.requestreportbyschedule(requesterEmail, beginDate, endDate, contentType, accept);
        // TODO: test validations
    }

    /**
     * Request report by update
     *
     * Retrieves a report regarding Subscriptions updated in the date interval chosen. The report will be sent by email, to the address inserted in the API&#39;s path.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void requestreportbyupdateTest() throws ApiException {
        String requesterEmail = null;
        Integer beginDate = null;
        Integer endDate = null;
        String contentType = null;
        String accept = null;
        api.requestreportbyupdate(requesterEmail, beginDate, endDate, contentType, accept);
        // TODO: test validations
    }

}
