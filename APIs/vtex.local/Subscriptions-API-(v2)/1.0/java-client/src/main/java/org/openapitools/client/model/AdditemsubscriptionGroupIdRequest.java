/*
 * Subscriptions API (v2 - DEPRECATED)
 * VTEX Subscriptions REST API Documentation  This documentation describes the available REST APIs for VTEX Subscription System.  With Subscriptions you can set up regularly scheduled deliveries.  All requests need authorization (VTEX Id authentication token or VTEX Appkey and Apptoken headers)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.Sku;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AdditemsubscriptionGroupIdRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:56:11.020699-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AdditemsubscriptionGroupIdRequest {
  public static final String SERIALIZED_NAME_ENDPOINT = "endpoint";
  @SerializedName(SERIALIZED_NAME_ENDPOINT)
  private String endpoint;

  public static final String SERIALIZED_NAME_PRICE_AT_SUBSCRIPTION_DATE = "priceAtSubscriptionDate";
  @SerializedName(SERIALIZED_NAME_PRICE_AT_SUBSCRIPTION_DATE)
  private Integer priceAtSubscriptionDate;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Integer quantity;

  public static final String SERIALIZED_NAME_SELLING_PRICE = "sellingPrice";
  @SerializedName(SERIALIZED_NAME_SELLING_PRICE)
  private Integer sellingPrice;

  public static final String SERIALIZED_NAME_SKU = "sku";
  @SerializedName(SERIALIZED_NAME_SKU)
  private Sku sku;

  public AdditemsubscriptionGroupIdRequest() {
  }

  public AdditemsubscriptionGroupIdRequest endpoint(String endpoint) {
    this.endpoint = endpoint;
    return this;
  }

  /**
   * Get endpoint
   * @return endpoint
   */
  @javax.annotation.Nonnull
  public String getEndpoint() {
    return endpoint;
  }

  public void setEndpoint(String endpoint) {
    this.endpoint = endpoint;
  }


  public AdditemsubscriptionGroupIdRequest priceAtSubscriptionDate(Integer priceAtSubscriptionDate) {
    this.priceAtSubscriptionDate = priceAtSubscriptionDate;
    return this;
  }

  /**
   * Get priceAtSubscriptionDate
   * @return priceAtSubscriptionDate
   */
  @javax.annotation.Nonnull
  public Integer getPriceAtSubscriptionDate() {
    return priceAtSubscriptionDate;
  }

  public void setPriceAtSubscriptionDate(Integer priceAtSubscriptionDate) {
    this.priceAtSubscriptionDate = priceAtSubscriptionDate;
  }


  public AdditemsubscriptionGroupIdRequest quantity(Integer quantity) {
    this.quantity = quantity;
    return this;
  }

  /**
   * Get quantity
   * @return quantity
   */
  @javax.annotation.Nonnull
  public Integer getQuantity() {
    return quantity;
  }

  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }


  public AdditemsubscriptionGroupIdRequest sellingPrice(Integer sellingPrice) {
    this.sellingPrice = sellingPrice;
    return this;
  }

  /**
   * Get sellingPrice
   * @return sellingPrice
   */
  @javax.annotation.Nonnull
  public Integer getSellingPrice() {
    return sellingPrice;
  }

  public void setSellingPrice(Integer sellingPrice) {
    this.sellingPrice = sellingPrice;
  }


  public AdditemsubscriptionGroupIdRequest sku(Sku sku) {
    this.sku = sku;
    return this;
  }

  /**
   * Get sku
   * @return sku
   */
  @javax.annotation.Nonnull
  public Sku getSku() {
    return sku;
  }

  public void setSku(Sku sku) {
    this.sku = sku;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdditemsubscriptionGroupIdRequest additemsubscriptionGroupIdRequest = (AdditemsubscriptionGroupIdRequest) o;
    return Objects.equals(this.endpoint, additemsubscriptionGroupIdRequest.endpoint) &&
        Objects.equals(this.priceAtSubscriptionDate, additemsubscriptionGroupIdRequest.priceAtSubscriptionDate) &&
        Objects.equals(this.quantity, additemsubscriptionGroupIdRequest.quantity) &&
        Objects.equals(this.sellingPrice, additemsubscriptionGroupIdRequest.sellingPrice) &&
        Objects.equals(this.sku, additemsubscriptionGroupIdRequest.sku);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endpoint, priceAtSubscriptionDate, quantity, sellingPrice, sku);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdditemsubscriptionGroupIdRequest {\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    priceAtSubscriptionDate: ").append(toIndentedString(priceAtSubscriptionDate)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    sellingPrice: ").append(toIndentedString(sellingPrice)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("endpoint");
    openapiFields.add("priceAtSubscriptionDate");
    openapiFields.add("quantity");
    openapiFields.add("sellingPrice");
    openapiFields.add("sku");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("endpoint");
    openapiRequiredFields.add("priceAtSubscriptionDate");
    openapiRequiredFields.add("quantity");
    openapiRequiredFields.add("sellingPrice");
    openapiRequiredFields.add("sku");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AdditemsubscriptionGroupIdRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AdditemsubscriptionGroupIdRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AdditemsubscriptionGroupIdRequest is not found in the empty JSON string", AdditemsubscriptionGroupIdRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AdditemsubscriptionGroupIdRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AdditemsubscriptionGroupIdRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AdditemsubscriptionGroupIdRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("endpoint").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endpoint` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endpoint").toString()));
      }
      // validate the required field `sku`
      Sku.validateJsonElement(jsonObj.get("sku"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AdditemsubscriptionGroupIdRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AdditemsubscriptionGroupIdRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AdditemsubscriptionGroupIdRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AdditemsubscriptionGroupIdRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<AdditemsubscriptionGroupIdRequest>() {
           @Override
           public void write(JsonWriter out, AdditemsubscriptionGroupIdRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AdditemsubscriptionGroupIdRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AdditemsubscriptionGroupIdRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AdditemsubscriptionGroupIdRequest
   * @throws IOException if the JSON string is invalid with respect to AdditemsubscriptionGroupIdRequest
   */
  public static AdditemsubscriptionGroupIdRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AdditemsubscriptionGroupIdRequest.class);
  }

  /**
   * Convert an instance of AdditemsubscriptionGroupIdRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

