/**
 * Subscriptions API (v2 - DEPRECATED)
 * VTEX Subscriptions REST API Documentation  This documentation describes the available REST APIs for VTEX Subscription System.  With Subscriptions you can set up regularly scheduled deliveries.  All requests need authorization (VTEX Id authentication token or VTEX Appkey and Apptoken headers)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateSubscriptionsbySubscriptionIdRequest.h
 *
 * 
 */

#ifndef OAIUpdateSubscriptionsbySubscriptionIdRequest_H
#define OAIUpdateSubscriptionsbySubscriptionIdRequest_H

#include <QJsonObject>

#include "OAIItem.h"
#include "OAIMetadatum.h"
#include "OAIPlan.h"
#include "OAIPurchaseSettings.h"
#include "OAIShippingAddress.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIItem;
class OAIMetadatum;
class OAIPlan;
class OAIPurchaseSettings;
class OAIShippingAddress;

class OAIUpdateSubscriptionsbySubscriptionIdRequest : public OAIObject {
public:
    OAIUpdateSubscriptionsbySubscriptionIdRequest();
    OAIUpdateSubscriptionsbySubscriptionIdRequest(QString json);
    ~OAIUpdateSubscriptionsbySubscriptionIdRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isIsSkipped() const;
    void setIsSkipped(const bool &is_skipped);
    bool is_is_skipped_Set() const;
    bool is_is_skipped_Valid() const;

    OAIItem getItem() const;
    void setItem(const OAIItem &item);
    bool is_item_Set() const;
    bool is_item_Valid() const;

    QList<OAIMetadatum> getMetadata() const;
    void setMetadata(const QList<OAIMetadatum> &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    OAIPlan getPlan() const;
    void setPlan(const OAIPlan &plan);
    bool is_plan_Set() const;
    bool is_plan_Valid() const;

    OAIPurchaseSettings getPurchaseSettings() const;
    void setPurchaseSettings(const OAIPurchaseSettings &purchase_settings);
    bool is_purchase_settings_Set() const;
    bool is_purchase_settings_Valid() const;

    OAIShippingAddress getShippingAddress() const;
    void setShippingAddress(const OAIShippingAddress &shipping_address);
    bool is_shipping_address_Set() const;
    bool is_shipping_address_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_is_skipped;
    bool m_is_skipped_isSet;
    bool m_is_skipped_isValid;

    OAIItem m_item;
    bool m_item_isSet;
    bool m_item_isValid;

    QList<OAIMetadatum> m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    OAIPlan m_plan;
    bool m_plan_isSet;
    bool m_plan_isValid;

    OAIPurchaseSettings m_purchase_settings;
    bool m_purchase_settings_isSet;
    bool m_purchase_settings_isValid;

    OAIShippingAddress m_shipping_address;
    bool m_shipping_address_isSet;
    bool m_shipping_address_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateSubscriptionsbySubscriptionIdRequest)

#endif // OAIUpdateSubscriptionsbySubscriptionIdRequest_H
