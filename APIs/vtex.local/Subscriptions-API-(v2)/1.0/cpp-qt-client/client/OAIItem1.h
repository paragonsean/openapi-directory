/**
 * Subscriptions API (v2 - DEPRECATED)
 * VTEX Subscriptions REST API Documentation  This documentation describes the available REST APIs for VTEX Subscription System.  With Subscriptions you can set up regularly scheduled deliveries.  All requests need authorization (VTEX Id authentication token or VTEX Appkey and Apptoken headers)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIItem1.h
 *
 * 
 */

#ifndef OAIItem1_H
#define OAIItem1_H

#include <QJsonObject>

#include "OAIMetadatum.h"
#include "OAISku.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMetadatum;
class OAISku;

class OAIItem1 : public OAIObject {
public:
    OAIItem1();
    OAIItem1(QString json);
    ~OAIItem1() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getSubscriptionId() const;
    void setSubscriptionId(const QString &subscription_id);
    bool is_subscription_id_Set() const;
    bool is_subscription_id_Valid() const;

    QString getCreatedAt() const;
    void setCreatedAt(const QString &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    qint32 getCycleCount() const;
    void setCycleCount(const qint32 &cycle_count);
    bool is_cycle_count_Set() const;
    bool is_cycle_count_Valid() const;

    QString getEndpoint() const;
    void setEndpoint(const QString &endpoint);
    bool is_endpoint_Set() const;
    bool is_endpoint_Valid() const;

    bool isIsSkipped() const;
    void setIsSkipped(const bool &is_skipped);
    bool is_is_skipped_Set() const;
    bool is_is_skipped_Valid() const;

    QString getLastUpdate() const;
    void setLastUpdate(const QString &last_update);
    bool is_last_update_Set() const;
    bool is_last_update_Valid() const;

    QList<OAIMetadatum> getMetadata() const;
    void setMetadata(const QList<OAIMetadatum> &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    qint32 getOriginalItemIndex() const;
    void setOriginalItemIndex(const qint32 &original_item_index);
    bool is_original_item_index_Set() const;
    bool is_original_item_index_Valid() const;

    QString getOriginalOrderId() const;
    void setOriginalOrderId(const QString &original_order_id);
    bool is_original_order_id_Set() const;
    bool is_original_order_id_Valid() const;

    qint32 getPriceAtSubscriptionDate() const;
    void setPriceAtSubscriptionDate(const qint32 &price_at_subscription_date);
    bool is_price_at_subscription_date_Set() const;
    bool is_price_at_subscription_date_Valid() const;

    qint32 getQuantity() const;
    void setQuantity(const qint32 &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    qint32 getSellingPrice() const;
    void setSellingPrice(const qint32 &selling_price);
    bool is_selling_price_Set() const;
    bool is_selling_price_Valid() const;

    OAISku getSku() const;
    void setSku(const OAISku &sku);
    bool is_sku_Set() const;
    bool is_sku_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_subscription_id;
    bool m_subscription_id_isSet;
    bool m_subscription_id_isValid;

    QString m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    qint32 m_cycle_count;
    bool m_cycle_count_isSet;
    bool m_cycle_count_isValid;

    QString m_endpoint;
    bool m_endpoint_isSet;
    bool m_endpoint_isValid;

    bool m_is_skipped;
    bool m_is_skipped_isSet;
    bool m_is_skipped_isValid;

    QString m_last_update;
    bool m_last_update_isSet;
    bool m_last_update_isValid;

    QList<OAIMetadatum> m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    qint32 m_original_item_index;
    bool m_original_item_index_isSet;
    bool m_original_item_index_isValid;

    QString m_original_order_id;
    bool m_original_order_id_isSet;
    bool m_original_order_id_isValid;

    qint32 m_price_at_subscription_date;
    bool m_price_at_subscription_date_isSet;
    bool m_price_at_subscription_date_isValid;

    qint32 m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    qint32 m_selling_price;
    bool m_selling_price_isSet;
    bool m_selling_price_isValid;

    OAISku m_sku;
    bool m_sku_isSet;
    bool m_sku_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIItem1)

#endif // OAIItem1_H
