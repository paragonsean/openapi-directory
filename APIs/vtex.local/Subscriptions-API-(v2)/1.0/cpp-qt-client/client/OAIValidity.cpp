/**
 * Subscriptions API (v2 - DEPRECATED)
 * VTEX Subscriptions REST API Documentation  This documentation describes the available REST APIs for VTEX Subscription System.  With Subscriptions you can set up regularly scheduled deliveries.  All requests need authorization (VTEX Id authentication token or VTEX Appkey and Apptoken headers)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIValidity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIValidity::OAIValidity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIValidity::OAIValidity() {
    this->initializeModel();
}

OAIValidity::~OAIValidity() {}

void OAIValidity::initializeModel() {

    m_begin_isSet = false;
    m_begin_isValid = false;

    m_end_isSet = false;
    m_end_isValid = false;
}

void OAIValidity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIValidity::fromJsonObject(QJsonObject json) {

    m_begin_isValid = ::OpenAPI::fromJsonValue(m_begin, json[QString("begin")]);
    m_begin_isSet = !json[QString("begin")].isNull() && m_begin_isValid;

    m_end_isValid = ::OpenAPI::fromJsonValue(m_end, json[QString("end")]);
    m_end_isSet = !json[QString("end")].isNull() && m_end_isValid;
}

QString OAIValidity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIValidity::asJsonObject() const {
    QJsonObject obj;
    if (m_begin_isSet) {
        obj.insert(QString("begin"), ::OpenAPI::toJsonValue(m_begin));
    }
    if (m_end_isSet) {
        obj.insert(QString("end"), ::OpenAPI::toJsonValue(m_end));
    }
    return obj;
}

QString OAIValidity::getBegin() const {
    return m_begin;
}
void OAIValidity::setBegin(const QString &begin) {
    m_begin = begin;
    m_begin_isSet = true;
}

bool OAIValidity::is_begin_Set() const{
    return m_begin_isSet;
}

bool OAIValidity::is_begin_Valid() const{
    return m_begin_isValid;
}

QString OAIValidity::getEnd() const {
    return m_end;
}
void OAIValidity::setEnd(const QString &end) {
    m_end = end;
    m_end_isSet = true;
}

bool OAIValidity::is_end_Set() const{
    return m_end_isSet;
}

bool OAIValidity::is_end_Valid() const{
    return m_end_isValid;
}

bool OAIValidity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_begin_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIValidity::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_begin_isValid && m_end_isValid && true;
}

} // namespace OpenAPI
