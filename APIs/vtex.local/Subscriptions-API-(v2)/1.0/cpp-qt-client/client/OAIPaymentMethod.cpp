/**
 * Subscriptions API (v2 - DEPRECATED)
 * VTEX Subscriptions REST API Documentation  This documentation describes the available REST APIs for VTEX Subscription System.  With Subscriptions you can set up regularly scheduled deliveries.  All requests need authorization (VTEX Id authentication token or VTEX Appkey and Apptoken headers)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPaymentMethod.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPaymentMethod::OAIPaymentMethod(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPaymentMethod::OAIPaymentMethod() {
    this->initializeModel();
}

OAIPaymentMethod::~OAIPaymentMethod() {}

void OAIPaymentMethod::initializeModel() {

    m_payment_account_id_isSet = false;
    m_payment_account_id_isValid = false;

    m_payment_system_isSet = false;
    m_payment_system_isValid = false;
}

void OAIPaymentMethod::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPaymentMethod::fromJsonObject(QJsonObject json) {

    m_payment_account_id_isValid = ::OpenAPI::fromJsonValue(m_payment_account_id, json[QString("paymentAccountId")]);
    m_payment_account_id_isSet = !json[QString("paymentAccountId")].isNull() && m_payment_account_id_isValid;

    m_payment_system_isValid = ::OpenAPI::fromJsonValue(m_payment_system, json[QString("paymentSystem")]);
    m_payment_system_isSet = !json[QString("paymentSystem")].isNull() && m_payment_system_isValid;
}

QString OAIPaymentMethod::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPaymentMethod::asJsonObject() const {
    QJsonObject obj;
    if (m_payment_account_id_isSet) {
        obj.insert(QString("paymentAccountId"), ::OpenAPI::toJsonValue(m_payment_account_id));
    }
    if (m_payment_system_isSet) {
        obj.insert(QString("paymentSystem"), ::OpenAPI::toJsonValue(m_payment_system));
    }
    return obj;
}

QString OAIPaymentMethod::getPaymentAccountId() const {
    return m_payment_account_id;
}
void OAIPaymentMethod::setPaymentAccountId(const QString &payment_account_id) {
    m_payment_account_id = payment_account_id;
    m_payment_account_id_isSet = true;
}

bool OAIPaymentMethod::is_payment_account_id_Set() const{
    return m_payment_account_id_isSet;
}

bool OAIPaymentMethod::is_payment_account_id_Valid() const{
    return m_payment_account_id_isValid;
}

QString OAIPaymentMethod::getPaymentSystem() const {
    return m_payment_system;
}
void OAIPaymentMethod::setPaymentSystem(const QString &payment_system) {
    m_payment_system = payment_system;
    m_payment_system_isSet = true;
}

bool OAIPaymentMethod::is_payment_system_Set() const{
    return m_payment_system_isSet;
}

bool OAIPaymentMethod::is_payment_system_Valid() const{
    return m_payment_system_isValid;
}

bool OAIPaymentMethod::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_payment_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_system_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPaymentMethod::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_payment_account_id_isValid && m_payment_system_isValid && true;
}

} // namespace OpenAPI
