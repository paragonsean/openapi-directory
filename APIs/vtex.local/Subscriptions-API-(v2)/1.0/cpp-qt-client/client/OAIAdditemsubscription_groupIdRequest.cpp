/**
 * Subscriptions API (v2 - DEPRECATED)
 * VTEX Subscriptions REST API Documentation  This documentation describes the available REST APIs for VTEX Subscription System.  With Subscriptions you can set up regularly scheduled deliveries.  All requests need authorization (VTEX Id authentication token or VTEX Appkey and Apptoken headers)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAdditemsubscription_groupIdRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAdditemsubscription_groupIdRequest::OAIAdditemsubscription_groupIdRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAdditemsubscription_groupIdRequest::OAIAdditemsubscription_groupIdRequest() {
    this->initializeModel();
}

OAIAdditemsubscription_groupIdRequest::~OAIAdditemsubscription_groupIdRequest() {}

void OAIAdditemsubscription_groupIdRequest::initializeModel() {

    m_endpoint_isSet = false;
    m_endpoint_isValid = false;

    m_price_at_subscription_date_isSet = false;
    m_price_at_subscription_date_isValid = false;

    m_quantity_isSet = false;
    m_quantity_isValid = false;

    m_selling_price_isSet = false;
    m_selling_price_isValid = false;

    m_sku_isSet = false;
    m_sku_isValid = false;
}

void OAIAdditemsubscription_groupIdRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAdditemsubscription_groupIdRequest::fromJsonObject(QJsonObject json) {

    m_endpoint_isValid = ::OpenAPI::fromJsonValue(m_endpoint, json[QString("endpoint")]);
    m_endpoint_isSet = !json[QString("endpoint")].isNull() && m_endpoint_isValid;

    m_price_at_subscription_date_isValid = ::OpenAPI::fromJsonValue(m_price_at_subscription_date, json[QString("priceAtSubscriptionDate")]);
    m_price_at_subscription_date_isSet = !json[QString("priceAtSubscriptionDate")].isNull() && m_price_at_subscription_date_isValid;

    m_quantity_isValid = ::OpenAPI::fromJsonValue(m_quantity, json[QString("quantity")]);
    m_quantity_isSet = !json[QString("quantity")].isNull() && m_quantity_isValid;

    m_selling_price_isValid = ::OpenAPI::fromJsonValue(m_selling_price, json[QString("sellingPrice")]);
    m_selling_price_isSet = !json[QString("sellingPrice")].isNull() && m_selling_price_isValid;

    m_sku_isValid = ::OpenAPI::fromJsonValue(m_sku, json[QString("sku")]);
    m_sku_isSet = !json[QString("sku")].isNull() && m_sku_isValid;
}

QString OAIAdditemsubscription_groupIdRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAdditemsubscription_groupIdRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_endpoint_isSet) {
        obj.insert(QString("endpoint"), ::OpenAPI::toJsonValue(m_endpoint));
    }
    if (m_price_at_subscription_date_isSet) {
        obj.insert(QString("priceAtSubscriptionDate"), ::OpenAPI::toJsonValue(m_price_at_subscription_date));
    }
    if (m_quantity_isSet) {
        obj.insert(QString("quantity"), ::OpenAPI::toJsonValue(m_quantity));
    }
    if (m_selling_price_isSet) {
        obj.insert(QString("sellingPrice"), ::OpenAPI::toJsonValue(m_selling_price));
    }
    if (m_sku.isSet()) {
        obj.insert(QString("sku"), ::OpenAPI::toJsonValue(m_sku));
    }
    return obj;
}

QString OAIAdditemsubscription_groupIdRequest::getEndpoint() const {
    return m_endpoint;
}
void OAIAdditemsubscription_groupIdRequest::setEndpoint(const QString &endpoint) {
    m_endpoint = endpoint;
    m_endpoint_isSet = true;
}

bool OAIAdditemsubscription_groupIdRequest::is_endpoint_Set() const{
    return m_endpoint_isSet;
}

bool OAIAdditemsubscription_groupIdRequest::is_endpoint_Valid() const{
    return m_endpoint_isValid;
}

qint32 OAIAdditemsubscription_groupIdRequest::getPriceAtSubscriptionDate() const {
    return m_price_at_subscription_date;
}
void OAIAdditemsubscription_groupIdRequest::setPriceAtSubscriptionDate(const qint32 &price_at_subscription_date) {
    m_price_at_subscription_date = price_at_subscription_date;
    m_price_at_subscription_date_isSet = true;
}

bool OAIAdditemsubscription_groupIdRequest::is_price_at_subscription_date_Set() const{
    return m_price_at_subscription_date_isSet;
}

bool OAIAdditemsubscription_groupIdRequest::is_price_at_subscription_date_Valid() const{
    return m_price_at_subscription_date_isValid;
}

qint32 OAIAdditemsubscription_groupIdRequest::getQuantity() const {
    return m_quantity;
}
void OAIAdditemsubscription_groupIdRequest::setQuantity(const qint32 &quantity) {
    m_quantity = quantity;
    m_quantity_isSet = true;
}

bool OAIAdditemsubscription_groupIdRequest::is_quantity_Set() const{
    return m_quantity_isSet;
}

bool OAIAdditemsubscription_groupIdRequest::is_quantity_Valid() const{
    return m_quantity_isValid;
}

qint32 OAIAdditemsubscription_groupIdRequest::getSellingPrice() const {
    return m_selling_price;
}
void OAIAdditemsubscription_groupIdRequest::setSellingPrice(const qint32 &selling_price) {
    m_selling_price = selling_price;
    m_selling_price_isSet = true;
}

bool OAIAdditemsubscription_groupIdRequest::is_selling_price_Set() const{
    return m_selling_price_isSet;
}

bool OAIAdditemsubscription_groupIdRequest::is_selling_price_Valid() const{
    return m_selling_price_isValid;
}

OAISku OAIAdditemsubscription_groupIdRequest::getSku() const {
    return m_sku;
}
void OAIAdditemsubscription_groupIdRequest::setSku(const OAISku &sku) {
    m_sku = sku;
    m_sku_isSet = true;
}

bool OAIAdditemsubscription_groupIdRequest::is_sku_Set() const{
    return m_sku_isSet;
}

bool OAIAdditemsubscription_groupIdRequest::is_sku_Valid() const{
    return m_sku_isValid;
}

bool OAIAdditemsubscription_groupIdRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_endpoint_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_at_subscription_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_selling_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sku.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAdditemsubscription_groupIdRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_endpoint_isValid && m_price_at_subscription_date_isValid && m_quantity_isValid && m_selling_price_isValid && m_sku_isValid && true;
}

} // namespace OpenAPI
