/**
 * Subscriptions API (v2 - DEPRECATED)
 * VTEX Subscriptions REST API Documentation  This documentation describes the available REST APIs for VTEX Subscription System.  With Subscriptions you can set up regularly scheduled deliveries.  All requests need authorization (VTEX Id authentication token or VTEX Appkey and Apptoken headers)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Sku from './Sku';

/**
 * The AdditemsubscriptionGroupIdRequest model module.
 * @module model/AdditemsubscriptionGroupIdRequest
 * @version 1.0
 */
class AdditemsubscriptionGroupIdRequest {
    /**
     * Constructs a new <code>AdditemsubscriptionGroupIdRequest</code>.
     * @alias module:model/AdditemsubscriptionGroupIdRequest
     * @param endpoint {String} 
     * @param priceAtSubscriptionDate {Number} 
     * @param quantity {Number} 
     * @param sellingPrice {Number} 
     * @param sku {module:model/Sku} 
     */
    constructor(endpoint, priceAtSubscriptionDate, quantity, sellingPrice, sku) { 
        
        AdditemsubscriptionGroupIdRequest.initialize(this, endpoint, priceAtSubscriptionDate, quantity, sellingPrice, sku);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, endpoint, priceAtSubscriptionDate, quantity, sellingPrice, sku) { 
        obj['endpoint'] = endpoint;
        obj['priceAtSubscriptionDate'] = priceAtSubscriptionDate;
        obj['quantity'] = quantity;
        obj['sellingPrice'] = sellingPrice;
        obj['sku'] = sku;
    }

    /**
     * Constructs a <code>AdditemsubscriptionGroupIdRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdditemsubscriptionGroupIdRequest} obj Optional instance to populate.
     * @return {module:model/AdditemsubscriptionGroupIdRequest} The populated <code>AdditemsubscriptionGroupIdRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdditemsubscriptionGroupIdRequest();

            if (data.hasOwnProperty('endpoint')) {
                obj['endpoint'] = ApiClient.convertToType(data['endpoint'], 'String');
            }
            if (data.hasOwnProperty('priceAtSubscriptionDate')) {
                obj['priceAtSubscriptionDate'] = ApiClient.convertToType(data['priceAtSubscriptionDate'], 'Number');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('sellingPrice')) {
                obj['sellingPrice'] = ApiClient.convertToType(data['sellingPrice'], 'Number');
            }
            if (data.hasOwnProperty('sku')) {
                obj['sku'] = Sku.constructFromObject(data['sku']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdditemsubscriptionGroupIdRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdditemsubscriptionGroupIdRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AdditemsubscriptionGroupIdRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['endpoint'] && !(typeof data['endpoint'] === 'string' || data['endpoint'] instanceof String)) {
            throw new Error("Expected the field `endpoint` to be a primitive type in the JSON string but got " + data['endpoint']);
        }
        // validate the optional field `sku`
        if (data['sku']) { // data not null
          Sku.validateJSON(data['sku']);
        }

        return true;
    }


}

AdditemsubscriptionGroupIdRequest.RequiredProperties = ["endpoint", "priceAtSubscriptionDate", "quantity", "sellingPrice", "sku"];

/**
 * @member {String} endpoint
 */
AdditemsubscriptionGroupIdRequest.prototype['endpoint'] = undefined;

/**
 * @member {Number} priceAtSubscriptionDate
 */
AdditemsubscriptionGroupIdRequest.prototype['priceAtSubscriptionDate'] = undefined;

/**
 * @member {Number} quantity
 */
AdditemsubscriptionGroupIdRequest.prototype['quantity'] = undefined;

/**
 * @member {Number} sellingPrice
 */
AdditemsubscriptionGroupIdRequest.prototype['sellingPrice'] = undefined;

/**
 * @member {module:model/Sku} sku
 */
AdditemsubscriptionGroupIdRequest.prototype['sku'] = undefined;






export default AdditemsubscriptionGroupIdRequest;

