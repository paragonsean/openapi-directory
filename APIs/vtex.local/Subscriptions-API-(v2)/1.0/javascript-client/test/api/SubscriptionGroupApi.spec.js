/**
 * Subscriptions API (v2 - DEPRECATED)
 * VTEX Subscriptions REST API Documentation  This documentation describes the available REST APIs for VTEX Subscription System.  With Subscriptions you can set up regularly scheduled deliveries.  All requests need authorization (VTEX Id authentication token or VTEX Appkey and Apptoken headers)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SubscriptionsApiV2Deprecated);
  }
}(this, function(expect, SubscriptionsApiV2Deprecated) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SubscriptionsApiV2Deprecated.SubscriptionGroupApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SubscriptionGroupApi', function() {
    describe('additemsubscriptionGroupId', function() {
      it('should call additemsubscriptionGroupId successfully', function(done) {
        //uncomment below and update the code to test additemsubscriptionGroupId
        //instance.additemsubscriptionGroupId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cancelSubscriptionbygroupId', function() {
      it('should call cancelSubscriptionbygroupId successfully', function(done) {
        //uncomment below and update the code to test cancelSubscriptionbygroupId
        //instance.cancelSubscriptionbygroupId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllsubscriptiongroup', function() {
      it('should call getAllsubscriptiongroup successfully', function(done) {
        //uncomment below and update the code to test getAllsubscriptiongroup
        //instance.getAllsubscriptiongroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getConfigsubscriptionsgroup', function() {
      it('should call getConfigsubscriptionsgroup successfully', function(done) {
        //uncomment below and update the code to test getConfigsubscriptionsgroup
        //instance.getConfigsubscriptionsgroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getConversationMessagebygroupId', function() {
      it('should call getConversationMessagebygroupId successfully', function(done) {
        //uncomment below and update the code to test getConversationMessagebygroupId
        //instance.getConversationMessagebygroupId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNextpurchase', function() {
      it('should call getNextpurchase successfully', function(done) {
        //uncomment below and update the code to test getNextpurchase
        //instance.getNextpurchase(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSimulatebysubscriptionGroup', function() {
      it('should call getSimulatebysubscriptionGroup successfully', function(done) {
        //uncomment below and update the code to test getSimulatebysubscriptionGroup
        //instance.getSimulatebysubscriptionGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSubscriptionbygroupId', function() {
      it('should call getSubscriptionbygroupId successfully', function(done) {
        //uncomment below and update the code to test getSubscriptionbygroupId
        //instance.getSubscriptionbygroupId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getaddressesbygroupId', function() {
      it('should call getaddressesbygroupId successfully', function(done) {
        //uncomment below and update the code to test getaddressesbygroupId
        //instance.getaddressesbygroupId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getfrequencyoptionsbygroupId', function() {
      it('should call getfrequencyoptionsbygroupId successfully', function(done) {
        //uncomment below and update the code to test getfrequencyoptionsbygroupId
        //instance.getfrequencyoptionsbygroupId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getpaymentSystembygroupId', function() {
      it('should call getpaymentSystembygroupId successfully', function(done) {
        //uncomment below and update the code to test getpaymentSystembygroupId
        //instance.getpaymentSystembygroupId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getsubscriptiongrouplist', function() {
      it('should call getsubscriptiongrouplist successfully', function(done) {
        //uncomment below and update the code to test getsubscriptiongrouplist
        //instance.getsubscriptiongrouplist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getwillcreatebygroupId', function() {
      it('should call getwillcreatebygroupId successfully', function(done) {
        //uncomment below and update the code to test getwillcreatebygroupId
        //instance.getwillcreatebygroupId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('insertAddressesbygroupId', function() {
      it('should call insertAddressesbygroupId successfully', function(done) {
        //uncomment below and update the code to test insertAddressesbygroupId
        //instance.insertAddressesbygroupId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retrysubscriptionbygroupId', function() {
      it('should call retrysubscriptionbygroupId successfully', function(done) {
        //uncomment below and update the code to test retrysubscriptionbygroupId
        //instance.retrysubscriptionbygroupId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSubscriptionbygroupId', function() {
      it('should call updateSubscriptionbygroupId successfully', function(done) {
        //uncomment below and update the code to test updateSubscriptionbygroupId
        //instance.updateSubscriptionbygroupId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
