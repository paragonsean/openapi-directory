openapi: 3.0.0
info:
  contact: {}
  description: "\r\n> Check the new [Pricing onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/pricing-overview).\
    \ We created this guide to improve the onboarding experience for developers at\
    \ VTEX. It assembles all documentation on our Developer Portal about Pricing and\
    \ is organized by focusing on the developer's journey.\r\n\r\nPricing is the VTEX\
    \ module responsible for the SKU's price list. At this module we have the base\
    \ price of each SKU, some optional fixed prices by trade policy, and some rules\
    \ that can be applied to generate dynamically different final prices according\
    \ to the purchase context and the trade policy. The variables used in this collection\
    \ are:\r\n\r\n  * **{{accountName}}** = You VTEX account name.\r\n  * **{{tradePolicyId}}**\
    \ = Current Trade Policy ID.\r\n  * **{{itemId}}** = SKU ID.\r\n  * **{{X-VTEX-API-AppKey}}**\
    \ and **{{X-VTEX-API-AppToken}}** = Credentials.\r\n\r\nYou can get more information\
    \ about how to use this module and its business logic at [VTEX Help](http://help.vtex.com).\r\
    \n\r\n## Rate Limits\r\n\r\n### Limits per route\r\n\r\n- `GET`:  routes are not\
    \ rate limited at the moment\r\n- `PUT or POST`: `40 requests/second/account`\
    \ in any **price insert/update route** with 1000 *Burst Credits*\r\n- `DELETE`:\
    \ `16 requests/second/account` in any **price deletion route**, with 300 *Burst\
    \ Credits*.\r\n\r\n### What are Burst Credits?\r\n\r\nIn case the account exceeds\
    \ the limit frequency for a  `Rate Limiter` (for instance, when one account makes\
    \ `41 requests/second` in any `price insert/update route`), we decrease from the\
    \ *Burst Credit* count the exceeding (in this example, *1 Credit*).\r\n\r\nIn\
    \ the event of the *Burst Credits* reaching **0 (zero)**, the request is blocked\
    \ with a `Status 429` response.\r\n\r\nThe credits fill up over time when the\
    \ route is not being used, in the same rate as the route's `Rate Limiter`. In\
    \ our example, for each second not sending a **PUT or POST request**, we increase\
    \ *40 Burst Credits* to this `Rate Limiter`\r\n\r\n### New Response Headers\r\n\
    \r\nIn the response headers of any request to Pricing v2 there are some new headers\
    \ indicating the current status of the Rate Limiting.\r\nThis information may\
    \ be useful to evaluate the ideal frequency to send requests to a route, and when\
    \ to send a new request in the event of reaching a Rate Limit.\r\n\r\n- `Ratelimit-Limit`\
    \ - Total *Burst Credits* offered to a route\r\n- `Ratelimit-Remaining` - How\
    \ many *Burst Credits* are still available to use\r\n- `Ratelimit-Reset` - How\
    \ long (in seconds) it will take to the *Burst Credits* to fill up completely\
    \ (It will fill up to the `Ratelimit-Limit`)\r\n- `Retry-After` - Indicates how\
    \ many seconds you will need to wait until the `Rate Limiter` accepts a new request\
    \ to this route again. If this header response exists, this means your current\
    \ request has been rate limited and has not been processed.\r\n\r\n### How to\
    \ integrate with Pricing v2 considering our Rate Limits\r\n\r\nIntegrate considering\
    \ the limits of **requests/route/account** specified in the [*Limits per route*](#rate-limits)\
    \ section, avoiding to surpass this frequency.\r\n\r\nIf you happen to be Rate\
    \ Limited, wait the time in seconds specified in `Retry-After` before making another\
    \ request to the service, and reduce the rate of requests per second that your\
    \ integration is making."
  title: Pricing API
  version: "1.0"
  x-origin:
  - format: openapi
    url: https://raw.githubusercontent.com/vtex/openapi-schemas/master/VTEX - Pricing
      API.json
    version: "3.0"
  x-providerName: vtex.local
  x-serviceName: Pricing-API
servers:
- url: https://vtex.local
- description: VTEX server url
  url: "https://api.vtex.com/{accountName}"
  variables:
    accountName:
      default: "{accountName}"
      description: Name of the VTEX account. Used as part of the URL
security:
- appKey: []
  appToken: []
tags:
- name: Price Tables
- name: Prices and Fixed Prices
- name: Pricing Configuration
paths:
  /pricing/config:
    get:
      deprecated: false
      description: "Retrieves Pricing Configuration.\r\n## Response body example\r\
        \n\r\n```json\r\n{\r\n    \"hasMigrated\": true,\r\n    \"migrationStatus\"\
        : \"Completed\",\r\n    \"defaultMarkup\": 100,\r\n    \"priceVariation\"\
        : {\r\n        \"upperLimit\": null,\r\n        \"lowerLimit\": null\r\n \
        \   },\r\n    \"minimumMarkups\": {\r\n        \"1\": 100,\r\n        \"2\"\
        : 90\r\n    },\r\n    \"tradePolicyConfigs\": [],\r\n    \"sellersToOverride\"\
        : [],\r\n    \"hasPriceInheritance\": false,\r\n    \"priceInheritance\":\
        \ \"never\",\r\n    \"hasOptionalBasePrice\": false,\r\n    \"blockAccount\"\
        : false,\r\n    \"blockedRoutes\": null,\r\n    \"priceTableSelectionStrategy\"\
        : \"first\",\r\n    \"priceTableLimit\": null\r\n}\r\n```"
      operationId: get_pricing_config
      parameters:
      - description: Describes the type of the content being sent.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      - description: HTTP Client Negotiation _Accept_ Header. Indicates the types
          of responses the client can understand.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              example:
                blockAccount: false
                blockedRoutes: null
                defaultMarkup: 100
                hasMigrated: true
                hasOptionalBasePrice: false
                hasPriceInheritance: false
                migrationStatus: Completed
                minimumMarkups:
                  "1": 100
                  "2": 90
                priceInheritance: never
                priceTableLimit: null
                priceTableSelectionStrategy: first
                priceVariation:
                  lowerLimit: null
                  upperLimit: null
                sellersToOverride: []
                tradePolicyConfigs: []
              schema:
                $ref: '#/components/schemas/PricingConfiguration'
          description: OK
          headers:
            Access-Control-Allow-Credentials:
              content:
                text/plain:
                  example: "true"
                  schema:
                    type: string
              explode: false
              style: simple
            Access-Control-Allow-Origin:
              content:
                text/plain:
                  example: '*'
                  schema:
                    type: string
              explode: false
              style: simple
            Connection:
              content:
                text/plain:
                  example: keep-alive
                  schema:
                    type: string
              explode: false
              style: simple
            Content-Encoding:
              content:
                text/plain:
                  example: gzip
                  schema:
                    type: string
              explode: false
              style: simple
            Content-Length:
              content:
                text/plain:
                  example: "118"
                  schema:
                    type: string
              explode: false
              style: simple
            Date:
              content:
                text/plain:
                  example: "Tue, 21 Feb 2017 16:11:39 GMT"
                  schema:
                    type: string
              explode: false
              style: simple
            Server:
              content:
                text/plain:
                  example: nginx
                  schema:
                    type: string
              explode: false
              style: simple
            X-CDNIgnore:
              content:
                text/plain:
                  example: "1"
                  schema:
                    type: string
              explode: false
              style: simple
            X-Powered-by-VTEX-Janus-Edge:
              content:
                text/plain:
                  example: v1.35.3
                  schema:
                    type: string
              explode: false
              style: simple
            X-Track:
              content:
                text/plain:
                  example: stable
                  schema:
                    type: string
              explode: false
              style: simple
            X-VTEX-Janus-Router-Backend-App:
              content:
                text/plain:
                  example: pricing-v3.21.12
                  schema:
                    type: string
              explode: false
              style: simple
      servers:
      - url: "https://api.vtex.com/{account}/pricing"
        variables:
          account:
            default: DefaultParameterValue
      summary: Get Pricing Configuration
      tags:
      - Pricing Configuration
      x-openapi-router-controller: openapi_server.controllers.pricing_configuration_controller
  /pricing/migration:
    get:
      deprecated: false
      description: "Retrieves Pricing v2 Status. \r\n## Response body example\r\n\r\
        \n```json\r\n{\r\n    \"isActive\": true,\r\n    \"hasMigrated\": true\r\n\
        }\r\n```"
      operationId: get_pricingv2_status
      parameters:
      - description: Describes the type of the content being sent.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      - description: HTTP Client Negotiation _Accept_ Header. Indicates the types
          of responses the client can understand.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              example:
                hasMigrated: true
                isActive: true
              schema:
                $ref: '#/components/schemas/GetPricingv2Status_200_response'
          description: OK
          headers:
            Access-Control-Allow-Credentials:
              content:
                text/plain:
                  example: "true"
                  schema:
                    type: string
              explode: false
              style: simple
            Access-Control-Allow-Origin:
              content:
                text/plain:
                  example: '*'
                  schema:
                    type: string
              explode: false
              style: simple
            Connection:
              content:
                text/plain:
                  example: keep-alive
                  schema:
                    type: string
              explode: false
              style: simple
            Content-Encoding:
              content:
                text/plain:
                  example: gzip
                  schema:
                    type: string
              explode: false
              style: simple
            Content-Length:
              content:
                text/plain:
                  example: "52"
                  schema:
                    type: string
              explode: false
              style: simple
            Date:
              content:
                text/plain:
                  example: "Tue, 21 Feb 2017 16:13:39 GMT"
                  schema:
                    type: string
              explode: false
              style: simple
            Server:
              content:
                text/plain:
                  example: nginx
                  schema:
                    type: string
              explode: false
              style: simple
            X-CDNIgnore:
              content:
                text/plain:
                  example: "1"
                  schema:
                    type: string
              explode: false
              style: simple
            X-Powered-by-VTEX-Janus-Edge:
              content:
                text/plain:
                  example: v1.35.3
                  schema:
                    type: string
              explode: false
              style: simple
            X-Track:
              content:
                text/plain:
                  example: stable
                  schema:
                    type: string
              explode: false
              style: simple
            X-VTEX-Janus-Router-Backend-App:
              content:
                text/plain:
                  example: pricing-v3.21.12
                  schema:
                    type: string
              explode: false
              style: simple
      servers:
      - url: "https://api.vtex.com/{account}/pricing"
        variables:
          account:
            default: DefaultParameterValue
      summary: Get Pricing v2 Status
      tags:
      - Pricing Configuration
      x-openapi-router-controller: openapi_server.controllers.pricing_configuration_controller
  /pricing/pipeline/catalog:
    get:
      deprecated: false
      description: "This method will retrieve all price tables and their rules.\r\n\
        \r\n## Response body example\r\n\r\n```json\r\n[\r\n    {\r\n        \"tradePolicyId\"\
        : \"2\",\r\n        \"rules\": [\r\n            {\r\n                \"id\"\
        : 0,\r\n                \"context\": {\r\n                    \"categories\"\
        : {},\r\n                    \"brands\": {},\r\n                    \"stockStatuses\"\
        : null,\r\n                    \"internalCategories\": null,\r\n         \
        \           \"markupRange\": null,\r\n                    \"dateRange\": null\r\
        \n                },\r\n                \"percentualModifier\": 20\r\n   \
        \         }\r\n        ]\r\n    },\r\n    {\r\n        \"tradePolicyId\":\
        \ \"b2c\",\r\n        \"rules\": [\r\n            {\r\n                \"\
        id\": 0,\r\n                \"context\": {\r\n                    \"categories\"\
        : {},\r\n                    \"brands\": {\r\n                        \"2000009\"\
        : \"Whiskas\"\r\n                    },\r\n                    \"stockStatuses\"\
        : null,\r\n                    \"internalCategories\": null,\r\n         \
        \           \"markupRange\": null,\r\n                    \"dateRange\": null\r\
        \n                },\r\n                \"percentualModifier\": 15\r\n   \
        \         }\r\n        ]\r\n    }\r\n]\r\n```"
      operationId: getallpricetablesandrules
      parameters:
      - description: Describes the type of the content being sent.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      - description: HTTP Client Negotiation _Accept_ Header. Indicates the types
          of responses the client can understand.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - rules:
                - context:
                    brands: {}
                    categories: {}
                    dateRange: null
                    internalCategories: null
                    markupRange: null
                    stockStatuses: null
                  id: 0
                  percentualModifier: 20
                tradePolicyId: "2"
              - rules:
                - context:
                    brands:
                      "2000009": Whiskas
                    categories: {}
                    dateRange: null
                    internalCategories: null
                    markupRange: null
                    stockStatuses: null
                  id: 0
                  percentualModifier: 15
                tradePolicyId: b2c
              schema:
                items:
                  $ref: '#/components/schemas/getallpricetablesandrules_200_response_inner'
                title: ""
                type: array
          description: OK
      servers:
      - url: "https://api.vtex.com/{account}/pricing"
        variables:
          account:
            default: DefaultParameterValue
      summary: Get all price tables and their rules
      tags:
      - Price Tables
      x-openapi-router-controller: openapi_server.controllers.price_tables_controller
  /pricing/pipeline/catalog/{priceTableId}:
    get:
      deprecated: false
      description: "This method will retrieve the rules from a specific Price Table.\r\
        \n\r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"tradePolicyId\"\
        : \"b2c\",\r\n    \"rules\": [{\r\n        \"id\": 0,\r\n        \"context\"\
        : {\r\n            \"categories\": {},\r\n            \"brands\": {\r\n  \
        \              \"2000009\": \"Whiskas\"\r\n            },\r\n            \"\
        stockStatuses\": null,\r\n            \"internalCategories\": null,\r\n  \
        \          \"markupRange\": null,\r\n            \"dateRange\": null\r\n \
        \       },\r\n        \"percentualModifier\": 15\r\n    }]\r\n}\r\n```"
      operationId: getrulesforapricetable
      parameters:
      - description: Describes the type of the content being sent.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      - description: HTTP Client Negotiation _Accept_ Header. Indicates the types
          of responses the client can understand.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: Price Table Name.
        explode: false
        in: path
        name: priceTableId
        required: true
        schema:
          example: b2c
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                rules:
                - context:
                    brands:
                      "2000009": Whiskas
                    categories: {}
                    dateRange: null
                    internalCategories: null
                    markupRange: null
                    stockStatuses: null
                  id: 0
                  percentualModifier: 15
                tradePolicyId: b2c
              schema:
                $ref: '#/components/schemas/Getrulesforapricetable_200_response'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "429":
          description: Too many requests
      servers:
      - url: "https://api.vtex.com/{account}/pricing"
        variables:
          account:
            default: DefaultParameterValue
      summary: Get rules for a price table
      tags:
      - Price Tables
      x-openapi-router-controller: openapi_server.controllers.price_tables_controller
    put:
      description: "This method will update the rules from a specific Price Table.\
        \ It will delete all the rules from the requested Price Table and create new\
        \ rules based on the content of the request.\r\n\r\n## Request body example\r\
        \n\r\n```json\r\n{\r\n    \"rules\": [\r\n          {\r\n               \"\
        id\": 1,\r\n               \"context\": {\r\n                    \"categories\"\
        : {\r\n                         \"Category ID\": \"1\",\r\n              \
        \           \"Category Name\": \"Alimentação\"\r\n                    },\r\
        \n                    \"brands\": {\r\n                         \"Brand ID\"\
        : \"2000002\",\r\n                         \"Brand Name\": \"Whiskas\"\r\n\
        \                    },\r\n                    \"markupRange\": {\r\n    \
        \                     \"from\": 0,\r\n                         \"to\": 200\r\
        \n                    },\r\n                    \"dateRange\": {\r\n     \
        \                    \"from\": \"2022-01-23T19:00:00.000Z\",\r\n         \
        \                \"to\": \"2023-10-26T00:00:00.000Z\"\r\n                \
        \    }\r\n               },\r\n               \"percentualModifier\": 0\r\n\
        \          }\r\n    ]\r\n}\r\n```"
      operationId: pricing_pipeline_catalog_price_table_id_put
      parameters:
      - description: Describes the type of the content being sent.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      - description: HTTP Client Negotiation _Accept_ Header. Indicates the types
          of responses the client can understand.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: Price Table Name.
        explode: false
        in: path
        name: priceTableId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_pricing_pipeline_catalog__priceTableId__put_request'
        description: ""
        x-body-name: body
      responses:
        "201":
          description: Created
      summary: Update rules for a price table
      tags:
      - Price Tables
      x-openapi-router-controller: openapi_server.controllers.price_tables_controller
      x-codegen-request-body-name: body
  /pricing/prices/{itemId}:
    delete:
      deprecated: false
      description: Deletes the Base Price and all available Fixed Prices for an SKU
        in all trade policies.
      operationId: delete_price
      parameters:
      - description: Describes the type of the content being sent.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      - description: HTTP Client Negotiation _Accept_ Header. Indicates the types
          of responses the client can understand.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      - description: SKU ID.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          example: 1
          type: integer
        style: simple
      responses:
        "200":
          description: OK
      summary: Delete Price
      tags:
      - Prices and Fixed Prices
      x-openapi-router-controller: openapi_server.controllers.prices_and_fixed_prices_controller
    get:
      deprecated: false
      description: "Retrieves price data given a specific SKU ID. Within the `fixedPrices`\
        \ object, there might be a list of prices for specific Trade Policies and\
        \ Minimium Quantities of the SKU. Fixed Prices may also be scheduled.\r\n\r\
        \n ## Response body example\r\n\r\n```json\r\n{\r\n    \"itemId\": \"1\",\r\
        \n    \"listPrice\": 50,\r\n    \"costPrice\": 90,\r\n    \"markup\": 30,\r\
        \n    \"basePrice\": 117,\r\n    \"fixedPrices\": [\r\n        {\r\n     \
        \       \"tradePolicyId\": \"1\",\r\n            \"value\": 50.5,\r\n    \
        \        \"listPrice\": 50.5,\r\n            \"minQuantity\": 2,\r\n     \
        \       \"dateRange\": {\r\n                \"from\": \"2021-12-31T01:00:00Z\"\
        ,\r\n                \"to\": \"2022-12-31T01:00:00Z\"\r\n            }\r\n\
        \        },\r\n        {\r\n            \"tradePolicyId\": \"2\",\r\n    \
        \        \"value\": 30,\r\n            \"listPrice\": 50,\r\n            \"\
        minQuantity\": 2\r\n        }\r\n    ]\r\n}\r\n```"
      operationId: get_price
      parameters:
      - description: Describes the type of the content being sent.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      - description: HTTP Client Negotiation _Accept_ Header. Indicates the types
          of responses the client can understand.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: SKU ID.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          example: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                basePrice: 117
                costPrice: 90
                fixedPrices:
                - dateRange:
                    from: 2021-12-31T01:00:00Z
                    to: 2022-12-31T01:00:00Z
                  listPrice: 50.5
                  minQuantity: 2
                  tradePolicyId: "1"
                  value: 50.5
                - listPrice: 50
                  minQuantity: 2
                  tradePolicyId: "2"
                  value: 30
                itemId: "1"
                listPrice: 50
                markup: 30
              schema:
                $ref: '#/components/schemas/Getprice'
          description: OK
      summary: Get Price
      tags:
      - Prices and Fixed Prices
      x-openapi-router-controller: openapi_server.controllers.prices_and_fixed_prices_controller
    put:
      description: "Creates or updates an SKU Base Price or Fixed Prices. The **base\
        \ price** is the basic selling price of a product, it comprises the cost price\
        \ and the markup wanted in the sale of the product. The **fixed price** is\
        \ an optional price of the SKU for a specific trade policy with a specific\
        \ minimum quantity to be activated.\r\n\r\n <p> You may optionally set a list\
        \ price. Additionally, you may set either a cost price or a markup value.\
        \ By defining either one of them, the other will be calculated to conform\
        \ to the formula <code>costPrice * (1 + markup) = basePrice</code>.</p> <h2>Request\
        \ body example</h2>\r\n\r\n```json\r\n{\r\n    \"markup\": 30,\r\n    \"basePrice\"\
        : 100,\r\n    \"listPrice\": 35,\r\n    \"fixedPrices\": [\r\n        {\r\n\
        \            \"tradePolicyId\": \"1\",\r\n            \"value\": 31,\r\n \
        \           \"listPrice\": 32,\r\n            \"minQuantity\": 1,\r\n    \
        \        \"dateRange\": {\r\n                \"from\": \"2022-05-21T22:00:00Z\"\
        ,\r\n                \"to\": \"2023-05-28T22:00:00Z\"\r\n            }\r\n\
        \        },\r\n        {\r\n            \"tradePolicyId\": \"1\",\r\n    \
        \        \"value\": 31.5,\r\n            \"listPrice\": 33,\r\n          \
        \  \"minQuantity\": 2\r\n        }\r\n    ]\r\n}\r\n```"
      operationId: create_update_price_or_fixed_price
      parameters:
      - description: HTTP Client Negotiation _Accept_ Header. Indicates the types
          of responses the client can understand.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: Describes the type of the content being sent.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      - description: SKU unique identifier number.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          example: 1
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdatePriceOrFixedPrice_request'
        description: ""
        x-body-name: body
      responses:
        "200":
          description: OK
      summary: Create or Update Base Price or Fixed Prices
      tags:
      - Prices and Fixed Prices
      x-openapi-router-controller: openapi_server.controllers.prices_and_fixed_prices_controller
      x-codegen-request-body-name: body
  /pricing/prices/{itemId}/computed/{priceTableId}:
    get:
      deprecated: false
      description: "Gets the Computed Price, which is the price after all the steps\
        \ in the Pricing pipeline, for an SKU in a specific price table or trade policy.\
        \ \r\n\r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"tradePolicyId\"\
        : \"1\",\r\n    \"listPrice\": 30,\r\n    \"costPrice\": 76.92,\r\n    \"\
        sellingPrice\": 18.9,\r\n    \"priceValidUntil\": \"2018-12-20T18:12:14Z\"\
        \r\n}\r\n```"
      operationId: get_computed_pricebypricetable
      parameters:
      - description: Category ID.
        explode: true
        in: query
        name: categoryIds
        required: true
        schema:
          example: 1
          type: integer
        style: form
      - description: Brand ID.
        explode: true
        in: query
        name: brandId
        required: true
        schema:
          example: 3
          type: integer
        style: form
      - description: SKU quantity.
        explode: true
        in: query
        name: quantity
        required: true
        schema:
          example: 2
          type: integer
        style: form
      - description: Describes the type of the content being sent.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      - description: HTTP Client Negotiation _Accept_ Header. Indicates the types
          of responses the client can understand.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: SKU ID.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          example: 1
          type: integer
        style: simple
      - description: SKU Price Table Name.
        explode: false
        in: path
        name: priceTableId
        required: true
        schema:
          example: gold
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              example:
                costPrice: 76.92
                listPrice: 30
                priceValidUntil: 2018-12-20T18:12:14Z
                sellingPrice: 18.9
                tradePolicyId: "1"
              schema:
                $ref: '#/components/schemas/Getcomputedprice'
          description: OK
      servers:
      - url: "https://api.vtex.com/{account}/pricing"
        variables:
          account:
            default: DefaultParameterValue
      summary: Get Computed Price by price table or trade policy
      tags:
      - Prices and Fixed Prices
      x-openapi-router-controller: openapi_server.controllers.prices_and_fixed_prices_controller
  /pricing/prices/{itemId}/fixed:
    get:
      deprecated: false
      description: "The **fixed price** is an optional price of the SKU for a specific\
        \ trade policy with a specific minimum quantity to be activated. This method\
        \ retrieves an array of Fixed Prices for an SKU in a Trade Policy with Minimum\
        \ Quantities.\r\n\r\n The default value for a Minimum Quantity is `1`. This\
        \ means a Fixed Price will be valid for a SKU in a Trade Policy for orders\
        \ containing the specified number of Minimum Quantity or above, unless a higher\
        \ Minimum Quantity is specified.\r\n\r\n Fixed prices may, optionally, be\
        \ scheduled. If so, these objects will contain the `dateRange` object with\
        \ `from` and `to` properties, indicating the start and end time of the scheduled\
        \ fixed price in the RFC3339 timestamp format (`YYYY-MM-DDT23:59:60Z`).\r\n\
        \r\n Note that the 'Z', at the end, represents the UTC time (GMT+00:00). If\
        \ it was in GMT-03:00, for example, it would be (`YYYY-MM-DDT23:59:60-03:00`).\r\
        \n\r\n ## Response body example\r\n\r\n```json\r\n[\r\n    {\r\n        \"\
        tradePolicyId\": \"6\",\r\n        \"value\": 20.9,\r\n        \"listPrice\"\
        : 22.9,\r\n        \"minQuantity\": 1,\r\n        \"dateRange\": {\r\n   \
        \         \"from\": \"2021-12-30T22:00:00-03:00\",\r\n            \"to\":\
        \ \"2021-12-30T22:00:00-03:00\"\r\n        }\r\n    },\r\n    {\r\n      \
        \  \"tradePolicyId\": \"1\",\r\n        \"value\": 18.9,\r\n        \"listPrice\"\
        : null,\r\n        \"minQuantity\": 1,\r\n        \"dateRange\": {\r\n   \
        \         \"from\": \"2021-12-30T22:00:00-03:00\",\r\n            \"to\":\
        \ \"2021-12-30T22:00:00-03:00\"\r\n        }\r\n    }\r\n]\r\n```"
      operationId: get_fixed_prices
      parameters:
      - description: HTTP Client Negotiation _Accept_ Header. Indicates the types
          of responses the client can understand.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: Describes the type of the content being sent.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      - description: SKU ID.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          example: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              example:
              - dateRange:
                  from: 2021-12-30T22:00:00-03:00
                  to: 2021-12-30T22:00:00-03:00
                listPrice: 22.9
                minQuantity: 1
                tradePolicyId: "6"
                value: 20.9
              - dateRange:
                  from: 2021-12-30T22:00:00-03:00
                  to: 2021-12-30T22:00:00-03:00
                listPrice: null
                minQuantity: 1
                tradePolicyId: "1"
                value: 18.9
              schema:
                items:
                  $ref: '#/components/schemas/FixedPrice'
                type: array
          description: OK
      summary: Get Fixed Prices
      tags:
      - Prices and Fixed Prices
      x-openapi-router-controller: openapi_server.controllers.prices_and_fixed_prices_controller
  /pricing/prices/{itemId}/fixed/{priceTableId}:
    delete:
      deprecated: false
      description: Deletes all Fixed Prices of an SKU in a specific Price Table or
        Trade Policy.
      operationId: deletefixedpricesonapricetableortradepolicy
      parameters:
      - description: Describes the type of the content being sent.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      - description: HTTP Client Negotiation _Accept_ Header. Indicates the types
          of responses the client can understand.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: SKU ID.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          example: 1
          type: integer
        style: simple
      - description: Price Table or Trade Policy Name.
        explode: false
        in: path
        name: priceTableId
        required: true
        schema:
          example: gold
          type: string
        style: simple
      responses:
        "200":
          description: OK
      summary: Delete Fixed Prices on a price table or trade policy
      tags:
      - Prices and Fixed Prices
      x-openapi-router-controller: openapi_server.controllers.prices_and_fixed_prices_controller
    get:
      deprecated: false
      description: "Retrieves all Fixed Prices on a price table or trade policy. \r\
        \n\r\n## Response body example\r\n\r\n```json\r\n[\r\n    {\r\n        \"\
        tradePolicyId\": \"6\",\r\n        \"value\": 20.9,\r\n        \"listPrice\"\
        : 22.9,\r\n        \"minQuantity\": 1,\r\n        \"dateRange\": {\r\n   \
        \         \"from\": \"2021-12-30T22:00:00-03:00\",\r\n            \"to\":\
        \ \"2021-12-30T22:00:00-04:00\"\r\n        }\r\n    },\r\n    {\r\n      \
        \  \"tradePolicyId\": \"1\",\r\n        \"value\": 18.9,\r\n        \"listPrice\"\
        : null,\r\n        \"minQuantity\": 1\r\n    }\r\n]\r\n```"
      operationId: get_fixed_pricesonapricetable
      parameters:
      - description: Describes the type of the content being sent.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      - description: ""
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: SKU ID.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          example: 1
          type: integer
        style: simple
      - description: Price Table Name
        explode: false
        in: path
        name: priceTableId
        required: true
        schema:
          example: gold
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              example:
              - dateRange:
                  from: 2021-12-30T22:00:00-03:00
                  to: 2021-12-30T22:00:00-04:00
                listPrice: 22.9
                minQuantity: 1
                tradePolicyId: "6"
                value: 20.9
              - listPrice: null
                minQuantity: 1
                tradePolicyId: "1"
                value: 18.9
              schema:
                items:
                  $ref: '#/components/schemas/FixedPrice'
                type: array
          description: OK
      summary: Get Fixed Prices on a price table or trade policy
      tags:
      - Prices and Fixed Prices
      x-openapi-router-controller: openapi_server.controllers.prices_and_fixed_prices_controller
    post:
      deprecated: false
      description: "Creates or updates the fixed prices of an SKU for a specific price\
        \ table or trade policy. You can add one or multiple fixed prices per SKU.\r\
        \n\r\n ## Request body example\r\n\r\n```json\r\n[\r\n  {\r\n    \"value\"\
        : 50.5,\r\n    \"listPrice\": 50.5,\r\n    \"minQuantity\": 2,\r\n    \"dateRange\"\
        : {\r\n      \"from\": \"2021-12-30T22:00:00-03:00\",\r\n      \"to\": \"\
        2021-12-30T22:00:00-04:00\"\r\n    }\r\n  }\r\n]\r\n```"
      operationId: createorupdatefixedpricesonpricetableortradepolicy
      parameters:
      - description: Describes the type of the content being sent.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      - description: HTTP Client Negotiation _Accept_ Header. Indicates the types
          of responses the client can understand.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      - description: SKU ID.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          example: 1
          type: integer
        style: simple
      - description: SKU **price table** name or **trade policy** ID.
        explode: false
        in: path
        name: priceTableId
        required: true
        schema:
          example: priceTableA
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/createorupdatefixedpricesonpricetableortradepolicy_request_inner'
              title: ""
              type: array
        description: ""
        x-body-name: body
      responses:
        "200":
          description: OK
      summary: Create or Update Fixed Prices on a price table or trade policy
      tags:
      - Prices and Fixed Prices
      x-openapi-router-controller: openapi_server.controllers.prices_and_fixed_prices_controller
      x-codegen-request-body-name: body
  /pricing/tables:
    get:
      deprecated: false
      description: "This method will list all price tables.\r\n\r\n## Response body\
        \ example\r\n\r\n```json\r\n[\r\n    \"1\",\r\n    \"2\",\r\n    \"3\",\r\n\
        \    \"b2c\",\r\n    \"b2b\",\r\n    \"gold\"\r\n]\r\n```"
      operationId: listpricetables
      parameters:
      - description: Describes the type of the content being sent.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/json
          type: string
        style: simple
      - description: HTTP Client Negotiation _Accept_ Header. Indicates the types
          of responses the client can understand.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - "1"
              - "2"
              - "3"
              - b2c
              - b2b
              - gold
              schema:
                description: Array of price tables.
                items:
                  description: Price table name.
                  type: string
                type: array
          description: OK
      servers:
      - url: "https://api.vtex.com/{account}/pricing"
        variables:
          account:
            default: DefaultParameterValue
      summary: List price tables
      tags:
      - Price Tables
      x-openapi-router-controller: openapi_server.controllers.price_tables_controller
components:
  schemas:
    DateRange:
      description: Trade Policy Fixed Price Validity Period Object.
      example:
        from: 2017-12-07T14:30:00Z
        to: 2017-12-30T14:30:00Z
      properties:
        from:
          description: Indicates the date and time when the fixed price will start
            to be valid.
          type: string
        to:
          description: Indicates the date and time from which the fixed price will
            no longer be valid.
          type: string
      required:
      - from
      - to
      title: dateRange
      type: object
    FixedPrice:
      example:
        dateRange:
          from: 2017-12-07T14:30:00Z
          to: 2017-12-30T14:30:00Z
        listPrice: null
        minQuantity: 1
        tradePolicyId: "9"
        value: 300
      properties:
        dateRange:
          $ref: '#/components/schemas/DateRange'
        listPrice:
          description: Trade Policy List Price Value.
          nullable: true
          type: number
        minQuantity:
          description: Trade Policy Fixed Price Minimum Item Quantity.
          format: int32
          type: integer
        tradePolicyId:
          description: Trade Policy ID.
          type: string
        value:
          description: Trade Policy Fixed Price Value.
          type: number
      required:
      - listPrice
      - minQuantity
      - tradePolicyId
      - value
      title: FixedPrice
      type: object
    Getcomputedprice:
      example:
        costPrice: 76.92
        listPrice: 30
        priceValidUntil: 2018-12-20T18:12:14Z
        sellingPrice: 18.9
        tradePolicyId: "1"
      properties:
        costPrice:
          description: Cost price.
          type: number
        listPrice:
          description: "Trade Policy List Price, also known as \"from\" price."
          format: int32
          type: integer
        priceValidUntil:
          description: "Date until when the computed price will be valid, due to price\
            \ scheduling. If no price scheduling applies, this will be set a year\
            \ from the current time."
          type: string
        sellingPrice:
          description: "Computed Price before applying coupons, promotions and taxes.\
            \ This price may change before reaching the shelf."
          type: number
        tradePolicyId:
          description: Trade Policy ID.
          type: string
      required:
      - listPrice
      - priceValidUntil
      - sellingPrice
      - tradePolicyId
      title: Get Computed Price response
      type: object
    Getprice:
      example:
        basePrice: 250
        costPrice: 10
        fixedPrices:
        - listPrice: null
          minQuantity: 1
          tradePolicyId: "1"
          value: 666.66
        - listPrice: null
          minQuantity: 1
          tradePolicyId: "9"
          value: 4500
        - dateRange:
            from: 2017-12-07T14:30:00Z
            to: 2017-12-30T14:30:00Z
          listPrice: null
          minQuantity: 1
          tradePolicyId: "9"
          value: 600
        - dateRange:
            from: 2017-12-20T14:30:00Z
            to: 2017-12-22T14:30:00Z
          listPrice: null
          minQuantity: 1
          tradePolicyId: "9"
          value: 5555.55
        - dateRange:
            from: 2017-12-06T15:00:00Z
            to: 2017-12-14T15:00:00Z
          listPrice: null
          minQuantity: 1
          tradePolicyId: "9"
          value: 555.55
        - listPrice: null
          minQuantity: 1
          tradePolicyId: "10"
          value: 5555.55
        - listPrice: null
          minQuantity: 1
          tradePolicyId: "18"
          value: 555.55
        itemId: "1234512354"
        listPrice: 300
        markup: 2400
      properties:
        basePrice:
          description: SKU's reference price.
          format: int32
          type: integer
        costPrice:
          description: SKU's cost price.
          format: int32
          type: integer
        fixedPrices:
          description: The fixed price is a price that overlaps all other existing
            price configurations of a price table.
          items:
            $ref: '#/components/schemas/FixedPrice'
          type: array
        itemId:
          description: SKU ID.
          type: string
        listPrice:
          description: Suggested retail price for the SKU.
          format: int32
          type: integer
        markup:
          description: Desired profit margin with the SKU's sale.
          format: int32
          type: integer
      required:
      - basePrice
      - costPrice
      - fixedPrices
      - itemId
      - listPrice
      - markup
      title: Get Price response
      type: object
    PricingConfiguration:
      example:
        blockAccount: false
        blockedRoutes: null
        defaultMarkup: 100
        hasMigrated: true
        hasOptionalBasePrice: false
        hasPriceInheritance: false
        migrationStatus: Completed
        minimumMarkups:
          "1": 100
          "2": 90
        priceInheritance: never
        priceTableLimit: null
        priceTableSelectionStrategy: first
        priceVariation:
          lowerLimit: null
          upperLimit: null
        sellersToOverride: []
        tradePolicyConfigs: []
      properties:
        blockAccount:
          description: Defines if access to the Pricing APIs is blocked for external
            requests.
          example: false
          type: boolean
        blockedRoutes:
          description: Array with all blocked routes.
          items:
            description: Blocked route.
            type: string
          nullable: true
          type: array
        defaultMarkup:
          description: Account default markup.
          example: 2
          format: int32
          type: integer
        hasMigrated:
          description: Defines if the account has migrated to Pricing V2.
          example: true
          type: boolean
        hasOptionalBasePrice:
          description: Defines if optional base price is allowed.
          example: false
          type: boolean
        hasPriceInheritance:
          deprecated: true
          description: Deprecated. Use the `priceInheritance` field instead.
          type: boolean
        migrationStatus:
          description: Pricing V2 migration status.
          example: Completed
          type: string
        minimumMarkups:
          additionalProperties:
            format: int32
            type: integer
          description: Account minimum markup.
          type: object
        priceInheritance:
          description: "Condition of price inheritance from its parent account. This\
            \ field can have three possible values: `never` if the store should never\
            \ inherit prices, `nonexistent` if the store should only inherit prices\
            \ in case of nonexistent prices for a given product, or `always` if the\
            \ store should always inherit prices, regardless of its own prices."
          example: nonexistent
          type: string
        priceTableLimit:
          description: Price Table Limit.
          example: 100
          nullable: true
          type: integer
        priceTableSelectionStrategy:
          default: first
          description: "The strategy used to get prices when there is more than one\
            \ option. Possible values: `first`, `highest`, `lowest`. Default: `first`."
          example: highest
          type: string
        priceVariation:
          $ref: '#/components/schemas/PricingConfiguration_priceVariation'
        sellersToOverride:
          description: Overrides prices from sellers.
          items: {}
          type: array
        tradePolicyConfigs:
          description: Trade Policy Configurations array.
          items:
            $ref: '#/components/schemas/PricingConfiguration_tradePolicyConfigs_inner'
          type: array
      required:
      - defaultMarkup
      - hasMigrated
      - minimumMarkups
      title: Pricing Configuration response
      type: object
    GetPricingv2Status_200_response:
      example:
        hasMigrated: true
        isActive: true
      properties:
        hasMigrated:
          description: Defines if the account has migrated to Pricing V2.
          example: true
          title: hasMigrated
          type: boolean
        isActive:
          description: Defines if the account is active.
          example: true
          title: isActive
          type: boolean
      title: GetPricingv2Status_200_response
      type: object
    getallpricetablesandrules_200_response_inner_rules_inner_context_dateRange:
      description: The rule will be active during this time range.
      example:
        from: from
        to: to
      nullable: true
      properties:
        from:
          description: "Date when rule will be activated. Date format: `RFC3339`."
          title: from
          type: string
        to:
          description: "Date when the rule will be deactivated. Date format: `RFC3339`."
          title: to
          type: string
      title: getallpricetablesandrules_200_response_inner_rules_inner_context_dateRange
      type: object
    getallpricetablesandrules_200_response_inner_rules_inner_context_markupRange:
      description: "For an item to be eligible to the rule, it's markup should be\
        \ in this Markup Range."
      example:
        from: 6
        to: 1
      nullable: true
      properties:
        from:
          description: Item markup should be greater than or equal to this value.
          title: from
          type: integer
        to:
          description: Item markup should be less than or equal to this value.
          title: to
          type: integer
      title: getallpricetablesandrules_200_response_inner_rules_inner_context_markupRange
      type: object
    getallpricetablesandrules_200_response_inner_rules_inner_context:
      description: "Rule Context is a group of filters to be checked at an item level\
        \ when applying the rule. If all those filters check out, the rule will be\
        \ applied for that item, unless there is a fixed price for that item."
      example:
        markupRange:
          from: 6
          to: 1
        brands:
          key:
            key: brands
        dateRange:
          from: from
          to: to
        internalCategories: "{}"
        categories:
          key:
            key: categories
        stockStatuses: "{}"
      properties:
        brands:
          additionalProperties:
            additionalProperties:
              description: Brand Name.
              type: string
            description: Brand ID.
            type: object
          description: "Brands that an item should have to be eligible for the rule.\
            \ Format: key: `brandId`, value: `brandName`."
          title: brands
          type: object
        categories:
          additionalProperties:
            additionalProperties:
              description: Category Name.
              type: string
            description: Category ID.
            type: object
          description: "Categories that an item should have to be eligible for the\
            \ rule. Format: key: `categoryId`, value: `categoryName`."
          title: categories
          type: object
        dateRange:
          $ref: '#/components/schemas/getallpricetablesandrules_200_response_inner_rules_inner_context_dateRange'
        internalCategories:
          description: Internal Categories.
          nullable: true
          title: internalCategories
          type: object
        markupRange:
          $ref: '#/components/schemas/getallpricetablesandrules_200_response_inner_rules_inner_context_markupRange'
        stockStatuses:
          description: Stock statuses.
          nullable: true
          title: stockStatuses
          type: object
      title: getallpricetablesandrules_200_response_inner_rules_inner_context
      type: object
    getallpricetablesandrules_200_response_inner_rules_inner:
      description: Object containing a price table rule.
      example:
        context:
          markupRange:
            from: 6
            to: 1
          brands:
            key:
              key: brands
          dateRange:
            from: from
            to: to
          internalCategories: "{}"
          categories:
            key:
              key: categories
          stockStatuses: "{}"
        id: 5.962133916683182
      properties:
        context:
          $ref: '#/components/schemas/getallpricetablesandrules_200_response_inner_rules_inner_context'
        id:
          description: Rule ID.
          title: id
          type: number
      title: getallpricetablesandrules_200_response_inner_rules_inner
      type: object
    getallpricetablesandrules_200_response_inner:
      example:
        tradePolicyId: tradePolicyId
        percentualModifier: 0
        rules:
        - context:
            markupRange:
              from: 6
              to: 1
            brands:
              key:
                key: brands
            dateRange:
              from: from
              to: to
            internalCategories: "{}"
            categories:
              key:
                key: categories
            stockStatuses: "{}"
          id: 5.962133916683182
        - context:
            markupRange:
              from: 6
              to: 1
            brands:
              key:
                key: brands
            dateRange:
              from: from
              to: to
            internalCategories: "{}"
            categories:
              key:
                key: categories
            stockStatuses: "{}"
          id: 5.962133916683182
      properties:
        percentualModifier:
          description: Percentual modifier.
          title: percentualModifier
          type: integer
        rules:
          description: Array of rules for the price table.
          items:
            $ref: '#/components/schemas/getallpricetablesandrules_200_response_inner_rules_inner'
          title: rules
          type: array
        tradePolicyId:
          description: Trade Policy ID (Price Table ID).
          title: tradePolicyId
          type: string
      title: getallpricetablesandrules_200_response_inner
      type: object
    Getrulesforapricetable_200_response:
      example:
        tradePolicyId: tradePolicyId
        percentualModifier: 0
        rules:
        - context:
            markupRange:
              from: 6
              to: 1
            brands:
              key:
                key: brands
            dateRange:
              from: from
              to: to
            internalCategories: "{}"
            categories:
              key:
                key: categories
            stockStatuses: "{}"
          id: 5.962133916683182
        - context:
            markupRange:
              from: 6
              to: 1
            brands:
              key:
                key: brands
            dateRange:
              from: from
              to: to
            internalCategories: "{}"
            categories:
              key:
                key: categories
            stockStatuses: "{}"
          id: 5.962133916683182
      properties:
        percentualModifier:
          description: Percentual modifier.
          title: percentualModifier
          type: integer
        rules:
          description: Array of rules for the price table.
          items:
            $ref: '#/components/schemas/getallpricetablesandrules_200_response_inner_rules_inner'
          title: rules
          type: array
        tradePolicyId:
          description: Trade Policy ID (Price Table ID).
          title: tradePolicyId
          type: string
      title: Getrulesforapricetable_200_response
      type: object
    dateRange:
      description: The rule will be active during this time range.
      properties:
        from:
          description: "Date when rule will be activated. Date format: `RFC3339`."
          example: 2019-10-23T19:00:00.000Z
          title: from
          type: string
        to:
          description: "Date when the rule will be deactivated. Date format: `RFC3339`."
          example: 2019-10-26T00:00:00.000Z
          title: to
          type: string
      required:
      - from
      - to
      title: dateRange
      type: object
    markupRange:
      description: "For an item to be eligible to the rule, it's markup should be\
        \ in this Markup Range."
      nullable: true
      properties:
        from:
          description: Item markup should be greater than or equal to this value.
          example: 0
          title: from
          type: integer
        to:
          description: Item markup should be less than or equal to this value.
          example: 200
          title: to
          type: integer
      required:
      - from
      - to
      title: markupRange
      type: object
      example: null
    context:
      description: "Rule Context is a group of filters to be checked at an item level\
        \ when applying the rule. If all those filters check out, the rule will be\
        \ applied for that item, unless there is a fixed price for that item."
      properties:
        brands:
          additionalProperties:
            additionalProperties:
              description: Brand Name.
              example: Goldman
              type: string
            description: Brand ID.
            example: "421"
            type: object
          description: "Brands that an item should have to be eligible for the rule.\
            \ Format: key: `brandId`, value: `brandName`."
          title: brands
          type: object
        categories:
          additionalProperties:
            additionalProperties:
              description: Category Name.
              example: Books
              type: string
            description: Category ID.
            example: "209"
            type: object
          description: "Categories that an item should have to be eligible for the\
            \ rule. Format: key: `categoryId`, value: `categoryName`."
          title: categories
          type: object
        dateRange:
          $ref: '#/components/schemas/dateRange'
        internalCategories:
          description: Internal Categories.
          nullable: true
          title: internalCategories
          type: object
          example: null
        markupRange:
          $ref: '#/components/schemas/markupRange'
        stockStatuses:
          description: Stock statuses.
          nullable: true
          title: stockStatuses
          type: object
          example: null
      required:
      - brands
      - categories
      - dateRange
      - markupRange
      title: context
      type: object
    rules_inner:
      description: Object containing a price table rule.
      properties:
        context:
          $ref: '#/components/schemas/context'
        id:
          description: Rule ID.
          example: 0
          title: id
          type: integer
        percentualModifier:
          description: Percentual modifier.
          example: 0
          title: percentualModifier
          type: number
      required:
      - context
      - id
      - percentualModifier
      title: rules_inner
      type: object
    _pricing_pipeline_catalog__priceTableId__put_request:
      example:
        rules:
        - context:
            brands:
              Brand ID: "2000002"
              Brand Name: Whiskas
            categories:
              Category ID: "1"
              Category Name: Alimentação
            dateRange:
              from: 2022-01-23T19:00:00.000Z
              to: 2023-10-26T00:00:00.000Z
            markupRange:
              from: 0
              to: 200
          id: 1
          percentualModifier: 0
      properties:
        rules:
          description: Array of rules for the price table.
          items:
            $ref: '#/components/schemas/rules_inner'
          title: rules
          type: array
      required:
      - rules
      title: _pricing_pipeline_catalog__priceTableId__put_request
      type: object
    dateRange_1:
      description: Period of time when the fixed price will be applied to the SKU.
      properties:
        from:
          description: Start date of the price.
          example: 2021-12-30T22:00:00-03:00
          title: from
          type: string
        to:
          description: End date of the price.
          example: 2021-12-30T22:00:00-03:00
          title: to
          type: string
      required:
      - from
      - to
      title: dateRange
      type: object
    fixedPrices:
      default: []
      description: Array with general information about the SKU's fixed prices.
      properties:
        dateRange:
          $ref: '#/components/schemas/dateRange_1'
        listPrice:
          description: SKU List Fixed Price.
          example: 50.5
          title: listPrice
          type: number
        minQuantity:
          description: Minimum quantity of the SKU for the fixed price to be applied.
          example: 2
          title: minQuantity
          type: integer
        tradePolicyId:
          description: Trade policy name or ID that will have the fixed price configured.
          example: "1"
          title: tradePolicyId
          type: string
        value:
          description: Fixed price value.
          example: 50.5
          title: value
          type: number
      required:
      - minQuantity
      - tradePolicyId
      - value
      title: fixedPrices
    CreateUpdatePriceOrFixedPrice_request:
      properties:
        basePrice:
          default: 100
          description: "SKU selling base price. If you decide to fill only the `basePrice`\
            \ item, the `markup` and `costPrice` will be automatically generated to\
            \ adapt to the number inserted in `basePrice`."
          title: basePrice
          type: number
        costPrice:
          default: 35
          description: "SKU selling cost price. If you decide to fill the `costPrice`\
            \ item, you must also fill the `markup` and `basePrice` will be automatically\
            \ generated based on both values."
          title: costPrice
          type: number
        fixedPrices:
          items:
            $ref: '#/components/schemas/fixedPrices'
          title: fixedPrices
          type: array
        listPrice:
          default: 50
          description: SKU's suggested selling price.
          title: listPrice
          type: number
        markup:
          default: 30
          description: "The profit percentage that is to be obtained from the sale\
            \ of that SKU. If you decide to fill the `markup` item, you must also\
            \ fill the `costPrice`. The `basePrice` will be automatically generated\
            \ based on both values."
          title: markup
          type: integer
      required:
      - basePrice
      - listPrice
      - markup
      title: CreateUpdatePriceOrFixedPrice_request
      type: object
    dateRange_2:
      description: Period of time when the fixed price will be applied to the SKU.
      properties:
        from:
          description: Start date of the price.
          example: 2021-12-30T22:00:00-03:00
          title: from
          type: string
        to:
          description: End date of the price.
          example: 2021-12-30T22:00:00-04:00
          title: to
          type: string
      required:
      - from
      - to
      title: dateRange
      type: object
    createorupdatefixedpricesonpricetableortradepolicy_request_inner:
      properties:
        dateRange:
          $ref: '#/components/schemas/dateRange_2'
        listPrice:
          description: SKU List Fixed Price.
          example: 50.5
          title: listPrice
          type: number
        minQuantity:
          description: The minimum SKU quantity for the fixed price to be applied.
          example: 2
          title: minQuantity
          type: integer
        value:
          description: Fixed price value.
          example: 50.5
          title: value
          type: number
      required:
      - minQuantity
      - value
      title: createorupdatefixedpricesonpricetableortradepolicy_request_inner
      type: object
    PricingConfiguration_priceVariation:
      description: Price Variation object.
      properties:
        lowerLimit:
          description: Lower variation limit.
          example: 1
          nullable: true
          title: lowerLimit
          type: integer
        upperLimit:
          description: Upper variation limit.
          example: 10
          nullable: true
          title: upperLimit
          type: integer
      title: PricingConfiguration_priceVariation
      type: object
    PricingConfiguration_tradePolicyConfigs_inner:
      properties:
        minimumMarkup:
          description: Trade Policy Minimum Markup.
          example: 80
          title: minimumMarkup
          type: integer
        rulesShouldAffectListPrice:
          description: Defines if the Price Rule should affect the list price too.
          example: false
          title: rulesShouldAffectListPrice
          type: boolean
        tradePolicyId:
          description: Trade Policy ID.
          example: b2c
          title: tradePolicyId
          type: string
      title: PricingConfiguration_tradePolicyConfigs_inner
      type: object
  securitySchemes:
    appKey:
      in: header
      name: X-VTEX-API-AppKey
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_appKey
    appToken:
      in: header
      name: X-VTEX-API-AppToken
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_appToken
