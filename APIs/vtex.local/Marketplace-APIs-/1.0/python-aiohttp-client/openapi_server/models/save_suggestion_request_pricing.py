# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SaveSuggestionRequestPricing(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, currency: str=None, currency_symbol: str=None, sale_price: int=None):
        """SaveSuggestionRequestPricing - a model defined in OpenAPI

        :param currency: The currency of this SaveSuggestionRequestPricing.
        :param currency_symbol: The currency_symbol of this SaveSuggestionRequestPricing.
        :param sale_price: The sale_price of this SaveSuggestionRequestPricing.
        """
        self.openapi_types = {
            'currency': str,
            'currency_symbol': str,
            'sale_price': int
        }

        self.attribute_map = {
            'currency': 'Currency',
            'currency_symbol': 'CurrencySymbol',
            'sale_price': 'SalePrice'
        }

        self._currency = currency
        self._currency_symbol = currency_symbol
        self._sale_price = sale_price

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SaveSuggestionRequestPricing':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SaveSuggestionRequest_Pricing of this SaveSuggestionRequestPricing.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def currency(self):
        """Gets the currency of this SaveSuggestionRequestPricing.


        :return: The currency of this SaveSuggestionRequestPricing.
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this SaveSuggestionRequestPricing.


        :param currency: The currency of this SaveSuggestionRequestPricing.
        :type currency: str
        """

        self._currency = currency

    @property
    def currency_symbol(self):
        """Gets the currency_symbol of this SaveSuggestionRequestPricing.


        :return: The currency_symbol of this SaveSuggestionRequestPricing.
        :rtype: str
        """
        return self._currency_symbol

    @currency_symbol.setter
    def currency_symbol(self, currency_symbol):
        """Sets the currency_symbol of this SaveSuggestionRequestPricing.


        :param currency_symbol: The currency_symbol of this SaveSuggestionRequestPricing.
        :type currency_symbol: str
        """

        self._currency_symbol = currency_symbol

    @property
    def sale_price(self):
        """Gets the sale_price of this SaveSuggestionRequestPricing.


        :return: The sale_price of this SaveSuggestionRequestPricing.
        :rtype: int
        """
        return self._sale_price

    @sale_price.setter
    def sale_price(self, sale_price):
        """Sets the sale_price of this SaveSuggestionRequestPricing.


        :param sale_price: The sale_price of this SaveSuggestionRequestPricing.
        :type sale_price: int
        """

        self._sale_price = sale_price
