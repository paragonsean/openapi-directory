# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProductSpecification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, field_name: str='Fabric type', field_values: List[str]=None):
        """ProductSpecification - a model defined in OpenAPI

        :param field_name: The field_name of this ProductSpecification.
        :param field_values: The field_values of this ProductSpecification.
        """
        self.openapi_types = {
            'field_name': str,
            'field_values': List[str]
        }

        self.attribute_map = {
            'field_name': 'fieldName',
            'field_values': 'fieldValues'
        }

        self._field_name = field_name
        self._field_values = field_values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProductSpecification':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProductSpecification of this ProductSpecification.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def field_name(self):
        """Gets the field_name of this ProductSpecification.

        Name of the product specification field. Example: 'Fabric'.

        :return: The field_name of this ProductSpecification.
        :rtype: str
        """
        return self._field_name

    @field_name.setter
    def field_name(self, field_name):
        """Sets the field_name of this ProductSpecification.

        Name of the product specification field. Example: 'Fabric'.

        :param field_name: The field_name of this ProductSpecification.
        :type field_name: str
        """

        self._field_name = field_name

    @property
    def field_values(self):
        """Gets the field_values of this ProductSpecification.

        Value of the product specification field. Example: 'Cotton'.

        :return: The field_values of this ProductSpecification.
        :rtype: List[str]
        """
        return self._field_values

    @field_values.setter
    def field_values(self, field_values):
        """Sets the field_values of this ProductSpecification.

        Value of the product specification field. Example: 'Cotton'.

        :param field_values: The field_values of this ProductSpecification.
        :type field_values: List[str]
        """

        self._field_values = field_values
