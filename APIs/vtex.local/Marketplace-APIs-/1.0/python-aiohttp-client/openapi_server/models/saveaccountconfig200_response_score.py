# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Saveaccountconfig200ResponseScore(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, approve: int=None, reject: int=None):
        """Saveaccountconfig200ResponseScore - a model defined in OpenAPI

        :param approve: The approve of this Saveaccountconfig200ResponseScore.
        :param reject: The reject of this Saveaccountconfig200ResponseScore.
        """
        self.openapi_types = {
            'approve': int,
            'reject': int
        }

        self.attribute_map = {
            'approve': 'Approve',
            'reject': 'Reject'
        }

        self._approve = approve
        self._reject = reject

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Saveaccountconfig200ResponseScore':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Saveaccountconfig_200_response_Score of this Saveaccountconfig200ResponseScore.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def approve(self):
        """Gets the approve of this Saveaccountconfig200ResponseScore.

        Score to approve SKUs sent by sellers.

        :return: The approve of this Saveaccountconfig200ResponseScore.
        :rtype: int
        """
        return self._approve

    @approve.setter
    def approve(self, approve):
        """Sets the approve of this Saveaccountconfig200ResponseScore.

        Score to approve SKUs sent by sellers.

        :param approve: The approve of this Saveaccountconfig200ResponseScore.
        :type approve: int
        """

        self._approve = approve

    @property
    def reject(self):
        """Gets the reject of this Saveaccountconfig200ResponseScore.

        Score to reject SKUs sent by sellers.

        :return: The reject of this Saveaccountconfig200ResponseScore.
        :rtype: int
        """
        return self._reject

    @reject.setter
    def reject(self, reject):
        """Sets the reject of this Saveaccountconfig200ResponseScore.

        Score to reject SKUs sent by sellers.

        :param reject: The reject of this Saveaccountconfig200ResponseScore.
        :type reject: int
        """

        self._reject = reject
