# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Specifications(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, embalagem: str=None):
        """Specifications - a model defined in OpenAPI

        :param embalagem: The embalagem of this Specifications.
        """
        self.openapi_types = {
            'embalagem': str
        }

        self.attribute_map = {
            'embalagem': 'Embalagem'
        }

        self._embalagem = embalagem

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Specifications':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Specifications of this Specifications.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def embalagem(self):
        """Gets the embalagem of this Specifications.

        Packaging specifications. Should include package's weight.

        :return: The embalagem of this Specifications.
        :rtype: str
        """
        return self._embalagem

    @embalagem.setter
    def embalagem(self, embalagem):
        """Sets the embalagem of this Specifications.

        Packaging specifications. Should include package's weight.

        :param embalagem: The embalagem of this Specifications.
        :type embalagem: str
        """
        if embalagem is None:
            raise ValueError("Invalid value for `embalagem`, must not be `None`")

        self._embalagem = embalagem
