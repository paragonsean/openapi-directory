/*
 * Suggestions
 *   The **Marketplace API** enables marketplaces and sellers hosted on VTEX to perform their collaborative operations.      >⚠️ The marketplace must [create an appKey and appToken](https://developers.vtex.com/docs/guides/getting-started-authentication) for each non-VTEX seller that will use this API.    ## Index    ### Notification    Endpoints used by sellers to notify marketplaces that the price or inventory language has changed for one of their SKUs.    `POST` [Notify marketplace of price update](https://developers.vtex.com/docs/api-reference/marketplace-apis#post-/notificator/-sellerId-/changenotification/-skuId-/price)    `POST` [Notify marketplace of inventory update](https://developers.vtex.com/docs/api-reference/marketplace-apis#post-/notificator/-sellerId-/changenotification/-skuId-/inventory)      ### Suggestions    #### Get Suggestions    Search and filter all suggestions using specific criteria.    `GET` [Get all SKU Suggestions](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions)    `GET` [Get SKU Suggestion by ID](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/-sellerId-/-sellerSkuId-)      #### Manage Suggestions    Send or delete SKU suggestions from the seller to marketplace.    `PUT` [Send SKU Suggestion](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/-sellerId-/-sellerSkuId-)    `DELETE` [Delete SKU Suggestion](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#delete-/suggestions/-sellerId-/-sellerSkuId-)      #### Get Versions    Search and filter all versions of suggestions, using specific criteria.    `GET` [Get all versions](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/-sellerId-/-sellerskuid-/versions)    `GET` [Get version by ID](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/-sellerId-/-sellerskuid-/versions/-version-)      #### Match Received SKUs    Match SKU suggestions received in the marketplace.    `PUT` [Match Received SKUs individually](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/-sellerId-/-sellerskuid-/versions/-version-/matches/-matchid-)    `PUT` [Match Multiple Received SKUs](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/matches/action/-actionName-)      #### SKU Approval Settings    Allows marketplaces to configure rules for automatically and manually approving SKUs received from sellers.    `GET`[Get autoApprove Status in Account Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/configuration/autoapproval/toggle)      `PUT`[Activate autoApprove in Marketplace's Account](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration/autoapproval/toggle)      `GET`[Get Account's Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/configuration)    `PUT`[Save Account's Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration)    `GET`[Get Seller's Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/configuration/seller/-sellerId-)    `PUT`[Save Seller's Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration/seller/-sellerId-)    `PUT`[Activate autoApprove Setting for a Seller](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration/autoapproval/toggle/seller/-sellerId-)         ### Matched Offers    Offers are seller products and SKUs that were sent to the marketplace, and already have their price and inventory level configured.    `GET`[Get Matched Offers List](https://developers.vtex.com/docs/api-reference/marketplace-apis#get-/offer-manager/pvt/offers)    `GET`[Get Matched Offer's Data by SKU ID](https://developers.vtex.com/docs/api-reference/marketplace-apis#get-/offer-manager/pvt/product/-productId-/sku/-skuId-)      `GET`[Get Matched Offer's Data by Product ID](https://developers.vtex.com/docs/api-reference/marketplace-apis#get-/offer-manager/pvt/product/-productId-)  
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Matcher;
import org.openapitools.client.model.Score;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * SaveaccountconfigRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:55:27.999155-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SaveaccountconfigRequest {
  public static final String SERIALIZED_NAME_MATCH_FLUX = "MatchFlux";
  @SerializedName(SERIALIZED_NAME_MATCH_FLUX)
  private String matchFlux = "autoApprove";

  public static final String SERIALIZED_NAME_MATCHERS = "Matchers";
  @SerializedName(SERIALIZED_NAME_MATCHERS)
  private List<Matcher> matchers = new ArrayList<>();

  public static final String SERIALIZED_NAME_SCORE = "Score";
  @SerializedName(SERIALIZED_NAME_SCORE)
  private Score score;

  public static final String SERIALIZED_NAME_SPECIFICATIONS_MAPPING = "SpecificationsMapping";
  @SerializedName(SERIALIZED_NAME_SPECIFICATIONS_MAPPING)
  private List<String> specificationsMapping = new ArrayList<>();

  public SaveaccountconfigRequest() {
  }

  public SaveaccountconfigRequest matchFlux(String matchFlux) {
    this.matchFlux = matchFlux;
    return this;
  }

  /**
   * This field determines the type of approval configuration applied to SKUs received  from a seller. The possible values include:   - &#x60;default&#x60; where the Matcher reviews the SKU, and approves it based on its score   - &#x60;manual&#x60; for manual approvals through the Received SKU UI or Match API   - &#x60;autoApprove&#x60; for every SKU received from a given seller to be approved automatically, regardless of the Matcher Score.
   * @return matchFlux
   */
  @javax.annotation.Nonnull
  public String getMatchFlux() {
    return matchFlux;
  }

  public void setMatchFlux(String matchFlux) {
    this.matchFlux = matchFlux;
  }


  public SaveaccountconfigRequest matchers(List<Matcher> matchers) {
    this.matchers = matchers;
    return this;
  }

  public SaveaccountconfigRequest addMatchersItem(Matcher matchersItem) {
    if (this.matchers == null) {
      this.matchers = new ArrayList<>();
    }
    this.matchers.add(matchersItem);
    return this;
  }

  /**
   * Matchers for approving and rejecting SKUs received from sellers.
   * @return matchers
   */
  @javax.annotation.Nonnull
  public List<Matcher> getMatchers() {
    return matchers;
  }

  public void setMatchers(List<Matcher> matchers) {
    this.matchers = matchers;
  }


  public SaveaccountconfigRequest score(Score score) {
    this.score = score;
    return this;
  }

  /**
   * Get score
   * @return score
   */
  @javax.annotation.Nonnull
  public Score getScore() {
    return score;
  }

  public void setScore(Score score) {
    this.score = score;
  }


  public SaveaccountconfigRequest specificationsMapping(List<String> specificationsMapping) {
    this.specificationsMapping = specificationsMapping;
    return this;
  }

  public SaveaccountconfigRequest addSpecificationsMappingItem(String specificationsMappingItem) {
    if (this.specificationsMapping == null) {
      this.specificationsMapping = new ArrayList<>();
    }
    this.specificationsMapping.add(specificationsMappingItem);
    return this;
  }

  /**
   * This attribute maps product and SKU specifications.
   * @return specificationsMapping
   */
  @javax.annotation.Nonnull
  public List<String> getSpecificationsMapping() {
    return specificationsMapping;
  }

  public void setSpecificationsMapping(List<String> specificationsMapping) {
    this.specificationsMapping = specificationsMapping;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SaveaccountconfigRequest saveaccountconfigRequest = (SaveaccountconfigRequest) o;
    return Objects.equals(this.matchFlux, saveaccountconfigRequest.matchFlux) &&
        Objects.equals(this.matchers, saveaccountconfigRequest.matchers) &&
        Objects.equals(this.score, saveaccountconfigRequest.score) &&
        Objects.equals(this.specificationsMapping, saveaccountconfigRequest.specificationsMapping);
  }

  @Override
  public int hashCode() {
    return Objects.hash(matchFlux, matchers, score, specificationsMapping);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SaveaccountconfigRequest {\n");
    sb.append("    matchFlux: ").append(toIndentedString(matchFlux)).append("\n");
    sb.append("    matchers: ").append(toIndentedString(matchers)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    specificationsMapping: ").append(toIndentedString(specificationsMapping)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("MatchFlux");
    openapiFields.add("Matchers");
    openapiFields.add("Score");
    openapiFields.add("SpecificationsMapping");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("MatchFlux");
    openapiRequiredFields.add("Matchers");
    openapiRequiredFields.add("Score");
    openapiRequiredFields.add("SpecificationsMapping");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SaveaccountconfigRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SaveaccountconfigRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SaveaccountconfigRequest is not found in the empty JSON string", SaveaccountconfigRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SaveaccountconfigRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SaveaccountconfigRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : SaveaccountconfigRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("MatchFlux").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MatchFlux` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MatchFlux").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("Matchers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `Matchers` to be an array in the JSON string but got `%s`", jsonObj.get("Matchers").toString()));
      }

      JsonArray jsonArraymatchers = jsonObj.getAsJsonArray("Matchers");
      // validate the required field `Matchers` (array)
      for (int i = 0; i < jsonArraymatchers.size(); i++) {
        Matcher.validateJsonElement(jsonArraymatchers.get(i));
      };
      // validate the required field `Score`
      Score.validateJsonElement(jsonObj.get("Score"));
      // ensure the required json array is present
      if (jsonObj.get("SpecificationsMapping") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("SpecificationsMapping").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `SpecificationsMapping` to be an array in the JSON string but got `%s`", jsonObj.get("SpecificationsMapping").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SaveaccountconfigRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SaveaccountconfigRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SaveaccountconfigRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SaveaccountconfigRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<SaveaccountconfigRequest>() {
           @Override
           public void write(JsonWriter out, SaveaccountconfigRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SaveaccountconfigRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SaveaccountconfigRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SaveaccountconfigRequest
   * @throws IOException if the JSON string is invalid with respect to SaveaccountconfigRequest
   */
  public static SaveaccountconfigRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SaveaccountconfigRequest.class);
  }

  /**
   * Convert an instance of SaveaccountconfigRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

