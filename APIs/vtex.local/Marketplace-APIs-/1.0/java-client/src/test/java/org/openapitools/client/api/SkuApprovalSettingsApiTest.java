/*
 * Suggestions
 *   The **Marketplace API** enables marketplaces and sellers hosted on VTEX to perform their collaborative operations.      >⚠️ The marketplace must [create an appKey and appToken](https://developers.vtex.com/docs/guides/getting-started-authentication) for each non-VTEX seller that will use this API.    ## Index    ### Notification    Endpoints used by sellers to notify marketplaces that the price or inventory language has changed for one of their SKUs.    `POST` [Notify marketplace of price update](https://developers.vtex.com/docs/api-reference/marketplace-apis#post-/notificator/-sellerId-/changenotification/-skuId-/price)    `POST` [Notify marketplace of inventory update](https://developers.vtex.com/docs/api-reference/marketplace-apis#post-/notificator/-sellerId-/changenotification/-skuId-/inventory)      ### Suggestions    #### Get Suggestions    Search and filter all suggestions using specific criteria.    `GET` [Get all SKU Suggestions](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions)    `GET` [Get SKU Suggestion by ID](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/-sellerId-/-sellerSkuId-)      #### Manage Suggestions    Send or delete SKU suggestions from the seller to marketplace.    `PUT` [Send SKU Suggestion](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/-sellerId-/-sellerSkuId-)    `DELETE` [Delete SKU Suggestion](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#delete-/suggestions/-sellerId-/-sellerSkuId-)      #### Get Versions    Search and filter all versions of suggestions, using specific criteria.    `GET` [Get all versions](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/-sellerId-/-sellerskuid-/versions)    `GET` [Get version by ID](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/-sellerId-/-sellerskuid-/versions/-version-)      #### Match Received SKUs    Match SKU suggestions received in the marketplace.    `PUT` [Match Received SKUs individually](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/-sellerId-/-sellerskuid-/versions/-version-/matches/-matchid-)    `PUT` [Match Multiple Received SKUs](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/matches/action/-actionName-)      #### SKU Approval Settings    Allows marketplaces to configure rules for automatically and manually approving SKUs received from sellers.    `GET`[Get autoApprove Status in Account Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/configuration/autoapproval/toggle)      `PUT`[Activate autoApprove in Marketplace's Account](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration/autoapproval/toggle)      `GET`[Get Account's Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/configuration)    `PUT`[Save Account's Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration)    `GET`[Get Seller's Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/configuration/seller/-sellerId-)    `PUT`[Save Seller's Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration/seller/-sellerId-)    `PUT`[Activate autoApprove Setting for a Seller](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration/autoapproval/toggle/seller/-sellerId-)         ### Matched Offers    Offers are seller products and SKUs that were sent to the marketplace, and already have their price and inventory level configured.    `GET`[Get Matched Offers List](https://developers.vtex.com/docs/api-reference/marketplace-apis#get-/offer-manager/pvt/offers)    `GET`[Get Matched Offer's Data by SKU ID](https://developers.vtex.com/docs/api-reference/marketplace-apis#get-/offer-manager/pvt/product/-productId-/sku/-skuId-)      `GET`[Get Matched Offer's Data by Product ID](https://developers.vtex.com/docs/api-reference/marketplace-apis#get-/offer-manager/pvt/product/-productId-)  
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Getaccountconfig200Response;
import org.openapitools.client.model.GetautoApprovevaluefromconfig200Response;
import org.openapitools.client.model.PutselleraccountconfigRequest;
import org.openapitools.client.model.Saveaccountconfig200Response;
import org.openapitools.client.model.SaveaccountconfigRequest;
import org.openapitools.client.model.Saveautoapproveforaccount200Response;
import org.openapitools.client.model.SaveautoapproveforaccountRequest;
import org.openapitools.client.model.SaveautoapproveforaccountsellerRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SkuApprovalSettingsApi
 */
@Disabled
public class SkuApprovalSettingsApiTest {

    private final SkuApprovalSettingsApi api = new SkuApprovalSettingsApi();

    /**
     * Get Account&#39;s Approval Settings
     *
     * This endpoint retrieves the current approval settings of a marketplace&#39;s Received SKUs module. Its response includes:   - &#x60;Score&#x60;: Matcher scores for approving and rejecting SKUs received from sellers.   - &#x60;Matchers&#x60;: All Matchers configured on the marketplace, and their respective details.   - &#x60;SpecificationsMapping&#x60;: Mapping of product and SKU specifications, per seller.   - &#x60;MatchFlux&#x60;: This field determines the type of approval configuration applied to SKUs received from a seller.   The possible values include:   -&#x60;default&#x60;, where the Matcher reviews the SKU, and approves it based on its score.   -&#x60;manual&#x60;, for manual approvals through the Received SKU UI, or Match API.   -&#x60;autoApprove&#x60;, for every SKU received from a given seller to be approved automatically, regardless of their Matcher Score.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getaccountconfigTest() throws ApiException {
        String accountName = null;
        String accept = null;
        String contentType = null;
        Getaccountconfig200Response response = api.getaccountconfig(accountName, accept, contentType);
        // TODO: test validations
    }

    /**
     * Get autoApprove Status in Account Settings
     *
     * This endpoint can be used to check whether the autoapprove setting is active or not, for a specific seller.   If the response is &#x60;true&#x60;, the autoapprove setting is active. If the response is &#x60;false&#x60;, it is inactive.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getautoApprovevaluefromconfigTest() throws ApiException {
        String sellerId = null;
        String accountName = null;
        String accept = null;
        String contentType = null;
        GetautoApprovevaluefromconfig200Response response = api.getautoApprovevaluefromconfig(sellerId, accountName, accept, contentType);
        // TODO: test validations
    }

    /**
     * Get Seller&#39;s Approval Settings
     *
     * This endpoint retrieves the current Received SKUs approval settings applied to a specific seller. Its response includes:   - &#x60;sellerId&#x60;: A string that identifies the seller in the marketplace.   - &#x60;accountId&#x60;: Marketplace’s account ID.   - &#x60;accountName&#x60;: Marketplace’s account name.   - &#x60;mapping&#x60;: Mapping of SKU and product Specifications.   - &#x60;matchFlux&#x60;: This field determines the type of approval configuration applied to SKUs received  from a seller.   The possible values include:    -&#x60;default&#x60;, where the Matcher reviews the SKU, and approves it based on its score.   -&#x60;manual&#x60;, for manual approvals through the Received SKU UI and Match API.   -&#x60;autoApprove&#x60;, for every SKU received from a given seller to be approved automatically, regardless of the Matcher Score.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getselleraccountconfigTest() throws ApiException {
        String accountName = null;
        String sellerId = null;
        String accept = null;
        String contentType = null;
        api.getselleraccountconfig(accountName, sellerId, accept, contentType);
        // TODO: test validations
    }

    /**
     * Save Seller&#39;s Approval Settings
     *
     * Marketplaces use this endpoint to create or update approval settings to a specific seller, on the Received SKUs module.   The request includes all the details necessary to implement the chosen approval settings.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putselleraccountconfigTest() throws ApiException {
        String accountName = null;
        String sellerId = null;
        String accept = null;
        String contentType = null;
        PutselleraccountconfigRequest putselleraccountconfigRequest = null;
        api.putselleraccountconfig(accountName, sellerId, accept, contentType, putselleraccountconfigRequest);
        // TODO: test validations
    }

    /**
     * Save Account&#39;s Approval Settings
     *
     * Marketplaces use this endpoint to create or update approval settings on their Received SKUs module.   The request includes all the details necessary to implement the chosen approval settings.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void saveaccountconfigTest() throws ApiException {
        String accountName = null;
        String accept = null;
        String contentType = null;
        SaveaccountconfigRequest saveaccountconfigRequest = null;
        Saveaccountconfig200Response response = api.saveaccountconfig(accountName, accept, contentType, saveaccountconfigRequest);
        // TODO: test validations
    }

    /**
     * Activate autoApprove in Marketplace&#39;s Account
     *
     * This endpoint enables the autoapprove rule to a marketplace&#39;s whole Received SKUs module. Once enabling the rule, received SKUs will be automatically approved on your store, regardless of the seller.    For the autoapprove rule to work as expected, the approval [Matcher score](https://help.vtex.com/en/tutorial/entendendo-a-pontuacao-do-vtex-matcher--tutorials_424) should be set up as 80 (default value), but you can configure a different number through the field &#x60;Score&#x60; in [Save Account&#39;s Approval Settings](https://developers.vtex.com/vtex-rest-api/reference/saveaccountconfig).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void saveautoapproveforaccountTest() throws ApiException {
        String accountName = null;
        String accept = null;
        String contentType = null;
        SaveautoapproveforaccountRequest saveautoapproveforaccountRequest = null;
        Saveautoapproveforaccount200Response response = api.saveautoapproveforaccount(accountName, accept, contentType, saveautoapproveforaccountRequest);
        // TODO: test validations
    }

    /**
     * Activate autoApprove Setting for a Seller
     *
     * This endpoint enables the auto approve setting to received SKUs from a specific seller. Be aware that once enabling the rule through this request, all received SKUs from that seller will be automatically approved on your store, regardless of the Matcher Score.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void saveautoapproveforaccountsellerTest() throws ApiException {
        String accountName = null;
        String sellerId = null;
        String accept = null;
        String contentType = null;
        SaveautoapproveforaccountsellerRequest saveautoapproveforaccountsellerRequest = null;
        api.saveautoapproveforaccountseller(accountName, sellerId, accept, contentType, saveautoapproveforaccountsellerRequest);
        // TODO: test validations
    }

}
