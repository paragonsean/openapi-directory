/**
 * Suggestions
 *   The **Marketplace API** enables marketplaces and sellers hosted on VTEX to perform their collaborative operations.      >⚠️ The marketplace must [create an appKey and appToken](https://developers.vtex.com/docs/guides/getting-started-authentication) for each non-VTEX seller that will use this API.    ## Index    ### Notification    Endpoints used by sellers to notify marketplaces that the price or inventory language has changed for one of their SKUs.    `POST` [Notify marketplace of price update](https://developers.vtex.com/docs/api-reference/marketplace-apis#post-/notificator/-sellerId-/changenotification/-skuId-/price)    `POST` [Notify marketplace of inventory update](https://developers.vtex.com/docs/api-reference/marketplace-apis#post-/notificator/-sellerId-/changenotification/-skuId-/inventory)      ### Suggestions    #### Get Suggestions    Search and filter all suggestions using specific criteria.    `GET` [Get all SKU Suggestions](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions)    `GET` [Get SKU Suggestion by ID](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/-sellerId-/-sellerSkuId-)      #### Manage Suggestions    Send or delete SKU suggestions from the seller to marketplace.    `PUT` [Send SKU Suggestion](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/-sellerId-/-sellerSkuId-)    `DELETE` [Delete SKU Suggestion](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#delete-/suggestions/-sellerId-/-sellerSkuId-)      #### Get Versions    Search and filter all versions of suggestions, using specific criteria.    `GET` [Get all versions](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/-sellerId-/-sellerskuid-/versions)    `GET` [Get version by ID](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/-sellerId-/-sellerskuid-/versions/-version-)      #### Match Received SKUs    Match SKU suggestions received in the marketplace.    `PUT` [Match Received SKUs individually](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/-sellerId-/-sellerskuid-/versions/-version-/matches/-matchid-)    `PUT` [Match Multiple Received SKUs](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/matches/action/-actionName-)      #### SKU Approval Settings    Allows marketplaces to configure rules for automatically and manually approving SKUs received from sellers.    `GET`[Get autoApprove Status in Account Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/configuration/autoapproval/toggle)      `PUT`[Activate autoApprove in Marketplace's Account](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration/autoapproval/toggle)      `GET`[Get Account's Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/configuration)    `PUT`[Save Account's Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration)    `GET`[Get Seller's Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/configuration/seller/-sellerId-)    `PUT`[Save Seller's Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration/seller/-sellerId-)    `PUT`[Activate autoApprove Setting for a Seller](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration/autoapproval/toggle/seller/-sellerId-)         ### Matched Offers    Offers are seller products and SKUs that were sent to the marketplace, and already have their price and inventory level configured.    `GET`[Get Matched Offers List](https://developers.vtex.com/docs/api-reference/marketplace-apis#get-/offer-manager/pvt/offers)    `GET`[Get Matched Offer's Data by SKU ID](https://developers.vtex.com/docs/api-reference/marketplace-apis#get-/offer-manager/pvt/product/-productId-/sku/-skuId-)      `GET`[Get Matched Offer's Data by Product ID](https://developers.vtex.com/docs/api-reference/marketplace-apis#get-/offer-manager/pvt/product/-productId-)  
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Getaccountconfig200Response model module.
 * @module model/Getaccountconfig200Response
 * @version 1.0
 */
class Getaccountconfig200Response {
    /**
     * Constructs a new <code>Getaccountconfig200Response</code>.
     * @alias module:model/Getaccountconfig200Response
     */
    constructor() { 
        
        Getaccountconfig200Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Getaccountconfig200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Getaccountconfig200Response} obj Optional instance to populate.
     * @return {module:model/Getaccountconfig200Response} The populated <code>Getaccountconfig200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Getaccountconfig200Response();

            if (data.hasOwnProperty('MatchFlux')) {
                obj['MatchFlux'] = ApiClient.convertToType(data['MatchFlux'], 'String');
            }
            if (data.hasOwnProperty('Matchers')) {
                obj['Matchers'] = ApiClient.convertToType(data['Matchers'], [Object]);
            }
            if (data.hasOwnProperty('Rules')) {
                obj['Rules'] = ApiClient.convertToType(data['Rules'], Object);
            }
            if (data.hasOwnProperty('Score')) {
                obj['Score'] = ApiClient.convertToType(data['Score'], Object);
            }
            if (data.hasOwnProperty('SpecificationsMapping')) {
                obj['SpecificationsMapping'] = ApiClient.convertToType(data['SpecificationsMapping'], [Object]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Getaccountconfig200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Getaccountconfig200Response</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['MatchFlux'] && !(typeof data['MatchFlux'] === 'string' || data['MatchFlux'] instanceof String)) {
            throw new Error("Expected the field `MatchFlux` to be a primitive type in the JSON string but got " + data['MatchFlux']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['Matchers'])) {
            throw new Error("Expected the field `Matchers` to be an array in the JSON data but got " + data['Matchers']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['SpecificationsMapping'])) {
            throw new Error("Expected the field `SpecificationsMapping` to be an array in the JSON data but got " + data['SpecificationsMapping']);
        }

        return true;
    }


}



/**
 * This field determines the type of approval configuration applied to SKUs received from a seller.
 * @member {String} MatchFlux
 */
Getaccountconfig200Response.prototype['MatchFlux'] = undefined;

/**
 * All Matchers configured on the marketplace, and their respective details.
 * @member {Array.<Object>} Matchers
 */
Getaccountconfig200Response.prototype['Matchers'] = undefined;

/**
 * Items and products.
 * @member {Object} Rules
 */
Getaccountconfig200Response.prototype['Rules'] = undefined;

/**
 * Matcher scores for approving and rejecting SKUs received from sellers.
 * @member {Object} Score
 */
Getaccountconfig200Response.prototype['Score'] = undefined;

/**
 * Mapping of product and SKU specifications, per seller.
 * @member {Array.<Object>} SpecificationsMapping
 */
Getaccountconfig200Response.prototype['SpecificationsMapping'] = undefined;






export default Getaccountconfig200Response;

