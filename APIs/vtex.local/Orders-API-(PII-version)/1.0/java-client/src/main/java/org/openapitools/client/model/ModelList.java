/*
 * Orders API (PII version)
 * Endpoints that deal with order management. New version of the orders API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ModelList
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:56:00.631491-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ModelList {
  public static final String SERIALIZED_NAME_SHIPPING_ESTIMATED_DATE = "ShippingEstimatedDate";
  @SerializedName(SERIALIZED_NAME_SHIPPING_ESTIMATED_DATE)
  private String shippingEstimatedDate;

  public static final String SERIALIZED_NAME_SHIPPING_ESTIMATED_DATE_MAX = "ShippingEstimatedDateMax";
  @SerializedName(SERIALIZED_NAME_SHIPPING_ESTIMATED_DATE_MAX)
  private String shippingEstimatedDateMax;

  public static final String SERIALIZED_NAME_SHIPPING_ESTIMATED_DATE_MIN = "ShippingEstimatedDateMin";
  @SerializedName(SERIALIZED_NAME_SHIPPING_ESTIMATED_DATE_MIN)
  private String shippingEstimatedDateMin;

  public static final String SERIALIZED_NAME_AFFILIATE_ID = "affiliateId";
  @SerializedName(SERIALIZED_NAME_AFFILIATE_ID)
  private String affiliateId;

  public static final String SERIALIZED_NAME_AUTHORIZED_DATE = "authorizedDate";
  @SerializedName(SERIALIZED_NAME_AUTHORIZED_DATE)
  private String authorizedDate;

  public static final String SERIALIZED_NAME_CALL_CENTER_OPERATOR_NAME = "callCenterOperatorName";
  @SerializedName(SERIALIZED_NAME_CALL_CENTER_OPERATOR_NAME)
  private String callCenterOperatorName;

  public static final String SERIALIZED_NAME_CLIENT_NAME = "clientName";
  @SerializedName(SERIALIZED_NAME_CLIENT_NAME)
  private String clientName;

  public static final String SERIALIZED_NAME_CREATION_DATE = "creationDate";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private String creationDate;

  public static final String SERIALIZED_NAME_CURRENCY_CODE = "currencyCode";
  @SerializedName(SERIALIZED_NAME_CURRENCY_CODE)
  private String currencyCode;

  public static final String SERIALIZED_NAME_ITEMS = "items";
  @SerializedName(SERIALIZED_NAME_ITEMS)
  private String items;

  public static final String SERIALIZED_NAME_LAST_MESSAGE_UNREAD = "lastMessageUnread";
  @SerializedName(SERIALIZED_NAME_LAST_MESSAGE_UNREAD)
  private String lastMessageUnread;

  public static final String SERIALIZED_NAME_LIST_ID = "listId";
  @SerializedName(SERIALIZED_NAME_LIST_ID)
  private String listId;

  public static final String SERIALIZED_NAME_LIST_TYPE = "listType";
  @SerializedName(SERIALIZED_NAME_LIST_TYPE)
  private String listType;

  public static final String SERIALIZED_NAME_MARKET_PLACE_ORDER_ID = "marketPlaceOrderId";
  @SerializedName(SERIALIZED_NAME_MARKET_PLACE_ORDER_ID)
  private String marketPlaceOrderId;

  public static final String SERIALIZED_NAME_ORDER_ID = "orderId";
  @SerializedName(SERIALIZED_NAME_ORDER_ID)
  private String orderId;

  public static final String SERIALIZED_NAME_ORDER_IS_COMPLETE = "orderIsComplete";
  @SerializedName(SERIALIZED_NAME_ORDER_IS_COMPLETE)
  private Boolean orderIsComplete;

  public static final String SERIALIZED_NAME_ORIGIN = "origin";
  @SerializedName(SERIALIZED_NAME_ORIGIN)
  private String origin;

  public static final String SERIALIZED_NAME_PAYMENT_NAMES = "paymentNames";
  @SerializedName(SERIALIZED_NAME_PAYMENT_NAMES)
  private String paymentNames;

  public static final String SERIALIZED_NAME_SALES_CHANNEL = "salesChannel";
  @SerializedName(SERIALIZED_NAME_SALES_CHANNEL)
  private String salesChannel;

  public static final String SERIALIZED_NAME_SEQUENCE = "sequence";
  @SerializedName(SERIALIZED_NAME_SEQUENCE)
  private String sequence;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_STATUS_DESCRIPTION = "statusDescription";
  @SerializedName(SERIALIZED_NAME_STATUS_DESCRIPTION)
  private String statusDescription;

  public static final String SERIALIZED_NAME_TOTAL_ITEMS = "totalItems";
  @SerializedName(SERIALIZED_NAME_TOTAL_ITEMS)
  private Integer totalItems;

  public static final String SERIALIZED_NAME_TOTAL_VALUE = "totalValue";
  @SerializedName(SERIALIZED_NAME_TOTAL_VALUE)
  private Integer totalValue;

  public static final String SERIALIZED_NAME_WORKFLOW_IN_ERROR_STATE = "workflowInErrorState";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_IN_ERROR_STATE)
  private Boolean workflowInErrorState;

  public static final String SERIALIZED_NAME_WORKFLOW_IN_RETRY = "workflowInRetry";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_IN_RETRY)
  private Boolean workflowInRetry;

  public ModelList() {
  }

  public ModelList shippingEstimatedDate(String shippingEstimatedDate) {
    this.shippingEstimatedDate = shippingEstimatedDate;
    return this;
  }

  /**
   * Shipping estimate date.
   * @return shippingEstimatedDate
   */
  @javax.annotation.Nullable
  public String getShippingEstimatedDate() {
    return shippingEstimatedDate;
  }

  public void setShippingEstimatedDate(String shippingEstimatedDate) {
    this.shippingEstimatedDate = shippingEstimatedDate;
  }


  public ModelList shippingEstimatedDateMax(String shippingEstimatedDateMax) {
    this.shippingEstimatedDateMax = shippingEstimatedDateMax;
    return this;
  }

  /**
   * Maximum shipping estimate date.
   * @return shippingEstimatedDateMax
   */
  @javax.annotation.Nullable
  public String getShippingEstimatedDateMax() {
    return shippingEstimatedDateMax;
  }

  public void setShippingEstimatedDateMax(String shippingEstimatedDateMax) {
    this.shippingEstimatedDateMax = shippingEstimatedDateMax;
  }


  public ModelList shippingEstimatedDateMin(String shippingEstimatedDateMin) {
    this.shippingEstimatedDateMin = shippingEstimatedDateMin;
    return this;
  }

  /**
   * Minimum shipping estimate date.
   * @return shippingEstimatedDateMin
   */
  @javax.annotation.Nullable
  public String getShippingEstimatedDateMin() {
    return shippingEstimatedDateMin;
  }

  public void setShippingEstimatedDateMin(String shippingEstimatedDateMin) {
    this.shippingEstimatedDateMin = shippingEstimatedDateMin;
  }


  public ModelList affiliateId(String affiliateId) {
    this.affiliateId = affiliateId;
    return this;
  }

  /**
   * Three letter code indicating the marketplace in which the order was placed.
   * @return affiliateId
   */
  @javax.annotation.Nonnull
  public String getAffiliateId() {
    return affiliateId;
  }

  public void setAffiliateId(String affiliateId) {
    this.affiliateId = affiliateId;
  }


  public ModelList authorizedDate(String authorizedDate) {
    this.authorizedDate = authorizedDate;
    return this;
  }

  /**
   * Authorized date.
   * @return authorizedDate
   */
  @javax.annotation.Nullable
  public String getAuthorizedDate() {
    return authorizedDate;
  }

  public void setAuthorizedDate(String authorizedDate) {
    this.authorizedDate = authorizedDate;
  }


  public ModelList callCenterOperatorName(String callCenterOperatorName) {
    this.callCenterOperatorName = callCenterOperatorName;
    return this;
  }

  /**
   * Call center operator name.
   * @return callCenterOperatorName
   */
  @javax.annotation.Nullable
  public String getCallCenterOperatorName() {
    return callCenterOperatorName;
  }

  public void setCallCenterOperatorName(String callCenterOperatorName) {
    this.callCenterOperatorName = callCenterOperatorName;
  }


  public ModelList clientName(String clientName) {
    this.clientName = clientName;
    return this;
  }

  /**
   * Client name.
   * @return clientName
   */
  @javax.annotation.Nonnull
  public String getClientName() {
    return clientName;
  }

  public void setClientName(String clientName) {
    this.clientName = clientName;
  }


  public ModelList creationDate(String creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Creation date.
   * @return creationDate
   */
  @javax.annotation.Nonnull
  public String getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(String creationDate) {
    this.creationDate = creationDate;
  }


  public ModelList currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

  /**
   * Currency code.
   * @return currencyCode
   */
  @javax.annotation.Nonnull
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }


  public ModelList items(String items) {
    this.items = items;
    return this;
  }

  /**
   * Order items.
   * @return items
   */
  @javax.annotation.Nullable
  public String getItems() {
    return items;
  }

  public void setItems(String items) {
    this.items = items;
  }


  public ModelList lastMessageUnread(String lastMessageUnread) {
    this.lastMessageUnread = lastMessageUnread;
    return this;
  }

  /**
   * Last unread message.
   * @return lastMessageUnread
   */
  @javax.annotation.Nullable
  public String getLastMessageUnread() {
    return lastMessageUnread;
  }

  public void setLastMessageUnread(String lastMessageUnread) {
    this.lastMessageUnread = lastMessageUnread;
  }


  public ModelList listId(String listId) {
    this.listId = listId;
    return this;
  }

  /**
   * List ID.
   * @return listId
   */
  @javax.annotation.Nullable
  public String getListId() {
    return listId;
  }

  public void setListId(String listId) {
    this.listId = listId;
  }


  public ModelList listType(String listType) {
    this.listType = listType;
    return this;
  }

  /**
   * List type.
   * @return listType
   */
  @javax.annotation.Nullable
  public String getListType() {
    return listType;
  }

  public void setListType(String listType) {
    this.listType = listType;
  }


  public ModelList marketPlaceOrderId(String marketPlaceOrderId) {
    this.marketPlaceOrderId = marketPlaceOrderId;
    return this;
  }

  /**
   * ID of the order in the marketplace.
   * @return marketPlaceOrderId
   */
  @javax.annotation.Nullable
  public String getMarketPlaceOrderId() {
    return marketPlaceOrderId;
  }

  public void setMarketPlaceOrderId(String marketPlaceOrderId) {
    this.marketPlaceOrderId = marketPlaceOrderId;
  }


  public ModelList orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

  /**
   * Order ID.
   * @return orderId
   */
  @javax.annotation.Nonnull
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }


  public ModelList orderIsComplete(Boolean orderIsComplete) {
    this.orderIsComplete = orderIsComplete;
    return this;
  }

  /**
   * Indicates whether order is complete.
   * @return orderIsComplete
   */
  @javax.annotation.Nonnull
  public Boolean getOrderIsComplete() {
    return orderIsComplete;
  }

  public void setOrderIsComplete(Boolean orderIsComplete) {
    this.orderIsComplete = orderIsComplete;
  }


  public ModelList origin(String origin) {
    this.origin = origin;
    return this;
  }

  /**
   * Indicates whether order is marketplace, fulfillment or chain.
   * @return origin
   */
  @javax.annotation.Nonnull
  public String getOrigin() {
    return origin;
  }

  public void setOrigin(String origin) {
    this.origin = origin;
  }


  public ModelList paymentNames(String paymentNames) {
    this.paymentNames = paymentNames;
    return this;
  }

  /**
   * Order payment names.
   * @return paymentNames
   */
  @javax.annotation.Nonnull
  public String getPaymentNames() {
    return paymentNames;
  }

  public void setPaymentNames(String paymentNames) {
    this.paymentNames = paymentNames;
  }


  public ModelList salesChannel(String salesChannel) {
    this.salesChannel = salesChannel;
    return this;
  }

  /**
   * Sales channel.
   * @return salesChannel
   */
  @javax.annotation.Nonnull
  public String getSalesChannel() {
    return salesChannel;
  }

  public void setSalesChannel(String salesChannel) {
    this.salesChannel = salesChannel;
  }


  public ModelList sequence(String sequence) {
    this.sequence = sequence;
    return this;
  }

  /**
   * Order sequence number.
   * @return sequence
   */
  @javax.annotation.Nonnull
  public String getSequence() {
    return sequence;
  }

  public void setSequence(String sequence) {
    this.sequence = sequence;
  }


  public ModelList status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Order status.
   * @return status
   */
  @javax.annotation.Nonnull
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public ModelList statusDescription(String statusDescription) {
    this.statusDescription = statusDescription;
    return this;
  }

  /**
   * Order status description.
   * @return statusDescription
   */
  @javax.annotation.Nonnull
  public String getStatusDescription() {
    return statusDescription;
  }

  public void setStatusDescription(String statusDescription) {
    this.statusDescription = statusDescription;
  }


  public ModelList totalItems(Integer totalItems) {
    this.totalItems = totalItems;
    return this;
  }

  /**
   * Total items.
   * @return totalItems
   */
  @javax.annotation.Nonnull
  public Integer getTotalItems() {
    return totalItems;
  }

  public void setTotalItems(Integer totalItems) {
    this.totalItems = totalItems;
  }


  public ModelList totalValue(Integer totalValue) {
    this.totalValue = totalValue;
    return this;
  }

  /**
   * Order total value in cents.
   * @return totalValue
   */
  @javax.annotation.Nonnull
  public Integer getTotalValue() {
    return totalValue;
  }

  public void setTotalValue(Integer totalValue) {
    this.totalValue = totalValue;
  }


  public ModelList workflowInErrorState(Boolean workflowInErrorState) {
    this.workflowInErrorState = workflowInErrorState;
    return this;
  }

  /**
   * Indicates whether order workflow is in error state.
   * @return workflowInErrorState
   */
  @javax.annotation.Nonnull
  public Boolean getWorkflowInErrorState() {
    return workflowInErrorState;
  }

  public void setWorkflowInErrorState(Boolean workflowInErrorState) {
    this.workflowInErrorState = workflowInErrorState;
  }


  public ModelList workflowInRetry(Boolean workflowInRetry) {
    this.workflowInRetry = workflowInRetry;
    return this;
  }

  /**
   * Indicates whether workflow is in retry.
   * @return workflowInRetry
   */
  @javax.annotation.Nonnull
  public Boolean getWorkflowInRetry() {
    return workflowInRetry;
  }

  public void setWorkflowInRetry(Boolean workflowInRetry) {
    this.workflowInRetry = workflowInRetry;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelList _list = (ModelList) o;
    return Objects.equals(this.shippingEstimatedDate, _list.shippingEstimatedDate) &&
        Objects.equals(this.shippingEstimatedDateMax, _list.shippingEstimatedDateMax) &&
        Objects.equals(this.shippingEstimatedDateMin, _list.shippingEstimatedDateMin) &&
        Objects.equals(this.affiliateId, _list.affiliateId) &&
        Objects.equals(this.authorizedDate, _list.authorizedDate) &&
        Objects.equals(this.callCenterOperatorName, _list.callCenterOperatorName) &&
        Objects.equals(this.clientName, _list.clientName) &&
        Objects.equals(this.creationDate, _list.creationDate) &&
        Objects.equals(this.currencyCode, _list.currencyCode) &&
        Objects.equals(this.items, _list.items) &&
        Objects.equals(this.lastMessageUnread, _list.lastMessageUnread) &&
        Objects.equals(this.listId, _list.listId) &&
        Objects.equals(this.listType, _list.listType) &&
        Objects.equals(this.marketPlaceOrderId, _list.marketPlaceOrderId) &&
        Objects.equals(this.orderId, _list.orderId) &&
        Objects.equals(this.orderIsComplete, _list.orderIsComplete) &&
        Objects.equals(this.origin, _list.origin) &&
        Objects.equals(this.paymentNames, _list.paymentNames) &&
        Objects.equals(this.salesChannel, _list.salesChannel) &&
        Objects.equals(this.sequence, _list.sequence) &&
        Objects.equals(this.status, _list.status) &&
        Objects.equals(this.statusDescription, _list.statusDescription) &&
        Objects.equals(this.totalItems, _list.totalItems) &&
        Objects.equals(this.totalValue, _list.totalValue) &&
        Objects.equals(this.workflowInErrorState, _list.workflowInErrorState) &&
        Objects.equals(this.workflowInRetry, _list.workflowInRetry);
  }

  @Override
  public int hashCode() {
    return Objects.hash(shippingEstimatedDate, shippingEstimatedDateMax, shippingEstimatedDateMin, affiliateId, authorizedDate, callCenterOperatorName, clientName, creationDate, currencyCode, items, lastMessageUnread, listId, listType, marketPlaceOrderId, orderId, orderIsComplete, origin, paymentNames, salesChannel, sequence, status, statusDescription, totalItems, totalValue, workflowInErrorState, workflowInRetry);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelList {\n");
    sb.append("    shippingEstimatedDate: ").append(toIndentedString(shippingEstimatedDate)).append("\n");
    sb.append("    shippingEstimatedDateMax: ").append(toIndentedString(shippingEstimatedDateMax)).append("\n");
    sb.append("    shippingEstimatedDateMin: ").append(toIndentedString(shippingEstimatedDateMin)).append("\n");
    sb.append("    affiliateId: ").append(toIndentedString(affiliateId)).append("\n");
    sb.append("    authorizedDate: ").append(toIndentedString(authorizedDate)).append("\n");
    sb.append("    callCenterOperatorName: ").append(toIndentedString(callCenterOperatorName)).append("\n");
    sb.append("    clientName: ").append(toIndentedString(clientName)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    lastMessageUnread: ").append(toIndentedString(lastMessageUnread)).append("\n");
    sb.append("    listId: ").append(toIndentedString(listId)).append("\n");
    sb.append("    listType: ").append(toIndentedString(listType)).append("\n");
    sb.append("    marketPlaceOrderId: ").append(toIndentedString(marketPlaceOrderId)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    orderIsComplete: ").append(toIndentedString(orderIsComplete)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    paymentNames: ").append(toIndentedString(paymentNames)).append("\n");
    sb.append("    salesChannel: ").append(toIndentedString(salesChannel)).append("\n");
    sb.append("    sequence: ").append(toIndentedString(sequence)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusDescription: ").append(toIndentedString(statusDescription)).append("\n");
    sb.append("    totalItems: ").append(toIndentedString(totalItems)).append("\n");
    sb.append("    totalValue: ").append(toIndentedString(totalValue)).append("\n");
    sb.append("    workflowInErrorState: ").append(toIndentedString(workflowInErrorState)).append("\n");
    sb.append("    workflowInRetry: ").append(toIndentedString(workflowInRetry)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ShippingEstimatedDate");
    openapiFields.add("ShippingEstimatedDateMax");
    openapiFields.add("ShippingEstimatedDateMin");
    openapiFields.add("affiliateId");
    openapiFields.add("authorizedDate");
    openapiFields.add("callCenterOperatorName");
    openapiFields.add("clientName");
    openapiFields.add("creationDate");
    openapiFields.add("currencyCode");
    openapiFields.add("items");
    openapiFields.add("lastMessageUnread");
    openapiFields.add("listId");
    openapiFields.add("listType");
    openapiFields.add("marketPlaceOrderId");
    openapiFields.add("orderId");
    openapiFields.add("orderIsComplete");
    openapiFields.add("origin");
    openapiFields.add("paymentNames");
    openapiFields.add("salesChannel");
    openapiFields.add("sequence");
    openapiFields.add("status");
    openapiFields.add("statusDescription");
    openapiFields.add("totalItems");
    openapiFields.add("totalValue");
    openapiFields.add("workflowInErrorState");
    openapiFields.add("workflowInRetry");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ShippingEstimatedDate");
    openapiRequiredFields.add("ShippingEstimatedDateMax");
    openapiRequiredFields.add("ShippingEstimatedDateMin");
    openapiRequiredFields.add("affiliateId");
    openapiRequiredFields.add("authorizedDate");
    openapiRequiredFields.add("callCenterOperatorName");
    openapiRequiredFields.add("clientName");
    openapiRequiredFields.add("creationDate");
    openapiRequiredFields.add("currencyCode");
    openapiRequiredFields.add("items");
    openapiRequiredFields.add("lastMessageUnread");
    openapiRequiredFields.add("listId");
    openapiRequiredFields.add("listType");
    openapiRequiredFields.add("marketPlaceOrderId");
    openapiRequiredFields.add("orderId");
    openapiRequiredFields.add("orderIsComplete");
    openapiRequiredFields.add("origin");
    openapiRequiredFields.add("paymentNames");
    openapiRequiredFields.add("salesChannel");
    openapiRequiredFields.add("sequence");
    openapiRequiredFields.add("status");
    openapiRequiredFields.add("statusDescription");
    openapiRequiredFields.add("totalItems");
    openapiRequiredFields.add("totalValue");
    openapiRequiredFields.add("workflowInErrorState");
    openapiRequiredFields.add("workflowInRetry");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ModelList
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModelList.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModelList is not found in the empty JSON string", ModelList.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ModelList.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModelList` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ModelList.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("ShippingEstimatedDate") != null && !jsonObj.get("ShippingEstimatedDate").isJsonNull()) && !jsonObj.get("ShippingEstimatedDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ShippingEstimatedDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ShippingEstimatedDate").toString()));
      }
      if ((jsonObj.get("ShippingEstimatedDateMax") != null && !jsonObj.get("ShippingEstimatedDateMax").isJsonNull()) && !jsonObj.get("ShippingEstimatedDateMax").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ShippingEstimatedDateMax` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ShippingEstimatedDateMax").toString()));
      }
      if ((jsonObj.get("ShippingEstimatedDateMin") != null && !jsonObj.get("ShippingEstimatedDateMin").isJsonNull()) && !jsonObj.get("ShippingEstimatedDateMin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ShippingEstimatedDateMin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ShippingEstimatedDateMin").toString()));
      }
      if (!jsonObj.get("affiliateId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `affiliateId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("affiliateId").toString()));
      }
      if ((jsonObj.get("authorizedDate") != null && !jsonObj.get("authorizedDate").isJsonNull()) && !jsonObj.get("authorizedDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `authorizedDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("authorizedDate").toString()));
      }
      if ((jsonObj.get("callCenterOperatorName") != null && !jsonObj.get("callCenterOperatorName").isJsonNull()) && !jsonObj.get("callCenterOperatorName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `callCenterOperatorName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("callCenterOperatorName").toString()));
      }
      if (!jsonObj.get("clientName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clientName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clientName").toString()));
      }
      if (!jsonObj.get("creationDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creationDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creationDate").toString()));
      }
      if (!jsonObj.get("currencyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currencyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currencyCode").toString()));
      }
      if ((jsonObj.get("items") != null && !jsonObj.get("items").isJsonNull()) && !jsonObj.get("items").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `items` to be a primitive type in the JSON string but got `%s`", jsonObj.get("items").toString()));
      }
      if ((jsonObj.get("lastMessageUnread") != null && !jsonObj.get("lastMessageUnread").isJsonNull()) && !jsonObj.get("lastMessageUnread").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastMessageUnread` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastMessageUnread").toString()));
      }
      if ((jsonObj.get("listId") != null && !jsonObj.get("listId").isJsonNull()) && !jsonObj.get("listId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `listId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("listId").toString()));
      }
      if ((jsonObj.get("listType") != null && !jsonObj.get("listType").isJsonNull()) && !jsonObj.get("listType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `listType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("listType").toString()));
      }
      if ((jsonObj.get("marketPlaceOrderId") != null && !jsonObj.get("marketPlaceOrderId").isJsonNull()) && !jsonObj.get("marketPlaceOrderId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `marketPlaceOrderId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("marketPlaceOrderId").toString()));
      }
      if (!jsonObj.get("orderId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderId").toString()));
      }
      if (!jsonObj.get("origin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `origin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("origin").toString()));
      }
      if (!jsonObj.get("paymentNames").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `paymentNames` to be a primitive type in the JSON string but got `%s`", jsonObj.get("paymentNames").toString()));
      }
      if (!jsonObj.get("salesChannel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `salesChannel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("salesChannel").toString()));
      }
      if (!jsonObj.get("sequence").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sequence` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sequence").toString()));
      }
      if (!jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if (!jsonObj.get("statusDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `statusDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("statusDescription").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModelList.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModelList' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModelList> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModelList.class));

       return (TypeAdapter<T>) new TypeAdapter<ModelList>() {
           @Override
           public void write(JsonWriter out, ModelList value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModelList read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ModelList given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ModelList
   * @throws IOException if the JSON string is invalid with respect to ModelList
   */
  public static ModelList fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModelList.class);
  }

  /**
   * Convert an instance of ModelList to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

