/**
 * Orders API (PII version)
 * Endpoints that deal with order management. New version of the orders API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListOrders2_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListOrders2_request::OAIListOrders2_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListOrders2_request::OAIListOrders2_request() {
    this->initializeModel();
}

OAIListOrders2_request::~OAIListOrders2_request() {}

void OAIListOrders2_request::initializeModel() {

    m_f_creation_date_isSet = false;
    m_f_creation_date_isValid = false;

    m_page_isSet = false;
    m_page_isValid = false;

    m_per_page_isSet = false;
    m_per_page_isValid = false;

    m_q_isSet = false;
    m_q_isValid = false;
}

void OAIListOrders2_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListOrders2_request::fromJsonObject(QJsonObject json) {

    m_f_creation_date_isValid = ::OpenAPI::fromJsonValue(m_f_creation_date, json[QString("f_creationDate")]);
    m_f_creation_date_isSet = !json[QString("f_creationDate")].isNull() && m_f_creation_date_isValid;

    m_page_isValid = ::OpenAPI::fromJsonValue(m_page, json[QString("page")]);
    m_page_isSet = !json[QString("page")].isNull() && m_page_isValid;

    m_per_page_isValid = ::OpenAPI::fromJsonValue(m_per_page, json[QString("per_page")]);
    m_per_page_isSet = !json[QString("per_page")].isNull() && m_per_page_isValid;

    m_q_isValid = ::OpenAPI::fromJsonValue(m_q, json[QString("q")]);
    m_q_isSet = !json[QString("q")].isNull() && m_q_isValid;
}

QString OAIListOrders2_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListOrders2_request::asJsonObject() const {
    QJsonObject obj;
    if (m_f_creation_date_isSet) {
        obj.insert(QString("f_creationDate"), ::OpenAPI::toJsonValue(m_f_creation_date));
    }
    if (m_page_isSet) {
        obj.insert(QString("page"), ::OpenAPI::toJsonValue(m_page));
    }
    if (m_per_page_isSet) {
        obj.insert(QString("per_page"), ::OpenAPI::toJsonValue(m_per_page));
    }
    if (m_q_isSet) {
        obj.insert(QString("q"), ::OpenAPI::toJsonValue(m_q));
    }
    return obj;
}

QString OAIListOrders2_request::getFCreationDate() const {
    return m_f_creation_date;
}
void OAIListOrders2_request::setFCreationDate(const QString &f_creation_date) {
    m_f_creation_date = f_creation_date;
    m_f_creation_date_isSet = true;
}

bool OAIListOrders2_request::is_f_creation_date_Set() const{
    return m_f_creation_date_isSet;
}

bool OAIListOrders2_request::is_f_creation_date_Valid() const{
    return m_f_creation_date_isValid;
}

qint32 OAIListOrders2_request::getPage() const {
    return m_page;
}
void OAIListOrders2_request::setPage(const qint32 &page) {
    m_page = page;
    m_page_isSet = true;
}

bool OAIListOrders2_request::is_page_Set() const{
    return m_page_isSet;
}

bool OAIListOrders2_request::is_page_Valid() const{
    return m_page_isValid;
}

qint32 OAIListOrders2_request::getPerPage() const {
    return m_per_page;
}
void OAIListOrders2_request::setPerPage(const qint32 &per_page) {
    m_per_page = per_page;
    m_per_page_isSet = true;
}

bool OAIListOrders2_request::is_per_page_Set() const{
    return m_per_page_isSet;
}

bool OAIListOrders2_request::is_per_page_Valid() const{
    return m_per_page_isValid;
}

QString OAIListOrders2_request::getQ() const {
    return m_q;
}
void OAIListOrders2_request::setQ(const QString &q) {
    m_q = q;
    m_q_isSet = true;
}

bool OAIListOrders2_request::is_q_Set() const{
    return m_q_isSet;
}

bool OAIListOrders2_request::is_q_Valid() const{
    return m_q_isValid;
}

bool OAIListOrders2_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_f_creation_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_per_page_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_q_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListOrders2_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_f_creation_date_isValid && m_page_isValid && m_per_page_isValid && true;
}

} // namespace OpenAPI
