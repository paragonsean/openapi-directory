/**
 * Orders API (PII version)
 * Endpoints that deal with order management. New version of the orders API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISla.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISla::OAISla(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISla::OAISla() {
    this->initializeModel();
}

OAISla::~OAISla() {}

void OAISla::initializeModel() {

    m_delivery_channel_isSet = false;
    m_delivery_channel_isValid = false;

    m_delivery_window_isSet = false;
    m_delivery_window_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_pickup_store_info_isSet = false;
    m_pickup_store_info_isValid = false;

    m_polygon_name_isSet = false;
    m_polygon_name_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;

    m_shipping_estimate_isSet = false;
    m_shipping_estimate_isValid = false;
}

void OAISla::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISla::fromJsonObject(QJsonObject json) {

    m_delivery_channel_isValid = ::OpenAPI::fromJsonValue(m_delivery_channel, json[QString("deliveryChannel")]);
    m_delivery_channel_isSet = !json[QString("deliveryChannel")].isNull() && m_delivery_channel_isValid;

    m_delivery_window_isValid = ::OpenAPI::fromJsonValue(m_delivery_window, json[QString("deliveryWindow")]);
    m_delivery_window_isSet = !json[QString("deliveryWindow")].isNull() && m_delivery_window_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_pickup_store_info_isValid = ::OpenAPI::fromJsonValue(m_pickup_store_info, json[QString("pickupStoreInfo")]);
    m_pickup_store_info_isSet = !json[QString("pickupStoreInfo")].isNull() && m_pickup_store_info_isValid;

    m_polygon_name_isValid = ::OpenAPI::fromJsonValue(m_polygon_name, json[QString("polygonName")]);
    m_polygon_name_isSet = !json[QString("polygonName")].isNull() && m_polygon_name_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;

    m_shipping_estimate_isValid = ::OpenAPI::fromJsonValue(m_shipping_estimate, json[QString("shippingEstimate")]);
    m_shipping_estimate_isSet = !json[QString("shippingEstimate")].isNull() && m_shipping_estimate_isValid;
}

QString OAISla::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISla::asJsonObject() const {
    QJsonObject obj;
    if (m_delivery_channel_isSet) {
        obj.insert(QString("deliveryChannel"), ::OpenAPI::toJsonValue(m_delivery_channel));
    }
    if (m_delivery_window_isSet) {
        obj.insert(QString("deliveryWindow"), ::OpenAPI::toJsonValue(m_delivery_window));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_pickup_store_info.isSet()) {
        obj.insert(QString("pickupStoreInfo"), ::OpenAPI::toJsonValue(m_pickup_store_info));
    }
    if (m_polygon_name_isSet) {
        obj.insert(QString("polygonName"), ::OpenAPI::toJsonValue(m_polygon_name));
    }
    if (m_price_isSet) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(m_price));
    }
    if (m_shipping_estimate_isSet) {
        obj.insert(QString("shippingEstimate"), ::OpenAPI::toJsonValue(m_shipping_estimate));
    }
    return obj;
}

QString OAISla::getDeliveryChannel() const {
    return m_delivery_channel;
}
void OAISla::setDeliveryChannel(const QString &delivery_channel) {
    m_delivery_channel = delivery_channel;
    m_delivery_channel_isSet = true;
}

bool OAISla::is_delivery_channel_Set() const{
    return m_delivery_channel_isSet;
}

bool OAISla::is_delivery_channel_Valid() const{
    return m_delivery_channel_isValid;
}

QString OAISla::getDeliveryWindow() const {
    return m_delivery_window;
}
void OAISla::setDeliveryWindow(const QString &delivery_window) {
    m_delivery_window = delivery_window;
    m_delivery_window_isSet = true;
}

bool OAISla::is_delivery_window_Set() const{
    return m_delivery_window_isSet;
}

bool OAISla::is_delivery_window_Valid() const{
    return m_delivery_window_isValid;
}

QString OAISla::getId() const {
    return m_id;
}
void OAISla::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAISla::is_id_Set() const{
    return m_id_isSet;
}

bool OAISla::is_id_Valid() const{
    return m_id_isValid;
}

QString OAISla::getName() const {
    return m_name;
}
void OAISla::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAISla::is_name_Set() const{
    return m_name_isSet;
}

bool OAISla::is_name_Valid() const{
    return m_name_isValid;
}

OAIPickupStoreInfo OAISla::getPickupStoreInfo() const {
    return m_pickup_store_info;
}
void OAISla::setPickupStoreInfo(const OAIPickupStoreInfo &pickup_store_info) {
    m_pickup_store_info = pickup_store_info;
    m_pickup_store_info_isSet = true;
}

bool OAISla::is_pickup_store_info_Set() const{
    return m_pickup_store_info_isSet;
}

bool OAISla::is_pickup_store_info_Valid() const{
    return m_pickup_store_info_isValid;
}

QString OAISla::getPolygonName() const {
    return m_polygon_name;
}
void OAISla::setPolygonName(const QString &polygon_name) {
    m_polygon_name = polygon_name;
    m_polygon_name_isSet = true;
}

bool OAISla::is_polygon_name_Set() const{
    return m_polygon_name_isSet;
}

bool OAISla::is_polygon_name_Valid() const{
    return m_polygon_name_isValid;
}

qint32 OAISla::getPrice() const {
    return m_price;
}
void OAISla::setPrice(const qint32 &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAISla::is_price_Set() const{
    return m_price_isSet;
}

bool OAISla::is_price_Valid() const{
    return m_price_isValid;
}

QString OAISla::getShippingEstimate() const {
    return m_shipping_estimate;
}
void OAISla::setShippingEstimate(const QString &shipping_estimate) {
    m_shipping_estimate = shipping_estimate;
    m_shipping_estimate_isSet = true;
}

bool OAISla::is_shipping_estimate_Set() const{
    return m_shipping_estimate_isSet;
}

bool OAISla::is_shipping_estimate_Valid() const{
    return m_shipping_estimate_isValid;
}

bool OAISla::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_delivery_channel_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_delivery_window_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pickup_store_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_polygon_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_estimate_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISla::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_delivery_channel_isValid && m_delivery_window_isValid && m_id_isValid && m_name_isValid && m_pickup_store_info_isValid && m_polygon_name_isValid && m_price_isValid && m_shipping_estimate_isValid && true;
}

} // namespace OpenAPI
