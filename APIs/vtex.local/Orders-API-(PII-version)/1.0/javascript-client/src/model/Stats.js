/**
 * Orders API (PII version)
 * Endpoints that deal with order management. New version of the orders API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Stats1 from './Stats1';

/**
 * The Stats model module.
 * @module model/Stats
 * @version 1.0
 */
class Stats {
    /**
     * Constructs a new <code>Stats</code>.
     * @alias module:model/Stats
     * @param stats {module:model/Stats1} 
     */
    constructor(stats) { 
        
        Stats.initialize(this, stats);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, stats) { 
        obj['stats'] = stats;
    }

    /**
     * Constructs a <code>Stats</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Stats} obj Optional instance to populate.
     * @return {module:model/Stats} The populated <code>Stats</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Stats();

            if (data.hasOwnProperty('stats')) {
                obj['stats'] = Stats1.constructFromObject(data['stats']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Stats</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Stats</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Stats.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `stats`
        if (data['stats']) { // data not null
          Stats1.validateJSON(data['stats']);
        }

        return true;
    }


}

Stats.RequiredProperties = ["stats"];

/**
 * @member {module:model/Stats1} stats
 */
Stats.prototype['stats'] = undefined;






export default Stats;

