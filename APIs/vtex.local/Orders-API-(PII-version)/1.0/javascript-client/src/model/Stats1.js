/**
 * Orders API (PII version)
 * Endpoints that deal with order management. New version of the orders API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TotalItems from './TotalItems';
import TotalValue from './TotalValue';

/**
 * The Stats1 model module.
 * @module model/Stats1
 * @version 1.0
 */
class Stats1 {
    /**
     * Constructs a new <code>Stats1</code>.
     * @alias module:model/Stats1
     * @param totalItems {module:model/TotalItems} 
     * @param totalValue {module:model/TotalValue} 
     */
    constructor(totalItems, totalValue) { 
        
        Stats1.initialize(this, totalItems, totalValue);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, totalItems, totalValue) { 
        obj['totalItems'] = totalItems;
        obj['totalValue'] = totalValue;
    }

    /**
     * Constructs a <code>Stats1</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Stats1} obj Optional instance to populate.
     * @return {module:model/Stats1} The populated <code>Stats1</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Stats1();

            if (data.hasOwnProperty('totalItems')) {
                obj['totalItems'] = TotalItems.constructFromObject(data['totalItems']);
            }
            if (data.hasOwnProperty('totalValue')) {
                obj['totalValue'] = TotalValue.constructFromObject(data['totalValue']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Stats1</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Stats1</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Stats1.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `totalItems`
        if (data['totalItems']) { // data not null
          TotalItems.validateJSON(data['totalItems']);
        }
        // validate the optional field `totalValue`
        if (data['totalValue']) { // data not null
          TotalValue.validateJSON(data['totalValue']);
        }

        return true;
    }


}

Stats1.RequiredProperties = ["totalItems", "totalValue"];

/**
 * @member {module:model/TotalItems} totalItems
 */
Stats1.prototype['totalItems'] = undefined;

/**
 * @member {module:model/TotalValue} totalValue
 */
Stats1.prototype['totalValue'] = undefined;






export default Stats1;

