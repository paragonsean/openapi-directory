/**
 * Orders API (PII version)
 * Endpoints that deal with order management. New version of the orders API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetOrder2200ResponseItemsInnerAdditionalInfo model module.
 * @module model/GetOrder2200ResponseItemsInnerAdditionalInfo
 * @version 1.0
 */
class GetOrder2200ResponseItemsInnerAdditionalInfo {
    /**
     * Constructs a new <code>GetOrder2200ResponseItemsInnerAdditionalInfo</code>.
     * Additional information.
     * @alias module:model/GetOrder2200ResponseItemsInnerAdditionalInfo
     */
    constructor() { 
        
        GetOrder2200ResponseItemsInnerAdditionalInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetOrder2200ResponseItemsInnerAdditionalInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetOrder2200ResponseItemsInnerAdditionalInfo} obj Optional instance to populate.
     * @return {module:model/GetOrder2200ResponseItemsInnerAdditionalInfo} The populated <code>GetOrder2200ResponseItemsInnerAdditionalInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetOrder2200ResponseItemsInnerAdditionalInfo();

            if (data.hasOwnProperty('brandId')) {
                obj['brandId'] = ApiClient.convertToType(data['brandId'], 'String');
            }
            if (data.hasOwnProperty('brandName')) {
                obj['brandName'] = ApiClient.convertToType(data['brandName'], 'String');
            }
            if (data.hasOwnProperty('dimension')) {
                obj['dimension'] = ApiClient.convertToType(data['dimension'], 'String');
            }
            if (data.hasOwnProperty('offeringInfo')) {
                obj['offeringInfo'] = ApiClient.convertToType(data['offeringInfo'], 'String');
            }
            if (data.hasOwnProperty('offeringType')) {
                obj['offeringType'] = ApiClient.convertToType(data['offeringType'], 'String');
            }
            if (data.hasOwnProperty('offeringTypeId')) {
                obj['offeringTypeId'] = ApiClient.convertToType(data['offeringTypeId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetOrder2200ResponseItemsInnerAdditionalInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetOrder2200ResponseItemsInnerAdditionalInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['brandId'] && !(typeof data['brandId'] === 'string' || data['brandId'] instanceof String)) {
            throw new Error("Expected the field `brandId` to be a primitive type in the JSON string but got " + data['brandId']);
        }
        // ensure the json data is a string
        if (data['brandName'] && !(typeof data['brandName'] === 'string' || data['brandName'] instanceof String)) {
            throw new Error("Expected the field `brandName` to be a primitive type in the JSON string but got " + data['brandName']);
        }
        // ensure the json data is a string
        if (data['dimension'] && !(typeof data['dimension'] === 'string' || data['dimension'] instanceof String)) {
            throw new Error("Expected the field `dimension` to be a primitive type in the JSON string but got " + data['dimension']);
        }
        // ensure the json data is a string
        if (data['offeringInfo'] && !(typeof data['offeringInfo'] === 'string' || data['offeringInfo'] instanceof String)) {
            throw new Error("Expected the field `offeringInfo` to be a primitive type in the JSON string but got " + data['offeringInfo']);
        }
        // ensure the json data is a string
        if (data['offeringType'] && !(typeof data['offeringType'] === 'string' || data['offeringType'] instanceof String)) {
            throw new Error("Expected the field `offeringType` to be a primitive type in the JSON string but got " + data['offeringType']);
        }
        // ensure the json data is a string
        if (data['offeringTypeId'] && !(typeof data['offeringTypeId'] === 'string' || data['offeringTypeId'] instanceof String)) {
            throw new Error("Expected the field `offeringTypeId` to be a primitive type in the JSON string but got " + data['offeringTypeId']);
        }

        return true;
    }


}



/**
 * Brand ID.
 * @member {String} brandId
 */
GetOrder2200ResponseItemsInnerAdditionalInfo.prototype['brandId'] = undefined;

/**
 * Brand name.
 * @member {String} brandName
 */
GetOrder2200ResponseItemsInnerAdditionalInfo.prototype['brandName'] = undefined;

/**
 * Dimension.
 * @member {String} dimension
 */
GetOrder2200ResponseItemsInnerAdditionalInfo.prototype['dimension'] = undefined;

/**
 * Offering information.
 * @member {String} offeringInfo
 */
GetOrder2200ResponseItemsInnerAdditionalInfo.prototype['offeringInfo'] = undefined;

/**
 * Offering type.
 * @member {String} offeringType
 */
GetOrder2200ResponseItemsInnerAdditionalInfo.prototype['offeringType'] = undefined;

/**
 * Offering type ID.
 * @member {String} offeringTypeId
 */
GetOrder2200ResponseItemsInnerAdditionalInfo.prototype['offeringTypeId'] = undefined;






export default GetOrder2200ResponseItemsInnerAdditionalInfo;

