/**
 * Orders API (PII version)
 * Endpoints that deal with order management. New version of the orders API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Address from './Address';
import LogisticsInfo from './LogisticsInfo';

/**
 * The ShippingData model module.
 * @module model/ShippingData
 * @version 1.0
 */
class ShippingData {
    /**
     * Constructs a new <code>ShippingData</code>.
     * @alias module:model/ShippingData
     * @param address {module:model/Address} 
     * @param id {String} Field ID.
     * @param logisticsInfo {Array.<module:model/LogisticsInfo>} Array with logistics information of each item in the order.
     * @param selectedAddresses {Array.<module:model/Address>} Array of the selected addresses' information.
     * @param trackingHints {String} Tracking hints.
     */
    constructor(address, id, logisticsInfo, selectedAddresses, trackingHints) { 
        
        ShippingData.initialize(this, address, id, logisticsInfo, selectedAddresses, trackingHints);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, address, id, logisticsInfo, selectedAddresses, trackingHints) { 
        obj['address'] = address;
        obj['id'] = id || 'shippingData';
        obj['logisticsInfo'] = logisticsInfo;
        obj['selectedAddresses'] = selectedAddresses;
        obj['trackingHints'] = trackingHints;
    }

    /**
     * Constructs a <code>ShippingData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ShippingData} obj Optional instance to populate.
     * @return {module:model/ShippingData} The populated <code>ShippingData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShippingData();

            if (data.hasOwnProperty('address')) {
                obj['address'] = Address.constructFromObject(data['address']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('logisticsInfo')) {
                obj['logisticsInfo'] = ApiClient.convertToType(data['logisticsInfo'], [LogisticsInfo]);
            }
            if (data.hasOwnProperty('selectedAddresses')) {
                obj['selectedAddresses'] = ApiClient.convertToType(data['selectedAddresses'], [Address]);
            }
            if (data.hasOwnProperty('trackingHints')) {
                obj['trackingHints'] = ApiClient.convertToType(data['trackingHints'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ShippingData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ShippingData</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ShippingData.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `address`
        if (data['address']) { // data not null
          Address.validateJSON(data['address']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        if (data['logisticsInfo']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['logisticsInfo'])) {
                throw new Error("Expected the field `logisticsInfo` to be an array in the JSON data but got " + data['logisticsInfo']);
            }
            // validate the optional field `logisticsInfo` (array)
            for (const item of data['logisticsInfo']) {
                LogisticsInfo.validateJSON(item);
            };
        }
        if (data['selectedAddresses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['selectedAddresses'])) {
                throw new Error("Expected the field `selectedAddresses` to be an array in the JSON data but got " + data['selectedAddresses']);
            }
            // validate the optional field `selectedAddresses` (array)
            for (const item of data['selectedAddresses']) {
                Address.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['trackingHints'] && !(typeof data['trackingHints'] === 'string' || data['trackingHints'] instanceof String)) {
            throw new Error("Expected the field `trackingHints` to be a primitive type in the JSON string but got " + data['trackingHints']);
        }

        return true;
    }


}

ShippingData.RequiredProperties = ["address", "id", "logisticsInfo", "selectedAddresses", "trackingHints"];

/**
 * @member {module:model/Address} address
 */
ShippingData.prototype['address'] = undefined;

/**
 * Field ID.
 * @member {String} id
 * @default 'shippingData'
 */
ShippingData.prototype['id'] = 'shippingData';

/**
 * Array with logistics information of each item in the order.
 * @member {Array.<module:model/LogisticsInfo>} logisticsInfo
 */
ShippingData.prototype['logisticsInfo'] = undefined;

/**
 * Array of the selected addresses' information.
 * @member {Array.<module:model/Address>} selectedAddresses
 */
ShippingData.prototype['selectedAddresses'] = undefined;

/**
 * Tracking hints.
 * @member {String} trackingHints
 */
ShippingData.prototype['trackingHints'] = undefined;






export default ShippingData;

