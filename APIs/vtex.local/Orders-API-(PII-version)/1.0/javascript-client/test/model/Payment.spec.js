/**
 * Orders API (PII version)
 * Endpoints that deal with order management. New version of the orders API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OrdersApiPiiVersion);
  }
}(this, function(expect, OrdersApiPiiVersion) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OrdersApiPiiVersion.Payment();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Payment', function() {
    it('should create an instance of Payment', function() {
      // uncomment below and update the code to test Payment
      //var instance = new OrdersApiPiiVersion.Payment();
      //expect(instance).to.be.a(OrdersApiPiiVersion.Payment);
    });

    it('should have the property cardHolder (base name: "cardHolder")', function() {
      // uncomment below and update the code to test the property cardHolder
      //var instance = new OrdersApiPiiVersion.Payment();
      //expect(instance).to.be();
    });

    it('should have the property cardNumber (base name: "cardNumber")', function() {
      // uncomment below and update the code to test the property cardNumber
      //var instance = new OrdersApiPiiVersion.Payment();
      //expect(instance).to.be();
    });

    it('should have the property connectorResponses (base name: "connectorResponses")', function() {
      // uncomment below and update the code to test the property connectorResponses
      //var instance = new OrdersApiPiiVersion.Payment();
      //expect(instance).to.be();
    });

    it('should have the property cvv2 (base name: "cvv2")', function() {
      // uncomment below and update the code to test the property cvv2
      //var instance = new OrdersApiPiiVersion.Payment();
      //expect(instance).to.be();
    });

    it('should have the property dueDate (base name: "dueDate")', function() {
      // uncomment below and update the code to test the property dueDate
      //var instance = new OrdersApiPiiVersion.Payment();
      //expect(instance).to.be();
    });

    it('should have the property expireMonth (base name: "expireMonth")', function() {
      // uncomment below and update the code to test the property expireMonth
      //var instance = new OrdersApiPiiVersion.Payment();
      //expect(instance).to.be();
    });

    it('should have the property expireYear (base name: "expireYear")', function() {
      // uncomment below and update the code to test the property expireYear
      //var instance = new OrdersApiPiiVersion.Payment();
      //expect(instance).to.be();
    });

    it('should have the property firstDigits (base name: "firstDigits")', function() {
      // uncomment below and update the code to test the property firstDigits
      //var instance = new OrdersApiPiiVersion.Payment();
      //expect(instance).to.be();
    });

    it('should have the property giftCardCaption (base name: "giftCardCaption")', function() {
      // uncomment below and update the code to test the property giftCardCaption
      //var instance = new OrdersApiPiiVersion.Payment();
      //expect(instance).to.be();
    });

    it('should have the property giftCardId (base name: "giftCardId")', function() {
      // uncomment below and update the code to test the property giftCardId
      //var instance = new OrdersApiPiiVersion.Payment();
      //expect(instance).to.be();
    });

    it('should have the property giftCardName (base name: "giftCardName")', function() {
      // uncomment below and update the code to test the property giftCardName
      //var instance = new OrdersApiPiiVersion.Payment();
      //expect(instance).to.be();
    });

    it('should have the property group (base name: "group")', function() {
      // uncomment below and update the code to test the property group
      //var instance = new OrdersApiPiiVersion.Payment();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new OrdersApiPiiVersion.Payment();
      //expect(instance).to.be();
    });

    it('should have the property installments (base name: "installments")', function() {
      // uncomment below and update the code to test the property installments
      //var instance = new OrdersApiPiiVersion.Payment();
      //expect(instance).to.be();
    });

    it('should have the property lastDigits (base name: "lastDigits")', function() {
      // uncomment below and update the code to test the property lastDigits
      //var instance = new OrdersApiPiiVersion.Payment();
      //expect(instance).to.be();
    });

    it('should have the property paymentSystem (base name: "paymentSystem")', function() {
      // uncomment below and update the code to test the property paymentSystem
      //var instance = new OrdersApiPiiVersion.Payment();
      //expect(instance).to.be();
    });

    it('should have the property paymentSystemName (base name: "paymentSystemName")', function() {
      // uncomment below and update the code to test the property paymentSystemName
      //var instance = new OrdersApiPiiVersion.Payment();
      //expect(instance).to.be();
    });

    it('should have the property redemptionCode (base name: "redemptionCode")', function() {
      // uncomment below and update the code to test the property redemptionCode
      //var instance = new OrdersApiPiiVersion.Payment();
      //expect(instance).to.be();
    });

    it('should have the property referenceValue (base name: "referenceValue")', function() {
      // uncomment below and update the code to test the property referenceValue
      //var instance = new OrdersApiPiiVersion.Payment();
      //expect(instance).to.be();
    });

    it('should have the property tid (base name: "tid")', function() {
      // uncomment below and update the code to test the property tid
      //var instance = new OrdersApiPiiVersion.Payment();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new OrdersApiPiiVersion.Payment();
      //expect(instance).to.be();
    });

    it('should have the property value (base name: "value")', function() {
      // uncomment below and update the code to test the property value
      //var instance = new OrdersApiPiiVersion.Payment();
      //expect(instance).to.be();
    });

  });

}));
