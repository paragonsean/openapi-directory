/*
 * VTEX Do API
 * VTEX DO is a task management system for authorized users to process orders. It is possible to control notes, and create, update, list, and retrieve tasks.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AddCommentRequest;
import org.openapitools.client.model.EditTaskRequest;
import org.openapitools.client.model.NewTaskRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TaskApi
 */
@Disabled
public class TaskApiTest {

    private final TaskApi api = new TaskApi();

    /**
     * Add Comment on a Task
     *
     * Adds a comment to a given task, filtering by &#x60;taskId&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addCommentTest() throws ApiException {
        String accept = null;
        String contentType = null;
        String taskId = null;
        AddCommentRequest addCommentRequest = null;
        Object response = api.addComment(accept, contentType, taskId, addCommentRequest);
        // TODO: test validations
    }

    /**
     * Update Task
     *
     * Updates a given task&#39;s status, for example, filtering by &#x60;taskId&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void editTaskTest() throws ApiException {
        String accept = null;
        String contentType = null;
        String taskId = null;
        EditTaskRequest editTaskRequest = null;
        Object response = api.editTask(accept, contentType, taskId, editTaskRequest);
        // TODO: test validations
    }

    /**
     * Retrieve Task
     *
     * Retrieves a given task, filtering by &#x60;taskId&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTaskTest() throws ApiException {
        String accept = null;
        String contentType = null;
        String taskId = null;
        Object response = api.getTask(accept, contentType, taskId);
        // TODO: test validations
    }

    /**
     * List tasks
     *
     * This endpoint allows you to filter tasks. You can choose between the following filtering options:     - **Assignees:** using &#x60;assignee.email&#x60; and &#x60;status&#x60;. Example: &#x60;https://{{accountName}}.{{environment}}.com.br/api/do/tasks?assignee.email&#x3D;{{person@email.com}}&amp;status&#x3D;{{open}}&#x60;.     - **Targets:** using &#x60;targetId&#x60; and &#x60;status&#x60;. Example: &#x60;https://{{accountName}}.{{environment}}.com.br/api/do/tasks?target.id&#x3D;{{name}}&amp;status&#x3D;{{open}}&#x60;.     - **Paged tasks:** using &#x60;page&#x60;, &#x60;perPage&#x60; and &#x60;status&#x60;. Example: &#x60;https://{{accountName}}.{{environment}}.com.br/api/do/tasks?page&#x3D;{{1}}&amp;perPage&#x3D;{{10}}&amp;status&#x3D;;{{-Closed}}&#x60;.     - **Context:** using &#x60;context&#x60;, &#x60;page&#x60;, &#x60;perPage&#x60; and &#x60;status&#x60;. Example: &#x60;https://{{accountName}}.{{environment}}.com.br/api/do/tasks?context&#x3D;{{context}}&amp;page&#x3D;{{1}}&amp;perPage&#x3D;{{10}}&amp;status&#x3D;{{-Closed}}&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listtasksbyassigneeTest() throws ApiException {
        String accept = null;
        String contentType = null;
        String assigneeEmail = null;
        String targetId = null;
        String context = null;
        String page = null;
        String perPage = null;
        String status = null;
        Object response = api.listtasksbyassignee(accept, contentType, assigneeEmail, targetId, context, page, perPage, status);
        // TODO: test validations
    }

    /**
     * Create Task
     *
     * Creates a new task in VTEX DO.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void newTaskTest() throws ApiException {
        String contentType = null;
        String accept = null;
        NewTaskRequest newTaskRequest = null;
        Object response = api.newTask(contentType, accept, newTaskRequest);
        // TODO: test validations
    }

}
