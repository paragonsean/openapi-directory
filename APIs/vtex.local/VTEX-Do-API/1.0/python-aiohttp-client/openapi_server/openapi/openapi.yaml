openapi: 3.0.0
info:
  contact: {}
  description: "VTEX DO is a task management system for authorized users to process\
    \ orders. It is possible to control notes, and create, update, list, and retrieve\
    \ tasks."
  title: VTEX Do API
  version: "1.0"
  x-origin:
  - format: openapi
    url: https://raw.githubusercontent.com/vtex/openapi-schemas/master/VTEX - VTEX
      Do API.json
    version: "3.0"
  x-providerName: vtex.local
  x-serviceName: VTEX-Do-API
servers:
- url: https://vtex.local
- description: VTEX server url
  url: "https://{accountName}.{environment}.com.br/api/do"
  variables:
    accountName:
      default: "{accountName}"
      description: Name of the VTEX account. Used as part of the URL.
    environment:
      default: "{environment}"
      description: Environment to use. Used as part of the URL.
security:
- appKey: []
  appToken: []
tags:
- name: Note
- name: Task
paths:
  /notes:
    get:
      deprecated: false
      description: Retrieves notes related to a specific `orderId`.
      operationId: get_notesbyorder_id
      parameters:
      - description: ID of the order.
        explode: true
        in: query
        name: target.id
        required: true
        schema:
          description: ID of the order.
          example: 1172452900788-01
          type: string
        style: form
      - description: "Number of notes per page. Maximum: 30."
        explode: true
        in: query
        name: perPage
        required: false
        schema:
          description: "Number of notes per page. Maximum: 30."
          example: 20
          type: integer
        style: form
      - description: Number of the page to be retrieved.
        explode: true
        in: query
        name: page
        required: false
        schema:
          description: Number of the page to be retrieved.
          example: 3
          type: integer
        style: form
      - description: HTTP Client Negotiation Accept Header. Indicates the types of
          responses the client can understand.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: Type of the content being sent.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: "This parameter is relevant only for PII-compliant accounts.\
          \ When sending requests to this endpoint, PII-compliant accounts can use\
          \ this parameter to declare the reason for requesting unmasked data. Otherwise,\
          \ this endpoint will return masked PII data."
        explode: true
        in: query
        name: reason
        required: false
        schema:
          example: data-validation
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example: {}
              schema: {}
          description: OK
      summary: Get Notes by orderId
      tags:
      - Note
      x-openapi-router-controller: openapi_server.controllers.note_controller
    post:
      deprecated: false
      description: "This endpoint creates a new note in VTEX DO. Be aware of the following\
        \ limitations:\r\n\n\r- The maximum number of notes for an order is 30.\r\n\
        \n\r- The maximum number of characters in a note's description is 2000."
      operationId: new_note
      parameters:
      - description: HTTP Client Negotiation Accept Header. Indicates the types of
          responses the client can understand.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: Type of the content being sent.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewNote_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              example:
                createdBy:
                  email: pedro.costa@vtex.com.br
                  id: fb542e51-5488-4c34-8d17-ed8fcf597a94
                  key: null
                  name: pedro.costa@vtex.com.br
                creationDate: 2022-01-11T15:49:17.8785392Z
                description: The order's ID in the marketplace is 786-09
                domain: oms
                id: A08CDB2519AC4FA49EB6099CF72C3642
                lastUpdate: 2022-01-11T15:49:17.8785392Z
                owner: c97ef6c8491a439f927cf9918644329f
                target:
                  id: v964735bdev-01
                  type: order
                  url: https://basedevmkp.vtexcommercebeta.com.br/admin/checkout/#/orders/v964741bdev-01
              schema: {}
          description: OK
      summary: Create Note
      tags:
      - Note
      x-openapi-router-controller: openapi_server.controllers.note_controller
      x-codegen-request-body-name: body
  /notes/{noteId}:
    get:
      deprecated: false
      description: "Retrieves a given note in VTEX DO, filtering by `noteId`."
      operationId: get_note
      parameters:
      - description: HTTP Client Negotiation Accept Header. Indicates the types of
          responses the client can understand.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: Type of the content being sent.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: Note's ID.
        explode: false
        in: path
        name: noteId
        required: true
        schema:
          description: Note's ID.
          example: 654321cba
          type: string
        style: simple
      - description: "This parameter is relevant only for PII-compliant accounts.\
          \ When sending requests to this endpoint, PII-compliant accounts can use\
          \ this parameter to declare the reason for requesting unmasked data. Otherwise,\
          \ this endpoint will return masked PII data."
        explode: true
        in: query
        name: reason
        required: false
        schema:
          example: data-validation
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example: {}
              schema: {}
          description: OK
      summary: Retrieve Note
      tags:
      - Note
      x-openapi-router-controller: openapi_server.controllers.note_controller
  /tasks:
    get:
      deprecated: false
      description: "This endpoint allows you to filter tasks. You can choose between\
        \ the following filtering options: \r\n\r\n- **Assignees:** using `assignee.email`\
        \ and `status`. Example: `https://{{accountName}}.{{environment}}.com.br/api/do/tasks?assignee.email={{person@email.com}}&status={{open}}`.\
        \ \r\n\r\n- **Targets:** using `targetId` and `status`. Example: `https://{{accountName}}.{{environment}}.com.br/api/do/tasks?target.id={{name}}&status={{open}}`.\
        \ \r\n\r\n- **Paged tasks:** using `page`, `perPage` and `status`. Example:\
        \ `https://{{accountName}}.{{environment}}.com.br/api/do/tasks?page={{1}}&perPage={{10}}&status=;{{-Closed}}`.\
        \ \r\n\r\n- **Context:** using `context`, `page`, `perPage` and `status`.\
        \ Example: `https://{{accountName}}.{{environment}}.com.br/api/do/tasks?context={{context}}&page={{1}}&perPage={{10}}&status={{-Closed}}`."
      operationId: listtasksbyassignee
      parameters:
      - description: "If you wish to list tasks by assignee, insert the desired assignee's\
          \ email and status."
        explode: true
        in: query
        name: assignee.email
        required: false
        schema:
          example: "{{assigneeEmail}}"
          type: string
        style: form
      - description: "If you wish to list tasks by target, insert the desired `targetId`\
          \ and `status`."
        explode: true
        in: query
        name: target.id
        required: false
        schema:
          example: "{{targetId}}"
          type: string
        style: form
      - description: "If you wish to list tasks by context, insert the desired context,\
          \ `page`, `perPage` and `status`."
        explode: true
        in: query
        name: context
        required: false
        schema:
          example: "{{context}}"
          type: string
        style: form
      - description: "If you wish to list tasks by context, also insert the desired\
          \ `page`."
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: "{{page}}"
          type: string
        style: form
      - description: "If you wish to list tasks by context, also insert the desired\
          \ `perPage` value."
        explode: true
        in: query
        name: perPage
        required: false
        schema:
          example: "{{desired number per page}}"
          type: string
        style: form
      - description: "If you wish to list tasks by context, also insert the desired\
          \ `status`."
        explode: true
        in: query
        name: status
        required: false
        schema:
          example: open
          type: string
        style: form
      - description: HTTP Client Negotiation Accept Header. Indicates the types of
          responses the client can understand.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: Type of the content being sent.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example: {}
              schema: {}
          description: OK
      summary: List tasks
      tags:
      - Task
      x-openapi-router-controller: openapi_server.controllers.task_controller
    post:
      deprecated: false
      description: Creates a new task in VTEX DO.
      operationId: new_task
      parameters:
      - description: Type of the content being sent.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: HTTP Client Negotiation Accept Header. Indicates the types of
          responses the client can understand.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              assignee:
                email: frederico.santos@vtex.com.br
                id: null
                name: null
              context: Marketplace
              description: Ajudar na doc API para lancar no postman
              domain: oms
              dueDate: 2016-03-01
              followers:
              - email: alan.dantas@vtex.com.br
                id: null
                name: null
              name: pricing
              parentTaskId: null
              priority: Critical
              surrogateKey: 505224-0
              target:
              - id: 633730670642-01
                type: order
                url: https://recorrenciaqa.vtexcommercebeta.com.br/admin/checkout/orders/633730670642-01
            schema:
              $ref: '#/components/schemas/NewTaskRequest'
        description: ""
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              example: {}
              schema: {}
          description: OK
      summary: Create Task
      tags:
      - Task
      x-openapi-router-controller: openapi_server.controllers.task_controller
      x-codegen-request-body-name: body
  /tasks/{taskId}:
    get:
      deprecated: false
      description: "Retrieves a given task, filtering by `taskId`."
      operationId: get_task
      parameters:
      - description: HTTP Client Negotiation Accept Header. Indicates the types of
          responses the client can understand.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: Type of the content being sent.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: Task ID.
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          example: 123456abc
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example: {}
              schema: {}
          description: OK
      summary: Retrieve Task
      tags:
      - Task
      x-openapi-router-controller: openapi_server.controllers.task_controller
    put:
      deprecated: false
      description: "Updates a given task's status, for example, filtering by `taskId`."
      operationId: edit_task
      parameters:
      - description: HTTP Client Negotiation Accept Header. Indicates the types of
          responses the client can understand.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: Type of the content being sent.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: Task ID.
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          example: 123456abc
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              status: InProgress
            schema:
              $ref: '#/components/schemas/EditTaskRequest'
        description: ""
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              example: {}
              schema: {}
          description: OK
      summary: Update Task
      tags:
      - Task
      x-openapi-router-controller: openapi_server.controllers.task_controller
      x-codegen-request-body-name: body
  /tasks/{taskId}/comments:
    post:
      deprecated: false
      description: "Adds a comment to a given task, filtering by `taskId`."
      operationId: add_comment
      parameters:
      - description: HTTP Client Negotiation Accept Header. Indicates the types of
          responses the client can understand.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: Type of the content being sent.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          example: application/json
          type: string
        style: simple
      - description: Task ID.
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          example: 123456abc
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              text: write your comment here
            schema:
              $ref: '#/components/schemas/AddCommentRequest'
        description: ""
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              example: {}
              schema: {}
          description: OK
      summary: Add Comment on a Task
      tags:
      - Task
      x-openapi-router-controller: openapi_server.controllers.task_controller
      x-codegen-request-body-name: body
components:
  parameters:
    reason:
      description: "This parameter is relevant only for PII-compliant accounts. When\
        \ sending requests to this endpoint, PII-compliant accounts can use this parameter\
        \ to declare the reason for requesting unmasked data. Otherwise, this endpoint\
        \ will return masked PII data."
      explode: true
      in: query
      name: reason
      required: false
      schema:
        example: data-validation
        type: string
      style: form
  schemas:
    AddCommentRequest:
      example:
        text: escreva seu comentário
      properties:
        text:
          type: string
      required:
      - text
      title: AddCommentRequest
      type: object
    Assignee:
      example:
        email: frederico.santos@vtex.com.br
        id: null
        name: null
      properties:
        email:
          type: string
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      required:
      - email
      - id
      - name
      title: Assignee
      type: object
    EditTaskRequest:
      example:
        status: InProgress
      properties:
        status:
          type: string
      required:
      - status
      title: EditTaskRequest
      type: object
    Follower:
      example:
        email: alan.dantas@vtex.com.br
        id: null
        name: null
      properties:
        email:
          type: string
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      required:
      - email
      - id
      - name
      title: Follower
      type: object
    NewNoteRequest:
      example:
        domain: domain
        description: description
        target:
          id: id
          type: type
          url: url
      properties:
        description:
          type: string
        domain:
          type: string
        target:
          $ref: '#/components/schemas/NewNoteRequest_target'
      required:
      - description
      - domain
      - target
      type: object
    NewTaskRequest:
      example:
        assignee:
          email: frederico.santos@vtex.com.br
          id: null
          name: null
        context: Marketplace
        description: Ajudar na doc API para lancar no postman
        domain: oms
        dueDate: 2016-03-01
        followers:
        - email: alan.dantas@vtex.com.br
          id: null
          name: null
        name: pricing
        parentTaskId: null
        priority: Critical
        surrogateKey: 505224-0
        target:
        - id: 633730670642-01
          type: order
          url: https://recorrenciaqa.vtexcommercebeta.com.br/admin/checkout/orders/633730670642-01
      properties:
        assignee:
          $ref: '#/components/schemas/Assignee'
        context:
          type: string
        description:
          type: string
        domain:
          type: string
        dueDate:
          type: string
        followers:
          description: ""
          items:
            $ref: '#/components/schemas/Follower'
          type: array
        name:
          type: string
        parentTaskId:
          nullable: true
          type: string
        priority:
          type: string
        surrogateKey:
          type: string
        target:
          description: ""
          items:
            $ref: '#/components/schemas/Target'
          type: array
      required:
      - assignee
      - context
      - description
      - domain
      - dueDate
      - followers
      - name
      - parentTaskId
      - priority
      - surrogateKey
      - target
      title: NewTaskRequest
      type: object
    Target:
      example:
        id: v964735bdev-01
        type: order
        url: https://basedevmkp.vtexcommercebeta.com.br/admin/checkout/#/orders/v964741bdev-01
      properties:
        id:
          type: string
        type:
          type: string
        url:
          type: string
      required:
      - id
      - type
      - url
      title: Target
      type: object
    NewNote_request_target:
      description: Target.
      properties:
        id:
          description: Target ID.
          example: v964735bdev-01
          title: id
          type: string
        type:
          description: Target type.
          example: order
          title: type
          type: string
        url:
          description: Target URL.
          example: https://basedevmkp.vtexcommercebeta.com.br/admin/checkout/#/orders/v964741bdev-01
          title: url
          type: string
      title: NewNote_request_target
      type: object
    NewNote_request:
      properties:
        description:
          description: "Note description. Maximum number of characters: 2000."
          example: Order ID in the marketplace is 786-09.
          title: description
          type: string
        domain:
          description: Note domain.
          example: oms
          title: domain
          type: string
        target:
          $ref: '#/components/schemas/NewNote_request_target'
      required:
      - description
      - domain
      - target
      title: NewNote_request
      type: object
    NewNoteRequest_target:
      description: Target.
      example:
        id: id
        type: type
        url: url
      properties:
        id:
          title: id
          type: string
        type:
          title: type
          type: string
        url:
          title: url
          type: string
      title: NewNoteRequest_target
      type: object
  securitySchemes:
    appKey:
      in: header
      name: X-VTEX-API-AppKey
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_appKey
    appToken:
      in: header
      name: X-VTEX-API-AppToken
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_appToken
