/**
 * VTEX Do API
 * VTEX DO is a task management system for authorized users to process orders. It is possible to control notes, and create, update, list, and retrieve tasks.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINewTaskRequest.h
 *
 * 
 */

#ifndef OAINewTaskRequest_H
#define OAINewTaskRequest_H

#include <QJsonObject>

#include "OAIAssignee.h"
#include "OAIFollower.h"
#include "OAITarget.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAssignee;
class OAIFollower;
class OAITarget;

class OAINewTaskRequest : public OAIObject {
public:
    OAINewTaskRequest();
    OAINewTaskRequest(QString json);
    ~OAINewTaskRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAssignee getAssignee() const;
    void setAssignee(const OAIAssignee &assignee);
    bool is_assignee_Set() const;
    bool is_assignee_Valid() const;

    QString getContext() const;
    void setContext(const QString &context);
    bool is_context_Set() const;
    bool is_context_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDomain() const;
    void setDomain(const QString &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    QString getDueDate() const;
    void setDueDate(const QString &due_date);
    bool is_due_date_Set() const;
    bool is_due_date_Valid() const;

    QList<OAIFollower> getFollowers() const;
    void setFollowers(const QList<OAIFollower> &followers);
    bool is_followers_Set() const;
    bool is_followers_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getParentTaskId() const;
    void setParentTaskId(const QString &parent_task_id);
    bool is_parent_task_id_Set() const;
    bool is_parent_task_id_Valid() const;

    QString getPriority() const;
    void setPriority(const QString &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    QString getSurrogateKey() const;
    void setSurrogateKey(const QString &surrogate_key);
    bool is_surrogate_key_Set() const;
    bool is_surrogate_key_Valid() const;

    QList<OAITarget> getTarget() const;
    void setTarget(const QList<OAITarget> &target);
    bool is_target_Set() const;
    bool is_target_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAssignee m_assignee;
    bool m_assignee_isSet;
    bool m_assignee_isValid;

    QString m_context;
    bool m_context_isSet;
    bool m_context_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    QString m_due_date;
    bool m_due_date_isSet;
    bool m_due_date_isValid;

    QList<OAIFollower> m_followers;
    bool m_followers_isSet;
    bool m_followers_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_parent_task_id;
    bool m_parent_task_id_isSet;
    bool m_parent_task_id_isValid;

    QString m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    QString m_surrogate_key;
    bool m_surrogate_key_isSet;
    bool m_surrogate_key_isValid;

    QList<OAITarget> m_target;
    bool m_target_isSet;
    bool m_target_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINewTaskRequest)

#endif // OAINewTaskRequest_H
