/**
 * Price Simulations API
 *   > Check the new [Pricing onboarding guide](https://developers.vtex.com/docs/guides/pricing-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Pricing and is organized by focusing on the developer's journey    The Price Simulations API allows you to configure custom price selectors for B2B stores, based on the context set by the [Orders Configuration app](https://developers.vtex.com/docs/guides/vtex-order-configuration).    ## Custom Prices    In this section, you can create a specific shopping scenario with the criteria you want. For explaining purpose, we used the `orderType` and `state` as default values, but it can be others too.    `GET` [Get custom prices schema](https://developers.vtex.com/docs/api-reference/price-simulations#get-/_v/custom-prices/session/schema)  `POST` [Create or Update custom prices schema](https://developers.vtex.com/docs/api-reference/price-simulations#post-/_v/custom-prices/session/schema)    ## Session Management    Every time you edit a configuration value set on the Custom Prices session, you must use this endpoint to update the Order Configuration.    `POST` [Update Order Configuration](https://developers.vtex.com/docs/api-reference/price-simulations#post-/sessions/)      ## Price Association    Use these routes to associate a shopping scenario, created at the Custom Price session, to a specific price table.    `GET` [Get price association by ID](https://developers.vtex.com/docs/api-reference/price-simulations#get-/_v/custom-prices/rules/-priceAssociationId-)  `POST` [Create price association](https://developers.vtex.com/docs/api-reference/price-simulations#post-/_v/custom-prices/rules)  `PUT` [Update price association by ID](https://developers.vtex.com/docs/api-reference/price-simulations#put-/_v/custom-prices/rules/-priceAssociationId-)  `DELETE` [Disassociate price association by ID](https://developers.vtex.com/docs/api-reference/price-simulations#delete-/_v/custom-prices/rules/-priceAssociationId-)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRequest_body.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRequest_body::OAIRequest_body(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRequest_body::OAIRequest_body() {
    this->initializeModel();
}

OAIRequest_body::~OAIRequest_body() {}

void OAIRequest_body::initializeModel() {

    m_order_type_isSet = false;
    m_order_type_isValid = false;

    m_pricetable_isSet = false;
    m_pricetable_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAIRequest_body::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRequest_body::fromJsonObject(QJsonObject json) {

    m_order_type_isValid = ::OpenAPI::fromJsonValue(m_order_type, json[QString("orderType")]);
    m_order_type_isSet = !json[QString("orderType")].isNull() && m_order_type_isValid;

    m_pricetable_isValid = ::OpenAPI::fromJsonValue(m_pricetable, json[QString("pricetable")]);
    m_pricetable_isSet = !json[QString("pricetable")].isNull() && m_pricetable_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;
}

QString OAIRequest_body::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRequest_body::asJsonObject() const {
    QJsonObject obj;
    if (m_order_type_isSet) {
        obj.insert(QString("orderType"), ::OpenAPI::toJsonValue(m_order_type));
    }
    if (m_pricetable_isSet) {
        obj.insert(QString("pricetable"), ::OpenAPI::toJsonValue(m_pricetable));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

QString OAIRequest_body::getOrderType() const {
    return m_order_type;
}
void OAIRequest_body::setOrderType(const QString &order_type) {
    m_order_type = order_type;
    m_order_type_isSet = true;
}

bool OAIRequest_body::is_order_type_Set() const{
    return m_order_type_isSet;
}

bool OAIRequest_body::is_order_type_Valid() const{
    return m_order_type_isValid;
}

QString OAIRequest_body::getPricetable() const {
    return m_pricetable;
}
void OAIRequest_body::setPricetable(const QString &pricetable) {
    m_pricetable = pricetable;
    m_pricetable_isSet = true;
}

bool OAIRequest_body::is_pricetable_Set() const{
    return m_pricetable_isSet;
}

bool OAIRequest_body::is_pricetable_Valid() const{
    return m_pricetable_isValid;
}

QString OAIRequest_body::getState() const {
    return m_state;
}
void OAIRequest_body::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIRequest_body::is_state_Set() const{
    return m_state_isSet;
}

bool OAIRequest_body::is_state_Valid() const{
    return m_state_isValid;
}

bool OAIRequest_body::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_order_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pricetable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRequest_body::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_order_type_isValid && m_pricetable_isValid && m_state_isValid && true;
}

} // namespace OpenAPI
