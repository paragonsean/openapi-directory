# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.custom_session_keys import CustomSessionKeys
from openapi_server import util


class Public(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, custom_session_keys: CustomSessionKeys=None):
        """Public - a model defined in OpenAPI

        :param custom_session_keys: The custom_session_keys of this Public.
        """
        self.openapi_types = {
            'custom_session_keys': CustomSessionKeys
        }

        self.attribute_map = {
            'custom_session_keys': 'customSessionKeys'
        }

        self._custom_session_keys = custom_session_keys

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Public':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The public of this Public.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def custom_session_keys(self):
        """Gets the custom_session_keys of this Public.


        :return: The custom_session_keys of this Public.
        :rtype: CustomSessionKeys
        """
        return self._custom_session_keys

    @custom_session_keys.setter
    def custom_session_keys(self, custom_session_keys):
        """Sets the custom_session_keys of this Public.


        :param custom_session_keys: The custom_session_keys of this Public.
        :type custom_session_keys: CustomSessionKeys
        """
        if custom_session_keys is None:
            raise ValueError("Invalid value for `custom_session_keys`, must not be `None`")

        self._custom_session_keys = custom_session_keys
