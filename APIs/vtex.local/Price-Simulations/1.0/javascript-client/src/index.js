/**
 * Price Simulations API
 *   > Check the new [Pricing onboarding guide](https://developers.vtex.com/docs/guides/pricing-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Pricing and is organized by focusing on the developer's journey    The Price Simulations API allows you to configure custom price selectors for B2B stores, based on the context set by the [Orders Configuration app](https://developers.vtex.com/docs/guides/vtex-order-configuration).    ## Custom Prices    In this section, you can create a specific shopping scenario with the criteria you want. For explaining purpose, we used the `orderType` and `state` as default values, but it can be others too.    `GET` [Get custom prices schema](https://developers.vtex.com/docs/api-reference/price-simulations#get-/_v/custom-prices/session/schema)  `POST` [Create or Update custom prices schema](https://developers.vtex.com/docs/api-reference/price-simulations#post-/_v/custom-prices/session/schema)    ## Session Management    Every time you edit a configuration value set on the Custom Prices session, you must use this endpoint to update the Order Configuration.    `POST` [Update Order Configuration](https://developers.vtex.com/docs/api-reference/price-simulations#post-/sessions/)      ## Price Association    Use these routes to associate a shopping scenario, created at the Custom Price session, to a specific price table.    `GET` [Get price association by ID](https://developers.vtex.com/docs/api-reference/price-simulations#get-/_v/custom-prices/rules/-priceAssociationId-)  `POST` [Create price association](https://developers.vtex.com/docs/api-reference/price-simulations#post-/_v/custom-prices/rules)  `PUT` [Update price association by ID](https://developers.vtex.com/docs/api-reference/price-simulations#put-/_v/custom-prices/rules/-priceAssociationId-)  `DELETE` [Disassociate price association by ID](https://developers.vtex.com/docs/api-reference/price-simulations#delete-/_v/custom-prices/rules/-priceAssociationId-)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import CustomSessionKeys from './model/CustomSessionKeys';
import FieldsInner from './model/FieldsInner';
import Public from './model/Public';
import RequestBody from './model/RequestBody';
import RequestBody1 from './model/RequestBody1';
import VCustomPricesRulesPost200Response from './model/VCustomPricesRulesPost200Response';
import VCustomPricesRulesPostRequest from './model/VCustomPricesRulesPostRequest';
import CustomPricesApi from './api/CustomPricesApi';
import PriceAssociationApi from './api/PriceAssociationApi';
import SessionManagementApi from './api/SessionManagementApi';


/**
*   &gt; Check the new [Pricing onboarding guide](https://developers.vtex.com/docs/guides/pricing-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Pricing and is organized by focusing on the developer&#39;s journey    The Price Simulations API allows you to configure custom price selectors for B2B stores, based on the context set by the [Orders Configuration app](https://developers.vtex.com/docs/guides/vtex-order-configuration).    ## Custom Prices    In this section, you can create a specific shopping scenario with the criteria you want. For explaining purpose, we used the &#x60;orderType&#x60; and &#x60;state&#x60; as default values, but it can be others too.    &#x60;GET&#x60; [Get custom prices schema](https://developers.vtex.com/docs/api-reference/price-simulations#get-/_v/custom-prices/session/schema)  &#x60;POST&#x60; [Create or Update custom prices schema](https://developers.vtex.com/docs/api-reference/price-simulations#post-/_v/custom-prices/session/schema)    ## Session Management    Every time you edit a configuration value set on the Custom Prices session, you must use this endpoint to update the Order Configuration.    &#x60;POST&#x60; [Update Order Configuration](https://developers.vtex.com/docs/api-reference/price-simulations#post-/sessions/)      ## Price Association    Use these routes to associate a shopping scenario, created at the Custom Price session, to a specific price table.    &#x60;GET&#x60; [Get price association by ID](https://developers.vtex.com/docs/api-reference/price-simulations#get-/_v/custom-prices/rules/-priceAssociationId-)  &#x60;POST&#x60; [Create price association](https://developers.vtex.com/docs/api-reference/price-simulations#post-/_v/custom-prices/rules)  &#x60;PUT&#x60; [Update price association by ID](https://developers.vtex.com/docs/api-reference/price-simulations#put-/_v/custom-prices/rules/-priceAssociationId-)  &#x60;DELETE&#x60; [Disassociate price association by ID](https://developers.vtex.com/docs/api-reference/price-simulations#delete-/_v/custom-prices/rules/-priceAssociationId-).<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var PriceSimulationsApi = require('index'); // See note below*.
* var xxxSvc = new PriceSimulationsApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new PriceSimulationsApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new PriceSimulationsApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new PriceSimulationsApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The CustomSessionKeys model constructor.
     * @property {module:model/CustomSessionKeys}
     */
    CustomSessionKeys,

    /**
     * The FieldsInner model constructor.
     * @property {module:model/FieldsInner}
     */
    FieldsInner,

    /**
     * The Public model constructor.
     * @property {module:model/Public}
     */
    Public,

    /**
     * The RequestBody model constructor.
     * @property {module:model/RequestBody}
     */
    RequestBody,

    /**
     * The RequestBody1 model constructor.
     * @property {module:model/RequestBody1}
     */
    RequestBody1,

    /**
     * The VCustomPricesRulesPost200Response model constructor.
     * @property {module:model/VCustomPricesRulesPost200Response}
     */
    VCustomPricesRulesPost200Response,

    /**
     * The VCustomPricesRulesPostRequest model constructor.
     * @property {module:model/VCustomPricesRulesPostRequest}
     */
    VCustomPricesRulesPostRequest,

    /**
    * The CustomPricesApi service constructor.
    * @property {module:api/CustomPricesApi}
    */
    CustomPricesApi,

    /**
    * The PriceAssociationApi service constructor.
    * @property {module:api/PriceAssociationApi}
    */
    PriceAssociationApi,

    /**
    * The SessionManagementApi service constructor.
    * @property {module:api/SessionManagementApi}
    */
    SessionManagementApi
};
