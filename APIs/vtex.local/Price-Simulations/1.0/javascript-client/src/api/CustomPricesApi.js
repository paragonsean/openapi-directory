/**
 * Price Simulations API
 *   > Check the new [Pricing onboarding guide](https://developers.vtex.com/docs/guides/pricing-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Pricing and is organized by focusing on the developer's journey    The Price Simulations API allows you to configure custom price selectors for B2B stores, based on the context set by the [Orders Configuration app](https://developers.vtex.com/docs/guides/vtex-order-configuration).    ## Custom Prices    In this section, you can create a specific shopping scenario with the criteria you want. For explaining purpose, we used the `orderType` and `state` as default values, but it can be others too.    `GET` [Get custom prices schema](https://developers.vtex.com/docs/api-reference/price-simulations#get-/_v/custom-prices/session/schema)  `POST` [Create or Update custom prices schema](https://developers.vtex.com/docs/api-reference/price-simulations#post-/_v/custom-prices/session/schema)    ## Session Management    Every time you edit a configuration value set on the Custom Prices session, you must use this endpoint to update the Order Configuration.    `POST` [Update Order Configuration](https://developers.vtex.com/docs/api-reference/price-simulations#post-/sessions/)      ## Price Association    Use these routes to associate a shopping scenario, created at the Custom Price session, to a specific price table.    `GET` [Get price association by ID](https://developers.vtex.com/docs/api-reference/price-simulations#get-/_v/custom-prices/rules/-priceAssociationId-)  `POST` [Create price association](https://developers.vtex.com/docs/api-reference/price-simulations#post-/_v/custom-prices/rules)  `PUT` [Update price association by ID](https://developers.vtex.com/docs/api-reference/price-simulations#put-/_v/custom-prices/rules/-priceAssociationId-)  `DELETE` [Disassociate price association by ID](https://developers.vtex.com/docs/api-reference/price-simulations#delete-/_v/custom-prices/rules/-priceAssociationId-)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import RequestBody1 from '../model/RequestBody1';

/**
* CustomPrices service.
* @module api/CustomPricesApi
* @version 1.0
*/
export default class CustomPricesApi {

    /**
    * Constructs a new CustomPricesApi. 
    * @alias module:api/CustomPricesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the vCustomPricesSessionSchemaGet operation.
     * @callback module:api/CustomPricesApi~vCustomPricesSessionSchemaGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RequestBody1} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get custom prices schema
     * Retrieves all custom price for all shopping scenarios
     * @param {String} contentType Describes the type of the content being sent
     * @param {String} accept HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand
     * @param {module:api/CustomPricesApi~vCustomPricesSessionSchemaGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RequestBody1}
     */
    vCustomPricesSessionSchemaGet(contentType, accept, callback) {
      let postBody = null;
      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling vCustomPricesSessionSchemaGet");
      }
      // verify the required parameter 'accept' is set
      if (accept === undefined || accept === null) {
        throw new Error("Missing the required parameter 'accept' when calling vCustomPricesSessionSchemaGet");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Content-Type': contentType,
        'Accept': accept
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RequestBody1;
      return this.apiClient.callApi(
        '/_v/custom-prices/session/schema', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the vCustomPricesSessionSchemaPost operation.
     * @callback module:api/CustomPricesApi~vCustomPricesSessionSchemaPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RequestBody1} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create or Update custom prices schema
     * Creates a new custom price for a shopping scenario or updates an existing one
     * @param {String} contentType Describes the type of the content being sent
     * @param {String} accept HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand
     * @param {Object} opts Optional parameters
     * @param {module:model/RequestBody1} [requestBody1] 
     * @param {module:api/CustomPricesApi~vCustomPricesSessionSchemaPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RequestBody1}
     */
    vCustomPricesSessionSchemaPost(contentType, accept, opts, callback) {
      opts = opts || {};
      let postBody = opts['requestBody1'];
      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling vCustomPricesSessionSchemaPost");
      }
      // verify the required parameter 'accept' is set
      if (accept === undefined || accept === null) {
        throw new Error("Missing the required parameter 'accept' when calling vCustomPricesSessionSchemaPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Content-Type': contentType,
        'Accept': accept
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = RequestBody1;
      return this.apiClient.callApi(
        '/_v/custom-prices/session/schema', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
