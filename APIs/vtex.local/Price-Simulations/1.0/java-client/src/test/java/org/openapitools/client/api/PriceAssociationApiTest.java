/*
 * Price Simulations API
 *   > Check the new [Pricing onboarding guide](https://developers.vtex.com/docs/guides/pricing-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Pricing and is organized by focusing on the developer's journey    The Price Simulations API allows you to configure custom price selectors for B2B stores, based on the context set by the [Orders Configuration app](https://developers.vtex.com/docs/guides/vtex-order-configuration).    ## Custom Prices    In this section, you can create a specific shopping scenario with the criteria you want. For explaining purpose, we used the `orderType` and `state` as default values, but it can be others too.    `GET` [Get custom prices schema](https://developers.vtex.com/docs/api-reference/price-simulations#get-/_v/custom-prices/session/schema)  `POST` [Create or Update custom prices schema](https://developers.vtex.com/docs/api-reference/price-simulations#post-/_v/custom-prices/session/schema)    ## Session Management    Every time you edit a configuration value set on the Custom Prices session, you must use this endpoint to update the Order Configuration.    `POST` [Update Order Configuration](https://developers.vtex.com/docs/api-reference/price-simulations#post-/sessions/)      ## Price Association    Use these routes to associate a shopping scenario, created at the Custom Price session, to a specific price table.    `GET` [Get price association by ID](https://developers.vtex.com/docs/api-reference/price-simulations#get-/_v/custom-prices/rules/-priceAssociationId-)  `POST` [Create price association](https://developers.vtex.com/docs/api-reference/price-simulations#post-/_v/custom-prices/rules)  `PUT` [Update price association by ID](https://developers.vtex.com/docs/api-reference/price-simulations#put-/_v/custom-prices/rules/-priceAssociationId-)  `DELETE` [Disassociate price association by ID](https://developers.vtex.com/docs/api-reference/price-simulations#delete-/_v/custom-prices/rules/-priceAssociationId-)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.RequestBody;
import org.openapitools.client.model.VCustomPricesRulesPost200Response;
import org.openapitools.client.model.VCustomPricesRulesPostRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PriceAssociationApi
 */
@Disabled
public class PriceAssociationApiTest {

    private final PriceAssociationApi api = new PriceAssociationApi();

    /**
     * Create price association
     *
     * Creates a new price association for a shopping scenario
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void vCustomPricesRulesPostTest() throws ApiException {
        String contentType = null;
        String accept = null;
        VCustomPricesRulesPostRequest vcustomPricesRulesPostRequest = null;
        VCustomPricesRulesPost200Response response = api.vCustomPricesRulesPost(contentType, accept, vcustomPricesRulesPostRequest);
        // TODO: test validations
    }

    /**
     * Disassociate price association by ID
     *
     * Disassociates a price association from a shopping scenario by its ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void vCustomPricesRulesPriceAssociationIdDeleteTest() throws ApiException {
        String contentType = null;
        String accept = null;
        Integer priceAssociationId = null;
        String response = api.vCustomPricesRulesPriceAssociationIdDelete(contentType, accept, priceAssociationId);
        // TODO: test validations
    }

    /**
     * Get price association by ID
     *
     * Retrieves price association for a shopping scenario by its ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void vCustomPricesRulesPriceAssociationIdGetTest() throws ApiException {
        String contentType = null;
        String accept = null;
        Integer priceAssociationId = null;
        VCustomPricesRulesPost200Response response = api.vCustomPricesRulesPriceAssociationIdGet(contentType, accept, priceAssociationId);
        // TODO: test validations
    }

    /**
     * Update price association by ID
     *
     * Updates a price association for a shopping scenario by its ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void vCustomPricesRulesPriceAssociationIdPutTest() throws ApiException {
        String contentType = null;
        String accept = null;
        Integer priceAssociationId = null;
        RequestBody requestBody = null;
        VCustomPricesRulesPost200Response response = api.vCustomPricesRulesPriceAssociationIdPut(contentType, accept, priceAssociationId, requestBody);
        // TODO: test validations
    }

}
