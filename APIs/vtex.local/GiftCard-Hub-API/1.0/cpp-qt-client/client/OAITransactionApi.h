/**
 * GiftCard Hub API
 * >ℹ️ Check the new [Payments onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Gift Card Hub API allows interactions with all Gift Card providers registered to a store from a single point.    Gift Card providers are systems capable of providing cards to be used in the buying process.    The following is the sequence diagram that represents calls in the purchase closing process.  ![](https://cdn.jsdelivr.net/gh/vtexdocs/dev-portal-content@main/images/giftcard-hub-api-overview-0.png)    **Checkout + Gateway**: Systems responsible for the sale and for processing orders and payments.    **Gift Card Hub**: System responsible for managing multiple registered Gift Card providers for a store.    **Gift Card Provider**: System responsible for providing the Gift Cards available to the user not closing a purchase. This system can be implemented by third parties.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAITransactionApi_H
#define OAI_OAITransactionApi_H

#include "OAIHelpers.h"
#include "OAIHttpRequest.h"
#include "OAIServerConfiguration.h"
#include "OAIOauth.h"

#include "OAICreateGiftCardCancellationTransactionRequest.h"
#include "OAICreateGiftCardSettlementTransactionRequest.h"
#include "OAICreateGiftCardTransactionRequest.h"
#include "OAICreateGiftCardinGiftCardProviderRequest.h"
#include "OAIGetGiftCardfromGiftCardProviderRequest.h"
#include "OAIObject.h"
#include <QString>

#include <QObject>
#include <QByteArray>
#include <QStringList>
#include <QList>
#include <QNetworkAccessManager>

namespace OpenAPI {

class OAITransactionApi : public QObject {
    Q_OBJECT

public:
    OAITransactionApi(const int timeOut = 0);
    ~OAITransactionApi();

    void initializeServerConfigs();
    int setDefaultServerValue(int serverIndex,const QString &operation, const QString &variable,const QString &val);
    void setServerIndex(const QString &operation, int serverIndex);
    void setApiKey(const QString &apiKeyName, const QString &apiKey);
    void setBearerToken(const QString &token);
    void setUsername(const QString &username);
    void setPassword(const QString &password);
    void setTimeOut(const int timeOut);
    void setWorkingDirectory(const QString &path);
    void setNetworkAccessManager(QNetworkAccessManager* manager);
    int addServerConfiguration(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables = QMap<QString, OAIServerVariable>());
    void setNewServerForAllOperations(const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void setNewServer(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void addHeaders(const QString &key, const QString &value);
    void enableRequestCompression();
    void enableResponseCompression();
    void abortRequests();
    QString getParamStylePrefix(const QString &style);
    QString getParamStyleSuffix(const QString &style);
    QString getParamStyleDelimiter(const QString &style, const QString &name, bool isExplode);

    /**
    * @param[in]  accept QString [required]
    * @param[in]  content_type QString [required]
    * @param[in]  x_vtex_api_app_key QString [required]
    * @param[in]  x_vtex_api_app_token QString [required]
    * @param[in]  gift_card_provider_id QString [required]
    * @param[in]  gift_card_id QString [required]
    * @param[in]  t_id QString [required]
    * @param[in]  oai_create_gift_card_cancellation_transaction_request OAICreateGiftCardCancellationTransactionRequest [required]
    */
    virtual void createGiftCardCancellationTransaction(const QString &accept, const QString &content_type, const QString &x_vtex_api_app_key, const QString &x_vtex_api_app_token, const QString &gift_card_provider_id, const QString &gift_card_id, const QString &t_id, const OAICreateGiftCardCancellationTransactionRequest &oai_create_gift_card_cancellation_transaction_request);

    /**
    * @param[in]  accept QString [required]
    * @param[in]  content_type QString [required]
    * @param[in]  gift_card_provider_id QString [required]
    * @param[in]  gift_card_id QString [required]
    * @param[in]  t_id QString [required]
    * @param[in]  oai_create_gift_card_settlement_transaction_request OAICreateGiftCardSettlementTransactionRequest [required]
    */
    virtual void createGiftCardSettlementTransaction(const QString &accept, const QString &content_type, const QString &gift_card_provider_id, const QString &gift_card_id, const QString &t_id, const OAICreateGiftCardSettlementTransactionRequest &oai_create_gift_card_settlement_transaction_request);

    /**
    * @param[in]  accept QString [required]
    * @param[in]  content_type QString [required]
    * @param[in]  x_vtex_api_app_key QString [required]
    * @param[in]  x_vtex_api_app_token QString [required]
    * @param[in]  gift_card_provider_id QString [required]
    * @param[in]  gift_card_id QString [required]
    * @param[in]  oai_create_gift_card_transaction_request OAICreateGiftCardTransactionRequest [required]
    */
    virtual void createGiftCardTransaction(const QString &accept, const QString &content_type, const QString &x_vtex_api_app_key, const QString &x_vtex_api_app_token, const QString &gift_card_provider_id, const QString &gift_card_id, const OAICreateGiftCardTransactionRequest &oai_create_gift_card_transaction_request);

    /**
    * @param[in]  accept QString [required]
    * @param[in]  content_type QString [required]
    * @param[in]  x_vtex_api_app_key QString [required]
    * @param[in]  x_vtex_api_app_token QString [required]
    * @param[in]  gift_card_provider_id QString [required]
    * @param[in]  oai_create_gift_cardin_gift_card_provider_request OAICreateGiftCardinGiftCardProviderRequest [required]
    */
    virtual void createGiftCardinGiftCardProvider(const QString &accept, const QString &content_type, const QString &x_vtex_api_app_key, const QString &x_vtex_api_app_token, const QString &gift_card_provider_id, const OAICreateGiftCardinGiftCardProviderRequest &oai_create_gift_cardin_gift_card_provider_request);

    /**
    * @param[in]  accept QString [required]
    * @param[in]  content_type QString [required]
    * @param[in]  x_vtex_api_app_key QString [required]
    * @param[in]  x_vtex_api_app_token QString [required]
    * @param[in]  gift_card_provider_id QString [required]
    * @param[in]  gift_card_id QString [required]
    * @param[in]  transaction_id QString [required]
    */
    virtual void getGiftCardAuthorizationTransaction(const QString &accept, const QString &content_type, const QString &x_vtex_api_app_key, const QString &x_vtex_api_app_token, const QString &gift_card_provider_id, const QString &gift_card_id, const QString &transaction_id);

    /**
    * @param[in]  accept QString [required]
    * @param[in]  content_type QString [required]
    * @param[in]  x_vtex_api_app_key QString [required]
    * @param[in]  x_vtex_api_app_token QString [required]
    * @param[in]  gift_card_provider_id QString [required]
    * @param[in]  gift_card_id QString [required]
    * @param[in]  transaction_id QString [required]
    */
    virtual void getGiftCardTransactionbyID(const QString &accept, const QString &content_type, const QString &x_vtex_api_app_key, const QString &x_vtex_api_app_token, const QString &gift_card_provider_id, const QString &gift_card_id, const QString &transaction_id);

    /**
    * @param[in]  accept QString [required]
    * @param[in]  content_type QString [required]
    * @param[in]  x_vtex_api_app_key QString [required]
    * @param[in]  x_vtex_api_app_token QString [required]
    * @param[in]  rest_range QString [required]
    * @param[in]  gift_card_provider_id QString [required]
    * @param[in]  oai_get_gift_cardfrom_gift_card_provider_request OAIGetGiftCardfromGiftCardProviderRequest [required]
    */
    virtual void getGiftCardfromGiftCardProvider(const QString &accept, const QString &content_type, const QString &x_vtex_api_app_key, const QString &x_vtex_api_app_token, const QString &rest_range, const QString &gift_card_provider_id, const OAIGetGiftCardfromGiftCardProviderRequest &oai_get_gift_cardfrom_gift_card_provider_request);

    /**
    * @param[in]  accept QString [required]
    * @param[in]  content_type QString [required]
    * @param[in]  x_vtex_api_app_key QString [required]
    * @param[in]  x_vtex_api_app_token QString [required]
    * @param[in]  gift_card_provider_id QString [required]
    * @param[in]  gift_card_id QString [required]
    */
    virtual void getGiftCardfromGiftCardProviderbyID(const QString &accept, const QString &content_type, const QString &x_vtex_api_app_key, const QString &x_vtex_api_app_token, const QString &gift_card_provider_id, const QString &gift_card_id);

    /**
    * @param[in]  accept QString [required]
    * @param[in]  content_type QString [required]
    * @param[in]  x_vtex_api_app_key QString [required]
    * @param[in]  x_vtex_api_app_token QString [required]
    * @param[in]  gift_card_provider_id QString [required]
    * @param[in]  gift_card_id QString [required]
    * @param[in]  t_id QString [required]
    */
    virtual void listAllGiftCardCancellationTransactions(const QString &accept, const QString &content_type, const QString &x_vtex_api_app_key, const QString &x_vtex_api_app_token, const QString &gift_card_provider_id, const QString &gift_card_id, const QString &t_id);

    /**
    * @param[in]  accept QString [required]
    * @param[in]  content_type QString [required]
    * @param[in]  x_vtex_api_app_key QString [required]
    * @param[in]  x_vtex_api_app_token QString [required]
    * @param[in]  gift_card_provider_id QString [required]
    * @param[in]  gift_card_id QString [required]
    * @param[in]  t_id QString [required]
    */
    virtual void listAllGiftCardSettlementTransactions(const QString &accept, const QString &content_type, const QString &x_vtex_api_app_key, const QString &x_vtex_api_app_token, const QString &gift_card_provider_id, const QString &gift_card_id, const QString &t_id);

    /**
    * @param[in]  accept QString [required]
    * @param[in]  content_type QString [required]
    * @param[in]  x_vtex_api_app_key QString [required]
    * @param[in]  x_vtex_api_app_token QString [required]
    * @param[in]  gift_card_provider_id QString [required]
    * @param[in]  gift_card_id QString [required]
    */
    virtual void listAllGiftCardTransactions(const QString &accept, const QString &content_type, const QString &x_vtex_api_app_key, const QString &x_vtex_api_app_token, const QString &gift_card_provider_id, const QString &gift_card_id);


private:
    QMap<QString,int> _serverIndices;
    QMap<QString,QList<OAIServerConfiguration>> _serverConfigs;
    QMap<QString, QString> _apiKeys;
    QString _bearerToken;
    QString _username;
    QString _password;
    int _timeOut;
    QString _workingDirectory;
    QNetworkAccessManager* _manager;
    QMap<QString, QString> _defaultHeaders;
    bool _isResponseCompressionEnabled;
    bool _isRequestCompressionEnabled;
    OAIHttpRequestInput _latestInput;
    OAIHttpRequestWorker *_latestWorker;
    QStringList _latestScope;
    OauthCode _authFlow;
    OauthImplicit _implicitFlow;
    OauthCredentials _credentialFlow;
    OauthPassword _passwordFlow;
    int _OauthMethod = 0;

    void createGiftCardCancellationTransactionCallback(OAIHttpRequestWorker *worker);
    void createGiftCardSettlementTransactionCallback(OAIHttpRequestWorker *worker);
    void createGiftCardTransactionCallback(OAIHttpRequestWorker *worker);
    void createGiftCardinGiftCardProviderCallback(OAIHttpRequestWorker *worker);
    void getGiftCardAuthorizationTransactionCallback(OAIHttpRequestWorker *worker);
    void getGiftCardTransactionbyIDCallback(OAIHttpRequestWorker *worker);
    void getGiftCardfromGiftCardProviderCallback(OAIHttpRequestWorker *worker);
    void getGiftCardfromGiftCardProviderbyIDCallback(OAIHttpRequestWorker *worker);
    void listAllGiftCardCancellationTransactionsCallback(OAIHttpRequestWorker *worker);
    void listAllGiftCardSettlementTransactionsCallback(OAIHttpRequestWorker *worker);
    void listAllGiftCardTransactionsCallback(OAIHttpRequestWorker *worker);

Q_SIGNALS:

    void createGiftCardCancellationTransactionSignal(OAIObject summary);
    void createGiftCardSettlementTransactionSignal(OAIObject summary);
    void createGiftCardTransactionSignal(OAIObject summary);
    void createGiftCardinGiftCardProviderSignal(OAIObject summary);
    void getGiftCardAuthorizationTransactionSignal(OAIObject summary);
    void getGiftCardTransactionbyIDSignal(OAIObject summary);
    void getGiftCardfromGiftCardProviderSignal(OAIObject summary);
    void getGiftCardfromGiftCardProviderbyIDSignal(OAIObject summary);
    void listAllGiftCardCancellationTransactionsSignal(OAIObject summary);
    void listAllGiftCardSettlementTransactionsSignal(OAIObject summary);
    void listAllGiftCardTransactionsSignal(OAIObject summary);


    void createGiftCardCancellationTransactionSignalFull(OAIHttpRequestWorker *worker, OAIObject summary);
    void createGiftCardSettlementTransactionSignalFull(OAIHttpRequestWorker *worker, OAIObject summary);
    void createGiftCardTransactionSignalFull(OAIHttpRequestWorker *worker, OAIObject summary);
    void createGiftCardinGiftCardProviderSignalFull(OAIHttpRequestWorker *worker, OAIObject summary);
    void getGiftCardAuthorizationTransactionSignalFull(OAIHttpRequestWorker *worker, OAIObject summary);
    void getGiftCardTransactionbyIDSignalFull(OAIHttpRequestWorker *worker, OAIObject summary);
    void getGiftCardfromGiftCardProviderSignalFull(OAIHttpRequestWorker *worker, OAIObject summary);
    void getGiftCardfromGiftCardProviderbyIDSignalFull(OAIHttpRequestWorker *worker, OAIObject summary);
    void listAllGiftCardCancellationTransactionsSignalFull(OAIHttpRequestWorker *worker, OAIObject summary);
    void listAllGiftCardSettlementTransactionsSignalFull(OAIHttpRequestWorker *worker, OAIObject summary);
    void listAllGiftCardTransactionsSignalFull(OAIHttpRequestWorker *worker, OAIObject summary);

    Q_DECL_DEPRECATED_X("Use createGiftCardCancellationTransactionSignalError() instead")
    void createGiftCardCancellationTransactionSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString error_str);
    void createGiftCardCancellationTransactionSignalError(OAIObject summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use createGiftCardSettlementTransactionSignalError() instead")
    void createGiftCardSettlementTransactionSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString error_str);
    void createGiftCardSettlementTransactionSignalError(OAIObject summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use createGiftCardTransactionSignalError() instead")
    void createGiftCardTransactionSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString error_str);
    void createGiftCardTransactionSignalError(OAIObject summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use createGiftCardinGiftCardProviderSignalError() instead")
    void createGiftCardinGiftCardProviderSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString error_str);
    void createGiftCardinGiftCardProviderSignalError(OAIObject summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getGiftCardAuthorizationTransactionSignalError() instead")
    void getGiftCardAuthorizationTransactionSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getGiftCardAuthorizationTransactionSignalError(OAIObject summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getGiftCardTransactionbyIDSignalError() instead")
    void getGiftCardTransactionbyIDSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getGiftCardTransactionbyIDSignalError(OAIObject summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getGiftCardfromGiftCardProviderSignalError() instead")
    void getGiftCardfromGiftCardProviderSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getGiftCardfromGiftCardProviderSignalError(OAIObject summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getGiftCardfromGiftCardProviderbyIDSignalError() instead")
    void getGiftCardfromGiftCardProviderbyIDSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getGiftCardfromGiftCardProviderbyIDSignalError(OAIObject summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use listAllGiftCardCancellationTransactionsSignalError() instead")
    void listAllGiftCardCancellationTransactionsSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString error_str);
    void listAllGiftCardCancellationTransactionsSignalError(OAIObject summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use listAllGiftCardSettlementTransactionsSignalError() instead")
    void listAllGiftCardSettlementTransactionsSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString error_str);
    void listAllGiftCardSettlementTransactionsSignalError(OAIObject summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use listAllGiftCardTransactionsSignalError() instead")
    void listAllGiftCardTransactionsSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString error_str);
    void listAllGiftCardTransactionsSignalError(OAIObject summary, QNetworkReply::NetworkError error_type, const QString &error_str);

    Q_DECL_DEPRECATED_X("Use createGiftCardCancellationTransactionSignalErrorFull() instead")
    void createGiftCardCancellationTransactionSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void createGiftCardCancellationTransactionSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use createGiftCardSettlementTransactionSignalErrorFull() instead")
    void createGiftCardSettlementTransactionSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void createGiftCardSettlementTransactionSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use createGiftCardTransactionSignalErrorFull() instead")
    void createGiftCardTransactionSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void createGiftCardTransactionSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use createGiftCardinGiftCardProviderSignalErrorFull() instead")
    void createGiftCardinGiftCardProviderSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void createGiftCardinGiftCardProviderSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getGiftCardAuthorizationTransactionSignalErrorFull() instead")
    void getGiftCardAuthorizationTransactionSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getGiftCardAuthorizationTransactionSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getGiftCardTransactionbyIDSignalErrorFull() instead")
    void getGiftCardTransactionbyIDSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getGiftCardTransactionbyIDSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getGiftCardfromGiftCardProviderSignalErrorFull() instead")
    void getGiftCardfromGiftCardProviderSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getGiftCardfromGiftCardProviderSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getGiftCardfromGiftCardProviderbyIDSignalErrorFull() instead")
    void getGiftCardfromGiftCardProviderbyIDSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getGiftCardfromGiftCardProviderbyIDSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use listAllGiftCardCancellationTransactionsSignalErrorFull() instead")
    void listAllGiftCardCancellationTransactionsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void listAllGiftCardCancellationTransactionsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use listAllGiftCardSettlementTransactionsSignalErrorFull() instead")
    void listAllGiftCardSettlementTransactionsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void listAllGiftCardSettlementTransactionsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use listAllGiftCardTransactionsSignalErrorFull() instead")
    void listAllGiftCardTransactionsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void listAllGiftCardTransactionsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);

    void abortRequestsSignal();
    void allPendingRequestsCompleted();

public Q_SLOTS:
    void tokenAvailable();
};

} // namespace OpenAPI
#endif
