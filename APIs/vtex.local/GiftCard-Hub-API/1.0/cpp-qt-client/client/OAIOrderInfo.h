/**
 * GiftCard Hub API
 * >ℹ️ Check the new [Payments onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Gift Card Hub API allows interactions with all Gift Card providers registered to a store from a single point.    Gift Card providers are systems capable of providing cards to be used in the buying process.    The following is the sequence diagram that represents calls in the purchase closing process.  ![](https://cdn.jsdelivr.net/gh/vtexdocs/dev-portal-content@main/images/giftcard-hub-api-overview-0.png)    **Checkout + Gateway**: Systems responsible for the sale and for processing orders and payments.    **Gift Card Hub**: System responsible for managing multiple registered Gift Card providers for a store.    **Gift Card Provider**: System responsible for providing the Gift Cards available to the user not closing a purchase. This system can be implemented by third parties.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrderInfo.h
 *
 * 
 */

#ifndef OAIOrderInfo_H
#define OAIOrderInfo_H

#include <QJsonObject>

#include "OAICart1.h"
#include "OAIClientProfile.h"
#include "OAIShipping.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICart1;
class OAIClientProfile;
class OAIShipping;

class OAIOrderInfo : public OAIObject {
public:
    OAIOrderInfo();
    OAIOrderInfo(QString json);
    ~OAIOrderInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICart1 getCart() const;
    void setCart(const OAICart1 &cart);
    bool is_cart_Set() const;
    bool is_cart_Valid() const;

    OAIClientProfile getClientProfile() const;
    void setClientProfile(const OAIClientProfile &client_profile);
    bool is_client_profile_Set() const;
    bool is_client_profile_Valid() const;

    QString getOrderId() const;
    void setOrderId(const QString &order_id);
    bool is_order_id_Set() const;
    bool is_order_id_Valid() const;

    qint32 getSequence() const;
    void setSequence(const qint32 &sequence);
    bool is_sequence_Set() const;
    bool is_sequence_Valid() const;

    OAIShipping getShipping() const;
    void setShipping(const OAIShipping &shipping);
    bool is_shipping_Set() const;
    bool is_shipping_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICart1 m_cart;
    bool m_cart_isSet;
    bool m_cart_isValid;

    OAIClientProfile m_client_profile;
    bool m_client_profile_isSet;
    bool m_client_profile_isValid;

    QString m_order_id;
    bool m_order_id_isSet;
    bool m_order_id_isValid;

    qint32 m_sequence;
    bool m_sequence_isSet;
    bool m_sequence_isValid;

    OAIShipping m_shipping;
    bool m_shipping_isSet;
    bool m_shipping_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOrderInfo)

#endif // OAIOrderInfo_H
