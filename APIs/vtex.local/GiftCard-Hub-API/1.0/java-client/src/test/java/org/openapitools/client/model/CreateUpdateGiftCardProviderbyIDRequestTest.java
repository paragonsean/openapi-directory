/*
 * GiftCard Hub API
 * >ℹ️ Check the new [Payments onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Gift Card Hub API allows interactions with all Gift Card providers registered to a store from a single point.    Gift Card providers are systems capable of providing cards to be used in the buying process.    The following is the sequence diagram that represents calls in the purchase closing process.  ![](https://cdn.jsdelivr.net/gh/vtexdocs/dev-portal-content@main/images/giftcard-hub-api-overview-0.png)    **Checkout + Gateway**: Systems responsible for the sale and for processing orders and payments.    **Gift Card Hub**: System responsible for managing multiple registered Gift Card providers for a store.    **Gift Card Provider**: System responsible for providing the Gift Cards available to the user not closing a purchase. This system can be implemented by third parties.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CreateUpdateGiftCardProviderbyIDRequest
 */
public class CreateUpdateGiftCardProviderbyIDRequestTest {
    private final CreateUpdateGiftCardProviderbyIDRequest model = new CreateUpdateGiftCardProviderbyIDRequest();

    /**
     * Model tests for CreateUpdateGiftCardProviderbyIDRequest
     */
    @Test
    public void testCreateUpdateGiftCardProviderbyIDRequest() {
        // TODO: test CreateUpdateGiftCardProviderbyIDRequest
    }

    /**
     * Test the property 'appKey'
     */
    @Test
    public void appKeyTest() {
        // TODO: test appKey
    }

    /**
     * Test the property 'appToken'
     */
    @Test
    public void appTokenTest() {
        // TODO: test appToken
    }

    /**
     * Test the property 'cancelEnabled'
     */
    @Test
    public void cancelEnabledTest() {
        // TODO: test cancelEnabled
    }

    /**
     * Test the property 'oauthProvider'
     */
    @Test
    public void oauthProviderTest() {
        // TODO: test oauthProvider
    }

    /**
     * Test the property 'preAuthEnabled'
     */
    @Test
    public void preAuthEnabledTest() {
        // TODO: test preAuthEnabled
    }

    /**
     * Test the property 'serviceUrl'
     */
    @Test
    public void serviceUrlTest() {
        // TODO: test serviceUrl
    }

}
