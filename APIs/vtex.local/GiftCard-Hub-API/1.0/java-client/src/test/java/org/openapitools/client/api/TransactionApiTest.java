/*
 * GiftCard Hub API
 * >ℹ️ Check the new [Payments onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Gift Card Hub API allows interactions with all Gift Card providers registered to a store from a single point.    Gift Card providers are systems capable of providing cards to be used in the buying process.    The following is the sequence diagram that represents calls in the purchase closing process.  ![](https://cdn.jsdelivr.net/gh/vtexdocs/dev-portal-content@main/images/giftcard-hub-api-overview-0.png)    **Checkout + Gateway**: Systems responsible for the sale and for processing orders and payments.    **Gift Card Hub**: System responsible for managing multiple registered Gift Card providers for a store.    **Gift Card Provider**: System responsible for providing the Gift Cards available to the user not closing a purchase. This system can be implemented by third parties.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateGiftCardCancellationTransactionRequest;
import org.openapitools.client.model.CreateGiftCardSettlementTransactionRequest;
import org.openapitools.client.model.CreateGiftCardTransactionRequest;
import org.openapitools.client.model.CreateGiftCardinGiftCardProviderRequest;
import org.openapitools.client.model.GetGiftCardfromGiftCardProviderRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransactionApi
 */
@Disabled
public class TransactionApiTest {

    private final TransactionApi api = new TransactionApi();

    /**
     * Create GiftCard Cancellation Transaction
     *
     * Creates a cancellation transaction to a giftcard.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createGiftCardCancellationTransactionTest() throws ApiException {
        String accept = null;
        String contentType = null;
        String xVTEXAPIAppKey = null;
        String xVTEXAPIAppToken = null;
        String giftCardProviderID = null;
        String giftCardID = null;
        String tId = null;
        CreateGiftCardCancellationTransactionRequest createGiftCardCancellationTransactionRequest = null;
        Object response = api.createGiftCardCancellationTransaction(accept, contentType, xVTEXAPIAppKey, xVTEXAPIAppToken, giftCardProviderID, giftCardID, tId, createGiftCardCancellationTransactionRequest);
        // TODO: test validations
    }

    /**
     * Create GiftCard Settlement Transaction
     *
     * Creates a settlement transaction to a giftcard.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createGiftCardSettlementTransactionTest() throws ApiException {
        String accept = null;
        String contentType = null;
        String giftCardProviderID = null;
        String giftCardID = null;
        String tId = null;
        CreateGiftCardSettlementTransactionRequest createGiftCardSettlementTransactionRequest = null;
        Object response = api.createGiftCardSettlementTransaction(accept, contentType, giftCardProviderID, giftCardID, tId, createGiftCardSettlementTransactionRequest);
        // TODO: test validations
    }

    /**
     * Create GiftCard Transaction
     *
     * Creates a transaction to a giftcard.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createGiftCardTransactionTest() throws ApiException {
        String accept = null;
        String contentType = null;
        String xVTEXAPIAppKey = null;
        String xVTEXAPIAppToken = null;
        String giftCardProviderID = null;
        String giftCardID = null;
        CreateGiftCardTransactionRequest createGiftCardTransactionRequest = null;
        Object response = api.createGiftCardTransaction(accept, contentType, xVTEXAPIAppKey, xVTEXAPIAppToken, giftCardProviderID, giftCardID, createGiftCardTransactionRequest);
        // TODO: test validations
    }

    /**
     * Create GiftCard in GiftCard Provider
     *
     * Creates a giftcard in a giftcard provider.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createGiftCardinGiftCardProviderTest() throws ApiException {
        String accept = null;
        String contentType = null;
        String xVTEXAPIAppKey = null;
        String xVTEXAPIAppToken = null;
        String giftCardProviderID = null;
        CreateGiftCardinGiftCardProviderRequest createGiftCardinGiftCardProviderRequest = null;
        Object response = api.createGiftCardinGiftCardProvider(accept, contentType, xVTEXAPIAppKey, xVTEXAPIAppToken, giftCardProviderID, createGiftCardinGiftCardProviderRequest);
        // TODO: test validations
    }

    /**
     * Get GiftCard Authorization Transaction
     *
     * Returns the transaction authorization info.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGiftCardAuthorizationTransactionTest() throws ApiException {
        String accept = null;
        String contentType = null;
        String xVTEXAPIAppKey = null;
        String xVTEXAPIAppToken = null;
        String giftCardProviderID = null;
        String giftCardID = null;
        String transactionID = null;
        Object response = api.getGiftCardAuthorizationTransaction(accept, contentType, xVTEXAPIAppKey, xVTEXAPIAppToken, giftCardProviderID, giftCardID, transactionID);
        // TODO: test validations
    }

    /**
     * Get GiftCard Transaction by ID
     *
     * Returns a specific transaction from a giftcard.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGiftCardTransactionbyIDTest() throws ApiException {
        String accept = null;
        String contentType = null;
        String xVTEXAPIAppKey = null;
        String xVTEXAPIAppToken = null;
        String giftCardProviderID = null;
        String giftCardID = null;
        String transactionID = null;
        Object response = api.getGiftCardTransactionbyID(accept, contentType, xVTEXAPIAppKey, xVTEXAPIAppToken, giftCardProviderID, giftCardID, transactionID);
        // TODO: test validations
    }

    /**
     * Get GiftCard from GiftCard Provider
     *
     * Returns all giftcards from a giftcard provider according to the filters.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGiftCardfromGiftCardProviderTest() throws ApiException {
        String accept = null;
        String contentType = null;
        String xVTEXAPIAppKey = null;
        String xVTEXAPIAppToken = null;
        String reSTRange = null;
        String giftCardProviderID = null;
        GetGiftCardfromGiftCardProviderRequest getGiftCardfromGiftCardProviderRequest = null;
        Object response = api.getGiftCardfromGiftCardProvider(accept, contentType, xVTEXAPIAppKey, xVTEXAPIAppToken, reSTRange, giftCardProviderID, getGiftCardfromGiftCardProviderRequest);
        // TODO: test validations
    }

    /**
     * Get GiftCard from GiftCard Provider by ID
     *
     * Returns a specific giftcard from a giftcard provider.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGiftCardfromGiftCardProviderbyIDTest() throws ApiException {
        String accept = null;
        String contentType = null;
        String xVTEXAPIAppKey = null;
        String xVTEXAPIAppToken = null;
        String giftCardProviderID = null;
        String giftCardID = null;
        Object response = api.getGiftCardfromGiftCardProviderbyID(accept, contentType, xVTEXAPIAppKey, xVTEXAPIAppToken, giftCardProviderID, giftCardID);
        // TODO: test validations
    }

    /**
     * List All GiftCard Cancellation Transactions
     *
     * Returns a collection of cancellation transactions from a giftcard.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAllGiftCardCancellationTransactionsTest() throws ApiException {
        String accept = null;
        String contentType = null;
        String xVTEXAPIAppKey = null;
        String xVTEXAPIAppToken = null;
        String giftCardProviderID = null;
        String giftCardID = null;
        String tId = null;
        Object response = api.listAllGiftCardCancellationTransactions(accept, contentType, xVTEXAPIAppKey, xVTEXAPIAppToken, giftCardProviderID, giftCardID, tId);
        // TODO: test validations
    }

    /**
     * List All GiftCard Settlement Transactions
     *
     * Returns a collection of settlement transactions from a giftcard.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAllGiftCardSettlementTransactionsTest() throws ApiException {
        String accept = null;
        String contentType = null;
        String xVTEXAPIAppKey = null;
        String xVTEXAPIAppToken = null;
        String giftCardProviderID = null;
        String giftCardID = null;
        String tId = null;
        Object response = api.listAllGiftCardSettlementTransactions(accept, contentType, xVTEXAPIAppKey, xVTEXAPIAppToken, giftCardProviderID, giftCardID, tId);
        // TODO: test validations
    }

    /**
     * List All GiftCard Transactions
     *
     * Return all transaction from a giftcard.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAllGiftCardTransactionsTest() throws ApiException {
        String accept = null;
        String contentType = null;
        String xVTEXAPIAppKey = null;
        String xVTEXAPIAppToken = null;
        String giftCardProviderID = null;
        String giftCardID = null;
        Object response = api.listAllGiftCardTransactions(accept, contentType, xVTEXAPIAppKey, xVTEXAPIAppToken, giftCardProviderID, giftCardID);
        // TODO: test validations
    }

}
