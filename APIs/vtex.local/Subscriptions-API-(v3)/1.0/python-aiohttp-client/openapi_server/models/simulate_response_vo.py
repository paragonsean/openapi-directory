# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.shipping_estimate import ShippingEstimate
from openapi_server.models.simulate_response import SimulateResponse
from openapi_server.models.simulation_item_result import SimulationItemResult
from openapi_server.models.totalization import Totalization
from openapi_server import util


class SimulateResponseVO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, shipping_estimate: ShippingEstimate=None, simulate_response: SimulateResponse=None, simulation_items: List[SimulationItemResult]=None, totals: List[Totalization]=None):
        """SimulateResponseVO - a model defined in OpenAPI

        :param shipping_estimate: The shipping_estimate of this SimulateResponseVO.
        :param simulate_response: The simulate_response of this SimulateResponseVO.
        :param simulation_items: The simulation_items of this SimulateResponseVO.
        :param totals: The totals of this SimulateResponseVO.
        """
        self.openapi_types = {
            'shipping_estimate': ShippingEstimate,
            'simulate_response': SimulateResponse,
            'simulation_items': List[SimulationItemResult],
            'totals': List[Totalization]
        }

        self.attribute_map = {
            'shipping_estimate': 'shippingEstimate',
            'simulate_response': 'simulateResponse',
            'simulation_items': 'simulationItems',
            'totals': 'totals'
        }

        self._shipping_estimate = shipping_estimate
        self._simulate_response = simulate_response
        self._simulation_items = simulation_items
        self._totals = totals

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SimulateResponseVO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SimulateResponseVO of this SimulateResponseVO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def shipping_estimate(self):
        """Gets the shipping_estimate of this SimulateResponseVO.


        :return: The shipping_estimate of this SimulateResponseVO.
        :rtype: ShippingEstimate
        """
        return self._shipping_estimate

    @shipping_estimate.setter
    def shipping_estimate(self, shipping_estimate):
        """Sets the shipping_estimate of this SimulateResponseVO.


        :param shipping_estimate: The shipping_estimate of this SimulateResponseVO.
        :type shipping_estimate: ShippingEstimate
        """

        self._shipping_estimate = shipping_estimate

    @property
    def simulate_response(self):
        """Gets the simulate_response of this SimulateResponseVO.


        :return: The simulate_response of this SimulateResponseVO.
        :rtype: SimulateResponse
        """
        return self._simulate_response

    @simulate_response.setter
    def simulate_response(self, simulate_response):
        """Sets the simulate_response of this SimulateResponseVO.


        :param simulate_response: The simulate_response of this SimulateResponseVO.
        :type simulate_response: SimulateResponse
        """

        self._simulate_response = simulate_response

    @property
    def simulation_items(self):
        """Gets the simulation_items of this SimulateResponseVO.


        :return: The simulation_items of this SimulateResponseVO.
        :rtype: List[SimulationItemResult]
        """
        return self._simulation_items

    @simulation_items.setter
    def simulation_items(self, simulation_items):
        """Sets the simulation_items of this SimulateResponseVO.


        :param simulation_items: The simulation_items of this SimulateResponseVO.
        :type simulation_items: List[SimulationItemResult]
        """

        self._simulation_items = simulation_items

    @property
    def totals(self):
        """Gets the totals of this SimulateResponseVO.


        :return: The totals of this SimulateResponseVO.
        :rtype: List[Totalization]
        """
        return self._totals

    @totals.setter
    def totals(self, totals):
        """Sets the totals of this SimulateResponseVO.


        :param totals: The totals of this SimulateResponseVO.
        :type totals: List[Totalization]
        """

        self._totals = totals
