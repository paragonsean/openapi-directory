# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.purchase_context_available_gift_response import PurchaseContextAvailableGiftResponse
from openapi_server import util


class PurchaseContextSelectableGiftsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, available_gifts: List[PurchaseContextAvailableGiftResponse]=None, available_quantity: int=None, id: str=None):
        """PurchaseContextSelectableGiftsResponse - a model defined in OpenAPI

        :param available_gifts: The available_gifts of this PurchaseContextSelectableGiftsResponse.
        :param available_quantity: The available_quantity of this PurchaseContextSelectableGiftsResponse.
        :param id: The id of this PurchaseContextSelectableGiftsResponse.
        """
        self.openapi_types = {
            'available_gifts': List[PurchaseContextAvailableGiftResponse],
            'available_quantity': int,
            'id': str
        }

        self.attribute_map = {
            'available_gifts': 'availableGifts',
            'available_quantity': 'availableQuantity',
            'id': 'id'
        }

        self._available_gifts = available_gifts
        self._available_quantity = available_quantity
        self._id = id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PurchaseContextSelectableGiftsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PurchaseContextSelectableGiftsResponse of this PurchaseContextSelectableGiftsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def available_gifts(self):
        """Gets the available_gifts of this PurchaseContextSelectableGiftsResponse.


        :return: The available_gifts of this PurchaseContextSelectableGiftsResponse.
        :rtype: List[PurchaseContextAvailableGiftResponse]
        """
        return self._available_gifts

    @available_gifts.setter
    def available_gifts(self, available_gifts):
        """Sets the available_gifts of this PurchaseContextSelectableGiftsResponse.


        :param available_gifts: The available_gifts of this PurchaseContextSelectableGiftsResponse.
        :type available_gifts: List[PurchaseContextAvailableGiftResponse]
        """

        self._available_gifts = available_gifts

    @property
    def available_quantity(self):
        """Gets the available_quantity of this PurchaseContextSelectableGiftsResponse.


        :return: The available_quantity of this PurchaseContextSelectableGiftsResponse.
        :rtype: int
        """
        return self._available_quantity

    @available_quantity.setter
    def available_quantity(self, available_quantity):
        """Sets the available_quantity of this PurchaseContextSelectableGiftsResponse.


        :param available_quantity: The available_quantity of this PurchaseContextSelectableGiftsResponse.
        :type available_quantity: int
        """

        self._available_quantity = available_quantity

    @property
    def id(self):
        """Gets the id of this PurchaseContextSelectableGiftsResponse.


        :return: The id of this PurchaseContextSelectableGiftsResponse.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PurchaseContextSelectableGiftsResponse.


        :param id: The id of this PurchaseContextSelectableGiftsResponse.
        :type id: str
        """

        self._id = id
