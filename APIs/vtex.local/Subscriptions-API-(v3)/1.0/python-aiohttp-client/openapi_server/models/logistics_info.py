# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.logistics_info_delivery_window import LogisticsInfoDeliveryWindow
from openapi_server.models.logistics_info_sla import LogisticsInfoSLA
from openapi_server import util


class LogisticsInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address_id: str=None, delivery_window: LogisticsInfoDeliveryWindow=None, item_index: int=None, lock_ttl: str=None, pickup_id: str=None, price: int=None, quantity: int=None, selected_delivery_channel: str=None, selected_sla: str=None, shipping_estimate: str=None, sl_as: List[LogisticsInfoSLA]=None):
        """LogisticsInfo - a model defined in OpenAPI

        :param address_id: The address_id of this LogisticsInfo.
        :param delivery_window: The delivery_window of this LogisticsInfo.
        :param item_index: The item_index of this LogisticsInfo.
        :param lock_ttl: The lock_ttl of this LogisticsInfo.
        :param pickup_id: The pickup_id of this LogisticsInfo.
        :param price: The price of this LogisticsInfo.
        :param quantity: The quantity of this LogisticsInfo.
        :param selected_delivery_channel: The selected_delivery_channel of this LogisticsInfo.
        :param selected_sla: The selected_sla of this LogisticsInfo.
        :param shipping_estimate: The shipping_estimate of this LogisticsInfo.
        :param sl_as: The sl_as of this LogisticsInfo.
        """
        self.openapi_types = {
            'address_id': str,
            'delivery_window': LogisticsInfoDeliveryWindow,
            'item_index': int,
            'lock_ttl': str,
            'pickup_id': str,
            'price': int,
            'quantity': int,
            'selected_delivery_channel': str,
            'selected_sla': str,
            'shipping_estimate': str,
            'sl_as': List[LogisticsInfoSLA]
        }

        self.attribute_map = {
            'address_id': 'addressId',
            'delivery_window': 'deliveryWindow',
            'item_index': 'itemIndex',
            'lock_ttl': 'lockTtl',
            'pickup_id': 'pickupId',
            'price': 'price',
            'quantity': 'quantity',
            'selected_delivery_channel': 'selectedDeliveryChannel',
            'selected_sla': 'selectedSla',
            'shipping_estimate': 'shippingEstimate',
            'sl_as': 'slAs'
        }

        self._address_id = address_id
        self._delivery_window = delivery_window
        self._item_index = item_index
        self._lock_ttl = lock_ttl
        self._pickup_id = pickup_id
        self._price = price
        self._quantity = quantity
        self._selected_delivery_channel = selected_delivery_channel
        self._selected_sla = selected_sla
        self._shipping_estimate = shipping_estimate
        self._sl_as = sl_as

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LogisticsInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LogisticsInfo of this LogisticsInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address_id(self):
        """Gets the address_id of this LogisticsInfo.


        :return: The address_id of this LogisticsInfo.
        :rtype: str
        """
        return self._address_id

    @address_id.setter
    def address_id(self, address_id):
        """Sets the address_id of this LogisticsInfo.


        :param address_id: The address_id of this LogisticsInfo.
        :type address_id: str
        """

        self._address_id = address_id

    @property
    def delivery_window(self):
        """Gets the delivery_window of this LogisticsInfo.


        :return: The delivery_window of this LogisticsInfo.
        :rtype: LogisticsInfoDeliveryWindow
        """
        return self._delivery_window

    @delivery_window.setter
    def delivery_window(self, delivery_window):
        """Sets the delivery_window of this LogisticsInfo.


        :param delivery_window: The delivery_window of this LogisticsInfo.
        :type delivery_window: LogisticsInfoDeliveryWindow
        """

        self._delivery_window = delivery_window

    @property
    def item_index(self):
        """Gets the item_index of this LogisticsInfo.


        :return: The item_index of this LogisticsInfo.
        :rtype: int
        """
        return self._item_index

    @item_index.setter
    def item_index(self, item_index):
        """Sets the item_index of this LogisticsInfo.


        :param item_index: The item_index of this LogisticsInfo.
        :type item_index: int
        """

        self._item_index = item_index

    @property
    def lock_ttl(self):
        """Gets the lock_ttl of this LogisticsInfo.


        :return: The lock_ttl of this LogisticsInfo.
        :rtype: str
        """
        return self._lock_ttl

    @lock_ttl.setter
    def lock_ttl(self, lock_ttl):
        """Sets the lock_ttl of this LogisticsInfo.


        :param lock_ttl: The lock_ttl of this LogisticsInfo.
        :type lock_ttl: str
        """

        self._lock_ttl = lock_ttl

    @property
    def pickup_id(self):
        """Gets the pickup_id of this LogisticsInfo.


        :return: The pickup_id of this LogisticsInfo.
        :rtype: str
        """
        return self._pickup_id

    @pickup_id.setter
    def pickup_id(self, pickup_id):
        """Sets the pickup_id of this LogisticsInfo.


        :param pickup_id: The pickup_id of this LogisticsInfo.
        :type pickup_id: str
        """

        self._pickup_id = pickup_id

    @property
    def price(self):
        """Gets the price of this LogisticsInfo.


        :return: The price of this LogisticsInfo.
        :rtype: int
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this LogisticsInfo.


        :param price: The price of this LogisticsInfo.
        :type price: int
        """

        self._price = price

    @property
    def quantity(self):
        """Gets the quantity of this LogisticsInfo.

        Amount of units in the cart.

        :return: The quantity of this LogisticsInfo.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this LogisticsInfo.

        Amount of units in the cart.

        :param quantity: The quantity of this LogisticsInfo.
        :type quantity: int
        """

        self._quantity = quantity

    @property
    def selected_delivery_channel(self):
        """Gets the selected_delivery_channel of this LogisticsInfo.


        :return: The selected_delivery_channel of this LogisticsInfo.
        :rtype: str
        """
        return self._selected_delivery_channel

    @selected_delivery_channel.setter
    def selected_delivery_channel(self, selected_delivery_channel):
        """Sets the selected_delivery_channel of this LogisticsInfo.


        :param selected_delivery_channel: The selected_delivery_channel of this LogisticsInfo.
        :type selected_delivery_channel: str
        """

        self._selected_delivery_channel = selected_delivery_channel

    @property
    def selected_sla(self):
        """Gets the selected_sla of this LogisticsInfo.


        :return: The selected_sla of this LogisticsInfo.
        :rtype: str
        """
        return self._selected_sla

    @selected_sla.setter
    def selected_sla(self, selected_sla):
        """Sets the selected_sla of this LogisticsInfo.


        :param selected_sla: The selected_sla of this LogisticsInfo.
        :type selected_sla: str
        """

        self._selected_sla = selected_sla

    @property
    def shipping_estimate(self):
        """Gets the shipping_estimate of this LogisticsInfo.


        :return: The shipping_estimate of this LogisticsInfo.
        :rtype: str
        """
        return self._shipping_estimate

    @shipping_estimate.setter
    def shipping_estimate(self, shipping_estimate):
        """Sets the shipping_estimate of this LogisticsInfo.


        :param shipping_estimate: The shipping_estimate of this LogisticsInfo.
        :type shipping_estimate: str
        """

        self._shipping_estimate = shipping_estimate

    @property
    def sl_as(self):
        """Gets the sl_as of this LogisticsInfo.


        :return: The sl_as of this LogisticsInfo.
        :rtype: List[LogisticsInfoSLA]
        """
        return self._sl_as

    @sl_as.setter
    def sl_as(self, sl_as):
        """Sets the sl_as of this LogisticsInfo.


        :param sl_as: The sl_as of this LogisticsInfo.
        :type sl_as: List[LogisticsInfoSLA]
        """

        self._sl_as = sl_as
