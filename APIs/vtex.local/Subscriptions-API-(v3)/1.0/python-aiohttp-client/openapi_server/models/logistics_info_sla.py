# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.logistics_info_delivery_window import LogisticsInfoDeliveryWindow
from openapi_server import util


class LogisticsInfoSLA(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, available_delivery_windows: List[LogisticsInfoDeliveryWindow]=None, delivery_channel: str=None, delivery_windows: List[LogisticsInfoDeliveryWindow]=None, id: str=None, lock_ttl: str=None, pickup_point_id: str=None, price: int=None, shipping_estimate: str=None):
        """LogisticsInfoSLA - a model defined in OpenAPI

        :param available_delivery_windows: The available_delivery_windows of this LogisticsInfoSLA.
        :param delivery_channel: The delivery_channel of this LogisticsInfoSLA.
        :param delivery_windows: The delivery_windows of this LogisticsInfoSLA.
        :param id: The id of this LogisticsInfoSLA.
        :param lock_ttl: The lock_ttl of this LogisticsInfoSLA.
        :param pickup_point_id: The pickup_point_id of this LogisticsInfoSLA.
        :param price: The price of this LogisticsInfoSLA.
        :param shipping_estimate: The shipping_estimate of this LogisticsInfoSLA.
        """
        self.openapi_types = {
            'available_delivery_windows': List[LogisticsInfoDeliveryWindow],
            'delivery_channel': str,
            'delivery_windows': List[LogisticsInfoDeliveryWindow],
            'id': str,
            'lock_ttl': str,
            'pickup_point_id': str,
            'price': int,
            'shipping_estimate': str
        }

        self.attribute_map = {
            'available_delivery_windows': 'availableDeliveryWindows',
            'delivery_channel': 'deliveryChannel',
            'delivery_windows': 'deliveryWindows',
            'id': 'id',
            'lock_ttl': 'lockTtl',
            'pickup_point_id': 'pickupPointId',
            'price': 'price',
            'shipping_estimate': 'shippingEstimate'
        }

        self._available_delivery_windows = available_delivery_windows
        self._delivery_channel = delivery_channel
        self._delivery_windows = delivery_windows
        self._id = id
        self._lock_ttl = lock_ttl
        self._pickup_point_id = pickup_point_id
        self._price = price
        self._shipping_estimate = shipping_estimate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LogisticsInfoSLA':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LogisticsInfoSLA of this LogisticsInfoSLA.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def available_delivery_windows(self):
        """Gets the available_delivery_windows of this LogisticsInfoSLA.


        :return: The available_delivery_windows of this LogisticsInfoSLA.
        :rtype: List[LogisticsInfoDeliveryWindow]
        """
        return self._available_delivery_windows

    @available_delivery_windows.setter
    def available_delivery_windows(self, available_delivery_windows):
        """Sets the available_delivery_windows of this LogisticsInfoSLA.


        :param available_delivery_windows: The available_delivery_windows of this LogisticsInfoSLA.
        :type available_delivery_windows: List[LogisticsInfoDeliveryWindow]
        """

        self._available_delivery_windows = available_delivery_windows

    @property
    def delivery_channel(self):
        """Gets the delivery_channel of this LogisticsInfoSLA.


        :return: The delivery_channel of this LogisticsInfoSLA.
        :rtype: str
        """
        return self._delivery_channel

    @delivery_channel.setter
    def delivery_channel(self, delivery_channel):
        """Sets the delivery_channel of this LogisticsInfoSLA.


        :param delivery_channel: The delivery_channel of this LogisticsInfoSLA.
        :type delivery_channel: str
        """

        self._delivery_channel = delivery_channel

    @property
    def delivery_windows(self):
        """Gets the delivery_windows of this LogisticsInfoSLA.


        :return: The delivery_windows of this LogisticsInfoSLA.
        :rtype: List[LogisticsInfoDeliveryWindow]
        """
        return self._delivery_windows

    @delivery_windows.setter
    def delivery_windows(self, delivery_windows):
        """Sets the delivery_windows of this LogisticsInfoSLA.


        :param delivery_windows: The delivery_windows of this LogisticsInfoSLA.
        :type delivery_windows: List[LogisticsInfoDeliveryWindow]
        """

        self._delivery_windows = delivery_windows

    @property
    def id(self):
        """Gets the id of this LogisticsInfoSLA.


        :return: The id of this LogisticsInfoSLA.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this LogisticsInfoSLA.


        :param id: The id of this LogisticsInfoSLA.
        :type id: str
        """

        self._id = id

    @property
    def lock_ttl(self):
        """Gets the lock_ttl of this LogisticsInfoSLA.


        :return: The lock_ttl of this LogisticsInfoSLA.
        :rtype: str
        """
        return self._lock_ttl

    @lock_ttl.setter
    def lock_ttl(self, lock_ttl):
        """Sets the lock_ttl of this LogisticsInfoSLA.


        :param lock_ttl: The lock_ttl of this LogisticsInfoSLA.
        :type lock_ttl: str
        """

        self._lock_ttl = lock_ttl

    @property
    def pickup_point_id(self):
        """Gets the pickup_point_id of this LogisticsInfoSLA.


        :return: The pickup_point_id of this LogisticsInfoSLA.
        :rtype: str
        """
        return self._pickup_point_id

    @pickup_point_id.setter
    def pickup_point_id(self, pickup_point_id):
        """Sets the pickup_point_id of this LogisticsInfoSLA.


        :param pickup_point_id: The pickup_point_id of this LogisticsInfoSLA.
        :type pickup_point_id: str
        """

        self._pickup_point_id = pickup_point_id

    @property
    def price(self):
        """Gets the price of this LogisticsInfoSLA.


        :return: The price of this LogisticsInfoSLA.
        :rtype: int
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this LogisticsInfoSLA.


        :param price: The price of this LogisticsInfoSLA.
        :type price: int
        """

        self._price = price

    @property
    def shipping_estimate(self):
        """Gets the shipping_estimate of this LogisticsInfoSLA.


        :return: The shipping_estimate of this LogisticsInfoSLA.
        :rtype: str
        """
        return self._shipping_estimate

    @shipping_estimate.setter
    def shipping_estimate(self, shipping_estimate):
        """Sets the shipping_estimate of this LogisticsInfoSLA.


        :param shipping_estimate: The shipping_estimate of this LogisticsInfoSLA.
        :type shipping_estimate: str
        """

        self._shipping_estimate = shipping_estimate
