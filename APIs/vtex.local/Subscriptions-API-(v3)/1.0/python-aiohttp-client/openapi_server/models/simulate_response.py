# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.logistics_info import LogisticsInfo
from openapi_server.models.order_item import OrderItem
from openapi_server.models.payment_data import PaymentData
from openapi_server.models.purchase_context_selectable_gifts_response import PurchaseContextSelectableGiftsResponse
from openapi_server.models.simulate_message_response import SimulateMessageResponse
from openapi_server.models.simulation_item_result import SimulationItemResult
from openapi_server.models.totalization_response import TotalizationResponse
from openapi_server import util


class SimulateResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, country: str=None, items: List[OrderItem]=None, logistics_info: List[LogisticsInfo]=None, messages: List[SimulateMessageResponse]=None, payment_data: PaymentData=None, postal_code: str=None, selectable_gifts_response: List[PurchaseContextSelectableGiftsResponse]=None, simulation_items: List[SimulationItemResult]=None, totals: List[TotalizationResponse]=None):
        """SimulateResponse - a model defined in OpenAPI

        :param country: The country of this SimulateResponse.
        :param items: The items of this SimulateResponse.
        :param logistics_info: The logistics_info of this SimulateResponse.
        :param messages: The messages of this SimulateResponse.
        :param payment_data: The payment_data of this SimulateResponse.
        :param postal_code: The postal_code of this SimulateResponse.
        :param selectable_gifts_response: The selectable_gifts_response of this SimulateResponse.
        :param simulation_items: The simulation_items of this SimulateResponse.
        :param totals: The totals of this SimulateResponse.
        """
        self.openapi_types = {
            'country': str,
            'items': List[OrderItem],
            'logistics_info': List[LogisticsInfo],
            'messages': List[SimulateMessageResponse],
            'payment_data': PaymentData,
            'postal_code': str,
            'selectable_gifts_response': List[PurchaseContextSelectableGiftsResponse],
            'simulation_items': List[SimulationItemResult],
            'totals': List[TotalizationResponse]
        }

        self.attribute_map = {
            'country': 'country',
            'items': 'items',
            'logistics_info': 'logisticsInfo',
            'messages': 'messages',
            'payment_data': 'paymentData',
            'postal_code': 'postalCode',
            'selectable_gifts_response': 'selectableGiftsResponse',
            'simulation_items': 'simulationItems',
            'totals': 'totals'
        }

        self._country = country
        self._items = items
        self._logistics_info = logistics_info
        self._messages = messages
        self._payment_data = payment_data
        self._postal_code = postal_code
        self._selectable_gifts_response = selectable_gifts_response
        self._simulation_items = simulation_items
        self._totals = totals

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SimulateResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SimulateResponse of this SimulateResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def country(self):
        """Gets the country of this SimulateResponse.


        :return: The country of this SimulateResponse.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this SimulateResponse.


        :param country: The country of this SimulateResponse.
        :type country: str
        """

        self._country = country

    @property
    def items(self):
        """Gets the items of this SimulateResponse.


        :return: The items of this SimulateResponse.
        :rtype: List[OrderItem]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this SimulateResponse.


        :param items: The items of this SimulateResponse.
        :type items: List[OrderItem]
        """

        self._items = items

    @property
    def logistics_info(self):
        """Gets the logistics_info of this SimulateResponse.


        :return: The logistics_info of this SimulateResponse.
        :rtype: List[LogisticsInfo]
        """
        return self._logistics_info

    @logistics_info.setter
    def logistics_info(self, logistics_info):
        """Sets the logistics_info of this SimulateResponse.


        :param logistics_info: The logistics_info of this SimulateResponse.
        :type logistics_info: List[LogisticsInfo]
        """

        self._logistics_info = logistics_info

    @property
    def messages(self):
        """Gets the messages of this SimulateResponse.


        :return: The messages of this SimulateResponse.
        :rtype: List[SimulateMessageResponse]
        """
        return self._messages

    @messages.setter
    def messages(self, messages):
        """Sets the messages of this SimulateResponse.


        :param messages: The messages of this SimulateResponse.
        :type messages: List[SimulateMessageResponse]
        """

        self._messages = messages

    @property
    def payment_data(self):
        """Gets the payment_data of this SimulateResponse.


        :return: The payment_data of this SimulateResponse.
        :rtype: PaymentData
        """
        return self._payment_data

    @payment_data.setter
    def payment_data(self, payment_data):
        """Sets the payment_data of this SimulateResponse.


        :param payment_data: The payment_data of this SimulateResponse.
        :type payment_data: PaymentData
        """

        self._payment_data = payment_data

    @property
    def postal_code(self):
        """Gets the postal_code of this SimulateResponse.


        :return: The postal_code of this SimulateResponse.
        :rtype: str
        """
        return self._postal_code

    @postal_code.setter
    def postal_code(self, postal_code):
        """Sets the postal_code of this SimulateResponse.


        :param postal_code: The postal_code of this SimulateResponse.
        :type postal_code: str
        """

        self._postal_code = postal_code

    @property
    def selectable_gifts_response(self):
        """Gets the selectable_gifts_response of this SimulateResponse.


        :return: The selectable_gifts_response of this SimulateResponse.
        :rtype: List[PurchaseContextSelectableGiftsResponse]
        """
        return self._selectable_gifts_response

    @selectable_gifts_response.setter
    def selectable_gifts_response(self, selectable_gifts_response):
        """Sets the selectable_gifts_response of this SimulateResponse.


        :param selectable_gifts_response: The selectable_gifts_response of this SimulateResponse.
        :type selectable_gifts_response: List[PurchaseContextSelectableGiftsResponse]
        """

        self._selectable_gifts_response = selectable_gifts_response

    @property
    def simulation_items(self):
        """Gets the simulation_items of this SimulateResponse.


        :return: The simulation_items of this SimulateResponse.
        :rtype: List[SimulationItemResult]
        """
        return self._simulation_items

    @simulation_items.setter
    def simulation_items(self, simulation_items):
        """Sets the simulation_items of this SimulateResponse.


        :param simulation_items: The simulation_items of this SimulateResponse.
        :type simulation_items: List[SimulationItemResult]
        """

        self._simulation_items = simulation_items

    @property
    def totals(self):
        """Gets the totals of this SimulateResponse.


        :return: The totals of this SimulateResponse.
        :rtype: List[TotalizationResponse]
        """
        return self._totals

    @totals.setter
    def totals(self, totals):
        """Sets the totals of this SimulateResponse.


        :param totals: The totals of this SimulateResponse.
        :type totals: List[TotalizationResponse]
        """

        self._totals = totals
