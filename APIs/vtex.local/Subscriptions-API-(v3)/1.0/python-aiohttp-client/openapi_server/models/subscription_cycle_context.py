# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.subscription_cycle_item_context import SubscriptionCycleItemContext
from openapi_server import util


class SubscriptionCycleContext(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address_id: str=None, address_type: str=None, items: List[SubscriptionCycleItemContext]=None, payment_account_id: str=None, payment_system: str=None, payment_system_group: str=None, payment_system_name: str=None):
        """SubscriptionCycleContext - a model defined in OpenAPI

        :param address_id: The address_id of this SubscriptionCycleContext.
        :param address_type: The address_type of this SubscriptionCycleContext.
        :param items: The items of this SubscriptionCycleContext.
        :param payment_account_id: The payment_account_id of this SubscriptionCycleContext.
        :param payment_system: The payment_system of this SubscriptionCycleContext.
        :param payment_system_group: The payment_system_group of this SubscriptionCycleContext.
        :param payment_system_name: The payment_system_name of this SubscriptionCycleContext.
        """
        self.openapi_types = {
            'address_id': str,
            'address_type': str,
            'items': List[SubscriptionCycleItemContext],
            'payment_account_id': str,
            'payment_system': str,
            'payment_system_group': str,
            'payment_system_name': str
        }

        self.attribute_map = {
            'address_id': 'addressId',
            'address_type': 'addressType',
            'items': 'items',
            'payment_account_id': 'paymentAccountId',
            'payment_system': 'paymentSystem',
            'payment_system_group': 'paymentSystemGroup',
            'payment_system_name': 'paymentSystemName'
        }

        self._address_id = address_id
        self._address_type = address_type
        self._items = items
        self._payment_account_id = payment_account_id
        self._payment_system = payment_system
        self._payment_system_group = payment_system_group
        self._payment_system_name = payment_system_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubscriptionCycleContext':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SubscriptionCycleContext of this SubscriptionCycleContext.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address_id(self):
        """Gets the address_id of this SubscriptionCycleContext.


        :return: The address_id of this SubscriptionCycleContext.
        :rtype: str
        """
        return self._address_id

    @address_id.setter
    def address_id(self, address_id):
        """Sets the address_id of this SubscriptionCycleContext.


        :param address_id: The address_id of this SubscriptionCycleContext.
        :type address_id: str
        """

        self._address_id = address_id

    @property
    def address_type(self):
        """Gets the address_type of this SubscriptionCycleContext.


        :return: The address_type of this SubscriptionCycleContext.
        :rtype: str
        """
        return self._address_type

    @address_type.setter
    def address_type(self, address_type):
        """Sets the address_type of this SubscriptionCycleContext.


        :param address_type: The address_type of this SubscriptionCycleContext.
        :type address_type: str
        """

        self._address_type = address_type

    @property
    def items(self):
        """Gets the items of this SubscriptionCycleContext.


        :return: The items of this SubscriptionCycleContext.
        :rtype: List[SubscriptionCycleItemContext]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this SubscriptionCycleContext.


        :param items: The items of this SubscriptionCycleContext.
        :type items: List[SubscriptionCycleItemContext]
        """

        self._items = items

    @property
    def payment_account_id(self):
        """Gets the payment_account_id of this SubscriptionCycleContext.


        :return: The payment_account_id of this SubscriptionCycleContext.
        :rtype: str
        """
        return self._payment_account_id

    @payment_account_id.setter
    def payment_account_id(self, payment_account_id):
        """Sets the payment_account_id of this SubscriptionCycleContext.


        :param payment_account_id: The payment_account_id of this SubscriptionCycleContext.
        :type payment_account_id: str
        """

        self._payment_account_id = payment_account_id

    @property
    def payment_system(self):
        """Gets the payment_system of this SubscriptionCycleContext.


        :return: The payment_system of this SubscriptionCycleContext.
        :rtype: str
        """
        return self._payment_system

    @payment_system.setter
    def payment_system(self, payment_system):
        """Sets the payment_system of this SubscriptionCycleContext.


        :param payment_system: The payment_system of this SubscriptionCycleContext.
        :type payment_system: str
        """

        self._payment_system = payment_system

    @property
    def payment_system_group(self):
        """Gets the payment_system_group of this SubscriptionCycleContext.


        :return: The payment_system_group of this SubscriptionCycleContext.
        :rtype: str
        """
        return self._payment_system_group

    @payment_system_group.setter
    def payment_system_group(self, payment_system_group):
        """Sets the payment_system_group of this SubscriptionCycleContext.


        :param payment_system_group: The payment_system_group of this SubscriptionCycleContext.
        :type payment_system_group: str
        """

        self._payment_system_group = payment_system_group

    @property
    def payment_system_name(self):
        """Gets the payment_system_name of this SubscriptionCycleContext.


        :return: The payment_system_name of this SubscriptionCycleContext.
        :rtype: str
        """
        return self._payment_system_name

    @payment_system_name.setter
    def payment_system_name(self, payment_system_name):
        """Sets the payment_system_name of this SubscriptionCycleContext.


        :param payment_system_name: The payment_system_name of this SubscriptionCycleContext.
        :type payment_system_name: str
        """

        self._payment_system_name = payment_system_name
