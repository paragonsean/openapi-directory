/**
 * Subscriptions API (v3)
 *   A **Subscription** is a list of items (SKUs) tied to certain recurring purchase settings:    - User profile  - Address  - Payment method  - Frequency  - Cycle    Once you have [configured subscriptions](https://help.vtex.com/tutorial/how-to-configure-subscriptions%20--1FA9dfE7vJqxBna9Nft5Sj) in your store, the Subscriptions API allows you to create, manage and monitor your customers' subscriptions.    ![image](https://user-images.githubusercontent.com/77292838/213024675-9407863b-0c55-4282-9442-306352716abe.png)    To read more about the Subscriptions feature, check our article [How Subscription works](https://help.vtex.com/tutorial/how-subscriptions-work--frequentlyAskedQuestions_4453).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SubscriptionThinItemRequest model module.
 * @module model/SubscriptionThinItemRequest
 * @version 1.0
 */
class SubscriptionThinItemRequest {
    /**
     * Constructs a new <code>SubscriptionThinItemRequest</code>.
     * @alias module:model/SubscriptionThinItemRequest
     */
    constructor() { 
        
        SubscriptionThinItemRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SubscriptionThinItemRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SubscriptionThinItemRequest} obj Optional instance to populate.
     * @return {module:model/SubscriptionThinItemRequest} The populated <code>SubscriptionThinItemRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubscriptionThinItemRequest();

            if (data.hasOwnProperty('manualPrice')) {
                obj['manualPrice'] = ApiClient.convertToType(data['manualPrice'], 'Number');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('skuId')) {
                obj['skuId'] = ApiClient.convertToType(data['skuId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SubscriptionThinItemRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SubscriptionThinItemRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['skuId'] && !(typeof data['skuId'] === 'string' || data['skuId'] instanceof String)) {
            throw new Error("Expected the field `skuId` to be a primitive type in the JSON string but got " + data['skuId']);
        }

        return true;
    }


}



/**
 * Manual price.
 * @member {Number} manualPrice
 */
SubscriptionThinItemRequest.prototype['manualPrice'] = undefined;

/**
 * Amount of units in the cart.
 * @member {Number} quantity
 */
SubscriptionThinItemRequest.prototype['quantity'] = undefined;

/**
 * SKU ID.
 * @member {String} skuId
 */
SubscriptionThinItemRequest.prototype['skuId'] = undefined;






export default SubscriptionThinItemRequest;

