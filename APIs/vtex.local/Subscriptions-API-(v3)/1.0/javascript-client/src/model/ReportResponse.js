/**
 * Subscriptions API (v3)
 *   A **Subscription** is a list of items (SKUs) tied to certain recurring purchase settings:    - User profile  - Address  - Payment method  - Frequency  - Cycle    Once you have [configured subscriptions](https://help.vtex.com/tutorial/how-to-configure-subscriptions%20--1FA9dfE7vJqxBna9Nft5Sj) in your store, the Subscriptions API allows you to create, manage and monitor your customers' subscriptions.    ![image](https://user-images.githubusercontent.com/77292838/213024675-9407863b-0c55-4282-9442-306352716abe.png)    To read more about the Subscriptions feature, check our article [How Subscription works](https://help.vtex.com/tutorial/how-subscriptions-work--frequentlyAskedQuestions_4453).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReportResponse model module.
 * @module model/ReportResponse
 * @version 1.0
 */
class ReportResponse {
    /**
     * Constructs a new <code>ReportResponse</code>.
     * @alias module:model/ReportResponse
     */
    constructor() { 
        
        ReportResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReportResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReportResponse} obj Optional instance to populate.
     * @return {module:model/ReportResponse} The populated <code>ReportResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReportResponse();

            if (data.hasOwnProperty('canceled')) {
                obj['canceled'] = ApiClient.convertToType(data['canceled'], 'Boolean');
            }
            if (data.hasOwnProperty('completedDate')) {
                obj['completedDate'] = ApiClient.convertToType(data['completedDate'], 'Date');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('enqueueDate')) {
                obj['enqueueDate'] = ApiClient.convertToType(data['enqueueDate'], 'Date');
            }
            if (data.hasOwnProperty('errorCount')) {
                obj['errorCount'] = ApiClient.convertToType(data['errorCount'], 'Number');
            }
            if (data.hasOwnProperty('finished')) {
                obj['finished'] = ApiClient.convertToType(data['finished'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('lastErrorMessage')) {
                obj['lastErrorMessage'] = ApiClient.convertToType(data['lastErrorMessage'], 'String');
            }
            if (data.hasOwnProperty('lastUpdateTime')) {
                obj['lastUpdateTime'] = ApiClient.convertToType(data['lastUpdateTime'], 'Date');
            }
            if (data.hasOwnProperty('linkToDownload')) {
                obj['linkToDownload'] = ApiClient.convertToType(data['linkToDownload'], 'String');
            }
            if (data.hasOwnProperty('outputType')) {
                obj['outputType'] = ApiClient.convertToType(data['outputType'], 'String');
            }
            if (data.hasOwnProperty('percentageProcessed')) {
                obj['percentageProcessed'] = ApiClient.convertToType(data['percentageProcessed'], 'Number');
            }
            if (data.hasOwnProperty('recordsProcessed')) {
                obj['recordsProcessed'] = ApiClient.convertToType(data['recordsProcessed'], 'Number');
            }
            if (data.hasOwnProperty('recordsSum')) {
                obj['recordsSum'] = ApiClient.convertToType(data['recordsSum'], 'Number');
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ApiClient.convertToType(data['startDate'], 'Date');
            }
            if (data.hasOwnProperty('statusMessage')) {
                obj['statusMessage'] = ApiClient.convertToType(data['statusMessage'], 'String');
            }
            if (data.hasOwnProperty('zipped')) {
                obj['zipped'] = ApiClient.convertToType(data['zipped'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReportResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReportResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['lastErrorMessage'] && !(typeof data['lastErrorMessage'] === 'string' || data['lastErrorMessage'] instanceof String)) {
            throw new Error("Expected the field `lastErrorMessage` to be a primitive type in the JSON string but got " + data['lastErrorMessage']);
        }
        // ensure the json data is a string
        if (data['linkToDownload'] && !(typeof data['linkToDownload'] === 'string' || data['linkToDownload'] instanceof String)) {
            throw new Error("Expected the field `linkToDownload` to be a primitive type in the JSON string but got " + data['linkToDownload']);
        }
        // ensure the json data is a string
        if (data['outputType'] && !(typeof data['outputType'] === 'string' || data['outputType'] instanceof String)) {
            throw new Error("Expected the field `outputType` to be a primitive type in the JSON string but got " + data['outputType']);
        }
        // ensure the json data is a string
        if (data['statusMessage'] && !(typeof data['statusMessage'] === 'string' || data['statusMessage'] instanceof String)) {
            throw new Error("Expected the field `statusMessage` to be a primitive type in the JSON string but got " + data['statusMessage']);
        }

        return true;
    }


}



/**
 * @member {Boolean} canceled
 */
ReportResponse.prototype['canceled'] = undefined;

/**
 * @member {Date} completedDate
 */
ReportResponse.prototype['completedDate'] = undefined;

/**
 * @member {String} email
 */
ReportResponse.prototype['email'] = undefined;

/**
 * @member {Date} enqueueDate
 */
ReportResponse.prototype['enqueueDate'] = undefined;

/**
 * @member {Number} errorCount
 */
ReportResponse.prototype['errorCount'] = undefined;

/**
 * @member {Boolean} finished
 */
ReportResponse.prototype['finished'] = undefined;

/**
 * @member {String} id
 */
ReportResponse.prototype['id'] = undefined;

/**
 * @member {String} lastErrorMessage
 */
ReportResponse.prototype['lastErrorMessage'] = undefined;

/**
 * @member {Date} lastUpdateTime
 */
ReportResponse.prototype['lastUpdateTime'] = undefined;

/**
 * @member {String} linkToDownload
 */
ReportResponse.prototype['linkToDownload'] = undefined;

/**
 * @member {String} outputType
 */
ReportResponse.prototype['outputType'] = undefined;

/**
 * @member {Number} percentageProcessed
 */
ReportResponse.prototype['percentageProcessed'] = undefined;

/**
 * @member {Number} recordsProcessed
 */
ReportResponse.prototype['recordsProcessed'] = undefined;

/**
 * @member {Number} recordsSum
 */
ReportResponse.prototype['recordsSum'] = undefined;

/**
 * @member {Date} startDate
 */
ReportResponse.prototype['startDate'] = undefined;

/**
 * @member {String} statusMessage
 */
ReportResponse.prototype['statusMessage'] = undefined;

/**
 * @member {Boolean} zipped
 */
ReportResponse.prototype['zipped'] = undefined;






export default ReportResponse;

