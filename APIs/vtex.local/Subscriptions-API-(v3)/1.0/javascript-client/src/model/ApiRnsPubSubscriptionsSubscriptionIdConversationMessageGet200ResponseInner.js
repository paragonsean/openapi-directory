/**
 * Subscriptions API (v3)
 *   A **Subscription** is a list of items (SKUs) tied to certain recurring purchase settings:    - User profile  - Address  - Payment method  - Frequency  - Cycle    Once you have [configured subscriptions](https://help.vtex.com/tutorial/how-to-configure-subscriptions%20--1FA9dfE7vJqxBna9Nft5Sj) in your store, the Subscriptions API allows you to create, manage and monitor your customers' subscriptions.    ![image](https://user-images.githubusercontent.com/77292838/213024675-9407863b-0c55-4282-9442-306352716abe.png)    To read more about the Subscriptions feature, check our article [How Subscription works](https://help.vtex.com/tutorial/how-subscriptions-work--frequentlyAskedQuestions_4453).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom from './ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom';
import ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerToInner from './ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerToInner';

/**
 * The ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInner model module.
 * @module model/ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInner
 * @version 1.0
 */
class ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInner {
    /**
     * Constructs a new <code>ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInner</code>.
     * @alias module:model/ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInner
     */
    constructor() { 
        
        ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInner} obj Optional instance to populate.
     * @return {module:model/ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInner} The populated <code>ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInner();

            if (data.hasOwnProperty('attachmentNames')) {
                obj['attachmentNames'] = ApiClient.convertToType(data['attachmentNames'], ['String']);
            }
            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], 'String');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'String');
            }
            if (data.hasOwnProperty('firstWords')) {
                obj['firstWords'] = ApiClient.convertToType(data['firstWords'], 'String');
            }
            if (data.hasOwnProperty('from')) {
                obj['from'] = ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom.constructFromObject(data['from']);
            }
            if (data.hasOwnProperty('hasAttachment')) {
                obj['hasAttachment'] = ApiClient.convertToType(data['hasAttachment'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('subject')) {
                obj['subject'] = ApiClient.convertToType(data['subject'], 'String');
            }
            if (data.hasOwnProperty('to')) {
                obj['to'] = ApiClient.convertToType(data['to'], [ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerToInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['attachmentNames'])) {
            throw new Error("Expected the field `attachmentNames` to be an array in the JSON data but got " + data['attachmentNames']);
        }
        // ensure the json data is a string
        if (data['body'] && !(typeof data['body'] === 'string' || data['body'] instanceof String)) {
            throw new Error("Expected the field `body` to be a primitive type in the JSON string but got " + data['body']);
        }
        // ensure the json data is a string
        if (data['date'] && !(typeof data['date'] === 'string' || data['date'] instanceof String)) {
            throw new Error("Expected the field `date` to be a primitive type in the JSON string but got " + data['date']);
        }
        // ensure the json data is a string
        if (data['firstWords'] && !(typeof data['firstWords'] === 'string' || data['firstWords'] instanceof String)) {
            throw new Error("Expected the field `firstWords` to be a primitive type in the JSON string but got " + data['firstWords']);
        }
        // validate the optional field `from`
        if (data['from']) { // data not null
          ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom.validateJSON(data['from']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['subject'] && !(typeof data['subject'] === 'string' || data['subject'] instanceof String)) {
            throw new Error("Expected the field `subject` to be a primitive type in the JSON string but got " + data['subject']);
        }
        if (data['to']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['to'])) {
                throw new Error("Expected the field `to` to be an array in the JSON data but got " + data['to']);
            }
            // validate the optional field `to` (array)
            for (const item of data['to']) {
                ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerToInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Attachment names.
 * @member {Array.<String>} attachmentNames
 */
ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInner.prototype['attachmentNames'] = undefined;

/**
 * HTML content of the message's body.
 * @member {String} body
 */
ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInner.prototype['body'] = undefined;

/**
 * Date of message.
 * @member {String} date
 */
ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInner.prototype['date'] = undefined;

/**
 * First words of the message text.
 * @member {String} firstWords
 */
ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInner.prototype['firstWords'] = undefined;

/**
 * @member {module:model/ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom} from
 */
ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInner.prototype['from'] = undefined;

/**
 * Indicates whether the message has at least one attachment.
 * @member {Boolean} hasAttachment
 */
ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInner.prototype['hasAttachment'] = undefined;

/**
 * Message ID
 * @member {String} id
 */
ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInner.prototype['id'] = undefined;

/**
 * Message subject.
 * @member {String} subject
 */
ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInner.prototype['subject'] = undefined;

/**
 * Information regarding the message receivers.
 * @member {Array.<module:model/ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerToInner>} to
 */
ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInner.prototype['to'] = undefined;






export default ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInner;

