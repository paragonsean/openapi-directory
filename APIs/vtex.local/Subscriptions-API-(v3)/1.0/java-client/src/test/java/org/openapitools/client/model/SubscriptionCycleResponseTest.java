/*
 * Subscriptions API (v3)
 *   A **Subscription** is a list of items (SKUs) tied to certain recurring purchase settings:    - User profile  - Address  - Payment method  - Frequency  - Cycle    Once you have [configured subscriptions](https://help.vtex.com/tutorial/how-to-configure-subscriptions%20--1FA9dfE7vJqxBna9Nft5Sj) in your store, the Subscriptions API allows you to create, manage and monitor your customers' subscriptions.    ![image](https://user-images.githubusercontent.com/77292838/213024675-9407863b-0c55-4282-9442-306352716abe.png)    To read more about the Subscriptions feature, check our article [How Subscription works](https://help.vtex.com/tutorial/how-subscriptions-work--frequentlyAskedQuestions_4453).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.SimulationItemResult;
import org.openapitools.client.model.SubscriptionCycleContext;
import org.openapitools.client.model.SubscriptionCycleOrderInfo;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for SubscriptionCycleResponse
 */
public class SubscriptionCycleResponseTest {
    private final SubscriptionCycleResponse model = new SubscriptionCycleResponse();

    /**
     * Model tests for SubscriptionCycleResponse
     */
    @Test
    public void testSubscriptionCycleResponse() {
        // TODO: test SubscriptionCycleResponse
    }

    /**
     * Test the property 'context'
     */
    @Test
    public void contextTest() {
        // TODO: test context
    }

    /**
     * Test the property 'customerEmail'
     */
    @Test
    public void customerEmailTest() {
        // TODO: test customerEmail
    }

    /**
     * Test the property 'cycleCount'
     */
    @Test
    public void cycleCountTest() {
        // TODO: test cycleCount
    }

    /**
     * Test the property 'date'
     */
    @Test
    public void dateTest() {
        // TODO: test date
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'isInRetry'
     */
    @Test
    public void isInRetryTest() {
        // TODO: test isInRetry
    }

    /**
     * Test the property 'lastUpdate'
     */
    @Test
    public void lastUpdateTest() {
        // TODO: test lastUpdate
    }

    /**
     * Test the property 'message'
     */
    @Test
    public void messageTest() {
        // TODO: test message
    }

    /**
     * Test the property 'orderInfo'
     */
    @Test
    public void orderInfoTest() {
        // TODO: test orderInfo
    }

    /**
     * Test the property 'simulationItems'
     */
    @Test
    public void simulationItemsTest() {
        // TODO: test simulationItems
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'subscriptionId'
     */
    @Test
    public void subscriptionIdTest() {
        // TODO: test subscriptionId
    }

}
