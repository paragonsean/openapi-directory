/*
 * Subscriptions API (v3)
 *   A **Subscription** is a list of items (SKUs) tied to certain recurring purchase settings:    - User profile  - Address  - Payment method  - Frequency  - Cycle    Once you have [configured subscriptions](https://help.vtex.com/tutorial/how-to-configure-subscriptions%20--1FA9dfE7vJqxBna9Nft5Sj) in your store, the Subscriptions API allows you to create, manage and monitor your customers' subscriptions.    ![image](https://user-images.githubusercontent.com/77292838/213024675-9407863b-0c55-4282-9442-306352716abe.png)    To read more about the Subscriptions feature, check our article [How Subscription works](https://help.vtex.com/tutorial/how-subscriptions-work--frequentlyAskedQuestions_4453).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Information regarding the message sender.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:55:48.114297-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom {
  public static final String SERIALIZED_NAME_ALIAS_MASK_TYPE = "aliasMaskType";
  @SerializedName(SERIALIZED_NAME_ALIAS_MASK_TYPE)
  private String aliasMaskType;

  public static final String SERIALIZED_NAME_CONVERSATION_RELATED_TO = "conversationRelatedTo";
  @SerializedName(SERIALIZED_NAME_CONVERSATION_RELATED_TO)
  private String conversationRelatedTo;

  public static final String SERIALIZED_NAME_CONVERSATION_SUBJECT = "conversationSubject";
  @SerializedName(SERIALIZED_NAME_CONVERSATION_SUBJECT)
  private String conversationSubject;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_EMAIL_ALIAS = "emailAlias";
  @SerializedName(SERIALIZED_NAME_EMAIL_ALIAS)
  private String emailAlias;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ROLE = "role";
  @SerializedName(SERIALIZED_NAME_ROLE)
  private String role;

  public ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom() {
  }

  public ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom aliasMaskType(String aliasMaskType) {
    this.aliasMaskType = aliasMaskType;
    return this;
  }

  /**
   * Alias mask type.
   * @return aliasMaskType
   */
  @javax.annotation.Nullable
  public String getAliasMaskType() {
    return aliasMaskType;
  }

  public void setAliasMaskType(String aliasMaskType) {
    this.aliasMaskType = aliasMaskType;
  }


  public ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom conversationRelatedTo(String conversationRelatedTo) {
    this.conversationRelatedTo = conversationRelatedTo;
    return this;
  }

  /**
   * ID of the subscription related to the message.
   * @return conversationRelatedTo
   */
  @javax.annotation.Nullable
  public String getConversationRelatedTo() {
    return conversationRelatedTo;
  }

  public void setConversationRelatedTo(String conversationRelatedTo) {
    this.conversationRelatedTo = conversationRelatedTo;
  }


  public ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom conversationSubject(String conversationSubject) {
    this.conversationSubject = conversationSubject;
    return this;
  }

  /**
   * Subject of conversation.
   * @return conversationSubject
   */
  @javax.annotation.Nullable
  public String getConversationSubject() {
    return conversationSubject;
  }

  public void setConversationSubject(String conversationSubject) {
    this.conversationSubject = conversationSubject;
  }


  public ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Email address.
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom emailAlias(String emailAlias) {
    this.emailAlias = emailAlias;
    return this;
  }

  /**
   * Email alias.
   * @return emailAlias
   */
  @javax.annotation.Nullable
  public String getEmailAlias() {
    return emailAlias;
  }

  public void setEmailAlias(String emailAlias) {
    this.emailAlias = emailAlias;
  }


  public ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Name.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom role(String role) {
    this.role = role;
    return this;
  }

  /**
   * Role.
   * @return role
   */
  @javax.annotation.Nullable
  public String getRole() {
    return role;
  }

  public void setRole(String role) {
    this.role = role;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom apiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom = (ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom) o;
    return Objects.equals(this.aliasMaskType, apiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom.aliasMaskType) &&
        Objects.equals(this.conversationRelatedTo, apiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom.conversationRelatedTo) &&
        Objects.equals(this.conversationSubject, apiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom.conversationSubject) &&
        Objects.equals(this.email, apiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom.email) &&
        Objects.equals(this.emailAlias, apiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom.emailAlias) &&
        Objects.equals(this.name, apiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom.name) &&
        Objects.equals(this.role, apiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom.role);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aliasMaskType, conversationRelatedTo, conversationSubject, email, emailAlias, name, role);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom {\n");
    sb.append("    aliasMaskType: ").append(toIndentedString(aliasMaskType)).append("\n");
    sb.append("    conversationRelatedTo: ").append(toIndentedString(conversationRelatedTo)).append("\n");
    sb.append("    conversationSubject: ").append(toIndentedString(conversationSubject)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    emailAlias: ").append(toIndentedString(emailAlias)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("aliasMaskType");
    openapiFields.add("conversationRelatedTo");
    openapiFields.add("conversationSubject");
    openapiFields.add("email");
    openapiFields.add("emailAlias");
    openapiFields.add("name");
    openapiFields.add("role");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom is not found in the empty JSON string", ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("aliasMaskType") != null && !jsonObj.get("aliasMaskType").isJsonNull()) && !jsonObj.get("aliasMaskType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aliasMaskType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aliasMaskType").toString()));
      }
      if ((jsonObj.get("conversationRelatedTo") != null && !jsonObj.get("conversationRelatedTo").isJsonNull()) && !jsonObj.get("conversationRelatedTo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conversationRelatedTo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conversationRelatedTo").toString()));
      }
      if ((jsonObj.get("conversationSubject") != null && !jsonObj.get("conversationSubject").isJsonNull()) && !jsonObj.get("conversationSubject").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conversationSubject` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conversationSubject").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("emailAlias") != null && !jsonObj.get("emailAlias").isJsonNull()) && !jsonObj.get("emailAlias").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `emailAlias` to be a primitive type in the JSON string but got `%s`", jsonObj.get("emailAlias").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("role") != null && !jsonObj.get("role").isJsonNull()) && !jsonObj.get("role").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `role` to be a primitive type in the JSON string but got `%s`", jsonObj.get("role").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom.class));

       return (TypeAdapter<T>) new TypeAdapter<ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom>() {
           @Override
           public void write(JsonWriter out, ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom
   * @throws IOException if the JSON string is invalid with respect to ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom
   */
  public static ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom.class);
  }

  /**
   * Convert an instance of ApiRnsPubSubscriptionsSubscriptionIdConversationMessageGet200ResponseInnerFrom to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

