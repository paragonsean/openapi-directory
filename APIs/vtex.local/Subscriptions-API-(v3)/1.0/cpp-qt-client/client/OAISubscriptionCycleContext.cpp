/**
 * Subscriptions API (v3)
 *   A **Subscription** is a list of items (SKUs) tied to certain recurring purchase settings:    - User profile  - Address  - Payment method  - Frequency  - Cycle    Once you have [configured subscriptions](https://help.vtex.com/tutorial/how-to-configure-subscriptions%20--1FA9dfE7vJqxBna9Nft5Sj) in your store, the Subscriptions API allows you to create, manage and monitor your customers' subscriptions.    ![image](https://user-images.githubusercontent.com/77292838/213024675-9407863b-0c55-4282-9442-306352716abe.png)    To read more about the Subscriptions feature, check our article [How Subscription works](https://help.vtex.com/tutorial/how-subscriptions-work--frequentlyAskedQuestions_4453).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISubscriptionCycleContext.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISubscriptionCycleContext::OAISubscriptionCycleContext(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISubscriptionCycleContext::OAISubscriptionCycleContext() {
    this->initializeModel();
}

OAISubscriptionCycleContext::~OAISubscriptionCycleContext() {}

void OAISubscriptionCycleContext::initializeModel() {

    m_address_id_isSet = false;
    m_address_id_isValid = false;

    m_address_type_isSet = false;
    m_address_type_isValid = false;

    m_items_isSet = false;
    m_items_isValid = false;

    m_payment_account_id_isSet = false;
    m_payment_account_id_isValid = false;

    m_payment_system_isSet = false;
    m_payment_system_isValid = false;

    m_payment_system_group_isSet = false;
    m_payment_system_group_isValid = false;

    m_payment_system_name_isSet = false;
    m_payment_system_name_isValid = false;
}

void OAISubscriptionCycleContext::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISubscriptionCycleContext::fromJsonObject(QJsonObject json) {

    m_address_id_isValid = ::OpenAPI::fromJsonValue(m_address_id, json[QString("addressId")]);
    m_address_id_isSet = !json[QString("addressId")].isNull() && m_address_id_isValid;

    m_address_type_isValid = ::OpenAPI::fromJsonValue(m_address_type, json[QString("addressType")]);
    m_address_type_isSet = !json[QString("addressType")].isNull() && m_address_type_isValid;

    m_items_isValid = ::OpenAPI::fromJsonValue(m_items, json[QString("items")]);
    m_items_isSet = !json[QString("items")].isNull() && m_items_isValid;

    m_payment_account_id_isValid = ::OpenAPI::fromJsonValue(m_payment_account_id, json[QString("paymentAccountId")]);
    m_payment_account_id_isSet = !json[QString("paymentAccountId")].isNull() && m_payment_account_id_isValid;

    m_payment_system_isValid = ::OpenAPI::fromJsonValue(m_payment_system, json[QString("paymentSystem")]);
    m_payment_system_isSet = !json[QString("paymentSystem")].isNull() && m_payment_system_isValid;

    m_payment_system_group_isValid = ::OpenAPI::fromJsonValue(m_payment_system_group, json[QString("paymentSystemGroup")]);
    m_payment_system_group_isSet = !json[QString("paymentSystemGroup")].isNull() && m_payment_system_group_isValid;

    m_payment_system_name_isValid = ::OpenAPI::fromJsonValue(m_payment_system_name, json[QString("paymentSystemName")]);
    m_payment_system_name_isSet = !json[QString("paymentSystemName")].isNull() && m_payment_system_name_isValid;
}

QString OAISubscriptionCycleContext::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISubscriptionCycleContext::asJsonObject() const {
    QJsonObject obj;
    if (m_address_id_isSet) {
        obj.insert(QString("addressId"), ::OpenAPI::toJsonValue(m_address_id));
    }
    if (m_address_type_isSet) {
        obj.insert(QString("addressType"), ::OpenAPI::toJsonValue(m_address_type));
    }
    if (m_items.size() > 0) {
        obj.insert(QString("items"), ::OpenAPI::toJsonValue(m_items));
    }
    if (m_payment_account_id_isSet) {
        obj.insert(QString("paymentAccountId"), ::OpenAPI::toJsonValue(m_payment_account_id));
    }
    if (m_payment_system_isSet) {
        obj.insert(QString("paymentSystem"), ::OpenAPI::toJsonValue(m_payment_system));
    }
    if (m_payment_system_group_isSet) {
        obj.insert(QString("paymentSystemGroup"), ::OpenAPI::toJsonValue(m_payment_system_group));
    }
    if (m_payment_system_name_isSet) {
        obj.insert(QString("paymentSystemName"), ::OpenAPI::toJsonValue(m_payment_system_name));
    }
    return obj;
}

QString OAISubscriptionCycleContext::getAddressId() const {
    return m_address_id;
}
void OAISubscriptionCycleContext::setAddressId(const QString &address_id) {
    m_address_id = address_id;
    m_address_id_isSet = true;
}

bool OAISubscriptionCycleContext::is_address_id_Set() const{
    return m_address_id_isSet;
}

bool OAISubscriptionCycleContext::is_address_id_Valid() const{
    return m_address_id_isValid;
}

QString OAISubscriptionCycleContext::getAddressType() const {
    return m_address_type;
}
void OAISubscriptionCycleContext::setAddressType(const QString &address_type) {
    m_address_type = address_type;
    m_address_type_isSet = true;
}

bool OAISubscriptionCycleContext::is_address_type_Set() const{
    return m_address_type_isSet;
}

bool OAISubscriptionCycleContext::is_address_type_Valid() const{
    return m_address_type_isValid;
}

QList<OAISubscriptionCycleItemContext> OAISubscriptionCycleContext::getItems() const {
    return m_items;
}
void OAISubscriptionCycleContext::setItems(const QList<OAISubscriptionCycleItemContext> &items) {
    m_items = items;
    m_items_isSet = true;
}

bool OAISubscriptionCycleContext::is_items_Set() const{
    return m_items_isSet;
}

bool OAISubscriptionCycleContext::is_items_Valid() const{
    return m_items_isValid;
}

QString OAISubscriptionCycleContext::getPaymentAccountId() const {
    return m_payment_account_id;
}
void OAISubscriptionCycleContext::setPaymentAccountId(const QString &payment_account_id) {
    m_payment_account_id = payment_account_id;
    m_payment_account_id_isSet = true;
}

bool OAISubscriptionCycleContext::is_payment_account_id_Set() const{
    return m_payment_account_id_isSet;
}

bool OAISubscriptionCycleContext::is_payment_account_id_Valid() const{
    return m_payment_account_id_isValid;
}

QString OAISubscriptionCycleContext::getPaymentSystem() const {
    return m_payment_system;
}
void OAISubscriptionCycleContext::setPaymentSystem(const QString &payment_system) {
    m_payment_system = payment_system;
    m_payment_system_isSet = true;
}

bool OAISubscriptionCycleContext::is_payment_system_Set() const{
    return m_payment_system_isSet;
}

bool OAISubscriptionCycleContext::is_payment_system_Valid() const{
    return m_payment_system_isValid;
}

QString OAISubscriptionCycleContext::getPaymentSystemGroup() const {
    return m_payment_system_group;
}
void OAISubscriptionCycleContext::setPaymentSystemGroup(const QString &payment_system_group) {
    m_payment_system_group = payment_system_group;
    m_payment_system_group_isSet = true;
}

bool OAISubscriptionCycleContext::is_payment_system_group_Set() const{
    return m_payment_system_group_isSet;
}

bool OAISubscriptionCycleContext::is_payment_system_group_Valid() const{
    return m_payment_system_group_isValid;
}

QString OAISubscriptionCycleContext::getPaymentSystemName() const {
    return m_payment_system_name;
}
void OAISubscriptionCycleContext::setPaymentSystemName(const QString &payment_system_name) {
    m_payment_system_name = payment_system_name;
    m_payment_system_name_isSet = true;
}

bool OAISubscriptionCycleContext::is_payment_system_name_Set() const{
    return m_payment_system_name_isSet;
}

bool OAISubscriptionCycleContext::is_payment_system_name_Valid() const{
    return m_payment_system_name_isValid;
}

bool OAISubscriptionCycleContext::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_system_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_system_group_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_system_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISubscriptionCycleContext::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
