/**
 * Subscriptions API (v3)
 *   A **Subscription** is a list of items (SKUs) tied to certain recurring purchase settings:    - User profile  - Address  - Payment method  - Frequency  - Cycle    Once you have [configured subscriptions](https://help.vtex.com/tutorial/how-to-configure-subscriptions%20--1FA9dfE7vJqxBna9Nft5Sj) in your store, the Subscriptions API allows you to create, manage and monitor your customers' subscriptions.    ![image](https://user-images.githubusercontent.com/77292838/213024675-9407863b-0c55-4282-9442-306352716abe.png)    To read more about the Subscriptions feature, check our article [How Subscription works](https://help.vtex.com/tutorial/how-subscriptions-work--frequentlyAskedQuestions_4453).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPayment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPayment::OAIPayment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPayment::OAIPayment() {
    this->initializeModel();
}

OAIPayment::~OAIPayment() {}

void OAIPayment::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_bin_isSet = false;
    m_bin_isValid = false;

    m_card_number_isSet = false;
    m_card_number_isValid = false;

    m_fields_isSet = false;
    m_fields_isValid = false;

    m_group_isSet = false;
    m_group_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_installments_isSet = false;
    m_installments_isValid = false;

    m_parent_account_id_isSet = false;
    m_parent_account_id_isValid = false;

    m_payment_system_isSet = false;
    m_payment_system_isValid = false;

    m_reference_value_isSet = false;
    m_reference_value_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIPayment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPayment::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("accountId")]);
    m_account_id_isSet = !json[QString("accountId")].isNull() && m_account_id_isValid;

    m_bin_isValid = ::OpenAPI::fromJsonValue(m_bin, json[QString("bin")]);
    m_bin_isSet = !json[QString("bin")].isNull() && m_bin_isValid;

    m_card_number_isValid = ::OpenAPI::fromJsonValue(m_card_number, json[QString("cardNumber")]);
    m_card_number_isSet = !json[QString("cardNumber")].isNull() && m_card_number_isValid;

    m_fields_isValid = ::OpenAPI::fromJsonValue(m_fields, json[QString("fields")]);
    m_fields_isSet = !json[QString("fields")].isNull() && m_fields_isValid;

    m_group_isValid = ::OpenAPI::fromJsonValue(m_group, json[QString("group")]);
    m_group_isSet = !json[QString("group")].isNull() && m_group_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_installments_isValid = ::OpenAPI::fromJsonValue(m_installments, json[QString("installments")]);
    m_installments_isSet = !json[QString("installments")].isNull() && m_installments_isValid;

    m_parent_account_id_isValid = ::OpenAPI::fromJsonValue(m_parent_account_id, json[QString("parentAccountId")]);
    m_parent_account_id_isSet = !json[QString("parentAccountId")].isNull() && m_parent_account_id_isValid;

    m_payment_system_isValid = ::OpenAPI::fromJsonValue(m_payment_system, json[QString("paymentSystem")]);
    m_payment_system_isSet = !json[QString("paymentSystem")].isNull() && m_payment_system_isValid;

    m_reference_value_isValid = ::OpenAPI::fromJsonValue(m_reference_value, json[QString("referenceValue")]);
    m_reference_value_isSet = !json[QString("referenceValue")].isNull() && m_reference_value_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIPayment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPayment::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("accountId"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_bin_isSet) {
        obj.insert(QString("bin"), ::OpenAPI::toJsonValue(m_bin));
    }
    if (m_card_number_isSet) {
        obj.insert(QString("cardNumber"), ::OpenAPI::toJsonValue(m_card_number));
    }
    if (m_fields.size() > 0) {
        obj.insert(QString("fields"), ::OpenAPI::toJsonValue(m_fields));
    }
    if (m_group_isSet) {
        obj.insert(QString("group"), ::OpenAPI::toJsonValue(m_group));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_installments_isSet) {
        obj.insert(QString("installments"), ::OpenAPI::toJsonValue(m_installments));
    }
    if (m_parent_account_id_isSet) {
        obj.insert(QString("parentAccountId"), ::OpenAPI::toJsonValue(m_parent_account_id));
    }
    if (m_payment_system_isSet) {
        obj.insert(QString("paymentSystem"), ::OpenAPI::toJsonValue(m_payment_system));
    }
    if (m_reference_value_isSet) {
        obj.insert(QString("referenceValue"), ::OpenAPI::toJsonValue(m_reference_value));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAIPayment::getAccountId() const {
    return m_account_id;
}
void OAIPayment::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIPayment::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIPayment::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QString OAIPayment::getBin() const {
    return m_bin;
}
void OAIPayment::setBin(const QString &bin) {
    m_bin = bin;
    m_bin_isSet = true;
}

bool OAIPayment::is_bin_Set() const{
    return m_bin_isSet;
}

bool OAIPayment::is_bin_Valid() const{
    return m_bin_isValid;
}

QString OAIPayment::getCardNumber() const {
    return m_card_number;
}
void OAIPayment::setCardNumber(const QString &card_number) {
    m_card_number = card_number;
    m_card_number_isSet = true;
}

bool OAIPayment::is_card_number_Set() const{
    return m_card_number_isSet;
}

bool OAIPayment::is_card_number_Valid() const{
    return m_card_number_isValid;
}

QList<OAIPaymentField> OAIPayment::getFields() const {
    return m_fields;
}
void OAIPayment::setFields(const QList<OAIPaymentField> &fields) {
    m_fields = fields;
    m_fields_isSet = true;
}

bool OAIPayment::is_fields_Set() const{
    return m_fields_isSet;
}

bool OAIPayment::is_fields_Valid() const{
    return m_fields_isValid;
}

QString OAIPayment::getGroup() const {
    return m_group;
}
void OAIPayment::setGroup(const QString &group) {
    m_group = group;
    m_group_isSet = true;
}

bool OAIPayment::is_group_Set() const{
    return m_group_isSet;
}

bool OAIPayment::is_group_Valid() const{
    return m_group_isValid;
}

QString OAIPayment::getId() const {
    return m_id;
}
void OAIPayment::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIPayment::is_id_Set() const{
    return m_id_isSet;
}

bool OAIPayment::is_id_Valid() const{
    return m_id_isValid;
}

qint32 OAIPayment::getInstallments() const {
    return m_installments;
}
void OAIPayment::setInstallments(const qint32 &installments) {
    m_installments = installments;
    m_installments_isSet = true;
}

bool OAIPayment::is_installments_Set() const{
    return m_installments_isSet;
}

bool OAIPayment::is_installments_Valid() const{
    return m_installments_isValid;
}

QString OAIPayment::getParentAccountId() const {
    return m_parent_account_id;
}
void OAIPayment::setParentAccountId(const QString &parent_account_id) {
    m_parent_account_id = parent_account_id;
    m_parent_account_id_isSet = true;
}

bool OAIPayment::is_parent_account_id_Set() const{
    return m_parent_account_id_isSet;
}

bool OAIPayment::is_parent_account_id_Valid() const{
    return m_parent_account_id_isValid;
}

QString OAIPayment::getPaymentSystem() const {
    return m_payment_system;
}
void OAIPayment::setPaymentSystem(const QString &payment_system) {
    m_payment_system = payment_system;
    m_payment_system_isSet = true;
}

bool OAIPayment::is_payment_system_Set() const{
    return m_payment_system_isSet;
}

bool OAIPayment::is_payment_system_Valid() const{
    return m_payment_system_isValid;
}

qint64 OAIPayment::getReferenceValue() const {
    return m_reference_value;
}
void OAIPayment::setReferenceValue(const qint64 &reference_value) {
    m_reference_value = reference_value;
    m_reference_value_isSet = true;
}

bool OAIPayment::is_reference_value_Set() const{
    return m_reference_value_isSet;
}

bool OAIPayment::is_reference_value_Valid() const{
    return m_reference_value_isValid;
}

QString OAIPayment::getUrl() const {
    return m_url;
}
void OAIPayment::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIPayment::is_url_Set() const{
    return m_url_isSet;
}

bool OAIPayment::is_url_Valid() const{
    return m_url_isValid;
}

qint64 OAIPayment::getValue() const {
    return m_value;
}
void OAIPayment::setValue(const qint64 &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIPayment::is_value_Set() const{
    return m_value_isSet;
}

bool OAIPayment::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIPayment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bin_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_card_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_installments_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_system_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reference_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPayment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
