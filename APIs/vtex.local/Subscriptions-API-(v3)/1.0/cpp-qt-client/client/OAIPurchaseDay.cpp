/**
 * Subscriptions API (v3)
 *   A **Subscription** is a list of items (SKUs) tied to certain recurring purchase settings:    - User profile  - Address  - Payment method  - Frequency  - Cycle    Once you have [configured subscriptions](https://help.vtex.com/tutorial/how-to-configure-subscriptions%20--1FA9dfE7vJqxBna9Nft5Sj) in your store, the Subscriptions API allows you to create, manage and monitor your customers' subscriptions.    ![image](https://user-images.githubusercontent.com/77292838/213024675-9407863b-0c55-4282-9442-306352716abe.png)    To read more about the Subscriptions feature, check our article [How Subscription works](https://help.vtex.com/tutorial/how-subscriptions-work--frequentlyAskedQuestions_4453).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPurchaseDay.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPurchaseDay::OAIPurchaseDay(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPurchaseDay::OAIPurchaseDay() {
    this->initializeModel();
}

OAIPurchaseDay::~OAIPurchaseDay() {}

void OAIPurchaseDay::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIPurchaseDay::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIPurchaseDay::fromJson(QString jsonString) {
    
    if ( jsonString.compare(QString::number(0), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_0;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(1), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_1;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(2), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_2;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(3), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_3;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(4), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_4;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(5), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_5;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(6), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_6;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(7), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_7;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(8), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_8;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(9), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_9;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(10), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_10;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(11), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_11;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(12), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_122;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(13), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_13;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(14), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_14;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(15), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_15;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(16), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_16;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(17), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_17;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(18), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_18;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(19), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_19;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(20), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_20;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(21), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_21;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(22), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_222;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(23), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_23;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(24), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_24;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(25), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_25;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(26), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_26;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(27), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_27;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(28), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_28;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(29), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_29;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(30), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_30;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(31), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_31;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(999), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_999;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(-6), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_62;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(-5), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_52;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(-4), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_42;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(-3), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_32;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(-2), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_22;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(-1), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPurchaseDay::_12;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIPurchaseDay::fromJsonValue(QJsonValue json) {
m_value = static_cast<eOAIPurchaseDay>(json.toInt());
}

QString OAIPurchaseDay::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIPurchaseDay::_0:
            val = QString::number(0);
            break;
        case eOAIPurchaseDay::_1:
            val = QString::number(1);
            break;
        case eOAIPurchaseDay::_2:
            val = QString::number(2);
            break;
        case eOAIPurchaseDay::_3:
            val = QString::number(3);
            break;
        case eOAIPurchaseDay::_4:
            val = QString::number(4);
            break;
        case eOAIPurchaseDay::_5:
            val = QString::number(5);
            break;
        case eOAIPurchaseDay::_6:
            val = QString::number(6);
            break;
        case eOAIPurchaseDay::_7:
            val = QString::number(7);
            break;
        case eOAIPurchaseDay::_8:
            val = QString::number(8);
            break;
        case eOAIPurchaseDay::_9:
            val = QString::number(9);
            break;
        case eOAIPurchaseDay::_10:
            val = QString::number(10);
            break;
        case eOAIPurchaseDay::_11:
            val = QString::number(11);
            break;
        case eOAIPurchaseDay::_122:
            val = QString::number(12);
            break;
        case eOAIPurchaseDay::_13:
            val = QString::number(13);
            break;
        case eOAIPurchaseDay::_14:
            val = QString::number(14);
            break;
        case eOAIPurchaseDay::_15:
            val = QString::number(15);
            break;
        case eOAIPurchaseDay::_16:
            val = QString::number(16);
            break;
        case eOAIPurchaseDay::_17:
            val = QString::number(17);
            break;
        case eOAIPurchaseDay::_18:
            val = QString::number(18);
            break;
        case eOAIPurchaseDay::_19:
            val = QString::number(19);
            break;
        case eOAIPurchaseDay::_20:
            val = QString::number(20);
            break;
        case eOAIPurchaseDay::_21:
            val = QString::number(21);
            break;
        case eOAIPurchaseDay::_222:
            val = QString::number(22);
            break;
        case eOAIPurchaseDay::_23:
            val = QString::number(23);
            break;
        case eOAIPurchaseDay::_24:
            val = QString::number(24);
            break;
        case eOAIPurchaseDay::_25:
            val = QString::number(25);
            break;
        case eOAIPurchaseDay::_26:
            val = QString::number(26);
            break;
        case eOAIPurchaseDay::_27:
            val = QString::number(27);
            break;
        case eOAIPurchaseDay::_28:
            val = QString::number(28);
            break;
        case eOAIPurchaseDay::_29:
            val = QString::number(29);
            break;
        case eOAIPurchaseDay::_30:
            val = QString::number(30);
            break;
        case eOAIPurchaseDay::_31:
            val = QString::number(31);
            break;
        case eOAIPurchaseDay::_999:
            val = QString::number(999);
            break;
        case eOAIPurchaseDay::_62:
            val = QString::number(-6);
            break;
        case eOAIPurchaseDay::_52:
            val = QString::number(-5);
            break;
        case eOAIPurchaseDay::_42:
            val = QString::number(-4);
            break;
        case eOAIPurchaseDay::_32:
            val = QString::number(-3);
            break;
        case eOAIPurchaseDay::_22:
            val = QString::number(-2);
            break;
        case eOAIPurchaseDay::_12:
            val = QString::number(-1);
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIPurchaseDay::asJsonValue() const {
    
    return QJsonValue(static_cast<int>(m_value));
}


OAIPurchaseDay::eOAIPurchaseDay OAIPurchaseDay::getValue() const {
    return m_value;
}

void OAIPurchaseDay::setValue(const OAIPurchaseDay::eOAIPurchaseDay& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIPurchaseDay::isSet() const {
    
    return m_value_isSet;
}

bool OAIPurchaseDay::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
