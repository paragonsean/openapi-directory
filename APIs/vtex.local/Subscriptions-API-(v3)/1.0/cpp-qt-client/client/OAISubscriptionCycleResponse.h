/**
 * Subscriptions API (v3)
 *   A **Subscription** is a list of items (SKUs) tied to certain recurring purchase settings:    - User profile  - Address  - Payment method  - Frequency  - Cycle    Once you have [configured subscriptions](https://help.vtex.com/tutorial/how-to-configure-subscriptions%20--1FA9dfE7vJqxBna9Nft5Sj) in your store, the Subscriptions API allows you to create, manage and monitor your customers' subscriptions.    ![image](https://user-images.githubusercontent.com/77292838/213024675-9407863b-0c55-4282-9442-306352716abe.png)    To read more about the Subscriptions feature, check our article [How Subscription works](https://help.vtex.com/tutorial/how-subscriptions-work--frequentlyAskedQuestions_4453).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISubscriptionCycleResponse.h
 *
 * 
 */

#ifndef OAISubscriptionCycleResponse_H
#define OAISubscriptionCycleResponse_H

#include <QJsonObject>

#include "OAISimulationItemResult.h"
#include "OAISubscriptionCycleContext.h"
#include "OAISubscriptionCycleOrderInfo.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISubscriptionCycleContext;
class OAISubscriptionCycleOrderInfo;
class OAISimulationItemResult;

class OAISubscriptionCycleResponse : public OAIObject {
public:
    OAISubscriptionCycleResponse();
    OAISubscriptionCycleResponse(QString json);
    ~OAISubscriptionCycleResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISubscriptionCycleContext getContext() const;
    void setContext(const OAISubscriptionCycleContext &context);
    bool is_context_Set() const;
    bool is_context_Valid() const;

    QString getCustomerEmail() const;
    void setCustomerEmail(const QString &customer_email);
    bool is_customer_email_Set() const;
    bool is_customer_email_Valid() const;

    qint32 getCycleCount() const;
    void setCycleCount(const qint32 &cycle_count);
    bool is_cycle_count_Set() const;
    bool is_cycle_count_Valid() const;

    QDateTime getDate() const;
    void setDate(const QDateTime &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsInRetry() const;
    void setIsInRetry(const bool &is_in_retry);
    bool is_is_in_retry_Set() const;
    bool is_is_in_retry_Valid() const;

    QDateTime getLastUpdate() const;
    void setLastUpdate(const QDateTime &last_update);
    bool is_last_update_Set() const;
    bool is_last_update_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    OAISubscriptionCycleOrderInfo getOrderInfo() const;
    void setOrderInfo(const OAISubscriptionCycleOrderInfo &order_info);
    bool is_order_info_Set() const;
    bool is_order_info_Valid() const;

    QList<OAISimulationItemResult> getSimulationItems() const;
    void setSimulationItems(const QList<OAISimulationItemResult> &simulation_items);
    bool is_simulation_items_Set() const;
    bool is_simulation_items_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getSubscriptionId() const;
    void setSubscriptionId(const QString &subscription_id);
    bool is_subscription_id_Set() const;
    bool is_subscription_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISubscriptionCycleContext m_context;
    bool m_context_isSet;
    bool m_context_isValid;

    QString m_customer_email;
    bool m_customer_email_isSet;
    bool m_customer_email_isValid;

    qint32 m_cycle_count;
    bool m_cycle_count_isSet;
    bool m_cycle_count_isValid;

    QDateTime m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_in_retry;
    bool m_is_in_retry_isSet;
    bool m_is_in_retry_isValid;

    QDateTime m_last_update;
    bool m_last_update_isSet;
    bool m_last_update_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    OAISubscriptionCycleOrderInfo m_order_info;
    bool m_order_info_isSet;
    bool m_order_info_isValid;

    QList<OAISimulationItemResult> m_simulation_items;
    bool m_simulation_items_isSet;
    bool m_simulation_items_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_subscription_id;
    bool m_subscription_id_isSet;
    bool m_subscription_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISubscriptionCycleResponse)

#endif // OAISubscriptionCycleResponse_H
