/**
 * Subscriptions API (v3)
 *   A **Subscription** is a list of items (SKUs) tied to certain recurring purchase settings:    - User profile  - Address  - Payment method  - Frequency  - Cycle    Once you have [configured subscriptions](https://help.vtex.com/tutorial/how-to-configure-subscriptions%20--1FA9dfE7vJqxBna9Nft5Sj) in your store, the Subscriptions API allows you to create, manage and monitor your customers' subscriptions.    ![image](https://user-images.githubusercontent.com/77292838/213024675-9407863b-0c55-4282-9442-306352716abe.png)    To read more about the Subscriptions feature, check our article [How Subscription works](https://help.vtex.com/tutorial/how-subscriptions-work--frequentlyAskedQuestions_4453).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPriceTag.h
 *
 * 
 */

#ifndef OAIPriceTag_H
#define OAIPriceTag_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPriceTag : public OAIObject {
public:
    OAIPriceTag();
    OAIPriceTag(QString json);
    ~OAIPriceTag() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getIdentifier() const;
    void setIdentifier(const QString &identifier);
    bool is_identifier_Set() const;
    bool is_identifier_Valid() const;

    bool isIsPercentual() const;
    void setIsPercentual(const bool &is_percentual);
    bool is_is_percentual_Set() const;
    bool is_is_percentual_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    double getRawValue() const;
    void setRawValue(const double &raw_value);
    bool is_raw_value_Set() const;
    bool is_raw_value_Valid() const;

    qint64 getValueAsInt() const;
    void setValueAsInt(const qint64 &value_as_int);
    bool is_value_as_int_Set() const;
    bool is_value_as_int_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_identifier;
    bool m_identifier_isSet;
    bool m_identifier_isValid;

    bool m_is_percentual;
    bool m_is_percentual_isSet;
    bool m_is_percentual_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    double m_raw_value;
    bool m_raw_value_isSet;
    bool m_raw_value_isValid;

    qint64 m_value_as_int;
    bool m_value_as_int_isSet;
    bool m_value_as_int_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPriceTag)

#endif // OAIPriceTag_H
