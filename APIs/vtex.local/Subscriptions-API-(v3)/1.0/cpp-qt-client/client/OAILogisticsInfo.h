/**
 * Subscriptions API (v3)
 *   A **Subscription** is a list of items (SKUs) tied to certain recurring purchase settings:    - User profile  - Address  - Payment method  - Frequency  - Cycle    Once you have [configured subscriptions](https://help.vtex.com/tutorial/how-to-configure-subscriptions%20--1FA9dfE7vJqxBna9Nft5Sj) in your store, the Subscriptions API allows you to create, manage and monitor your customers' subscriptions.    ![image](https://user-images.githubusercontent.com/77292838/213024675-9407863b-0c55-4282-9442-306352716abe.png)    To read more about the Subscriptions feature, check our article [How Subscription works](https://help.vtex.com/tutorial/how-subscriptions-work--frequentlyAskedQuestions_4453).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILogisticsInfo.h
 *
 * 
 */

#ifndef OAILogisticsInfo_H
#define OAILogisticsInfo_H

#include <QJsonObject>

#include "OAILogisticsInfoDeliveryWindow.h"
#include "OAILogisticsInfoSLA.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILogisticsInfoDeliveryWindow;
class OAILogisticsInfoSLA;

class OAILogisticsInfo : public OAIObject {
public:
    OAILogisticsInfo();
    OAILogisticsInfo(QString json);
    ~OAILogisticsInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAddressId() const;
    void setAddressId(const QString &address_id);
    bool is_address_id_Set() const;
    bool is_address_id_Valid() const;

    OAILogisticsInfoDeliveryWindow getDeliveryWindow() const;
    void setDeliveryWindow(const OAILogisticsInfoDeliveryWindow &delivery_window);
    bool is_delivery_window_Set() const;
    bool is_delivery_window_Valid() const;

    qint32 getItemIndex() const;
    void setItemIndex(const qint32 &item_index);
    bool is_item_index_Set() const;
    bool is_item_index_Valid() const;

    QString getLockTtl() const;
    void setLockTtl(const QString &lock_ttl);
    bool is_lock_ttl_Set() const;
    bool is_lock_ttl_Valid() const;

    QString getPickupId() const;
    void setPickupId(const QString &pickup_id);
    bool is_pickup_id_Set() const;
    bool is_pickup_id_Valid() const;

    qint32 getPrice() const;
    void setPrice(const qint32 &price);
    bool is_price_Set() const;
    bool is_price_Valid() const;

    qint32 getQuantity() const;
    void setQuantity(const qint32 &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    QString getSelectedDeliveryChannel() const;
    void setSelectedDeliveryChannel(const QString &selected_delivery_channel);
    bool is_selected_delivery_channel_Set() const;
    bool is_selected_delivery_channel_Valid() const;

    QString getSelectedSla() const;
    void setSelectedSla(const QString &selected_sla);
    bool is_selected_sla_Set() const;
    bool is_selected_sla_Valid() const;

    QString getShippingEstimate() const;
    void setShippingEstimate(const QString &shipping_estimate);
    bool is_shipping_estimate_Set() const;
    bool is_shipping_estimate_Valid() const;

    QList<OAILogisticsInfoSLA> getSlAs() const;
    void setSlAs(const QList<OAILogisticsInfoSLA> &sl_as);
    bool is_sl_as_Set() const;
    bool is_sl_as_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_address_id;
    bool m_address_id_isSet;
    bool m_address_id_isValid;

    OAILogisticsInfoDeliveryWindow m_delivery_window;
    bool m_delivery_window_isSet;
    bool m_delivery_window_isValid;

    qint32 m_item_index;
    bool m_item_index_isSet;
    bool m_item_index_isValid;

    QString m_lock_ttl;
    bool m_lock_ttl_isSet;
    bool m_lock_ttl_isValid;

    QString m_pickup_id;
    bool m_pickup_id_isSet;
    bool m_pickup_id_isValid;

    qint32 m_price;
    bool m_price_isSet;
    bool m_price_isValid;

    qint32 m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    QString m_selected_delivery_channel;
    bool m_selected_delivery_channel_isSet;
    bool m_selected_delivery_channel_isValid;

    QString m_selected_sla;
    bool m_selected_sla_isSet;
    bool m_selected_sla_isValid;

    QString m_shipping_estimate;
    bool m_shipping_estimate_isSet;
    bool m_shipping_estimate_isValid;

    QList<OAILogisticsInfoSLA> m_sl_as;
    bool m_sl_as_isSet;
    bool m_sl_as_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILogisticsInfo)

#endif // OAILogisticsInfo_H
