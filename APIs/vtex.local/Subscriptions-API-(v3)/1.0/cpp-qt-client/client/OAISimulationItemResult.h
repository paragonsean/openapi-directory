/**
 * Subscriptions API (v3)
 *   A **Subscription** is a list of items (SKUs) tied to certain recurring purchase settings:    - User profile  - Address  - Payment method  - Frequency  - Cycle    Once you have [configured subscriptions](https://help.vtex.com/tutorial/how-to-configure-subscriptions%20--1FA9dfE7vJqxBna9Nft5Sj) in your store, the Subscriptions API allows you to create, manage and monitor your customers' subscriptions.    ![image](https://user-images.githubusercontent.com/77292838/213024675-9407863b-0c55-4282-9442-306352716abe.png)    To read more about the Subscriptions feature, check our article [How Subscription works](https://help.vtex.com/tutorial/how-subscriptions-work--frequentlyAskedQuestions_4453).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISimulationItemResult.h
 *
 * 
 */

#ifndef OAISimulationItemResult_H
#define OAISimulationItemResult_H

#include <QJsonObject>

#include "OAIItemSimulationStatus.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISimulationItemResult : public OAIObject {
public:
    OAISimulationItemResult();
    OAISimulationItemResult(QString json);
    ~OAISimulationItemResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getQuantity() const;
    void setQuantity(const qint32 &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    OAIItemSimulationStatus getStatus() const;
    void setStatus(const OAIItemSimulationStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getStatusName() const;
    void setStatusName(const QString &status_name);
    bool is_status_name_Set() const;
    bool is_status_name_Valid() const;

    qint64 getUnitPrice() const;
    void setUnitPrice(const qint64 &unit_price);
    bool is_unit_price_Set() const;
    bool is_unit_price_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    OAIItemSimulationStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_status_name;
    bool m_status_name_isSet;
    bool m_status_name_isValid;

    qint64 m_unit_price;
    bool m_unit_price_isSet;
    bool m_unit_price_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISimulationItemResult)

#endif // OAISimulationItemResult_H
