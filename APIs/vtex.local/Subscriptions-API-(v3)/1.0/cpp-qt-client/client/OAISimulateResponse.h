/**
 * Subscriptions API (v3)
 *   A **Subscription** is a list of items (SKUs) tied to certain recurring purchase settings:    - User profile  - Address  - Payment method  - Frequency  - Cycle    Once you have [configured subscriptions](https://help.vtex.com/tutorial/how-to-configure-subscriptions%20--1FA9dfE7vJqxBna9Nft5Sj) in your store, the Subscriptions API allows you to create, manage and monitor your customers' subscriptions.    ![image](https://user-images.githubusercontent.com/77292838/213024675-9407863b-0c55-4282-9442-306352716abe.png)    To read more about the Subscriptions feature, check our article [How Subscription works](https://help.vtex.com/tutorial/how-subscriptions-work--frequentlyAskedQuestions_4453).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISimulateResponse.h
 *
 * 
 */

#ifndef OAISimulateResponse_H
#define OAISimulateResponse_H

#include <QJsonObject>

#include "OAILogisticsInfo.h"
#include "OAIOrderItem.h"
#include "OAIPaymentData.h"
#include "OAIPurchaseContextSelectableGiftsResponse.h"
#include "OAISimulateMessageResponse.h"
#include "OAISimulationItemResult.h"
#include "OAITotalizationResponse.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOrderItem;
class OAILogisticsInfo;
class OAISimulateMessageResponse;
class OAIPaymentData;
class OAIPurchaseContextSelectableGiftsResponse;
class OAISimulationItemResult;
class OAITotalizationResponse;

class OAISimulateResponse : public OAIObject {
public:
    OAISimulateResponse();
    OAISimulateResponse(QString json);
    ~OAISimulateResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QList<OAIOrderItem> getItems() const;
    void setItems(const QList<OAIOrderItem> &items);
    bool is_items_Set() const;
    bool is_items_Valid() const;

    QList<OAILogisticsInfo> getLogisticsInfo() const;
    void setLogisticsInfo(const QList<OAILogisticsInfo> &logistics_info);
    bool is_logistics_info_Set() const;
    bool is_logistics_info_Valid() const;

    QList<OAISimulateMessageResponse> getMessages() const;
    void setMessages(const QList<OAISimulateMessageResponse> &messages);
    bool is_messages_Set() const;
    bool is_messages_Valid() const;

    OAIPaymentData getPaymentData() const;
    void setPaymentData(const OAIPaymentData &payment_data);
    bool is_payment_data_Set() const;
    bool is_payment_data_Valid() const;

    QString getPostalCode() const;
    void setPostalCode(const QString &postal_code);
    bool is_postal_code_Set() const;
    bool is_postal_code_Valid() const;

    QList<OAIPurchaseContextSelectableGiftsResponse> getSelectableGiftsResponse() const;
    void setSelectableGiftsResponse(const QList<OAIPurchaseContextSelectableGiftsResponse> &selectable_gifts_response);
    bool is_selectable_gifts_response_Set() const;
    bool is_selectable_gifts_response_Valid() const;

    QList<OAISimulationItemResult> getSimulationItems() const;
    void setSimulationItems(const QList<OAISimulationItemResult> &simulation_items);
    bool is_simulation_items_Set() const;
    bool is_simulation_items_Valid() const;

    QList<OAITotalizationResponse> getTotals() const;
    void setTotals(const QList<OAITotalizationResponse> &totals);
    bool is_totals_Set() const;
    bool is_totals_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QList<OAIOrderItem> m_items;
    bool m_items_isSet;
    bool m_items_isValid;

    QList<OAILogisticsInfo> m_logistics_info;
    bool m_logistics_info_isSet;
    bool m_logistics_info_isValid;

    QList<OAISimulateMessageResponse> m_messages;
    bool m_messages_isSet;
    bool m_messages_isValid;

    OAIPaymentData m_payment_data;
    bool m_payment_data_isSet;
    bool m_payment_data_isValid;

    QString m_postal_code;
    bool m_postal_code_isSet;
    bool m_postal_code_isValid;

    QList<OAIPurchaseContextSelectableGiftsResponse> m_selectable_gifts_response;
    bool m_selectable_gifts_response_isSet;
    bool m_selectable_gifts_response_isValid;

    QList<OAISimulationItemResult> m_simulation_items;
    bool m_simulation_items_isSet;
    bool m_simulation_items_isValid;

    QList<OAITotalizationResponse> m_totals;
    bool m_totals_isSet;
    bool m_totals_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISimulateResponse)

#endif // OAISimulateResponse_H
