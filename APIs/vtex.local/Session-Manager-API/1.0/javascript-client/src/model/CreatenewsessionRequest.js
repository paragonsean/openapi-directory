/**
 * Session Manager API
 * This documentation goes in detail how to interact with Session Manager's API. For a more top-level approach, check the [design documentation](https://help.vtex.com/tutorial/using-session-manager-to-track-browsing-sessions-in-vtex-stores--1pA0tqsD4BFnJYhQ7ORQBd).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Public from './Public';

/**
 * The CreatenewsessionRequest model module.
 * @module model/CreatenewsessionRequest
 * @version 1.0
 */
class CreatenewsessionRequest {
    /**
     * Constructs a new <code>CreatenewsessionRequest</code>.
     * @alias module:model/CreatenewsessionRequest
     * @param _public {module:model/Public} 
     */
    constructor(_public) { 
        
        CreatenewsessionRequest.initialize(this, _public);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, _public) { 
        obj['public'] = _public;
    }

    /**
     * Constructs a <code>CreatenewsessionRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreatenewsessionRequest} obj Optional instance to populate.
     * @return {module:model/CreatenewsessionRequest} The populated <code>CreatenewsessionRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreatenewsessionRequest();

            if (data.hasOwnProperty('public')) {
                obj['public'] = Public.constructFromObject(data['public']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreatenewsessionRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreatenewsessionRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreatenewsessionRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `public`
        if (data['public']) { // data not null
          Public.validateJSON(data['public']);
        }

        return true;
    }


}

CreatenewsessionRequest.RequiredProperties = ["public"];

/**
 * @member {module:model/Public} public
 */
CreatenewsessionRequest.prototype['public'] = undefined;






export default CreatenewsessionRequest;

