# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.public1 import Public1
from openapi_server import util


class EditsessionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, public: Public1=None):
        """EditsessionRequest - a model defined in OpenAPI

        :param public: The public of this EditsessionRequest.
        """
        self.openapi_types = {
            'public': Public1
        }

        self.attribute_map = {
            'public': 'public'
        }

        self._public = public

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EditsessionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EditsessionRequest of this EditsessionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def public(self):
        """Gets the public of this EditsessionRequest.


        :return: The public of this EditsessionRequest.
        :rtype: Public1
        """
        return self._public

    @public.setter
    def public(self, public):
        """Sets the public of this EditsessionRequest.


        :param public: The public of this EditsessionRequest.
        :type public: Public1
        """
        if public is None:
            raise ValueError("Invalid value for `public`, must not be `None`")

        self._public = public
