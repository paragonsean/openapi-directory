/**
 * Session Manager API
 * This documentation goes in detail how to interact with Session Manager's API. For a more top-level approach, check the [design documentation](https://help.vtex.com/tutorial/using-session-manager-to-track-browsing-sessions-in-vtex-stores--1pA0tqsD4BFnJYhQ7ORQBd).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPublic.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPublic::OAIPublic(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPublic::OAIPublic() {
    this->initializeModel();
}

OAIPublic::~OAIPublic() {}

void OAIPublic::initializeModel() {

    m_country_isSet = false;
    m_country_isValid = false;

    m_postal_code_isSet = false;
    m_postal_code_isValid = false;
}

void OAIPublic::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPublic::fromJsonObject(QJsonObject json) {

    m_country_isValid = ::OpenAPI::fromJsonValue(m_country, json[QString("country")]);
    m_country_isSet = !json[QString("country")].isNull() && m_country_isValid;

    m_postal_code_isValid = ::OpenAPI::fromJsonValue(m_postal_code, json[QString("postalCode")]);
    m_postal_code_isSet = !json[QString("postalCode")].isNull() && m_postal_code_isValid;
}

QString OAIPublic::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPublic::asJsonObject() const {
    QJsonObject obj;
    if (m_country.isSet()) {
        obj.insert(QString("country"), ::OpenAPI::toJsonValue(m_country));
    }
    if (m_postal_code.isSet()) {
        obj.insert(QString("postalCode"), ::OpenAPI::toJsonValue(m_postal_code));
    }
    return obj;
}

OAICountry OAIPublic::getCountry() const {
    return m_country;
}
void OAIPublic::setCountry(const OAICountry &country) {
    m_country = country;
    m_country_isSet = true;
}

bool OAIPublic::is_country_Set() const{
    return m_country_isSet;
}

bool OAIPublic::is_country_Valid() const{
    return m_country_isValid;
}

OAIPostalCode OAIPublic::getPostalCode() const {
    return m_postal_code;
}
void OAIPublic::setPostalCode(const OAIPostalCode &postal_code) {
    m_postal_code = postal_code;
    m_postal_code_isSet = true;
}

bool OAIPublic::is_postal_code_Set() const{
    return m_postal_code_isSet;
}

bool OAIPublic::is_postal_code_Valid() const{
    return m_postal_code_isValid;
}

bool OAIPublic::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_country.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_postal_code.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPublic::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_country_isValid && m_postal_code_isValid && true;
}

} // namespace OpenAPI
