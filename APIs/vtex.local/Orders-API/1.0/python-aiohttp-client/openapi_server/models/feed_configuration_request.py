# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.feed_filter import FeedFilter
from openapi_server.models.queue import Queue
from openapi_server import util


class FeedConfigurationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, filter: FeedFilter=None, queue: Queue=None):
        """FeedConfigurationRequest - a model defined in OpenAPI

        :param filter: The filter of this FeedConfigurationRequest.
        :param queue: The queue of this FeedConfigurationRequest.
        """
        self.openapi_types = {
            'filter': FeedFilter,
            'queue': Queue
        }

        self.attribute_map = {
            'filter': 'filter',
            'queue': 'queue'
        }

        self._filter = filter
        self._queue = queue

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FeedConfigurationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FeedConfigurationRequest of this FeedConfigurationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def filter(self):
        """Gets the filter of this FeedConfigurationRequest.


        :return: The filter of this FeedConfigurationRequest.
        :rtype: FeedFilter
        """
        return self._filter

    @filter.setter
    def filter(self, filter):
        """Sets the filter of this FeedConfigurationRequest.


        :param filter: The filter of this FeedConfigurationRequest.
        :type filter: FeedFilter
        """
        if filter is None:
            raise ValueError("Invalid value for `filter`, must not be `None`")

        self._filter = filter

    @property
    def queue(self):
        """Gets the queue of this FeedConfigurationRequest.


        :return: The queue of this FeedConfigurationRequest.
        :rtype: Queue
        """
        return self._queue

    @queue.setter
    def queue(self, queue):
        """Sets the queue of this FeedConfigurationRequest.


        :param queue: The queue of this FeedConfigurationRequest.
        :type queue: Queue
        """
        if queue is None:
            raise ValueError("Invalid value for `queue`, must not be `None`")

        self._queue = queue
