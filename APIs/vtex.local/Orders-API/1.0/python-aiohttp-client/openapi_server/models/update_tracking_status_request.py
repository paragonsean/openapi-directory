# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.event import Event
from openapi_server import util


class UpdateTrackingStatusRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, delivered_date: str='2022-10-01 21:15', events: List[Event]=None, is_delivered: bool=None):
        """UpdateTrackingStatusRequest - a model defined in OpenAPI

        :param delivered_date: The delivered_date of this UpdateTrackingStatusRequest.
        :param events: The events of this UpdateTrackingStatusRequest.
        :param is_delivered: The is_delivered of this UpdateTrackingStatusRequest.
        """
        self.openapi_types = {
            'delivered_date': str,
            'events': List[Event],
            'is_delivered': bool
        }

        self.attribute_map = {
            'delivered_date': 'deliveredDate',
            'events': 'events',
            'is_delivered': 'isDelivered'
        }

        self._delivered_date = delivered_date
        self._events = events
        self._is_delivered = is_delivered

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateTrackingStatusRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateTrackingStatusRequest of this UpdateTrackingStatusRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def delivered_date(self):
        """Gets the delivered_date of this UpdateTrackingStatusRequest.

        Date and time of when the package was delivered. Note that it is different from the tracking date parameter. The `deliveredDate` format is `yyyy-mm-dd hh:mm`.

        :return: The delivered_date of this UpdateTrackingStatusRequest.
        :rtype: str
        """
        return self._delivered_date

    @delivered_date.setter
    def delivered_date(self, delivered_date):
        """Sets the delivered_date of this UpdateTrackingStatusRequest.

        Date and time of when the package was delivered. Note that it is different from the tracking date parameter. The `deliveredDate` format is `yyyy-mm-dd hh:mm`.

        :param delivered_date: The delivered_date of this UpdateTrackingStatusRequest.
        :type delivered_date: str
        """
        if delivered_date is None:
            raise ValueError("Invalid value for `delivered_date`, must not be `None`")

        self._delivered_date = delivered_date

    @property
    def events(self):
        """Gets the events of this UpdateTrackingStatusRequest.

        

        :return: The events of this UpdateTrackingStatusRequest.
        :rtype: List[Event]
        """
        return self._events

    @events.setter
    def events(self, events):
        """Sets the events of this UpdateTrackingStatusRequest.

        

        :param events: The events of this UpdateTrackingStatusRequest.
        :type events: List[Event]
        """
        if events is None:
            raise ValueError("Invalid value for `events`, must not be `None`")

        self._events = events

    @property
    def is_delivered(self):
        """Gets the is_delivered of this UpdateTrackingStatusRequest.


        :return: The is_delivered of this UpdateTrackingStatusRequest.
        :rtype: bool
        """
        return self._is_delivered

    @is_delivered.setter
    def is_delivered(self, is_delivered):
        """Sets the is_delivered of this UpdateTrackingStatusRequest.


        :param is_delivered: The is_delivered of this UpdateTrackingStatusRequest.
        :type is_delivered: bool
        """
        if is_delivered is None:
            raise ValueError("Invalid value for `is_delivered`, must not be `None`")

        self._is_delivered = is_delivered
