# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CommititemfeedorderstatusRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, handles: List[str]=None):
        """CommititemfeedorderstatusRequest - a model defined in OpenAPI

        :param handles: The handles of this CommititemfeedorderstatusRequest.
        """
        self.openapi_types = {
            'handles': List[str]
        }

        self.attribute_map = {
            'handles': 'handles'
        }

        self._handles = handles

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CommititemfeedorderstatusRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CommititemfeedorderstatusRequest of this CommititemfeedorderstatusRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def handles(self):
        """Gets the handles of this CommititemfeedorderstatusRequest.

        List of item handles to commit

        :return: The handles of this CommititemfeedorderstatusRequest.
        :rtype: List[str]
        """
        return self._handles

    @handles.setter
    def handles(self, handles):
        """Sets the handles of this CommititemfeedorderstatusRequest.

        List of item handles to commit

        :param handles: The handles of this CommititemfeedorderstatusRequest.
        :type handles: List[str]
        """
        if handles is None:
            raise ValueError("Invalid value for `handles`, must not be `None`")

        self._handles = handles
