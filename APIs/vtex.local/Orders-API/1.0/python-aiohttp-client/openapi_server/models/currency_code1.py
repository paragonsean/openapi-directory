# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.brl1 import BRL1
from openapi_server import util


class CurrencyCode1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, brl: BRL1=None):
        """CurrencyCode1 - a model defined in OpenAPI

        :param brl: The brl of this CurrencyCode1.
        """
        self.openapi_types = {
            'brl': BRL1
        }

        self.attribute_map = {
            'brl': 'BRL'
        }

        self._brl = brl

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CurrencyCode1':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CurrencyCode1 of this CurrencyCode1.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def brl(self):
        """Gets the brl of this CurrencyCode1.


        :return: The brl of this CurrencyCode1.
        :rtype: BRL1
        """
        return self._brl

    @brl.setter
    def brl(self, brl):
        """Sets the brl of this CurrencyCode1.


        :param brl: The brl of this CurrencyCode1.
        :type brl: BRL1
        """
        if brl is None:
            raise ValueError("Invalid value for `brl`, must not be `None`")

        self._brl = brl
