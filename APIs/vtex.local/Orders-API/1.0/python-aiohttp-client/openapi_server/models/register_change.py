# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RegisterChange(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _date: str=None, order_id: str=None, receipt: str=None):
        """RegisterChange - a model defined in OpenAPI

        :param _date: The _date of this RegisterChange.
        :param order_id: The order_id of this RegisterChange.
        :param receipt: The receipt of this RegisterChange.
        """
        self.openapi_types = {
            '_date': str,
            'order_id': str,
            'receipt': str
        }

        self.attribute_map = {
            '_date': 'date',
            'order_id': 'orderId',
            'receipt': 'receipt'
        }

        self.__date = _date
        self._order_id = order_id
        self._receipt = receipt

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RegisterChange':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RegisterChange of this RegisterChange.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _date(self):
        """Gets the _date of this RegisterChange.

        Date of order change.

        :return: The _date of this RegisterChange.
        :rtype: str
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this RegisterChange.

        Date of order change.

        :param _date: The _date of this RegisterChange.
        :type _date: str
        """

        self.__date = _date

    @property
    def order_id(self):
        """Gets the order_id of this RegisterChange.

        ID of the order.

        :return: The order_id of this RegisterChange.
        :rtype: str
        """
        return self._order_id

    @order_id.setter
    def order_id(self, order_id):
        """Sets the order_id of this RegisterChange.

        ID of the order.

        :param order_id: The order_id of this RegisterChange.
        :type order_id: str
        """

        self._order_id = order_id

    @property
    def receipt(self):
        """Gets the receipt of this RegisterChange.

        Receipt

        :return: The receipt of this RegisterChange.
        :rtype: str
        """
        return self._receipt

    @receipt.setter
    def receipt(self, receipt):
        """Sets the receipt of this RegisterChange.

        Receipt

        :param receipt: The receipt of this RegisterChange.
        :type receipt: str
        """

        self._receipt = receipt
