# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeliveryId(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_carrier_name: str=None, courier_id: str=None, courier_name: str=None, dock_id: str=None, kit_item_details: List[object]=None, quantity: int=None, warehouse_id: str=None):
        """DeliveryId - a model defined in OpenAPI

        :param account_carrier_name: The account_carrier_name of this DeliveryId.
        :param courier_id: The courier_id of this DeliveryId.
        :param courier_name: The courier_name of this DeliveryId.
        :param dock_id: The dock_id of this DeliveryId.
        :param kit_item_details: The kit_item_details of this DeliveryId.
        :param quantity: The quantity of this DeliveryId.
        :param warehouse_id: The warehouse_id of this DeliveryId.
        """
        self.openapi_types = {
            'account_carrier_name': str,
            'courier_id': str,
            'courier_name': str,
            'dock_id': str,
            'kit_item_details': List[object],
            'quantity': int,
            'warehouse_id': str
        }

        self.attribute_map = {
            'account_carrier_name': 'accountCarrierName',
            'courier_id': 'courierId',
            'courier_name': 'courierName',
            'dock_id': 'dockId',
            'kit_item_details': 'kitItemDetails',
            'quantity': 'quantity',
            'warehouse_id': 'warehouseId'
        }

        self._account_carrier_name = account_carrier_name
        self._courier_id = courier_id
        self._courier_name = courier_name
        self._dock_id = dock_id
        self._kit_item_details = kit_item_details
        self._quantity = quantity
        self._warehouse_id = warehouse_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeliveryId':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeliveryId of this DeliveryId.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_carrier_name(self):
        """Gets the account_carrier_name of this DeliveryId.

        Name of the account's [carrier](https://help.vtex.com/en/tutorial/transportadoras-na-vtex--7u9duMD5UQa2QQwukAWMcE).

        :return: The account_carrier_name of this DeliveryId.
        :rtype: str
        """
        return self._account_carrier_name

    @account_carrier_name.setter
    def account_carrier_name(self, account_carrier_name):
        """Sets the account_carrier_name of this DeliveryId.

        Name of the account's [carrier](https://help.vtex.com/en/tutorial/transportadoras-na-vtex--7u9duMD5UQa2QQwukAWMcE).

        :param account_carrier_name: The account_carrier_name of this DeliveryId.
        :type account_carrier_name: str
        """
        if account_carrier_name is None:
            raise ValueError("Invalid value for `account_carrier_name`, must not be `None`")

        self._account_carrier_name = account_carrier_name

    @property
    def courier_id(self):
        """Gets the courier_id of this DeliveryId.

        [Carrier](https://help.vtex.com/en/tutorial/transportadoras-na-vtex--7u9duMD5UQa2QQwukAWMcE)'s ID.

        :return: The courier_id of this DeliveryId.
        :rtype: str
        """
        return self._courier_id

    @courier_id.setter
    def courier_id(self, courier_id):
        """Sets the courier_id of this DeliveryId.

        [Carrier](https://help.vtex.com/en/tutorial/transportadoras-na-vtex--7u9duMD5UQa2QQwukAWMcE)'s ID.

        :param courier_id: The courier_id of this DeliveryId.
        :type courier_id: str
        """
        if courier_id is None:
            raise ValueError("Invalid value for `courier_id`, must not be `None`")

        self._courier_id = courier_id

    @property
    def courier_name(self):
        """Gets the courier_name of this DeliveryId.

        Carrier's name.

        :return: The courier_name of this DeliveryId.
        :rtype: str
        """
        return self._courier_name

    @courier_name.setter
    def courier_name(self, courier_name):
        """Sets the courier_name of this DeliveryId.

        Carrier's name.

        :param courier_name: The courier_name of this DeliveryId.
        :type courier_name: str
        """
        if courier_name is None:
            raise ValueError("Invalid value for `courier_name`, must not be `None`")

        self._courier_name = courier_name

    @property
    def dock_id(self):
        """Gets the dock_id of this DeliveryId.

        ID of the [loading dock](https://help.vtex.com/pt/tutorial/doca--5DY8xHEjOLYDVL41Urd5qj).

        :return: The dock_id of this DeliveryId.
        :rtype: str
        """
        return self._dock_id

    @dock_id.setter
    def dock_id(self, dock_id):
        """Sets the dock_id of this DeliveryId.

        ID of the [loading dock](https://help.vtex.com/pt/tutorial/doca--5DY8xHEjOLYDVL41Urd5qj).

        :param dock_id: The dock_id of this DeliveryId.
        :type dock_id: str
        """
        if dock_id is None:
            raise ValueError("Invalid value for `dock_id`, must not be `None`")

        self._dock_id = dock_id

    @property
    def kit_item_details(self):
        """Gets the kit_item_details of this DeliveryId.

        Information about [kits](https://help.vtex.com/tutorial/what-is-a-kit--5ov5s3eHM4AqAAgqWwoc28), if there are any.

        :return: The kit_item_details of this DeliveryId.
        :rtype: List[object]
        """
        return self._kit_item_details

    @kit_item_details.setter
    def kit_item_details(self, kit_item_details):
        """Sets the kit_item_details of this DeliveryId.

        Information about [kits](https://help.vtex.com/tutorial/what-is-a-kit--5ov5s3eHM4AqAAgqWwoc28), if there are any.

        :param kit_item_details: The kit_item_details of this DeliveryId.
        :type kit_item_details: List[object]
        """
        if kit_item_details is None:
            raise ValueError("Invalid value for `kit_item_details`, must not be `None`")

        self._kit_item_details = kit_item_details

    @property
    def quantity(self):
        """Gets the quantity of this DeliveryId.

        Quantity of items.

        :return: The quantity of this DeliveryId.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this DeliveryId.

        Quantity of items.

        :param quantity: The quantity of this DeliveryId.
        :type quantity: int
        """
        if quantity is None:
            raise ValueError("Invalid value for `quantity`, must not be `None`")

        self._quantity = quantity

    @property
    def warehouse_id(self):
        """Gets the warehouse_id of this DeliveryId.

        ID of the [warehouse](https://help.vtex.com/tutorial/warehouse--6oIxvsVDTtGpO7y6zwhGpb).

        :return: The warehouse_id of this DeliveryId.
        :rtype: str
        """
        return self._warehouse_id

    @warehouse_id.setter
    def warehouse_id(self, warehouse_id):
        """Sets the warehouse_id of this DeliveryId.

        ID of the [warehouse](https://help.vtex.com/tutorial/warehouse--6oIxvsVDTtGpO7y6zwhGpb).

        :param warehouse_id: The warehouse_id of this DeliveryId.
        :type warehouse_id: str
        """
        if warehouse_id is None:
            raise ValueError("Invalid value for `warehouse_id`, must not be `None`")

        self._warehouse_id = warehouse_id
