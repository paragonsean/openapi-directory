# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConfirmitemfeedorderstatusRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, commit_token: str=None):
        """ConfirmitemfeedorderstatusRequest - a model defined in OpenAPI

        :param commit_token: The commit_token of this ConfirmitemfeedorderstatusRequest.
        """
        self.openapi_types = {
            'commit_token': str
        }

        self.attribute_map = {
            'commit_token': 'commitToken'
        }

        self._commit_token = commit_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConfirmitemfeedorderstatusRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConfirmitemfeedorderstatusRequest of this ConfirmitemfeedorderstatusRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def commit_token(self):
        """Gets the commit_token of this ConfirmitemfeedorderstatusRequest.


        :return: The commit_token of this ConfirmitemfeedorderstatusRequest.
        :rtype: str
        """
        return self._commit_token

    @commit_token.setter
    def commit_token(self, commit_token):
        """Sets the commit_token of this ConfirmitemfeedorderstatusRequest.


        :param commit_token: The commit_token of this ConfirmitemfeedorderstatusRequest.
        :type commit_token: str
        """
        if commit_token is None:
            raise ValueError("Invalid value for `commit_token`, must not be `None`")

        self._commit_token = commit_token
