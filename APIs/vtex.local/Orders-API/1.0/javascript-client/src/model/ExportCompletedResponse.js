/**
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ExportCompletedResponse model module.
 * @module model/ExportCompletedResponse
 * @version 1.0
 */
class ExportCompletedResponse {
    /**
     * Constructs a new <code>ExportCompletedResponse</code>.
     * @alias module:model/ExportCompletedResponse
     * @param cancelled {Boolean} If the export request was cancelled (`true`) or not (`false`).
     * @param completedDate {String} Order export process completed date.
     * @param dateOfRequest {String} Order export request date.
     * @param email {String} Order export requester email.
     * @param filter {String} Order export request filter.
     * @param hostUri {String} Host URL.
     * @param id {String} Order export request ID.
     * @param instanceId {String} Instance ID.
     * @param lasUpdateTime {String} Order export process update time.
     * @param linkToDownload {String} Link to order export download.
     * @param publishId {String} Order export publish ID.
     * @param query {String} Order export request filter query.
     * @param rowNumber {Number} Order export total rows.
     * @param rowsProcessed {Number} Order export total processed rows.
     * @param startDate {String} Order export process start date.
     * @param utcTime {String} UTC time.
     */
    constructor(cancelled, completedDate, dateOfRequest, email, filter, hostUri, id, instanceId, lasUpdateTime, linkToDownload, publishId, query, rowNumber, rowsProcessed, startDate, utcTime) { 
        
        ExportCompletedResponse.initialize(this, cancelled, completedDate, dateOfRequest, email, filter, hostUri, id, instanceId, lasUpdateTime, linkToDownload, publishId, query, rowNumber, rowsProcessed, startDate, utcTime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, cancelled, completedDate, dateOfRequest, email, filter, hostUri, id, instanceId, lasUpdateTime, linkToDownload, publishId, query, rowNumber, rowsProcessed, startDate, utcTime) { 
        obj['cancelled'] = cancelled;
        obj['completedDate'] = completedDate;
        obj['dateOfRequest'] = dateOfRequest;
        obj['email'] = email;
        obj['filter'] = filter;
        obj['hostUri'] = hostUri;
        obj['id'] = id;
        obj['instanceId'] = instanceId;
        obj['lasUpdateTime'] = lasUpdateTime;
        obj['linkToDownload'] = linkToDownload;
        obj['publishId'] = publishId;
        obj['query'] = query;
        obj['rowNumber'] = rowNumber;
        obj['rowsProcessed'] = rowsProcessed;
        obj['startDate'] = startDate;
        obj['utcTime'] = utcTime;
    }

    /**
     * Constructs a <code>ExportCompletedResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExportCompletedResponse} obj Optional instance to populate.
     * @return {module:model/ExportCompletedResponse} The populated <code>ExportCompletedResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExportCompletedResponse();

            if (data.hasOwnProperty('cancelled')) {
                obj['cancelled'] = ApiClient.convertToType(data['cancelled'], 'Boolean');
            }
            if (data.hasOwnProperty('completedDate')) {
                obj['completedDate'] = ApiClient.convertToType(data['completedDate'], 'String');
            }
            if (data.hasOwnProperty('dateOfRequest')) {
                obj['dateOfRequest'] = ApiClient.convertToType(data['dateOfRequest'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('filter')) {
                obj['filter'] = ApiClient.convertToType(data['filter'], 'String');
            }
            if (data.hasOwnProperty('hostUri')) {
                obj['hostUri'] = ApiClient.convertToType(data['hostUri'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('instanceId')) {
                obj['instanceId'] = ApiClient.convertToType(data['instanceId'], 'String');
            }
            if (data.hasOwnProperty('lasUpdateTime')) {
                obj['lasUpdateTime'] = ApiClient.convertToType(data['lasUpdateTime'], 'String');
            }
            if (data.hasOwnProperty('linkToDownload')) {
                obj['linkToDownload'] = ApiClient.convertToType(data['linkToDownload'], 'String');
            }
            if (data.hasOwnProperty('publishId')) {
                obj['publishId'] = ApiClient.convertToType(data['publishId'], 'String');
            }
            if (data.hasOwnProperty('query')) {
                obj['query'] = ApiClient.convertToType(data['query'], 'String');
            }
            if (data.hasOwnProperty('rowNumber')) {
                obj['rowNumber'] = ApiClient.convertToType(data['rowNumber'], 'Number');
            }
            if (data.hasOwnProperty('rowsProcessed')) {
                obj['rowsProcessed'] = ApiClient.convertToType(data['rowsProcessed'], 'Number');
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ApiClient.convertToType(data['startDate'], 'String');
            }
            if (data.hasOwnProperty('utcTime')) {
                obj['utcTime'] = ApiClient.convertToType(data['utcTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExportCompletedResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExportCompletedResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ExportCompletedResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['completedDate'] && !(typeof data['completedDate'] === 'string' || data['completedDate'] instanceof String)) {
            throw new Error("Expected the field `completedDate` to be a primitive type in the JSON string but got " + data['completedDate']);
        }
        // ensure the json data is a string
        if (data['dateOfRequest'] && !(typeof data['dateOfRequest'] === 'string' || data['dateOfRequest'] instanceof String)) {
            throw new Error("Expected the field `dateOfRequest` to be a primitive type in the JSON string but got " + data['dateOfRequest']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['filter'] && !(typeof data['filter'] === 'string' || data['filter'] instanceof String)) {
            throw new Error("Expected the field `filter` to be a primitive type in the JSON string but got " + data['filter']);
        }
        // ensure the json data is a string
        if (data['hostUri'] && !(typeof data['hostUri'] === 'string' || data['hostUri'] instanceof String)) {
            throw new Error("Expected the field `hostUri` to be a primitive type in the JSON string but got " + data['hostUri']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['instanceId'] && !(typeof data['instanceId'] === 'string' || data['instanceId'] instanceof String)) {
            throw new Error("Expected the field `instanceId` to be a primitive type in the JSON string but got " + data['instanceId']);
        }
        // ensure the json data is a string
        if (data['lasUpdateTime'] && !(typeof data['lasUpdateTime'] === 'string' || data['lasUpdateTime'] instanceof String)) {
            throw new Error("Expected the field `lasUpdateTime` to be a primitive type in the JSON string but got " + data['lasUpdateTime']);
        }
        // ensure the json data is a string
        if (data['linkToDownload'] && !(typeof data['linkToDownload'] === 'string' || data['linkToDownload'] instanceof String)) {
            throw new Error("Expected the field `linkToDownload` to be a primitive type in the JSON string but got " + data['linkToDownload']);
        }
        // ensure the json data is a string
        if (data['publishId'] && !(typeof data['publishId'] === 'string' || data['publishId'] instanceof String)) {
            throw new Error("Expected the field `publishId` to be a primitive type in the JSON string but got " + data['publishId']);
        }
        // ensure the json data is a string
        if (data['query'] && !(typeof data['query'] === 'string' || data['query'] instanceof String)) {
            throw new Error("Expected the field `query` to be a primitive type in the JSON string but got " + data['query']);
        }
        // ensure the json data is a string
        if (data['startDate'] && !(typeof data['startDate'] === 'string' || data['startDate'] instanceof String)) {
            throw new Error("Expected the field `startDate` to be a primitive type in the JSON string but got " + data['startDate']);
        }
        // ensure the json data is a string
        if (data['utcTime'] && !(typeof data['utcTime'] === 'string' || data['utcTime'] instanceof String)) {
            throw new Error("Expected the field `utcTime` to be a primitive type in the JSON string but got " + data['utcTime']);
        }

        return true;
    }


}

ExportCompletedResponse.RequiredProperties = ["cancelled", "completedDate", "dateOfRequest", "email", "filter", "hostUri", "id", "instanceId", "lasUpdateTime", "linkToDownload", "publishId", "query", "rowNumber", "rowsProcessed", "startDate", "utcTime"];

/**
 * If the export request was cancelled (`true`) or not (`false`).
 * @member {Boolean} cancelled
 */
ExportCompletedResponse.prototype['cancelled'] = undefined;

/**
 * Order export process completed date.
 * @member {String} completedDate
 */
ExportCompletedResponse.prototype['completedDate'] = undefined;

/**
 * Order export request date.
 * @member {String} dateOfRequest
 */
ExportCompletedResponse.prototype['dateOfRequest'] = undefined;

/**
 * Order export requester email.
 * @member {String} email
 */
ExportCompletedResponse.prototype['email'] = undefined;

/**
 * Order export request filter.
 * @member {String} filter
 */
ExportCompletedResponse.prototype['filter'] = undefined;

/**
 * Host URL.
 * @member {String} hostUri
 */
ExportCompletedResponse.prototype['hostUri'] = undefined;

/**
 * Order export request ID.
 * @member {String} id
 */
ExportCompletedResponse.prototype['id'] = undefined;

/**
 * Instance ID.
 * @member {String} instanceId
 */
ExportCompletedResponse.prototype['instanceId'] = undefined;

/**
 * Order export process update time.
 * @member {String} lasUpdateTime
 */
ExportCompletedResponse.prototype['lasUpdateTime'] = undefined;

/**
 * Link to order export download.
 * @member {String} linkToDownload
 */
ExportCompletedResponse.prototype['linkToDownload'] = undefined;

/**
 * Order export publish ID.
 * @member {String} publishId
 */
ExportCompletedResponse.prototype['publishId'] = undefined;

/**
 * Order export request filter query.
 * @member {String} query
 */
ExportCompletedResponse.prototype['query'] = undefined;

/**
 * Order export total rows.
 * @member {Number} rowNumber
 */
ExportCompletedResponse.prototype['rowNumber'] = undefined;

/**
 * Order export total processed rows.
 * @member {Number} rowsProcessed
 */
ExportCompletedResponse.prototype['rowsProcessed'] = undefined;

/**
 * Order export process start date.
 * @member {String} startDate
 */
ExportCompletedResponse.prototype['startDate'] = undefined;

/**
 * UTC time.
 * @member {String} utcTime
 */
ExportCompletedResponse.prototype['utcTime'] = undefined;






export default ExportCompletedResponse;

