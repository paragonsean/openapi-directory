/**
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Queue model module.
 * @module model/Queue
 * @version 1.0
 */
class Queue {
    /**
     * Constructs a new <code>Queue</code>.
     * Object with information about timeout and message retention.
     * @alias module:model/Queue
     * @param messageRetentionPeriodInSeconds {Number} Maximum life span of an order update in the feed. When a feed item is on the feed for this period of time, it is removed from the feed. Measured in seconds.
     * @param visibilityTimeoutInSeconds {Number} Period of time for which an item becomes invisible after it has been [retrieved](https://developers.vtex.com/vtex-rest-api/reference/feed-v3#getfeedorderstatus1). Measured in seconds.
     */
    constructor(messageRetentionPeriodInSeconds, visibilityTimeoutInSeconds) { 
        
        Queue.initialize(this, messageRetentionPeriodInSeconds, visibilityTimeoutInSeconds);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, messageRetentionPeriodInSeconds, visibilityTimeoutInSeconds) { 
        obj['MessageRetentionPeriodInSeconds'] = messageRetentionPeriodInSeconds;
        obj['visibilityTimeoutInSeconds'] = visibilityTimeoutInSeconds;
    }

    /**
     * Constructs a <code>Queue</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Queue} obj Optional instance to populate.
     * @return {module:model/Queue} The populated <code>Queue</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Queue();

            if (data.hasOwnProperty('MessageRetentionPeriodInSeconds')) {
                obj['MessageRetentionPeriodInSeconds'] = ApiClient.convertToType(data['MessageRetentionPeriodInSeconds'], 'Number');
            }
            if (data.hasOwnProperty('visibilityTimeoutInSeconds')) {
                obj['visibilityTimeoutInSeconds'] = ApiClient.convertToType(data['visibilityTimeoutInSeconds'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Queue</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Queue</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Queue.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

Queue.RequiredProperties = ["MessageRetentionPeriodInSeconds", "visibilityTimeoutInSeconds"];

/**
 * Maximum life span of an order update in the feed. When a feed item is on the feed for this period of time, it is removed from the feed. Measured in seconds.
 * @member {Number} MessageRetentionPeriodInSeconds
 */
Queue.prototype['MessageRetentionPeriodInSeconds'] = undefined;

/**
 * Period of time for which an item becomes invisible after it has been [retrieved](https://developers.vtex.com/vtex-rest-api/reference/feed-v3#getfeedorderstatus1). Measured in seconds.
 * @member {Number} visibilityTimeoutInSeconds
 */
Queue.prototype['visibilityTimeoutInSeconds'] = undefined;






export default Queue;

