/**
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import UpdateTrackingStatus from '../model/UpdateTrackingStatus';
import UpdateTrackingStatusRequest from '../model/UpdateTrackingStatusRequest';

/**
* Tracking service.
* @module api/TrackingApi
* @version 1.0
*/
export default class TrackingApi {

    /**
    * Constructs a new TrackingApi. 
    * @alias module:api/TrackingApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the updateTrackingStatus operation.
     * @callback module:api/TrackingApi~updateTrackingStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateTrackingStatus} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update order tracking status
     * This endpoint sends a tracking event to an order that already has a tracking number registered to its invoice.    This request is not meant to send tracking number and URL to the invoice. If you wish to send tracking number and URL to an order, use the [Update order's partial invoice API request](https://developers.vtex.com/docs/api-reference/orders-api#patch-/api/oms/pvt/orders/-orderId-/invoice/-invoiceNumber-). You can also learn more about [Partial invoice](https://help.vtex.com/en/tracks/partial-invoices--2xkTisx4SXOWXQel8Jg8sa/q9GPspTb9cHlMeAZfdEUe) scenarios.     > The `Notify invoice` resource is needed to use this API request. This is included in `OMS - Full access` and `IntegrationProfile - Fulfillment Oms`, among other default roles available in the Admin. Learn more about the [License manager roles and resources](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc).
     * @param {String} contentType Type of the content being sent.
     * @param {String} accept HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.
     * @param {String} orderId Order ID is a unique code that identifies an order.
     * @param {String} invoiceNumber Number that identifies the invoice.
     * @param {module:model/UpdateTrackingStatusRequest} updateTrackingStatusRequest 
     * @param {module:api/TrackingApi~updateTrackingStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateTrackingStatus}
     */
    updateTrackingStatus(contentType, accept, orderId, invoiceNumber, updateTrackingStatusRequest, callback) {
      let postBody = updateTrackingStatusRequest;
      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling updateTrackingStatus");
      }
      // verify the required parameter 'accept' is set
      if (accept === undefined || accept === null) {
        throw new Error("Missing the required parameter 'accept' when calling updateTrackingStatus");
      }
      // verify the required parameter 'orderId' is set
      if (orderId === undefined || orderId === null) {
        throw new Error("Missing the required parameter 'orderId' when calling updateTrackingStatus");
      }
      // verify the required parameter 'invoiceNumber' is set
      if (invoiceNumber === undefined || invoiceNumber === null) {
        throw new Error("Missing the required parameter 'invoiceNumber' when calling updateTrackingStatus");
      }
      // verify the required parameter 'updateTrackingStatusRequest' is set
      if (updateTrackingStatusRequest === undefined || updateTrackingStatusRequest === null) {
        throw new Error("Missing the required parameter 'updateTrackingStatusRequest' when calling updateTrackingStatus");
      }

      let pathParams = {
        'orderId': orderId,
        'invoiceNumber': invoiceNumber
      };
      let queryParams = {
      };
      let headerParams = {
        'Content-Type': contentType,
        'Accept': accept
      };
      let formParams = {
      };

      let authNames = ['appToken', 'appKey'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json; charset=utf-8'];
      let returnType = UpdateTrackingStatus;
      return this.apiClient.callApi(
        '/api/oms/pvt/orders/{orderId}/invoice/{invoiceNumber}/tracking', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
