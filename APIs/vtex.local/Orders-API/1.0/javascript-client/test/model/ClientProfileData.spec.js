/**
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OrdersApi);
  }
}(this, function(expect, OrdersApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OrdersApi.ClientProfileData();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ClientProfileData', function() {
    it('should create an instance of ClientProfileData', function() {
      // uncomment below and update the code to test ClientProfileData
      //var instance = new OrdersApi.ClientProfileData();
      //expect(instance).to.be.a(OrdersApi.ClientProfileData);
    });

    it('should have the property corporateDocument (base name: "corporateDocument")', function() {
      // uncomment below and update the code to test the property corporateDocument
      //var instance = new OrdersApi.ClientProfileData();
      //expect(instance).to.be();
    });

    it('should have the property corporateName (base name: "corporateName")', function() {
      // uncomment below and update the code to test the property corporateName
      //var instance = new OrdersApi.ClientProfileData();
      //expect(instance).to.be();
    });

    it('should have the property corporatePhone (base name: "corporatePhone")', function() {
      // uncomment below and update the code to test the property corporatePhone
      //var instance = new OrdersApi.ClientProfileData();
      //expect(instance).to.be();
    });

    it('should have the property customerClass (base name: "customerClass")', function() {
      // uncomment below and update the code to test the property customerClass
      //var instance = new OrdersApi.ClientProfileData();
      //expect(instance).to.be();
    });

    it('should have the property document (base name: "document")', function() {
      // uncomment below and update the code to test the property document
      //var instance = new OrdersApi.ClientProfileData();
      //expect(instance).to.be();
    });

    it('should have the property documentType (base name: "documentType")', function() {
      // uncomment below and update the code to test the property documentType
      //var instance = new OrdersApi.ClientProfileData();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new OrdersApi.ClientProfileData();
      //expect(instance).to.be();
    });

    it('should have the property firstName (base name: "firstName")', function() {
      // uncomment below and update the code to test the property firstName
      //var instance = new OrdersApi.ClientProfileData();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new OrdersApi.ClientProfileData();
      //expect(instance).to.be();
    });

    it('should have the property isCorporate (base name: "isCorporate")', function() {
      // uncomment below and update the code to test the property isCorporate
      //var instance = new OrdersApi.ClientProfileData();
      //expect(instance).to.be();
    });

    it('should have the property lastName (base name: "lastName")', function() {
      // uncomment below and update the code to test the property lastName
      //var instance = new OrdersApi.ClientProfileData();
      //expect(instance).to.be();
    });

    it('should have the property phone (base name: "phone")', function() {
      // uncomment below and update the code to test the property phone
      //var instance = new OrdersApi.ClientProfileData();
      //expect(instance).to.be();
    });

    it('should have the property stateInscription (base name: "stateInscription")', function() {
      // uncomment below and update the code to test the property stateInscription
      //var instance = new OrdersApi.ClientProfileData();
      //expect(instance).to.be();
    });

    it('should have the property tradeName (base name: "tradeName")', function() {
      // uncomment below and update the code to test the property tradeName
      //var instance = new OrdersApi.ClientProfileData();
      //expect(instance).to.be();
    });

    it('should have the property userProfileId (base name: "userProfileId")', function() {
      // uncomment below and update the code to test the property userProfileId
      //var instance = new OrdersApi.ClientProfileData();
      //expect(instance).to.be();
    });

  });

}));
