/**
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OrdersApi);
  }
}(this, function(expect, OrdersApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OrdersApi.UserorderdetailsMarketingData();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UserorderdetailsMarketingData', function() {
    it('should create an instance of UserorderdetailsMarketingData', function() {
      // uncomment below and update the code to test UserorderdetailsMarketingData
      //var instance = new OrdersApi.UserorderdetailsMarketingData();
      //expect(instance).to.be.a(OrdersApi.UserorderdetailsMarketingData);
    });

    it('should have the property coupon (base name: "coupon")', function() {
      // uncomment below and update the code to test the property coupon
      //var instance = new OrdersApi.UserorderdetailsMarketingData();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new OrdersApi.UserorderdetailsMarketingData();
      //expect(instance).to.be();
    });

    it('should have the property marketingTags (base name: "marketingTags")', function() {
      // uncomment below and update the code to test the property marketingTags
      //var instance = new OrdersApi.UserorderdetailsMarketingData();
      //expect(instance).to.be();
    });

    it('should have the property utmCampaign (base name: "utmCampaign")', function() {
      // uncomment below and update the code to test the property utmCampaign
      //var instance = new OrdersApi.UserorderdetailsMarketingData();
      //expect(instance).to.be();
    });

    it('should have the property utmMedium (base name: "utmMedium")', function() {
      // uncomment below and update the code to test the property utmMedium
      //var instance = new OrdersApi.UserorderdetailsMarketingData();
      //expect(instance).to.be();
    });

    it('should have the property utmPartner (base name: "utmPartner")', function() {
      // uncomment below and update the code to test the property utmPartner
      //var instance = new OrdersApi.UserorderdetailsMarketingData();
      //expect(instance).to.be();
    });

    it('should have the property utmSource (base name: "utmSource")', function() {
      // uncomment below and update the code to test the property utmSource
      //var instance = new OrdersApi.UserorderdetailsMarketingData();
      //expect(instance).to.be();
    });

    it('should have the property utmiCampaign (base name: "utmiCampaign")', function() {
      // uncomment below and update the code to test the property utmiCampaign
      //var instance = new OrdersApi.UserorderdetailsMarketingData();
      //expect(instance).to.be();
    });

    it('should have the property utmiPart (base name: "utmiPart")', function() {
      // uncomment below and update the code to test the property utmiPart
      //var instance = new OrdersApi.UserorderdetailsMarketingData();
      //expect(instance).to.be();
    });

    it('should have the property utmipage (base name: "utmipage")', function() {
      // uncomment below and update the code to test the property utmipage
      //var instance = new OrdersApi.UserorderdetailsMarketingData();
      //expect(instance).to.be();
    });

  });

}));
