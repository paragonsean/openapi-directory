/**
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OrdersApi);
  }
}(this, function(expect, OrdersApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OrdersApi.Userorderslist();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Userorderslist', function() {
    it('should create an instance of Userorderslist', function() {
      // uncomment below and update the code to test Userorderslist
      //var instance = new OrdersApi.Userorderslist();
      //expect(instance).to.be.a(OrdersApi.Userorderslist);
    });

    it('should have the property facets (base name: "facets")', function() {
      // uncomment below and update the code to test the property facets
      //var instance = new OrdersApi.Userorderslist();
      //expect(instance).to.be();
    });

    it('should have the property list (base name: "list")', function() {
      // uncomment below and update the code to test the property list
      //var instance = new OrdersApi.Userorderslist();
      //expect(instance).to.be();
    });

    it('should have the property paging (base name: "paging")', function() {
      // uncomment below and update the code to test the property paging
      //var instance = new OrdersApi.Userorderslist();
      //expect(instance).to.be();
    });

    it('should have the property stats (base name: "stats")', function() {
      // uncomment below and update the code to test the property stats
      //var instance = new OrdersApi.Userorderslist();
      //expect(instance).to.be();
    });

  });

}));
