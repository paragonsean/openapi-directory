/**
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OrdersApi);
  }
}(this, function(expect, OrdersApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OrdersApi.LogisticsInfo();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LogisticsInfo', function() {
    it('should create an instance of LogisticsInfo', function() {
      // uncomment below and update the code to test LogisticsInfo
      //var instance = new OrdersApi.LogisticsInfo();
      //expect(instance).to.be.a(OrdersApi.LogisticsInfo);
    });

    it('should have the property addressId (base name: "addressId")', function() {
      // uncomment below and update the code to test the property addressId
      //var instance = new OrdersApi.LogisticsInfo();
      //expect(instance).to.be();
    });

    it('should have the property deliveryChannel (base name: "deliveryChannel")', function() {
      // uncomment below and update the code to test the property deliveryChannel
      //var instance = new OrdersApi.LogisticsInfo();
      //expect(instance).to.be();
    });

    it('should have the property deliveryChannels (base name: "deliveryChannels")', function() {
      // uncomment below and update the code to test the property deliveryChannels
      //var instance = new OrdersApi.LogisticsInfo();
      //expect(instance).to.be();
    });

    it('should have the property deliveryCompany (base name: "deliveryCompany")', function() {
      // uncomment below and update the code to test the property deliveryCompany
      //var instance = new OrdersApi.LogisticsInfo();
      //expect(instance).to.be();
    });

    it('should have the property deliveryIds (base name: "deliveryIds")', function() {
      // uncomment below and update the code to test the property deliveryIds
      //var instance = new OrdersApi.LogisticsInfo();
      //expect(instance).to.be();
    });

    it('should have the property deliveryWindow (base name: "deliveryWindow")', function() {
      // uncomment below and update the code to test the property deliveryWindow
      //var instance = new OrdersApi.LogisticsInfo();
      //expect(instance).to.be();
    });

    it('should have the property entityId (base name: "entityId")', function() {
      // uncomment below and update the code to test the property entityId
      //var instance = new OrdersApi.LogisticsInfo();
      //expect(instance).to.be();
    });

    it('should have the property itemIndex (base name: "itemIndex")', function() {
      // uncomment below and update the code to test the property itemIndex
      //var instance = new OrdersApi.LogisticsInfo();
      //expect(instance).to.be();
    });

    it('should have the property listPrice (base name: "listPrice")', function() {
      // uncomment below and update the code to test the property listPrice
      //var instance = new OrdersApi.LogisticsInfo();
      //expect(instance).to.be();
    });

    it('should have the property lockTTL (base name: "lockTTL")', function() {
      // uncomment below and update the code to test the property lockTTL
      //var instance = new OrdersApi.LogisticsInfo();
      //expect(instance).to.be();
    });

    it('should have the property pickupPointId (base name: "pickupPointId")', function() {
      // uncomment below and update the code to test the property pickupPointId
      //var instance = new OrdersApi.LogisticsInfo();
      //expect(instance).to.be();
    });

    it('should have the property pickupStoreInfo (base name: "pickupStoreInfo")', function() {
      // uncomment below and update the code to test the property pickupStoreInfo
      //var instance = new OrdersApi.LogisticsInfo();
      //expect(instance).to.be();
    });

    it('should have the property polygonName (base name: "polygonName")', function() {
      // uncomment below and update the code to test the property polygonName
      //var instance = new OrdersApi.LogisticsInfo();
      //expect(instance).to.be();
    });

    it('should have the property price (base name: "price")', function() {
      // uncomment below and update the code to test the property price
      //var instance = new OrdersApi.LogisticsInfo();
      //expect(instance).to.be();
    });

    it('should have the property selectedSla (base name: "selectedSla")', function() {
      // uncomment below and update the code to test the property selectedSla
      //var instance = new OrdersApi.LogisticsInfo();
      //expect(instance).to.be();
    });

    it('should have the property sellingPrice (base name: "sellingPrice")', function() {
      // uncomment below and update the code to test the property sellingPrice
      //var instance = new OrdersApi.LogisticsInfo();
      //expect(instance).to.be();
    });

    it('should have the property shippingEstimate (base name: "shippingEstimate")', function() {
      // uncomment below and update the code to test the property shippingEstimate
      //var instance = new OrdersApi.LogisticsInfo();
      //expect(instance).to.be();
    });

    it('should have the property shippingEstimateDate (base name: "shippingEstimateDate")', function() {
      // uncomment below and update the code to test the property shippingEstimateDate
      //var instance = new OrdersApi.LogisticsInfo();
      //expect(instance).to.be();
    });

    it('should have the property shipsTo (base name: "shipsTo")', function() {
      // uncomment below and update the code to test the property shipsTo
      //var instance = new OrdersApi.LogisticsInfo();
      //expect(instance).to.be();
    });

    it('should have the property slas (base name: "slas")', function() {
      // uncomment below and update the code to test the property slas
      //var instance = new OrdersApi.LogisticsInfo();
      //expect(instance).to.be();
    });

    it('should have the property transitTime (base name: "transitTime")', function() {
      // uncomment below and update the code to test the property transitTime
      //var instance = new OrdersApi.LogisticsInfo();
      //expect(instance).to.be();
    });

    it('should have the property versionId (base name: "versionId")', function() {
      // uncomment below and update the code to test the property versionId
      //var instance = new OrdersApi.LogisticsInfo();
      //expect(instance).to.be();
    });

  });

}));
