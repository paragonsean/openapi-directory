/**
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OrdersApi);
  }
}(this, function(expect, OrdersApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OrdersApi.Userorderdetails();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Userorderdetails', function() {
    it('should create an instance of Userorderdetails', function() {
      // uncomment below and update the code to test Userorderdetails
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be.a(OrdersApi.Userorderdetails);
    });

    it('should have the property affiliateId (base name: "affiliateId")', function() {
      // uncomment below and update the code to test the property affiliateId
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property allowCancellation (base name: "allowCancellation")', function() {
      // uncomment below and update the code to test the property allowCancellation
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property allowEdition (base name: "allowEdition")', function() {
      // uncomment below and update the code to test the property allowEdition
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property authorizedDate (base name: "authorizedDate")', function() {
      // uncomment below and update the code to test the property authorizedDate
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property callCenterOperatorData (base name: "callCenterOperatorData")', function() {
      // uncomment below and update the code to test the property callCenterOperatorData
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property cancelReason (base name: "cancelReason")', function() {
      // uncomment below and update the code to test the property cancelReason
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property cancellationData (base name: "cancellationData")', function() {
      // uncomment below and update the code to test the property cancellationData
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property changesAttachment (base name: "changesAttachment")', function() {
      // uncomment below and update the code to test the property changesAttachment
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property checkedInPickupPointId (base name: "checkedInPickupPointId")', function() {
      // uncomment below and update the code to test the property checkedInPickupPointId
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property clientPreferencesData (base name: "clientPreferencesData")', function() {
      // uncomment below and update the code to test the property clientPreferencesData
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property clientProfileData (base name: "clientProfileData")', function() {
      // uncomment below and update the code to test the property clientProfileData
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property commercialConditionData (base name: "commercialConditionData")', function() {
      // uncomment below and update the code to test the property commercialConditionData
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property creationDate (base name: "creationDate")', function() {
      // uncomment below and update the code to test the property creationDate
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property customData (base name: "customData")', function() {
      // uncomment below and update the code to test the property customData
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property followUpEmail (base name: "followUpEmail")', function() {
      // uncomment below and update the code to test the property followUpEmail
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property giftRegistryData (base name: "giftRegistryData")', function() {
      // uncomment below and update the code to test the property giftRegistryData
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property hostname (base name: "hostname")', function() {
      // uncomment below and update the code to test the property hostname
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property invoiceData (base name: "invoiceData")', function() {
      // uncomment below and update the code to test the property invoiceData
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property invoicedDate (base name: "invoicedDate")', function() {
      // uncomment below and update the code to test the property invoicedDate
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property isCheckedIn (base name: "isCheckedIn")', function() {
      // uncomment below and update the code to test the property isCheckedIn
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property isCompleted (base name: "isCompleted")', function() {
      // uncomment below and update the code to test the property isCompleted
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property itemMetadata (base name: "itemMetadata")', function() {
      // uncomment below and update the code to test the property itemMetadata
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property items (base name: "items")', function() {
      // uncomment below and update the code to test the property items
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property lastChange (base name: "lastChange")', function() {
      // uncomment below and update the code to test the property lastChange
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property lastMessage (base name: "lastMessage")', function() {
      // uncomment below and update the code to test the property lastMessage
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property marketingData (base name: "marketingData")', function() {
      // uncomment below and update the code to test the property marketingData
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property marketplace (base name: "marketplace")', function() {
      // uncomment below and update the code to test the property marketplace
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property marketplaceItems (base name: "marketplaceItems")', function() {
      // uncomment below and update the code to test the property marketplaceItems
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property marketplaceOrderId (base name: "marketplaceOrderId")', function() {
      // uncomment below and update the code to test the property marketplaceOrderId
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property marketplaceServicesEndpoint (base name: "marketplaceServicesEndpoint")', function() {
      // uncomment below and update the code to test the property marketplaceServicesEndpoint
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property merchantName (base name: "merchantName")', function() {
      // uncomment below and update the code to test the property merchantName
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property openTextField (base name: "openTextField")', function() {
      // uncomment below and update the code to test the property openTextField
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property orderFormId (base name: "orderFormId")', function() {
      // uncomment below and update the code to test the property orderFormId
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property orderGroup (base name: "orderGroup")', function() {
      // uncomment below and update the code to test the property orderGroup
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property orderId (base name: "orderId")', function() {
      // uncomment below and update the code to test the property orderId
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property origin (base name: "origin")', function() {
      // uncomment below and update the code to test the property origin
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property packageAttachment (base name: "packageAttachment")', function() {
      // uncomment below and update the code to test the property packageAttachment
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property paymentData (base name: "paymentData")', function() {
      // uncomment below and update the code to test the property paymentData
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property ratesAndBenefitsData (base name: "ratesAndBenefitsData")', function() {
      // uncomment below and update the code to test the property ratesAndBenefitsData
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property roundingError (base name: "roundingError")', function() {
      // uncomment below and update the code to test the property roundingError
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property salesChannel (base name: "salesChannel")', function() {
      // uncomment below and update the code to test the property salesChannel
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property sellerOrderId (base name: "sellerOrderId")', function() {
      // uncomment below and update the code to test the property sellerOrderId
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property sellers (base name: "sellers")', function() {
      // uncomment below and update the code to test the property sellers
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property sequence (base name: "sequence")', function() {
      // uncomment below and update the code to test the property sequence
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property shippingData (base name: "shippingData")', function() {
      // uncomment below and update the code to test the property shippingData
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property statusDescription (base name: "statusDescription")', function() {
      // uncomment below and update the code to test the property statusDescription
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property storePreferencesData (base name: "storePreferencesData")', function() {
      // uncomment below and update the code to test the property storePreferencesData
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property subscriptionData (base name: "subscriptionData")', function() {
      // uncomment below and update the code to test the property subscriptionData
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property taxData (base name: "taxData")', function() {
      // uncomment below and update the code to test the property taxData
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property totals (base name: "totals")', function() {
      // uncomment below and update the code to test the property totals
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

    it('should have the property value (base name: "value")', function() {
      // uncomment below and update the code to test the property value
      //var instance = new OrdersApi.Userorderdetails();
      //expect(instance).to.be();
    });

  });

}));
