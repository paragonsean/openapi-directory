/**
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIItem_priceDefinitions_sellingPrices_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIItem_priceDefinitions_sellingPrices_inner::OAIItem_priceDefinitions_sellingPrices_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIItem_priceDefinitions_sellingPrices_inner::OAIItem_priceDefinitions_sellingPrices_inner() {
    this->initializeModel();
}

OAIItem_priceDefinitions_sellingPrices_inner::~OAIItem_priceDefinitions_sellingPrices_inner() {}

void OAIItem_priceDefinitions_sellingPrices_inner::initializeModel() {

    m_quantity_isSet = false;
    m_quantity_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIItem_priceDefinitions_sellingPrices_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIItem_priceDefinitions_sellingPrices_inner::fromJsonObject(QJsonObject json) {

    m_quantity_isValid = ::OpenAPI::fromJsonValue(m_quantity, json[QString("quantity")]);
    m_quantity_isSet = !json[QString("quantity")].isNull() && m_quantity_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIItem_priceDefinitions_sellingPrices_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIItem_priceDefinitions_sellingPrices_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_quantity_isSet) {
        obj.insert(QString("quantity"), ::OpenAPI::toJsonValue(m_quantity));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

qint32 OAIItem_priceDefinitions_sellingPrices_inner::getQuantity() const {
    return m_quantity;
}
void OAIItem_priceDefinitions_sellingPrices_inner::setQuantity(const qint32 &quantity) {
    m_quantity = quantity;
    m_quantity_isSet = true;
}

bool OAIItem_priceDefinitions_sellingPrices_inner::is_quantity_Set() const{
    return m_quantity_isSet;
}

bool OAIItem_priceDefinitions_sellingPrices_inner::is_quantity_Valid() const{
    return m_quantity_isValid;
}

qint32 OAIItem_priceDefinitions_sellingPrices_inner::getValue() const {
    return m_value;
}
void OAIItem_priceDefinitions_sellingPrices_inner::setValue(const qint32 &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIItem_priceDefinitions_sellingPrices_inner::is_value_Set() const{
    return m_value_isSet;
}

bool OAIItem_priceDefinitions_sellingPrices_inner::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIItem_priceDefinitions_sellingPrices_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIItem_priceDefinitions_sellingPrices_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_quantity_isValid && m_value_isValid && true;
}

} // namespace OpenAPI
