/**
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetOrder_200_response_packageAttachment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetOrder_200_response_packageAttachment::OAIGetOrder_200_response_packageAttachment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetOrder_200_response_packageAttachment::OAIGetOrder_200_response_packageAttachment() {
    this->initializeModel();
}

OAIGetOrder_200_response_packageAttachment::~OAIGetOrder_200_response_packageAttachment() {}

void OAIGetOrder_200_response_packageAttachment::initializeModel() {

    m_packages_isSet = false;
    m_packages_isValid = false;
}

void OAIGetOrder_200_response_packageAttachment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetOrder_200_response_packageAttachment::fromJsonObject(QJsonObject json) {

    m_packages_isValid = ::OpenAPI::fromJsonValue(m_packages, json[QString("packages")]);
    m_packages_isSet = !json[QString("packages")].isNull() && m_packages_isValid;
}

QString OAIGetOrder_200_response_packageAttachment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetOrder_200_response_packageAttachment::asJsonObject() const {
    QJsonObject obj;
    if (m_packages.size() > 0) {
        obj.insert(QString("packages"), ::OpenAPI::toJsonValue(m_packages));
    }
    return obj;
}

QList<OAIGetOrder_200_response_packageAttachment_packages_inner> OAIGetOrder_200_response_packageAttachment::getPackages() const {
    return m_packages;
}
void OAIGetOrder_200_response_packageAttachment::setPackages(const QList<OAIGetOrder_200_response_packageAttachment_packages_inner> &packages) {
    m_packages = packages;
    m_packages_isSet = true;
}

bool OAIGetOrder_200_response_packageAttachment::is_packages_Set() const{
    return m_packages_isSet;
}

bool OAIGetOrder_200_response_packageAttachment::is_packages_Valid() const{
    return m_packages_isValid;
}

bool OAIGetOrder_200_response_packageAttachment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_packages.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetOrder_200_response_packageAttachment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
