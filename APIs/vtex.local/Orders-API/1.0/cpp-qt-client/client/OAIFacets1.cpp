/**
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFacets1.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFacets1::OAIFacets1(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFacets1::OAIFacets1() {
    this->initializeModel();
}

OAIFacets1::~OAIFacets1() {}

void OAIFacets1::initializeModel() {

    m_currency_code_isSet = false;
    m_currency_code_isValid = false;

    m_origin_isSet = false;
    m_origin_isValid = false;
}

void OAIFacets1::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFacets1::fromJsonObject(QJsonObject json) {

    m_currency_code_isValid = ::OpenAPI::fromJsonValue(m_currency_code, json[QString("currencyCode")]);
    m_currency_code_isSet = !json[QString("currencyCode")].isNull() && m_currency_code_isValid;

    m_origin_isValid = ::OpenAPI::fromJsonValue(m_origin, json[QString("origin")]);
    m_origin_isSet = !json[QString("origin")].isNull() && m_origin_isValid;
}

QString OAIFacets1::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFacets1::asJsonObject() const {
    QJsonObject obj;
    if (m_currency_code.isSet()) {
        obj.insert(QString("currencyCode"), ::OpenAPI::toJsonValue(m_currency_code));
    }
    if (m_origin.isSet()) {
        obj.insert(QString("origin"), ::OpenAPI::toJsonValue(m_origin));
    }
    return obj;
}

OAICurrencyCode1 OAIFacets1::getCurrencyCode() const {
    return m_currency_code;
}
void OAIFacets1::setCurrencyCode(const OAICurrencyCode1 &currency_code) {
    m_currency_code = currency_code;
    m_currency_code_isSet = true;
}

bool OAIFacets1::is_currency_code_Set() const{
    return m_currency_code_isSet;
}

bool OAIFacets1::is_currency_code_Valid() const{
    return m_currency_code_isValid;
}

OAIOrigin1 OAIFacets1::getOrigin() const {
    return m_origin;
}
void OAIFacets1::setOrigin(const OAIOrigin1 &origin) {
    m_origin = origin;
    m_origin_isSet = true;
}

bool OAIFacets1::is_origin_Set() const{
    return m_origin_isSet;
}

bool OAIFacets1::is_origin_Valid() const{
    return m_origin_isValid;
}

bool OAIFacets1::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_currency_code.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_origin.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFacets1::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_currency_code_isValid && m_origin_isValid && true;
}

} // namespace OpenAPI
