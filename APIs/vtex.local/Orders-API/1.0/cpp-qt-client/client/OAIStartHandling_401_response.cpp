/**
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStartHandling_401_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStartHandling_401_response::OAIStartHandling_401_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStartHandling_401_response::OAIStartHandling_401_response() {
    this->initializeModel();
}

OAIStartHandling_401_response::~OAIStartHandling_401_response() {}

void OAIStartHandling_401_response::initializeModel() {

    m_error_isSet = false;
    m_error_isValid = false;
}

void OAIStartHandling_401_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStartHandling_401_response::fromJsonObject(QJsonObject json) {

    m_error_isValid = ::OpenAPI::fromJsonValue(m_error, json[QString("error")]);
    m_error_isSet = !json[QString("error")].isNull() && m_error_isValid;
}

QString OAIStartHandling_401_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStartHandling_401_response::asJsonObject() const {
    QJsonObject obj;
    if (m_error.isSet()) {
        obj.insert(QString("error"), ::OpenAPI::toJsonValue(m_error));
    }
    return obj;
}

OAIError OAIStartHandling_401_response::getError() const {
    return m_error;
}
void OAIStartHandling_401_response::setError(const OAIError &error) {
    m_error = error;
    m_error_isSet = true;
}

bool OAIStartHandling_401_response::is_error_Set() const{
    return m_error_isSet;
}

bool OAIStartHandling_401_response::is_error_Valid() const{
    return m_error_isValid;
}

bool OAIStartHandling_401_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_error.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStartHandling_401_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
