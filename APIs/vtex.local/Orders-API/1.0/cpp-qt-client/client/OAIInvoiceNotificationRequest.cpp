/**
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInvoiceNotificationRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInvoiceNotificationRequest::OAIInvoiceNotificationRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInvoiceNotificationRequest::OAIInvoiceNotificationRequest() {
    this->initializeModel();
}

OAIInvoiceNotificationRequest::~OAIInvoiceNotificationRequest() {}

void OAIInvoiceNotificationRequest::initializeModel() {

    m_courier_isSet = false;
    m_courier_isValid = false;

    m_dispatched_date_isSet = false;
    m_dispatched_date_isValid = false;

    m_embedded_invoice_isSet = false;
    m_embedded_invoice_isValid = false;

    m_invoice_key_isSet = false;
    m_invoice_key_isValid = false;

    m_invoice_number_isSet = false;
    m_invoice_number_isValid = false;

    m_invoice_url_isSet = false;
    m_invoice_url_isValid = false;

    m_invoice_value_isSet = false;
    m_invoice_value_isValid = false;

    m_issuance_date_isSet = false;
    m_issuance_date_isValid = false;

    m_items_isSet = false;
    m_items_isValid = false;

    m_tracking_number_isSet = false;
    m_tracking_number_isValid = false;

    m_tracking_url_isSet = false;
    m_tracking_url_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIInvoiceNotificationRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInvoiceNotificationRequest::fromJsonObject(QJsonObject json) {

    m_courier_isValid = ::OpenAPI::fromJsonValue(m_courier, json[QString("courier")]);
    m_courier_isSet = !json[QString("courier")].isNull() && m_courier_isValid;

    m_dispatched_date_isValid = ::OpenAPI::fromJsonValue(m_dispatched_date, json[QString("dispatchedDate")]);
    m_dispatched_date_isSet = !json[QString("dispatchedDate")].isNull() && m_dispatched_date_isValid;

    m_embedded_invoice_isValid = ::OpenAPI::fromJsonValue(m_embedded_invoice, json[QString("embeddedInvoice")]);
    m_embedded_invoice_isSet = !json[QString("embeddedInvoice")].isNull() && m_embedded_invoice_isValid;

    m_invoice_key_isValid = ::OpenAPI::fromJsonValue(m_invoice_key, json[QString("invoiceKey")]);
    m_invoice_key_isSet = !json[QString("invoiceKey")].isNull() && m_invoice_key_isValid;

    m_invoice_number_isValid = ::OpenAPI::fromJsonValue(m_invoice_number, json[QString("invoiceNumber")]);
    m_invoice_number_isSet = !json[QString("invoiceNumber")].isNull() && m_invoice_number_isValid;

    m_invoice_url_isValid = ::OpenAPI::fromJsonValue(m_invoice_url, json[QString("invoiceUrl")]);
    m_invoice_url_isSet = !json[QString("invoiceUrl")].isNull() && m_invoice_url_isValid;

    m_invoice_value_isValid = ::OpenAPI::fromJsonValue(m_invoice_value, json[QString("invoiceValue")]);
    m_invoice_value_isSet = !json[QString("invoiceValue")].isNull() && m_invoice_value_isValid;

    m_issuance_date_isValid = ::OpenAPI::fromJsonValue(m_issuance_date, json[QString("issuanceDate")]);
    m_issuance_date_isSet = !json[QString("issuanceDate")].isNull() && m_issuance_date_isValid;

    m_items_isValid = ::OpenAPI::fromJsonValue(m_items, json[QString("items")]);
    m_items_isSet = !json[QString("items")].isNull() && m_items_isValid;

    m_tracking_number_isValid = ::OpenAPI::fromJsonValue(m_tracking_number, json[QString("trackingNumber")]);
    m_tracking_number_isSet = !json[QString("trackingNumber")].isNull() && m_tracking_number_isValid;

    m_tracking_url_isValid = ::OpenAPI::fromJsonValue(m_tracking_url, json[QString("trackingUrl")]);
    m_tracking_url_isSet = !json[QString("trackingUrl")].isNull() && m_tracking_url_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIInvoiceNotificationRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInvoiceNotificationRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_courier_isSet) {
        obj.insert(QString("courier"), ::OpenAPI::toJsonValue(m_courier));
    }
    if (m_dispatched_date_isSet) {
        obj.insert(QString("dispatchedDate"), ::OpenAPI::toJsonValue(m_dispatched_date));
    }
    if (m_embedded_invoice_isSet) {
        obj.insert(QString("embeddedInvoice"), ::OpenAPI::toJsonValue(m_embedded_invoice));
    }
    if (m_invoice_key_isSet) {
        obj.insert(QString("invoiceKey"), ::OpenAPI::toJsonValue(m_invoice_key));
    }
    if (m_invoice_number_isSet) {
        obj.insert(QString("invoiceNumber"), ::OpenAPI::toJsonValue(m_invoice_number));
    }
    if (m_invoice_url_isSet) {
        obj.insert(QString("invoiceUrl"), ::OpenAPI::toJsonValue(m_invoice_url));
    }
    if (m_invoice_value_isSet) {
        obj.insert(QString("invoiceValue"), ::OpenAPI::toJsonValue(m_invoice_value));
    }
    if (m_issuance_date_isSet) {
        obj.insert(QString("issuanceDate"), ::OpenAPI::toJsonValue(m_issuance_date));
    }
    if (m_items.size() > 0) {
        obj.insert(QString("items"), ::OpenAPI::toJsonValue(m_items));
    }
    if (m_tracking_number_isSet) {
        obj.insert(QString("trackingNumber"), ::OpenAPI::toJsonValue(m_tracking_number));
    }
    if (m_tracking_url_isSet) {
        obj.insert(QString("trackingUrl"), ::OpenAPI::toJsonValue(m_tracking_url));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIInvoiceNotificationRequest::getCourier() const {
    return m_courier;
}
void OAIInvoiceNotificationRequest::setCourier(const QString &courier) {
    m_courier = courier;
    m_courier_isSet = true;
}

bool OAIInvoiceNotificationRequest::is_courier_Set() const{
    return m_courier_isSet;
}

bool OAIInvoiceNotificationRequest::is_courier_Valid() const{
    return m_courier_isValid;
}

QString OAIInvoiceNotificationRequest::getDispatchedDate() const {
    return m_dispatched_date;
}
void OAIInvoiceNotificationRequest::setDispatchedDate(const QString &dispatched_date) {
    m_dispatched_date = dispatched_date;
    m_dispatched_date_isSet = true;
}

bool OAIInvoiceNotificationRequest::is_dispatched_date_Set() const{
    return m_dispatched_date_isSet;
}

bool OAIInvoiceNotificationRequest::is_dispatched_date_Valid() const{
    return m_dispatched_date_isValid;
}

QString OAIInvoiceNotificationRequest::getEmbeddedInvoice() const {
    return m_embedded_invoice;
}
void OAIInvoiceNotificationRequest::setEmbeddedInvoice(const QString &embedded_invoice) {
    m_embedded_invoice = embedded_invoice;
    m_embedded_invoice_isSet = true;
}

bool OAIInvoiceNotificationRequest::is_embedded_invoice_Set() const{
    return m_embedded_invoice_isSet;
}

bool OAIInvoiceNotificationRequest::is_embedded_invoice_Valid() const{
    return m_embedded_invoice_isValid;
}

QString OAIInvoiceNotificationRequest::getInvoiceKey() const {
    return m_invoice_key;
}
void OAIInvoiceNotificationRequest::setInvoiceKey(const QString &invoice_key) {
    m_invoice_key = invoice_key;
    m_invoice_key_isSet = true;
}

bool OAIInvoiceNotificationRequest::is_invoice_key_Set() const{
    return m_invoice_key_isSet;
}

bool OAIInvoiceNotificationRequest::is_invoice_key_Valid() const{
    return m_invoice_key_isValid;
}

QString OAIInvoiceNotificationRequest::getInvoiceNumber() const {
    return m_invoice_number;
}
void OAIInvoiceNotificationRequest::setInvoiceNumber(const QString &invoice_number) {
    m_invoice_number = invoice_number;
    m_invoice_number_isSet = true;
}

bool OAIInvoiceNotificationRequest::is_invoice_number_Set() const{
    return m_invoice_number_isSet;
}

bool OAIInvoiceNotificationRequest::is_invoice_number_Valid() const{
    return m_invoice_number_isValid;
}

QString OAIInvoiceNotificationRequest::getInvoiceUrl() const {
    return m_invoice_url;
}
void OAIInvoiceNotificationRequest::setInvoiceUrl(const QString &invoice_url) {
    m_invoice_url = invoice_url;
    m_invoice_url_isSet = true;
}

bool OAIInvoiceNotificationRequest::is_invoice_url_Set() const{
    return m_invoice_url_isSet;
}

bool OAIInvoiceNotificationRequest::is_invoice_url_Valid() const{
    return m_invoice_url_isValid;
}

QString OAIInvoiceNotificationRequest::getInvoiceValue() const {
    return m_invoice_value;
}
void OAIInvoiceNotificationRequest::setInvoiceValue(const QString &invoice_value) {
    m_invoice_value = invoice_value;
    m_invoice_value_isSet = true;
}

bool OAIInvoiceNotificationRequest::is_invoice_value_Set() const{
    return m_invoice_value_isSet;
}

bool OAIInvoiceNotificationRequest::is_invoice_value_Valid() const{
    return m_invoice_value_isValid;
}

QString OAIInvoiceNotificationRequest::getIssuanceDate() const {
    return m_issuance_date;
}
void OAIInvoiceNotificationRequest::setIssuanceDate(const QString &issuance_date) {
    m_issuance_date = issuance_date;
    m_issuance_date_isSet = true;
}

bool OAIInvoiceNotificationRequest::is_issuance_date_Set() const{
    return m_issuance_date_isSet;
}

bool OAIInvoiceNotificationRequest::is_issuance_date_Valid() const{
    return m_issuance_date_isValid;
}

QList<OAIItem1> OAIInvoiceNotificationRequest::getItems() const {
    return m_items;
}
void OAIInvoiceNotificationRequest::setItems(const QList<OAIItem1> &items) {
    m_items = items;
    m_items_isSet = true;
}

bool OAIInvoiceNotificationRequest::is_items_Set() const{
    return m_items_isSet;
}

bool OAIInvoiceNotificationRequest::is_items_Valid() const{
    return m_items_isValid;
}

QString OAIInvoiceNotificationRequest::getTrackingNumber() const {
    return m_tracking_number;
}
void OAIInvoiceNotificationRequest::setTrackingNumber(const QString &tracking_number) {
    m_tracking_number = tracking_number;
    m_tracking_number_isSet = true;
}

bool OAIInvoiceNotificationRequest::is_tracking_number_Set() const{
    return m_tracking_number_isSet;
}

bool OAIInvoiceNotificationRequest::is_tracking_number_Valid() const{
    return m_tracking_number_isValid;
}

QString OAIInvoiceNotificationRequest::getTrackingUrl() const {
    return m_tracking_url;
}
void OAIInvoiceNotificationRequest::setTrackingUrl(const QString &tracking_url) {
    m_tracking_url = tracking_url;
    m_tracking_url_isSet = true;
}

bool OAIInvoiceNotificationRequest::is_tracking_url_Set() const{
    return m_tracking_url_isSet;
}

bool OAIInvoiceNotificationRequest::is_tracking_url_Valid() const{
    return m_tracking_url_isValid;
}

QString OAIInvoiceNotificationRequest::getType() const {
    return m_type;
}
void OAIInvoiceNotificationRequest::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIInvoiceNotificationRequest::is_type_Set() const{
    return m_type_isSet;
}

bool OAIInvoiceNotificationRequest::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIInvoiceNotificationRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_courier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dispatched_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_embedded_invoice_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_issuance_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_tracking_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tracking_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInvoiceNotificationRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_invoice_number_isValid && m_invoice_value_isValid && m_issuance_date_isValid && m_items_isValid && m_type_isValid && true;
}

} // namespace OpenAPI
