/**
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRatesAndBenefitsData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRatesAndBenefitsData::OAIRatesAndBenefitsData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRatesAndBenefitsData::OAIRatesAndBenefitsData() {
    this->initializeModel();
}

OAIRatesAndBenefitsData::~OAIRatesAndBenefitsData() {}

void OAIRatesAndBenefitsData::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_rate_and_benefits_identifiers_isSet = false;
    m_rate_and_benefits_identifiers_isValid = false;
}

void OAIRatesAndBenefitsData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRatesAndBenefitsData::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_rate_and_benefits_identifiers_isValid = ::OpenAPI::fromJsonValue(m_rate_and_benefits_identifiers, json[QString("rateAndBenefitsIdentifiers")]);
    m_rate_and_benefits_identifiers_isSet = !json[QString("rateAndBenefitsIdentifiers")].isNull() && m_rate_and_benefits_identifiers_isValid;
}

QString OAIRatesAndBenefitsData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRatesAndBenefitsData::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_rate_and_benefits_identifiers.size() > 0) {
        obj.insert(QString("rateAndBenefitsIdentifiers"), ::OpenAPI::toJsonValue(m_rate_and_benefits_identifiers));
    }
    return obj;
}

QString OAIRatesAndBenefitsData::getId() const {
    return m_id;
}
void OAIRatesAndBenefitsData::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIRatesAndBenefitsData::is_id_Set() const{
    return m_id_isSet;
}

bool OAIRatesAndBenefitsData::is_id_Valid() const{
    return m_id_isValid;
}

QList<QString> OAIRatesAndBenefitsData::getRateAndBenefitsIdentifiers() const {
    return m_rate_and_benefits_identifiers;
}
void OAIRatesAndBenefitsData::setRateAndBenefitsIdentifiers(const QList<QString> &rate_and_benefits_identifiers) {
    m_rate_and_benefits_identifiers = rate_and_benefits_identifiers;
    m_rate_and_benefits_identifiers_isSet = true;
}

bool OAIRatesAndBenefitsData::is_rate_and_benefits_identifiers_Set() const{
    return m_rate_and_benefits_identifiers_isSet;
}

bool OAIRatesAndBenefitsData::is_rate_and_benefits_identifiers_Valid() const{
    return m_rate_and_benefits_identifiers_isValid;
}

bool OAIRatesAndBenefitsData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rate_and_benefits_identifiers.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRatesAndBenefitsData::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && m_rate_and_benefits_identifiers_isValid && true;
}

} // namespace OpenAPI
