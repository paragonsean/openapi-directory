/**
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFeedFilter.h
 *
 * Object with type and status that will filter feed orders.
 */

#ifndef OAIFeedFilter_H
#define OAIFeedFilter_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFeedFilter : public OAIObject {
public:
    OAIFeedFilter();
    OAIFeedFilter(QString json);
    ~OAIFeedFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isDisableSingleFire() const;
    void setDisableSingleFire(const bool &disable_single_fire);
    bool is_disable_single_fire_Set() const;
    bool is_disable_single_fire_Valid() const;

    QString getExpression() const;
    void setExpression(const QString &expression);
    bool is_expression_Set() const;
    bool is_expression_Valid() const;

    QList<QString> getStatus() const;
    void setStatus(const QList<QString> &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_disable_single_fire;
    bool m_disable_single_fire_isSet;
    bool m_disable_single_fire_isValid;

    QString m_expression;
    bool m_expression_isSet;
    bool m_expression_isValid;

    QList<QString> m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFeedFilter)

#endif // OAIFeedFilter_H
