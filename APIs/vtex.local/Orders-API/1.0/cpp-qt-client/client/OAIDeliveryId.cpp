/**
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeliveryId.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeliveryId::OAIDeliveryId(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeliveryId::OAIDeliveryId() {
    this->initializeModel();
}

OAIDeliveryId::~OAIDeliveryId() {}

void OAIDeliveryId::initializeModel() {

    m_account_carrier_name_isSet = false;
    m_account_carrier_name_isValid = false;

    m_courier_id_isSet = false;
    m_courier_id_isValid = false;

    m_courier_name_isSet = false;
    m_courier_name_isValid = false;

    m_dock_id_isSet = false;
    m_dock_id_isValid = false;

    m_kit_item_details_isSet = false;
    m_kit_item_details_isValid = false;

    m_quantity_isSet = false;
    m_quantity_isValid = false;

    m_warehouse_id_isSet = false;
    m_warehouse_id_isValid = false;
}

void OAIDeliveryId::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeliveryId::fromJsonObject(QJsonObject json) {

    m_account_carrier_name_isValid = ::OpenAPI::fromJsonValue(m_account_carrier_name, json[QString("accountCarrierName")]);
    m_account_carrier_name_isSet = !json[QString("accountCarrierName")].isNull() && m_account_carrier_name_isValid;

    m_courier_id_isValid = ::OpenAPI::fromJsonValue(m_courier_id, json[QString("courierId")]);
    m_courier_id_isSet = !json[QString("courierId")].isNull() && m_courier_id_isValid;

    m_courier_name_isValid = ::OpenAPI::fromJsonValue(m_courier_name, json[QString("courierName")]);
    m_courier_name_isSet = !json[QString("courierName")].isNull() && m_courier_name_isValid;

    m_dock_id_isValid = ::OpenAPI::fromJsonValue(m_dock_id, json[QString("dockId")]);
    m_dock_id_isSet = !json[QString("dockId")].isNull() && m_dock_id_isValid;

    m_kit_item_details_isValid = ::OpenAPI::fromJsonValue(m_kit_item_details, json[QString("kitItemDetails")]);
    m_kit_item_details_isSet = !json[QString("kitItemDetails")].isNull() && m_kit_item_details_isValid;

    m_quantity_isValid = ::OpenAPI::fromJsonValue(m_quantity, json[QString("quantity")]);
    m_quantity_isSet = !json[QString("quantity")].isNull() && m_quantity_isValid;

    m_warehouse_id_isValid = ::OpenAPI::fromJsonValue(m_warehouse_id, json[QString("warehouseId")]);
    m_warehouse_id_isSet = !json[QString("warehouseId")].isNull() && m_warehouse_id_isValid;
}

QString OAIDeliveryId::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeliveryId::asJsonObject() const {
    QJsonObject obj;
    if (m_account_carrier_name_isSet) {
        obj.insert(QString("accountCarrierName"), ::OpenAPI::toJsonValue(m_account_carrier_name));
    }
    if (m_courier_id_isSet) {
        obj.insert(QString("courierId"), ::OpenAPI::toJsonValue(m_courier_id));
    }
    if (m_courier_name_isSet) {
        obj.insert(QString("courierName"), ::OpenAPI::toJsonValue(m_courier_name));
    }
    if (m_dock_id_isSet) {
        obj.insert(QString("dockId"), ::OpenAPI::toJsonValue(m_dock_id));
    }
    if (m_kit_item_details.size() > 0) {
        obj.insert(QString("kitItemDetails"), ::OpenAPI::toJsonValue(m_kit_item_details));
    }
    if (m_quantity_isSet) {
        obj.insert(QString("quantity"), ::OpenAPI::toJsonValue(m_quantity));
    }
    if (m_warehouse_id_isSet) {
        obj.insert(QString("warehouseId"), ::OpenAPI::toJsonValue(m_warehouse_id));
    }
    return obj;
}

QString OAIDeliveryId::getAccountCarrierName() const {
    return m_account_carrier_name;
}
void OAIDeliveryId::setAccountCarrierName(const QString &account_carrier_name) {
    m_account_carrier_name = account_carrier_name;
    m_account_carrier_name_isSet = true;
}

bool OAIDeliveryId::is_account_carrier_name_Set() const{
    return m_account_carrier_name_isSet;
}

bool OAIDeliveryId::is_account_carrier_name_Valid() const{
    return m_account_carrier_name_isValid;
}

QString OAIDeliveryId::getCourierId() const {
    return m_courier_id;
}
void OAIDeliveryId::setCourierId(const QString &courier_id) {
    m_courier_id = courier_id;
    m_courier_id_isSet = true;
}

bool OAIDeliveryId::is_courier_id_Set() const{
    return m_courier_id_isSet;
}

bool OAIDeliveryId::is_courier_id_Valid() const{
    return m_courier_id_isValid;
}

QString OAIDeliveryId::getCourierName() const {
    return m_courier_name;
}
void OAIDeliveryId::setCourierName(const QString &courier_name) {
    m_courier_name = courier_name;
    m_courier_name_isSet = true;
}

bool OAIDeliveryId::is_courier_name_Set() const{
    return m_courier_name_isSet;
}

bool OAIDeliveryId::is_courier_name_Valid() const{
    return m_courier_name_isValid;
}

QString OAIDeliveryId::getDockId() const {
    return m_dock_id;
}
void OAIDeliveryId::setDockId(const QString &dock_id) {
    m_dock_id = dock_id;
    m_dock_id_isSet = true;
}

bool OAIDeliveryId::is_dock_id_Set() const{
    return m_dock_id_isSet;
}

bool OAIDeliveryId::is_dock_id_Valid() const{
    return m_dock_id_isValid;
}

QList<QJsonValue> OAIDeliveryId::getKitItemDetails() const {
    return m_kit_item_details;
}
void OAIDeliveryId::setKitItemDetails(const QList<QJsonValue> &kit_item_details) {
    m_kit_item_details = kit_item_details;
    m_kit_item_details_isSet = true;
}

bool OAIDeliveryId::is_kit_item_details_Set() const{
    return m_kit_item_details_isSet;
}

bool OAIDeliveryId::is_kit_item_details_Valid() const{
    return m_kit_item_details_isValid;
}

qint32 OAIDeliveryId::getQuantity() const {
    return m_quantity;
}
void OAIDeliveryId::setQuantity(const qint32 &quantity) {
    m_quantity = quantity;
    m_quantity_isSet = true;
}

bool OAIDeliveryId::is_quantity_Set() const{
    return m_quantity_isSet;
}

bool OAIDeliveryId::is_quantity_Valid() const{
    return m_quantity_isValid;
}

QString OAIDeliveryId::getWarehouseId() const {
    return m_warehouse_id;
}
void OAIDeliveryId::setWarehouseId(const QString &warehouse_id) {
    m_warehouse_id = warehouse_id;
    m_warehouse_id_isSet = true;
}

bool OAIDeliveryId::is_warehouse_id_Set() const{
    return m_warehouse_id_isSet;
}

bool OAIDeliveryId::is_warehouse_id_Valid() const{
    return m_warehouse_id_isValid;
}

bool OAIDeliveryId::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_carrier_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_courier_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_courier_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dock_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kit_item_details.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_warehouse_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeliveryId::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_carrier_name_isValid && m_courier_id_isValid && m_courier_name_isValid && m_dock_id_isValid && m_kit_item_details_isValid && m_quantity_isValid && m_warehouse_id_isValid && true;
}

} // namespace OpenAPI
