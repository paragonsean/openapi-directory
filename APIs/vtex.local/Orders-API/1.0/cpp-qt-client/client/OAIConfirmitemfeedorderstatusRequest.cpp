/**
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConfirmitemfeedorderstatusRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConfirmitemfeedorderstatusRequest::OAIConfirmitemfeedorderstatusRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConfirmitemfeedorderstatusRequest::OAIConfirmitemfeedorderstatusRequest() {
    this->initializeModel();
}

OAIConfirmitemfeedorderstatusRequest::~OAIConfirmitemfeedorderstatusRequest() {}

void OAIConfirmitemfeedorderstatusRequest::initializeModel() {

    m_commit_token_isSet = false;
    m_commit_token_isValid = false;
}

void OAIConfirmitemfeedorderstatusRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConfirmitemfeedorderstatusRequest::fromJsonObject(QJsonObject json) {

    m_commit_token_isValid = ::OpenAPI::fromJsonValue(m_commit_token, json[QString("commitToken")]);
    m_commit_token_isSet = !json[QString("commitToken")].isNull() && m_commit_token_isValid;
}

QString OAIConfirmitemfeedorderstatusRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConfirmitemfeedorderstatusRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_commit_token_isSet) {
        obj.insert(QString("commitToken"), ::OpenAPI::toJsonValue(m_commit_token));
    }
    return obj;
}

QString OAIConfirmitemfeedorderstatusRequest::getCommitToken() const {
    return m_commit_token;
}
void OAIConfirmitemfeedorderstatusRequest::setCommitToken(const QString &commit_token) {
    m_commit_token = commit_token;
    m_commit_token_isSet = true;
}

bool OAIConfirmitemfeedorderstatusRequest::is_commit_token_Set() const{
    return m_commit_token_isSet;
}

bool OAIConfirmitemfeedorderstatusRequest::is_commit_token_Valid() const{
    return m_commit_token_isValid;
}

bool OAIConfirmitemfeedorderstatusRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_commit_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConfirmitemfeedorderstatusRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_commit_token_isValid && true;
}

} // namespace OpenAPI
