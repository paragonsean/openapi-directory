/**
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICancelOrder_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICancelOrder_200_response::OAICancelOrder_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICancelOrder_200_response::OAICancelOrder_200_response() {
    this->initializeModel();
}

OAICancelOrder_200_response::~OAICancelOrder_200_response() {}

void OAICancelOrder_200_response::initializeModel() {

    m_date_isSet = false;
    m_date_isValid = false;

    m_order_id_isSet = false;
    m_order_id_isValid = false;

    m_receipt_isSet = false;
    m_receipt_isValid = false;
}

void OAICancelOrder_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICancelOrder_200_response::fromJsonObject(QJsonObject json) {

    m_date_isValid = ::OpenAPI::fromJsonValue(m_date, json[QString("date")]);
    m_date_isSet = !json[QString("date")].isNull() && m_date_isValid;

    m_order_id_isValid = ::OpenAPI::fromJsonValue(m_order_id, json[QString("orderId")]);
    m_order_id_isSet = !json[QString("orderId")].isNull() && m_order_id_isValid;

    m_receipt_isValid = ::OpenAPI::fromJsonValue(m_receipt, json[QString("receipt")]);
    m_receipt_isSet = !json[QString("receipt")].isNull() && m_receipt_isValid;
}

QString OAICancelOrder_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICancelOrder_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_date_isSet) {
        obj.insert(QString("date"), ::OpenAPI::toJsonValue(m_date));
    }
    if (m_order_id_isSet) {
        obj.insert(QString("orderId"), ::OpenAPI::toJsonValue(m_order_id));
    }
    if (m_receipt_isSet) {
        obj.insert(QString("receipt"), ::OpenAPI::toJsonValue(m_receipt));
    }
    return obj;
}

QString OAICancelOrder_200_response::getDate() const {
    return m_date;
}
void OAICancelOrder_200_response::setDate(const QString &date) {
    m_date = date;
    m_date_isSet = true;
}

bool OAICancelOrder_200_response::is_date_Set() const{
    return m_date_isSet;
}

bool OAICancelOrder_200_response::is_date_Valid() const{
    return m_date_isValid;
}

QString OAICancelOrder_200_response::getOrderId() const {
    return m_order_id;
}
void OAICancelOrder_200_response::setOrderId(const QString &order_id) {
    m_order_id = order_id;
    m_order_id_isSet = true;
}

bool OAICancelOrder_200_response::is_order_id_Set() const{
    return m_order_id_isSet;
}

bool OAICancelOrder_200_response::is_order_id_Valid() const{
    return m_order_id_isValid;
}

QString OAICancelOrder_200_response::getReceipt() const {
    return m_receipt;
}
void OAICancelOrder_200_response::setReceipt(const QString &receipt) {
    m_receipt = receipt;
    m_receipt_isSet = true;
}

bool OAICancelOrder_200_response::is_receipt_Set() const{
    return m_receipt_isSet;
}

bool OAICancelOrder_200_response::is_receipt_Valid() const{
    return m_receipt_isValid;
}

bool OAICancelOrder_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_receipt_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICancelOrder_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
