/**
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPaymentData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPaymentData::OAIPaymentData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPaymentData::OAIPaymentData() {
    this->initializeModel();
}

OAIPaymentData::~OAIPaymentData() {}

void OAIPaymentData::initializeModel() {

    m_gift_cards_isSet = false;
    m_gift_cards_isValid = false;

    m_transactions_isSet = false;
    m_transactions_isValid = false;
}

void OAIPaymentData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPaymentData::fromJsonObject(QJsonObject json) {

    m_gift_cards_isValid = ::OpenAPI::fromJsonValue(m_gift_cards, json[QString("giftCards")]);
    m_gift_cards_isSet = !json[QString("giftCards")].isNull() && m_gift_cards_isValid;

    m_transactions_isValid = ::OpenAPI::fromJsonValue(m_transactions, json[QString("transactions")]);
    m_transactions_isSet = !json[QString("transactions")].isNull() && m_transactions_isValid;
}

QString OAIPaymentData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPaymentData::asJsonObject() const {
    QJsonObject obj;
    if (m_gift_cards.size() > 0) {
        obj.insert(QString("giftCards"), ::OpenAPI::toJsonValue(m_gift_cards));
    }
    if (m_transactions.size() > 0) {
        obj.insert(QString("transactions"), ::OpenAPI::toJsonValue(m_transactions));
    }
    return obj;
}

QList<QJsonValue> OAIPaymentData::getGiftCards() const {
    return m_gift_cards;
}
void OAIPaymentData::setGiftCards(const QList<QJsonValue> &gift_cards) {
    m_gift_cards = gift_cards;
    m_gift_cards_isSet = true;
}

bool OAIPaymentData::is_gift_cards_Set() const{
    return m_gift_cards_isSet;
}

bool OAIPaymentData::is_gift_cards_Valid() const{
    return m_gift_cards_isValid;
}

QList<OAITransaction> OAIPaymentData::getTransactions() const {
    return m_transactions;
}
void OAIPaymentData::setTransactions(const QList<OAITransaction> &transactions) {
    m_transactions = transactions;
    m_transactions_isSet = true;
}

bool OAIPaymentData::is_transactions_Set() const{
    return m_transactions_isSet;
}

bool OAIPaymentData::is_transactions_Valid() const{
    return m_transactions_isValid;
}

bool OAIPaymentData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_gift_cards.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_transactions.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPaymentData::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_transactions_isValid && true;
}

} // namespace OpenAPI
