/**
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUserorderdetails_taxData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUserorderdetails_taxData::OAIUserorderdetails_taxData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUserorderdetails_taxData::OAIUserorderdetails_taxData() {
    this->initializeModel();
}

OAIUserorderdetails_taxData::~OAIUserorderdetails_taxData() {}

void OAIUserorderdetails_taxData::initializeModel() {

    m_are_taxes_designated_by_marketplace_isSet = false;
    m_are_taxes_designated_by_marketplace_isValid = false;

    m_tax_info_collection_isSet = false;
    m_tax_info_collection_isValid = false;
}

void OAIUserorderdetails_taxData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUserorderdetails_taxData::fromJsonObject(QJsonObject json) {

    m_are_taxes_designated_by_marketplace_isValid = ::OpenAPI::fromJsonValue(m_are_taxes_designated_by_marketplace, json[QString("areTaxesDesignatedByMarketplace")]);
    m_are_taxes_designated_by_marketplace_isSet = !json[QString("areTaxesDesignatedByMarketplace")].isNull() && m_are_taxes_designated_by_marketplace_isValid;

    m_tax_info_collection_isValid = ::OpenAPI::fromJsonValue(m_tax_info_collection, json[QString("taxInfoCollection")]);
    m_tax_info_collection_isSet = !json[QString("taxInfoCollection")].isNull() && m_tax_info_collection_isValid;
}

QString OAIUserorderdetails_taxData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUserorderdetails_taxData::asJsonObject() const {
    QJsonObject obj;
    if (m_are_taxes_designated_by_marketplace_isSet) {
        obj.insert(QString("areTaxesDesignatedByMarketplace"), ::OpenAPI::toJsonValue(m_are_taxes_designated_by_marketplace));
    }
    if (m_tax_info_collection.size() > 0) {
        obj.insert(QString("taxInfoCollection"), ::OpenAPI::toJsonValue(m_tax_info_collection));
    }
    return obj;
}

bool OAIUserorderdetails_taxData::isAreTaxesDesignatedByMarketplace() const {
    return m_are_taxes_designated_by_marketplace;
}
void OAIUserorderdetails_taxData::setAreTaxesDesignatedByMarketplace(const bool &are_taxes_designated_by_marketplace) {
    m_are_taxes_designated_by_marketplace = are_taxes_designated_by_marketplace;
    m_are_taxes_designated_by_marketplace_isSet = true;
}

bool OAIUserorderdetails_taxData::is_are_taxes_designated_by_marketplace_Set() const{
    return m_are_taxes_designated_by_marketplace_isSet;
}

bool OAIUserorderdetails_taxData::is_are_taxes_designated_by_marketplace_Valid() const{
    return m_are_taxes_designated_by_marketplace_isValid;
}

QList<OAIUserorderdetails_taxData_taxInfoCollection_inner> OAIUserorderdetails_taxData::getTaxInfoCollection() const {
    return m_tax_info_collection;
}
void OAIUserorderdetails_taxData::setTaxInfoCollection(const QList<OAIUserorderdetails_taxData_taxInfoCollection_inner> &tax_info_collection) {
    m_tax_info_collection = tax_info_collection;
    m_tax_info_collection_isSet = true;
}

bool OAIUserorderdetails_taxData::is_tax_info_collection_Set() const{
    return m_tax_info_collection_isSet;
}

bool OAIUserorderdetails_taxData::is_tax_info_collection_Valid() const{
    return m_tax_info_collection_isValid;
}

bool OAIUserorderdetails_taxData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_are_taxes_designated_by_marketplace_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_info_collection.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUserorderdetails_taxData::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_are_taxes_designated_by_marketplace_isValid && m_tax_info_collection_isValid && true;
}

} // namespace OpenAPI
