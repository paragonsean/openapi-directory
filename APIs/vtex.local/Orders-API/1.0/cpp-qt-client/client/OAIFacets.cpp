/**
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFacets.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFacets::OAIFacets(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFacets::OAIFacets() {
    this->initializeModel();
}

OAIFacets::~OAIFacets() {}

void OAIFacets::initializeModel() {

    m_currency_code_isSet = false;
    m_currency_code_isValid = false;

    m_origin_isSet = false;
    m_origin_isValid = false;
}

void OAIFacets::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFacets::fromJsonObject(QJsonObject json) {

    m_currency_code_isValid = ::OpenAPI::fromJsonValue(m_currency_code, json[QString("currencyCode")]);
    m_currency_code_isSet = !json[QString("currencyCode")].isNull() && m_currency_code_isValid;

    m_origin_isValid = ::OpenAPI::fromJsonValue(m_origin, json[QString("origin")]);
    m_origin_isSet = !json[QString("origin")].isNull() && m_origin_isValid;
}

QString OAIFacets::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFacets::asJsonObject() const {
    QJsonObject obj;
    if (m_currency_code.isSet()) {
        obj.insert(QString("currencyCode"), ::OpenAPI::toJsonValue(m_currency_code));
    }
    if (m_origin.isSet()) {
        obj.insert(QString("origin"), ::OpenAPI::toJsonValue(m_origin));
    }
    return obj;
}

OAICurrencyCode OAIFacets::getCurrencyCode() const {
    return m_currency_code;
}
void OAIFacets::setCurrencyCode(const OAICurrencyCode &currency_code) {
    m_currency_code = currency_code;
    m_currency_code_isSet = true;
}

bool OAIFacets::is_currency_code_Set() const{
    return m_currency_code_isSet;
}

bool OAIFacets::is_currency_code_Valid() const{
    return m_currency_code_isValid;
}

OAIOrigin OAIFacets::getOrigin() const {
    return m_origin;
}
void OAIFacets::setOrigin(const OAIOrigin &origin) {
    m_origin = origin;
    m_origin_isSet = true;
}

bool OAIFacets::is_origin_Set() const{
    return m_origin_isSet;
}

bool OAIFacets::is_origin_Valid() const{
    return m_origin_isValid;
}

bool OAIFacets::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_currency_code.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_origin.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFacets::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_currency_code_isValid && m_origin_isValid && true;
}

} // namespace OpenAPI
