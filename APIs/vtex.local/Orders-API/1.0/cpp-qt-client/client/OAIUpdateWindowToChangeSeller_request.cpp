/**
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateWindowToChangeSeller_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateWindowToChangeSeller_request::OAIUpdateWindowToChangeSeller_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateWindowToChangeSeller_request::OAIUpdateWindowToChangeSeller_request() {
    this->initializeModel();
}

OAIUpdateWindowToChangeSeller_request::~OAIUpdateWindowToChangeSeller_request() {}

void OAIUpdateWindowToChangeSeller_request::initializeModel() {

    m_waiting_time_isSet = false;
    m_waiting_time_isValid = false;
}

void OAIUpdateWindowToChangeSeller_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateWindowToChangeSeller_request::fromJsonObject(QJsonObject json) {

    m_waiting_time_isValid = ::OpenAPI::fromJsonValue(m_waiting_time, json[QString("waitingTime")]);
    m_waiting_time_isSet = !json[QString("waitingTime")].isNull() && m_waiting_time_isValid;
}

QString OAIUpdateWindowToChangeSeller_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateWindowToChangeSeller_request::asJsonObject() const {
    QJsonObject obj;
    if (m_waiting_time_isSet) {
        obj.insert(QString("waitingTime"), ::OpenAPI::toJsonValue(m_waiting_time));
    }
    return obj;
}

qint32 OAIUpdateWindowToChangeSeller_request::getWaitingTime() const {
    return m_waiting_time;
}
void OAIUpdateWindowToChangeSeller_request::setWaitingTime(const qint32 &waiting_time) {
    m_waiting_time = waiting_time;
    m_waiting_time_isSet = true;
}

bool OAIUpdateWindowToChangeSeller_request::is_waiting_time_Set() const{
    return m_waiting_time_isSet;
}

bool OAIUpdateWindowToChangeSeller_request::is_waiting_time_Valid() const{
    return m_waiting_time_isValid;
}

bool OAIUpdateWindowToChangeSeller_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_waiting_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateWindowToChangeSeller_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_waiting_time_isValid && true;
}

} // namespace OpenAPI
