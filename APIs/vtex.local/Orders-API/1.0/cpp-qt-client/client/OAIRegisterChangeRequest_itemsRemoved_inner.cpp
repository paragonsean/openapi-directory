/**
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRegisterChangeRequest_itemsRemoved_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRegisterChangeRequest_itemsRemoved_inner::OAIRegisterChangeRequest_itemsRemoved_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRegisterChangeRequest_itemsRemoved_inner::OAIRegisterChangeRequest_itemsRemoved_inner() {
    this->initializeModel();
}

OAIRegisterChangeRequest_itemsRemoved_inner::~OAIRegisterChangeRequest_itemsRemoved_inner() {}

void OAIRegisterChangeRequest_itemsRemoved_inner::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;

    m_quantity_isSet = false;
    m_quantity_isValid = false;
}

void OAIRegisterChangeRequest_itemsRemoved_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRegisterChangeRequest_itemsRemoved_inner::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;

    m_quantity_isValid = ::OpenAPI::fromJsonValue(m_quantity, json[QString("quantity")]);
    m_quantity_isSet = !json[QString("quantity")].isNull() && m_quantity_isValid;
}

QString OAIRegisterChangeRequest_itemsRemoved_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRegisterChangeRequest_itemsRemoved_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_price_isSet) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(m_price));
    }
    if (m_quantity_isSet) {
        obj.insert(QString("quantity"), ::OpenAPI::toJsonValue(m_quantity));
    }
    return obj;
}

QString OAIRegisterChangeRequest_itemsRemoved_inner::getId() const {
    return m_id;
}
void OAIRegisterChangeRequest_itemsRemoved_inner::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIRegisterChangeRequest_itemsRemoved_inner::is_id_Set() const{
    return m_id_isSet;
}

bool OAIRegisterChangeRequest_itemsRemoved_inner::is_id_Valid() const{
    return m_id_isValid;
}

qint32 OAIRegisterChangeRequest_itemsRemoved_inner::getPrice() const {
    return m_price;
}
void OAIRegisterChangeRequest_itemsRemoved_inner::setPrice(const qint32 &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAIRegisterChangeRequest_itemsRemoved_inner::is_price_Set() const{
    return m_price_isSet;
}

bool OAIRegisterChangeRequest_itemsRemoved_inner::is_price_Valid() const{
    return m_price_isValid;
}

qint32 OAIRegisterChangeRequest_itemsRemoved_inner::getQuantity() const {
    return m_quantity;
}
void OAIRegisterChangeRequest_itemsRemoved_inner::setQuantity(const qint32 &quantity) {
    m_quantity = quantity;
    m_quantity_isSet = true;
}

bool OAIRegisterChangeRequest_itemsRemoved_inner::is_quantity_Set() const{
    return m_quantity_isSet;
}

bool OAIRegisterChangeRequest_itemsRemoved_inner::is_quantity_Valid() const{
    return m_quantity_isValid;
}

bool OAIRegisterChangeRequest_itemsRemoved_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRegisterChangeRequest_itemsRemoved_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && m_price_isValid && m_quantity_isValid && true;
}

} // namespace OpenAPI
