/**
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIQueue.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIQueue::OAIQueue(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIQueue::OAIQueue() {
    this->initializeModel();
}

OAIQueue::~OAIQueue() {}

void OAIQueue::initializeModel() {

    m_message_retention_period_in_seconds_isSet = false;
    m_message_retention_period_in_seconds_isValid = false;

    m_visibility_timeout_in_seconds_isSet = false;
    m_visibility_timeout_in_seconds_isValid = false;
}

void OAIQueue::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIQueue::fromJsonObject(QJsonObject json) {

    m_message_retention_period_in_seconds_isValid = ::OpenAPI::fromJsonValue(m_message_retention_period_in_seconds, json[QString("MessageRetentionPeriodInSeconds")]);
    m_message_retention_period_in_seconds_isSet = !json[QString("MessageRetentionPeriodInSeconds")].isNull() && m_message_retention_period_in_seconds_isValid;

    m_visibility_timeout_in_seconds_isValid = ::OpenAPI::fromJsonValue(m_visibility_timeout_in_seconds, json[QString("visibilityTimeoutInSeconds")]);
    m_visibility_timeout_in_seconds_isSet = !json[QString("visibilityTimeoutInSeconds")].isNull() && m_visibility_timeout_in_seconds_isValid;
}

QString OAIQueue::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIQueue::asJsonObject() const {
    QJsonObject obj;
    if (m_message_retention_period_in_seconds_isSet) {
        obj.insert(QString("MessageRetentionPeriodInSeconds"), ::OpenAPI::toJsonValue(m_message_retention_period_in_seconds));
    }
    if (m_visibility_timeout_in_seconds_isSet) {
        obj.insert(QString("visibilityTimeoutInSeconds"), ::OpenAPI::toJsonValue(m_visibility_timeout_in_seconds));
    }
    return obj;
}

qint32 OAIQueue::getMessageRetentionPeriodInSeconds() const {
    return m_message_retention_period_in_seconds;
}
void OAIQueue::setMessageRetentionPeriodInSeconds(const qint32 &message_retention_period_in_seconds) {
    m_message_retention_period_in_seconds = message_retention_period_in_seconds;
    m_message_retention_period_in_seconds_isSet = true;
}

bool OAIQueue::is_message_retention_period_in_seconds_Set() const{
    return m_message_retention_period_in_seconds_isSet;
}

bool OAIQueue::is_message_retention_period_in_seconds_Valid() const{
    return m_message_retention_period_in_seconds_isValid;
}

qint32 OAIQueue::getVisibilityTimeoutInSeconds() const {
    return m_visibility_timeout_in_seconds;
}
void OAIQueue::setVisibilityTimeoutInSeconds(const qint32 &visibility_timeout_in_seconds) {
    m_visibility_timeout_in_seconds = visibility_timeout_in_seconds;
    m_visibility_timeout_in_seconds_isSet = true;
}

bool OAIQueue::is_visibility_timeout_in_seconds_Set() const{
    return m_visibility_timeout_in_seconds_isSet;
}

bool OAIQueue::is_visibility_timeout_in_seconds_Valid() const{
    return m_visibility_timeout_in_seconds_isValid;
}

bool OAIQueue::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_message_retention_period_in_seconds_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_visibility_timeout_in_seconds_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIQueue::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_message_retention_period_in_seconds_isValid && m_visibility_timeout_in_seconds_isValid && true;
}

} // namespace OpenAPI
