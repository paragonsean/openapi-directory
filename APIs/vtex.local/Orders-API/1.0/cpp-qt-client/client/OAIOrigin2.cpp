/**
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrigin2.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrigin2::OAIOrigin2(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrigin2::OAIOrigin2() {
    this->initializeModel();
}

OAIOrigin2::~OAIOrigin2() {}

void OAIOrigin2::initializeModel() {

    m_account_isSet = false;
    m_account_isValid = false;

    m_key_isSet = false;
    m_key_isValid = false;
}

void OAIOrigin2::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrigin2::fromJsonObject(QJsonObject json) {

    m_account_isValid = ::OpenAPI::fromJsonValue(m_account, json[QString("Account")]);
    m_account_isSet = !json[QString("Account")].isNull() && m_account_isValid;

    m_key_isValid = ::OpenAPI::fromJsonValue(m_key, json[QString("Key")]);
    m_key_isSet = !json[QString("Key")].isNull() && m_key_isValid;
}

QString OAIOrigin2::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrigin2::asJsonObject() const {
    QJsonObject obj;
    if (m_account_isSet) {
        obj.insert(QString("Account"), ::OpenAPI::toJsonValue(m_account));
    }
    if (m_key_isSet) {
        obj.insert(QString("Key"), ::OpenAPI::toJsonValue(m_key));
    }
    return obj;
}

QString OAIOrigin2::getAccount() const {
    return m_account;
}
void OAIOrigin2::setAccount(const QString &account) {
    m_account = account;
    m_account_isSet = true;
}

bool OAIOrigin2::is_account_Set() const{
    return m_account_isSet;
}

bool OAIOrigin2::is_account_Valid() const{
    return m_account_isValid;
}

QString OAIOrigin2::getKey() const {
    return m_key;
}
void OAIOrigin2::setKey(const QString &key) {
    m_key = key;
    m_key_isSet = true;
}

bool OAIOrigin2::is_key_Set() const{
    return m_key_isSet;
}

bool OAIOrigin2::is_key_Valid() const{
    return m_key_isValid;
}

bool OAIOrigin2::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_key_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrigin2::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_isValid && m_key_isValid && true;
}

} // namespace OpenAPI
