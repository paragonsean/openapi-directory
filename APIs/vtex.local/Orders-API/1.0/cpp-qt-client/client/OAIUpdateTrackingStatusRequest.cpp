/**
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateTrackingStatusRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateTrackingStatusRequest::OAIUpdateTrackingStatusRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateTrackingStatusRequest::OAIUpdateTrackingStatusRequest() {
    this->initializeModel();
}

OAIUpdateTrackingStatusRequest::~OAIUpdateTrackingStatusRequest() {}

void OAIUpdateTrackingStatusRequest::initializeModel() {

    m_delivered_date_isSet = false;
    m_delivered_date_isValid = false;

    m_events_isSet = false;
    m_events_isValid = false;

    m_is_delivered_isSet = false;
    m_is_delivered_isValid = false;
}

void OAIUpdateTrackingStatusRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateTrackingStatusRequest::fromJsonObject(QJsonObject json) {

    m_delivered_date_isValid = ::OpenAPI::fromJsonValue(m_delivered_date, json[QString("deliveredDate")]);
    m_delivered_date_isSet = !json[QString("deliveredDate")].isNull() && m_delivered_date_isValid;

    m_events_isValid = ::OpenAPI::fromJsonValue(m_events, json[QString("events")]);
    m_events_isSet = !json[QString("events")].isNull() && m_events_isValid;

    m_is_delivered_isValid = ::OpenAPI::fromJsonValue(m_is_delivered, json[QString("isDelivered")]);
    m_is_delivered_isSet = !json[QString("isDelivered")].isNull() && m_is_delivered_isValid;
}

QString OAIUpdateTrackingStatusRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateTrackingStatusRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_delivered_date_isSet) {
        obj.insert(QString("deliveredDate"), ::OpenAPI::toJsonValue(m_delivered_date));
    }
    if (m_events.size() > 0) {
        obj.insert(QString("events"), ::OpenAPI::toJsonValue(m_events));
    }
    if (m_is_delivered_isSet) {
        obj.insert(QString("isDelivered"), ::OpenAPI::toJsonValue(m_is_delivered));
    }
    return obj;
}

QString OAIUpdateTrackingStatusRequest::getDeliveredDate() const {
    return m_delivered_date;
}
void OAIUpdateTrackingStatusRequest::setDeliveredDate(const QString &delivered_date) {
    m_delivered_date = delivered_date;
    m_delivered_date_isSet = true;
}

bool OAIUpdateTrackingStatusRequest::is_delivered_date_Set() const{
    return m_delivered_date_isSet;
}

bool OAIUpdateTrackingStatusRequest::is_delivered_date_Valid() const{
    return m_delivered_date_isValid;
}

QList<OAIEvent> OAIUpdateTrackingStatusRequest::getEvents() const {
    return m_events;
}
void OAIUpdateTrackingStatusRequest::setEvents(const QList<OAIEvent> &events) {
    m_events = events;
    m_events_isSet = true;
}

bool OAIUpdateTrackingStatusRequest::is_events_Set() const{
    return m_events_isSet;
}

bool OAIUpdateTrackingStatusRequest::is_events_Valid() const{
    return m_events_isValid;
}

bool OAIUpdateTrackingStatusRequest::isIsDelivered() const {
    return m_is_delivered;
}
void OAIUpdateTrackingStatusRequest::setIsDelivered(const bool &is_delivered) {
    m_is_delivered = is_delivered;
    m_is_delivered_isSet = true;
}

bool OAIUpdateTrackingStatusRequest::is_is_delivered_Set() const{
    return m_is_delivered_isSet;
}

bool OAIUpdateTrackingStatusRequest::is_is_delivered_Valid() const{
    return m_is_delivered_isValid;
}

bool OAIUpdateTrackingStatusRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_delivered_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_events.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_delivered_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateTrackingStatusRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_delivered_date_isValid && m_events_isValid && m_is_delivered_isValid && true;
}

} // namespace OpenAPI
