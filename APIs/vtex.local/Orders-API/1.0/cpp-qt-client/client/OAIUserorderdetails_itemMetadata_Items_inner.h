/**
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserorderdetails_itemMetadata_Items_inner.h
 *
 * 
 */

#ifndef OAIUserorderdetails_itemMetadata_Items_inner_H
#define OAIUserorderdetails_itemMetadata_Items_inner_H

#include <QJsonObject>

#include "OAIUserorderdetails_itemMetadata_Items_inner_AssemblyOptions_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUserorderdetails_itemMetadata_Items_inner_AssemblyOptions_inner;

class OAIUserorderdetails_itemMetadata_Items_inner : public OAIObject {
public:
    OAIUserorderdetails_itemMetadata_Items_inner();
    OAIUserorderdetails_itemMetadata_Items_inner(QString json);
    ~OAIUserorderdetails_itemMetadata_Items_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIUserorderdetails_itemMetadata_Items_inner_AssemblyOptions_inner> getAssemblyOptions() const;
    void setAssemblyOptions(const QList<OAIUserorderdetails_itemMetadata_Items_inner_AssemblyOptions_inner> &assembly_options);
    bool is_assembly_options_Set() const;
    bool is_assembly_options_Valid() const;

    QString getDetailUrl() const;
    void setDetailUrl(const QString &detail_url);
    bool is_detail_url_Set() const;
    bool is_detail_url_Valid() const;

    QString getEan() const;
    void setEan(const QString &ean);
    bool is_ean_Set() const;
    bool is_ean_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getImageUrl() const;
    void setImageUrl(const QString &image_url);
    bool is_image_url_Set() const;
    bool is_image_url_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getProductId() const;
    void setProductId(const QString &product_id);
    bool is_product_id_Set() const;
    bool is_product_id_Valid() const;

    QString getRefId() const;
    void setRefId(const QString &ref_id);
    bool is_ref_id_Set() const;
    bool is_ref_id_Valid() const;

    QString getSeller() const;
    void setSeller(const QString &seller);
    bool is_seller_Set() const;
    bool is_seller_Valid() const;

    QString getSkuName() const;
    void setSkuName(const QString &sku_name);
    bool is_sku_name_Set() const;
    bool is_sku_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIUserorderdetails_itemMetadata_Items_inner_AssemblyOptions_inner> m_assembly_options;
    bool m_assembly_options_isSet;
    bool m_assembly_options_isValid;

    QString m_detail_url;
    bool m_detail_url_isSet;
    bool m_detail_url_isValid;

    QString m_ean;
    bool m_ean_isSet;
    bool m_ean_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_image_url;
    bool m_image_url_isSet;
    bool m_image_url_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_product_id;
    bool m_product_id_isSet;
    bool m_product_id_isValid;

    QString m_ref_id;
    bool m_ref_id_isSet;
    bool m_ref_id_isValid;

    QString m_seller;
    bool m_seller_isSet;
    bool m_seller_isValid;

    QString m_sku_name;
    bool m_sku_name_isSet;
    bool m_sku_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserorderdetails_itemMetadata_Items_inner)

#endif // OAIUserorderdetails_itemMetadata_Items_inner_H
