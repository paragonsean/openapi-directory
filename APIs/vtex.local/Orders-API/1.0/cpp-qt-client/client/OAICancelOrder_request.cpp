/**
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICancelOrder_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICancelOrder_request::OAICancelOrder_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICancelOrder_request::OAICancelOrder_request() {
    this->initializeModel();
}

OAICancelOrder_request::~OAICancelOrder_request() {}

void OAICancelOrder_request::initializeModel() {

    m_reason_isSet = false;
    m_reason_isValid = false;
}

void OAICancelOrder_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICancelOrder_request::fromJsonObject(QJsonObject json) {

    m_reason_isValid = ::OpenAPI::fromJsonValue(m_reason, json[QString("reason")]);
    m_reason_isSet = !json[QString("reason")].isNull() && m_reason_isValid;
}

QString OAICancelOrder_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICancelOrder_request::asJsonObject() const {
    QJsonObject obj;
    if (m_reason_isSet) {
        obj.insert(QString("reason"), ::OpenAPI::toJsonValue(m_reason));
    }
    return obj;
}

QString OAICancelOrder_request::getReason() const {
    return m_reason;
}
void OAICancelOrder_request::setReason(const QString &reason) {
    m_reason = reason;
    m_reason_isSet = true;
}

bool OAICancelOrder_request::is_reason_Set() const{
    return m_reason_isSet;
}

bool OAICancelOrder_request::is_reason_Valid() const{
    return m_reason_isValid;
}

bool OAICancelOrder_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_reason_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICancelOrder_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
