/**
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIItemAttachment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIItemAttachment::OAIItemAttachment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIItemAttachment::OAIItemAttachment() {
    this->initializeModel();
}

OAIItemAttachment::~OAIItemAttachment() {}

void OAIItemAttachment::initializeModel() {

    m_content_isSet = false;
    m_content_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIItemAttachment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIItemAttachment::fromJsonObject(QJsonObject json) {

    m_content_isValid = ::OpenAPI::fromJsonValue(m_content, json[QString("content")]);
    m_content_isSet = !json[QString("content")].isNull() && m_content_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIItemAttachment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIItemAttachment::asJsonObject() const {
    QJsonObject obj;
    if (m_content_isSet) {
        obj.insert(QString("content"), ::OpenAPI::toJsonValue(m_content));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

OAIObject OAIItemAttachment::getContent() const {
    return m_content;
}
void OAIItemAttachment::setContent(const OAIObject &content) {
    m_content = content;
    m_content_isSet = true;
}

bool OAIItemAttachment::is_content_Set() const{
    return m_content_isSet;
}

bool OAIItemAttachment::is_content_Valid() const{
    return m_content_isValid;
}

QString OAIItemAttachment::getName() const {
    return m_name;
}
void OAIItemAttachment::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIItemAttachment::is_name_Set() const{
    return m_name_isSet;
}

bool OAIItemAttachment::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIItemAttachment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_content_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIItemAttachment::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_content_isValid && m_name_isValid && true;
}

} // namespace OpenAPI
