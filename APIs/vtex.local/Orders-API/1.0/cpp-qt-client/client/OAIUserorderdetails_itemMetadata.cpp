/**
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUserorderdetails_itemMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUserorderdetails_itemMetadata::OAIUserorderdetails_itemMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUserorderdetails_itemMetadata::OAIUserorderdetails_itemMetadata() {
    this->initializeModel();
}

OAIUserorderdetails_itemMetadata::~OAIUserorderdetails_itemMetadata() {}

void OAIUserorderdetails_itemMetadata::initializeModel() {

    m_items_isSet = false;
    m_items_isValid = false;
}

void OAIUserorderdetails_itemMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUserorderdetails_itemMetadata::fromJsonObject(QJsonObject json) {

    m_items_isValid = ::OpenAPI::fromJsonValue(m_items, json[QString("Items")]);
    m_items_isSet = !json[QString("Items")].isNull() && m_items_isValid;
}

QString OAIUserorderdetails_itemMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUserorderdetails_itemMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_items.size() > 0) {
        obj.insert(QString("Items"), ::OpenAPI::toJsonValue(m_items));
    }
    return obj;
}

QList<OAIUserorderdetails_itemMetadata_Items_inner> OAIUserorderdetails_itemMetadata::getItems() const {
    return m_items;
}
void OAIUserorderdetails_itemMetadata::setItems(const QList<OAIUserorderdetails_itemMetadata_Items_inner> &items) {
    m_items = items;
    m_items_isSet = true;
}

bool OAIUserorderdetails_itemMetadata::is_items_Set() const{
    return m_items_isSet;
}

bool OAIUserorderdetails_itemMetadata::is_items_Valid() const{
    return m_items_isValid;
}

bool OAIUserorderdetails_itemMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUserorderdetails_itemMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_items_isValid && true;
}

} // namespace OpenAPI
