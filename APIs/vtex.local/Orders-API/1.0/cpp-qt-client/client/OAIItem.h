/**
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIItem.h
 *
 * 
 */

#ifndef OAIItem_H
#define OAIItem_H

#include <QJsonObject>

#include "OAIAdditionalInfo.h"
#include "OAIItemAttachment.h"
#include "OAIItem_attachmentOfferings_inner.h"
#include "OAIItem_priceDefinitions.h"
#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAdditionalInfo;
class OAIItem_attachmentOfferings_inner;
class OAIItemAttachment;
class OAIItem_priceDefinitions;

class OAIItem : public OAIObject {
public:
    OAIItem();
    OAIItem(QString json);
    ~OAIItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAdditionalInfo getAdditionalInfo() const;
    void setAdditionalInfo(const OAIAdditionalInfo &additional_info);
    bool is_additional_info_Set() const;
    bool is_additional_info_Valid() const;

    QList<QJsonValue> getAssemblies() const;
    void setAssemblies(const QList<QJsonValue> &assemblies);
    bool is_assemblies_Set() const;
    bool is_assemblies_Valid() const;

    QList<OAIItem_attachmentOfferings_inner> getAttachmentOfferings() const;
    void setAttachmentOfferings(const QList<OAIItem_attachmentOfferings_inner> &attachment_offerings);
    bool is_attachment_offerings_Set() const;
    bool is_attachment_offerings_Valid() const;

    QList<QString> getAttachments() const;
    void setAttachments(const QList<QString> &attachments);
    bool is_attachments_Set() const;
    bool is_attachments_Valid() const;

    QList<QString> getBundleItems() const;
    void setBundleItems(const QList<QString> &bundle_items);
    bool is_bundle_items_Set() const;
    bool is_bundle_items_Valid() const;

    QString getCallCenterOperator() const;
    void setCallCenterOperator(const QString &call_center_operator);
    bool is_call_center_operator_Set() const;
    bool is_call_center_operator_Valid() const;

    qint32 getCommission() const;
    void setCommission(const qint32 &commission);
    bool is_commission_Set() const;
    bool is_commission_Valid() const;

    QList<QString> getComponents() const;
    void setComponents(const QList<QString> &components);
    bool is_components_Set() const;
    bool is_components_Valid() const;

    qint32 getCostPrice() const;
    void setCostPrice(const qint32 &cost_price);
    bool is_cost_price_Set() const;
    bool is_cost_price_Valid() const;

    QString getDetailUrl() const;
    void setDetailUrl(const QString &detail_url);
    bool is_detail_url_Set() const;
    bool is_detail_url_Valid() const;

    QString getEan() const;
    void setEan(const QString &ean);
    bool is_ean_Set() const;
    bool is_ean_Valid() const;

    qint32 getFreightCommission() const;
    void setFreightCommission(const qint32 &freight_commission);
    bool is_freight_commission_Set() const;
    bool is_freight_commission_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getImageUrl() const;
    void setImageUrl(const QString &image_url);
    bool is_image_url_Set() const;
    bool is_image_url_Valid() const;

    bool isIsGift() const;
    void setIsGift(const bool &is_gift);
    bool is_is_gift_Set() const;
    bool is_is_gift_Valid() const;

    OAIItemAttachment getItemAttachment() const;
    void setItemAttachment(const OAIItemAttachment &item_attachment);
    bool is_item_attachment_Set() const;
    bool is_item_attachment_Valid() const;

    qint32 getListPrice() const;
    void setListPrice(const qint32 &list_price);
    bool is_list_price_Set() const;
    bool is_list_price_Valid() const;

    QString getLockId() const;
    void setLockId(const QString &lock_id);
    bool is_lock_id_Set() const;
    bool is_lock_id_Valid() const;

    QString getManualPrice() const;
    void setManualPrice(const QString &manual_price);
    bool is_manual_price_Set() const;
    bool is_manual_price_Valid() const;

    QString getMeasurementUnit() const;
    void setMeasurementUnit(const QString &measurement_unit);
    bool is_measurement_unit_Set() const;
    bool is_measurement_unit_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<QString> getOfferings() const;
    void setOfferings(const QList<QString> &offerings);
    bool is_offerings_Set() const;
    bool is_offerings_Valid() const;

    QList<QString> getParams() const;
    void setParams(const QList<QString> &params);
    bool is_params_Set() const;
    bool is_params_Valid() const;

    QString getParentAssemblyBinding() const;
    void setParentAssemblyBinding(const QString &parent_assembly_binding);
    bool is_parent_assembly_binding_Set() const;
    bool is_parent_assembly_binding_Valid() const;

    QString getParentItemIndex() const;
    void setParentItemIndex(const QString &parent_item_index);
    bool is_parent_item_index_Set() const;
    bool is_parent_item_index_Valid() const;

    QString getPreSaleDate() const;
    void setPreSaleDate(const QString &pre_sale_date);
    bool is_pre_sale_date_Set() const;
    bool is_pre_sale_date_Valid() const;

    qint32 getPrice() const;
    void setPrice(const qint32 &price);
    bool is_price_Set() const;
    bool is_price_Valid() const;

    OAIItem_priceDefinitions getPriceDefinitions() const;
    void setPriceDefinitions(const OAIItem_priceDefinitions &price_definitions);
    bool is_price_definitions_Set() const;
    bool is_price_definitions_Valid() const;

    QList<QString> getPriceTags() const;
    void setPriceTags(const QList<QString> &price_tags);
    bool is_price_tags_Set() const;
    bool is_price_tags_Valid() const;

    QString getPriceValidUntil() const;
    void setPriceValidUntil(const QString &price_valid_until);
    bool is_price_valid_until_Set() const;
    bool is_price_valid_until_Valid() const;

    QString getProductId() const;
    void setProductId(const QString &product_id);
    bool is_product_id_Set() const;
    bool is_product_id_Valid() const;

    qint32 getQuantity() const;
    void setQuantity(const qint32 &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    QString getRefId() const;
    void setRefId(const QString &ref_id);
    bool is_ref_id_Set() const;
    bool is_ref_id_Valid() const;

    qint32 getRewardValue() const;
    void setRewardValue(const qint32 &reward_value);
    bool is_reward_value_Set() const;
    bool is_reward_value_Valid() const;

    QString getSeller() const;
    void setSeller(const QString &seller);
    bool is_seller_Set() const;
    bool is_seller_Valid() const;

    QString getSellerSku() const;
    void setSellerSku(const QString &seller_sku);
    bool is_seller_sku_Set() const;
    bool is_seller_sku_Valid() const;

    qint32 getSellingPrice() const;
    void setSellingPrice(const qint32 &selling_price);
    bool is_selling_price_Set() const;
    bool is_selling_price_Valid() const;

    Q_DECL_DEPRECATED QString getSerialNumbers() const;
    Q_DECL_DEPRECATED void setSerialNumbers(const QString &serial_numbers);
    Q_DECL_DEPRECATED bool is_serial_numbers_Set() const;
    Q_DECL_DEPRECATED bool is_serial_numbers_Valid() const;

    QString getShippingPrice() const;
    void setShippingPrice(const QString &shipping_price);
    bool is_shipping_price_Set() const;
    bool is_shipping_price_Valid() const;

    qint32 getTax() const;
    void setTax(const qint32 &tax);
    bool is_tax_Set() const;
    bool is_tax_Valid() const;

    QString getTaxCode() const;
    void setTaxCode(const QString &tax_code);
    bool is_tax_code_Set() const;
    bool is_tax_code_Valid() const;

    QString getUniqueId() const;
    void setUniqueId(const QString &unique_id);
    bool is_unique_id_Set() const;
    bool is_unique_id_Valid() const;

    qint32 getUnitMultiplier() const;
    void setUnitMultiplier(const qint32 &unit_multiplier);
    bool is_unit_multiplier_Set() const;
    bool is_unit_multiplier_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAdditionalInfo m_additional_info;
    bool m_additional_info_isSet;
    bool m_additional_info_isValid;

    QList<QJsonValue> m_assemblies;
    bool m_assemblies_isSet;
    bool m_assemblies_isValid;

    QList<OAIItem_attachmentOfferings_inner> m_attachment_offerings;
    bool m_attachment_offerings_isSet;
    bool m_attachment_offerings_isValid;

    QList<QString> m_attachments;
    bool m_attachments_isSet;
    bool m_attachments_isValid;

    QList<QString> m_bundle_items;
    bool m_bundle_items_isSet;
    bool m_bundle_items_isValid;

    QString m_call_center_operator;
    bool m_call_center_operator_isSet;
    bool m_call_center_operator_isValid;

    qint32 m_commission;
    bool m_commission_isSet;
    bool m_commission_isValid;

    QList<QString> m_components;
    bool m_components_isSet;
    bool m_components_isValid;

    qint32 m_cost_price;
    bool m_cost_price_isSet;
    bool m_cost_price_isValid;

    QString m_detail_url;
    bool m_detail_url_isSet;
    bool m_detail_url_isValid;

    QString m_ean;
    bool m_ean_isSet;
    bool m_ean_isValid;

    qint32 m_freight_commission;
    bool m_freight_commission_isSet;
    bool m_freight_commission_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_image_url;
    bool m_image_url_isSet;
    bool m_image_url_isValid;

    bool m_is_gift;
    bool m_is_gift_isSet;
    bool m_is_gift_isValid;

    OAIItemAttachment m_item_attachment;
    bool m_item_attachment_isSet;
    bool m_item_attachment_isValid;

    qint32 m_list_price;
    bool m_list_price_isSet;
    bool m_list_price_isValid;

    QString m_lock_id;
    bool m_lock_id_isSet;
    bool m_lock_id_isValid;

    QString m_manual_price;
    bool m_manual_price_isSet;
    bool m_manual_price_isValid;

    QString m_measurement_unit;
    bool m_measurement_unit_isSet;
    bool m_measurement_unit_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<QString> m_offerings;
    bool m_offerings_isSet;
    bool m_offerings_isValid;

    QList<QString> m_params;
    bool m_params_isSet;
    bool m_params_isValid;

    QString m_parent_assembly_binding;
    bool m_parent_assembly_binding_isSet;
    bool m_parent_assembly_binding_isValid;

    QString m_parent_item_index;
    bool m_parent_item_index_isSet;
    bool m_parent_item_index_isValid;

    QString m_pre_sale_date;
    bool m_pre_sale_date_isSet;
    bool m_pre_sale_date_isValid;

    qint32 m_price;
    bool m_price_isSet;
    bool m_price_isValid;

    OAIItem_priceDefinitions m_price_definitions;
    bool m_price_definitions_isSet;
    bool m_price_definitions_isValid;

    QList<QString> m_price_tags;
    bool m_price_tags_isSet;
    bool m_price_tags_isValid;

    QString m_price_valid_until;
    bool m_price_valid_until_isSet;
    bool m_price_valid_until_isValid;

    QString m_product_id;
    bool m_product_id_isSet;
    bool m_product_id_isValid;

    qint32 m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    QString m_ref_id;
    bool m_ref_id_isSet;
    bool m_ref_id_isValid;

    qint32 m_reward_value;
    bool m_reward_value_isSet;
    bool m_reward_value_isValid;

    QString m_seller;
    bool m_seller_isSet;
    bool m_seller_isValid;

    QString m_seller_sku;
    bool m_seller_sku_isSet;
    bool m_seller_sku_isValid;

    qint32 m_selling_price;
    bool m_selling_price_isSet;
    bool m_selling_price_isValid;

    QString m_serial_numbers;
    bool m_serial_numbers_isSet;
    bool m_serial_numbers_isValid;

    QString m_shipping_price;
    bool m_shipping_price_isSet;
    bool m_shipping_price_isValid;

    qint32 m_tax;
    bool m_tax_isSet;
    bool m_tax_isValid;

    QString m_tax_code;
    bool m_tax_code_isSet;
    bool m_tax_code_isValid;

    QString m_unique_id;
    bool m_unique_id_isSet;
    bool m_unique_id_isValid;

    qint32 m_unit_multiplier;
    bool m_unit_multiplier_isSet;
    bool m_unit_multiplier_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIItem)

#endif // OAIItem_H
