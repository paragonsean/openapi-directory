/**
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetOrder_200_response_totals_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetOrder_200_response_totals_inner::OAIGetOrder_200_response_totals_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetOrder_200_response_totals_inner::OAIGetOrder_200_response_totals_inner() {
    this->initializeModel();
}

OAIGetOrder_200_response_totals_inner::~OAIGetOrder_200_response_totals_inner() {}

void OAIGetOrder_200_response_totals_inner::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIGetOrder_200_response_totals_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetOrder_200_response_totals_inner::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIGetOrder_200_response_totals_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetOrder_200_response_totals_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAIGetOrder_200_response_totals_inner::getId() const {
    return m_id;
}
void OAIGetOrder_200_response_totals_inner::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGetOrder_200_response_totals_inner::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGetOrder_200_response_totals_inner::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIGetOrder_200_response_totals_inner::getName() const {
    return m_name;
}
void OAIGetOrder_200_response_totals_inner::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGetOrder_200_response_totals_inner::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGetOrder_200_response_totals_inner::is_name_Valid() const{
    return m_name_isValid;
}

qint32 OAIGetOrder_200_response_totals_inner::getValue() const {
    return m_value;
}
void OAIGetOrder_200_response_totals_inner::setValue(const qint32 &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIGetOrder_200_response_totals_inner::is_value_Set() const{
    return m_value_isSet;
}

bool OAIGetOrder_200_response_totals_inner::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIGetOrder_200_response_totals_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetOrder_200_response_totals_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
