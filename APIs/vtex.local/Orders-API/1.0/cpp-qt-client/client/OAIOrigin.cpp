/**
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrigin.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrigin::OAIOrigin(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrigin::OAIOrigin() {
    this->initializeModel();
}

OAIOrigin::~OAIOrigin() {}

void OAIOrigin::initializeModel() {

    m_fulfillment_isSet = false;
    m_fulfillment_isValid = false;

    m_marketplace_isSet = false;
    m_marketplace_isValid = false;
}

void OAIOrigin::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrigin::fromJsonObject(QJsonObject json) {

    m_fulfillment_isValid = ::OpenAPI::fromJsonValue(m_fulfillment, json[QString("Fulfillment")]);
    m_fulfillment_isSet = !json[QString("Fulfillment")].isNull() && m_fulfillment_isValid;

    m_marketplace_isValid = ::OpenAPI::fromJsonValue(m_marketplace, json[QString("Marketplace")]);
    m_marketplace_isSet = !json[QString("Marketplace")].isNull() && m_marketplace_isValid;
}

QString OAIOrigin::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrigin::asJsonObject() const {
    QJsonObject obj;
    if (m_fulfillment.isSet()) {
        obj.insert(QString("Fulfillment"), ::OpenAPI::toJsonValue(m_fulfillment));
    }
    if (m_marketplace.isSet()) {
        obj.insert(QString("Marketplace"), ::OpenAPI::toJsonValue(m_marketplace));
    }
    return obj;
}

OAIFulfillment OAIOrigin::getFulfillment() const {
    return m_fulfillment;
}
void OAIOrigin::setFulfillment(const OAIFulfillment &fulfillment) {
    m_fulfillment = fulfillment;
    m_fulfillment_isSet = true;
}

bool OAIOrigin::is_fulfillment_Set() const{
    return m_fulfillment_isSet;
}

bool OAIOrigin::is_fulfillment_Valid() const{
    return m_fulfillment_isValid;
}

OAIMarketplace1 OAIOrigin::getMarketplace() const {
    return m_marketplace;
}
void OAIOrigin::setMarketplace(const OAIMarketplace1 &marketplace) {
    m_marketplace = marketplace;
    m_marketplace_isSet = true;
}

bool OAIOrigin::is_marketplace_Set() const{
    return m_marketplace_isSet;
}

bool OAIOrigin::is_marketplace_Valid() const{
    return m_marketplace_isValid;
}

bool OAIOrigin::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_fulfillment.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_marketplace.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrigin::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_fulfillment_isValid && m_marketplace_isValid && true;
}

} // namespace OpenAPI
