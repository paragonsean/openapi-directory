/**
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStats2.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStats2::OAIStats2(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStats2::OAIStats2() {
    this->initializeModel();
}

OAIStats2::~OAIStats2() {}

void OAIStats2::initializeModel() {

    m_stats_isSet = false;
    m_stats_isValid = false;
}

void OAIStats2::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStats2::fromJsonObject(QJsonObject json) {

    m_stats_isValid = ::OpenAPI::fromJsonValue(m_stats, json[QString("stats")]);
    m_stats_isSet = !json[QString("stats")].isNull() && m_stats_isValid;
}

QString OAIStats2::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStats2::asJsonObject() const {
    QJsonObject obj;
    if (m_stats.isSet()) {
        obj.insert(QString("stats"), ::OpenAPI::toJsonValue(m_stats));
    }
    return obj;
}

OAIStats3 OAIStats2::getStats() const {
    return m_stats;
}
void OAIStats2::setStats(const OAIStats3 &stats) {
    m_stats = stats;
    m_stats_isSet = true;
}

bool OAIStats2::is_stats_Set() const{
    return m_stats_isSet;
}

bool OAIStats2::is_stats_Valid() const{
    return m_stats_isValid;
}

bool OAIStats2::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_stats.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStats2::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_stats_isValid && true;
}

} // namespace OpenAPI
