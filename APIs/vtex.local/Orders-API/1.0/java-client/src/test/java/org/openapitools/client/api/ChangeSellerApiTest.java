/*
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.UpdateWindowToChangeSellerRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ChangeSellerApi
 */
@Disabled
public class ChangeSellerApiTest {

    private final ChangeSellerApi api = new ChangeSellerApi();

    /**
     * Get window to change seller
     *
     * Retrieves a marketplace’s window to change seller, that is, the period when it is possible to choose another seller to fulfill a given order after the original seller has canceled it.    The default period for this window is of 2 days, but it can be configured by the request Update window to change seller.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWindowToChangeSellerTest() throws ApiException {
        String contentType = null;
        String accept = null;
        Integer response = api.getWindowToChangeSeller(contentType, accept);
        // TODO: test validations
    }

    /**
     * Update window to change seller
     *
     * Updates a marketplace’s window to change seller, that is, the period when it is possible to choose another seller to fulfill a given order after the original seller has canceled it.    It is possible to check the current window using the request Get window to change seller.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateWindowToChangeSellerTest() throws ApiException {
        String contentType = null;
        String accept = null;
        UpdateWindowToChangeSellerRequest updateWindowToChangeSellerRequest = null;
        api.updateWindowToChangeSeller(contentType, accept, updateWindowToChangeSellerRequest);
        // TODO: test validations
    }

}
