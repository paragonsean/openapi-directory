/*
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.HookConfiguration;
import org.openapitools.client.model.HookConfigurationRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OrderHookApi
 */
@Disabled
public class OrderHookApiTest {

    private final OrderHookApi api = new OrderHookApi();

    /**
     * Delete hook configuration
     *
     * Deletes a given hook configuration.    Learn more with the [orders hook guide](https://developers.vtex.com/vtex-rest-api/docs/orders-feed#hook).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteHookConfigurationTest() throws ApiException {
        String accept = null;
        String contentType = null;
        api.deleteHookConfiguration(accept, contentType);
        // TODO: test validations
    }

    /**
     * Get hook configuration
     *
     * Retrieves a given hook&#39;s configuration details. Learn more with the [orders hook guide](https://developers.vtex.com/vtex-rest-api/docs/orders-feed#hook).     &gt; ðŸ“˜ Onboarding guide   &gt;  &gt; Check the new [Orders onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer&#39;s journey.    
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getHookConfigurationTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String clientEmail = null;
        String page = null;
        String perPage = null;
        api.getHookConfiguration(contentType, accept, clientEmail, page, perPage);
        // TODO: test validations
    }

    /**
     * Create or update hook configuration
     *
     * Configures filtering rules applied to orders hook. Learn more with the [orders hook guide](https://developers.vtex.com/vtex-rest-api/docs/orders-feed#hook).    There are two types of filtering that can be used:      - &#x60;FromWorkflow&#x60;: filters orders by status.     - &#x60;FromOrders&#x60;: uses JSONata expressions to filter orders according to any property in the orders JSON document.     This enables stores to filter delivered orders and orders in which products have been added or removed, for example.    To learn more, access the [JSONata documentation](https://docs.jsonata.org/overview.html) and test filtering JSONata expressions with our [expressions API](https://developers.vtex.com/docs/api-reference/orders-api#post-/api/orders/expressions/jsonata).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void hookConfigurationTest() throws ApiException {
        String contentType = null;
        String accept = null;
        HookConfigurationRequest hookConfigurationRequest = null;
        HookConfiguration response = api.hookConfiguration(contentType, accept, hookConfigurationRequest);
        // TODO: test validations
    }

}
