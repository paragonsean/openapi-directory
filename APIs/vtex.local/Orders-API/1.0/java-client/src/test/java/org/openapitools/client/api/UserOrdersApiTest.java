/*
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Userorderdetails;
import org.openapitools.client.model.Userorderslist;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UserOrdersApi
 */
@Disabled
public class UserOrdersApiTest {

    private final UserOrdersApi api = new UserOrdersApi();

    /**
     * Retrieve user order details
     *
     * Lists all details from a user&#39;s order, through client&#39;s perspective.     &gt; Note that these requests are meant to be made by **Call center operator** profiles. Otherwise, they will return only orders from the same email making the request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void userorderdetailsTest() throws ApiException {
        String clientEmail = null;
        String contentType = null;
        String accept = null;
        String orderId = null;
        Userorderdetails response = api.userorderdetails(clientEmail, contentType, accept, orderId);
        // TODO: test validations
    }

    /**
     * Retrieve user&#39;s orders
     *
     * Lists all orders from a given client, filtering by their email.     &gt; Note that these requests are meant to be made by **Call center operator** profiles. Otherwise, they will return only orders from the same email making the request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void userorderslistTest() throws ApiException {
        String clientEmail = null;
        String page = null;
        String perPage = null;
        String contentType = null;
        String accept = null;
        Userorderslist response = api.userorderslist(clientEmail, page, perPage, contentType, accept);
        // TODO: test validations
    }

}
