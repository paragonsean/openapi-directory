/*
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.client.model.GetFeedConfiguration200ResponseFilter;
import org.openapitools.client.model.GetFeedConfiguration200ResponseQueue;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetFeedConfiguration200Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:55:33.631540-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetFeedConfiguration200Response {
  public static final String SERIALIZED_NAME_APPROXIMATE_AGE_OF_OLDEST_MESSAGE_IN_SECONDS = "approximateAgeOfOldestMessageInSeconds";
  @SerializedName(SERIALIZED_NAME_APPROXIMATE_AGE_OF_OLDEST_MESSAGE_IN_SECONDS)
  private BigDecimal approximateAgeOfOldestMessageInSeconds;

  public static final String SERIALIZED_NAME_FILTER = "filter";
  @SerializedName(SERIALIZED_NAME_FILTER)
  private GetFeedConfiguration200ResponseFilter filter;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Integer quantity;

  public static final String SERIALIZED_NAME_QUEUE = "queue";
  @SerializedName(SERIALIZED_NAME_QUEUE)
  private GetFeedConfiguration200ResponseQueue queue;

  public GetFeedConfiguration200Response() {
  }

  public GetFeedConfiguration200Response approximateAgeOfOldestMessageInSeconds(BigDecimal approximateAgeOfOldestMessageInSeconds) {
    this.approximateAgeOfOldestMessageInSeconds = approximateAgeOfOldestMessageInSeconds;
    return this;
  }

  /**
   * Aproximate age of the oldest message in the feed, measured in seconds.
   * @return approximateAgeOfOldestMessageInSeconds
   */
  @javax.annotation.Nullable
  public BigDecimal getApproximateAgeOfOldestMessageInSeconds() {
    return approximateAgeOfOldestMessageInSeconds;
  }

  public void setApproximateAgeOfOldestMessageInSeconds(BigDecimal approximateAgeOfOldestMessageInSeconds) {
    this.approximateAgeOfOldestMessageInSeconds = approximateAgeOfOldestMessageInSeconds;
  }


  public GetFeedConfiguration200Response filter(GetFeedConfiguration200ResponseFilter filter) {
    this.filter = filter;
    return this;
  }

  /**
   * Get filter
   * @return filter
   */
  @javax.annotation.Nullable
  public GetFeedConfiguration200ResponseFilter getFilter() {
    return filter;
  }

  public void setFilter(GetFeedConfiguration200ResponseFilter filter) {
    this.filter = filter;
  }


  public GetFeedConfiguration200Response quantity(Integer quantity) {
    this.quantity = quantity;
    return this;
  }

  /**
   * Current number of messages in the feed, including messages that may not be visible due to time out after retrieval.
   * @return quantity
   */
  @javax.annotation.Nullable
  public Integer getQuantity() {
    return quantity;
  }

  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }


  public GetFeedConfiguration200Response queue(GetFeedConfiguration200ResponseQueue queue) {
    this.queue = queue;
    return this;
  }

  /**
   * Get queue
   * @return queue
   */
  @javax.annotation.Nullable
  public GetFeedConfiguration200ResponseQueue getQueue() {
    return queue;
  }

  public void setQueue(GetFeedConfiguration200ResponseQueue queue) {
    this.queue = queue;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetFeedConfiguration200Response getFeedConfiguration200Response = (GetFeedConfiguration200Response) o;
    return Objects.equals(this.approximateAgeOfOldestMessageInSeconds, getFeedConfiguration200Response.approximateAgeOfOldestMessageInSeconds) &&
        Objects.equals(this.filter, getFeedConfiguration200Response.filter) &&
        Objects.equals(this.quantity, getFeedConfiguration200Response.quantity) &&
        Objects.equals(this.queue, getFeedConfiguration200Response.queue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(approximateAgeOfOldestMessageInSeconds, filter, quantity, queue);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetFeedConfiguration200Response {\n");
    sb.append("    approximateAgeOfOldestMessageInSeconds: ").append(toIndentedString(approximateAgeOfOldestMessageInSeconds)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    queue: ").append(toIndentedString(queue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("approximateAgeOfOldestMessageInSeconds");
    openapiFields.add("filter");
    openapiFields.add("quantity");
    openapiFields.add("queue");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetFeedConfiguration200Response
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetFeedConfiguration200Response.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetFeedConfiguration200Response is not found in the empty JSON string", GetFeedConfiguration200Response.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetFeedConfiguration200Response.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetFeedConfiguration200Response` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `filter`
      if (jsonObj.get("filter") != null && !jsonObj.get("filter").isJsonNull()) {
        GetFeedConfiguration200ResponseFilter.validateJsonElement(jsonObj.get("filter"));
      }
      // validate the optional field `queue`
      if (jsonObj.get("queue") != null && !jsonObj.get("queue").isJsonNull()) {
        GetFeedConfiguration200ResponseQueue.validateJsonElement(jsonObj.get("queue"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetFeedConfiguration200Response.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetFeedConfiguration200Response' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetFeedConfiguration200Response> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetFeedConfiguration200Response.class));

       return (TypeAdapter<T>) new TypeAdapter<GetFeedConfiguration200Response>() {
           @Override
           public void write(JsonWriter out, GetFeedConfiguration200Response value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetFeedConfiguration200Response read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetFeedConfiguration200Response given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetFeedConfiguration200Response
   * @throws IOException if the JSON string is invalid with respect to GetFeedConfiguration200Response
   */
  public static GetFeedConfiguration200Response fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetFeedConfiguration200Response.class);
  }

  /**
   * Convert an instance of GetFeedConfiguration200Response to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

