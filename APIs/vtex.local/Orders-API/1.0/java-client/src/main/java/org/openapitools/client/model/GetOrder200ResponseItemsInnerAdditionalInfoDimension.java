/*
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Dimension of the item.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:55:33.631540-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetOrder200ResponseItemsInnerAdditionalInfoDimension {
  public static final String SERIALIZED_NAME_CUBICWEIGHT = "cubicweight";
  @SerializedName(SERIALIZED_NAME_CUBICWEIGHT)
  private BigDecimal cubicweight;

  public static final String SERIALIZED_NAME_HEIGHT = "height";
  @SerializedName(SERIALIZED_NAME_HEIGHT)
  private BigDecimal height;

  public static final String SERIALIZED_NAME_LENGTH = "length";
  @SerializedName(SERIALIZED_NAME_LENGTH)
  private BigDecimal length;

  public static final String SERIALIZED_NAME_WEIGHT = "weight";
  @SerializedName(SERIALIZED_NAME_WEIGHT)
  private BigDecimal weight;

  public static final String SERIALIZED_NAME_WIDTH = "width";
  @SerializedName(SERIALIZED_NAME_WIDTH)
  private BigDecimal width;

  public GetOrder200ResponseItemsInnerAdditionalInfoDimension() {
  }

  public GetOrder200ResponseItemsInnerAdditionalInfoDimension cubicweight(BigDecimal cubicweight) {
    this.cubicweight = cubicweight;
    return this;
  }

  /**
   * The item&#39;s cubic weight.
   * @return cubicweight
   */
  @javax.annotation.Nullable
  public BigDecimal getCubicweight() {
    return cubicweight;
  }

  public void setCubicweight(BigDecimal cubicweight) {
    this.cubicweight = cubicweight;
  }


  public GetOrder200ResponseItemsInnerAdditionalInfoDimension height(BigDecimal height) {
    this.height = height;
    return this;
  }

  /**
   * The item&#39;s height.
   * @return height
   */
  @javax.annotation.Nullable
  public BigDecimal getHeight() {
    return height;
  }

  public void setHeight(BigDecimal height) {
    this.height = height;
  }


  public GetOrder200ResponseItemsInnerAdditionalInfoDimension length(BigDecimal length) {
    this.length = length;
    return this;
  }

  /**
   * The item&#39;s length.
   * @return length
   */
  @javax.annotation.Nullable
  public BigDecimal getLength() {
    return length;
  }

  public void setLength(BigDecimal length) {
    this.length = length;
  }


  public GetOrder200ResponseItemsInnerAdditionalInfoDimension weight(BigDecimal weight) {
    this.weight = weight;
    return this;
  }

  /**
   * The item&#39;s weight.
   * @return weight
   */
  @javax.annotation.Nullable
  public BigDecimal getWeight() {
    return weight;
  }

  public void setWeight(BigDecimal weight) {
    this.weight = weight;
  }


  public GetOrder200ResponseItemsInnerAdditionalInfoDimension width(BigDecimal width) {
    this.width = width;
    return this;
  }

  /**
   * The item&#39;s width.
   * @return width
   */
  @javax.annotation.Nullable
  public BigDecimal getWidth() {
    return width;
  }

  public void setWidth(BigDecimal width) {
    this.width = width;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetOrder200ResponseItemsInnerAdditionalInfoDimension getOrder200ResponseItemsInnerAdditionalInfoDimension = (GetOrder200ResponseItemsInnerAdditionalInfoDimension) o;
    return Objects.equals(this.cubicweight, getOrder200ResponseItemsInnerAdditionalInfoDimension.cubicweight) &&
        Objects.equals(this.height, getOrder200ResponseItemsInnerAdditionalInfoDimension.height) &&
        Objects.equals(this.length, getOrder200ResponseItemsInnerAdditionalInfoDimension.length) &&
        Objects.equals(this.weight, getOrder200ResponseItemsInnerAdditionalInfoDimension.weight) &&
        Objects.equals(this.width, getOrder200ResponseItemsInnerAdditionalInfoDimension.width);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cubicweight, height, length, weight, width);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetOrder200ResponseItemsInnerAdditionalInfoDimension {\n");
    sb.append("    cubicweight: ").append(toIndentedString(cubicweight)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    length: ").append(toIndentedString(length)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cubicweight");
    openapiFields.add("height");
    openapiFields.add("length");
    openapiFields.add("weight");
    openapiFields.add("width");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetOrder200ResponseItemsInnerAdditionalInfoDimension
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetOrder200ResponseItemsInnerAdditionalInfoDimension.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetOrder200ResponseItemsInnerAdditionalInfoDimension is not found in the empty JSON string", GetOrder200ResponseItemsInnerAdditionalInfoDimension.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetOrder200ResponseItemsInnerAdditionalInfoDimension.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetOrder200ResponseItemsInnerAdditionalInfoDimension` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetOrder200ResponseItemsInnerAdditionalInfoDimension.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetOrder200ResponseItemsInnerAdditionalInfoDimension' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetOrder200ResponseItemsInnerAdditionalInfoDimension> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetOrder200ResponseItemsInnerAdditionalInfoDimension.class));

       return (TypeAdapter<T>) new TypeAdapter<GetOrder200ResponseItemsInnerAdditionalInfoDimension>() {
           @Override
           public void write(JsonWriter out, GetOrder200ResponseItemsInnerAdditionalInfoDimension value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetOrder200ResponseItemsInnerAdditionalInfoDimension read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetOrder200ResponseItemsInnerAdditionalInfoDimension given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetOrder200ResponseItemsInnerAdditionalInfoDimension
   * @throws IOException if the JSON string is invalid with respect to GetOrder200ResponseItemsInnerAdditionalInfoDimension
   */
  public static GetOrder200ResponseItemsInnerAdditionalInfoDimension fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetOrder200ResponseItemsInnerAdditionalInfoDimension.class);
  }

  /**
   * Convert an instance of GetOrder200ResponseItemsInnerAdditionalInfoDimension to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

