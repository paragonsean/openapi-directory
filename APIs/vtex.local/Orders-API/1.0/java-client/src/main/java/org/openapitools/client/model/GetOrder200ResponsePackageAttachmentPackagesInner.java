/*
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GetOrder200ResponsePackageAttachmentPackagesInnerItemsInner;
import org.openapitools.client.model.GetOrder200ResponsePackageAttachmentPackagesInnerRestitutions;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetOrder200ResponsePackageAttachmentPackagesInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:55:33.631540-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetOrder200ResponsePackageAttachmentPackagesInner {
  public static final String SERIALIZED_NAME_CFOP = "cfop";
  @SerializedName(SERIALIZED_NAME_CFOP)
  private String cfop;

  public static final String SERIALIZED_NAME_COURIER = "courier";
  @SerializedName(SERIALIZED_NAME_COURIER)
  private String courier;

  public static final String SERIALIZED_NAME_COURIER_STATUS = "courierStatus";
  @SerializedName(SERIALIZED_NAME_COURIER_STATUS)
  private String courierStatus;

  public static final String SERIALIZED_NAME_EMBEDDED_INVOICE = "embeddedInvoice";
  @SerializedName(SERIALIZED_NAME_EMBEDDED_INVOICE)
  private String embeddedInvoice;

  public static final String SERIALIZED_NAME_INVOICE_KEY = "invoiceKey";
  @SerializedName(SERIALIZED_NAME_INVOICE_KEY)
  private String invoiceKey;

  public static final String SERIALIZED_NAME_INVOICE_NUMBER = "invoiceNumber";
  @SerializedName(SERIALIZED_NAME_INVOICE_NUMBER)
  private String invoiceNumber;

  public static final String SERIALIZED_NAME_INVOICE_URL = "invoiceUrl";
  @SerializedName(SERIALIZED_NAME_INVOICE_URL)
  private String invoiceUrl;

  public static final String SERIALIZED_NAME_INVOICE_VALUE = "invoiceValue";
  @SerializedName(SERIALIZED_NAME_INVOICE_VALUE)
  private Integer invoiceValue;

  public static final String SERIALIZED_NAME_ISSUANCE_DATE = "issuanceDate";
  @SerializedName(SERIALIZED_NAME_ISSUANCE_DATE)
  private String issuanceDate;

  public static final String SERIALIZED_NAME_ITEMS = "items";
  @SerializedName(SERIALIZED_NAME_ITEMS)
  private List<GetOrder200ResponsePackageAttachmentPackagesInnerItemsInner> items = new ArrayList<>();

  public static final String SERIALIZED_NAME_RESTITUTIONS = "restitutions";
  @SerializedName(SERIALIZED_NAME_RESTITUTIONS)
  private GetOrder200ResponsePackageAttachmentPackagesInnerRestitutions restitutions;

  public static final String SERIALIZED_NAME_TRACKING_NUMBER = "trackingNumber";
  @SerializedName(SERIALIZED_NAME_TRACKING_NUMBER)
  private String trackingNumber;

  public static final String SERIALIZED_NAME_TRACKING_URL = "trackingUrl";
  @SerializedName(SERIALIZED_NAME_TRACKING_URL)
  private String trackingUrl;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_VOLUMES = "volumes";
  @SerializedName(SERIALIZED_NAME_VOLUMES)
  private Integer volumes;

  public GetOrder200ResponsePackageAttachmentPackagesInner() {
  }

  public GetOrder200ResponsePackageAttachmentPackagesInner cfop(String cfop) {
    this.cfop = cfop;
    return this;
  }

  /**
   * Fiscal operation code.
   * @return cfop
   */
  @javax.annotation.Nullable
  public String getCfop() {
    return cfop;
  }

  public void setCfop(String cfop) {
    this.cfop = cfop;
  }


  public GetOrder200ResponsePackageAttachmentPackagesInner courier(String courier) {
    this.courier = courier;
    return this;
  }

  /**
   * The name of the carrier responsible for delivering the order.
   * @return courier
   */
  @javax.annotation.Nullable
  public String getCourier() {
    return courier;
  }

  public void setCourier(String courier) {
    this.courier = courier;
  }


  public GetOrder200ResponsePackageAttachmentPackagesInner courierStatus(String courierStatus) {
    this.courierStatus = courierStatus;
    return this;
  }

  /**
   * Courier status.
   * @return courierStatus
   */
  @javax.annotation.Nullable
  public String getCourierStatus() {
    return courierStatus;
  }

  public void setCourierStatus(String courierStatus) {
    this.courierStatus = courierStatus;
  }


  public GetOrder200ResponsePackageAttachmentPackagesInner embeddedInvoice(String embeddedInvoice) {
    this.embeddedInvoice = embeddedInvoice;
    return this;
  }

  /**
   * Embedded voice in XML.
   * @return embeddedInvoice
   */
  @javax.annotation.Nullable
  public String getEmbeddedInvoice() {
    return embeddedInvoice;
  }

  public void setEmbeddedInvoice(String embeddedInvoice) {
    this.embeddedInvoice = embeddedInvoice;
  }


  public GetOrder200ResponsePackageAttachmentPackagesInner invoiceKey(String invoiceKey) {
    this.invoiceKey = invoiceKey;
    return this;
  }

  /**
   * Invoice key.
   * @return invoiceKey
   */
  @javax.annotation.Nullable
  public String getInvoiceKey() {
    return invoiceKey;
  }

  public void setInvoiceKey(String invoiceKey) {
    this.invoiceKey = invoiceKey;
  }


  public GetOrder200ResponsePackageAttachmentPackagesInner invoiceNumber(String invoiceNumber) {
    this.invoiceNumber = invoiceNumber;
    return this;
  }

  /**
   * Number that identifies the invoice.
   * @return invoiceNumber
   */
  @javax.annotation.Nullable
  public String getInvoiceNumber() {
    return invoiceNumber;
  }

  public void setInvoiceNumber(String invoiceNumber) {
    this.invoiceNumber = invoiceNumber;
  }


  public GetOrder200ResponsePackageAttachmentPackagesInner invoiceUrl(String invoiceUrl) {
    this.invoiceUrl = invoiceUrl;
    return this;
  }

  /**
   * Invoice URL.
   * @return invoiceUrl
   */
  @javax.annotation.Nullable
  public String getInvoiceUrl() {
    return invoiceUrl;
  }

  public void setInvoiceUrl(String invoiceUrl) {
    this.invoiceUrl = invoiceUrl;
  }


  public GetOrder200ResponsePackageAttachmentPackagesInner invoiceValue(Integer invoiceValue) {
    this.invoiceValue = invoiceValue;
    return this;
  }

  /**
   * Invoice value in cents.
   * @return invoiceValue
   */
  @javax.annotation.Nullable
  public Integer getInvoiceValue() {
    return invoiceValue;
  }

  public void setInvoiceValue(Integer invoiceValue) {
    this.invoiceValue = invoiceValue;
  }


  public GetOrder200ResponsePackageAttachmentPackagesInner issuanceDate(String issuanceDate) {
    this.issuanceDate = issuanceDate;
    return this;
  }

  /**
   * Issuance date.
   * @return issuanceDate
   */
  @javax.annotation.Nullable
  public String getIssuanceDate() {
    return issuanceDate;
  }

  public void setIssuanceDate(String issuanceDate) {
    this.issuanceDate = issuanceDate;
  }


  public GetOrder200ResponsePackageAttachmentPackagesInner items(List<GetOrder200ResponsePackageAttachmentPackagesInnerItemsInner> items) {
    this.items = items;
    return this;
  }

  public GetOrder200ResponsePackageAttachmentPackagesInner addItemsItem(GetOrder200ResponsePackageAttachmentPackagesInnerItemsInner itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<>();
    }
    this.items.add(itemsItem);
    return this;
  }

  /**
   * Information on each item in the package.
   * @return items
   */
  @javax.annotation.Nullable
  public List<GetOrder200ResponsePackageAttachmentPackagesInnerItemsInner> getItems() {
    return items;
  }

  public void setItems(List<GetOrder200ResponsePackageAttachmentPackagesInnerItemsInner> items) {
    this.items = items;
  }


  public GetOrder200ResponsePackageAttachmentPackagesInner restitutions(GetOrder200ResponsePackageAttachmentPackagesInnerRestitutions restitutions) {
    this.restitutions = restitutions;
    return this;
  }

  /**
   * Get restitutions
   * @return restitutions
   */
  @javax.annotation.Nullable
  public GetOrder200ResponsePackageAttachmentPackagesInnerRestitutions getRestitutions() {
    return restitutions;
  }

  public void setRestitutions(GetOrder200ResponsePackageAttachmentPackagesInnerRestitutions restitutions) {
    this.restitutions = restitutions;
  }


  public GetOrder200ResponsePackageAttachmentPackagesInner trackingNumber(String trackingNumber) {
    this.trackingNumber = trackingNumber;
    return this;
  }

  /**
   * The number code that identifies the order tracking. *This field should only be used when sending the **tracking** information. When the request is used for sending the invoice, this field should be left empty (&#x60;\&quot;\&quot;&#x60;).*
   * @return trackingNumber
   */
  @javax.annotation.Nullable
  public String getTrackingNumber() {
    return trackingNumber;
  }

  public void setTrackingNumber(String trackingNumber) {
    this.trackingNumber = trackingNumber;
  }


  public GetOrder200ResponsePackageAttachmentPackagesInner trackingUrl(String trackingUrl) {
    this.trackingUrl = trackingUrl;
    return this;
  }

  /**
   * Tracking URL.
   * @return trackingUrl
   */
  @javax.annotation.Nullable
  public String getTrackingUrl() {
    return trackingUrl;
  }

  public void setTrackingUrl(String trackingUrl) {
    this.trackingUrl = trackingUrl;
  }


  public GetOrder200ResponsePackageAttachmentPackagesInner type(String type) {
    this.type = type;
    return this;
  }

  /**
   * Invoice type &#x60;Output&#x60; for sales and &#x60;Input&#x60; for returns.
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  public GetOrder200ResponsePackageAttachmentPackagesInner volumes(Integer volumes) {
    this.volumes = volumes;
    return this;
  }

  /**
   * Quantity of packages involved in the order.
   * @return volumes
   */
  @javax.annotation.Nullable
  public Integer getVolumes() {
    return volumes;
  }

  public void setVolumes(Integer volumes) {
    this.volumes = volumes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetOrder200ResponsePackageAttachmentPackagesInner getOrder200ResponsePackageAttachmentPackagesInner = (GetOrder200ResponsePackageAttachmentPackagesInner) o;
    return Objects.equals(this.cfop, getOrder200ResponsePackageAttachmentPackagesInner.cfop) &&
        Objects.equals(this.courier, getOrder200ResponsePackageAttachmentPackagesInner.courier) &&
        Objects.equals(this.courierStatus, getOrder200ResponsePackageAttachmentPackagesInner.courierStatus) &&
        Objects.equals(this.embeddedInvoice, getOrder200ResponsePackageAttachmentPackagesInner.embeddedInvoice) &&
        Objects.equals(this.invoiceKey, getOrder200ResponsePackageAttachmentPackagesInner.invoiceKey) &&
        Objects.equals(this.invoiceNumber, getOrder200ResponsePackageAttachmentPackagesInner.invoiceNumber) &&
        Objects.equals(this.invoiceUrl, getOrder200ResponsePackageAttachmentPackagesInner.invoiceUrl) &&
        Objects.equals(this.invoiceValue, getOrder200ResponsePackageAttachmentPackagesInner.invoiceValue) &&
        Objects.equals(this.issuanceDate, getOrder200ResponsePackageAttachmentPackagesInner.issuanceDate) &&
        Objects.equals(this.items, getOrder200ResponsePackageAttachmentPackagesInner.items) &&
        Objects.equals(this.restitutions, getOrder200ResponsePackageAttachmentPackagesInner.restitutions) &&
        Objects.equals(this.trackingNumber, getOrder200ResponsePackageAttachmentPackagesInner.trackingNumber) &&
        Objects.equals(this.trackingUrl, getOrder200ResponsePackageAttachmentPackagesInner.trackingUrl) &&
        Objects.equals(this.type, getOrder200ResponsePackageAttachmentPackagesInner.type) &&
        Objects.equals(this.volumes, getOrder200ResponsePackageAttachmentPackagesInner.volumes);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(cfop, courier, courierStatus, embeddedInvoice, invoiceKey, invoiceNumber, invoiceUrl, invoiceValue, issuanceDate, items, restitutions, trackingNumber, trackingUrl, type, volumes);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetOrder200ResponsePackageAttachmentPackagesInner {\n");
    sb.append("    cfop: ").append(toIndentedString(cfop)).append("\n");
    sb.append("    courier: ").append(toIndentedString(courier)).append("\n");
    sb.append("    courierStatus: ").append(toIndentedString(courierStatus)).append("\n");
    sb.append("    embeddedInvoice: ").append(toIndentedString(embeddedInvoice)).append("\n");
    sb.append("    invoiceKey: ").append(toIndentedString(invoiceKey)).append("\n");
    sb.append("    invoiceNumber: ").append(toIndentedString(invoiceNumber)).append("\n");
    sb.append("    invoiceUrl: ").append(toIndentedString(invoiceUrl)).append("\n");
    sb.append("    invoiceValue: ").append(toIndentedString(invoiceValue)).append("\n");
    sb.append("    issuanceDate: ").append(toIndentedString(issuanceDate)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    restitutions: ").append(toIndentedString(restitutions)).append("\n");
    sb.append("    trackingNumber: ").append(toIndentedString(trackingNumber)).append("\n");
    sb.append("    trackingUrl: ").append(toIndentedString(trackingUrl)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    volumes: ").append(toIndentedString(volumes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cfop");
    openapiFields.add("courier");
    openapiFields.add("courierStatus");
    openapiFields.add("embeddedInvoice");
    openapiFields.add("invoiceKey");
    openapiFields.add("invoiceNumber");
    openapiFields.add("invoiceUrl");
    openapiFields.add("invoiceValue");
    openapiFields.add("issuanceDate");
    openapiFields.add("items");
    openapiFields.add("restitutions");
    openapiFields.add("trackingNumber");
    openapiFields.add("trackingUrl");
    openapiFields.add("type");
    openapiFields.add("volumes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetOrder200ResponsePackageAttachmentPackagesInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetOrder200ResponsePackageAttachmentPackagesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetOrder200ResponsePackageAttachmentPackagesInner is not found in the empty JSON string", GetOrder200ResponsePackageAttachmentPackagesInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetOrder200ResponsePackageAttachmentPackagesInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetOrder200ResponsePackageAttachmentPackagesInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("cfop") != null && !jsonObj.get("cfop").isJsonNull()) && !jsonObj.get("cfop").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cfop` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cfop").toString()));
      }
      if ((jsonObj.get("courier") != null && !jsonObj.get("courier").isJsonNull()) && !jsonObj.get("courier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `courier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("courier").toString()));
      }
      if ((jsonObj.get("courierStatus") != null && !jsonObj.get("courierStatus").isJsonNull()) && !jsonObj.get("courierStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `courierStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("courierStatus").toString()));
      }
      if ((jsonObj.get("embeddedInvoice") != null && !jsonObj.get("embeddedInvoice").isJsonNull()) && !jsonObj.get("embeddedInvoice").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `embeddedInvoice` to be a primitive type in the JSON string but got `%s`", jsonObj.get("embeddedInvoice").toString()));
      }
      if ((jsonObj.get("invoiceKey") != null && !jsonObj.get("invoiceKey").isJsonNull()) && !jsonObj.get("invoiceKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `invoiceKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("invoiceKey").toString()));
      }
      if ((jsonObj.get("invoiceNumber") != null && !jsonObj.get("invoiceNumber").isJsonNull()) && !jsonObj.get("invoiceNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `invoiceNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("invoiceNumber").toString()));
      }
      if ((jsonObj.get("invoiceUrl") != null && !jsonObj.get("invoiceUrl").isJsonNull()) && !jsonObj.get("invoiceUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `invoiceUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("invoiceUrl").toString()));
      }
      if ((jsonObj.get("issuanceDate") != null && !jsonObj.get("issuanceDate").isJsonNull()) && !jsonObj.get("issuanceDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `issuanceDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("issuanceDate").toString()));
      }
      if (jsonObj.get("items") != null && !jsonObj.get("items").isJsonNull()) {
        JsonArray jsonArrayitems = jsonObj.getAsJsonArray("items");
        if (jsonArrayitems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("items").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `items` to be an array in the JSON string but got `%s`", jsonObj.get("items").toString()));
          }

          // validate the optional field `items` (array)
          for (int i = 0; i < jsonArrayitems.size(); i++) {
            GetOrder200ResponsePackageAttachmentPackagesInnerItemsInner.validateJsonElement(jsonArrayitems.get(i));
          };
        }
      }
      // validate the optional field `restitutions`
      if (jsonObj.get("restitutions") != null && !jsonObj.get("restitutions").isJsonNull()) {
        GetOrder200ResponsePackageAttachmentPackagesInnerRestitutions.validateJsonElement(jsonObj.get("restitutions"));
      }
      if ((jsonObj.get("trackingNumber") != null && !jsonObj.get("trackingNumber").isJsonNull()) && !jsonObj.get("trackingNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trackingNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trackingNumber").toString()));
      }
      if ((jsonObj.get("trackingUrl") != null && !jsonObj.get("trackingUrl").isJsonNull()) && !jsonObj.get("trackingUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trackingUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trackingUrl").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetOrder200ResponsePackageAttachmentPackagesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetOrder200ResponsePackageAttachmentPackagesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetOrder200ResponsePackageAttachmentPackagesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetOrder200ResponsePackageAttachmentPackagesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<GetOrder200ResponsePackageAttachmentPackagesInner>() {
           @Override
           public void write(JsonWriter out, GetOrder200ResponsePackageAttachmentPackagesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetOrder200ResponsePackageAttachmentPackagesInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetOrder200ResponsePackageAttachmentPackagesInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetOrder200ResponsePackageAttachmentPackagesInner
   * @throws IOException if the JSON string is invalid with respect to GetOrder200ResponsePackageAttachmentPackagesInner
   */
  public static GetOrder200ResponsePackageAttachmentPackagesInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetOrder200ResponsePackageAttachmentPackagesInner.class);
  }

  /**
   * Convert an instance of GetOrder200ResponsePackageAttachmentPackagesInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

