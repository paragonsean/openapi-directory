/*
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdatepartialinvoiceSendTrackingNumberRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:55:33.631540-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdatepartialinvoiceSendTrackingNumberRequest {
  public static final String SERIALIZED_NAME_COURIER = "courier";
  @SerializedName(SERIALIZED_NAME_COURIER)
  private String courier;

  public static final String SERIALIZED_NAME_DISPATCHED_DATE = "dispatchedDate";
  @SerializedName(SERIALIZED_NAME_DISPATCHED_DATE)
  private String dispatchedDate;

  public static final String SERIALIZED_NAME_TRACKING_NUMBER = "trackingNumber";
  @SerializedName(SERIALIZED_NAME_TRACKING_NUMBER)
  private String trackingNumber;

  public static final String SERIALIZED_NAME_TRACKING_URL = "trackingUrl";
  @SerializedName(SERIALIZED_NAME_TRACKING_URL)
  private String trackingUrl;

  public UpdatepartialinvoiceSendTrackingNumberRequest() {
  }

  public UpdatepartialinvoiceSendTrackingNumberRequest courier(String courier) {
    this.courier = courier;
    return this;
  }

  /**
   * The name of the carrier responsible for delivering the order.
   * @return courier
   */
  @javax.annotation.Nullable
  public String getCourier() {
    return courier;
  }

  public void setCourier(String courier) {
    this.courier = courier;
  }


  public UpdatepartialinvoiceSendTrackingNumberRequest dispatchedDate(String dispatchedDate) {
    this.dispatchedDate = dispatchedDate;
    return this;
  }

  /**
   * Date when the package was dispatched. For example, 2023-01-08T13:16:13.4617653+00:00.
   * @return dispatchedDate
   */
  @javax.annotation.Nullable
  public String getDispatchedDate() {
    return dispatchedDate;
  }

  public void setDispatchedDate(String dispatchedDate) {
    this.dispatchedDate = dispatchedDate;
  }


  public UpdatepartialinvoiceSendTrackingNumberRequest trackingNumber(String trackingNumber) {
    this.trackingNumber = trackingNumber;
    return this;
  }

  /**
   * The number code that identifies the order tracking.
   * @return trackingNumber
   */
  @javax.annotation.Nonnull
  public String getTrackingNumber() {
    return trackingNumber;
  }

  public void setTrackingNumber(String trackingNumber) {
    this.trackingNumber = trackingNumber;
  }


  public UpdatepartialinvoiceSendTrackingNumberRequest trackingUrl(String trackingUrl) {
    this.trackingUrl = trackingUrl;
    return this;
  }

  /**
   * Package tracking URL.
   * @return trackingUrl
   */
  @javax.annotation.Nullable
  public String getTrackingUrl() {
    return trackingUrl;
  }

  public void setTrackingUrl(String trackingUrl) {
    this.trackingUrl = trackingUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdatepartialinvoiceSendTrackingNumberRequest updatepartialinvoiceSendTrackingNumberRequest = (UpdatepartialinvoiceSendTrackingNumberRequest) o;
    return Objects.equals(this.courier, updatepartialinvoiceSendTrackingNumberRequest.courier) &&
        Objects.equals(this.dispatchedDate, updatepartialinvoiceSendTrackingNumberRequest.dispatchedDate) &&
        Objects.equals(this.trackingNumber, updatepartialinvoiceSendTrackingNumberRequest.trackingNumber) &&
        Objects.equals(this.trackingUrl, updatepartialinvoiceSendTrackingNumberRequest.trackingUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(courier, dispatchedDate, trackingNumber, trackingUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdatepartialinvoiceSendTrackingNumberRequest {\n");
    sb.append("    courier: ").append(toIndentedString(courier)).append("\n");
    sb.append("    dispatchedDate: ").append(toIndentedString(dispatchedDate)).append("\n");
    sb.append("    trackingNumber: ").append(toIndentedString(trackingNumber)).append("\n");
    sb.append("    trackingUrl: ").append(toIndentedString(trackingUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("courier");
    openapiFields.add("dispatchedDate");
    openapiFields.add("trackingNumber");
    openapiFields.add("trackingUrl");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("courier");
    openapiRequiredFields.add("dispatchedDate");
    openapiRequiredFields.add("trackingNumber");
    openapiRequiredFields.add("trackingUrl");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdatepartialinvoiceSendTrackingNumberRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdatepartialinvoiceSendTrackingNumberRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdatepartialinvoiceSendTrackingNumberRequest is not found in the empty JSON string", UpdatepartialinvoiceSendTrackingNumberRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdatepartialinvoiceSendTrackingNumberRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdatepartialinvoiceSendTrackingNumberRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UpdatepartialinvoiceSendTrackingNumberRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("courier") != null && !jsonObj.get("courier").isJsonNull()) && !jsonObj.get("courier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `courier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("courier").toString()));
      }
      if ((jsonObj.get("dispatchedDate") != null && !jsonObj.get("dispatchedDate").isJsonNull()) && !jsonObj.get("dispatchedDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dispatchedDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dispatchedDate").toString()));
      }
      if (!jsonObj.get("trackingNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trackingNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trackingNumber").toString()));
      }
      if ((jsonObj.get("trackingUrl") != null && !jsonObj.get("trackingUrl").isJsonNull()) && !jsonObj.get("trackingUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trackingUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trackingUrl").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdatepartialinvoiceSendTrackingNumberRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdatepartialinvoiceSendTrackingNumberRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdatepartialinvoiceSendTrackingNumberRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdatepartialinvoiceSendTrackingNumberRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdatepartialinvoiceSendTrackingNumberRequest>() {
           @Override
           public void write(JsonWriter out, UpdatepartialinvoiceSendTrackingNumberRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdatepartialinvoiceSendTrackingNumberRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdatepartialinvoiceSendTrackingNumberRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdatepartialinvoiceSendTrackingNumberRequest
   * @throws IOException if the JSON string is invalid with respect to UpdatepartialinvoiceSendTrackingNumberRequest
   */
  public static UpdatepartialinvoiceSendTrackingNumberRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdatepartialinvoiceSendTrackingNumberRequest.class);
  }

  /**
   * Convert an instance of UpdatepartialinvoiceSendTrackingNumberRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

