/*
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ChangesAttachment;
import org.openapitools.client.model.ClientProfileData;
import org.openapitools.client.model.GetOrder200ResponseItemsInner;
import org.openapitools.client.model.GetOrder200ResponsePackageAttachment;
import org.openapitools.client.model.GetOrder200ResponseTotalsInner;
import org.openapitools.client.model.Marketplace;
import org.openapitools.client.model.PaymentData;
import org.openapitools.client.model.RatesAndBenefitsData;
import org.openapitools.client.model.Seller;
import org.openapitools.client.model.ShippingData;
import org.openapitools.client.model.StorePreferencesData;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetOrder200Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:55:33.631540-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetOrder200Response {
  public static final String SERIALIZED_NAME_AFFILIATE_ID = "affiliateId";
  @SerializedName(SERIALIZED_NAME_AFFILIATE_ID)
  private String affiliateId;

  public static final String SERIALIZED_NAME_ALLOW_CANCELLATION = "allowCancellation";
  @SerializedName(SERIALIZED_NAME_ALLOW_CANCELLATION)
  private Boolean allowCancellation;

  public static final String SERIALIZED_NAME_ALLOW_EDITION = "allowEdition";
  @SerializedName(SERIALIZED_NAME_ALLOW_EDITION)
  private Boolean allowEdition;

  public static final String SERIALIZED_NAME_APPROVED_BY = "approvedBy";
  @SerializedName(SERIALIZED_NAME_APPROVED_BY)
  private String approvedBy;

  public static final String SERIALIZED_NAME_AUTHORIZED_DATE = "authorizedDate";
  @SerializedName(SERIALIZED_NAME_AUTHORIZED_DATE)
  private String authorizedDate;

  public static final String SERIALIZED_NAME_CALL_CENTER_OPERATOR_DATA = "callCenterOperatorData";
  @SerializedName(SERIALIZED_NAME_CALL_CENTER_OPERATOR_DATA)
  private String callCenterOperatorData;

  public static final String SERIALIZED_NAME_CANCEL_REASON = "cancelReason";
  @SerializedName(SERIALIZED_NAME_CANCEL_REASON)
  private String cancelReason;

  public static final String SERIALIZED_NAME_CANCELLED_BY = "cancelledBy";
  @SerializedName(SERIALIZED_NAME_CANCELLED_BY)
  private String cancelledBy;

  public static final String SERIALIZED_NAME_CHANGES_ATTACHMENT = "changesAttachment";
  @SerializedName(SERIALIZED_NAME_CHANGES_ATTACHMENT)
  private ChangesAttachment changesAttachment;

  public static final String SERIALIZED_NAME_CLIENT_PROFILE_DATA = "clientProfileData";
  @SerializedName(SERIALIZED_NAME_CLIENT_PROFILE_DATA)
  private ClientProfileData clientProfileData;

  public static final String SERIALIZED_NAME_COMMERCIAL_CONDITION_DATA = "commercialConditionData";
  @SerializedName(SERIALIZED_NAME_COMMERCIAL_CONDITION_DATA)
  private String commercialConditionData;

  public static final String SERIALIZED_NAME_CREATION_DATE = "creationDate";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private String creationDate;

  public static final String SERIALIZED_NAME_CUSTOM_DATA = "customData";
  @SerializedName(SERIALIZED_NAME_CUSTOM_DATA)
  private String customData;

  public static final String SERIALIZED_NAME_EMAIL_TRACKED = "emailTracked";
  @SerializedName(SERIALIZED_NAME_EMAIL_TRACKED)
  private String emailTracked;

  public static final String SERIALIZED_NAME_FOLLOW_UP_EMAIL = "followUpEmail";
  @SerializedName(SERIALIZED_NAME_FOLLOW_UP_EMAIL)
  private String followUpEmail;

  public static final String SERIALIZED_NAME_GIFT_REGISTRY_DATA = "giftRegistryData";
  @SerializedName(SERIALIZED_NAME_GIFT_REGISTRY_DATA)
  private String giftRegistryData;

  public static final String SERIALIZED_NAME_HOSTNAME = "hostname";
  @SerializedName(SERIALIZED_NAME_HOSTNAME)
  private String hostname;

  public static final String SERIALIZED_NAME_INVOICE_DATA = "invoiceData";
  @SerializedName(SERIALIZED_NAME_INVOICE_DATA)
  private Object invoiceData;

  public static final String SERIALIZED_NAME_INVOICED_DATE = "invoicedDate";
  @SerializedName(SERIALIZED_NAME_INVOICED_DATE)
  private String invoicedDate;

  public static final String SERIALIZED_NAME_IS_CHECKED_IN = "isCheckedIn";
  @SerializedName(SERIALIZED_NAME_IS_CHECKED_IN)
  private Boolean isCheckedIn;

  public static final String SERIALIZED_NAME_IS_COMPLETED = "isCompleted";
  @SerializedName(SERIALIZED_NAME_IS_COMPLETED)
  private Boolean isCompleted;

  public static final String SERIALIZED_NAME_ITEMS = "items";
  @SerializedName(SERIALIZED_NAME_ITEMS)
  private List<GetOrder200ResponseItemsInner> items = new ArrayList<>();

  public static final String SERIALIZED_NAME_LAST_CHANGE = "lastChange";
  @SerializedName(SERIALIZED_NAME_LAST_CHANGE)
  private String lastChange;

  public static final String SERIALIZED_NAME_LAST_MESSAGE = "lastMessage";
  @SerializedName(SERIALIZED_NAME_LAST_MESSAGE)
  private String lastMessage;

  public static final String SERIALIZED_NAME_MARKETING_DATA = "marketingData";
  @SerializedName(SERIALIZED_NAME_MARKETING_DATA)
  private String marketingData;

  public static final String SERIALIZED_NAME_MARKETPLACE = "marketplace";
  @SerializedName(SERIALIZED_NAME_MARKETPLACE)
  private Marketplace marketplace;

  public static final String SERIALIZED_NAME_MARKETPLACE_ITEMS = "marketplaceItems";
  @SerializedName(SERIALIZED_NAME_MARKETPLACE_ITEMS)
  private List<String> marketplaceItems = new ArrayList<>();

  public static final String SERIALIZED_NAME_MARKETPLACE_ORDER_ID = "marketplaceOrderId";
  @SerializedName(SERIALIZED_NAME_MARKETPLACE_ORDER_ID)
  private String marketplaceOrderId;

  public static final String SERIALIZED_NAME_MARKETPLACE_SERVICES_ENDPOINT = "marketplaceServicesEndpoint";
  @SerializedName(SERIALIZED_NAME_MARKETPLACE_SERVICES_ENDPOINT)
  private String marketplaceServicesEndpoint;

  public static final String SERIALIZED_NAME_MERCHANT_NAME = "merchantName";
  @SerializedName(SERIALIZED_NAME_MERCHANT_NAME)
  private String merchantName;

  public static final String SERIALIZED_NAME_OPEN_TEXT_FIELD = "openTextField";
  @SerializedName(SERIALIZED_NAME_OPEN_TEXT_FIELD)
  private String openTextField;

  public static final String SERIALIZED_NAME_ORDER_FORM_ID = "orderFormId";
  @SerializedName(SERIALIZED_NAME_ORDER_FORM_ID)
  private String orderFormId;

  public static final String SERIALIZED_NAME_ORDER_GROUP = "orderGroup";
  @SerializedName(SERIALIZED_NAME_ORDER_GROUP)
  private String orderGroup;

  public static final String SERIALIZED_NAME_ORDER_ID = "orderId";
  @SerializedName(SERIALIZED_NAME_ORDER_ID)
  private String orderId;

  public static final String SERIALIZED_NAME_ORIGIN = "origin";
  @SerializedName(SERIALIZED_NAME_ORIGIN)
  private String origin;

  public static final String SERIALIZED_NAME_PACKAGE_ATTACHMENT = "packageAttachment";
  @SerializedName(SERIALIZED_NAME_PACKAGE_ATTACHMENT)
  private GetOrder200ResponsePackageAttachment packageAttachment;

  public static final String SERIALIZED_NAME_PAYMENT_DATA = "paymentData";
  @SerializedName(SERIALIZED_NAME_PAYMENT_DATA)
  private PaymentData paymentData;

  public static final String SERIALIZED_NAME_RATES_AND_BENEFITS_DATA = "ratesAndBenefitsData";
  @SerializedName(SERIALIZED_NAME_RATES_AND_BENEFITS_DATA)
  private RatesAndBenefitsData ratesAndBenefitsData;

  public static final String SERIALIZED_NAME_ROUNDING_ERROR = "roundingError";
  @SerializedName(SERIALIZED_NAME_ROUNDING_ERROR)
  private Integer roundingError;

  public static final String SERIALIZED_NAME_SALES_CHANNEL = "salesChannel";
  @SerializedName(SERIALIZED_NAME_SALES_CHANNEL)
  private String salesChannel;

  public static final String SERIALIZED_NAME_SELLER_ORDER_ID = "sellerOrderId";
  @SerializedName(SERIALIZED_NAME_SELLER_ORDER_ID)
  private String sellerOrderId;

  public static final String SERIALIZED_NAME_SELLERS = "sellers";
  @SerializedName(SERIALIZED_NAME_SELLERS)
  private List<Seller> sellers = new ArrayList<>();

  public static final String SERIALIZED_NAME_SEQUENCE = "sequence";
  @SerializedName(SERIALIZED_NAME_SEQUENCE)
  private String sequence;

  public static final String SERIALIZED_NAME_SHIPPING_DATA = "shippingData";
  @SerializedName(SERIALIZED_NAME_SHIPPING_DATA)
  private ShippingData shippingData;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_STATUS_DESCRIPTION = "statusDescription";
  @SerializedName(SERIALIZED_NAME_STATUS_DESCRIPTION)
  private String statusDescription;

  public static final String SERIALIZED_NAME_STORE_PREFERENCES_DATA = "storePreferencesData";
  @SerializedName(SERIALIZED_NAME_STORE_PREFERENCES_DATA)
  private StorePreferencesData storePreferencesData;

  public static final String SERIALIZED_NAME_TOTALS = "totals";
  @SerializedName(SERIALIZED_NAME_TOTALS)
  private List<GetOrder200ResponseTotalsInner> totals = new ArrayList<>();

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private Integer value;

  public GetOrder200Response() {
  }

  public GetOrder200Response affiliateId(String affiliateId) {
    this.affiliateId = affiliateId;
    return this;
  }

  /**
   * Three letter code identifying the marketplace where the order was placed.
   * @return affiliateId
   */
  @javax.annotation.Nullable
  public String getAffiliateId() {
    return affiliateId;
  }

  public void setAffiliateId(String affiliateId) {
    this.affiliateId = affiliateId;
  }


  public GetOrder200Response allowCancellation(Boolean allowCancellation) {
    this.allowCancellation = allowCancellation;
    return this;
  }

  /**
   * Indicates whether cancelation is allowed for the order.
   * @return allowCancellation
   */
  @javax.annotation.Nullable
  public Boolean getAllowCancellation() {
    return allowCancellation;
  }

  public void setAllowCancellation(Boolean allowCancellation) {
    this.allowCancellation = allowCancellation;
  }


  public GetOrder200Response allowEdition(Boolean allowEdition) {
    this.allowEdition = allowEdition;
    return this;
  }

  /**
   * Indicates whether edition is allowed for the order.
   * @return allowEdition
   */
  @javax.annotation.Nullable
  public Boolean getAllowEdition() {
    return allowEdition;
  }

  public void setAllowEdition(Boolean allowEdition) {
    this.allowEdition = allowEdition;
  }


  public GetOrder200Response approvedBy(String approvedBy) {
    this.approvedBy = approvedBy;
    return this;
  }

  /**
   * User that approved the order, in case of manual approval.
   * @return approvedBy
   */
  @javax.annotation.Nullable
  public String getApprovedBy() {
    return approvedBy;
  }

  public void setApprovedBy(String approvedBy) {
    this.approvedBy = approvedBy;
  }


  public GetOrder200Response authorizedDate(String authorizedDate) {
    this.authorizedDate = authorizedDate;
    return this;
  }

  /**
   * Date in which the order was authorized in UTC.
   * @return authorizedDate
   */
  @javax.annotation.Nullable
  public String getAuthorizedDate() {
    return authorizedDate;
  }

  public void setAuthorizedDate(String authorizedDate) {
    this.authorizedDate = authorizedDate;
  }


  public GetOrder200Response callCenterOperatorData(String callCenterOperatorData) {
    this.callCenterOperatorData = callCenterOperatorData;
    return this;
  }

  /**
   * Get callCenterOperatorData
   * @return callCenterOperatorData
   */
  @javax.annotation.Nullable
  public String getCallCenterOperatorData() {
    return callCenterOperatorData;
  }

  public void setCallCenterOperatorData(String callCenterOperatorData) {
    this.callCenterOperatorData = callCenterOperatorData;
  }


  public GetOrder200Response cancelReason(String cancelReason) {
    this.cancelReason = cancelReason;
    return this;
  }

  /**
   * Reason for cancelation.
   * @return cancelReason
   */
  @javax.annotation.Nullable
  public String getCancelReason() {
    return cancelReason;
  }

  public void setCancelReason(String cancelReason) {
    this.cancelReason = cancelReason;
  }


  public GetOrder200Response cancelledBy(String cancelledBy) {
    this.cancelledBy = cancelledBy;
    return this;
  }

  /**
   * User that canceled the order.
   * @return cancelledBy
   */
  @javax.annotation.Nullable
  public String getCancelledBy() {
    return cancelledBy;
  }

  public void setCancelledBy(String cancelledBy) {
    this.cancelledBy = cancelledBy;
  }


  public GetOrder200Response changesAttachment(ChangesAttachment changesAttachment) {
    this.changesAttachment = changesAttachment;
    return this;
  }

  /**
   * Get changesAttachment
   * @return changesAttachment
   */
  @javax.annotation.Nullable
  public ChangesAttachment getChangesAttachment() {
    return changesAttachment;
  }

  public void setChangesAttachment(ChangesAttachment changesAttachment) {
    this.changesAttachment = changesAttachment;
  }


  public GetOrder200Response clientProfileData(ClientProfileData clientProfileData) {
    this.clientProfileData = clientProfileData;
    return this;
  }

  /**
   * Get clientProfileData
   * @return clientProfileData
   */
  @javax.annotation.Nullable
  public ClientProfileData getClientProfileData() {
    return clientProfileData;
  }

  public void setClientProfileData(ClientProfileData clientProfileData) {
    this.clientProfileData = clientProfileData;
  }


  public GetOrder200Response commercialConditionData(String commercialConditionData) {
    this.commercialConditionData = commercialConditionData;
    return this;
  }

  /**
   * Get commercialConditionData
   * @return commercialConditionData
   */
  @javax.annotation.Nullable
  public String getCommercialConditionData() {
    return commercialConditionData;
  }

  public void setCommercialConditionData(String commercialConditionData) {
    this.commercialConditionData = commercialConditionData;
  }


  public GetOrder200Response creationDate(String creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Creation date.
   * @return creationDate
   */
  @javax.annotation.Nullable
  public String getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(String creationDate) {
    this.creationDate = creationDate;
  }


  public GetOrder200Response customData(String customData) {
    this.customData = customData;
    return this;
  }

  /**
   * Get customData
   * @return customData
   */
  @javax.annotation.Nullable
  public String getCustomData() {
    return customData;
  }

  public void setCustomData(String customData) {
    this.customData = customData;
  }


  public GetOrder200Response emailTracked(String emailTracked) {
    this.emailTracked = emailTracked;
    return this;
  }

  /**
   * Email tracked.
   * @return emailTracked
   */
  @javax.annotation.Nullable
  public String getEmailTracked() {
    return emailTracked;
  }

  public void setEmailTracked(String emailTracked) {
    this.emailTracked = emailTracked;
  }


  public GetOrder200Response followUpEmail(String followUpEmail) {
    this.followUpEmail = followUpEmail;
    return this;
  }

  /**
   * Get followUpEmail
   * @return followUpEmail
   */
  @javax.annotation.Nullable
  public String getFollowUpEmail() {
    return followUpEmail;
  }

  public void setFollowUpEmail(String followUpEmail) {
    this.followUpEmail = followUpEmail;
  }


  public GetOrder200Response giftRegistryData(String giftRegistryData) {
    this.giftRegistryData = giftRegistryData;
    return this;
  }

  /**
   * Get giftRegistryData
   * @return giftRegistryData
   */
  @javax.annotation.Nullable
  public String getGiftRegistryData() {
    return giftRegistryData;
  }

  public void setGiftRegistryData(String giftRegistryData) {
    this.giftRegistryData = giftRegistryData;
  }


  public GetOrder200Response hostname(String hostname) {
    this.hostname = hostname;
    return this;
  }

  /**
   * Get hostname
   * @return hostname
   */
  @javax.annotation.Nullable
  public String getHostname() {
    return hostname;
  }

  public void setHostname(String hostname) {
    this.hostname = hostname;
  }


  public GetOrder200Response invoiceData(Object invoiceData) {
    this.invoiceData = invoiceData;
    return this;
  }

  /**
   * Information pertinent to the order&#39;s invoice.
   * @return invoiceData
   */
  @javax.annotation.Nullable
  public Object getInvoiceData() {
    return invoiceData;
  }

  public void setInvoiceData(Object invoiceData) {
    this.invoiceData = invoiceData;
  }


  public GetOrder200Response invoicedDate(String invoicedDate) {
    this.invoicedDate = invoicedDate;
    return this;
  }

  /**
   * Date in which the order was invoiced in UTC.
   * @return invoicedDate
   */
  @javax.annotation.Nullable
  public String getInvoicedDate() {
    return invoicedDate;
  }

  public void setInvoicedDate(String invoicedDate) {
    this.invoicedDate = invoicedDate;
  }


  public GetOrder200Response isCheckedIn(Boolean isCheckedIn) {
    this.isCheckedIn = isCheckedIn;
    return this;
  }

  /**
   * Indicates whether client is checked in.
   * @return isCheckedIn
   */
  @javax.annotation.Nullable
  public Boolean getIsCheckedIn() {
    return isCheckedIn;
  }

  public void setIsCheckedIn(Boolean isCheckedIn) {
    this.isCheckedIn = isCheckedIn;
  }


  public GetOrder200Response isCompleted(Boolean isCompleted) {
    this.isCompleted = isCompleted;
    return this;
  }

  /**
   * Get isCompleted
   * @return isCompleted
   */
  @javax.annotation.Nullable
  public Boolean getIsCompleted() {
    return isCompleted;
  }

  public void setIsCompleted(Boolean isCompleted) {
    this.isCompleted = isCompleted;
  }


  public GetOrder200Response items(List<GetOrder200ResponseItemsInner> items) {
    this.items = items;
    return this;
  }

  public GetOrder200Response addItemsItem(GetOrder200ResponseItemsInner itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<>();
    }
    this.items.add(itemsItem);
    return this;
  }

  /**
   * Information on each item in the order.
   * @return items
   */
  @javax.annotation.Nullable
  public List<GetOrder200ResponseItemsInner> getItems() {
    return items;
  }

  public void setItems(List<GetOrder200ResponseItemsInner> items) {
    this.items = items;
  }


  public GetOrder200Response lastChange(String lastChange) {
    this.lastChange = lastChange;
    return this;
  }

  /**
   * Date of last change.
   * @return lastChange
   */
  @javax.annotation.Nullable
  public String getLastChange() {
    return lastChange;
  }

  public void setLastChange(String lastChange) {
    this.lastChange = lastChange;
  }


  public GetOrder200Response lastMessage(String lastMessage) {
    this.lastMessage = lastMessage;
    return this;
  }

  /**
   * Get lastMessage
   * @return lastMessage
   */
  @javax.annotation.Nullable
  public String getLastMessage() {
    return lastMessage;
  }

  public void setLastMessage(String lastMessage) {
    this.lastMessage = lastMessage;
  }


  public GetOrder200Response marketingData(String marketingData) {
    this.marketingData = marketingData;
    return this;
  }

  /**
   * Get marketingData
   * @return marketingData
   */
  @javax.annotation.Nullable
  public String getMarketingData() {
    return marketingData;
  }

  public void setMarketingData(String marketingData) {
    this.marketingData = marketingData;
  }


  public GetOrder200Response marketplace(Marketplace marketplace) {
    this.marketplace = marketplace;
    return this;
  }

  /**
   * Get marketplace
   * @return marketplace
   */
  @javax.annotation.Nullable
  public Marketplace getMarketplace() {
    return marketplace;
  }

  public void setMarketplace(Marketplace marketplace) {
    this.marketplace = marketplace;
  }


  public GetOrder200Response marketplaceItems(List<String> marketplaceItems) {
    this.marketplaceItems = marketplaceItems;
    return this;
  }

  public GetOrder200Response addMarketplaceItemsItem(String marketplaceItemsItem) {
    if (this.marketplaceItems == null) {
      this.marketplaceItems = new ArrayList<>();
    }
    this.marketplaceItems.add(marketplaceItemsItem);
    return this;
  }

  /**
   * Marketplace items.
   * @return marketplaceItems
   */
  @javax.annotation.Nullable
  public List<String> getMarketplaceItems() {
    return marketplaceItems;
  }

  public void setMarketplaceItems(List<String> marketplaceItems) {
    this.marketplaceItems = marketplaceItems;
  }


  public GetOrder200Response marketplaceOrderId(String marketplaceOrderId) {
    this.marketplaceOrderId = marketplaceOrderId;
    return this;
  }

  /**
   * ID of the order in the marketplace.
   * @return marketplaceOrderId
   */
  @javax.annotation.Nullable
  public String getMarketplaceOrderId() {
    return marketplaceOrderId;
  }

  public void setMarketplaceOrderId(String marketplaceOrderId) {
    this.marketplaceOrderId = marketplaceOrderId;
  }


  public GetOrder200Response marketplaceServicesEndpoint(String marketplaceServicesEndpoint) {
    this.marketplaceServicesEndpoint = marketplaceServicesEndpoint;
    return this;
  }

  /**
   * Marketplace endpoint for post purchase communication.
   * @return marketplaceServicesEndpoint
   */
  @javax.annotation.Nullable
  public String getMarketplaceServicesEndpoint() {
    return marketplaceServicesEndpoint;
  }

  public void setMarketplaceServicesEndpoint(String marketplaceServicesEndpoint) {
    this.marketplaceServicesEndpoint = marketplaceServicesEndpoint;
  }


  public GetOrder200Response merchantName(String merchantName) {
    this.merchantName = merchantName;
    return this;
  }

  /**
   * Merchant name.
   * @return merchantName
   */
  @javax.annotation.Nullable
  public String getMerchantName() {
    return merchantName;
  }

  public void setMerchantName(String merchantName) {
    this.merchantName = merchantName;
  }


  public GetOrder200Response openTextField(String openTextField) {
    this.openTextField = openTextField;
    return this;
  }

  /**
   * Get openTextField
   * @return openTextField
   */
  @javax.annotation.Nullable
  public String getOpenTextField() {
    return openTextField;
  }

  public void setOpenTextField(String openTextField) {
    this.openTextField = openTextField;
  }


  public GetOrder200Response orderFormId(String orderFormId) {
    this.orderFormId = orderFormId;
    return this;
  }

  /**
   * Get orderFormId
   * @return orderFormId
   */
  @javax.annotation.Nullable
  public String getOrderFormId() {
    return orderFormId;
  }

  public void setOrderFormId(String orderFormId) {
    this.orderFormId = orderFormId;
  }


  public GetOrder200Response orderGroup(String orderGroup) {
    this.orderGroup = orderGroup;
    return this;
  }

  /**
   * Order group.
   * @return orderGroup
   */
  @javax.annotation.Nullable
  public String getOrderGroup() {
    return orderGroup;
  }

  public void setOrderGroup(String orderGroup) {
    this.orderGroup = orderGroup;
  }


  public GetOrder200Response orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

  /**
   * Order ID.
   * @return orderId
   */
  @javax.annotation.Nullable
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }


  public GetOrder200Response origin(String origin) {
    this.origin = origin;
    return this;
  }

  /**
   * Origin.
   * @return origin
   */
  @javax.annotation.Nullable
  public String getOrigin() {
    return origin;
  }

  public void setOrigin(String origin) {
    this.origin = origin;
  }


  public GetOrder200Response packageAttachment(GetOrder200ResponsePackageAttachment packageAttachment) {
    this.packageAttachment = packageAttachment;
    return this;
  }

  /**
   * Get packageAttachment
   * @return packageAttachment
   */
  @javax.annotation.Nullable
  public GetOrder200ResponsePackageAttachment getPackageAttachment() {
    return packageAttachment;
  }

  public void setPackageAttachment(GetOrder200ResponsePackageAttachment packageAttachment) {
    this.packageAttachment = packageAttachment;
  }


  public GetOrder200Response paymentData(PaymentData paymentData) {
    this.paymentData = paymentData;
    return this;
  }

  /**
   * Get paymentData
   * @return paymentData
   */
  @javax.annotation.Nullable
  public PaymentData getPaymentData() {
    return paymentData;
  }

  public void setPaymentData(PaymentData paymentData) {
    this.paymentData = paymentData;
  }


  public GetOrder200Response ratesAndBenefitsData(RatesAndBenefitsData ratesAndBenefitsData) {
    this.ratesAndBenefitsData = ratesAndBenefitsData;
    return this;
  }

  /**
   * Get ratesAndBenefitsData
   * @return ratesAndBenefitsData
   */
  @javax.annotation.Nullable
  public RatesAndBenefitsData getRatesAndBenefitsData() {
    return ratesAndBenefitsData;
  }

  public void setRatesAndBenefitsData(RatesAndBenefitsData ratesAndBenefitsData) {
    this.ratesAndBenefitsData = ratesAndBenefitsData;
  }


  public GetOrder200Response roundingError(Integer roundingError) {
    this.roundingError = roundingError;
    return this;
  }

  /**
   * Get roundingError
   * @return roundingError
   */
  @javax.annotation.Nullable
  public Integer getRoundingError() {
    return roundingError;
  }

  public void setRoundingError(Integer roundingError) {
    this.roundingError = roundingError;
  }


  public GetOrder200Response salesChannel(String salesChannel) {
    this.salesChannel = salesChannel;
    return this;
  }

  /**
   * Sales channel.
   * @return salesChannel
   */
  @javax.annotation.Nullable
  public String getSalesChannel() {
    return salesChannel;
  }

  public void setSalesChannel(String salesChannel) {
    this.salesChannel = salesChannel;
  }


  public GetOrder200Response sellerOrderId(String sellerOrderId) {
    this.sellerOrderId = sellerOrderId;
    return this;
  }

  /**
   * Seller order ID.
   * @return sellerOrderId
   */
  @javax.annotation.Nullable
  public String getSellerOrderId() {
    return sellerOrderId;
  }

  public void setSellerOrderId(String sellerOrderId) {
    this.sellerOrderId = sellerOrderId;
  }


  public GetOrder200Response sellers(List<Seller> sellers) {
    this.sellers = sellers;
    return this;
  }

  public GetOrder200Response addSellersItem(Seller sellersItem) {
    if (this.sellers == null) {
      this.sellers = new ArrayList<>();
    }
    this.sellers.add(sellersItem);
    return this;
  }

  /**
   * 
   * @return sellers
   */
  @javax.annotation.Nullable
  public List<Seller> getSellers() {
    return sellers;
  }

  public void setSellers(List<Seller> sellers) {
    this.sellers = sellers;
  }


  public GetOrder200Response sequence(String sequence) {
    this.sequence = sequence;
    return this;
  }

  /**
   * Sequence number.
   * @return sequence
   */
  @javax.annotation.Nullable
  public String getSequence() {
    return sequence;
  }

  public void setSequence(String sequence) {
    this.sequence = sequence;
  }


  public GetOrder200Response shippingData(ShippingData shippingData) {
    this.shippingData = shippingData;
    return this;
  }

  /**
   * Get shippingData
   * @return shippingData
   */
  @javax.annotation.Nullable
  public ShippingData getShippingData() {
    return shippingData;
  }

  public void setShippingData(ShippingData shippingData) {
    this.shippingData = shippingData;
  }


  public GetOrder200Response status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Status in the order workflow.
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public GetOrder200Response statusDescription(String statusDescription) {
    this.statusDescription = statusDescription;
    return this;
  }

  /**
   * &#x60;Deprecated&#x60;. Status description which is displayed on the Admin panel.
   * @return statusDescription
   */
  @javax.annotation.Nullable
  public String getStatusDescription() {
    return statusDescription;
  }

  public void setStatusDescription(String statusDescription) {
    this.statusDescription = statusDescription;
  }


  public GetOrder200Response storePreferencesData(StorePreferencesData storePreferencesData) {
    this.storePreferencesData = storePreferencesData;
    return this;
  }

  /**
   * Get storePreferencesData
   * @return storePreferencesData
   */
  @javax.annotation.Nullable
  public StorePreferencesData getStorePreferencesData() {
    return storePreferencesData;
  }

  public void setStorePreferencesData(StorePreferencesData storePreferencesData) {
    this.storePreferencesData = storePreferencesData;
  }


  public GetOrder200Response totals(List<GetOrder200ResponseTotalsInner> totals) {
    this.totals = totals;
    return this;
  }

  public GetOrder200Response addTotalsItem(GetOrder200ResponseTotalsInner totalsItem) {
    if (this.totals == null) {
      this.totals = new ArrayList<>();
    }
    this.totals.add(totalsItem);
    return this;
  }

  /**
   * Information on each of the order&#39;s totals.
   * @return totals
   */
  @javax.annotation.Nullable
  public List<GetOrder200ResponseTotalsInner> getTotals() {
    return totals;
  }

  public void setTotals(List<GetOrder200ResponseTotalsInner> totals) {
    this.totals = totals;
  }


  public GetOrder200Response value(Integer value) {
    this.value = value;
    return this;
  }

  /**
   * Value in cents.
   * @return value
   */
  @javax.annotation.Nullable
  public Integer getValue() {
    return value;
  }

  public void setValue(Integer value) {
    this.value = value;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetOrder200Response getOrder200Response = (GetOrder200Response) o;
    return Objects.equals(this.affiliateId, getOrder200Response.affiliateId) &&
        Objects.equals(this.allowCancellation, getOrder200Response.allowCancellation) &&
        Objects.equals(this.allowEdition, getOrder200Response.allowEdition) &&
        Objects.equals(this.approvedBy, getOrder200Response.approvedBy) &&
        Objects.equals(this.authorizedDate, getOrder200Response.authorizedDate) &&
        Objects.equals(this.callCenterOperatorData, getOrder200Response.callCenterOperatorData) &&
        Objects.equals(this.cancelReason, getOrder200Response.cancelReason) &&
        Objects.equals(this.cancelledBy, getOrder200Response.cancelledBy) &&
        Objects.equals(this.changesAttachment, getOrder200Response.changesAttachment) &&
        Objects.equals(this.clientProfileData, getOrder200Response.clientProfileData) &&
        Objects.equals(this.commercialConditionData, getOrder200Response.commercialConditionData) &&
        Objects.equals(this.creationDate, getOrder200Response.creationDate) &&
        Objects.equals(this.customData, getOrder200Response.customData) &&
        Objects.equals(this.emailTracked, getOrder200Response.emailTracked) &&
        Objects.equals(this.followUpEmail, getOrder200Response.followUpEmail) &&
        Objects.equals(this.giftRegistryData, getOrder200Response.giftRegistryData) &&
        Objects.equals(this.hostname, getOrder200Response.hostname) &&
        Objects.equals(this.invoiceData, getOrder200Response.invoiceData) &&
        Objects.equals(this.invoicedDate, getOrder200Response.invoicedDate) &&
        Objects.equals(this.isCheckedIn, getOrder200Response.isCheckedIn) &&
        Objects.equals(this.isCompleted, getOrder200Response.isCompleted) &&
        Objects.equals(this.items, getOrder200Response.items) &&
        Objects.equals(this.lastChange, getOrder200Response.lastChange) &&
        Objects.equals(this.lastMessage, getOrder200Response.lastMessage) &&
        Objects.equals(this.marketingData, getOrder200Response.marketingData) &&
        Objects.equals(this.marketplace, getOrder200Response.marketplace) &&
        Objects.equals(this.marketplaceItems, getOrder200Response.marketplaceItems) &&
        Objects.equals(this.marketplaceOrderId, getOrder200Response.marketplaceOrderId) &&
        Objects.equals(this.marketplaceServicesEndpoint, getOrder200Response.marketplaceServicesEndpoint) &&
        Objects.equals(this.merchantName, getOrder200Response.merchantName) &&
        Objects.equals(this.openTextField, getOrder200Response.openTextField) &&
        Objects.equals(this.orderFormId, getOrder200Response.orderFormId) &&
        Objects.equals(this.orderGroup, getOrder200Response.orderGroup) &&
        Objects.equals(this.orderId, getOrder200Response.orderId) &&
        Objects.equals(this.origin, getOrder200Response.origin) &&
        Objects.equals(this.packageAttachment, getOrder200Response.packageAttachment) &&
        Objects.equals(this.paymentData, getOrder200Response.paymentData) &&
        Objects.equals(this.ratesAndBenefitsData, getOrder200Response.ratesAndBenefitsData) &&
        Objects.equals(this.roundingError, getOrder200Response.roundingError) &&
        Objects.equals(this.salesChannel, getOrder200Response.salesChannel) &&
        Objects.equals(this.sellerOrderId, getOrder200Response.sellerOrderId) &&
        Objects.equals(this.sellers, getOrder200Response.sellers) &&
        Objects.equals(this.sequence, getOrder200Response.sequence) &&
        Objects.equals(this.shippingData, getOrder200Response.shippingData) &&
        Objects.equals(this.status, getOrder200Response.status) &&
        Objects.equals(this.statusDescription, getOrder200Response.statusDescription) &&
        Objects.equals(this.storePreferencesData, getOrder200Response.storePreferencesData) &&
        Objects.equals(this.totals, getOrder200Response.totals) &&
        Objects.equals(this.value, getOrder200Response.value);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(affiliateId, allowCancellation, allowEdition, approvedBy, authorizedDate, callCenterOperatorData, cancelReason, cancelledBy, changesAttachment, clientProfileData, commercialConditionData, creationDate, customData, emailTracked, followUpEmail, giftRegistryData, hostname, invoiceData, invoicedDate, isCheckedIn, isCompleted, items, lastChange, lastMessage, marketingData, marketplace, marketplaceItems, marketplaceOrderId, marketplaceServicesEndpoint, merchantName, openTextField, orderFormId, orderGroup, orderId, origin, packageAttachment, paymentData, ratesAndBenefitsData, roundingError, salesChannel, sellerOrderId, sellers, sequence, shippingData, status, statusDescription, storePreferencesData, totals, value);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetOrder200Response {\n");
    sb.append("    affiliateId: ").append(toIndentedString(affiliateId)).append("\n");
    sb.append("    allowCancellation: ").append(toIndentedString(allowCancellation)).append("\n");
    sb.append("    allowEdition: ").append(toIndentedString(allowEdition)).append("\n");
    sb.append("    approvedBy: ").append(toIndentedString(approvedBy)).append("\n");
    sb.append("    authorizedDate: ").append(toIndentedString(authorizedDate)).append("\n");
    sb.append("    callCenterOperatorData: ").append(toIndentedString(callCenterOperatorData)).append("\n");
    sb.append("    cancelReason: ").append(toIndentedString(cancelReason)).append("\n");
    sb.append("    cancelledBy: ").append(toIndentedString(cancelledBy)).append("\n");
    sb.append("    changesAttachment: ").append(toIndentedString(changesAttachment)).append("\n");
    sb.append("    clientProfileData: ").append(toIndentedString(clientProfileData)).append("\n");
    sb.append("    commercialConditionData: ").append(toIndentedString(commercialConditionData)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    customData: ").append(toIndentedString(customData)).append("\n");
    sb.append("    emailTracked: ").append(toIndentedString(emailTracked)).append("\n");
    sb.append("    followUpEmail: ").append(toIndentedString(followUpEmail)).append("\n");
    sb.append("    giftRegistryData: ").append(toIndentedString(giftRegistryData)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    invoiceData: ").append(toIndentedString(invoiceData)).append("\n");
    sb.append("    invoicedDate: ").append(toIndentedString(invoicedDate)).append("\n");
    sb.append("    isCheckedIn: ").append(toIndentedString(isCheckedIn)).append("\n");
    sb.append("    isCompleted: ").append(toIndentedString(isCompleted)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    lastChange: ").append(toIndentedString(lastChange)).append("\n");
    sb.append("    lastMessage: ").append(toIndentedString(lastMessage)).append("\n");
    sb.append("    marketingData: ").append(toIndentedString(marketingData)).append("\n");
    sb.append("    marketplace: ").append(toIndentedString(marketplace)).append("\n");
    sb.append("    marketplaceItems: ").append(toIndentedString(marketplaceItems)).append("\n");
    sb.append("    marketplaceOrderId: ").append(toIndentedString(marketplaceOrderId)).append("\n");
    sb.append("    marketplaceServicesEndpoint: ").append(toIndentedString(marketplaceServicesEndpoint)).append("\n");
    sb.append("    merchantName: ").append(toIndentedString(merchantName)).append("\n");
    sb.append("    openTextField: ").append(toIndentedString(openTextField)).append("\n");
    sb.append("    orderFormId: ").append(toIndentedString(orderFormId)).append("\n");
    sb.append("    orderGroup: ").append(toIndentedString(orderGroup)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    packageAttachment: ").append(toIndentedString(packageAttachment)).append("\n");
    sb.append("    paymentData: ").append(toIndentedString(paymentData)).append("\n");
    sb.append("    ratesAndBenefitsData: ").append(toIndentedString(ratesAndBenefitsData)).append("\n");
    sb.append("    roundingError: ").append(toIndentedString(roundingError)).append("\n");
    sb.append("    salesChannel: ").append(toIndentedString(salesChannel)).append("\n");
    sb.append("    sellerOrderId: ").append(toIndentedString(sellerOrderId)).append("\n");
    sb.append("    sellers: ").append(toIndentedString(sellers)).append("\n");
    sb.append("    sequence: ").append(toIndentedString(sequence)).append("\n");
    sb.append("    shippingData: ").append(toIndentedString(shippingData)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusDescription: ").append(toIndentedString(statusDescription)).append("\n");
    sb.append("    storePreferencesData: ").append(toIndentedString(storePreferencesData)).append("\n");
    sb.append("    totals: ").append(toIndentedString(totals)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("affiliateId");
    openapiFields.add("allowCancellation");
    openapiFields.add("allowEdition");
    openapiFields.add("approvedBy");
    openapiFields.add("authorizedDate");
    openapiFields.add("callCenterOperatorData");
    openapiFields.add("cancelReason");
    openapiFields.add("cancelledBy");
    openapiFields.add("changesAttachment");
    openapiFields.add("clientProfileData");
    openapiFields.add("commercialConditionData");
    openapiFields.add("creationDate");
    openapiFields.add("customData");
    openapiFields.add("emailTracked");
    openapiFields.add("followUpEmail");
    openapiFields.add("giftRegistryData");
    openapiFields.add("hostname");
    openapiFields.add("invoiceData");
    openapiFields.add("invoicedDate");
    openapiFields.add("isCheckedIn");
    openapiFields.add("isCompleted");
    openapiFields.add("items");
    openapiFields.add("lastChange");
    openapiFields.add("lastMessage");
    openapiFields.add("marketingData");
    openapiFields.add("marketplace");
    openapiFields.add("marketplaceItems");
    openapiFields.add("marketplaceOrderId");
    openapiFields.add("marketplaceServicesEndpoint");
    openapiFields.add("merchantName");
    openapiFields.add("openTextField");
    openapiFields.add("orderFormId");
    openapiFields.add("orderGroup");
    openapiFields.add("orderId");
    openapiFields.add("origin");
    openapiFields.add("packageAttachment");
    openapiFields.add("paymentData");
    openapiFields.add("ratesAndBenefitsData");
    openapiFields.add("roundingError");
    openapiFields.add("salesChannel");
    openapiFields.add("sellerOrderId");
    openapiFields.add("sellers");
    openapiFields.add("sequence");
    openapiFields.add("shippingData");
    openapiFields.add("status");
    openapiFields.add("statusDescription");
    openapiFields.add("storePreferencesData");
    openapiFields.add("totals");
    openapiFields.add("value");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetOrder200Response
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetOrder200Response.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetOrder200Response is not found in the empty JSON string", GetOrder200Response.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetOrder200Response.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetOrder200Response` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("affiliateId") != null && !jsonObj.get("affiliateId").isJsonNull()) && !jsonObj.get("affiliateId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `affiliateId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("affiliateId").toString()));
      }
      if ((jsonObj.get("approvedBy") != null && !jsonObj.get("approvedBy").isJsonNull()) && !jsonObj.get("approvedBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `approvedBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("approvedBy").toString()));
      }
      if ((jsonObj.get("authorizedDate") != null && !jsonObj.get("authorizedDate").isJsonNull()) && !jsonObj.get("authorizedDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `authorizedDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("authorizedDate").toString()));
      }
      if ((jsonObj.get("callCenterOperatorData") != null && !jsonObj.get("callCenterOperatorData").isJsonNull()) && !jsonObj.get("callCenterOperatorData").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `callCenterOperatorData` to be a primitive type in the JSON string but got `%s`", jsonObj.get("callCenterOperatorData").toString()));
      }
      if ((jsonObj.get("cancelReason") != null && !jsonObj.get("cancelReason").isJsonNull()) && !jsonObj.get("cancelReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cancelReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cancelReason").toString()));
      }
      if ((jsonObj.get("cancelledBy") != null && !jsonObj.get("cancelledBy").isJsonNull()) && !jsonObj.get("cancelledBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cancelledBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cancelledBy").toString()));
      }
      // validate the optional field `changesAttachment`
      if (jsonObj.get("changesAttachment") != null && !jsonObj.get("changesAttachment").isJsonNull()) {
        ChangesAttachment.validateJsonElement(jsonObj.get("changesAttachment"));
      }
      // validate the optional field `clientProfileData`
      if (jsonObj.get("clientProfileData") != null && !jsonObj.get("clientProfileData").isJsonNull()) {
        ClientProfileData.validateJsonElement(jsonObj.get("clientProfileData"));
      }
      if ((jsonObj.get("commercialConditionData") != null && !jsonObj.get("commercialConditionData").isJsonNull()) && !jsonObj.get("commercialConditionData").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `commercialConditionData` to be a primitive type in the JSON string but got `%s`", jsonObj.get("commercialConditionData").toString()));
      }
      if ((jsonObj.get("creationDate") != null && !jsonObj.get("creationDate").isJsonNull()) && !jsonObj.get("creationDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creationDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creationDate").toString()));
      }
      if ((jsonObj.get("customData") != null && !jsonObj.get("customData").isJsonNull()) && !jsonObj.get("customData").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customData` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customData").toString()));
      }
      if ((jsonObj.get("emailTracked") != null && !jsonObj.get("emailTracked").isJsonNull()) && !jsonObj.get("emailTracked").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `emailTracked` to be a primitive type in the JSON string but got `%s`", jsonObj.get("emailTracked").toString()));
      }
      if ((jsonObj.get("followUpEmail") != null && !jsonObj.get("followUpEmail").isJsonNull()) && !jsonObj.get("followUpEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `followUpEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("followUpEmail").toString()));
      }
      if ((jsonObj.get("giftRegistryData") != null && !jsonObj.get("giftRegistryData").isJsonNull()) && !jsonObj.get("giftRegistryData").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `giftRegistryData` to be a primitive type in the JSON string but got `%s`", jsonObj.get("giftRegistryData").toString()));
      }
      if ((jsonObj.get("hostname") != null && !jsonObj.get("hostname").isJsonNull()) && !jsonObj.get("hostname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hostname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hostname").toString()));
      }
      if ((jsonObj.get("invoicedDate") != null && !jsonObj.get("invoicedDate").isJsonNull()) && !jsonObj.get("invoicedDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `invoicedDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("invoicedDate").toString()));
      }
      if (jsonObj.get("items") != null && !jsonObj.get("items").isJsonNull()) {
        JsonArray jsonArrayitems = jsonObj.getAsJsonArray("items");
        if (jsonArrayitems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("items").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `items` to be an array in the JSON string but got `%s`", jsonObj.get("items").toString()));
          }

          // validate the optional field `items` (array)
          for (int i = 0; i < jsonArrayitems.size(); i++) {
            GetOrder200ResponseItemsInner.validateJsonElement(jsonArrayitems.get(i));
          };
        }
      }
      if ((jsonObj.get("lastChange") != null && !jsonObj.get("lastChange").isJsonNull()) && !jsonObj.get("lastChange").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastChange` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastChange").toString()));
      }
      if ((jsonObj.get("lastMessage") != null && !jsonObj.get("lastMessage").isJsonNull()) && !jsonObj.get("lastMessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastMessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastMessage").toString()));
      }
      if ((jsonObj.get("marketingData") != null && !jsonObj.get("marketingData").isJsonNull()) && !jsonObj.get("marketingData").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `marketingData` to be a primitive type in the JSON string but got `%s`", jsonObj.get("marketingData").toString()));
      }
      // validate the optional field `marketplace`
      if (jsonObj.get("marketplace") != null && !jsonObj.get("marketplace").isJsonNull()) {
        Marketplace.validateJsonElement(jsonObj.get("marketplace"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("marketplaceItems") != null && !jsonObj.get("marketplaceItems").isJsonNull() && !jsonObj.get("marketplaceItems").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `marketplaceItems` to be an array in the JSON string but got `%s`", jsonObj.get("marketplaceItems").toString()));
      }
      if ((jsonObj.get("marketplaceOrderId") != null && !jsonObj.get("marketplaceOrderId").isJsonNull()) && !jsonObj.get("marketplaceOrderId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `marketplaceOrderId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("marketplaceOrderId").toString()));
      }
      if ((jsonObj.get("marketplaceServicesEndpoint") != null && !jsonObj.get("marketplaceServicesEndpoint").isJsonNull()) && !jsonObj.get("marketplaceServicesEndpoint").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `marketplaceServicesEndpoint` to be a primitive type in the JSON string but got `%s`", jsonObj.get("marketplaceServicesEndpoint").toString()));
      }
      if ((jsonObj.get("merchantName") != null && !jsonObj.get("merchantName").isJsonNull()) && !jsonObj.get("merchantName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchantName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchantName").toString()));
      }
      if ((jsonObj.get("openTextField") != null && !jsonObj.get("openTextField").isJsonNull()) && !jsonObj.get("openTextField").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `openTextField` to be a primitive type in the JSON string but got `%s`", jsonObj.get("openTextField").toString()));
      }
      if ((jsonObj.get("orderFormId") != null && !jsonObj.get("orderFormId").isJsonNull()) && !jsonObj.get("orderFormId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderFormId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderFormId").toString()));
      }
      if ((jsonObj.get("orderGroup") != null && !jsonObj.get("orderGroup").isJsonNull()) && !jsonObj.get("orderGroup").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderGroup` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderGroup").toString()));
      }
      if ((jsonObj.get("orderId") != null && !jsonObj.get("orderId").isJsonNull()) && !jsonObj.get("orderId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderId").toString()));
      }
      if ((jsonObj.get("origin") != null && !jsonObj.get("origin").isJsonNull()) && !jsonObj.get("origin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `origin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("origin").toString()));
      }
      // validate the optional field `packageAttachment`
      if (jsonObj.get("packageAttachment") != null && !jsonObj.get("packageAttachment").isJsonNull()) {
        GetOrder200ResponsePackageAttachment.validateJsonElement(jsonObj.get("packageAttachment"));
      }
      // validate the optional field `paymentData`
      if (jsonObj.get("paymentData") != null && !jsonObj.get("paymentData").isJsonNull()) {
        PaymentData.validateJsonElement(jsonObj.get("paymentData"));
      }
      // validate the optional field `ratesAndBenefitsData`
      if (jsonObj.get("ratesAndBenefitsData") != null && !jsonObj.get("ratesAndBenefitsData").isJsonNull()) {
        RatesAndBenefitsData.validateJsonElement(jsonObj.get("ratesAndBenefitsData"));
      }
      if ((jsonObj.get("salesChannel") != null && !jsonObj.get("salesChannel").isJsonNull()) && !jsonObj.get("salesChannel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `salesChannel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("salesChannel").toString()));
      }
      if ((jsonObj.get("sellerOrderId") != null && !jsonObj.get("sellerOrderId").isJsonNull()) && !jsonObj.get("sellerOrderId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sellerOrderId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sellerOrderId").toString()));
      }
      if (jsonObj.get("sellers") != null && !jsonObj.get("sellers").isJsonNull()) {
        JsonArray jsonArraysellers = jsonObj.getAsJsonArray("sellers");
        if (jsonArraysellers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("sellers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `sellers` to be an array in the JSON string but got `%s`", jsonObj.get("sellers").toString()));
          }

          // validate the optional field `sellers` (array)
          for (int i = 0; i < jsonArraysellers.size(); i++) {
            Seller.validateJsonElement(jsonArraysellers.get(i));
          };
        }
      }
      if ((jsonObj.get("sequence") != null && !jsonObj.get("sequence").isJsonNull()) && !jsonObj.get("sequence").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sequence` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sequence").toString()));
      }
      // validate the optional field `shippingData`
      if (jsonObj.get("shippingData") != null && !jsonObj.get("shippingData").isJsonNull()) {
        ShippingData.validateJsonElement(jsonObj.get("shippingData"));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("statusDescription") != null && !jsonObj.get("statusDescription").isJsonNull()) && !jsonObj.get("statusDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `statusDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("statusDescription").toString()));
      }
      // validate the optional field `storePreferencesData`
      if (jsonObj.get("storePreferencesData") != null && !jsonObj.get("storePreferencesData").isJsonNull()) {
        StorePreferencesData.validateJsonElement(jsonObj.get("storePreferencesData"));
      }
      if (jsonObj.get("totals") != null && !jsonObj.get("totals").isJsonNull()) {
        JsonArray jsonArraytotals = jsonObj.getAsJsonArray("totals");
        if (jsonArraytotals != null) {
          // ensure the json data is an array
          if (!jsonObj.get("totals").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `totals` to be an array in the JSON string but got `%s`", jsonObj.get("totals").toString()));
          }

          // validate the optional field `totals` (array)
          for (int i = 0; i < jsonArraytotals.size(); i++) {
            GetOrder200ResponseTotalsInner.validateJsonElement(jsonArraytotals.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetOrder200Response.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetOrder200Response' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetOrder200Response> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetOrder200Response.class));

       return (TypeAdapter<T>) new TypeAdapter<GetOrder200Response>() {
           @Override
           public void write(JsonWriter out, GetOrder200Response value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetOrder200Response read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetOrder200Response given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetOrder200Response
   * @throws IOException if the JSON string is invalid with respect to GetOrder200Response
   */
  public static GetOrder200Response fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetOrder200Response.class);
  }

  /**
   * Convert an instance of GetOrder200Response to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

