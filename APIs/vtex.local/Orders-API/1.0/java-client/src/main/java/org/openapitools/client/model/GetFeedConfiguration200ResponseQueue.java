/*
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Information that define the functioning of the queue.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:55:33.631540-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetFeedConfiguration200ResponseQueue {
  public static final String SERIALIZED_NAME_MESSAGE_RETENTION_PERIOD_IN_SECONDS = "MessageRetentionPeriodInSeconds";
  @SerializedName(SERIALIZED_NAME_MESSAGE_RETENTION_PERIOD_IN_SECONDS)
  private Integer messageRetentionPeriodInSeconds;

  public static final String SERIALIZED_NAME_VISIBILITY_TIMEOUT_IN_SECONDS = "visibilityTimeoutInSeconds";
  @SerializedName(SERIALIZED_NAME_VISIBILITY_TIMEOUT_IN_SECONDS)
  private Integer visibilityTimeoutInSeconds;

  public GetFeedConfiguration200ResponseQueue() {
  }

  public GetFeedConfiguration200ResponseQueue messageRetentionPeriodInSeconds(Integer messageRetentionPeriodInSeconds) {
    this.messageRetentionPeriodInSeconds = messageRetentionPeriodInSeconds;
    return this;
  }

  /**
   * Maximum life span of an order update after it gets to the feed. When a feed item is on the feed for this period of time, it is removed from the feed. Measured in seconds.
   * @return messageRetentionPeriodInSeconds
   */
  @javax.annotation.Nullable
  public Integer getMessageRetentionPeriodInSeconds() {
    return messageRetentionPeriodInSeconds;
  }

  public void setMessageRetentionPeriodInSeconds(Integer messageRetentionPeriodInSeconds) {
    this.messageRetentionPeriodInSeconds = messageRetentionPeriodInSeconds;
  }


  public GetFeedConfiguration200ResponseQueue visibilityTimeoutInSeconds(Integer visibilityTimeoutInSeconds) {
    this.visibilityTimeoutInSeconds = visibilityTimeoutInSeconds;
    return this;
  }

  /**
   * Period of time for which an item is not visible in the feed after it has been retrieved with the Get feed items request. Measured in seconds.
   * @return visibilityTimeoutInSeconds
   */
  @javax.annotation.Nullable
  public Integer getVisibilityTimeoutInSeconds() {
    return visibilityTimeoutInSeconds;
  }

  public void setVisibilityTimeoutInSeconds(Integer visibilityTimeoutInSeconds) {
    this.visibilityTimeoutInSeconds = visibilityTimeoutInSeconds;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetFeedConfiguration200ResponseQueue getFeedConfiguration200ResponseQueue = (GetFeedConfiguration200ResponseQueue) o;
    return Objects.equals(this.messageRetentionPeriodInSeconds, getFeedConfiguration200ResponseQueue.messageRetentionPeriodInSeconds) &&
        Objects.equals(this.visibilityTimeoutInSeconds, getFeedConfiguration200ResponseQueue.visibilityTimeoutInSeconds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(messageRetentionPeriodInSeconds, visibilityTimeoutInSeconds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetFeedConfiguration200ResponseQueue {\n");
    sb.append("    messageRetentionPeriodInSeconds: ").append(toIndentedString(messageRetentionPeriodInSeconds)).append("\n");
    sb.append("    visibilityTimeoutInSeconds: ").append(toIndentedString(visibilityTimeoutInSeconds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("MessageRetentionPeriodInSeconds");
    openapiFields.add("visibilityTimeoutInSeconds");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetFeedConfiguration200ResponseQueue
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetFeedConfiguration200ResponseQueue.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetFeedConfiguration200ResponseQueue is not found in the empty JSON string", GetFeedConfiguration200ResponseQueue.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetFeedConfiguration200ResponseQueue.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetFeedConfiguration200ResponseQueue` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetFeedConfiguration200ResponseQueue.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetFeedConfiguration200ResponseQueue' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetFeedConfiguration200ResponseQueue> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetFeedConfiguration200ResponseQueue.class));

       return (TypeAdapter<T>) new TypeAdapter<GetFeedConfiguration200ResponseQueue>() {
           @Override
           public void write(JsonWriter out, GetFeedConfiguration200ResponseQueue value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetFeedConfiguration200ResponseQueue read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetFeedConfiguration200ResponseQueue given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetFeedConfiguration200ResponseQueue
   * @throws IOException if the JSON string is invalid with respect to GetFeedConfiguration200ResponseQueue
   */
  public static GetFeedConfiguration200ResponseQueue fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetFeedConfiguration200ResponseQueue.class);
  }

  /**
   * Convert an instance of GetFeedConfiguration200ResponseQueue to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

