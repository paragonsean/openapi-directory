/*
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ChangesAttachment;
import org.openapitools.client.model.ClientProfileData;
import org.openapitools.client.model.Item;
import org.openapitools.client.model.Marketplace;
import org.openapitools.client.model.PackageAttachment;
import org.openapitools.client.model.PaymentData;
import org.openapitools.client.model.RatesAndBenefitsData;
import org.openapitools.client.model.Seller;
import org.openapitools.client.model.ShippingData;
import org.openapitools.client.model.StorePreferencesData;
import org.openapitools.client.model.Total;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetOrder
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:55:33.631540-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetOrder {
  public static final String SERIALIZED_NAME_AFFILIATE_ID = "affiliateId";
  @SerializedName(SERIALIZED_NAME_AFFILIATE_ID)
  private String affiliateId;

  public static final String SERIALIZED_NAME_ALLOW_CANCELLATION = "allowCancellation";
  @SerializedName(SERIALIZED_NAME_ALLOW_CANCELLATION)
  private Boolean allowCancellation;

  public static final String SERIALIZED_NAME_ALLOW_EDITION = "allowEdition";
  @SerializedName(SERIALIZED_NAME_ALLOW_EDITION)
  private Boolean allowEdition;

  public static final String SERIALIZED_NAME_APPROVED_BY = "approvedBy";
  @SerializedName(SERIALIZED_NAME_APPROVED_BY)
  private String approvedBy;

  public static final String SERIALIZED_NAME_AUTHORIZED_DATE = "authorizedDate";
  @SerializedName(SERIALIZED_NAME_AUTHORIZED_DATE)
  private String authorizedDate;

  public static final String SERIALIZED_NAME_CALL_CENTER_OPERATOR_DATA = "callCenterOperatorData";
  @SerializedName(SERIALIZED_NAME_CALL_CENTER_OPERATOR_DATA)
  private String callCenterOperatorData;

  public static final String SERIALIZED_NAME_CANCEL_REASON = "cancelReason";
  @SerializedName(SERIALIZED_NAME_CANCEL_REASON)
  private String cancelReason;

  public static final String SERIALIZED_NAME_CANCELLED_BY = "cancelledBy";
  @SerializedName(SERIALIZED_NAME_CANCELLED_BY)
  private String cancelledBy;

  public static final String SERIALIZED_NAME_CHANGES_ATTACHMENT = "changesAttachment";
  @SerializedName(SERIALIZED_NAME_CHANGES_ATTACHMENT)
  private ChangesAttachment changesAttachment;

  public static final String SERIALIZED_NAME_CLIENT_PROFILE_DATA = "clientProfileData";
  @SerializedName(SERIALIZED_NAME_CLIENT_PROFILE_DATA)
  private ClientProfileData clientProfileData;

  public static final String SERIALIZED_NAME_COMMERCIAL_CONDITION_DATA = "commercialConditionData";
  @SerializedName(SERIALIZED_NAME_COMMERCIAL_CONDITION_DATA)
  private String commercialConditionData;

  public static final String SERIALIZED_NAME_CREATION_DATE = "creationDate";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private String creationDate;

  public static final String SERIALIZED_NAME_CUSTOM_DATA = "customData";
  @SerializedName(SERIALIZED_NAME_CUSTOM_DATA)
  private String customData;

  public static final String SERIALIZED_NAME_EMAIL_TRACKED = "emailTracked";
  @SerializedName(SERIALIZED_NAME_EMAIL_TRACKED)
  private String emailTracked;

  public static final String SERIALIZED_NAME_FOLLOW_UP_EMAIL = "followUpEmail";
  @SerializedName(SERIALIZED_NAME_FOLLOW_UP_EMAIL)
  private String followUpEmail;

  public static final String SERIALIZED_NAME_GIFT_REGISTRY_DATA = "giftRegistryData";
  @SerializedName(SERIALIZED_NAME_GIFT_REGISTRY_DATA)
  private String giftRegistryData;

  public static final String SERIALIZED_NAME_HOSTNAME = "hostname";
  @SerializedName(SERIALIZED_NAME_HOSTNAME)
  private String hostname;

  public static final String SERIALIZED_NAME_INVOICE_DATA = "invoiceData";
  @SerializedName(SERIALIZED_NAME_INVOICE_DATA)
  private Object invoiceData;

  public static final String SERIALIZED_NAME_INVOICED_DATE = "invoicedDate";
  @SerializedName(SERIALIZED_NAME_INVOICED_DATE)
  private String invoicedDate;

  public static final String SERIALIZED_NAME_IS_CHECKED_IN = "isCheckedIn";
  @SerializedName(SERIALIZED_NAME_IS_CHECKED_IN)
  private Boolean isCheckedIn;

  public static final String SERIALIZED_NAME_IS_COMPLETED = "isCompleted";
  @SerializedName(SERIALIZED_NAME_IS_COMPLETED)
  private Boolean isCompleted;

  public static final String SERIALIZED_NAME_ITEMS = "items";
  @SerializedName(SERIALIZED_NAME_ITEMS)
  private List<Item> items = new ArrayList<>();

  public static final String SERIALIZED_NAME_LAST_CHANGE = "lastChange";
  @SerializedName(SERIALIZED_NAME_LAST_CHANGE)
  private String lastChange;

  public static final String SERIALIZED_NAME_LAST_MESSAGE = "lastMessage";
  @SerializedName(SERIALIZED_NAME_LAST_MESSAGE)
  private String lastMessage;

  public static final String SERIALIZED_NAME_MARKETING_DATA = "marketingData";
  @SerializedName(SERIALIZED_NAME_MARKETING_DATA)
  private String marketingData;

  public static final String SERIALIZED_NAME_MARKETPLACE = "marketplace";
  @SerializedName(SERIALIZED_NAME_MARKETPLACE)
  private Marketplace marketplace;

  public static final String SERIALIZED_NAME_MARKETPLACE_ITEMS = "marketplaceItems";
  @SerializedName(SERIALIZED_NAME_MARKETPLACE_ITEMS)
  private List<String> marketplaceItems = new ArrayList<>();

  public static final String SERIALIZED_NAME_MARKETPLACE_ORDER_ID = "marketplaceOrderId";
  @SerializedName(SERIALIZED_NAME_MARKETPLACE_ORDER_ID)
  private String marketplaceOrderId;

  public static final String SERIALIZED_NAME_MARKETPLACE_SERVICES_ENDPOINT = "marketplaceServicesEndpoint";
  @SerializedName(SERIALIZED_NAME_MARKETPLACE_SERVICES_ENDPOINT)
  private String marketplaceServicesEndpoint;

  public static final String SERIALIZED_NAME_MERCHANT_NAME = "merchantName";
  @SerializedName(SERIALIZED_NAME_MERCHANT_NAME)
  private String merchantName;

  public static final String SERIALIZED_NAME_OPEN_TEXT_FIELD = "openTextField";
  @SerializedName(SERIALIZED_NAME_OPEN_TEXT_FIELD)
  private String openTextField;

  public static final String SERIALIZED_NAME_ORDER_FORM_ID = "orderFormId";
  @SerializedName(SERIALIZED_NAME_ORDER_FORM_ID)
  private String orderFormId;

  public static final String SERIALIZED_NAME_ORDER_GROUP = "orderGroup";
  @SerializedName(SERIALIZED_NAME_ORDER_GROUP)
  private String orderGroup;

  public static final String SERIALIZED_NAME_ORDER_ID = "orderId";
  @SerializedName(SERIALIZED_NAME_ORDER_ID)
  private String orderId;

  public static final String SERIALIZED_NAME_ORIGIN = "origin";
  @SerializedName(SERIALIZED_NAME_ORIGIN)
  private String origin;

  public static final String SERIALIZED_NAME_PACKAGE_ATTACHMENT = "packageAttachment";
  @SerializedName(SERIALIZED_NAME_PACKAGE_ATTACHMENT)
  private PackageAttachment packageAttachment;

  public static final String SERIALIZED_NAME_PAYMENT_DATA = "paymentData";
  @SerializedName(SERIALIZED_NAME_PAYMENT_DATA)
  private PaymentData paymentData;

  public static final String SERIALIZED_NAME_RATES_AND_BENEFITS_DATA = "ratesAndBenefitsData";
  @SerializedName(SERIALIZED_NAME_RATES_AND_BENEFITS_DATA)
  private RatesAndBenefitsData ratesAndBenefitsData;

  public static final String SERIALIZED_NAME_ROUNDING_ERROR = "roundingError";
  @SerializedName(SERIALIZED_NAME_ROUNDING_ERROR)
  private Integer roundingError;

  public static final String SERIALIZED_NAME_SALES_CHANNEL = "salesChannel";
  @SerializedName(SERIALIZED_NAME_SALES_CHANNEL)
  private String salesChannel;

  public static final String SERIALIZED_NAME_SELLER_ORDER_ID = "sellerOrderId";
  @SerializedName(SERIALIZED_NAME_SELLER_ORDER_ID)
  private String sellerOrderId;

  public static final String SERIALIZED_NAME_SELLERS = "sellers";
  @SerializedName(SERIALIZED_NAME_SELLERS)
  private List<Seller> sellers = new ArrayList<>();

  public static final String SERIALIZED_NAME_SEQUENCE = "sequence";
  @SerializedName(SERIALIZED_NAME_SEQUENCE)
  private String sequence;

  public static final String SERIALIZED_NAME_SHIPPING_DATA = "shippingData";
  @SerializedName(SERIALIZED_NAME_SHIPPING_DATA)
  private ShippingData shippingData;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_STATUS_DESCRIPTION = "statusDescription";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_STATUS_DESCRIPTION)
  private String statusDescription;

  public static final String SERIALIZED_NAME_STORE_PREFERENCES_DATA = "storePreferencesData";
  @SerializedName(SERIALIZED_NAME_STORE_PREFERENCES_DATA)
  private StorePreferencesData storePreferencesData;

  public static final String SERIALIZED_NAME_TOTALS = "totals";
  @SerializedName(SERIALIZED_NAME_TOTALS)
  private List<Total> totals = new ArrayList<>();

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private Integer value;

  public GetOrder() {
  }

  public GetOrder affiliateId(String affiliateId) {
    this.affiliateId = affiliateId;
    return this;
  }

  /**
   * Get affiliateId
   * @return affiliateId
   */
  @javax.annotation.Nonnull
  public String getAffiliateId() {
    return affiliateId;
  }

  public void setAffiliateId(String affiliateId) {
    this.affiliateId = affiliateId;
  }


  public GetOrder allowCancellation(Boolean allowCancellation) {
    this.allowCancellation = allowCancellation;
    return this;
  }

  /**
   * Get allowCancellation
   * @return allowCancellation
   */
  @javax.annotation.Nonnull
  public Boolean getAllowCancellation() {
    return allowCancellation;
  }

  public void setAllowCancellation(Boolean allowCancellation) {
    this.allowCancellation = allowCancellation;
  }


  public GetOrder allowEdition(Boolean allowEdition) {
    this.allowEdition = allowEdition;
    return this;
  }

  /**
   * Get allowEdition
   * @return allowEdition
   */
  @javax.annotation.Nonnull
  public Boolean getAllowEdition() {
    return allowEdition;
  }

  public void setAllowEdition(Boolean allowEdition) {
    this.allowEdition = allowEdition;
  }


  public GetOrder approvedBy(String approvedBy) {
    this.approvedBy = approvedBy;
    return this;
  }

  /**
   * Get approvedBy
   * @return approvedBy
   */
  @javax.annotation.Nullable
  public String getApprovedBy() {
    return approvedBy;
  }

  public void setApprovedBy(String approvedBy) {
    this.approvedBy = approvedBy;
  }


  public GetOrder authorizedDate(String authorizedDate) {
    this.authorizedDate = authorizedDate;
    return this;
  }

  /**
   * Get authorizedDate
   * @return authorizedDate
   */
  @javax.annotation.Nonnull
  public String getAuthorizedDate() {
    return authorizedDate;
  }

  public void setAuthorizedDate(String authorizedDate) {
    this.authorizedDate = authorizedDate;
  }


  public GetOrder callCenterOperatorData(String callCenterOperatorData) {
    this.callCenterOperatorData = callCenterOperatorData;
    return this;
  }

  /**
   * Get callCenterOperatorData
   * @return callCenterOperatorData
   */
  @javax.annotation.Nullable
  public String getCallCenterOperatorData() {
    return callCenterOperatorData;
  }

  public void setCallCenterOperatorData(String callCenterOperatorData) {
    this.callCenterOperatorData = callCenterOperatorData;
  }


  public GetOrder cancelReason(String cancelReason) {
    this.cancelReason = cancelReason;
    return this;
  }

  /**
   * Explanation for cancellation
   * @return cancelReason
   */
  @javax.annotation.Nullable
  public String getCancelReason() {
    return cancelReason;
  }

  public void setCancelReason(String cancelReason) {
    this.cancelReason = cancelReason;
  }


  public GetOrder cancelledBy(String cancelledBy) {
    this.cancelledBy = cancelledBy;
    return this;
  }

  /**
   * User that canceled the order.
   * @return cancelledBy
   */
  @javax.annotation.Nullable
  public String getCancelledBy() {
    return cancelledBy;
  }

  public void setCancelledBy(String cancelledBy) {
    this.cancelledBy = cancelledBy;
  }


  public GetOrder changesAttachment(ChangesAttachment changesAttachment) {
    this.changesAttachment = changesAttachment;
    return this;
  }

  /**
   * Get changesAttachment
   * @return changesAttachment
   */
  @javax.annotation.Nonnull
  public ChangesAttachment getChangesAttachment() {
    return changesAttachment;
  }

  public void setChangesAttachment(ChangesAttachment changesAttachment) {
    this.changesAttachment = changesAttachment;
  }


  public GetOrder clientProfileData(ClientProfileData clientProfileData) {
    this.clientProfileData = clientProfileData;
    return this;
  }

  /**
   * Get clientProfileData
   * @return clientProfileData
   */
  @javax.annotation.Nonnull
  public ClientProfileData getClientProfileData() {
    return clientProfileData;
  }

  public void setClientProfileData(ClientProfileData clientProfileData) {
    this.clientProfileData = clientProfileData;
  }


  public GetOrder commercialConditionData(String commercialConditionData) {
    this.commercialConditionData = commercialConditionData;
    return this;
  }

  /**
   * Get commercialConditionData
   * @return commercialConditionData
   */
  @javax.annotation.Nullable
  public String getCommercialConditionData() {
    return commercialConditionData;
  }

  public void setCommercialConditionData(String commercialConditionData) {
    this.commercialConditionData = commercialConditionData;
  }


  public GetOrder creationDate(String creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Get creationDate
   * @return creationDate
   */
  @javax.annotation.Nonnull
  public String getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(String creationDate) {
    this.creationDate = creationDate;
  }


  public GetOrder customData(String customData) {
    this.customData = customData;
    return this;
  }

  /**
   * Get customData
   * @return customData
   */
  @javax.annotation.Nullable
  public String getCustomData() {
    return customData;
  }

  public void setCustomData(String customData) {
    this.customData = customData;
  }


  public GetOrder emailTracked(String emailTracked) {
    this.emailTracked = emailTracked;
    return this;
  }

  /**
   * Get emailTracked
   * @return emailTracked
   */
  @javax.annotation.Nonnull
  public String getEmailTracked() {
    return emailTracked;
  }

  public void setEmailTracked(String emailTracked) {
    this.emailTracked = emailTracked;
  }


  public GetOrder followUpEmail(String followUpEmail) {
    this.followUpEmail = followUpEmail;
    return this;
  }

  /**
   * Get followUpEmail
   * @return followUpEmail
   */
  @javax.annotation.Nonnull
  public String getFollowUpEmail() {
    return followUpEmail;
  }

  public void setFollowUpEmail(String followUpEmail) {
    this.followUpEmail = followUpEmail;
  }


  public GetOrder giftRegistryData(String giftRegistryData) {
    this.giftRegistryData = giftRegistryData;
    return this;
  }

  /**
   * Get giftRegistryData
   * @return giftRegistryData
   */
  @javax.annotation.Nullable
  public String getGiftRegistryData() {
    return giftRegistryData;
  }

  public void setGiftRegistryData(String giftRegistryData) {
    this.giftRegistryData = giftRegistryData;
  }


  public GetOrder hostname(String hostname) {
    this.hostname = hostname;
    return this;
  }

  /**
   * Get hostname
   * @return hostname
   */
  @javax.annotation.Nonnull
  public String getHostname() {
    return hostname;
  }

  public void setHostname(String hostname) {
    this.hostname = hostname;
  }


  public GetOrder invoiceData(Object invoiceData) {
    this.invoiceData = invoiceData;
    return this;
  }

  /**
   * Information pertinent to the order&#39;s invoice.
   * @return invoiceData
   */
  @javax.annotation.Nullable
  public Object getInvoiceData() {
    return invoiceData;
  }

  public void setInvoiceData(Object invoiceData) {
    this.invoiceData = invoiceData;
  }


  public GetOrder invoicedDate(String invoicedDate) {
    this.invoicedDate = invoicedDate;
    return this;
  }

  /**
   * Get invoicedDate
   * @return invoicedDate
   */
  @javax.annotation.Nullable
  public String getInvoicedDate() {
    return invoicedDate;
  }

  public void setInvoicedDate(String invoicedDate) {
    this.invoicedDate = invoicedDate;
  }


  public GetOrder isCheckedIn(Boolean isCheckedIn) {
    this.isCheckedIn = isCheckedIn;
    return this;
  }

  /**
   * Get isCheckedIn
   * @return isCheckedIn
   */
  @javax.annotation.Nonnull
  public Boolean getIsCheckedIn() {
    return isCheckedIn;
  }

  public void setIsCheckedIn(Boolean isCheckedIn) {
    this.isCheckedIn = isCheckedIn;
  }


  public GetOrder isCompleted(Boolean isCompleted) {
    this.isCompleted = isCompleted;
    return this;
  }

  /**
   * Get isCompleted
   * @return isCompleted
   */
  @javax.annotation.Nonnull
  public Boolean getIsCompleted() {
    return isCompleted;
  }

  public void setIsCompleted(Boolean isCompleted) {
    this.isCompleted = isCompleted;
  }


  public GetOrder items(List<Item> items) {
    this.items = items;
    return this;
  }

  public GetOrder addItemsItem(Item itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<>();
    }
    this.items.add(itemsItem);
    return this;
  }

  /**
   * 
   * @return items
   */
  @javax.annotation.Nonnull
  public List<Item> getItems() {
    return items;
  }

  public void setItems(List<Item> items) {
    this.items = items;
  }


  public GetOrder lastChange(String lastChange) {
    this.lastChange = lastChange;
    return this;
  }

  /**
   * Get lastChange
   * @return lastChange
   */
  @javax.annotation.Nonnull
  public String getLastChange() {
    return lastChange;
  }

  public void setLastChange(String lastChange) {
    this.lastChange = lastChange;
  }


  public GetOrder lastMessage(String lastMessage) {
    this.lastMessage = lastMessage;
    return this;
  }

  /**
   * Get lastMessage
   * @return lastMessage
   */
  @javax.annotation.Nullable
  public String getLastMessage() {
    return lastMessage;
  }

  public void setLastMessage(String lastMessage) {
    this.lastMessage = lastMessage;
  }


  public GetOrder marketingData(String marketingData) {
    this.marketingData = marketingData;
    return this;
  }

  /**
   * Get marketingData
   * @return marketingData
   */
  @javax.annotation.Nullable
  public String getMarketingData() {
    return marketingData;
  }

  public void setMarketingData(String marketingData) {
    this.marketingData = marketingData;
  }


  public GetOrder marketplace(Marketplace marketplace) {
    this.marketplace = marketplace;
    return this;
  }

  /**
   * Get marketplace
   * @return marketplace
   */
  @javax.annotation.Nonnull
  public Marketplace getMarketplace() {
    return marketplace;
  }

  public void setMarketplace(Marketplace marketplace) {
    this.marketplace = marketplace;
  }


  public GetOrder marketplaceItems(List<String> marketplaceItems) {
    this.marketplaceItems = marketplaceItems;
    return this;
  }

  public GetOrder addMarketplaceItemsItem(String marketplaceItemsItem) {
    if (this.marketplaceItems == null) {
      this.marketplaceItems = new ArrayList<>();
    }
    this.marketplaceItems.add(marketplaceItemsItem);
    return this;
  }

  /**
   * 
   * @return marketplaceItems
   */
  @javax.annotation.Nonnull
  public List<String> getMarketplaceItems() {
    return marketplaceItems;
  }

  public void setMarketplaceItems(List<String> marketplaceItems) {
    this.marketplaceItems = marketplaceItems;
  }


  public GetOrder marketplaceOrderId(String marketplaceOrderId) {
    this.marketplaceOrderId = marketplaceOrderId;
    return this;
  }

  /**
   * Get marketplaceOrderId
   * @return marketplaceOrderId
   */
  @javax.annotation.Nonnull
  public String getMarketplaceOrderId() {
    return marketplaceOrderId;
  }

  public void setMarketplaceOrderId(String marketplaceOrderId) {
    this.marketplaceOrderId = marketplaceOrderId;
  }


  public GetOrder marketplaceServicesEndpoint(String marketplaceServicesEndpoint) {
    this.marketplaceServicesEndpoint = marketplaceServicesEndpoint;
    return this;
  }

  /**
   * Get marketplaceServicesEndpoint
   * @return marketplaceServicesEndpoint
   */
  @javax.annotation.Nonnull
  public String getMarketplaceServicesEndpoint() {
    return marketplaceServicesEndpoint;
  }

  public void setMarketplaceServicesEndpoint(String marketplaceServicesEndpoint) {
    this.marketplaceServicesEndpoint = marketplaceServicesEndpoint;
  }


  public GetOrder merchantName(String merchantName) {
    this.merchantName = merchantName;
    return this;
  }

  /**
   * Get merchantName
   * @return merchantName
   */
  @javax.annotation.Nullable
  public String getMerchantName() {
    return merchantName;
  }

  public void setMerchantName(String merchantName) {
    this.merchantName = merchantName;
  }


  public GetOrder openTextField(String openTextField) {
    this.openTextField = openTextField;
    return this;
  }

  /**
   * This field must be filled in using the following format:   &#x60;&#x60;&#x60;  {      \&quot;fieldExample\&quot;: \&quot;ValueExample\&quot;    }  &#x60;&#x60;&#x60;  
   * @return openTextField
   */
  @javax.annotation.Nullable
  public String getOpenTextField() {
    return openTextField;
  }

  public void setOpenTextField(String openTextField) {
    this.openTextField = openTextField;
  }


  public GetOrder orderFormId(String orderFormId) {
    this.orderFormId = orderFormId;
    return this;
  }

  /**
   * Get orderFormId
   * @return orderFormId
   */
  @javax.annotation.Nonnull
  public String getOrderFormId() {
    return orderFormId;
  }

  public void setOrderFormId(String orderFormId) {
    this.orderFormId = orderFormId;
  }


  public GetOrder orderGroup(String orderGroup) {
    this.orderGroup = orderGroup;
    return this;
  }

  /**
   * Get orderGroup
   * @return orderGroup
   */
  @javax.annotation.Nullable
  public String getOrderGroup() {
    return orderGroup;
  }

  public void setOrderGroup(String orderGroup) {
    this.orderGroup = orderGroup;
  }


  public GetOrder orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

  /**
   * Get orderId
   * @return orderId
   */
  @javax.annotation.Nonnull
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }


  public GetOrder origin(String origin) {
    this.origin = origin;
    return this;
  }

  /**
   * Get origin
   * @return origin
   */
  @javax.annotation.Nonnull
  public String getOrigin() {
    return origin;
  }

  public void setOrigin(String origin) {
    this.origin = origin;
  }


  public GetOrder packageAttachment(PackageAttachment packageAttachment) {
    this.packageAttachment = packageAttachment;
    return this;
  }

  /**
   * Get packageAttachment
   * @return packageAttachment
   */
  @javax.annotation.Nonnull
  public PackageAttachment getPackageAttachment() {
    return packageAttachment;
  }

  public void setPackageAttachment(PackageAttachment packageAttachment) {
    this.packageAttachment = packageAttachment;
  }


  public GetOrder paymentData(PaymentData paymentData) {
    this.paymentData = paymentData;
    return this;
  }

  /**
   * Get paymentData
   * @return paymentData
   */
  @javax.annotation.Nonnull
  public PaymentData getPaymentData() {
    return paymentData;
  }

  public void setPaymentData(PaymentData paymentData) {
    this.paymentData = paymentData;
  }


  public GetOrder ratesAndBenefitsData(RatesAndBenefitsData ratesAndBenefitsData) {
    this.ratesAndBenefitsData = ratesAndBenefitsData;
    return this;
  }

  /**
   * Get ratesAndBenefitsData
   * @return ratesAndBenefitsData
   */
  @javax.annotation.Nonnull
  public RatesAndBenefitsData getRatesAndBenefitsData() {
    return ratesAndBenefitsData;
  }

  public void setRatesAndBenefitsData(RatesAndBenefitsData ratesAndBenefitsData) {
    this.ratesAndBenefitsData = ratesAndBenefitsData;
  }


  public GetOrder roundingError(Integer roundingError) {
    this.roundingError = roundingError;
    return this;
  }

  /**
   * Get roundingError
   * @return roundingError
   */
  @javax.annotation.Nonnull
  public Integer getRoundingError() {
    return roundingError;
  }

  public void setRoundingError(Integer roundingError) {
    this.roundingError = roundingError;
  }


  public GetOrder salesChannel(String salesChannel) {
    this.salesChannel = salesChannel;
    return this;
  }

  /**
   * Get salesChannel
   * @return salesChannel
   */
  @javax.annotation.Nonnull
  public String getSalesChannel() {
    return salesChannel;
  }

  public void setSalesChannel(String salesChannel) {
    this.salesChannel = salesChannel;
  }


  public GetOrder sellerOrderId(String sellerOrderId) {
    this.sellerOrderId = sellerOrderId;
    return this;
  }

  /**
   * Get sellerOrderId
   * @return sellerOrderId
   */
  @javax.annotation.Nonnull
  public String getSellerOrderId() {
    return sellerOrderId;
  }

  public void setSellerOrderId(String sellerOrderId) {
    this.sellerOrderId = sellerOrderId;
  }


  public GetOrder sellers(List<Seller> sellers) {
    this.sellers = sellers;
    return this;
  }

  public GetOrder addSellersItem(Seller sellersItem) {
    if (this.sellers == null) {
      this.sellers = new ArrayList<>();
    }
    this.sellers.add(sellersItem);
    return this;
  }

  /**
   * 
   * @return sellers
   */
  @javax.annotation.Nonnull
  public List<Seller> getSellers() {
    return sellers;
  }

  public void setSellers(List<Seller> sellers) {
    this.sellers = sellers;
  }


  public GetOrder sequence(String sequence) {
    this.sequence = sequence;
    return this;
  }

  /**
   * Get sequence
   * @return sequence
   */
  @javax.annotation.Nonnull
  public String getSequence() {
    return sequence;
  }

  public void setSequence(String sequence) {
    this.sequence = sequence;
  }


  public GetOrder shippingData(ShippingData shippingData) {
    this.shippingData = shippingData;
    return this;
  }

  /**
   * Get shippingData
   * @return shippingData
   */
  @javax.annotation.Nonnull
  public ShippingData getShippingData() {
    return shippingData;
  }

  public void setShippingData(ShippingData shippingData) {
    this.shippingData = shippingData;
  }


  public GetOrder status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nonnull
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  @Deprecated
  public GetOrder statusDescription(String statusDescription) {
    this.statusDescription = statusDescription;
    return this;
  }

  /**
   * &#x60;Deprecated&#x60;. Status description which is displayed on the Admin panel. This field is obsolete and may not return any value.
   * @return statusDescription
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nonnull
  public String getStatusDescription() {
    return statusDescription;
  }

  @Deprecated
  public void setStatusDescription(String statusDescription) {
    this.statusDescription = statusDescription;
  }


  public GetOrder storePreferencesData(StorePreferencesData storePreferencesData) {
    this.storePreferencesData = storePreferencesData;
    return this;
  }

  /**
   * Get storePreferencesData
   * @return storePreferencesData
   */
  @javax.annotation.Nonnull
  public StorePreferencesData getStorePreferencesData() {
    return storePreferencesData;
  }

  public void setStorePreferencesData(StorePreferencesData storePreferencesData) {
    this.storePreferencesData = storePreferencesData;
  }


  public GetOrder totals(List<Total> totals) {
    this.totals = totals;
    return this;
  }

  public GetOrder addTotalsItem(Total totalsItem) {
    if (this.totals == null) {
      this.totals = new ArrayList<>();
    }
    this.totals.add(totalsItem);
    return this;
  }

  /**
   * 
   * @return totals
   */
  @javax.annotation.Nonnull
  public List<Total> getTotals() {
    return totals;
  }

  public void setTotals(List<Total> totals) {
    this.totals = totals;
  }


  public GetOrder value(Integer value) {
    this.value = value;
    return this;
  }

  /**
   * Get value
   * @return value
   */
  @javax.annotation.Nonnull
  public Integer getValue() {
    return value;
  }

  public void setValue(Integer value) {
    this.value = value;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetOrder getOrder = (GetOrder) o;
    return Objects.equals(this.affiliateId, getOrder.affiliateId) &&
        Objects.equals(this.allowCancellation, getOrder.allowCancellation) &&
        Objects.equals(this.allowEdition, getOrder.allowEdition) &&
        Objects.equals(this.approvedBy, getOrder.approvedBy) &&
        Objects.equals(this.authorizedDate, getOrder.authorizedDate) &&
        Objects.equals(this.callCenterOperatorData, getOrder.callCenterOperatorData) &&
        Objects.equals(this.cancelReason, getOrder.cancelReason) &&
        Objects.equals(this.cancelledBy, getOrder.cancelledBy) &&
        Objects.equals(this.changesAttachment, getOrder.changesAttachment) &&
        Objects.equals(this.clientProfileData, getOrder.clientProfileData) &&
        Objects.equals(this.commercialConditionData, getOrder.commercialConditionData) &&
        Objects.equals(this.creationDate, getOrder.creationDate) &&
        Objects.equals(this.customData, getOrder.customData) &&
        Objects.equals(this.emailTracked, getOrder.emailTracked) &&
        Objects.equals(this.followUpEmail, getOrder.followUpEmail) &&
        Objects.equals(this.giftRegistryData, getOrder.giftRegistryData) &&
        Objects.equals(this.hostname, getOrder.hostname) &&
        Objects.equals(this.invoiceData, getOrder.invoiceData) &&
        Objects.equals(this.invoicedDate, getOrder.invoicedDate) &&
        Objects.equals(this.isCheckedIn, getOrder.isCheckedIn) &&
        Objects.equals(this.isCompleted, getOrder.isCompleted) &&
        Objects.equals(this.items, getOrder.items) &&
        Objects.equals(this.lastChange, getOrder.lastChange) &&
        Objects.equals(this.lastMessage, getOrder.lastMessage) &&
        Objects.equals(this.marketingData, getOrder.marketingData) &&
        Objects.equals(this.marketplace, getOrder.marketplace) &&
        Objects.equals(this.marketplaceItems, getOrder.marketplaceItems) &&
        Objects.equals(this.marketplaceOrderId, getOrder.marketplaceOrderId) &&
        Objects.equals(this.marketplaceServicesEndpoint, getOrder.marketplaceServicesEndpoint) &&
        Objects.equals(this.merchantName, getOrder.merchantName) &&
        Objects.equals(this.openTextField, getOrder.openTextField) &&
        Objects.equals(this.orderFormId, getOrder.orderFormId) &&
        Objects.equals(this.orderGroup, getOrder.orderGroup) &&
        Objects.equals(this.orderId, getOrder.orderId) &&
        Objects.equals(this.origin, getOrder.origin) &&
        Objects.equals(this.packageAttachment, getOrder.packageAttachment) &&
        Objects.equals(this.paymentData, getOrder.paymentData) &&
        Objects.equals(this.ratesAndBenefitsData, getOrder.ratesAndBenefitsData) &&
        Objects.equals(this.roundingError, getOrder.roundingError) &&
        Objects.equals(this.salesChannel, getOrder.salesChannel) &&
        Objects.equals(this.sellerOrderId, getOrder.sellerOrderId) &&
        Objects.equals(this.sellers, getOrder.sellers) &&
        Objects.equals(this.sequence, getOrder.sequence) &&
        Objects.equals(this.shippingData, getOrder.shippingData) &&
        Objects.equals(this.status, getOrder.status) &&
        Objects.equals(this.statusDescription, getOrder.statusDescription) &&
        Objects.equals(this.storePreferencesData, getOrder.storePreferencesData) &&
        Objects.equals(this.totals, getOrder.totals) &&
        Objects.equals(this.value, getOrder.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(affiliateId, allowCancellation, allowEdition, approvedBy, authorizedDate, callCenterOperatorData, cancelReason, cancelledBy, changesAttachment, clientProfileData, commercialConditionData, creationDate, customData, emailTracked, followUpEmail, giftRegistryData, hostname, invoiceData, invoicedDate, isCheckedIn, isCompleted, items, lastChange, lastMessage, marketingData, marketplace, marketplaceItems, marketplaceOrderId, marketplaceServicesEndpoint, merchantName, openTextField, orderFormId, orderGroup, orderId, origin, packageAttachment, paymentData, ratesAndBenefitsData, roundingError, salesChannel, sellerOrderId, sellers, sequence, shippingData, status, statusDescription, storePreferencesData, totals, value);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetOrder {\n");
    sb.append("    affiliateId: ").append(toIndentedString(affiliateId)).append("\n");
    sb.append("    allowCancellation: ").append(toIndentedString(allowCancellation)).append("\n");
    sb.append("    allowEdition: ").append(toIndentedString(allowEdition)).append("\n");
    sb.append("    approvedBy: ").append(toIndentedString(approvedBy)).append("\n");
    sb.append("    authorizedDate: ").append(toIndentedString(authorizedDate)).append("\n");
    sb.append("    callCenterOperatorData: ").append(toIndentedString(callCenterOperatorData)).append("\n");
    sb.append("    cancelReason: ").append(toIndentedString(cancelReason)).append("\n");
    sb.append("    cancelledBy: ").append(toIndentedString(cancelledBy)).append("\n");
    sb.append("    changesAttachment: ").append(toIndentedString(changesAttachment)).append("\n");
    sb.append("    clientProfileData: ").append(toIndentedString(clientProfileData)).append("\n");
    sb.append("    commercialConditionData: ").append(toIndentedString(commercialConditionData)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    customData: ").append(toIndentedString(customData)).append("\n");
    sb.append("    emailTracked: ").append(toIndentedString(emailTracked)).append("\n");
    sb.append("    followUpEmail: ").append(toIndentedString(followUpEmail)).append("\n");
    sb.append("    giftRegistryData: ").append(toIndentedString(giftRegistryData)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    invoiceData: ").append(toIndentedString(invoiceData)).append("\n");
    sb.append("    invoicedDate: ").append(toIndentedString(invoicedDate)).append("\n");
    sb.append("    isCheckedIn: ").append(toIndentedString(isCheckedIn)).append("\n");
    sb.append("    isCompleted: ").append(toIndentedString(isCompleted)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    lastChange: ").append(toIndentedString(lastChange)).append("\n");
    sb.append("    lastMessage: ").append(toIndentedString(lastMessage)).append("\n");
    sb.append("    marketingData: ").append(toIndentedString(marketingData)).append("\n");
    sb.append("    marketplace: ").append(toIndentedString(marketplace)).append("\n");
    sb.append("    marketplaceItems: ").append(toIndentedString(marketplaceItems)).append("\n");
    sb.append("    marketplaceOrderId: ").append(toIndentedString(marketplaceOrderId)).append("\n");
    sb.append("    marketplaceServicesEndpoint: ").append(toIndentedString(marketplaceServicesEndpoint)).append("\n");
    sb.append("    merchantName: ").append(toIndentedString(merchantName)).append("\n");
    sb.append("    openTextField: ").append(toIndentedString(openTextField)).append("\n");
    sb.append("    orderFormId: ").append(toIndentedString(orderFormId)).append("\n");
    sb.append("    orderGroup: ").append(toIndentedString(orderGroup)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    packageAttachment: ").append(toIndentedString(packageAttachment)).append("\n");
    sb.append("    paymentData: ").append(toIndentedString(paymentData)).append("\n");
    sb.append("    ratesAndBenefitsData: ").append(toIndentedString(ratesAndBenefitsData)).append("\n");
    sb.append("    roundingError: ").append(toIndentedString(roundingError)).append("\n");
    sb.append("    salesChannel: ").append(toIndentedString(salesChannel)).append("\n");
    sb.append("    sellerOrderId: ").append(toIndentedString(sellerOrderId)).append("\n");
    sb.append("    sellers: ").append(toIndentedString(sellers)).append("\n");
    sb.append("    sequence: ").append(toIndentedString(sequence)).append("\n");
    sb.append("    shippingData: ").append(toIndentedString(shippingData)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusDescription: ").append(toIndentedString(statusDescription)).append("\n");
    sb.append("    storePreferencesData: ").append(toIndentedString(storePreferencesData)).append("\n");
    sb.append("    totals: ").append(toIndentedString(totals)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("affiliateId");
    openapiFields.add("allowCancellation");
    openapiFields.add("allowEdition");
    openapiFields.add("approvedBy");
    openapiFields.add("authorizedDate");
    openapiFields.add("callCenterOperatorData");
    openapiFields.add("cancelReason");
    openapiFields.add("cancelledBy");
    openapiFields.add("changesAttachment");
    openapiFields.add("clientProfileData");
    openapiFields.add("commercialConditionData");
    openapiFields.add("creationDate");
    openapiFields.add("customData");
    openapiFields.add("emailTracked");
    openapiFields.add("followUpEmail");
    openapiFields.add("giftRegistryData");
    openapiFields.add("hostname");
    openapiFields.add("invoiceData");
    openapiFields.add("invoicedDate");
    openapiFields.add("isCheckedIn");
    openapiFields.add("isCompleted");
    openapiFields.add("items");
    openapiFields.add("lastChange");
    openapiFields.add("lastMessage");
    openapiFields.add("marketingData");
    openapiFields.add("marketplace");
    openapiFields.add("marketplaceItems");
    openapiFields.add("marketplaceOrderId");
    openapiFields.add("marketplaceServicesEndpoint");
    openapiFields.add("merchantName");
    openapiFields.add("openTextField");
    openapiFields.add("orderFormId");
    openapiFields.add("orderGroup");
    openapiFields.add("orderId");
    openapiFields.add("origin");
    openapiFields.add("packageAttachment");
    openapiFields.add("paymentData");
    openapiFields.add("ratesAndBenefitsData");
    openapiFields.add("roundingError");
    openapiFields.add("salesChannel");
    openapiFields.add("sellerOrderId");
    openapiFields.add("sellers");
    openapiFields.add("sequence");
    openapiFields.add("shippingData");
    openapiFields.add("status");
    openapiFields.add("statusDescription");
    openapiFields.add("storePreferencesData");
    openapiFields.add("totals");
    openapiFields.add("value");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("affiliateId");
    openapiRequiredFields.add("allowCancellation");
    openapiRequiredFields.add("allowEdition");
    openapiRequiredFields.add("approvedBy");
    openapiRequiredFields.add("authorizedDate");
    openapiRequiredFields.add("callCenterOperatorData");
    openapiRequiredFields.add("cancelReason");
    openapiRequiredFields.add("cancelledBy");
    openapiRequiredFields.add("changesAttachment");
    openapiRequiredFields.add("clientProfileData");
    openapiRequiredFields.add("commercialConditionData");
    openapiRequiredFields.add("creationDate");
    openapiRequiredFields.add("customData");
    openapiRequiredFields.add("emailTracked");
    openapiRequiredFields.add("followUpEmail");
    openapiRequiredFields.add("giftRegistryData");
    openapiRequiredFields.add("hostname");
    openapiRequiredFields.add("invoiceData");
    openapiRequiredFields.add("invoicedDate");
    openapiRequiredFields.add("isCheckedIn");
    openapiRequiredFields.add("isCompleted");
    openapiRequiredFields.add("items");
    openapiRequiredFields.add("lastChange");
    openapiRequiredFields.add("lastMessage");
    openapiRequiredFields.add("marketingData");
    openapiRequiredFields.add("marketplace");
    openapiRequiredFields.add("marketplaceItems");
    openapiRequiredFields.add("marketplaceOrderId");
    openapiRequiredFields.add("marketplaceServicesEndpoint");
    openapiRequiredFields.add("merchantName");
    openapiRequiredFields.add("openTextField");
    openapiRequiredFields.add("orderFormId");
    openapiRequiredFields.add("orderGroup");
    openapiRequiredFields.add("orderId");
    openapiRequiredFields.add("origin");
    openapiRequiredFields.add("packageAttachment");
    openapiRequiredFields.add("paymentData");
    openapiRequiredFields.add("ratesAndBenefitsData");
    openapiRequiredFields.add("roundingError");
    openapiRequiredFields.add("salesChannel");
    openapiRequiredFields.add("sellerOrderId");
    openapiRequiredFields.add("sellers");
    openapiRequiredFields.add("sequence");
    openapiRequiredFields.add("shippingData");
    openapiRequiredFields.add("status");
    openapiRequiredFields.add("statusDescription");
    openapiRequiredFields.add("storePreferencesData");
    openapiRequiredFields.add("totals");
    openapiRequiredFields.add("value");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetOrder
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetOrder.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetOrder is not found in the empty JSON string", GetOrder.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetOrder.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetOrder` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GetOrder.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("affiliateId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `affiliateId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("affiliateId").toString()));
      }
      if ((jsonObj.get("approvedBy") != null && !jsonObj.get("approvedBy").isJsonNull()) && !jsonObj.get("approvedBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `approvedBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("approvedBy").toString()));
      }
      if (!jsonObj.get("authorizedDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `authorizedDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("authorizedDate").toString()));
      }
      if ((jsonObj.get("callCenterOperatorData") != null && !jsonObj.get("callCenterOperatorData").isJsonNull()) && !jsonObj.get("callCenterOperatorData").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `callCenterOperatorData` to be a primitive type in the JSON string but got `%s`", jsonObj.get("callCenterOperatorData").toString()));
      }
      if ((jsonObj.get("cancelReason") != null && !jsonObj.get("cancelReason").isJsonNull()) && !jsonObj.get("cancelReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cancelReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cancelReason").toString()));
      }
      if ((jsonObj.get("cancelledBy") != null && !jsonObj.get("cancelledBy").isJsonNull()) && !jsonObj.get("cancelledBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cancelledBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cancelledBy").toString()));
      }
      // validate the required field `changesAttachment`
      ChangesAttachment.validateJsonElement(jsonObj.get("changesAttachment"));
      // validate the required field `clientProfileData`
      ClientProfileData.validateJsonElement(jsonObj.get("clientProfileData"));
      if ((jsonObj.get("commercialConditionData") != null && !jsonObj.get("commercialConditionData").isJsonNull()) && !jsonObj.get("commercialConditionData").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `commercialConditionData` to be a primitive type in the JSON string but got `%s`", jsonObj.get("commercialConditionData").toString()));
      }
      if (!jsonObj.get("creationDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creationDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creationDate").toString()));
      }
      if ((jsonObj.get("customData") != null && !jsonObj.get("customData").isJsonNull()) && !jsonObj.get("customData").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customData` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customData").toString()));
      }
      if (!jsonObj.get("emailTracked").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `emailTracked` to be a primitive type in the JSON string but got `%s`", jsonObj.get("emailTracked").toString()));
      }
      if (!jsonObj.get("followUpEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `followUpEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("followUpEmail").toString()));
      }
      if ((jsonObj.get("giftRegistryData") != null && !jsonObj.get("giftRegistryData").isJsonNull()) && !jsonObj.get("giftRegistryData").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `giftRegistryData` to be a primitive type in the JSON string but got `%s`", jsonObj.get("giftRegistryData").toString()));
      }
      if (!jsonObj.get("hostname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hostname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hostname").toString()));
      }
      if ((jsonObj.get("invoicedDate") != null && !jsonObj.get("invoicedDate").isJsonNull()) && !jsonObj.get("invoicedDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `invoicedDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("invoicedDate").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("items").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `items` to be an array in the JSON string but got `%s`", jsonObj.get("items").toString()));
      }

      JsonArray jsonArrayitems = jsonObj.getAsJsonArray("items");
      // validate the required field `items` (array)
      for (int i = 0; i < jsonArrayitems.size(); i++) {
        Item.validateJsonElement(jsonArrayitems.get(i));
      };
      if (!jsonObj.get("lastChange").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastChange` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastChange").toString()));
      }
      if ((jsonObj.get("lastMessage") != null && !jsonObj.get("lastMessage").isJsonNull()) && !jsonObj.get("lastMessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastMessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastMessage").toString()));
      }
      if ((jsonObj.get("marketingData") != null && !jsonObj.get("marketingData").isJsonNull()) && !jsonObj.get("marketingData").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `marketingData` to be a primitive type in the JSON string but got `%s`", jsonObj.get("marketingData").toString()));
      }
      // validate the required field `marketplace`
      Marketplace.validateJsonElement(jsonObj.get("marketplace"));
      // ensure the required json array is present
      if (jsonObj.get("marketplaceItems") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("marketplaceItems").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `marketplaceItems` to be an array in the JSON string but got `%s`", jsonObj.get("marketplaceItems").toString()));
      }
      if (!jsonObj.get("marketplaceOrderId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `marketplaceOrderId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("marketplaceOrderId").toString()));
      }
      if (!jsonObj.get("marketplaceServicesEndpoint").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `marketplaceServicesEndpoint` to be a primitive type in the JSON string but got `%s`", jsonObj.get("marketplaceServicesEndpoint").toString()));
      }
      if ((jsonObj.get("merchantName") != null && !jsonObj.get("merchantName").isJsonNull()) && !jsonObj.get("merchantName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchantName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchantName").toString()));
      }
      if ((jsonObj.get("openTextField") != null && !jsonObj.get("openTextField").isJsonNull()) && !jsonObj.get("openTextField").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `openTextField` to be a primitive type in the JSON string but got `%s`", jsonObj.get("openTextField").toString()));
      }
      if (!jsonObj.get("orderFormId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderFormId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderFormId").toString()));
      }
      if ((jsonObj.get("orderGroup") != null && !jsonObj.get("orderGroup").isJsonNull()) && !jsonObj.get("orderGroup").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderGroup` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderGroup").toString()));
      }
      if (!jsonObj.get("orderId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderId").toString()));
      }
      if (!jsonObj.get("origin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `origin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("origin").toString()));
      }
      // validate the required field `packageAttachment`
      PackageAttachment.validateJsonElement(jsonObj.get("packageAttachment"));
      // validate the required field `paymentData`
      PaymentData.validateJsonElement(jsonObj.get("paymentData"));
      // validate the required field `ratesAndBenefitsData`
      RatesAndBenefitsData.validateJsonElement(jsonObj.get("ratesAndBenefitsData"));
      if (!jsonObj.get("salesChannel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `salesChannel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("salesChannel").toString()));
      }
      if (!jsonObj.get("sellerOrderId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sellerOrderId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sellerOrderId").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("sellers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `sellers` to be an array in the JSON string but got `%s`", jsonObj.get("sellers").toString()));
      }

      JsonArray jsonArraysellers = jsonObj.getAsJsonArray("sellers");
      // validate the required field `sellers` (array)
      for (int i = 0; i < jsonArraysellers.size(); i++) {
        Seller.validateJsonElement(jsonArraysellers.get(i));
      };
      if (!jsonObj.get("sequence").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sequence` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sequence").toString()));
      }
      // validate the required field `shippingData`
      ShippingData.validateJsonElement(jsonObj.get("shippingData"));
      if (!jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if (!jsonObj.get("statusDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `statusDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("statusDescription").toString()));
      }
      // validate the required field `storePreferencesData`
      StorePreferencesData.validateJsonElement(jsonObj.get("storePreferencesData"));
      // ensure the json data is an array
      if (!jsonObj.get("totals").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `totals` to be an array in the JSON string but got `%s`", jsonObj.get("totals").toString()));
      }

      JsonArray jsonArraytotals = jsonObj.getAsJsonArray("totals");
      // validate the required field `totals` (array)
      for (int i = 0; i < jsonArraytotals.size(); i++) {
        Total.validateJsonElement(jsonArraytotals.get(i));
      };
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetOrder.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetOrder' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetOrder> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetOrder.class));

       return (TypeAdapter<T>) new TypeAdapter<GetOrder>() {
           @Override
           public void write(JsonWriter out, GetOrder value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetOrder read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetOrder given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetOrder
   * @throws IOException if the JSON string is invalid with respect to GetOrder
   */
  public static GetOrder fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetOrder.class);
  }

  /**
   * Convert an instance of GetOrder to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

