/*
 * Orders API
 *     >Check the new [Orders onboarding guide](https://developers.vtex.com/docs/guides/orders-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Orders and is organized by focusing on the developer's journey.    Receive, process, and manage every order in your store through our Order Management API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetOrder200ResponsePackageAttachmentPackagesInnerRestitutionsRefundItemsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:55:33.631540-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetOrder200ResponsePackageAttachmentPackagesInnerRestitutionsRefundItemsInner {
  public static final String SERIALIZED_NAME_ITEM_INDEX = "itemIndex";
  @SerializedName(SERIALIZED_NAME_ITEM_INDEX)
  private String itemIndex;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Integer quantity;

  public GetOrder200ResponsePackageAttachmentPackagesInnerRestitutionsRefundItemsInner() {
  }

  public GetOrder200ResponsePackageAttachmentPackagesInnerRestitutionsRefundItemsInner itemIndex(String itemIndex) {
    this.itemIndex = itemIndex;
    return this;
  }

  /**
   * Item index corresponding to the position of the item in the main &#x60;items&#x60; array.
   * @return itemIndex
   */
  @javax.annotation.Nullable
  public String getItemIndex() {
    return itemIndex;
  }

  public void setItemIndex(String itemIndex) {
    this.itemIndex = itemIndex;
  }


  public GetOrder200ResponsePackageAttachmentPackagesInnerRestitutionsRefundItemsInner quantity(Integer quantity) {
    this.quantity = quantity;
    return this;
  }

  /**
   * Quantity.
   * @return quantity
   */
  @javax.annotation.Nullable
  public Integer getQuantity() {
    return quantity;
  }

  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetOrder200ResponsePackageAttachmentPackagesInnerRestitutionsRefundItemsInner getOrder200ResponsePackageAttachmentPackagesInnerRestitutionsRefundItemsInner = (GetOrder200ResponsePackageAttachmentPackagesInnerRestitutionsRefundItemsInner) o;
    return Objects.equals(this.itemIndex, getOrder200ResponsePackageAttachmentPackagesInnerRestitutionsRefundItemsInner.itemIndex) &&
        Objects.equals(this.quantity, getOrder200ResponsePackageAttachmentPackagesInnerRestitutionsRefundItemsInner.quantity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(itemIndex, quantity);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetOrder200ResponsePackageAttachmentPackagesInnerRestitutionsRefundItemsInner {\n");
    sb.append("    itemIndex: ").append(toIndentedString(itemIndex)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("itemIndex");
    openapiFields.add("quantity");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetOrder200ResponsePackageAttachmentPackagesInnerRestitutionsRefundItemsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetOrder200ResponsePackageAttachmentPackagesInnerRestitutionsRefundItemsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetOrder200ResponsePackageAttachmentPackagesInnerRestitutionsRefundItemsInner is not found in the empty JSON string", GetOrder200ResponsePackageAttachmentPackagesInnerRestitutionsRefundItemsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetOrder200ResponsePackageAttachmentPackagesInnerRestitutionsRefundItemsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetOrder200ResponsePackageAttachmentPackagesInnerRestitutionsRefundItemsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("itemIndex") != null && !jsonObj.get("itemIndex").isJsonNull()) && !jsonObj.get("itemIndex").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `itemIndex` to be a primitive type in the JSON string but got `%s`", jsonObj.get("itemIndex").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetOrder200ResponsePackageAttachmentPackagesInnerRestitutionsRefundItemsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetOrder200ResponsePackageAttachmentPackagesInnerRestitutionsRefundItemsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetOrder200ResponsePackageAttachmentPackagesInnerRestitutionsRefundItemsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetOrder200ResponsePackageAttachmentPackagesInnerRestitutionsRefundItemsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<GetOrder200ResponsePackageAttachmentPackagesInnerRestitutionsRefundItemsInner>() {
           @Override
           public void write(JsonWriter out, GetOrder200ResponsePackageAttachmentPackagesInnerRestitutionsRefundItemsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetOrder200ResponsePackageAttachmentPackagesInnerRestitutionsRefundItemsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetOrder200ResponsePackageAttachmentPackagesInnerRestitutionsRefundItemsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetOrder200ResponsePackageAttachmentPackagesInnerRestitutionsRefundItemsInner
   * @throws IOException if the JSON string is invalid with respect to GetOrder200ResponsePackageAttachmentPackagesInnerRestitutionsRefundItemsInner
   */
  public static GetOrder200ResponsePackageAttachmentPackagesInnerRestitutionsRefundItemsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetOrder200ResponsePackageAttachmentPackagesInnerRestitutionsRefundItemsInner.class);
  }

  /**
   * Convert an instance of GetOrder200ResponsePackageAttachmentPackagesInnerRestitutionsRefundItemsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

