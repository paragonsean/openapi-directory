/*
 * Catalog API - Seller Portal
 *   With the Catalog API for Seller Portal, you will be able to create, edit and consult products and their variations, brands, and categories.    > This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX's discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests).    ## Index    ### Product    `GET` [Get Product by ID](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/products/-productId-)  `PUT` [Update Product](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#put-/api/catalog-seller-portal/products/-productId-)  `GET` [Get Product Description by Product ID](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/products/-productId-/description)  `PUT` [Update Product Description by Product ID](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#put-/api/catalog-seller-portal/products/-productId-/description)  `GET` [Get Product by external ID, SKU ID, SKU external ID or slug](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/products/-param-)  `POST` [Create Product](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#post-/api/catalog-seller-portal/products)    ### SKU    `GET` [Search for SKU](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/skus/_search)  `GET` [Get List of SKUs](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/skus/ids)    ### Brand    `GET` [Get List of Brands](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/brands)  `POST` [Create a Brand](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#post-/api/catalog-seller-portal/brands)  `GET` [Get Brand by ID](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/brands/-brandId-)  `PUT` [Update Brand](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#put-/api/catalog-seller-portal/brands/-brandId-)    ### Category    `GET` [Get Category Tree](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/category-tree)  `PUT` [Update Category Tree](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#put-/api/catalog-seller-portal/category-tree)  `GET` [Get Category by ID](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/category-tree/categories/-categoryId-)  `POST` [Create a Category](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#post-/api/catalog-seller-portal/category-tree/categories)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.GetProduct200Response;
import org.openapitools.client.model.GetProductDescription200Response;
import org.openapitools.client.model.GetProductQuery200Response;
import org.openapitools.client.model.PostProduct200Response;
import org.openapitools.client.model.PostProductRequest;
import org.openapitools.client.model.PutProductDescriptionRequest;
import org.openapitools.client.model.PutProductRequest;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ProductApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ProductApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ProductApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for getProduct
     * @param contentType Type of the content being sent. (required)
     * @param accept HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand. (required)
     * @param productId Product unique identifier number. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getProductCall(String contentType, String accept, String productId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/catalog-seller-portal/products/{productId}"
            .replace("{" + "productId" + "}", localVarApiClient.escapeString(productId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (contentType != null) {
            localVarHeaderParams.put("Content-Type", localVarApiClient.parameterToString(contentType));
        }

        if (accept != null) {
            localVarHeaderParams.put("Accept", localVarApiClient.parameterToString(accept));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "appToken", "appKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getProductValidateBeforeCall(String contentType, String accept, String productId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'contentType' is set
        if (contentType == null) {
            throw new ApiException("Missing the required parameter 'contentType' when calling getProduct(Async)");
        }

        // verify the required parameter 'accept' is set
        if (accept == null) {
            throw new ApiException("Missing the required parameter 'accept' when calling getProduct(Async)");
        }

        // verify the required parameter 'productId' is set
        if (productId == null) {
            throw new ApiException("Missing the required parameter 'productId' when calling getProduct(Async)");
        }

        return getProductCall(contentType, accept, productId, _callback);

    }

    /**
     * Get Product by ID
     *  &gt;ðŸ“˜ This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX&#39;s discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests).      Retrieves general information about a product by its ID. The response also has information about the product&#39;s SKUs.      ## Response body example    &#x60;&#x60;&#x60;json  {      \&quot;id\&quot;: \&quot;189371\&quot;,      \&quot;status\&quot;: \&quot;active\&quot;,      \&quot;name\&quot;: \&quot;VTEX 10 Shirt\&quot;,      \&quot;brandId\&quot;: \&quot;1\&quot;,      \&quot;brandName\&quot;: \&quot;AOC\&quot;,      \&quot;categoryIds\&quot;: [          \&quot;732\&quot;      ],      \&quot;categoryNames\&quot;: [          \&quot;/sandboxintegracao/AcessÃ³rios/\&quot;      ],      \&quot;specs\&quot;: [          {              \&quot;name\&quot;: \&quot;Color\&quot;,              \&quot;values\&quot;: [                  \&quot;Black\&quot;,                  \&quot;White\&quot;              ]          },          {              \&quot;name\&quot;: \&quot;Size\&quot;,              \&quot;values\&quot;: [                  \&quot;S\&quot;,                  \&quot;M\&quot;,                  \&quot;L\&quot;              ]          }      ],      \&quot;attributes\&quot;: [          {              \&quot;name\&quot;: \&quot;Fabric\&quot;,              \&quot;value\&quot;: \&quot;Cotton\&quot;          },          {              \&quot;name\&quot;: \&quot;Gender\&quot;,              \&quot;value\&quot;: \&quot;Feminine\&quot;          }      ],      \&quot;slug\&quot;: \&quot;/vtex-shirt\&quot;,      \&quot;images\&quot;: [          {              \&quot;id\&quot;: \&quot;vtex_logo.jpg\&quot;,              \&quot;url\&quot;: \&quot;https://vtxleo7778.vtexassets.com/assets/vtex.catalog-images/products/vtex_logo.jpg\&quot;,              \&quot;alt\&quot;: \&quot;VTEX\&quot;          }      ],      \&quot;skus\&quot;: [          {              \&quot;id\&quot;: \&quot;182907\&quot;,              \&quot;externalId\&quot;: \&quot;1909621862\&quot;,              \&quot;manufacturerCode\&quot;: \&quot;1234567\&quot;,              \&quot;isActive\&quot;: true,              \&quot;weight\&quot;: 300,              \&quot;dimensions\&quot;: {                  \&quot;width\&quot;: 1.5,                  \&quot;height\&quot;: 2.1,                  \&quot;length\&quot;: 1.6              },              \&quot;specs\&quot;: [                  {                      \&quot;name\&quot;: \&quot;Color\&quot;,                      \&quot;value\&quot;: \&quot;Black\&quot;                  },                  {                      \&quot;name\&quot;: \&quot;Size\&quot;,                      \&quot;value\&quot;: \&quot;S\&quot;                  }              ],              \&quot;images\&quot;: [                  \&quot;vtex_logo.jpg\&quot;              ]          },          {              \&quot;id\&quot;: \&quot;182908\&quot;,              \&quot;externalId\&quot;: \&quot;1909621862\&quot;,              \&quot;manufacturerCode\&quot;: \&quot;1234568\&quot;,              \&quot;isActive\&quot;: true,              \&quot;weight\&quot;: 300,              \&quot;dimensions\&quot;: {                  \&quot;width\&quot;: 1.5,                  \&quot;height\&quot;: 2.1,                  \&quot;length\&quot;: 1.6              },              \&quot;specs\&quot;: [                  {                      \&quot;name\&quot;: \&quot;Color\&quot;,                      \&quot;value\&quot;: \&quot;White\&quot;                  },                  {                      \&quot;name\&quot;: \&quot;Size\&quot;,                      \&quot;value\&quot;: \&quot;L\&quot;                  }              ],              \&quot;images\&quot;: [                  \&quot;vtex_logo.jpg\&quot;              ]          }      ],      \&quot;transportModal\&quot;: \&quot;123\&quot;,      \&quot;taxCode\&quot;: \&quot;100\&quot;,      \&quot;origin\&quot;: \&quot;vtxleo7778\&quot;,      \&quot;createdAt\&quot;: \&quot;2022-10-31T16:28:25.578067Z\&quot;,      \&quot;updatedAt\&quot;: \&quot;2022-10-31T17:09:12.639088Z\&quot;  }  &#x60;&#x60;&#x60;
     * @param contentType Type of the content being sent. (required)
     * @param accept HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand. (required)
     * @param productId Product unique identifier number. (required)
     * @return GetProduct200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public GetProduct200Response getProduct(String contentType, String accept, String productId) throws ApiException {
        ApiResponse<GetProduct200Response> localVarResp = getProductWithHttpInfo(contentType, accept, productId);
        return localVarResp.getData();
    }

    /**
     * Get Product by ID
     *  &gt;ðŸ“˜ This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX&#39;s discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests).      Retrieves general information about a product by its ID. The response also has information about the product&#39;s SKUs.      ## Response body example    &#x60;&#x60;&#x60;json  {      \&quot;id\&quot;: \&quot;189371\&quot;,      \&quot;status\&quot;: \&quot;active\&quot;,      \&quot;name\&quot;: \&quot;VTEX 10 Shirt\&quot;,      \&quot;brandId\&quot;: \&quot;1\&quot;,      \&quot;brandName\&quot;: \&quot;AOC\&quot;,      \&quot;categoryIds\&quot;: [          \&quot;732\&quot;      ],      \&quot;categoryNames\&quot;: [          \&quot;/sandboxintegracao/AcessÃ³rios/\&quot;      ],      \&quot;specs\&quot;: [          {              \&quot;name\&quot;: \&quot;Color\&quot;,              \&quot;values\&quot;: [                  \&quot;Black\&quot;,                  \&quot;White\&quot;              ]          },          {              \&quot;name\&quot;: \&quot;Size\&quot;,              \&quot;values\&quot;: [                  \&quot;S\&quot;,                  \&quot;M\&quot;,                  \&quot;L\&quot;              ]          }      ],      \&quot;attributes\&quot;: [          {              \&quot;name\&quot;: \&quot;Fabric\&quot;,              \&quot;value\&quot;: \&quot;Cotton\&quot;          },          {              \&quot;name\&quot;: \&quot;Gender\&quot;,              \&quot;value\&quot;: \&quot;Feminine\&quot;          }      ],      \&quot;slug\&quot;: \&quot;/vtex-shirt\&quot;,      \&quot;images\&quot;: [          {              \&quot;id\&quot;: \&quot;vtex_logo.jpg\&quot;,              \&quot;url\&quot;: \&quot;https://vtxleo7778.vtexassets.com/assets/vtex.catalog-images/products/vtex_logo.jpg\&quot;,              \&quot;alt\&quot;: \&quot;VTEX\&quot;          }      ],      \&quot;skus\&quot;: [          {              \&quot;id\&quot;: \&quot;182907\&quot;,              \&quot;externalId\&quot;: \&quot;1909621862\&quot;,              \&quot;manufacturerCode\&quot;: \&quot;1234567\&quot;,              \&quot;isActive\&quot;: true,              \&quot;weight\&quot;: 300,              \&quot;dimensions\&quot;: {                  \&quot;width\&quot;: 1.5,                  \&quot;height\&quot;: 2.1,                  \&quot;length\&quot;: 1.6              },              \&quot;specs\&quot;: [                  {                      \&quot;name\&quot;: \&quot;Color\&quot;,                      \&quot;value\&quot;: \&quot;Black\&quot;                  },                  {                      \&quot;name\&quot;: \&quot;Size\&quot;,                      \&quot;value\&quot;: \&quot;S\&quot;                  }              ],              \&quot;images\&quot;: [                  \&quot;vtex_logo.jpg\&quot;              ]          },          {              \&quot;id\&quot;: \&quot;182908\&quot;,              \&quot;externalId\&quot;: \&quot;1909621862\&quot;,              \&quot;manufacturerCode\&quot;: \&quot;1234568\&quot;,              \&quot;isActive\&quot;: true,              \&quot;weight\&quot;: 300,              \&quot;dimensions\&quot;: {                  \&quot;width\&quot;: 1.5,                  \&quot;height\&quot;: 2.1,                  \&quot;length\&quot;: 1.6              },              \&quot;specs\&quot;: [                  {                      \&quot;name\&quot;: \&quot;Color\&quot;,                      \&quot;value\&quot;: \&quot;White\&quot;                  },                  {                      \&quot;name\&quot;: \&quot;Size\&quot;,                      \&quot;value\&quot;: \&quot;L\&quot;                  }              ],              \&quot;images\&quot;: [                  \&quot;vtex_logo.jpg\&quot;              ]          }      ],      \&quot;transportModal\&quot;: \&quot;123\&quot;,      \&quot;taxCode\&quot;: \&quot;100\&quot;,      \&quot;origin\&quot;: \&quot;vtxleo7778\&quot;,      \&quot;createdAt\&quot;: \&quot;2022-10-31T16:28:25.578067Z\&quot;,      \&quot;updatedAt\&quot;: \&quot;2022-10-31T17:09:12.639088Z\&quot;  }  &#x60;&#x60;&#x60;
     * @param contentType Type of the content being sent. (required)
     * @param accept HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand. (required)
     * @param productId Product unique identifier number. (required)
     * @return ApiResponse&lt;GetProduct200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetProduct200Response> getProductWithHttpInfo(String contentType, String accept, String productId) throws ApiException {
        okhttp3.Call localVarCall = getProductValidateBeforeCall(contentType, accept, productId, null);
        Type localVarReturnType = new TypeToken<GetProduct200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get Product by ID (asynchronously)
     *  &gt;ðŸ“˜ This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX&#39;s discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests).      Retrieves general information about a product by its ID. The response also has information about the product&#39;s SKUs.      ## Response body example    &#x60;&#x60;&#x60;json  {      \&quot;id\&quot;: \&quot;189371\&quot;,      \&quot;status\&quot;: \&quot;active\&quot;,      \&quot;name\&quot;: \&quot;VTEX 10 Shirt\&quot;,      \&quot;brandId\&quot;: \&quot;1\&quot;,      \&quot;brandName\&quot;: \&quot;AOC\&quot;,      \&quot;categoryIds\&quot;: [          \&quot;732\&quot;      ],      \&quot;categoryNames\&quot;: [          \&quot;/sandboxintegracao/AcessÃ³rios/\&quot;      ],      \&quot;specs\&quot;: [          {              \&quot;name\&quot;: \&quot;Color\&quot;,              \&quot;values\&quot;: [                  \&quot;Black\&quot;,                  \&quot;White\&quot;              ]          },          {              \&quot;name\&quot;: \&quot;Size\&quot;,              \&quot;values\&quot;: [                  \&quot;S\&quot;,                  \&quot;M\&quot;,                  \&quot;L\&quot;              ]          }      ],      \&quot;attributes\&quot;: [          {              \&quot;name\&quot;: \&quot;Fabric\&quot;,              \&quot;value\&quot;: \&quot;Cotton\&quot;          },          {              \&quot;name\&quot;: \&quot;Gender\&quot;,              \&quot;value\&quot;: \&quot;Feminine\&quot;          }      ],      \&quot;slug\&quot;: \&quot;/vtex-shirt\&quot;,      \&quot;images\&quot;: [          {              \&quot;id\&quot;: \&quot;vtex_logo.jpg\&quot;,              \&quot;url\&quot;: \&quot;https://vtxleo7778.vtexassets.com/assets/vtex.catalog-images/products/vtex_logo.jpg\&quot;,              \&quot;alt\&quot;: \&quot;VTEX\&quot;          }      ],      \&quot;skus\&quot;: [          {              \&quot;id\&quot;: \&quot;182907\&quot;,              \&quot;externalId\&quot;: \&quot;1909621862\&quot;,              \&quot;manufacturerCode\&quot;: \&quot;1234567\&quot;,              \&quot;isActive\&quot;: true,              \&quot;weight\&quot;: 300,              \&quot;dimensions\&quot;: {                  \&quot;width\&quot;: 1.5,                  \&quot;height\&quot;: 2.1,                  \&quot;length\&quot;: 1.6              },              \&quot;specs\&quot;: [                  {                      \&quot;name\&quot;: \&quot;Color\&quot;,                      \&quot;value\&quot;: \&quot;Black\&quot;                  },                  {                      \&quot;name\&quot;: \&quot;Size\&quot;,                      \&quot;value\&quot;: \&quot;S\&quot;                  }              ],              \&quot;images\&quot;: [                  \&quot;vtex_logo.jpg\&quot;              ]          },          {              \&quot;id\&quot;: \&quot;182908\&quot;,              \&quot;externalId\&quot;: \&quot;1909621862\&quot;,              \&quot;manufacturerCode\&quot;: \&quot;1234568\&quot;,              \&quot;isActive\&quot;: true,              \&quot;weight\&quot;: 300,              \&quot;dimensions\&quot;: {                  \&quot;width\&quot;: 1.5,                  \&quot;height\&quot;: 2.1,                  \&quot;length\&quot;: 1.6              },              \&quot;specs\&quot;: [                  {                      \&quot;name\&quot;: \&quot;Color\&quot;,                      \&quot;value\&quot;: \&quot;White\&quot;                  },                  {                      \&quot;name\&quot;: \&quot;Size\&quot;,                      \&quot;value\&quot;: \&quot;L\&quot;                  }              ],              \&quot;images\&quot;: [                  \&quot;vtex_logo.jpg\&quot;              ]          }      ],      \&quot;transportModal\&quot;: \&quot;123\&quot;,      \&quot;taxCode\&quot;: \&quot;100\&quot;,      \&quot;origin\&quot;: \&quot;vtxleo7778\&quot;,      \&quot;createdAt\&quot;: \&quot;2022-10-31T16:28:25.578067Z\&quot;,      \&quot;updatedAt\&quot;: \&quot;2022-10-31T17:09:12.639088Z\&quot;  }  &#x60;&#x60;&#x60;
     * @param contentType Type of the content being sent. (required)
     * @param accept HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand. (required)
     * @param productId Product unique identifier number. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getProductAsync(String contentType, String accept, String productId, final ApiCallback<GetProduct200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = getProductValidateBeforeCall(contentType, accept, productId, _callback);
        Type localVarReturnType = new TypeToken<GetProduct200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getProductDescription
     * @param contentType Type of the content being sent. (required)
     * @param accept HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand. (required)
     * @param productId Product unique identifier number. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getProductDescriptionCall(String contentType, String accept, String productId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/catalog-seller-portal/products/{productId}/description"
            .replace("{" + "productId" + "}", localVarApiClient.escapeString(productId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (contentType != null) {
            localVarHeaderParams.put("Content-Type", localVarApiClient.parameterToString(contentType));
        }

        if (accept != null) {
            localVarHeaderParams.put("Accept", localVarApiClient.parameterToString(accept));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "appToken", "appKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getProductDescriptionValidateBeforeCall(String contentType, String accept, String productId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'contentType' is set
        if (contentType == null) {
            throw new ApiException("Missing the required parameter 'contentType' when calling getProductDescription(Async)");
        }

        // verify the required parameter 'accept' is set
        if (accept == null) {
            throw new ApiException("Missing the required parameter 'accept' when calling getProductDescription(Async)");
        }

        // verify the required parameter 'productId' is set
        if (productId == null) {
            throw new ApiException("Missing the required parameter 'productId' when calling getProductDescription(Async)");
        }

        return getProductDescriptionCall(contentType, accept, productId, _callback);

    }

    /**
     * Get Product Description by Product ID
     *  &gt;ðŸ“˜ This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX&#39;s discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests).      Retrieves the description of a product given a Product ID.    ## Response body example    &#x60;&#x60;&#x60;json  {      \&quot;productId\&quot;: \&quot;61\&quot;,      \&quot;description\&quot;: \&quot;Beautifully handmade laptop case/sleeve made in the Nepal Himalaya. It can be slipped inside your backpack or carried alone with space for all your work bits and pieces!\&quot;,      \&quot;createdAt\&quot;: \&quot;2022-10-10T19:18:45.612317Z\&quot;,      \&quot;updatedAt\&quot;: \&quot;2022-10-11T18:12:58.825544Z\&quot;  }  &#x60;&#x60;&#x60;
     * @param contentType Type of the content being sent. (required)
     * @param accept HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand. (required)
     * @param productId Product unique identifier number. (required)
     * @return GetProductDescription200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public GetProductDescription200Response getProductDescription(String contentType, String accept, String productId) throws ApiException {
        ApiResponse<GetProductDescription200Response> localVarResp = getProductDescriptionWithHttpInfo(contentType, accept, productId);
        return localVarResp.getData();
    }

    /**
     * Get Product Description by Product ID
     *  &gt;ðŸ“˜ This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX&#39;s discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests).      Retrieves the description of a product given a Product ID.    ## Response body example    &#x60;&#x60;&#x60;json  {      \&quot;productId\&quot;: \&quot;61\&quot;,      \&quot;description\&quot;: \&quot;Beautifully handmade laptop case/sleeve made in the Nepal Himalaya. It can be slipped inside your backpack or carried alone with space for all your work bits and pieces!\&quot;,      \&quot;createdAt\&quot;: \&quot;2022-10-10T19:18:45.612317Z\&quot;,      \&quot;updatedAt\&quot;: \&quot;2022-10-11T18:12:58.825544Z\&quot;  }  &#x60;&#x60;&#x60;
     * @param contentType Type of the content being sent. (required)
     * @param accept HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand. (required)
     * @param productId Product unique identifier number. (required)
     * @return ApiResponse&lt;GetProductDescription200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetProductDescription200Response> getProductDescriptionWithHttpInfo(String contentType, String accept, String productId) throws ApiException {
        okhttp3.Call localVarCall = getProductDescriptionValidateBeforeCall(contentType, accept, productId, null);
        Type localVarReturnType = new TypeToken<GetProductDescription200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get Product Description by Product ID (asynchronously)
     *  &gt;ðŸ“˜ This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX&#39;s discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests).      Retrieves the description of a product given a Product ID.    ## Response body example    &#x60;&#x60;&#x60;json  {      \&quot;productId\&quot;: \&quot;61\&quot;,      \&quot;description\&quot;: \&quot;Beautifully handmade laptop case/sleeve made in the Nepal Himalaya. It can be slipped inside your backpack or carried alone with space for all your work bits and pieces!\&quot;,      \&quot;createdAt\&quot;: \&quot;2022-10-10T19:18:45.612317Z\&quot;,      \&quot;updatedAt\&quot;: \&quot;2022-10-11T18:12:58.825544Z\&quot;  }  &#x60;&#x60;&#x60;
     * @param contentType Type of the content being sent. (required)
     * @param accept HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand. (required)
     * @param productId Product unique identifier number. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getProductDescriptionAsync(String contentType, String accept, String productId, final ApiCallback<GetProductDescription200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = getProductDescriptionValidateBeforeCall(contentType, accept, productId, _callback);
        Type localVarReturnType = new TypeToken<GetProductDescription200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getProductQuery
     * @param contentType Type of the content being sent. (required)
     * @param accept HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand. (required)
     * @param param This part of the path must follow this format: &#x60;{param}&#x3D;{value}&#x60;. Replace &#x60;{param}&#x60; with the name of the parameter used to fetch a product, which can be one of the following: &#x60;external-id&#x60; (product reference unique identifier number in the store), &#x60;sku-id&#x60; (SKU unique identifier number), &#x60;sku-external-id&#x60; (SKU reference unique identifier number in the store) or &#x60;slug&#x60; (reference of the product in the URL of the store). Replace &#x60;{value}&#x60; with the value of the selected param. Make sure there is a &#x60;&#x3D;&#x60; between them. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getProductQueryCall(String contentType, String accept, String param, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/catalog-seller-portal/products/{param}"
            .replace("{" + "param" + "}", localVarApiClient.escapeString(param.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (contentType != null) {
            localVarHeaderParams.put("Content-Type", localVarApiClient.parameterToString(contentType));
        }

        if (accept != null) {
            localVarHeaderParams.put("Accept", localVarApiClient.parameterToString(accept));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "appToken", "appKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getProductQueryValidateBeforeCall(String contentType, String accept, String param, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'contentType' is set
        if (contentType == null) {
            throw new ApiException("Missing the required parameter 'contentType' when calling getProductQuery(Async)");
        }

        // verify the required parameter 'accept' is set
        if (accept == null) {
            throw new ApiException("Missing the required parameter 'accept' when calling getProductQuery(Async)");
        }

        // verify the required parameter 'param' is set
        if (param == null) {
            throw new ApiException("Missing the required parameter 'param' when calling getProductQuery(Async)");
        }

        return getProductQueryCall(contentType, accept, param, _callback);

    }

    /**
     * Get Product by external ID,  SKU ID, SKU external ID or slug
     *  &gt;ðŸ“˜ This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX&#39;s discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests).      Retrieves general information about a product by its external ID, SKU ID, SKU external ID or product slug. The response also has information about the product&#39;s SKUs.   ## Response body example    &#x60;&#x60;&#x60;json  {      \&quot;id\&quot;: \&quot;189371\&quot;,      \&quot;status\&quot;: \&quot;active\&quot;,      \&quot;name\&quot;: \&quot;VTEX 10 Shirt\&quot;,      \&quot;brandId\&quot;: \&quot;1\&quot;,      \&quot;brandName\&quot;: \&quot;AOC\&quot;,      \&quot;categoryIds\&quot;: [          \&quot;732\&quot;      ],      \&quot;categoryNames\&quot;: [          \&quot;/sandboxintegracao/AcessÃ³rios/\&quot;      ],      \&quot;specs\&quot;: [          {              \&quot;name\&quot;: \&quot;Color\&quot;,              \&quot;values\&quot;: [                  \&quot;Black\&quot;,                  \&quot;White\&quot;              ]          },          {              \&quot;name\&quot;: \&quot;Size\&quot;,              \&quot;values\&quot;: [                  \&quot;S\&quot;,                  \&quot;M\&quot;,                  \&quot;L\&quot;              ]          }      ],      \&quot;attributes\&quot;: [          {              \&quot;name\&quot;: \&quot;Fabric\&quot;,              \&quot;value\&quot;: \&quot;Cotton\&quot;          },          {              \&quot;name\&quot;: \&quot;Gender\&quot;,              \&quot;value\&quot;: \&quot;Feminine\&quot;          }      ],      \&quot;slug\&quot;: \&quot;/vtex-shirt\&quot;,      \&quot;images\&quot;: [          {              \&quot;id\&quot;: \&quot;vtex_logo.jpg\&quot;,              \&quot;url\&quot;: \&quot;https://vtxleo7778.vtexassets.com/assets/vtex.catalog-images/products/vtex_logo.jpg\&quot;,              \&quot;alt\&quot;: \&quot;VTEX\&quot;          }      ],      \&quot;skus\&quot;: [          {              \&quot;id\&quot;: \&quot;182907\&quot;,              \&quot;name\&quot;: \&quot;VTEX Shirt Black Size S\&quot;,              \&quot;externalId\&quot;: \&quot;1909621862\&quot;,              \&quot;manufacturerCode\&quot;: \&quot;1234567\&quot;,              \&quot;isActive\&quot;: true,              \&quot;weight\&quot;: 300,              \&quot;dimensions\&quot;: {                  \&quot;width\&quot;: 1.5,                  \&quot;height\&quot;: 2.1,                  \&quot;length\&quot;: 1.6              },              \&quot;specs\&quot;: [                  {                      \&quot;name\&quot;: \&quot;Color\&quot;,                      \&quot;value\&quot;: \&quot;Black\&quot;                  },                  {                      \&quot;name\&quot;: \&quot;Size\&quot;,                      \&quot;value\&quot;: \&quot;S\&quot;                  }              ],              \&quot;images\&quot;: [                  \&quot;vtex_logo.jpg\&quot;              ]          },          {              \&quot;id\&quot;: \&quot;182908\&quot;,              \&quot;name\&quot;: \&quot;VTEX Shirt White Size L\&quot;,              \&quot;externalId\&quot;: \&quot;1909621862\&quot;,              \&quot;manufacturerCode\&quot;: \&quot;1234568\&quot;,              \&quot;isActive\&quot;: true,              \&quot;weight\&quot;: 300,              \&quot;dimensions\&quot;: {                  \&quot;width\&quot;: 1.5,                  \&quot;height\&quot;: 2.1,                  \&quot;length\&quot;: 1.6              },              \&quot;specs\&quot;: [                  {                      \&quot;name\&quot;: \&quot;Color\&quot;,                      \&quot;value\&quot;: \&quot;White\&quot;                  },                  {                      \&quot;name\&quot;: \&quot;Size\&quot;,                      \&quot;value\&quot;: \&quot;L\&quot;                  }              ],              \&quot;images\&quot;: [                  \&quot;vtex_logo.jpg\&quot;              ]          }      ],      \&quot;transportModal\&quot;: \&quot;123\&quot;,      \&quot;taxCode\&quot;: \&quot;100\&quot;,      \&quot;origin\&quot;: \&quot;vtxleo7778\&quot;,      \&quot;createdAt\&quot;: \&quot;2022-10-31T16:28:25.578067Z\&quot;,      \&quot;updatedAt\&quot;: \&quot;2022-10-31T16:28:25.578067Z\&quot;  }  &#x60;&#x60;&#x60;
     * @param contentType Type of the content being sent. (required)
     * @param accept HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand. (required)
     * @param param This part of the path must follow this format: &#x60;{param}&#x3D;{value}&#x60;. Replace &#x60;{param}&#x60; with the name of the parameter used to fetch a product, which can be one of the following: &#x60;external-id&#x60; (product reference unique identifier number in the store), &#x60;sku-id&#x60; (SKU unique identifier number), &#x60;sku-external-id&#x60; (SKU reference unique identifier number in the store) or &#x60;slug&#x60; (reference of the product in the URL of the store). Replace &#x60;{value}&#x60; with the value of the selected param. Make sure there is a &#x60;&#x3D;&#x60; between them. (required)
     * @return GetProductQuery200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public GetProductQuery200Response getProductQuery(String contentType, String accept, String param) throws ApiException {
        ApiResponse<GetProductQuery200Response> localVarResp = getProductQueryWithHttpInfo(contentType, accept, param);
        return localVarResp.getData();
    }

    /**
     * Get Product by external ID,  SKU ID, SKU external ID or slug
     *  &gt;ðŸ“˜ This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX&#39;s discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests).      Retrieves general information about a product by its external ID, SKU ID, SKU external ID or product slug. The response also has information about the product&#39;s SKUs.   ## Response body example    &#x60;&#x60;&#x60;json  {      \&quot;id\&quot;: \&quot;189371\&quot;,      \&quot;status\&quot;: \&quot;active\&quot;,      \&quot;name\&quot;: \&quot;VTEX 10 Shirt\&quot;,      \&quot;brandId\&quot;: \&quot;1\&quot;,      \&quot;brandName\&quot;: \&quot;AOC\&quot;,      \&quot;categoryIds\&quot;: [          \&quot;732\&quot;      ],      \&quot;categoryNames\&quot;: [          \&quot;/sandboxintegracao/AcessÃ³rios/\&quot;      ],      \&quot;specs\&quot;: [          {              \&quot;name\&quot;: \&quot;Color\&quot;,              \&quot;values\&quot;: [                  \&quot;Black\&quot;,                  \&quot;White\&quot;              ]          },          {              \&quot;name\&quot;: \&quot;Size\&quot;,              \&quot;values\&quot;: [                  \&quot;S\&quot;,                  \&quot;M\&quot;,                  \&quot;L\&quot;              ]          }      ],      \&quot;attributes\&quot;: [          {              \&quot;name\&quot;: \&quot;Fabric\&quot;,              \&quot;value\&quot;: \&quot;Cotton\&quot;          },          {              \&quot;name\&quot;: \&quot;Gender\&quot;,              \&quot;value\&quot;: \&quot;Feminine\&quot;          }      ],      \&quot;slug\&quot;: \&quot;/vtex-shirt\&quot;,      \&quot;images\&quot;: [          {              \&quot;id\&quot;: \&quot;vtex_logo.jpg\&quot;,              \&quot;url\&quot;: \&quot;https://vtxleo7778.vtexassets.com/assets/vtex.catalog-images/products/vtex_logo.jpg\&quot;,              \&quot;alt\&quot;: \&quot;VTEX\&quot;          }      ],      \&quot;skus\&quot;: [          {              \&quot;id\&quot;: \&quot;182907\&quot;,              \&quot;name\&quot;: \&quot;VTEX Shirt Black Size S\&quot;,              \&quot;externalId\&quot;: \&quot;1909621862\&quot;,              \&quot;manufacturerCode\&quot;: \&quot;1234567\&quot;,              \&quot;isActive\&quot;: true,              \&quot;weight\&quot;: 300,              \&quot;dimensions\&quot;: {                  \&quot;width\&quot;: 1.5,                  \&quot;height\&quot;: 2.1,                  \&quot;length\&quot;: 1.6              },              \&quot;specs\&quot;: [                  {                      \&quot;name\&quot;: \&quot;Color\&quot;,                      \&quot;value\&quot;: \&quot;Black\&quot;                  },                  {                      \&quot;name\&quot;: \&quot;Size\&quot;,                      \&quot;value\&quot;: \&quot;S\&quot;                  }              ],              \&quot;images\&quot;: [                  \&quot;vtex_logo.jpg\&quot;              ]          },          {              \&quot;id\&quot;: \&quot;182908\&quot;,              \&quot;name\&quot;: \&quot;VTEX Shirt White Size L\&quot;,              \&quot;externalId\&quot;: \&quot;1909621862\&quot;,              \&quot;manufacturerCode\&quot;: \&quot;1234568\&quot;,              \&quot;isActive\&quot;: true,              \&quot;weight\&quot;: 300,              \&quot;dimensions\&quot;: {                  \&quot;width\&quot;: 1.5,                  \&quot;height\&quot;: 2.1,                  \&quot;length\&quot;: 1.6              },              \&quot;specs\&quot;: [                  {                      \&quot;name\&quot;: \&quot;Color\&quot;,                      \&quot;value\&quot;: \&quot;White\&quot;                  },                  {                      \&quot;name\&quot;: \&quot;Size\&quot;,                      \&quot;value\&quot;: \&quot;L\&quot;                  }              ],              \&quot;images\&quot;: [                  \&quot;vtex_logo.jpg\&quot;              ]          }      ],      \&quot;transportModal\&quot;: \&quot;123\&quot;,      \&quot;taxCode\&quot;: \&quot;100\&quot;,      \&quot;origin\&quot;: \&quot;vtxleo7778\&quot;,      \&quot;createdAt\&quot;: \&quot;2022-10-31T16:28:25.578067Z\&quot;,      \&quot;updatedAt\&quot;: \&quot;2022-10-31T16:28:25.578067Z\&quot;  }  &#x60;&#x60;&#x60;
     * @param contentType Type of the content being sent. (required)
     * @param accept HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand. (required)
     * @param param This part of the path must follow this format: &#x60;{param}&#x3D;{value}&#x60;. Replace &#x60;{param}&#x60; with the name of the parameter used to fetch a product, which can be one of the following: &#x60;external-id&#x60; (product reference unique identifier number in the store), &#x60;sku-id&#x60; (SKU unique identifier number), &#x60;sku-external-id&#x60; (SKU reference unique identifier number in the store) or &#x60;slug&#x60; (reference of the product in the URL of the store). Replace &#x60;{value}&#x60; with the value of the selected param. Make sure there is a &#x60;&#x3D;&#x60; between them. (required)
     * @return ApiResponse&lt;GetProductQuery200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetProductQuery200Response> getProductQueryWithHttpInfo(String contentType, String accept, String param) throws ApiException {
        okhttp3.Call localVarCall = getProductQueryValidateBeforeCall(contentType, accept, param, null);
        Type localVarReturnType = new TypeToken<GetProductQuery200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get Product by external ID,  SKU ID, SKU external ID or slug (asynchronously)
     *  &gt;ðŸ“˜ This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX&#39;s discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests).      Retrieves general information about a product by its external ID, SKU ID, SKU external ID or product slug. The response also has information about the product&#39;s SKUs.   ## Response body example    &#x60;&#x60;&#x60;json  {      \&quot;id\&quot;: \&quot;189371\&quot;,      \&quot;status\&quot;: \&quot;active\&quot;,      \&quot;name\&quot;: \&quot;VTEX 10 Shirt\&quot;,      \&quot;brandId\&quot;: \&quot;1\&quot;,      \&quot;brandName\&quot;: \&quot;AOC\&quot;,      \&quot;categoryIds\&quot;: [          \&quot;732\&quot;      ],      \&quot;categoryNames\&quot;: [          \&quot;/sandboxintegracao/AcessÃ³rios/\&quot;      ],      \&quot;specs\&quot;: [          {              \&quot;name\&quot;: \&quot;Color\&quot;,              \&quot;values\&quot;: [                  \&quot;Black\&quot;,                  \&quot;White\&quot;              ]          },          {              \&quot;name\&quot;: \&quot;Size\&quot;,              \&quot;values\&quot;: [                  \&quot;S\&quot;,                  \&quot;M\&quot;,                  \&quot;L\&quot;              ]          }      ],      \&quot;attributes\&quot;: [          {              \&quot;name\&quot;: \&quot;Fabric\&quot;,              \&quot;value\&quot;: \&quot;Cotton\&quot;          },          {              \&quot;name\&quot;: \&quot;Gender\&quot;,              \&quot;value\&quot;: \&quot;Feminine\&quot;          }      ],      \&quot;slug\&quot;: \&quot;/vtex-shirt\&quot;,      \&quot;images\&quot;: [          {              \&quot;id\&quot;: \&quot;vtex_logo.jpg\&quot;,              \&quot;url\&quot;: \&quot;https://vtxleo7778.vtexassets.com/assets/vtex.catalog-images/products/vtex_logo.jpg\&quot;,              \&quot;alt\&quot;: \&quot;VTEX\&quot;          }      ],      \&quot;skus\&quot;: [          {              \&quot;id\&quot;: \&quot;182907\&quot;,              \&quot;name\&quot;: \&quot;VTEX Shirt Black Size S\&quot;,              \&quot;externalId\&quot;: \&quot;1909621862\&quot;,              \&quot;manufacturerCode\&quot;: \&quot;1234567\&quot;,              \&quot;isActive\&quot;: true,              \&quot;weight\&quot;: 300,              \&quot;dimensions\&quot;: {                  \&quot;width\&quot;: 1.5,                  \&quot;height\&quot;: 2.1,                  \&quot;length\&quot;: 1.6              },              \&quot;specs\&quot;: [                  {                      \&quot;name\&quot;: \&quot;Color\&quot;,                      \&quot;value\&quot;: \&quot;Black\&quot;                  },                  {                      \&quot;name\&quot;: \&quot;Size\&quot;,                      \&quot;value\&quot;: \&quot;S\&quot;                  }              ],              \&quot;images\&quot;: [                  \&quot;vtex_logo.jpg\&quot;              ]          },          {              \&quot;id\&quot;: \&quot;182908\&quot;,              \&quot;name\&quot;: \&quot;VTEX Shirt White Size L\&quot;,              \&quot;externalId\&quot;: \&quot;1909621862\&quot;,              \&quot;manufacturerCode\&quot;: \&quot;1234568\&quot;,              \&quot;isActive\&quot;: true,              \&quot;weight\&quot;: 300,              \&quot;dimensions\&quot;: {                  \&quot;width\&quot;: 1.5,                  \&quot;height\&quot;: 2.1,                  \&quot;length\&quot;: 1.6              },              \&quot;specs\&quot;: [                  {                      \&quot;name\&quot;: \&quot;Color\&quot;,                      \&quot;value\&quot;: \&quot;White\&quot;                  },                  {                      \&quot;name\&quot;: \&quot;Size\&quot;,                      \&quot;value\&quot;: \&quot;L\&quot;                  }              ],              \&quot;images\&quot;: [                  \&quot;vtex_logo.jpg\&quot;              ]          }      ],      \&quot;transportModal\&quot;: \&quot;123\&quot;,      \&quot;taxCode\&quot;: \&quot;100\&quot;,      \&quot;origin\&quot;: \&quot;vtxleo7778\&quot;,      \&quot;createdAt\&quot;: \&quot;2022-10-31T16:28:25.578067Z\&quot;,      \&quot;updatedAt\&quot;: \&quot;2022-10-31T16:28:25.578067Z\&quot;  }  &#x60;&#x60;&#x60;
     * @param contentType Type of the content being sent. (required)
     * @param accept HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand. (required)
     * @param param This part of the path must follow this format: &#x60;{param}&#x3D;{value}&#x60;. Replace &#x60;{param}&#x60; with the name of the parameter used to fetch a product, which can be one of the following: &#x60;external-id&#x60; (product reference unique identifier number in the store), &#x60;sku-id&#x60; (SKU unique identifier number), &#x60;sku-external-id&#x60; (SKU reference unique identifier number in the store) or &#x60;slug&#x60; (reference of the product in the URL of the store). Replace &#x60;{value}&#x60; with the value of the selected param. Make sure there is a &#x60;&#x3D;&#x60; between them. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getProductQueryAsync(String contentType, String accept, String param, final ApiCallback<GetProductQuery200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = getProductQueryValidateBeforeCall(contentType, accept, param, _callback);
        Type localVarReturnType = new TypeToken<GetProductQuery200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for postProduct
     * @param contentType Type of the content being sent. (required)
     * @param accept HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand. (required)
     * @param postProductRequest  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call postProductCall(String contentType, String accept, PostProductRequest postProductRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = postProductRequest;

        // create path and map variables
        String localVarPath = "/api/catalog-seller-portal/products";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (contentType != null) {
            localVarHeaderParams.put("Content-Type", localVarApiClient.parameterToString(contentType));
        }

        if (accept != null) {
            localVarHeaderParams.put("Accept", localVarApiClient.parameterToString(accept));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "appToken", "appKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call postProductValidateBeforeCall(String contentType, String accept, PostProductRequest postProductRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'contentType' is set
        if (contentType == null) {
            throw new ApiException("Missing the required parameter 'contentType' when calling postProduct(Async)");
        }

        // verify the required parameter 'accept' is set
        if (accept == null) {
            throw new ApiException("Missing the required parameter 'accept' when calling postProduct(Async)");
        }

        return postProductCall(contentType, accept, postProductRequest, _callback);

    }

    /**
     * Create Product
     *  &gt;ðŸ“˜ This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX&#39;s discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests).      Creates a new product and its SKUs.       ## Request body example    &#x60;&#x60;&#x60;json  {      \&quot;status\&quot;: \&quot;active\&quot;,      \&quot;name\&quot;: \&quot;VTEX 10 Shirt\&quot;,      \&quot;description\&quot;: \&quot;Shirt number 10 by VTEX.\&quot;,      \&quot;brandId\&quot;: \&quot;1\&quot;,      \&quot;categoryIds\&quot;: [          \&quot;732\&quot;      ],      \&quot;specs\&quot;: [          {              \&quot;name\&quot;: \&quot;Color\&quot;,              \&quot;values\&quot;: [                  \&quot;Black\&quot;,                  \&quot;White\&quot;              ]          },          {              \&quot;name\&quot;: \&quot;Size\&quot;,              \&quot;values\&quot;: [                  \&quot;S\&quot;,                  \&quot;M\&quot;,                  \&quot;L\&quot;              ]          }      ],      \&quot;attributes\&quot;: [          {              \&quot;name\&quot;: \&quot;Fabric\&quot;,              \&quot;value\&quot;: \&quot;Cotton\&quot;          },          {              \&quot;name\&quot;: \&quot;Gender\&quot;,              \&quot;value\&quot;: \&quot;Feminine\&quot;          }      ],      \&quot;slug\&quot;: \&quot;/vtex-shirt\&quot;,      \&quot;images\&quot;: [          {              \&quot;id\&quot;: \&quot;vtex_logo.jpg\&quot;,              \&quot;url\&quot;: \&quot;https://vtxleo7778.vtexassets.com/assets/vtex.catalog-images/products/vtex_logo.jpg\&quot;,              \&quot;alt\&quot;: \&quot;VTEX\&quot;          }      ],      \&quot;skus\&quot;: [          {              \&quot;name\&quot;: \&quot;VTEX Shirt Black Size S\&quot;,              \&quot;externalId\&quot;: \&quot;1909621862\&quot;,              \&quot;manufacturerCode\&quot;: \&quot;1234567\&quot;,              \&quot;isActive\&quot;: true,              \&quot;weight\&quot;: 300,              \&quot;dimensions\&quot;: {                  \&quot;width\&quot;: 1.5,                  \&quot;height\&quot;: 2.1,                  \&quot;length\&quot;: 1.6              },              \&quot;specs\&quot;: [                  {                      \&quot;name\&quot;: \&quot;Color\&quot;,                      \&quot;value\&quot;: \&quot;Black\&quot;                  },                  {                      \&quot;name\&quot;: \&quot;Size\&quot;,                      \&quot;value\&quot;: \&quot;S\&quot;                  }              ],              \&quot;images\&quot;: [                  \&quot;vtex_logo.jpg\&quot;              ]          },          {              \&quot;name\&quot;: \&quot;VTEX Shirt White Size L\&quot;,              \&quot;externalId\&quot;: \&quot;1909621862\&quot;,              \&quot;manufacturerCode\&quot;: \&quot;1234568\&quot;,              \&quot;isActive\&quot;: true,              \&quot;weight\&quot;: 300,              \&quot;dimensions\&quot;: {                  \&quot;width\&quot;: 1.5,                  \&quot;height\&quot;: 2.1,                  \&quot;length\&quot;: 1.6              },              \&quot;specs\&quot;: [                  {                      \&quot;name\&quot;: \&quot;Color\&quot;,                      \&quot;value\&quot;: \&quot;White\&quot;                  },                  {                      \&quot;name\&quot;: \&quot;Size\&quot;,                      \&quot;value\&quot;: \&quot;L\&quot;                  }              ],              \&quot;images\&quot;: [                  \&quot;vtex_logo.jpg\&quot;              ]          }      ],      \&quot;origin\&quot;: \&quot;vtxleo7778\&quot;,      \&quot;transportModal\&quot;: \&quot;110\&quot;,      \&quot;taxCode\&quot;: \&quot;234\&quot;  }  &#x60;&#x60;&#x60;    ## Response body example    &#x60;&#x60;&#x60;json  {      \&quot;id\&quot;: \&quot;189371\&quot;,      \&quot;status\&quot;: \&quot;active\&quot;,      \&quot;name\&quot;: \&quot;VTEX 10 Shirt\&quot;,      \&quot;brandId\&quot;: \&quot;1\&quot;,      \&quot;brandName\&quot;: \&quot;AOC\&quot;,      \&quot;categoryIds\&quot;: [          \&quot;732\&quot;      ],      \&quot;categoryNames\&quot;: [          \&quot;/Men/Acessories/\&quot;      ],      \&quot;specs\&quot;: [          {              \&quot;name\&quot;: \&quot;Color\&quot;,              \&quot;values\&quot;: [                  \&quot;Black\&quot;,                  \&quot;White\&quot;              ]          },          {              \&quot;name\&quot;: \&quot;Size\&quot;,              \&quot;values\&quot;: [                  \&quot;S\&quot;,                  \&quot;M\&quot;,                  \&quot;L\&quot;              ]          }      ],      \&quot;attributes\&quot;: [          {              \&quot;name\&quot;: \&quot;Fabric\&quot;,              \&quot;value\&quot;: \&quot;Cotton\&quot;          },          {              \&quot;name\&quot;: \&quot;Gender\&quot;,              \&quot;value\&quot;: \&quot;Feminine\&quot;          }      ],      \&quot;slug\&quot;: \&quot;/vtex-shirt\&quot;,      \&quot;images\&quot;: [          {              \&quot;id\&quot;: \&quot;vtex_logo.jpg\&quot;,              \&quot;url\&quot;: \&quot;https://vtxleo7778.vtexassets.com/assets/vtex.catalog-images/products/vtex_logo.jpg\&quot;,              \&quot;alt\&quot;: \&quot;VTEX\&quot;          }      ],      \&quot;skus\&quot;: [          {              \&quot;id\&quot;: \&quot;182907\&quot;,              \&quot;name\&quot;: \&quot;VTEX Shirt Black Size S\&quot;,              \&quot;externalId\&quot;: \&quot;1909621862\&quot;,              \&quot;manufacturerCode\&quot;: \&quot;1234567\&quot;,              \&quot;isActive\&quot;: true,              \&quot;weight\&quot;: 300,              \&quot;dimensions\&quot;: {                  \&quot;width\&quot;: 1.5,                  \&quot;height\&quot;: 2.1,                  \&quot;length\&quot;: 1.6              },              \&quot;specs\&quot;: [                  {                      \&quot;name\&quot;: \&quot;Color\&quot;,                      \&quot;value\&quot;: \&quot;Black\&quot;                  },                  {                      \&quot;name\&quot;: \&quot;Size\&quot;,                      \&quot;value\&quot;: \&quot;S\&quot;                  }              ],              \&quot;images\&quot;: [                  \&quot;vtex_logo.jpg\&quot;              ]          },          {              \&quot;id\&quot;: \&quot;182908\&quot;,              \&quot;name\&quot;: \&quot;VTEX Shirt White Size L\&quot;,              \&quot;externalId\&quot;: \&quot;1909621862\&quot;,              \&quot;manufacturerCode\&quot;: \&quot;1234568\&quot;,              \&quot;isActive\&quot;: true,              \&quot;weight\&quot;: 300,              \&quot;dimensions\&quot;: {                  \&quot;width\&quot;: 1.5,                  \&quot;height\&quot;: 2.1,                  \&quot;length\&quot;: 1.6              },              \&quot;specs\&quot;: [                  {                      \&quot;name\&quot;: \&quot;Color\&quot;,                      \&quot;value\&quot;: \&quot;White\&quot;                  },                  {                      \&quot;name\&quot;: \&quot;Size\&quot;,                      \&quot;value\&quot;: \&quot;L\&quot;                  }              ],              \&quot;images\&quot;: [                  \&quot;vtex_logo.jpg\&quot;              ]          }      ],      \&quot;origin\&quot;: \&quot;vtxleo7778\&quot;,      \&quot;transportModal\&quot;: \&quot;110\&quot;,      \&quot;taxCode\&quot;: \&quot;234\&quot;,      \&quot;createdAt\&quot;: \&quot;2022-11-01T14:15:54.262702Z\&quot;,      \&quot;updatedAt\&quot;: \&quot;2022-11-01T14:15:54.262702Z\&quot;  }  &#x60;&#x60;&#x60;
     * @param contentType Type of the content being sent. (required)
     * @param accept HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand. (required)
     * @param postProductRequest  (optional)
     * @return PostProduct200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
     </table>
     */
    public PostProduct200Response postProduct(String contentType, String accept, PostProductRequest postProductRequest) throws ApiException {
        ApiResponse<PostProduct200Response> localVarResp = postProductWithHttpInfo(contentType, accept, postProductRequest);
        return localVarResp.getData();
    }

    /**
     * Create Product
     *  &gt;ðŸ“˜ This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX&#39;s discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests).      Creates a new product and its SKUs.       ## Request body example    &#x60;&#x60;&#x60;json  {      \&quot;status\&quot;: \&quot;active\&quot;,      \&quot;name\&quot;: \&quot;VTEX 10 Shirt\&quot;,      \&quot;description\&quot;: \&quot;Shirt number 10 by VTEX.\&quot;,      \&quot;brandId\&quot;: \&quot;1\&quot;,      \&quot;categoryIds\&quot;: [          \&quot;732\&quot;      ],      \&quot;specs\&quot;: [          {              \&quot;name\&quot;: \&quot;Color\&quot;,              \&quot;values\&quot;: [                  \&quot;Black\&quot;,                  \&quot;White\&quot;              ]          },          {              \&quot;name\&quot;: \&quot;Size\&quot;,              \&quot;values\&quot;: [                  \&quot;S\&quot;,                  \&quot;M\&quot;,                  \&quot;L\&quot;              ]          }      ],      \&quot;attributes\&quot;: [          {              \&quot;name\&quot;: \&quot;Fabric\&quot;,              \&quot;value\&quot;: \&quot;Cotton\&quot;          },          {              \&quot;name\&quot;: \&quot;Gender\&quot;,              \&quot;value\&quot;: \&quot;Feminine\&quot;          }      ],      \&quot;slug\&quot;: \&quot;/vtex-shirt\&quot;,      \&quot;images\&quot;: [          {              \&quot;id\&quot;: \&quot;vtex_logo.jpg\&quot;,              \&quot;url\&quot;: \&quot;https://vtxleo7778.vtexassets.com/assets/vtex.catalog-images/products/vtex_logo.jpg\&quot;,              \&quot;alt\&quot;: \&quot;VTEX\&quot;          }      ],      \&quot;skus\&quot;: [          {              \&quot;name\&quot;: \&quot;VTEX Shirt Black Size S\&quot;,              \&quot;externalId\&quot;: \&quot;1909621862\&quot;,              \&quot;manufacturerCode\&quot;: \&quot;1234567\&quot;,              \&quot;isActive\&quot;: true,              \&quot;weight\&quot;: 300,              \&quot;dimensions\&quot;: {                  \&quot;width\&quot;: 1.5,                  \&quot;height\&quot;: 2.1,                  \&quot;length\&quot;: 1.6              },              \&quot;specs\&quot;: [                  {                      \&quot;name\&quot;: \&quot;Color\&quot;,                      \&quot;value\&quot;: \&quot;Black\&quot;                  },                  {                      \&quot;name\&quot;: \&quot;Size\&quot;,                      \&quot;value\&quot;: \&quot;S\&quot;                  }              ],              \&quot;images\&quot;: [                  \&quot;vtex_logo.jpg\&quot;              ]          },          {              \&quot;name\&quot;: \&quot;VTEX Shirt White Size L\&quot;,              \&quot;externalId\&quot;: \&quot;1909621862\&quot;,              \&quot;manufacturerCode\&quot;: \&quot;1234568\&quot;,              \&quot;isActive\&quot;: true,              \&quot;weight\&quot;: 300,              \&quot;dimensions\&quot;: {                  \&quot;width\&quot;: 1.5,                  \&quot;height\&quot;: 2.1,                  \&quot;length\&quot;: 1.6              },              \&quot;specs\&quot;: [                  {                      \&quot;name\&quot;: \&quot;Color\&quot;,                      \&quot;value\&quot;: \&quot;White\&quot;                  },                  {                      \&quot;name\&quot;: \&quot;Size\&quot;,                      \&quot;value\&quot;: \&quot;L\&quot;                  }              ],              \&quot;images\&quot;: [                  \&quot;vtex_logo.jpg\&quot;              ]          }      ],      \&quot;origin\&quot;: \&quot;vtxleo7778\&quot;,      \&quot;transportModal\&quot;: \&quot;110\&quot;,      \&quot;taxCode\&quot;: \&quot;234\&quot;  }  &#x60;&#x60;&#x60;    ## Response body example    &#x60;&#x60;&#x60;json  {      \&quot;id\&quot;: \&quot;189371\&quot;,      \&quot;status\&quot;: \&quot;active\&quot;,      \&quot;name\&quot;: \&quot;VTEX 10 Shirt\&quot;,      \&quot;brandId\&quot;: \&quot;1\&quot;,      \&quot;brandName\&quot;: \&quot;AOC\&quot;,      \&quot;categoryIds\&quot;: [          \&quot;732\&quot;      ],      \&quot;categoryNames\&quot;: [          \&quot;/Men/Acessories/\&quot;      ],      \&quot;specs\&quot;: [          {              \&quot;name\&quot;: \&quot;Color\&quot;,              \&quot;values\&quot;: [                  \&quot;Black\&quot;,                  \&quot;White\&quot;              ]          },          {              \&quot;name\&quot;: \&quot;Size\&quot;,              \&quot;values\&quot;: [                  \&quot;S\&quot;,                  \&quot;M\&quot;,                  \&quot;L\&quot;              ]          }      ],      \&quot;attributes\&quot;: [          {              \&quot;name\&quot;: \&quot;Fabric\&quot;,              \&quot;value\&quot;: \&quot;Cotton\&quot;          },          {              \&quot;name\&quot;: \&quot;Gender\&quot;,              \&quot;value\&quot;: \&quot;Feminine\&quot;          }      ],      \&quot;slug\&quot;: \&quot;/vtex-shirt\&quot;,      \&quot;images\&quot;: [          {              \&quot;id\&quot;: \&quot;vtex_logo.jpg\&quot;,              \&quot;url\&quot;: \&quot;https://vtxleo7778.vtexassets.com/assets/vtex.catalog-images/products/vtex_logo.jpg\&quot;,              \&quot;alt\&quot;: \&quot;VTEX\&quot;          }      ],      \&quot;skus\&quot;: [          {              \&quot;id\&quot;: \&quot;182907\&quot;,              \&quot;name\&quot;: \&quot;VTEX Shirt Black Size S\&quot;,              \&quot;externalId\&quot;: \&quot;1909621862\&quot;,              \&quot;manufacturerCode\&quot;: \&quot;1234567\&quot;,              \&quot;isActive\&quot;: true,              \&quot;weight\&quot;: 300,              \&quot;dimensions\&quot;: {                  \&quot;width\&quot;: 1.5,                  \&quot;height\&quot;: 2.1,                  \&quot;length\&quot;: 1.6              },              \&quot;specs\&quot;: [                  {                      \&quot;name\&quot;: \&quot;Color\&quot;,                      \&quot;value\&quot;: \&quot;Black\&quot;                  },                  {                      \&quot;name\&quot;: \&quot;Size\&quot;,                      \&quot;value\&quot;: \&quot;S\&quot;                  }              ],              \&quot;images\&quot;: [                  \&quot;vtex_logo.jpg\&quot;              ]          },          {              \&quot;id\&quot;: \&quot;182908\&quot;,              \&quot;name\&quot;: \&quot;VTEX Shirt White Size L\&quot;,              \&quot;externalId\&quot;: \&quot;1909621862\&quot;,              \&quot;manufacturerCode\&quot;: \&quot;1234568\&quot;,              \&quot;isActive\&quot;: true,              \&quot;weight\&quot;: 300,              \&quot;dimensions\&quot;: {                  \&quot;width\&quot;: 1.5,                  \&quot;height\&quot;: 2.1,                  \&quot;length\&quot;: 1.6              },              \&quot;specs\&quot;: [                  {                      \&quot;name\&quot;: \&quot;Color\&quot;,                      \&quot;value\&quot;: \&quot;White\&quot;                  },                  {                      \&quot;name\&quot;: \&quot;Size\&quot;,                      \&quot;value\&quot;: \&quot;L\&quot;                  }              ],              \&quot;images\&quot;: [                  \&quot;vtex_logo.jpg\&quot;              ]          }      ],      \&quot;origin\&quot;: \&quot;vtxleo7778\&quot;,      \&quot;transportModal\&quot;: \&quot;110\&quot;,      \&quot;taxCode\&quot;: \&quot;234\&quot;,      \&quot;createdAt\&quot;: \&quot;2022-11-01T14:15:54.262702Z\&quot;,      \&quot;updatedAt\&quot;: \&quot;2022-11-01T14:15:54.262702Z\&quot;  }  &#x60;&#x60;&#x60;
     * @param contentType Type of the content being sent. (required)
     * @param accept HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand. (required)
     * @param postProductRequest  (optional)
     * @return ApiResponse&lt;PostProduct200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<PostProduct200Response> postProductWithHttpInfo(String contentType, String accept, PostProductRequest postProductRequest) throws ApiException {
        okhttp3.Call localVarCall = postProductValidateBeforeCall(contentType, accept, postProductRequest, null);
        Type localVarReturnType = new TypeToken<PostProduct200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Create Product (asynchronously)
     *  &gt;ðŸ“˜ This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX&#39;s discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests).      Creates a new product and its SKUs.       ## Request body example    &#x60;&#x60;&#x60;json  {      \&quot;status\&quot;: \&quot;active\&quot;,      \&quot;name\&quot;: \&quot;VTEX 10 Shirt\&quot;,      \&quot;description\&quot;: \&quot;Shirt number 10 by VTEX.\&quot;,      \&quot;brandId\&quot;: \&quot;1\&quot;,      \&quot;categoryIds\&quot;: [          \&quot;732\&quot;      ],      \&quot;specs\&quot;: [          {              \&quot;name\&quot;: \&quot;Color\&quot;,              \&quot;values\&quot;: [                  \&quot;Black\&quot;,                  \&quot;White\&quot;              ]          },          {              \&quot;name\&quot;: \&quot;Size\&quot;,              \&quot;values\&quot;: [                  \&quot;S\&quot;,                  \&quot;M\&quot;,                  \&quot;L\&quot;              ]          }      ],      \&quot;attributes\&quot;: [          {              \&quot;name\&quot;: \&quot;Fabric\&quot;,              \&quot;value\&quot;: \&quot;Cotton\&quot;          },          {              \&quot;name\&quot;: \&quot;Gender\&quot;,              \&quot;value\&quot;: \&quot;Feminine\&quot;          }      ],      \&quot;slug\&quot;: \&quot;/vtex-shirt\&quot;,      \&quot;images\&quot;: [          {              \&quot;id\&quot;: \&quot;vtex_logo.jpg\&quot;,              \&quot;url\&quot;: \&quot;https://vtxleo7778.vtexassets.com/assets/vtex.catalog-images/products/vtex_logo.jpg\&quot;,              \&quot;alt\&quot;: \&quot;VTEX\&quot;          }      ],      \&quot;skus\&quot;: [          {              \&quot;name\&quot;: \&quot;VTEX Shirt Black Size S\&quot;,              \&quot;externalId\&quot;: \&quot;1909621862\&quot;,              \&quot;manufacturerCode\&quot;: \&quot;1234567\&quot;,              \&quot;isActive\&quot;: true,              \&quot;weight\&quot;: 300,              \&quot;dimensions\&quot;: {                  \&quot;width\&quot;: 1.5,                  \&quot;height\&quot;: 2.1,                  \&quot;length\&quot;: 1.6              },              \&quot;specs\&quot;: [                  {                      \&quot;name\&quot;: \&quot;Color\&quot;,                      \&quot;value\&quot;: \&quot;Black\&quot;                  },                  {                      \&quot;name\&quot;: \&quot;Size\&quot;,                      \&quot;value\&quot;: \&quot;S\&quot;                  }              ],              \&quot;images\&quot;: [                  \&quot;vtex_logo.jpg\&quot;              ]          },          {              \&quot;name\&quot;: \&quot;VTEX Shirt White Size L\&quot;,              \&quot;externalId\&quot;: \&quot;1909621862\&quot;,              \&quot;manufacturerCode\&quot;: \&quot;1234568\&quot;,              \&quot;isActive\&quot;: true,              \&quot;weight\&quot;: 300,              \&quot;dimensions\&quot;: {                  \&quot;width\&quot;: 1.5,                  \&quot;height\&quot;: 2.1,                  \&quot;length\&quot;: 1.6              },              \&quot;specs\&quot;: [                  {                      \&quot;name\&quot;: \&quot;Color\&quot;,                      \&quot;value\&quot;: \&quot;White\&quot;                  },                  {                      \&quot;name\&quot;: \&quot;Size\&quot;,                      \&quot;value\&quot;: \&quot;L\&quot;                  }              ],              \&quot;images\&quot;: [                  \&quot;vtex_logo.jpg\&quot;              ]          }      ],      \&quot;origin\&quot;: \&quot;vtxleo7778\&quot;,      \&quot;transportModal\&quot;: \&quot;110\&quot;,      \&quot;taxCode\&quot;: \&quot;234\&quot;  }  &#x60;&#x60;&#x60;    ## Response body example    &#x60;&#x60;&#x60;json  {      \&quot;id\&quot;: \&quot;189371\&quot;,      \&quot;status\&quot;: \&quot;active\&quot;,      \&quot;name\&quot;: \&quot;VTEX 10 Shirt\&quot;,      \&quot;brandId\&quot;: \&quot;1\&quot;,      \&quot;brandName\&quot;: \&quot;AOC\&quot;,      \&quot;categoryIds\&quot;: [          \&quot;732\&quot;      ],      \&quot;categoryNames\&quot;: [          \&quot;/Men/Acessories/\&quot;      ],      \&quot;specs\&quot;: [          {              \&quot;name\&quot;: \&quot;Color\&quot;,              \&quot;values\&quot;: [                  \&quot;Black\&quot;,                  \&quot;White\&quot;              ]          },          {              \&quot;name\&quot;: \&quot;Size\&quot;,              \&quot;values\&quot;: [                  \&quot;S\&quot;,                  \&quot;M\&quot;,                  \&quot;L\&quot;              ]          }      ],      \&quot;attributes\&quot;: [          {              \&quot;name\&quot;: \&quot;Fabric\&quot;,              \&quot;value\&quot;: \&quot;Cotton\&quot;          },          {              \&quot;name\&quot;: \&quot;Gender\&quot;,              \&quot;value\&quot;: \&quot;Feminine\&quot;          }      ],      \&quot;slug\&quot;: \&quot;/vtex-shirt\&quot;,      \&quot;images\&quot;: [          {              \&quot;id\&quot;: \&quot;vtex_logo.jpg\&quot;,              \&quot;url\&quot;: \&quot;https://vtxleo7778.vtexassets.com/assets/vtex.catalog-images/products/vtex_logo.jpg\&quot;,              \&quot;alt\&quot;: \&quot;VTEX\&quot;          }      ],      \&quot;skus\&quot;: [          {              \&quot;id\&quot;: \&quot;182907\&quot;,              \&quot;name\&quot;: \&quot;VTEX Shirt Black Size S\&quot;,              \&quot;externalId\&quot;: \&quot;1909621862\&quot;,              \&quot;manufacturerCode\&quot;: \&quot;1234567\&quot;,              \&quot;isActive\&quot;: true,              \&quot;weight\&quot;: 300,              \&quot;dimensions\&quot;: {                  \&quot;width\&quot;: 1.5,                  \&quot;height\&quot;: 2.1,                  \&quot;length\&quot;: 1.6              },              \&quot;specs\&quot;: [                  {                      \&quot;name\&quot;: \&quot;Color\&quot;,                      \&quot;value\&quot;: \&quot;Black\&quot;                  },                  {                      \&quot;name\&quot;: \&quot;Size\&quot;,                      \&quot;value\&quot;: \&quot;S\&quot;                  }              ],              \&quot;images\&quot;: [                  \&quot;vtex_logo.jpg\&quot;              ]          },          {              \&quot;id\&quot;: \&quot;182908\&quot;,              \&quot;name\&quot;: \&quot;VTEX Shirt White Size L\&quot;,              \&quot;externalId\&quot;: \&quot;1909621862\&quot;,              \&quot;manufacturerCode\&quot;: \&quot;1234568\&quot;,              \&quot;isActive\&quot;: true,              \&quot;weight\&quot;: 300,              \&quot;dimensions\&quot;: {                  \&quot;width\&quot;: 1.5,                  \&quot;height\&quot;: 2.1,                  \&quot;length\&quot;: 1.6              },              \&quot;specs\&quot;: [                  {                      \&quot;name\&quot;: \&quot;Color\&quot;,                      \&quot;value\&quot;: \&quot;White\&quot;                  },                  {                      \&quot;name\&quot;: \&quot;Size\&quot;,                      \&quot;value\&quot;: \&quot;L\&quot;                  }              ],              \&quot;images\&quot;: [                  \&quot;vtex_logo.jpg\&quot;              ]          }      ],      \&quot;origin\&quot;: \&quot;vtxleo7778\&quot;,      \&quot;transportModal\&quot;: \&quot;110\&quot;,      \&quot;taxCode\&quot;: \&quot;234\&quot;,      \&quot;createdAt\&quot;: \&quot;2022-11-01T14:15:54.262702Z\&quot;,      \&quot;updatedAt\&quot;: \&quot;2022-11-01T14:15:54.262702Z\&quot;  }  &#x60;&#x60;&#x60;
     * @param contentType Type of the content being sent. (required)
     * @param accept HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand. (required)
     * @param postProductRequest  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call postProductAsync(String contentType, String accept, PostProductRequest postProductRequest, final ApiCallback<PostProduct200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = postProductValidateBeforeCall(contentType, accept, postProductRequest, _callback);
        Type localVarReturnType = new TypeToken<PostProduct200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for putProduct
     * @param contentType Type of the content being sent. (required)
     * @param accept HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand. (required)
     * @param productId Product unique identifier number. (required)
     * @param putProductRequest  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call putProductCall(String contentType, String accept, String productId, PutProductRequest putProductRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = putProductRequest;

        // create path and map variables
        String localVarPath = "/api/catalog-seller-portal/products/{productId}"
            .replace("{" + "productId" + "}", localVarApiClient.escapeString(productId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (contentType != null) {
            localVarHeaderParams.put("Content-Type", localVarApiClient.parameterToString(contentType));
        }

        if (accept != null) {
            localVarHeaderParams.put("Accept", localVarApiClient.parameterToString(accept));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "appToken", "appKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call putProductValidateBeforeCall(String contentType, String accept, String productId, PutProductRequest putProductRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'contentType' is set
        if (contentType == null) {
            throw new ApiException("Missing the required parameter 'contentType' when calling putProduct(Async)");
        }

        // verify the required parameter 'accept' is set
        if (accept == null) {
            throw new ApiException("Missing the required parameter 'accept' when calling putProduct(Async)");
        }

        // verify the required parameter 'productId' is set
        if (productId == null) {
            throw new ApiException("Missing the required parameter 'productId' when calling putProduct(Async)");
        }

        return putProductCall(contentType, accept, productId, putProductRequest, _callback);

    }

    /**
     * Update Product
     *  &gt;ðŸ“˜ This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX&#39;s discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests).      Updates an existing product and its SKUs.     ## Request body example    &#x60;&#x60;&#x60;json  {      \&quot;id\&quot;: \&quot;189371\&quot;,      \&quot;status\&quot;: \&quot;active\&quot;,      \&quot;name\&quot;: \&quot;VTEX 10 Shirt\&quot;,      \&quot;description\&quot;: \&quot;Shirt number 10 by VTEX.\&quot;,      \&quot;brandId\&quot;: \&quot;1\&quot;,      \&quot;categoryIds\&quot;: [          \&quot;732\&quot;      ],      \&quot;specs\&quot;: [          {              \&quot;name\&quot;: \&quot;Color\&quot;,              \&quot;values\&quot;: [                  \&quot;Black\&quot;,                  \&quot;White\&quot;              ]          },          {              \&quot;name\&quot;: \&quot;Size\&quot;,              \&quot;values\&quot;: [                  \&quot;S\&quot;,                  \&quot;M\&quot;,                  \&quot;L\&quot;              ]          }      ],      \&quot;attributes\&quot;: [          {              \&quot;name\&quot;: \&quot;Fabric\&quot;,              \&quot;value\&quot;: \&quot;Cotton\&quot;          },          {              \&quot;name\&quot;: \&quot;Gender\&quot;,              \&quot;value\&quot;: \&quot;Feminine\&quot;          }      ],      \&quot;slug\&quot;: \&quot;/vtex-shirt\&quot;,      \&quot;transportModal\&quot;: null,      \&quot;taxCode\&quot;: null,      \&quot;images\&quot;: [          {              \&quot;id\&quot;: \&quot;vtex_logo.jpg\&quot;,              \&quot;url\&quot;: \&quot;https://vtxleo7778.vtexassets.com/assets/vtex.catalog-images/products/vtex_logo.jpg\&quot;,              \&quot;alt\&quot;: \&quot;VTEX\&quot;          }      ],      \&quot;skus\&quot;: [          {              \&quot;name\&quot;: \&quot;VTEX Shirt Black Size S\&quot;,              \&quot;externalId\&quot;: \&quot;1909621862\&quot;,              \&quot;manufacturerCode\&quot;: \&quot;1234567\&quot;,              \&quot;isActive\&quot;: true,              \&quot;weight\&quot;: 300,              \&quot;dimensions\&quot;: {                  \&quot;width\&quot;: 1.5,                  \&quot;height\&quot;: 2.1,                  \&quot;length\&quot;: 1.6              },              \&quot;specs\&quot;: [                  {                      \&quot;name\&quot;: \&quot;Color\&quot;,                      \&quot;value\&quot;: \&quot;Black\&quot;                  },                  {                      \&quot;name\&quot;: \&quot;Size\&quot;,                      \&quot;value\&quot;: \&quot;S\&quot;                  }              ],              \&quot;images\&quot;: [                  \&quot;vtex_logo.jpg\&quot;              ]          },          {              \&quot;name\&quot;: \&quot;VTEX Shirt White Size L\&quot;,              \&quot;externalId\&quot;: \&quot;1909621862\&quot;,              \&quot;manufacturerCode\&quot;: \&quot;1234568\&quot;,              \&quot;isActive\&quot;: true,              \&quot;weight\&quot;: 300,              \&quot;dimensions\&quot;: {                  \&quot;width\&quot;: 1.5,                  \&quot;height\&quot;: 2.1,                  \&quot;length\&quot;: 1.6              },              \&quot;specs\&quot;: [                  {                      \&quot;name\&quot;: \&quot;Color\&quot;,                      \&quot;value\&quot;: \&quot;White\&quot;                  },                  {                      \&quot;name\&quot;: \&quot;Size\&quot;,                      \&quot;value\&quot;: \&quot;L\&quot;                  }              ],              \&quot;images\&quot;: [                  \&quot;vtex_logo.jpg\&quot;              ]          }      ],      \&quot;origin\&quot;: \&quot;vtxleo7778\&quot;  }  &#x60;&#x60;&#x60;
     * @param contentType Type of the content being sent. (required)
     * @param accept HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand. (required)
     * @param productId Product unique identifier number. (required)
     * @param putProductRequest  (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
     </table>
     */
    public void putProduct(String contentType, String accept, String productId, PutProductRequest putProductRequest) throws ApiException {
        putProductWithHttpInfo(contentType, accept, productId, putProductRequest);
    }

    /**
     * Update Product
     *  &gt;ðŸ“˜ This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX&#39;s discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests).      Updates an existing product and its SKUs.     ## Request body example    &#x60;&#x60;&#x60;json  {      \&quot;id\&quot;: \&quot;189371\&quot;,      \&quot;status\&quot;: \&quot;active\&quot;,      \&quot;name\&quot;: \&quot;VTEX 10 Shirt\&quot;,      \&quot;description\&quot;: \&quot;Shirt number 10 by VTEX.\&quot;,      \&quot;brandId\&quot;: \&quot;1\&quot;,      \&quot;categoryIds\&quot;: [          \&quot;732\&quot;      ],      \&quot;specs\&quot;: [          {              \&quot;name\&quot;: \&quot;Color\&quot;,              \&quot;values\&quot;: [                  \&quot;Black\&quot;,                  \&quot;White\&quot;              ]          },          {              \&quot;name\&quot;: \&quot;Size\&quot;,              \&quot;values\&quot;: [                  \&quot;S\&quot;,                  \&quot;M\&quot;,                  \&quot;L\&quot;              ]          }      ],      \&quot;attributes\&quot;: [          {              \&quot;name\&quot;: \&quot;Fabric\&quot;,              \&quot;value\&quot;: \&quot;Cotton\&quot;          },          {              \&quot;name\&quot;: \&quot;Gender\&quot;,              \&quot;value\&quot;: \&quot;Feminine\&quot;          }      ],      \&quot;slug\&quot;: \&quot;/vtex-shirt\&quot;,      \&quot;transportModal\&quot;: null,      \&quot;taxCode\&quot;: null,      \&quot;images\&quot;: [          {              \&quot;id\&quot;: \&quot;vtex_logo.jpg\&quot;,              \&quot;url\&quot;: \&quot;https://vtxleo7778.vtexassets.com/assets/vtex.catalog-images/products/vtex_logo.jpg\&quot;,              \&quot;alt\&quot;: \&quot;VTEX\&quot;          }      ],      \&quot;skus\&quot;: [          {              \&quot;name\&quot;: \&quot;VTEX Shirt Black Size S\&quot;,              \&quot;externalId\&quot;: \&quot;1909621862\&quot;,              \&quot;manufacturerCode\&quot;: \&quot;1234567\&quot;,              \&quot;isActive\&quot;: true,              \&quot;weight\&quot;: 300,              \&quot;dimensions\&quot;: {                  \&quot;width\&quot;: 1.5,                  \&quot;height\&quot;: 2.1,                  \&quot;length\&quot;: 1.6              },              \&quot;specs\&quot;: [                  {                      \&quot;name\&quot;: \&quot;Color\&quot;,                      \&quot;value\&quot;: \&quot;Black\&quot;                  },                  {                      \&quot;name\&quot;: \&quot;Size\&quot;,                      \&quot;value\&quot;: \&quot;S\&quot;                  }              ],              \&quot;images\&quot;: [                  \&quot;vtex_logo.jpg\&quot;              ]          },          {              \&quot;name\&quot;: \&quot;VTEX Shirt White Size L\&quot;,              \&quot;externalId\&quot;: \&quot;1909621862\&quot;,              \&quot;manufacturerCode\&quot;: \&quot;1234568\&quot;,              \&quot;isActive\&quot;: true,              \&quot;weight\&quot;: 300,              \&quot;dimensions\&quot;: {                  \&quot;width\&quot;: 1.5,                  \&quot;height\&quot;: 2.1,                  \&quot;length\&quot;: 1.6              },              \&quot;specs\&quot;: [                  {                      \&quot;name\&quot;: \&quot;Color\&quot;,                      \&quot;value\&quot;: \&quot;White\&quot;                  },                  {                      \&quot;name\&quot;: \&quot;Size\&quot;,                      \&quot;value\&quot;: \&quot;L\&quot;                  }              ],              \&quot;images\&quot;: [                  \&quot;vtex_logo.jpg\&quot;              ]          }      ],      \&quot;origin\&quot;: \&quot;vtxleo7778\&quot;  }  &#x60;&#x60;&#x60;
     * @param contentType Type of the content being sent. (required)
     * @param accept HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand. (required)
     * @param productId Product unique identifier number. (required)
     * @param putProductRequest  (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> putProductWithHttpInfo(String contentType, String accept, String productId, PutProductRequest putProductRequest) throws ApiException {
        okhttp3.Call localVarCall = putProductValidateBeforeCall(contentType, accept, productId, putProductRequest, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Update Product (asynchronously)
     *  &gt;ðŸ“˜ This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX&#39;s discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests).      Updates an existing product and its SKUs.     ## Request body example    &#x60;&#x60;&#x60;json  {      \&quot;id\&quot;: \&quot;189371\&quot;,      \&quot;status\&quot;: \&quot;active\&quot;,      \&quot;name\&quot;: \&quot;VTEX 10 Shirt\&quot;,      \&quot;description\&quot;: \&quot;Shirt number 10 by VTEX.\&quot;,      \&quot;brandId\&quot;: \&quot;1\&quot;,      \&quot;categoryIds\&quot;: [          \&quot;732\&quot;      ],      \&quot;specs\&quot;: [          {              \&quot;name\&quot;: \&quot;Color\&quot;,              \&quot;values\&quot;: [                  \&quot;Black\&quot;,                  \&quot;White\&quot;              ]          },          {              \&quot;name\&quot;: \&quot;Size\&quot;,              \&quot;values\&quot;: [                  \&quot;S\&quot;,                  \&quot;M\&quot;,                  \&quot;L\&quot;              ]          }      ],      \&quot;attributes\&quot;: [          {              \&quot;name\&quot;: \&quot;Fabric\&quot;,              \&quot;value\&quot;: \&quot;Cotton\&quot;          },          {              \&quot;name\&quot;: \&quot;Gender\&quot;,              \&quot;value\&quot;: \&quot;Feminine\&quot;          }      ],      \&quot;slug\&quot;: \&quot;/vtex-shirt\&quot;,      \&quot;transportModal\&quot;: null,      \&quot;taxCode\&quot;: null,      \&quot;images\&quot;: [          {              \&quot;id\&quot;: \&quot;vtex_logo.jpg\&quot;,              \&quot;url\&quot;: \&quot;https://vtxleo7778.vtexassets.com/assets/vtex.catalog-images/products/vtex_logo.jpg\&quot;,              \&quot;alt\&quot;: \&quot;VTEX\&quot;          }      ],      \&quot;skus\&quot;: [          {              \&quot;name\&quot;: \&quot;VTEX Shirt Black Size S\&quot;,              \&quot;externalId\&quot;: \&quot;1909621862\&quot;,              \&quot;manufacturerCode\&quot;: \&quot;1234567\&quot;,              \&quot;isActive\&quot;: true,              \&quot;weight\&quot;: 300,              \&quot;dimensions\&quot;: {                  \&quot;width\&quot;: 1.5,                  \&quot;height\&quot;: 2.1,                  \&quot;length\&quot;: 1.6              },              \&quot;specs\&quot;: [                  {                      \&quot;name\&quot;: \&quot;Color\&quot;,                      \&quot;value\&quot;: \&quot;Black\&quot;                  },                  {                      \&quot;name\&quot;: \&quot;Size\&quot;,                      \&quot;value\&quot;: \&quot;S\&quot;                  }              ],              \&quot;images\&quot;: [                  \&quot;vtex_logo.jpg\&quot;              ]          },          {              \&quot;name\&quot;: \&quot;VTEX Shirt White Size L\&quot;,              \&quot;externalId\&quot;: \&quot;1909621862\&quot;,              \&quot;manufacturerCode\&quot;: \&quot;1234568\&quot;,              \&quot;isActive\&quot;: true,              \&quot;weight\&quot;: 300,              \&quot;dimensions\&quot;: {                  \&quot;width\&quot;: 1.5,                  \&quot;height\&quot;: 2.1,                  \&quot;length\&quot;: 1.6              },              \&quot;specs\&quot;: [                  {                      \&quot;name\&quot;: \&quot;Color\&quot;,                      \&quot;value\&quot;: \&quot;White\&quot;                  },                  {                      \&quot;name\&quot;: \&quot;Size\&quot;,                      \&quot;value\&quot;: \&quot;L\&quot;                  }              ],              \&quot;images\&quot;: [                  \&quot;vtex_logo.jpg\&quot;              ]          }      ],      \&quot;origin\&quot;: \&quot;vtxleo7778\&quot;  }  &#x60;&#x60;&#x60;
     * @param contentType Type of the content being sent. (required)
     * @param accept HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand. (required)
     * @param productId Product unique identifier number. (required)
     * @param putProductRequest  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call putProductAsync(String contentType, String accept, String productId, PutProductRequest putProductRequest, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = putProductValidateBeforeCall(contentType, accept, productId, putProductRequest, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for putProductDescription
     * @param contentType Type of the content being sent. (required)
     * @param accept HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand. (required)
     * @param productId Product unique identifier number. (required)
     * @param putProductDescriptionRequest  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call putProductDescriptionCall(String contentType, String accept, String productId, PutProductDescriptionRequest putProductDescriptionRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = putProductDescriptionRequest;

        // create path and map variables
        String localVarPath = "/api/catalog-seller-portal/products/{productId}/description"
            .replace("{" + "productId" + "}", localVarApiClient.escapeString(productId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (contentType != null) {
            localVarHeaderParams.put("Content-Type", localVarApiClient.parameterToString(contentType));
        }

        if (accept != null) {
            localVarHeaderParams.put("Accept", localVarApiClient.parameterToString(accept));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "appToken", "appKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call putProductDescriptionValidateBeforeCall(String contentType, String accept, String productId, PutProductDescriptionRequest putProductDescriptionRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'contentType' is set
        if (contentType == null) {
            throw new ApiException("Missing the required parameter 'contentType' when calling putProductDescription(Async)");
        }

        // verify the required parameter 'accept' is set
        if (accept == null) {
            throw new ApiException("Missing the required parameter 'accept' when calling putProductDescription(Async)");
        }

        // verify the required parameter 'productId' is set
        if (productId == null) {
            throw new ApiException("Missing the required parameter 'productId' when calling putProductDescription(Async)");
        }

        return putProductDescriptionCall(contentType, accept, productId, putProductDescriptionRequest, _callback);

    }

    /**
     * Update Product Description by Product ID
     *  &gt;ðŸ“˜ This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX&#39;s discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests).      Updates the description of a product given a Product ID.    ## Request body example    &#x60;&#x60;&#x60;json  {      \&quot;productId\&quot;: \&quot;71\&quot;,      \&quot;description\&quot;: \&quot;White shirt.\&quot;  }  &#x60;&#x60;&#x60;
     * @param contentType Type of the content being sent. (required)
     * @param accept HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand. (required)
     * @param productId Product unique identifier number. (required)
     * @param putProductDescriptionRequest  (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
     </table>
     */
    public void putProductDescription(String contentType, String accept, String productId, PutProductDescriptionRequest putProductDescriptionRequest) throws ApiException {
        putProductDescriptionWithHttpInfo(contentType, accept, productId, putProductDescriptionRequest);
    }

    /**
     * Update Product Description by Product ID
     *  &gt;ðŸ“˜ This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX&#39;s discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests).      Updates the description of a product given a Product ID.    ## Request body example    &#x60;&#x60;&#x60;json  {      \&quot;productId\&quot;: \&quot;71\&quot;,      \&quot;description\&quot;: \&quot;White shirt.\&quot;  }  &#x60;&#x60;&#x60;
     * @param contentType Type of the content being sent. (required)
     * @param accept HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand. (required)
     * @param productId Product unique identifier number. (required)
     * @param putProductDescriptionRequest  (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> putProductDescriptionWithHttpInfo(String contentType, String accept, String productId, PutProductDescriptionRequest putProductDescriptionRequest) throws ApiException {
        okhttp3.Call localVarCall = putProductDescriptionValidateBeforeCall(contentType, accept, productId, putProductDescriptionRequest, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Update Product Description by Product ID (asynchronously)
     *  &gt;ðŸ“˜ This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX&#39;s discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests).      Updates the description of a product given a Product ID.    ## Request body example    &#x60;&#x60;&#x60;json  {      \&quot;productId\&quot;: \&quot;71\&quot;,      \&quot;description\&quot;: \&quot;White shirt.\&quot;  }  &#x60;&#x60;&#x60;
     * @param contentType Type of the content being sent. (required)
     * @param accept HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand. (required)
     * @param productId Product unique identifier number. (required)
     * @param putProductDescriptionRequest  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call putProductDescriptionAsync(String contentType, String accept, String productId, PutProductDescriptionRequest putProductDescriptionRequest, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = putProductDescriptionValidateBeforeCall(contentType, accept, productId, putProductDescriptionRequest, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
