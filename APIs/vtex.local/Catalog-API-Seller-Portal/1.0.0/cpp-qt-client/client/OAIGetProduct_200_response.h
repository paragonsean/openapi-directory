/**
 * Catalog API - Seller Portal
 *   With the Catalog API for Seller Portal, you will be able to create, edit and consult products and their variations, brands, and categories.    > This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX's discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests).    ## Index    ### Product    `GET` [Get Product by ID](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/products/-productId-)  `PUT` [Update Product](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#put-/api/catalog-seller-portal/products/-productId-)  `GET` [Get Product Description by Product ID](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/products/-productId-/description)  `PUT` [Update Product Description by Product ID](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#put-/api/catalog-seller-portal/products/-productId-/description)  `GET` [Get Product by external ID, SKU ID, SKU external ID or slug](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/products/-param-)  `POST` [Create Product](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#post-/api/catalog-seller-portal/products)    ### SKU    `GET` [Search for SKU](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/skus/_search)  `GET` [Get List of SKUs](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/skus/ids)    ### Brand    `GET` [Get List of Brands](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/brands)  `POST` [Create a Brand](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#post-/api/catalog-seller-portal/brands)  `GET` [Get Brand by ID](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/brands/-brandId-)  `PUT` [Update Brand](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#put-/api/catalog-seller-portal/brands/-brandId-)    ### Category    `GET` [Get Category Tree](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/category-tree)  `PUT` [Update Category Tree](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#put-/api/catalog-seller-portal/category-tree)  `GET` [Get Category by ID](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/category-tree/categories/-categoryId-)  `POST` [Create a Category](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#post-/api/catalog-seller-portal/category-tree/categories)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetProduct_200_response.h
 *
 * 
 */

#ifndef OAIGetProduct_200_response_H
#define OAIGetProduct_200_response_H

#include <QJsonObject>

#include "OAIAttributes_inner.h"
#include "OAIImages_inner.h"
#include "OAISkus_inner_2.h"
#include "OAISpecs_inner_1.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAttributes_inner;
class OAIImages_inner;
class OAISkus_inner_2;
class OAISpecs_inner_1;

class OAIGetProduct_200_response : public OAIObject {
public:
    OAIGetProduct_200_response();
    OAIGetProduct_200_response(QString json);
    ~OAIGetProduct_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAttributes_inner> getAttributes() const;
    void setAttributes(const QList<OAIAttributes_inner> &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    QString getBrandId() const;
    void setBrandId(const QString &brand_id);
    bool is_brand_id_Set() const;
    bool is_brand_id_Valid() const;

    QString getBrandName() const;
    void setBrandName(const QString &brand_name);
    bool is_brand_name_Set() const;
    bool is_brand_name_Valid() const;

    QList<QString> getCategoryIds() const;
    void setCategoryIds(const QList<QString> &category_ids);
    bool is_category_ids_Set() const;
    bool is_category_ids_Valid() const;

    QList<QString> getCategoryNames() const;
    void setCategoryNames(const QList<QString> &category_names);
    bool is_category_names_Set() const;
    bool is_category_names_Valid() const;

    QString getCreatedAt() const;
    void setCreatedAt(const QString &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getExternalId() const;
    void setExternalId(const QString &external_id);
    bool is_external_id_Set() const;
    bool is_external_id_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<OAIImages_inner> getImages() const;
    void setImages(const QList<OAIImages_inner> &images);
    bool is_images_Set() const;
    bool is_images_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOrigin() const;
    void setOrigin(const QString &origin);
    bool is_origin_Set() const;
    bool is_origin_Valid() const;

    QList<OAISkus_inner_2> getSkus() const;
    void setSkus(const QList<OAISkus_inner_2> &skus);
    bool is_skus_Set() const;
    bool is_skus_Valid() const;

    QString getSlug() const;
    void setSlug(const QString &slug);
    bool is_slug_Set() const;
    bool is_slug_Valid() const;

    QList<OAISpecs_inner_1> getSpecs() const;
    void setSpecs(const QList<OAISpecs_inner_1> &specs);
    bool is_specs_Set() const;
    bool is_specs_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTaxCode() const;
    void setTaxCode(const QString &tax_code);
    bool is_tax_code_Set() const;
    bool is_tax_code_Valid() const;

    QString getTransportModal() const;
    void setTransportModal(const QString &transport_modal);
    bool is_transport_modal_Set() const;
    bool is_transport_modal_Valid() const;

    QString getUpdatedAt() const;
    void setUpdatedAt(const QString &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAttributes_inner> m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;

    QString m_brand_id;
    bool m_brand_id_isSet;
    bool m_brand_id_isValid;

    QString m_brand_name;
    bool m_brand_name_isSet;
    bool m_brand_name_isValid;

    QList<QString> m_category_ids;
    bool m_category_ids_isSet;
    bool m_category_ids_isValid;

    QList<QString> m_category_names;
    bool m_category_names_isSet;
    bool m_category_names_isValid;

    QString m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_external_id;
    bool m_external_id_isSet;
    bool m_external_id_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<OAIImages_inner> m_images;
    bool m_images_isSet;
    bool m_images_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_origin;
    bool m_origin_isSet;
    bool m_origin_isValid;

    QList<OAISkus_inner_2> m_skus;
    bool m_skus_isSet;
    bool m_skus_isValid;

    QString m_slug;
    bool m_slug_isSet;
    bool m_slug_isValid;

    QList<OAISpecs_inner_1> m_specs;
    bool m_specs_isSet;
    bool m_specs_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_tax_code;
    bool m_tax_code_isSet;
    bool m_tax_code_isValid;

    QString m_transport_modal;
    bool m_transport_modal_isSet;
    bool m_transport_modal_isValid;

    QString m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetProduct_200_response)

#endif // OAIGetProduct_200_response_H
