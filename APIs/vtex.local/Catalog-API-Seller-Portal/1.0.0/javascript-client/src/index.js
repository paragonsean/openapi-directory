/**
 * Catalog API - Seller Portal
 *   With the Catalog API for Seller Portal, you will be able to create, edit and consult products and their variations, brands, and categories.    > This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX's discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests).    ## Index    ### Product    `GET` [Get Product by ID](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/products/-productId-)  `PUT` [Update Product](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#put-/api/catalog-seller-portal/products/-productId-)  `GET` [Get Product Description by Product ID](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/products/-productId-/description)  `PUT` [Update Product Description by Product ID](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#put-/api/catalog-seller-portal/products/-productId-/description)  `GET` [Get Product by external ID, SKU ID, SKU external ID or slug](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/products/-param-)  `POST` [Create Product](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#post-/api/catalog-seller-portal/products)    ### SKU    `GET` [Search for SKU](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/skus/_search)  `GET` [Get List of SKUs](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/skus/ids)    ### Brand    `GET` [Get List of Brands](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/brands)  `POST` [Create a Brand](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#post-/api/catalog-seller-portal/brands)  `GET` [Get Brand by ID](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/brands/-brandId-)  `PUT` [Update Brand](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#put-/api/catalog-seller-portal/brands/-brandId-)    ### Category    `GET` [Get Category Tree](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/category-tree)  `PUT` [Update Category Tree](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#put-/api/catalog-seller-portal/category-tree)  `GET` [Get Category by ID](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/category-tree/categories/-categoryId-)  `POST` [Create a Category](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#post-/api/catalog-seller-portal/category-tree/categories)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AttributesInner from './model/AttributesInner';
import ChildrenInner from './model/ChildrenInner';
import ChildrenInner1 from './model/ChildrenInner1';
import CreateCategoryRequest from './model/CreateCategoryRequest';
import DataInner from './model/DataInner';
import Dimensions from './model/Dimensions';
import GetBrand200Response from './model/GetBrand200Response';
import GetCategoryTree200Response from './model/GetCategoryTree200Response';
import GetProduct200Response from './model/GetProduct200Response';
import GetProductDescription200Response from './model/GetProductDescription200Response';
import GetProductQuery200Response from './model/GetProductQuery200Response';
import Getbyid200Response from './model/Getbyid200Response';
import ImagesInner from './model/ImagesInner';
import ListBrand200Response from './model/ListBrand200Response';
import ListSKU200Response from './model/ListSKU200Response';
import Metadata from './model/Metadata';
import PostBrand200Response from './model/PostBrand200Response';
import PostBrandRequest from './model/PostBrandRequest';
import PostProduct200Response from './model/PostProduct200Response';
import PostProductRequest from './model/PostProductRequest';
import PutBrandRequest from './model/PutBrandRequest';
import PutProductDescriptionRequest from './model/PutProductDescriptionRequest';
import PutProductRequest from './model/PutProductRequest';
import RootsInner from './model/RootsInner';
import SearchSKU200Response from './model/SearchSKU200Response';
import SearchSKU200ResponseDataInner from './model/SearchSKU200ResponseDataInner';
import SearchSKU200ResponseMetadata from './model/SearchSKU200ResponseMetadata';
import SkusInner from './model/SkusInner';
import SkusInner1 from './model/SkusInner1';
import SkusInner2 from './model/SkusInner2';
import SkusInner3 from './model/SkusInner3';
import SpecsInner from './model/SpecsInner';
import SpecsInner1 from './model/SpecsInner1';
import UpdateCategoryTreeRequest from './model/UpdateCategoryTreeRequest';
import Value from './model/Value';
import Value1 from './model/Value1';
import Value2 from './model/Value2';
import BrandApi from './api/BrandApi';
import CategoryApi from './api/CategoryApi';
import ProductApi from './api/ProductApi';
import SKUApi from './api/SKUApi';


/**
*   With the Catalog API for Seller Portal, you will be able to create, edit and consult products and their variations, brands, and categories.    &gt; This API is part of the [Seller Portal Catalog](https://help.vtex.com/en/tutorial/how-the-seller-portal-catalog-works--7pMB6YOt6YQDQQbzFB4Pxp). This functionality is in the Beta stage and can be discontinued at any moment at VTEX&#39;s discretion. VTEX will not be responsible for any instabilities caused by its use or discontinuity. If you have any questions, please contact [our Support Center](https://support.vtex.com/hc/en-us/requests).    ## Index    ### Product    &#x60;GET&#x60; [Get Product by ID](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/products/-productId-)  &#x60;PUT&#x60; [Update Product](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#put-/api/catalog-seller-portal/products/-productId-)  &#x60;GET&#x60; [Get Product Description by Product ID](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/products/-productId-/description)  &#x60;PUT&#x60; [Update Product Description by Product ID](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#put-/api/catalog-seller-portal/products/-productId-/description)  &#x60;GET&#x60; [Get Product by external ID, SKU ID, SKU external ID or slug](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/products/-param-)  &#x60;POST&#x60; [Create Product](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#post-/api/catalog-seller-portal/products)    ### SKU    &#x60;GET&#x60; [Search for SKU](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/skus/_search)  &#x60;GET&#x60; [Get List of SKUs](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/skus/ids)    ### Brand    &#x60;GET&#x60; [Get List of Brands](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/brands)  &#x60;POST&#x60; [Create a Brand](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#post-/api/catalog-seller-portal/brands)  &#x60;GET&#x60; [Get Brand by ID](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/brands/-brandId-)  &#x60;PUT&#x60; [Update Brand](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#put-/api/catalog-seller-portal/brands/-brandId-)    ### Category    &#x60;GET&#x60; [Get Category Tree](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/category-tree)  &#x60;PUT&#x60; [Update Category Tree](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#put-/api/catalog-seller-portal/category-tree)  &#x60;GET&#x60; [Get Category by ID](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#get-/api/catalog-seller-portal/category-tree/categories/-categoryId-)  &#x60;POST&#x60; [Create a Category](https://developers.vtex.com/docs/api-reference/catalog-api-seller-portal#post-/api/catalog-seller-portal/category-tree/categories).<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var CatalogApiSellerPortal = require('index'); // See note below*.
* var xxxSvc = new CatalogApiSellerPortal.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new CatalogApiSellerPortal.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new CatalogApiSellerPortal.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new CatalogApiSellerPortal.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AttributesInner model constructor.
     * @property {module:model/AttributesInner}
     */
    AttributesInner,

    /**
     * The ChildrenInner model constructor.
     * @property {module:model/ChildrenInner}
     */
    ChildrenInner,

    /**
     * The ChildrenInner1 model constructor.
     * @property {module:model/ChildrenInner1}
     */
    ChildrenInner1,

    /**
     * The CreateCategoryRequest model constructor.
     * @property {module:model/CreateCategoryRequest}
     */
    CreateCategoryRequest,

    /**
     * The DataInner model constructor.
     * @property {module:model/DataInner}
     */
    DataInner,

    /**
     * The Dimensions model constructor.
     * @property {module:model/Dimensions}
     */
    Dimensions,

    /**
     * The GetBrand200Response model constructor.
     * @property {module:model/GetBrand200Response}
     */
    GetBrand200Response,

    /**
     * The GetCategoryTree200Response model constructor.
     * @property {module:model/GetCategoryTree200Response}
     */
    GetCategoryTree200Response,

    /**
     * The GetProduct200Response model constructor.
     * @property {module:model/GetProduct200Response}
     */
    GetProduct200Response,

    /**
     * The GetProductDescription200Response model constructor.
     * @property {module:model/GetProductDescription200Response}
     */
    GetProductDescription200Response,

    /**
     * The GetProductQuery200Response model constructor.
     * @property {module:model/GetProductQuery200Response}
     */
    GetProductQuery200Response,

    /**
     * The Getbyid200Response model constructor.
     * @property {module:model/Getbyid200Response}
     */
    Getbyid200Response,

    /**
     * The ImagesInner model constructor.
     * @property {module:model/ImagesInner}
     */
    ImagesInner,

    /**
     * The ListBrand200Response model constructor.
     * @property {module:model/ListBrand200Response}
     */
    ListBrand200Response,

    /**
     * The ListSKU200Response model constructor.
     * @property {module:model/ListSKU200Response}
     */
    ListSKU200Response,

    /**
     * The Metadata model constructor.
     * @property {module:model/Metadata}
     */
    Metadata,

    /**
     * The PostBrand200Response model constructor.
     * @property {module:model/PostBrand200Response}
     */
    PostBrand200Response,

    /**
     * The PostBrandRequest model constructor.
     * @property {module:model/PostBrandRequest}
     */
    PostBrandRequest,

    /**
     * The PostProduct200Response model constructor.
     * @property {module:model/PostProduct200Response}
     */
    PostProduct200Response,

    /**
     * The PostProductRequest model constructor.
     * @property {module:model/PostProductRequest}
     */
    PostProductRequest,

    /**
     * The PutBrandRequest model constructor.
     * @property {module:model/PutBrandRequest}
     */
    PutBrandRequest,

    /**
     * The PutProductDescriptionRequest model constructor.
     * @property {module:model/PutProductDescriptionRequest}
     */
    PutProductDescriptionRequest,

    /**
     * The PutProductRequest model constructor.
     * @property {module:model/PutProductRequest}
     */
    PutProductRequest,

    /**
     * The RootsInner model constructor.
     * @property {module:model/RootsInner}
     */
    RootsInner,

    /**
     * The SearchSKU200Response model constructor.
     * @property {module:model/SearchSKU200Response}
     */
    SearchSKU200Response,

    /**
     * The SearchSKU200ResponseDataInner model constructor.
     * @property {module:model/SearchSKU200ResponseDataInner}
     */
    SearchSKU200ResponseDataInner,

    /**
     * The SearchSKU200ResponseMetadata model constructor.
     * @property {module:model/SearchSKU200ResponseMetadata}
     */
    SearchSKU200ResponseMetadata,

    /**
     * The SkusInner model constructor.
     * @property {module:model/SkusInner}
     */
    SkusInner,

    /**
     * The SkusInner1 model constructor.
     * @property {module:model/SkusInner1}
     */
    SkusInner1,

    /**
     * The SkusInner2 model constructor.
     * @property {module:model/SkusInner2}
     */
    SkusInner2,

    /**
     * The SkusInner3 model constructor.
     * @property {module:model/SkusInner3}
     */
    SkusInner3,

    /**
     * The SpecsInner model constructor.
     * @property {module:model/SpecsInner}
     */
    SpecsInner,

    /**
     * The SpecsInner1 model constructor.
     * @property {module:model/SpecsInner1}
     */
    SpecsInner1,

    /**
     * The UpdateCategoryTreeRequest model constructor.
     * @property {module:model/UpdateCategoryTreeRequest}
     */
    UpdateCategoryTreeRequest,

    /**
     * The Value model constructor.
     * @property {module:model/Value}
     */
    Value,

    /**
     * The Value1 model constructor.
     * @property {module:model/Value1}
     */
    Value1,

    /**
     * The Value2 model constructor.
     * @property {module:model/Value2}
     */
    Value2,

    /**
    * The BrandApi service constructor.
    * @property {module:api/BrandApi}
    */
    BrandApi,

    /**
    * The CategoryApi service constructor.
    * @property {module:api/CategoryApi}
    */
    CategoryApi,

    /**
    * The ProductApi service constructor.
    * @property {module:api/ProductApi}
    */
    ProductApi,

    /**
    * The SKUApi service constructor.
    * @property {module:api/SKUApi}
    */
    SKUApi
};
