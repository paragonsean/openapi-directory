/**
 * Legacy Search API
 *   > Check the new [Search onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/search-onboarding). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Search and is organized by focusing on the developer's journey.    This API lets you search and sort products in the Catalog using Fulltext, Category and Brand search terms.     Retrieve product data to create custom searches and product shelves.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOffers_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOffers_inner::OAIOffers_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOffers_inner::OAIOffers_inner() {
    this->initializeModel();
}

OAIOffers_inner::~OAIOffers_inner() {}

void OAIOffers_inner::initializeModel() {

    m_available_sales_channels_isSet = false;
    m_available_sales_channels_isValid = false;

    m_offers_per_sales_channel_isSet = false;
    m_offers_per_sales_channel_isValid = false;

    m_seller_id_isSet = false;
    m_seller_id_isValid = false;

    m_seller_sku_id_isSet = false;
    m_seller_sku_id_isValid = false;
}

void OAIOffers_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOffers_inner::fromJsonObject(QJsonObject json) {

    m_available_sales_channels_isValid = ::OpenAPI::fromJsonValue(m_available_sales_channels, json[QString("AvailableSalesChannels")]);
    m_available_sales_channels_isSet = !json[QString("AvailableSalesChannels")].isNull() && m_available_sales_channels_isValid;

    m_offers_per_sales_channel_isValid = ::OpenAPI::fromJsonValue(m_offers_per_sales_channel, json[QString("OffersPerSalesChannel")]);
    m_offers_per_sales_channel_isSet = !json[QString("OffersPerSalesChannel")].isNull() && m_offers_per_sales_channel_isValid;

    m_seller_id_isValid = ::OpenAPI::fromJsonValue(m_seller_id, json[QString("SellerId")]);
    m_seller_id_isSet = !json[QString("SellerId")].isNull() && m_seller_id_isValid;

    m_seller_sku_id_isValid = ::OpenAPI::fromJsonValue(m_seller_sku_id, json[QString("SellerSkuId")]);
    m_seller_sku_id_isSet = !json[QString("SellerSkuId")].isNull() && m_seller_sku_id_isValid;
}

QString OAIOffers_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOffers_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_available_sales_channels_isSet) {
        obj.insert(QString("AvailableSalesChannels"), ::OpenAPI::toJsonValue(m_available_sales_channels));
    }
    if (m_offers_per_sales_channel.size() > 0) {
        obj.insert(QString("OffersPerSalesChannel"), ::OpenAPI::toJsonValue(m_offers_per_sales_channel));
    }
    if (m_seller_id_isSet) {
        obj.insert(QString("SellerId"), ::OpenAPI::toJsonValue(m_seller_id));
    }
    if (m_seller_sku_id_isSet) {
        obj.insert(QString("SellerSkuId"), ::OpenAPI::toJsonValue(m_seller_sku_id));
    }
    return obj;
}

QString OAIOffers_inner::getAvailableSalesChannels() const {
    return m_available_sales_channels;
}
void OAIOffers_inner::setAvailableSalesChannels(const QString &available_sales_channels) {
    m_available_sales_channels = available_sales_channels;
    m_available_sales_channels_isSet = true;
}

bool OAIOffers_inner::is_available_sales_channels_Set() const{
    return m_available_sales_channels_isSet;
}

bool OAIOffers_inner::is_available_sales_channels_Valid() const{
    return m_available_sales_channels_isValid;
}

QList<OAIOffersPerSalesChannel_inner> OAIOffers_inner::getOffersPerSalesChannel() const {
    return m_offers_per_sales_channel;
}
void OAIOffers_inner::setOffersPerSalesChannel(const QList<OAIOffersPerSalesChannel_inner> &offers_per_sales_channel) {
    m_offers_per_sales_channel = offers_per_sales_channel;
    m_offers_per_sales_channel_isSet = true;
}

bool OAIOffers_inner::is_offers_per_sales_channel_Set() const{
    return m_offers_per_sales_channel_isSet;
}

bool OAIOffers_inner::is_offers_per_sales_channel_Valid() const{
    return m_offers_per_sales_channel_isValid;
}

QString OAIOffers_inner::getSellerId() const {
    return m_seller_id;
}
void OAIOffers_inner::setSellerId(const QString &seller_id) {
    m_seller_id = seller_id;
    m_seller_id_isSet = true;
}

bool OAIOffers_inner::is_seller_id_Set() const{
    return m_seller_id_isSet;
}

bool OAIOffers_inner::is_seller_id_Valid() const{
    return m_seller_id_isValid;
}

QString OAIOffers_inner::getSellerSkuId() const {
    return m_seller_sku_id;
}
void OAIOffers_inner::setSellerSkuId(const QString &seller_sku_id) {
    m_seller_sku_id = seller_sku_id;
    m_seller_sku_id_isSet = true;
}

bool OAIOffers_inner::is_seller_sku_id_Set() const{
    return m_seller_sku_id_isSet;
}

bool OAIOffers_inner::is_seller_sku_id_Valid() const{
    return m_seller_sku_id_isValid;
}

bool OAIOffers_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_available_sales_channels_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_offers_per_sales_channel.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_seller_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_seller_sku_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOffers_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_available_sales_channels_isValid && m_offers_per_sales_channel_isValid && m_seller_id_isValid && m_seller_sku_id_isValid && true;
}

} // namespace OpenAPI
