/**
 * Legacy Search API
 *   > Check the new [Search onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/search-onboarding). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Search and is organized by focusing on the developer's journey.    This API lets you search and sort products in the Catalog using Fulltext, Category and Brand search terms.     Retrieve product data to create custom searches and product shelves.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFacetscategory_200_response.h
 *
 * 
 */

#ifndef OAIFacetscategory_200_response_H
#define OAIFacetscategory_200_response_H

#include <QJsonObject>

#include "OAIBrands_inner.h"
#include "OAICategoriesTrees_inner.h"
#include "OAIDepartments_inner.h"
#include "OAIObject.h"
#include "OAISummary.h"
#include <QJsonValue>
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBrands_inner;
class OAICategoriesTrees_inner;
class OAIDepartments_inner;
class OAISummary;

class OAIFacetscategory_200_response : public OAIObject {
public:
    OAIFacetscategory_200_response();
    OAIFacetscategory_200_response(QString json);
    ~OAIFacetscategory_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIBrands_inner> getBrands() const;
    void setBrands(const QList<OAIBrands_inner> &brands);
    bool is_brands_Set() const;
    bool is_brands_Valid() const;

    QList<OAICategoriesTrees_inner> getCategoriesTrees() const;
    void setCategoriesTrees(const QList<OAICategoriesTrees_inner> &categories_trees);
    bool is_categories_trees_Set() const;
    bool is_categories_trees_Valid() const;

    QList<OAIDepartments_inner> getDepartments() const;
    void setDepartments(const QList<OAIDepartments_inner> &departments);
    bool is_departments_Set() const;
    bool is_departments_Valid() const;

    QList<QJsonValue> getPriceRanges() const;
    void setPriceRanges(const QList<QJsonValue> &price_ranges);
    bool is_price_ranges_Set() const;
    bool is_price_ranges_Valid() const;

    OAIObject getSpecificationFilters() const;
    void setSpecificationFilters(const OAIObject &specification_filters);
    bool is_specification_filters_Set() const;
    bool is_specification_filters_Valid() const;

    OAISummary getSummary() const;
    void setSummary(const OAISummary &summary);
    bool is_summary_Set() const;
    bool is_summary_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIBrands_inner> m_brands;
    bool m_brands_isSet;
    bool m_brands_isValid;

    QList<OAICategoriesTrees_inner> m_categories_trees;
    bool m_categories_trees_isSet;
    bool m_categories_trees_isValid;

    QList<OAIDepartments_inner> m_departments;
    bool m_departments_isSet;
    bool m_departments_isValid;

    QList<QJsonValue> m_price_ranges;
    bool m_price_ranges_isSet;
    bool m_price_ranges_isValid;

    OAIObject m_specification_filters;
    bool m_specification_filters_isSet;
    bool m_specification_filters_isValid;

    OAISummary m_summary;
    bool m_summary_isSet;
    bool m_summary_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFacetscategory_200_response)

#endif // OAIFacetscategory_200_response_H
