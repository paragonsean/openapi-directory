/**
 * Legacy Search API
 *   > Check the new [Search onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/search-onboarding). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Search and is organized by focusing on the developer's journey.    This API lets you search and sort products in the Catalog using Fulltext, Category and Brand search terms.     Retrieve product data to create custom searches and product shelves.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPaymentOptions.h
 *
 * Payment options.
 */

#ifndef OAIPaymentOptions_H
#define OAIPaymentOptions_H

#include <QJsonObject>

#include "OAIInstallmentOptions_inner.h"
#include "OAIPaymentSystems_inner.h"
#include <QJsonValue>
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInstallmentOptions_inner;
class OAIPaymentSystems_inner;

class OAIPaymentOptions : public OAIObject {
public:
    OAIPaymentOptions();
    OAIPaymentOptions(QString json);
    ~OAIPaymentOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QJsonValue> getAvailableAccounts() const;
    void setAvailableAccounts(const QList<QJsonValue> &available_accounts);
    bool is_available_accounts_Set() const;
    bool is_available_accounts_Valid() const;

    QList<QJsonValue> getAvailableTokens() const;
    void setAvailableTokens(const QList<QJsonValue> &available_tokens);
    bool is_available_tokens_Set() const;
    bool is_available_tokens_Valid() const;

    QList<QJsonValue> getGiftCardMessages() const;
    void setGiftCardMessages(const QList<QJsonValue> &gift_card_messages);
    bool is_gift_card_messages_Set() const;
    bool is_gift_card_messages_Valid() const;

    QList<QJsonValue> getGiftCards() const;
    void setGiftCards(const QList<QJsonValue> &gift_cards);
    bool is_gift_cards_Set() const;
    bool is_gift_cards_Valid() const;

    QList<OAIInstallmentOptions_inner> getInstallmentOptions() const;
    void setInstallmentOptions(const QList<OAIInstallmentOptions_inner> &installment_options);
    bool is_installment_options_Set() const;
    bool is_installment_options_Valid() const;

    QList<OAIPaymentSystems_inner> getPaymentSystems() const;
    void setPaymentSystems(const QList<OAIPaymentSystems_inner> &payment_systems);
    bool is_payment_systems_Set() const;
    bool is_payment_systems_Valid() const;

    QList<QJsonValue> getPayments() const;
    void setPayments(const QList<QJsonValue> &payments);
    bool is_payments_Set() const;
    bool is_payments_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QJsonValue> m_available_accounts;
    bool m_available_accounts_isSet;
    bool m_available_accounts_isValid;

    QList<QJsonValue> m_available_tokens;
    bool m_available_tokens_isSet;
    bool m_available_tokens_isValid;

    QList<QJsonValue> m_gift_card_messages;
    bool m_gift_card_messages_isSet;
    bool m_gift_card_messages_isValid;

    QList<QJsonValue> m_gift_cards;
    bool m_gift_cards_isSet;
    bool m_gift_cards_isValid;

    QList<OAIInstallmentOptions_inner> m_installment_options;
    bool m_installment_options_isSet;
    bool m_installment_options_isValid;

    QList<OAIPaymentSystems_inner> m_payment_systems;
    bool m_payment_systems_isSet;
    bool m_payment_systems_isValid;

    QList<QJsonValue> m_payments;
    bool m_payments_isSet;
    bool m_payments_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPaymentOptions)

#endif // OAIPaymentOptions_H
