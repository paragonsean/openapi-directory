/**
 * Legacy Search API
 *   > Check the new [Search onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/search-onboarding). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Search and is organized by focusing on the developer's journey.    This API lets you search and sort products in the Catalog using Fulltext, Category and Brand search terms.     Retrieve product data to create custom searches and product shelves.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExample.h
 *
 * 
 */

#ifndef OAIExample_H
#define OAIExample_H

#include <QJsonObject>

#include "OAIItem.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIItem;

class OAIExample : public OAIObject {
public:
    OAIExample();
    OAIExample(QString json);
    ~OAIExample() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBrand() const;
    void setBrand(const QString &brand);
    bool is_brand_Set() const;
    bool is_brand_Valid() const;

    QList<QString> getCategories() const;
    void setCategories(const QList<QString> &categories);
    bool is_categories_Set() const;
    bool is_categories_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList<OAIItem> getItems() const;
    void setItems(const QList<OAIItem> &items);
    bool is_items_Set() const;
    bool is_items_Valid() const;

    QString getLink() const;
    void setLink(const QString &link);
    bool is_link_Set() const;
    bool is_link_Valid() const;

    QString getLinkText() const;
    void setLinkText(const QString &link_text);
    bool is_link_text_Set() const;
    bool is_link_text_Valid() const;

    QString getProductId() const;
    void setProductId(const QString &product_id);
    bool is_product_id_Set() const;
    bool is_product_id_Valid() const;

    QString getProductName() const;
    void setProductName(const QString &product_name);
    bool is_product_name_Set() const;
    bool is_product_name_Valid() const;

    QString getProductReference() const;
    void setProductReference(const QString &product_reference);
    bool is_product_reference_Set() const;
    bool is_product_reference_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_brand;
    bool m_brand_isSet;
    bool m_brand_isValid;

    QList<QString> m_categories;
    bool m_categories_isSet;
    bool m_categories_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList<OAIItem> m_items;
    bool m_items_isSet;
    bool m_items_isValid;

    QString m_link;
    bool m_link_isSet;
    bool m_link_isValid;

    QString m_link_text;
    bool m_link_text_isSet;
    bool m_link_text_isValid;

    QString m_product_id;
    bool m_product_id_isSet;
    bool m_product_id_isValid;

    QString m_product_name;
    bool m_product_name_isSet;
    bool m_product_name_isValid;

    QString m_product_reference;
    bool m_product_reference_isSet;
    bool m_product_reference_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExample)

#endif // OAIExample_H
