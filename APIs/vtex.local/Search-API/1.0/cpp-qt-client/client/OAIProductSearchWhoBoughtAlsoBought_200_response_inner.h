/**
 * Legacy Search API
 *   > Check the new [Search onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/search-onboarding). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Search and is organized by focusing on the developer's journey.    This API lets you search and sort products in the Catalog using Fulltext, Category and Brand search terms.     Retrieve product data to create custom searches and product shelves.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProductSearchWhoBoughtAlsoBought_200_response_inner.h
 *
 * 
 */

#ifndef OAIProductSearchWhoBoughtAlsoBought_200_response_inner_H
#define OAIProductSearchWhoBoughtAlsoBought_200_response_inner_H

#include <QJsonObject>

#include "OAIItems_inner.h"
#include "OAIObject.h"
#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIItems_inner;

class OAIProductSearchWhoBoughtAlsoBought_200_response_inner : public OAIObject {
public:
    OAIProductSearchWhoBoughtAlsoBought_200_response_inner();
    OAIProductSearchWhoBoughtAlsoBought_200_response_inner(QString json);
    ~OAIProductSearchWhoBoughtAlsoBought_200_response_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAllSpecifications() const;
    void setAllSpecifications(const QList<QString> &all_specifications);
    bool is_all_specifications_Set() const;
    bool is_all_specifications_Valid() const;

    QList<QString> getAllSpecificationsGroups() const;
    void setAllSpecificationsGroups(const QList<QString> &all_specifications_groups);
    bool is_all_specifications_groups_Set() const;
    bool is_all_specifications_groups_Valid() const;

    QString getBrand() const;
    void setBrand(const QString &brand);
    bool is_brand_Set() const;
    bool is_brand_Valid() const;

    qint32 getBrandId() const;
    void setBrandId(const qint32 &brand_id);
    bool is_brand_id_Set() const;
    bool is_brand_id_Valid() const;

    QString getBrandImageUrl() const;
    void setBrandImageUrl(const QString &brand_image_url);
    bool is_brand_image_url_Set() const;
    bool is_brand_image_url_Valid() const;

    QList<QJsonValue> getCategories() const;
    void setCategories(const QList<QJsonValue> &categories);
    bool is_categories_Set() const;
    bool is_categories_Valid() const;

    QList<QJsonValue> getCategoriesIds() const;
    void setCategoriesIds(const QList<QJsonValue> &categories_ids);
    bool is_categories_ids_Set() const;
    bool is_categories_ids_Valid() const;

    QString getCategoryId() const;
    void setCategoryId(const QString &category_id);
    bool is_category_id_Set() const;
    bool is_category_id_Valid() const;

    OAIObject getClusterHighlights() const;
    void setClusterHighlights(const OAIObject &cluster_highlights);
    bool is_cluster_highlights_Set() const;
    bool is_cluster_highlights_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList<OAIItems_inner> getItems() const;
    void setItems(const QList<OAIItems_inner> &items);
    bool is_items_Set() const;
    bool is_items_Valid() const;

    QString getLink() const;
    void setLink(const QString &link);
    bool is_link_Set() const;
    bool is_link_Valid() const;

    QString getLinkText() const;
    void setLinkText(const QString &link_text);
    bool is_link_text_Set() const;
    bool is_link_text_Valid() const;

    QString getMetaTagDescription() const;
    void setMetaTagDescription(const QString &meta_tag_description);
    bool is_meta_tag_description_Set() const;
    bool is_meta_tag_description_Valid() const;

    OAIObject getProductClusters() const;
    void setProductClusters(const OAIObject &product_clusters);
    bool is_product_clusters_Set() const;
    bool is_product_clusters_Valid() const;

    QString getProductId() const;
    void setProductId(const QString &product_id);
    bool is_product_id_Set() const;
    bool is_product_id_Valid() const;

    QString getProductName() const;
    void setProductName(const QString &product_name);
    bool is_product_name_Set() const;
    bool is_product_name_Valid() const;

    QString getProductReference() const;
    void setProductReference(const QString &product_reference);
    bool is_product_reference_Set() const;
    bool is_product_reference_Valid() const;

    qint32 getProductReferenceCode() const;
    void setProductReferenceCode(const qint32 &product_reference_code);
    bool is_product_reference_code_Set() const;
    bool is_product_reference_code_Valid() const;

    QString getProductTitle() const;
    void setProductTitle(const QString &product_title);
    bool is_product_title_Set() const;
    bool is_product_title_Valid() const;

    QString getReleaseDate() const;
    void setReleaseDate(const QString &release_date);
    bool is_release_date_Set() const;
    bool is_release_date_Valid() const;

    OAIObject getSearchableClusters() const;
    void setSearchableClusters(const OAIObject &searchable_clusters);
    bool is_searchable_clusters_Set() const;
    bool is_searchable_clusters_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_all_specifications;
    bool m_all_specifications_isSet;
    bool m_all_specifications_isValid;

    QList<QString> m_all_specifications_groups;
    bool m_all_specifications_groups_isSet;
    bool m_all_specifications_groups_isValid;

    QString m_brand;
    bool m_brand_isSet;
    bool m_brand_isValid;

    qint32 m_brand_id;
    bool m_brand_id_isSet;
    bool m_brand_id_isValid;

    QString m_brand_image_url;
    bool m_brand_image_url_isSet;
    bool m_brand_image_url_isValid;

    QList<QJsonValue> m_categories;
    bool m_categories_isSet;
    bool m_categories_isValid;

    QList<QJsonValue> m_categories_ids;
    bool m_categories_ids_isSet;
    bool m_categories_ids_isValid;

    QString m_category_id;
    bool m_category_id_isSet;
    bool m_category_id_isValid;

    OAIObject m_cluster_highlights;
    bool m_cluster_highlights_isSet;
    bool m_cluster_highlights_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList<OAIItems_inner> m_items;
    bool m_items_isSet;
    bool m_items_isValid;

    QString m_link;
    bool m_link_isSet;
    bool m_link_isValid;

    QString m_link_text;
    bool m_link_text_isSet;
    bool m_link_text_isValid;

    QString m_meta_tag_description;
    bool m_meta_tag_description_isSet;
    bool m_meta_tag_description_isValid;

    OAIObject m_product_clusters;
    bool m_product_clusters_isSet;
    bool m_product_clusters_isValid;

    QString m_product_id;
    bool m_product_id_isSet;
    bool m_product_id_isValid;

    QString m_product_name;
    bool m_product_name_isSet;
    bool m_product_name_isValid;

    QString m_product_reference;
    bool m_product_reference_isSet;
    bool m_product_reference_isValid;

    qint32 m_product_reference_code;
    bool m_product_reference_code_isSet;
    bool m_product_reference_code_isValid;

    QString m_product_title;
    bool m_product_title_isSet;
    bool m_product_title_isValid;

    QString m_release_date;
    bool m_release_date_isSet;
    bool m_release_date_isValid;

    OAIObject m_searchable_clusters;
    bool m_searchable_clusters_isSet;
    bool m_searchable_clusters_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProductSearchWhoBoughtAlsoBought_200_response_inner)

#endif // OAIProductSearchWhoBoughtAlsoBought_200_response_inner_H
