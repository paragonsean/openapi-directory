/**
 * Legacy Search API
 *   > Check the new [Search onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/search-onboarding). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Search and is organized by focusing on the developer's journey.    This API lets you search and sort products in the Catalog using Fulltext, Category and Brand search terms.     Retrieve product data to create custom searches and product shelves.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeliverySlaPerType2.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeliverySlaPerType2::OAIDeliverySlaPerType2(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeliverySlaPerType2::OAIDeliverySlaPerType2() {
    this->initializeModel();
}

OAIDeliverySlaPerType2::~OAIDeliverySlaPerType2() {}

void OAIDeliverySlaPerType2::initializeModel() {

    m_estimated_time_span_to_delivery_isSet = false;
    m_estimated_time_span_to_delivery_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;

    m_type_name_isSet = false;
    m_type_name_isValid = false;
}

void OAIDeliverySlaPerType2::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeliverySlaPerType2::fromJsonObject(QJsonObject json) {

    m_estimated_time_span_to_delivery_isValid = ::OpenAPI::fromJsonValue(m_estimated_time_span_to_delivery, json[QString("EstimatedTimeSpanToDelivery")]);
    m_estimated_time_span_to_delivery_isSet = !json[QString("EstimatedTimeSpanToDelivery")].isNull() && m_estimated_time_span_to_delivery_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("Price")]);
    m_price_isSet = !json[QString("Price")].isNull() && m_price_isValid;

    m_type_name_isValid = ::OpenAPI::fromJsonValue(m_type_name, json[QString("TypeName")]);
    m_type_name_isSet = !json[QString("TypeName")].isNull() && m_type_name_isValid;
}

QString OAIDeliverySlaPerType2::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeliverySlaPerType2::asJsonObject() const {
    QJsonObject obj;
    if (m_estimated_time_span_to_delivery_isSet) {
        obj.insert(QString("EstimatedTimeSpanToDelivery"), ::OpenAPI::toJsonValue(m_estimated_time_span_to_delivery));
    }
    if (m_price_isSet) {
        obj.insert(QString("Price"), ::OpenAPI::toJsonValue(m_price));
    }
    if (m_type_name_isSet) {
        obj.insert(QString("TypeName"), ::OpenAPI::toJsonValue(m_type_name));
    }
    return obj;
}

QString OAIDeliverySlaPerType2::getEstimatedTimeSpanToDelivery() const {
    return m_estimated_time_span_to_delivery;
}
void OAIDeliverySlaPerType2::setEstimatedTimeSpanToDelivery(const QString &estimated_time_span_to_delivery) {
    m_estimated_time_span_to_delivery = estimated_time_span_to_delivery;
    m_estimated_time_span_to_delivery_isSet = true;
}

bool OAIDeliverySlaPerType2::is_estimated_time_span_to_delivery_Set() const{
    return m_estimated_time_span_to_delivery_isSet;
}

bool OAIDeliverySlaPerType2::is_estimated_time_span_to_delivery_Valid() const{
    return m_estimated_time_span_to_delivery_isValid;
}

double OAIDeliverySlaPerType2::getPrice() const {
    return m_price;
}
void OAIDeliverySlaPerType2::setPrice(const double &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAIDeliverySlaPerType2::is_price_Set() const{
    return m_price_isSet;
}

bool OAIDeliverySlaPerType2::is_price_Valid() const{
    return m_price_isValid;
}

QString OAIDeliverySlaPerType2::getTypeName() const {
    return m_type_name;
}
void OAIDeliverySlaPerType2::setTypeName(const QString &type_name) {
    m_type_name = type_name;
    m_type_name_isSet = true;
}

bool OAIDeliverySlaPerType2::is_type_name_Set() const{
    return m_type_name_isSet;
}

bool OAIDeliverySlaPerType2::is_type_name_Valid() const{
    return m_type_name_isValid;
}

bool OAIDeliverySlaPerType2::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_estimated_time_span_to_delivery_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeliverySlaPerType2::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
