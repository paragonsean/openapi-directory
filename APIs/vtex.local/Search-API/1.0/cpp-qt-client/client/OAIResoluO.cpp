/**
 * Legacy Search API
 *   > Check the new [Search onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/search-onboarding). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Search and is organized by focusing on the developer's journey.    This API lets you search and sort products in the Catalog using Fulltext, Category and Brand search terms.     Retrieve product data to create custom searches and product shelves.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIResoluO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIResoluO::OAIResoluO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIResoluO::OAIResoluO() {
    this->initializeModel();
}

OAIResoluO::~OAIResoluO() {}

void OAIResoluO::initializeModel() {

    m_link_isSet = false;
    m_link_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_quantity_isSet = false;
    m_quantity_isValid = false;
}

void OAIResoluO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIResoluO::fromJsonObject(QJsonObject json) {

    m_link_isValid = ::OpenAPI::fromJsonValue(m_link, json[QString("Link")]);
    m_link_isSet = !json[QString("Link")].isNull() && m_link_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_quantity_isValid = ::OpenAPI::fromJsonValue(m_quantity, json[QString("Quantity")]);
    m_quantity_isSet = !json[QString("Quantity")].isNull() && m_quantity_isValid;
}

QString OAIResoluO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIResoluO::asJsonObject() const {
    QJsonObject obj;
    if (m_link_isSet) {
        obj.insert(QString("Link"), ::OpenAPI::toJsonValue(m_link));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_quantity_isSet) {
        obj.insert(QString("Quantity"), ::OpenAPI::toJsonValue(m_quantity));
    }
    return obj;
}

QString OAIResoluO::getLink() const {
    return m_link;
}
void OAIResoluO::setLink(const QString &link) {
    m_link = link;
    m_link_isSet = true;
}

bool OAIResoluO::is_link_Set() const{
    return m_link_isSet;
}

bool OAIResoluO::is_link_Valid() const{
    return m_link_isValid;
}

QString OAIResoluO::getName() const {
    return m_name;
}
void OAIResoluO::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIResoluO::is_name_Set() const{
    return m_name_isSet;
}

bool OAIResoluO::is_name_Valid() const{
    return m_name_isValid;
}

qint32 OAIResoluO::getQuantity() const {
    return m_quantity;
}
void OAIResoluO::setQuantity(const qint32 &quantity) {
    m_quantity = quantity;
    m_quantity_isSet = true;
}

bool OAIResoluO::is_quantity_Set() const{
    return m_quantity_isSet;
}

bool OAIResoluO::is_quantity_Valid() const{
    return m_quantity_isValid;
}

bool OAIResoluO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIResoluO::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_link_isValid && m_name_isValid && m_quantity_isValid && true;
}

} // namespace OpenAPI
