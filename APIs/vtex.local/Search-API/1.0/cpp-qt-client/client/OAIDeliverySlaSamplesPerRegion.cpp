/**
 * Legacy Search API
 *   > Check the new [Search onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/search-onboarding). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Search and is organized by focusing on the developer's journey.    This API lets you search and sort products in the Catalog using Fulltext, Category and Brand search terms.     Retrieve product data to create custom searches and product shelves.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeliverySlaSamplesPerRegion.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeliverySlaSamplesPerRegion::OAIDeliverySlaSamplesPerRegion(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeliverySlaSamplesPerRegion::OAIDeliverySlaSamplesPerRegion() {
    this->initializeModel();
}

OAIDeliverySlaSamplesPerRegion::~OAIDeliverySlaSamplesPerRegion() {}

void OAIDeliverySlaSamplesPerRegion::initializeModel() {

    m_r_0_isSet = false;
    m_r_0_isValid = false;
}

void OAIDeliverySlaSamplesPerRegion::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeliverySlaSamplesPerRegion::fromJsonObject(QJsonObject json) {

    m_r_0_isValid = ::OpenAPI::fromJsonValue(m_r_0, json[QString("0")]);
    m_r_0_isSet = !json[QString("0")].isNull() && m_r_0_isValid;
}

QString OAIDeliverySlaSamplesPerRegion::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeliverySlaSamplesPerRegion::asJsonObject() const {
    QJsonObject obj;
    if (m_r_0.isSet()) {
        obj.insert(QString("0"), ::OpenAPI::toJsonValue(m_r_0));
    }
    return obj;
}

OAIDeliverySlaSamplesPerRegion_0 OAIDeliverySlaSamplesPerRegion::getR0() const {
    return m_r_0;
}
void OAIDeliverySlaSamplesPerRegion::setR0(const OAIDeliverySlaSamplesPerRegion_0 &r_0) {
    m_r_0 = r_0;
    m_r_0_isSet = true;
}

bool OAIDeliverySlaSamplesPerRegion::is_r_0_Set() const{
    return m_r_0_isSet;
}

bool OAIDeliverySlaSamplesPerRegion::is_r_0_Valid() const{
    return m_r_0_isValid;
}

bool OAIDeliverySlaSamplesPerRegion::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_r_0.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeliverySlaSamplesPerRegion::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
