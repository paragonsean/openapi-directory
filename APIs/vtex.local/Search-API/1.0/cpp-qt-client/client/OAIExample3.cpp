/**
 * Legacy Search API
 *   > Check the new [Search onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/search-onboarding). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Search and is organized by focusing on the developer's journey.    This API lets you search and sort products in the Catalog using Fulltext, Category and Brand search terms.     Retrieve product data to create custom searches and product shelves.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExample3.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExample3::OAIExample3(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExample3::OAIExample3() {
    this->initializeModel();
}

OAIExample3::~OAIExample3() {}

void OAIExample3::initializeModel() {

    m_items_returned_isSet = false;
    m_items_returned_isValid = false;
}

void OAIExample3::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExample3::fromJsonObject(QJsonObject json) {

    m_items_returned_isValid = ::OpenAPI::fromJsonValue(m_items_returned, json[QString("itemsReturned")]);
    m_items_returned_isSet = !json[QString("itemsReturned")].isNull() && m_items_returned_isValid;
}

QString OAIExample3::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExample3::asJsonObject() const {
    QJsonObject obj;
    if (m_items_returned.size() > 0) {
        obj.insert(QString("itemsReturned"), ::OpenAPI::toJsonValue(m_items_returned));
    }
    return obj;
}

QList<OAIItemsReturned> OAIExample3::getItemsReturned() const {
    return m_items_returned;
}
void OAIExample3::setItemsReturned(const QList<OAIItemsReturned> &items_returned) {
    m_items_returned = items_returned;
    m_items_returned_isSet = true;
}

bool OAIExample3::is_items_returned_Set() const{
    return m_items_returned_isSet;
}

bool OAIExample3::is_items_returned_Valid() const{
    return m_items_returned_isValid;
}

bool OAIExample3::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_items_returned.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExample3::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_items_returned_isValid && true;
}

} // namespace OpenAPI
