/**
 * Legacy Search API
 *   > Check the new [Search onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/search-onboarding). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Search and is organized by focusing on the developer's journey.    This API lets you search and sort products in the Catalog using Fulltext, Category and Brand search terms.     Retrieve product data to create custom searches and product shelves.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExample2.h
 *
 * 
 */

#ifndef OAIExample2_H
#define OAIExample2_H

#include <QJsonObject>

#include "OAIBrand.h"
#include "OAICategoriesTree.h"
#include "OAIDepartment.h"
#include "OAISpecificationFilters.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBrand;
class OAICategoriesTree;
class OAIDepartment;
class OAISpecificationFilters;

class OAIExample2 : public OAIObject {
public:
    OAIExample2();
    OAIExample2(QString json);
    ~OAIExample2() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIBrand> getBrands() const;
    void setBrands(const QList<OAIBrand> &brands);
    bool is_brands_Set() const;
    bool is_brands_Valid() const;

    QList<OAICategoriesTree> getCategoriesTrees() const;
    void setCategoriesTrees(const QList<OAICategoriesTree> &categories_trees);
    bool is_categories_trees_Set() const;
    bool is_categories_trees_Valid() const;

    QList<OAIDepartment> getDepartments() const;
    void setDepartments(const QList<OAIDepartment> &departments);
    bool is_departments_Set() const;
    bool is_departments_Valid() const;

    OAISpecificationFilters getSpecificationFilters() const;
    void setSpecificationFilters(const OAISpecificationFilters &specification_filters);
    bool is_specification_filters_Set() const;
    bool is_specification_filters_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIBrand> m_brands;
    bool m_brands_isSet;
    bool m_brands_isValid;

    QList<OAICategoriesTree> m_categories_trees;
    bool m_categories_trees_isSet;
    bool m_categories_trees_isValid;

    QList<OAIDepartment> m_departments;
    bool m_departments_isSet;
    bool m_departments_isValid;

    OAISpecificationFilters m_specification_filters;
    bool m_specification_filters_isSet;
    bool m_specification_filters_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExample2)

#endif // OAIExample2_H
