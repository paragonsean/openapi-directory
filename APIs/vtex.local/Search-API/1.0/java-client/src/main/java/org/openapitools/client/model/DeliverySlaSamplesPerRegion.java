/*
 * Legacy Search API
 *   > Check the new [Search onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/search-onboarding). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Search and is organized by focusing on the developer's journey.    This API lets you search and sort products in the Catalog using Fulltext, Category and Brand search terms.     Retrieve product data to create custom searches and product shelves.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.DeliverySlaSamplesPerRegion0;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Delivery SLA samples per region.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:55:46.427507-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DeliverySlaSamplesPerRegion {
  public static final String SERIALIZED_NAME_0 = "0";
  @SerializedName(SERIALIZED_NAME_0)
  private DeliverySlaSamplesPerRegion0 _0;

  public DeliverySlaSamplesPerRegion() {
  }

  public DeliverySlaSamplesPerRegion _0(DeliverySlaSamplesPerRegion0 _0) {
    this._0 = _0;
    return this;
  }

  /**
   * Get _0
   * @return _0
   */
  @javax.annotation.Nullable
  public DeliverySlaSamplesPerRegion0 get0() {
    return _0;
  }

  public void set0(DeliverySlaSamplesPerRegion0 _0) {
    this._0 = _0;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeliverySlaSamplesPerRegion deliverySlaSamplesPerRegion = (DeliverySlaSamplesPerRegion) o;
    return Objects.equals(this._0, deliverySlaSamplesPerRegion._0);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_0);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeliverySlaSamplesPerRegion {\n");
    sb.append("    _0: ").append(toIndentedString(_0)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("0");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DeliverySlaSamplesPerRegion
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DeliverySlaSamplesPerRegion.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DeliverySlaSamplesPerRegion is not found in the empty JSON string", DeliverySlaSamplesPerRegion.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DeliverySlaSamplesPerRegion.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DeliverySlaSamplesPerRegion` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `0`
      if (jsonObj.get("0") != null && !jsonObj.get("0").isJsonNull()) {
        DeliverySlaSamplesPerRegion0.validateJsonElement(jsonObj.get("0"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DeliverySlaSamplesPerRegion.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DeliverySlaSamplesPerRegion' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DeliverySlaSamplesPerRegion> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DeliverySlaSamplesPerRegion.class));

       return (TypeAdapter<T>) new TypeAdapter<DeliverySlaSamplesPerRegion>() {
           @Override
           public void write(JsonWriter out, DeliverySlaSamplesPerRegion value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DeliverySlaSamplesPerRegion read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DeliverySlaSamplesPerRegion given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DeliverySlaSamplesPerRegion
   * @throws IOException if the JSON string is invalid with respect to DeliverySlaSamplesPerRegion
   */
  public static DeliverySlaSamplesPerRegion fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DeliverySlaSamplesPerRegion.class);
  }

  /**
   * Convert an instance of DeliverySlaSamplesPerRegion to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

