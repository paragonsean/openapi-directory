/*
 * Legacy Search API
 *   > Check the new [Search onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/search-onboarding). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Search and is organized by focusing on the developer's journey.    This API lets you search and sort products in the Catalog using Fulltext, Category and Brand search terms.     Retrieve product data to create custom searches and product shelves.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DeliverySlaSamplesInner;
import org.openapitools.client.model.DeliverySlaSamplesPerRegion;
import org.openapitools.client.model.InstallmentsInner;
import org.openapitools.client.model.PaymentOptions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CommertialOffer
 */
public class CommertialOfferTest {
    private final CommertialOffer model = new CommertialOffer();

    /**
     * Model tests for CommertialOffer
     */
    @Test
    public void testCommertialOffer() {
        // TODO: test CommertialOffer
    }

    /**
     * Test the property 'availableQuantity'
     */
    @Test
    public void availableQuantityTest() {
        // TODO: test availableQuantity
    }

    /**
     * Test the property 'buyTogether'
     */
    @Test
    public void buyTogetherTest() {
        // TODO: test buyTogether
    }

    /**
     * Test the property 'cacheVersionUsedToCallCheckout'
     */
    @Test
    public void cacheVersionUsedToCallCheckoutTest() {
        // TODO: test cacheVersionUsedToCallCheckout
    }

    /**
     * Test the property 'deliverySlaSamples'
     */
    @Test
    public void deliverySlaSamplesTest() {
        // TODO: test deliverySlaSamples
    }

    /**
     * Test the property 'deliverySlaSamplesPerRegion'
     */
    @Test
    public void deliverySlaSamplesPerRegionTest() {
        // TODO: test deliverySlaSamplesPerRegion
    }

    /**
     * Test the property 'discountHighLight'
     */
    @Test
    public void discountHighLightTest() {
        // TODO: test discountHighLight
    }

    /**
     * Test the property 'getInfoErrorMessage'
     */
    @Test
    public void getInfoErrorMessageTest() {
        // TODO: test getInfoErrorMessage
    }

    /**
     * Test the property 'giftSkuIds'
     */
    @Test
    public void giftSkuIdsTest() {
        // TODO: test giftSkuIds
    }

    /**
     * Test the property 'installments'
     */
    @Test
    public void installmentsTest() {
        // TODO: test installments
    }

    /**
     * Test the property 'isAvailable'
     */
    @Test
    public void isAvailableTest() {
        // TODO: test isAvailable
    }

    /**
     * Test the property 'itemMetadataAttachment'
     */
    @Test
    public void itemMetadataAttachmentTest() {
        // TODO: test itemMetadataAttachment
    }

    /**
     * Test the property 'listPrice'
     */
    @Test
    public void listPriceTest() {
        // TODO: test listPrice
    }

    /**
     * Test the property 'paymentOptions'
     */
    @Test
    public void paymentOptionsTest() {
        // TODO: test paymentOptions
    }

    /**
     * Test the property 'price'
     */
    @Test
    public void priceTest() {
        // TODO: test price
    }

    /**
     * Test the property 'priceValidUntil'
     */
    @Test
    public void priceValidUntilTest() {
        // TODO: test priceValidUntil
    }

    /**
     * Test the property 'priceWithoutDiscount'
     */
    @Test
    public void priceWithoutDiscountTest() {
        // TODO: test priceWithoutDiscount
    }

    /**
     * Test the property 'rewardValue'
     */
    @Test
    public void rewardValueTest() {
        // TODO: test rewardValue
    }

    /**
     * Test the property 'saleChannel'
     */
    @Test
    public void saleChannelTest() {
        // TODO: test saleChannel
    }

    /**
     * Test the property 'tax'
     */
    @Test
    public void taxTest() {
        // TODO: test tax
    }

    /**
     * Test the property 'teasers'
     */
    @Test
    public void teasersTest() {
        // TODO: test teasers
    }

}
