/*
 * Legacy Search API
 *   > Check the new [Search onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/search-onboarding). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Search and is organized by focusing on the developer's journey.    This API lets you search and sort products in the Catalog using Fulltext, Category and Brand search terms.     Retrieve product data to create custom searches and product shelves.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ImagesInner;
import org.openapitools.client.model.KitItemsInner;
import org.openapitools.client.model.ReferenceIdInner;
import org.openapitools.client.model.SellersInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ItemsInner
 */
public class ItemsInnerTest {
    private final ItemsInner model = new ItemsInner();

    /**
     * Model tests for ItemsInner
     */
    @Test
    public void testItemsInner() {
        // TODO: test ItemsInner
    }

    /**
     * Test the property 'videos'
     */
    @Test
    public void videosTest() {
        // TODO: test videos
    }

    /**
     * Test the property 'complementName'
     */
    @Test
    public void complementNameTest() {
        // TODO: test complementName
    }

    /**
     * Test the property 'ean'
     */
    @Test
    public void eanTest() {
        // TODO: test ean
    }

    /**
     * Test the property 'estimatedDateArrival'
     */
    @Test
    public void estimatedDateArrivalTest() {
        // TODO: test estimatedDateArrival
    }

    /**
     * Test the property 'images'
     */
    @Test
    public void imagesTest() {
        // TODO: test images
    }

    /**
     * Test the property 'isKit'
     */
    @Test
    public void isKitTest() {
        // TODO: test isKit
    }

    /**
     * Test the property 'itemId'
     */
    @Test
    public void itemIdTest() {
        // TODO: test itemId
    }

    /**
     * Test the property 'kitItems'
     */
    @Test
    public void kitItemsTest() {
        // TODO: test kitItems
    }

    /**
     * Test the property 'measurementUnit'
     */
    @Test
    public void measurementUnitTest() {
        // TODO: test measurementUnit
    }

    /**
     * Test the property 'modalType'
     */
    @Test
    public void modalTypeTest() {
        // TODO: test modalType
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'nameComplete'
     */
    @Test
    public void nameCompleteTest() {
        // TODO: test nameComplete
    }

    /**
     * Test the property 'referenceId'
     */
    @Test
    public void referenceIdTest() {
        // TODO: test referenceId
    }

    /**
     * Test the property 'sellers'
     */
    @Test
    public void sellersTest() {
        // TODO: test sellers
    }

    /**
     * Test the property 'unitMultiplier'
     */
    @Test
    public void unitMultiplierTest() {
        // TODO: test unitMultiplier
    }

}
