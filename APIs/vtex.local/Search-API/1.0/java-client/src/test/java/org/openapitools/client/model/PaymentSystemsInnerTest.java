/*
 * Legacy Search API
 *   > Check the new [Search onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/search-onboarding). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Search and is organized by focusing on the developer's journey.    This API lets you search and sort products in the Catalog using Fulltext, Category and Brand search terms.     Retrieve product data to create custom searches and product shelves.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PaymentSystemsInner
 */
public class PaymentSystemsInnerTest {
    private final PaymentSystemsInner model = new PaymentSystemsInner();

    /**
     * Model tests for PaymentSystemsInner
     */
    @Test
    public void testPaymentSystemsInner() {
        // TODO: test PaymentSystemsInner
    }

    /**
     * Test the property 'availablePayments'
     */
    @Test
    public void availablePaymentsTest() {
        // TODO: test availablePayments
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'dueDate'
     */
    @Test
    public void dueDateTest() {
        // TODO: test dueDate
    }

    /**
     * Test the property 'groupName'
     */
    @Test
    public void groupNameTest() {
        // TODO: test groupName
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'isCustom'
     */
    @Test
    public void isCustomTest() {
        // TODO: test isCustom
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'requiresAuthentication'
     */
    @Test
    public void requiresAuthenticationTest() {
        // TODO: test requiresAuthentication
    }

    /**
     * Test the property 'requiresDocument'
     */
    @Test
    public void requiresDocumentTest() {
        // TODO: test requiresDocument
    }

    /**
     * Test the property 'stringId'
     */
    @Test
    public void stringIdTest() {
        // TODO: test stringId
    }

    /**
     * Test the property 'template'
     */
    @Test
    public void templateTest() {
        // TODO: test template
    }

    /**
     * Test the property 'validator'
     */
    @Test
    public void validatorTest() {
        // TODO: test validator
    }

}
