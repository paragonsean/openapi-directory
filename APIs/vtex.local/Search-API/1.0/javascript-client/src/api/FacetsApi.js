/**
 * Legacy Search API
 *   > Check the new [Search onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/search-onboarding). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Search and is organized by focusing on the developer's journey.    This API lets you search and sort products in the Catalog using Fulltext, Category and Brand search terms.     Retrieve product data to create custom searches and product shelves.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiCatalogSystemPubFacetsCategoryCategoryIdGet200ResponseInner from '../model/ApiCatalogSystemPubFacetsCategoryCategoryIdGet200ResponseInner';
import Facetscategory200Response from '../model/Facetscategory200Response';

/**
* Facets service.
* @module api/FacetsApi
* @version 1.0
*/
export default class FacetsApi {

    /**
    * Constructs a new FacetsApi. 
    * @alias module:api/FacetsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiCatalogSystemPubFacetsCategoryCategoryIdGet operation.
     * @callback module:api/FacetsApi~apiCatalogSystemPubFacetsCategoryCategoryIdGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ApiCatalogSystemPubFacetsCategoryCategoryIdGet200ResponseInner>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Category Facets
     * Retrieves the names and IDs of the categories facets.   >⚠️ This endpoint returns a maximum of 50 items per response, so the difference between `_from` and `_to` should not exceed this number. The result order is descending, from the highest product ID to the lowest.    ## Response body example:    ```json  [   [      {        \"Name\":\"Tamanho Global\",        \"Id\":45    },    {        \"Name\":\"Percentuals\",        \"Id\":25    }   ]  ]  ```
     * @param {String} accept HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.
     * @param {String} contentType Describes the type of the content being sent.
     * @param {String} categoryId Category unique number identifier.
     * @param {Object} opts Optional parameters
     * @param {String} [from] Starter page range. These parameters allow the API to be paginated. Take into account that the initial and final pages cannot have a separation superior to 50 pages. Thus, it will be displayed 50 items per page.
     * @param {String} [to] Finisher page range. These parameters allow the API to be paginated. Take into account that the initial and final pages cannot have a separation superior to 50 pages. Thus, it will be displayed 50 items per page.
     * @param {module:api/FacetsApi~apiCatalogSystemPubFacetsCategoryCategoryIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ApiCatalogSystemPubFacetsCategoryCategoryIdGet200ResponseInner>}
     */
    apiCatalogSystemPubFacetsCategoryCategoryIdGet(accept, contentType, categoryId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accept' is set
      if (accept === undefined || accept === null) {
        throw new Error("Missing the required parameter 'accept' when calling apiCatalogSystemPubFacetsCategoryCategoryIdGet");
      }
      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling apiCatalogSystemPubFacetsCategoryCategoryIdGet");
      }
      // verify the required parameter 'categoryId' is set
      if (categoryId === undefined || categoryId === null) {
        throw new Error("Missing the required parameter 'categoryId' when calling apiCatalogSystemPubFacetsCategoryCategoryIdGet");
      }

      let pathParams = {
        'categoryId': categoryId
      };
      let queryParams = {
        '_from': opts['from'],
        '_to': opts['to']
      };
      let headerParams = {
        'Accept': accept,
        'Content-Type': contentType
      };
      let formParams = {
      };

      let authNames = ['appToken', 'appKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ApiCatalogSystemPubFacetsCategoryCategoryIdGet200ResponseInner];
      return this.apiClient.callApi(
        '/api/catalog_system/pub/facets/category/{categoryId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the facetscategory operation.
     * @callback module:api/FacetsApi~facetscategoryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Facetscategory200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Search by Store Facets
     * Retrieves products by store facets.   >⚠️ This endpoint returns a maximum of 50 items per response, so the difference between `_from` and `_to` should not exceed this number. The result order is descending, from the highest product ID to the lowest.    ## Response body example:    ```json  {   \"Departments\": [     {       \"Quantity\": 2,        \"Position\": null,        \"Name\": \"Beers Beers Mesmo\",        \"Link\": \"/Beers-Beers-Mesmo/1?map=c,b\",        \"LinkEncoded\": \"/Beers-Beers-Mesmo/1?map=c,b\",        \"Map\": \"c\",        \"Value\": \"Beers-Beers-Mesmo\"       },       {        \"Quantity\": 2,        \"Position\": null,        \"Name\": \"Merch Integration Category ||\",        \"Link\": \"/Merch-Integration-Category-||/1?map=c,b\",        \"LinkEncoded\": \"/Merch-Integration-Category-%7C%7C/1?map=c,b\",        \"Map\": \"c\",        \"Value\": \"Merch-Integration-Category-||\"       },       {        \"Quantity\": 1,        \"Position\": null,        \"Name\": \"Jogos\",        \"Link\": \"/Jogos/1?map=c,b\",        \"LinkEncoded\": \"/Jogos/1?map=c,b\",        \"Map\": \"c\",        \"Value\": \"Jogos\"       },       {        \"Quantity\": 3,        \"Position\": null,        \"Name\": \"189\",        \"Link\": \"/189/1?map=c,b\",        \"LinkEncoded\": \"/189/1?map=c,b\",        \"Map\": \"c\",        \"Value\": \"189\"       },       {        \"Quantity\": 1,        \"Position\": null,        \"Name\": \"Tests\",        \"Link\": \"/Tests/1?map=c,b\",        \"LinkEncoded\": \"/Tests/1?map=c,b\",        \"Map\": \"c\",        \"Value\": \"Tests\"       },       {        \"Quantity\": 1,        \"Position\": null,        \"Name\": \"Accessories\",        \"Link\": \"/Accessories/1?map=c,b\",        \"LinkEncoded\": \"/Accessories/1?map=c,b\",        \"Map\": \"c\",        \"Value\": \"Accessories\"       },       {        \"Quantity\": 2,        \"Position\": null,        \"Name\": \"Bars\",        \"Link\": \"/Bars/1?map=c,b\",        \"LinkEncoded\": \"/Bars/1?map=c,b\",        \"Map\": \"c\",        \"Value\": \"Bars\"       },       {        \"Quantity\": 5,        \"Position\": null,        \"Name\": \"Categoria Teste Timeout\",        \"Link\": \"/Categoria-Teste-Timeout/1?map=c,b\",        \"LinkEncoded\": \"/Categoria-Teste-Timeout/1?map=c,b\",        \"Map\": \"c\",        \"Value\": \"Categoria-Teste-Timeout\"       }      ],      \"Brands\": [       {        \"Quantity\": 2,        \"Position\": null,        \"Name\": \"Merch XP\",        \"Link\": \"/1/1234600/1/Merch-XP?map=c,c,b,b\",        \"LinkEncoded\": \"/1/1234600/1/Merch-XP?map=c,c,b,b\",        \"Map\": \"b\",        \"Value\": \"Merch-XP\"       },       {        \"Quantity\": 2,        \"Position\": null,        \"Name\": \"Zé\",        \"Link\": \"/1/1234600/1/Ze?map=c,c,b,b\",        \"LinkEncoded\": \"/1/1234600/1/Ze?map=c,c,b,b\",        \"Map\": \"b\",        \"Value\": \"Ze\"       },       {        \"Quantity\": 1,        \"Position\": null,        \"Name\": \"Odin\",        \"Link\": \"/1/1234600/1/Odin?map=c,c,b,b\",        \"LinkEncoded\": \"/1/1234600/1/Odin?map=c,c,b,b\",        \"Map\": \"b\",        \"Value\": \"Odin\"       },       {        \"Quantity\": 2,        \"Position\": null,        \"Name\": \"Hoegaarden\",        \"Link\": \"/1/1234600/1/Hoegaarden?map=c,c,b,b\",        \"LinkEncoded\": \"/1/1234600/1/Hoegaarden?map=c,c,b,b\",        \"Map\": \"b\",        \"Value\": \"Hoegaarden\"       },       {        \"Quantity\": 1,        \"Position\": null,        \"Name\": \"Teste marcas\",        \"Link\": \"/1/1234600/1/Teste-marcas?map=c,c,b,b\",        \"LinkEncoded\": \"/1/1234600/1/Teste-marcas?map=c,c,b,b\",        \"Map\": \"b\",        \"Value\": \"Teste-marcas\"       },       {         \"Quantity\": 1,         \"Position\": null,         \"Name\": \"Bitmap Bureau\",         \"Link\": \"/1/1234600/1/Bitmap-Bureau?map=c,c,b,b\",         \"LinkEncoded\": \"/1/1234600/1/Bitmap-Bureau?map=c,c,b,b\",         \"Map\": \"b\",         \"Value\": \"Bitmap-Bureau\"       },        {          \"Quantity\": 1,          \"Position\": null,          \"Name\": \"Sega\",          \"Link\": \"/1/1234600/1/Sega?map=c,c,b,b\",          \"LinkEncoded\": \"/1/1234600/1/Sega?map=c,c,b,b\",          \"Map\": \"b\",          \"Value\": \"Sega\"        },        {          \"Quantity\": 3,          \"Position\": null,          \"Name\": \"Technogym\",          \"Link\": \"/1/1234600/1/Technogym?map=c,c,b,b\",          \"LinkEncoded\": \"/1/1234600/1/Technogym?map=c,c,b,b\",          \"Map\": \"b\",          \"Value\": \"Technogym\"        },        {          \"Quantity\": 3,          \"Position\": null,          \"Name\": \"Aptany\",          \"Link\": \"/1/1234600/1/Aptany?map=c,c,b,b\",          \"LinkEncoded\": \"/1/1234600/1/Aptany?map=c,c,b,b\",          \"Map\": \"b\",          \"Value\": \"Aptany\"        },        {          \"Quantity\": 1,          \"Position\": null,          \"Name\": \"Tectoy\",          \"Link\": \"/1/1234600/1/Tectoy?map=c,c,b,b\",          \"LinkEncoded\": \"/1/1234600/1/Tectoy?map=c,c,b,b\",          \"Map\": \"b\",          \"Value\": \"Tectoy\"        }      ],        \"SpecificationFilters\": {},          \"CategoriesTrees\": [            {              \"Id\": 1,              \"Quantity\": 4,              \"Position\": null,              \"Name\": \"Beers Beers Mesmo\",              \"Link\": \"/Beers-Beers-Mesmo/1?map=c,b\",              \"LinkEncoded\": \"/Beers-Beers-Mesmo/1?map=c,b\",              \"Map\": \"c\",              \"Value\": \"Beers-Beers-Mesmo\",              \"Children\": [                {                  \"Id\": 2,                  \"Quantity\": 1,                  \"Position\": null,                  \"Name\": \"Lager Beers\",                  \"Link\": \"/Beers-Beers-Mesmo/Lager-Beers/1?map=c,c,b\",                  \"LinkEncoded\": \"/Beers-Beers-Mesmo/Lager-Beers/1?map=c,c,b\",                  \"Map\": \"c\",                  \"Value\": \"Lager-Beers\",                  \"Children\": []                }              ]            },            {              \"Id\": 1234571,              \"Quantity\": 2,              \"Position\": null,              \"Name\": \"Jogos\",              \"Link\": \"/Jogos/1?map=c,b\",              \"LinkEncoded\": \"/Jogos/1?map=c,b\",              \"Map\": \"c\",              \"Value\": \"Jogos\",              \"Children\": []            },            {              \"Id\": 1234579,              \"Quantity\": 3,              \"Position\": null,              \"Name\": \"189\",              \"Link\": \"/189/1?map=c,b\",              \"LinkEncoded\": \"/189/1?map=c,b\",              \"Map\": \"c\",              \"Value\": \"189\",              \"Children\": []            },            {              \"Id\": 1234587,              \"Quantity\": 1,              \"Position\": null,              \"Name\": \"Tests\",              \"Link\": \"/Tests/1?map=c,b\",              \"LinkEncoded\": \"/Tests/1?map=c,b\",              \"Map\": \"c\",              \"Value\": \"Tests\",              \"Children\": []            },            {              \"Id\": 1234595,              \"Quantity\": 1,              \"Position\": null,              \"Name\": \"Accessories\",              \"Link\": \"/Accessories/1?map=c,b\",              \"LinkEncoded\": \"/Accessories/1?map=c,b\",              \"Map\": \"c\",              \"Value\": \"Accessories\",              \"Children\": [                {                  \"Id\": 1234596,                  \"Quantity\": 1,                  \"Position\": null,                  \"Name\": \"Foam rollers\",                  \"Link\": \"/Accessories/Foam-rollers/1?map=c,c,b\",                  \"LinkEncoded\": \"/Accessories/Foam-rollers/1?map=c,c,b\",                  \"Map\": \"c\",                  \"Value\": \"Foam-rollers\",                  \"Children\": []                }              ]            },            {              \"Id\": 1234597,              \"Quantity\": 2,              \"Position\": null,              \"Name\": \"Bars\",              \"Link\": \"/Bars/1?map=c,b\",              \"LinkEncoded\": \"/Bars/1?map=c,b\",              \"Map\": \"c\",              \"Value\": \"Bars\",              \"Children\": [                {                  \"Id\": 1234598,                  \"Quantity\": 1,                  \"Position\": null,                  \"Name\": \"Training Bars\",                  \"Link\": \"/Bars/Training-Bars/1?map=c,c,b\",                  \"LinkEncoded\": \"/Bars/Training-Bars/1?map=c,c,b\",                  \"Map\": \"c\",                  \"Value\": \"Training-Bars\",                  \"Children\": []                },                {                  \"Id\": 1234599,                  \"Quantity\": 1,                  \"Position\": null,                  \"Name\": \"Curl Bars\",                  \"Link\": \"/Bars/Curl-Bars/1?map=c,c,b\",                  \"LinkEncoded\": \"/Bars/Curl-Bars/1?map=c,c,b\",                  \"Map\": \"c\",                  \"Value\": \"Curl-Bars\",                  \"Children\": []                }              ]            },            {              \"Id\": 15,              \"Quantity\": 1,              \"Position\": null,              \"Name\": \"Coronas\",              \"Link\": \"/Coronas/1?map=c,b\",              \"LinkEncoded\": \"/Coronas/1?map=c,b\",              \"Map\": \"c\",              \"Value\": \"Coronas\",              \"Children\": [                {                  \"Id\": 13,                  \"Quantity\": 1,                  \"Position\": null,                  \"Name\": \"não tem limite!\",                  \"Link\": \"/Coronas/nao-tem-limite-/1?map=c,c,b\",                  \"LinkEncoded\": \"/Coronas/nao-tem-limite-/1?map=c,c,b\",                  \"Map\": \"c\",                  \"Value\": \"nao-tem-limite-\",                  \"Children\": []                }              ]            },            {              \"Id\": 4,              \"Quantity\": 4,              \"Position\": null,              \"Name\": \"Merch Integration Category ||\",              \"Link\": \"/Merch-Integration-Category-||/1?map=c,b\",              \"LinkEncoded\": \"/Merch-Integration-Category-%7C%7C/1?map=c,b\",              \"Map\": \"c\",              \"Value\": \"Merch-Integration-Category-||\",              \"Children\": []            }          ],            \"PriceRanges\": [],              \"Summary\": {                \"Departments\": {                  \"DisplayedItems\": 8,                    \"TotalItems\": 8                },                  \"CategoriesTrees\": {                    \"DisplayedItems\": 13,                      \"TotalItems\": 13                  },                    \"Brands\": {                      \"DisplayedItems\": 10,                        \"TotalItems\": 10                    },                      \"PriceRanges\": {                        \"DisplayedItems\": 0,                          \"TotalItems\": 0                      },                        \"SpecificationFilters\": {}              }  }  ```
     * @param {String} map Mapping of the term. It can be `c` for a category, `b` for a brand, or `specificationFilter_{specificationId}` for a specification. You need to include a map for each term you are searching for in the same term's order.
     * @param {String} accept HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.
     * @param {String} contentType Describes the type of the content being sent.
     * @param {String} term Term used for the facet's search. You can search for as much term as you want. The term can be: `categoryId`, `brandId`, `specificationId`.
     * @param {Object} opts Optional parameters
     * @param {String} [from] Starter page range. These parameters allow the API to be paginated. Take into account that the initial and final pages cannot have a separation superior to 50 pages. Thus, it will be displayed 50 items per page.
     * @param {String} [to] Finisher page range. These parameters allow the API to be paginated. Take into account that the initial and final pages cannot have a separation superior to 50 pages. Thus, it will be displayed 50 items per page.
     * @param {module:api/FacetsApi~facetscategoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Facetscategory200Response}
     */
    facetscategory(map, accept, contentType, term, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'map' is set
      if (map === undefined || map === null) {
        throw new Error("Missing the required parameter 'map' when calling facetscategory");
      }
      // verify the required parameter 'accept' is set
      if (accept === undefined || accept === null) {
        throw new Error("Missing the required parameter 'accept' when calling facetscategory");
      }
      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling facetscategory");
      }
      // verify the required parameter 'term' is set
      if (term === undefined || term === null) {
        throw new Error("Missing the required parameter 'term' when calling facetscategory");
      }

      let pathParams = {
        'term': term
      };
      let queryParams = {
        'map': map,
        '_from': opts['from'],
        '_to': opts['to']
      };
      let headerParams = {
        'Accept': accept,
        'Content-Type': contentType
      };
      let formParams = {
      };

      let authNames = ['appToken', 'appKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Facetscategory200Response;
      return this.apiClient.callApi(
        '/api/catalog_system/pub/facets/search/{term}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
