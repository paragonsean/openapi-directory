/**
 * Legacy Search API
 *   > Check the new [Search onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/search-onboarding). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Search and is organized by focusing on the developer's journey.    This API lets you search and sort products in the Catalog using Fulltext, Category and Brand search terms.     Retrieve product data to create custom searches and product shelves.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.LegacySearchApi);
  }
}(this, function(expect, LegacySearchApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new LegacySearchApi.PaymentSystemsInner();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PaymentSystemsInner', function() {
    it('should create an instance of PaymentSystemsInner', function() {
      // uncomment below and update the code to test PaymentSystemsInner
      //var instance = new LegacySearchApi.PaymentSystemsInner();
      //expect(instance).to.be.a(LegacySearchApi.PaymentSystemsInner);
    });

    it('should have the property availablePayments (base name: "availablePayments")', function() {
      // uncomment below and update the code to test the property availablePayments
      //var instance = new LegacySearchApi.PaymentSystemsInner();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new LegacySearchApi.PaymentSystemsInner();
      //expect(instance).to.be();
    });

    it('should have the property dueDate (base name: "dueDate")', function() {
      // uncomment below and update the code to test the property dueDate
      //var instance = new LegacySearchApi.PaymentSystemsInner();
      //expect(instance).to.be();
    });

    it('should have the property groupName (base name: "groupName")', function() {
      // uncomment below and update the code to test the property groupName
      //var instance = new LegacySearchApi.PaymentSystemsInner();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new LegacySearchApi.PaymentSystemsInner();
      //expect(instance).to.be();
    });

    it('should have the property isCustom (base name: "isCustom")', function() {
      // uncomment below and update the code to test the property isCustom
      //var instance = new LegacySearchApi.PaymentSystemsInner();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new LegacySearchApi.PaymentSystemsInner();
      //expect(instance).to.be();
    });

    it('should have the property requiresAuthentication (base name: "requiresAuthentication")', function() {
      // uncomment below and update the code to test the property requiresAuthentication
      //var instance = new LegacySearchApi.PaymentSystemsInner();
      //expect(instance).to.be();
    });

    it('should have the property requiresDocument (base name: "requiresDocument")', function() {
      // uncomment below and update the code to test the property requiresDocument
      //var instance = new LegacySearchApi.PaymentSystemsInner();
      //expect(instance).to.be();
    });

    it('should have the property stringId (base name: "stringId")', function() {
      // uncomment below and update the code to test the property stringId
      //var instance = new LegacySearchApi.PaymentSystemsInner();
      //expect(instance).to.be();
    });

    it('should have the property template (base name: "template")', function() {
      // uncomment below and update the code to test the property template
      //var instance = new LegacySearchApi.PaymentSystemsInner();
      //expect(instance).to.be();
    });

    it('should have the property validator (base name: "validator")', function() {
      // uncomment below and update the code to test the property validator
      //var instance = new LegacySearchApi.PaymentSystemsInner();
      //expect(instance).to.be();
    });

  });

}));
