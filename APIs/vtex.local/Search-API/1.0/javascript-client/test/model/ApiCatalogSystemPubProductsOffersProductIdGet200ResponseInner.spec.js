/**
 * Legacy Search API
 *   > Check the new [Search onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/search-onboarding). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Search and is organized by focusing on the developer's journey.    This API lets you search and sort products in the Catalog using Fulltext, Category and Brand search terms.     Retrieve product data to create custom searches and product shelves.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.LegacySearchApi);
  }
}(this, function(expect, LegacySearchApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new LegacySearchApi.ApiCatalogSystemPubProductsOffersProductIdGet200ResponseInner();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ApiCatalogSystemPubProductsOffersProductIdGet200ResponseInner', function() {
    it('should create an instance of ApiCatalogSystemPubProductsOffersProductIdGet200ResponseInner', function() {
      // uncomment below and update the code to test ApiCatalogSystemPubProductsOffersProductIdGet200ResponseInner
      //var instance = new LegacySearchApi.ApiCatalogSystemPubProductsOffersProductIdGet200ResponseInner();
      //expect(instance).to.be.a(LegacySearchApi.ApiCatalogSystemPubProductsOffersProductIdGet200ResponseInner);
    });

    it('should have the property eanId (base name: "EanId")', function() {
      // uncomment below and update the code to test the property eanId
      //var instance = new LegacySearchApi.ApiCatalogSystemPubProductsOffersProductIdGet200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property isActive (base name: "IsActive")', function() {
      // uncomment below and update the code to test the property isActive
      //var instance = new LegacySearchApi.ApiCatalogSystemPubProductsOffersProductIdGet200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property lastModified (base name: "LastModified")', function() {
      // uncomment below and update the code to test the property lastModified
      //var instance = new LegacySearchApi.ApiCatalogSystemPubProductsOffersProductIdGet200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property mainImage (base name: "MainImage")', function() {
      // uncomment below and update the code to test the property mainImage
      //var instance = new LegacySearchApi.ApiCatalogSystemPubProductsOffersProductIdGet200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new LegacySearchApi.ApiCatalogSystemPubProductsOffersProductIdGet200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property nameComplete (base name: "NameComplete")', function() {
      // uncomment below and update the code to test the property nameComplete
      //var instance = new LegacySearchApi.ApiCatalogSystemPubProductsOffersProductIdGet200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property offers (base name: "Offers")', function() {
      // uncomment below and update the code to test the property offers
      //var instance = new LegacySearchApi.ApiCatalogSystemPubProductsOffersProductIdGet200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property productId (base name: "ProductId")', function() {
      // uncomment below and update the code to test the property productId
      //var instance = new LegacySearchApi.ApiCatalogSystemPubProductsOffersProductIdGet200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property refId (base name: "RefId")', function() {
      // uncomment below and update the code to test the property refId
      //var instance = new LegacySearchApi.ApiCatalogSystemPubProductsOffersProductIdGet200ResponseInner();
      //expect(instance).to.be();
    });

    it('should have the property skuId (base name: "SkuId")', function() {
      // uncomment below and update the code to test the property skuId
      //var instance = new LegacySearchApi.ApiCatalogSystemPubProductsOffersProductIdGet200ResponseInner();
      //expect(instance).to.be();
    });

  });

}));
