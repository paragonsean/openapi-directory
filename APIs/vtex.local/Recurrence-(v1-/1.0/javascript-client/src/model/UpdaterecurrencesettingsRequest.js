/**
 * Subscription (v1 - deprecated)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdaterecurrencesettingsRequest model module.
 * @module model/UpdaterecurrencesettingsRequest
 * @version 1.0
 */
class UpdaterecurrencesettingsRequest {
    /**
     * Constructs a new <code>UpdaterecurrencesettingsRequest</code>.
     * @alias module:model/UpdaterecurrencesettingsRequest
     * @param defaultSLA {String} 
     * @param salesChannel {String} 
     */
    constructor(defaultSLA, salesChannel) { 
        
        UpdaterecurrencesettingsRequest.initialize(this, defaultSLA, salesChannel);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, defaultSLA, salesChannel) { 
        obj['defaultSLA'] = defaultSLA;
        obj['salesChannel'] = salesChannel;
    }

    /**
     * Constructs a <code>UpdaterecurrencesettingsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdaterecurrencesettingsRequest} obj Optional instance to populate.
     * @return {module:model/UpdaterecurrencesettingsRequest} The populated <code>UpdaterecurrencesettingsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdaterecurrencesettingsRequest();

            if (data.hasOwnProperty('defaultSLA')) {
                obj['defaultSLA'] = ApiClient.convertToType(data['defaultSLA'], 'String');
            }
            if (data.hasOwnProperty('salesChannel')) {
                obj['salesChannel'] = ApiClient.convertToType(data['salesChannel'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdaterecurrencesettingsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdaterecurrencesettingsRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdaterecurrencesettingsRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['defaultSLA'] && !(typeof data['defaultSLA'] === 'string' || data['defaultSLA'] instanceof String)) {
            throw new Error("Expected the field `defaultSLA` to be a primitive type in the JSON string but got " + data['defaultSLA']);
        }
        // ensure the json data is a string
        if (data['salesChannel'] && !(typeof data['salesChannel'] === 'string' || data['salesChannel'] instanceof String)) {
            throw new Error("Expected the field `salesChannel` to be a primitive type in the JSON string but got " + data['salesChannel']);
        }

        return true;
    }


}

UpdaterecurrencesettingsRequest.RequiredProperties = ["defaultSLA", "salesChannel"];

/**
 * @member {String} defaultSLA
 */
UpdaterecurrencesettingsRequest.prototype['defaultSLA'] = undefined;

/**
 * @member {String} salesChannel
 */
UpdaterecurrencesettingsRequest.prototype['salesChannel'] = undefined;






export default UpdaterecurrencesettingsRequest;

