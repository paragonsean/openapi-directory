/**
 * Subscription (v1 - deprecated)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Frequency from './Frequency';

/**
 * The AddrecurrenceitemRequest model module.
 * @module model/AddrecurrenceitemRequest
 * @version 1.0
 */
class AddrecurrenceitemRequest {
    /**
     * Constructs a new <code>AddrecurrenceitemRequest</code>.
     * @alias module:model/AddrecurrenceitemRequest
     * @param frequency {module:model/Frequency} 
     * @param quantity {Number} 
     * @param seller {String} 
     * @param shippingAddressId {String} 
     * @param sku {String} 
     */
    constructor(frequency, quantity, seller, shippingAddressId, sku) { 
        
        AddrecurrenceitemRequest.initialize(this, frequency, quantity, seller, shippingAddressId, sku);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, frequency, quantity, seller, shippingAddressId, sku) { 
        obj['frequency'] = frequency;
        obj['quantity'] = quantity;
        obj['seller'] = seller;
        obj['shippingAddressId'] = shippingAddressId;
        obj['sku'] = sku;
    }

    /**
     * Constructs a <code>AddrecurrenceitemRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddrecurrenceitemRequest} obj Optional instance to populate.
     * @return {module:model/AddrecurrenceitemRequest} The populated <code>AddrecurrenceitemRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddrecurrenceitemRequest();

            if (data.hasOwnProperty('frequency')) {
                obj['frequency'] = Frequency.constructFromObject(data['frequency']);
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('seller')) {
                obj['seller'] = ApiClient.convertToType(data['seller'], 'String');
            }
            if (data.hasOwnProperty('shippingAddressId')) {
                obj['shippingAddressId'] = ApiClient.convertToType(data['shippingAddressId'], 'String');
            }
            if (data.hasOwnProperty('sku')) {
                obj['sku'] = ApiClient.convertToType(data['sku'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AddrecurrenceitemRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AddrecurrenceitemRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AddrecurrenceitemRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `frequency`
        if (data['frequency']) { // data not null
          Frequency.validateJSON(data['frequency']);
        }
        // ensure the json data is a string
        if (data['seller'] && !(typeof data['seller'] === 'string' || data['seller'] instanceof String)) {
            throw new Error("Expected the field `seller` to be a primitive type in the JSON string but got " + data['seller']);
        }
        // ensure the json data is a string
        if (data['shippingAddressId'] && !(typeof data['shippingAddressId'] === 'string' || data['shippingAddressId'] instanceof String)) {
            throw new Error("Expected the field `shippingAddressId` to be a primitive type in the JSON string but got " + data['shippingAddressId']);
        }
        // ensure the json data is a string
        if (data['sku'] && !(typeof data['sku'] === 'string' || data['sku'] instanceof String)) {
            throw new Error("Expected the field `sku` to be a primitive type in the JSON string but got " + data['sku']);
        }

        return true;
    }


}

AddrecurrenceitemRequest.RequiredProperties = ["frequency", "quantity", "seller", "shippingAddressId", "sku"];

/**
 * @member {module:model/Frequency} frequency
 */
AddrecurrenceitemRequest.prototype['frequency'] = undefined;

/**
 * @member {Number} quantity
 */
AddrecurrenceitemRequest.prototype['quantity'] = undefined;

/**
 * @member {String} seller
 */
AddrecurrenceitemRequest.prototype['seller'] = undefined;

/**
 * @member {String} shippingAddressId
 */
AddrecurrenceitemRequest.prototype['shippingAddressId'] = undefined;

/**
 * @member {String} sku
 */
AddrecurrenceitemRequest.prototype['sku'] = undefined;






export default AddrecurrenceitemRequest;

