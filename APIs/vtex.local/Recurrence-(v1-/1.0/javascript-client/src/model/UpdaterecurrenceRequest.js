/**
 * Subscription (v1 - deprecated)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Item from './Item';

/**
 * The UpdaterecurrenceRequest model module.
 * @module model/UpdaterecurrenceRequest
 * @version 1.0
 */
class UpdaterecurrenceRequest {
    /**
     * Constructs a new <code>UpdaterecurrenceRequest</code>.
     * @alias module:model/UpdaterecurrenceRequest
     * @param deliveryDay {Number} 
     * @param deliveryWeekday {String} 
     * @param email {String} 
     * @param items {Array.<module:model/Item>} 
     * @param paymentAccountId {String} 
     */
    constructor(deliveryDay, deliveryWeekday, email, items, paymentAccountId) { 
        
        UpdaterecurrenceRequest.initialize(this, deliveryDay, deliveryWeekday, email, items, paymentAccountId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, deliveryDay, deliveryWeekday, email, items, paymentAccountId) { 
        obj['deliveryDay'] = deliveryDay;
        obj['deliveryWeekday'] = deliveryWeekday;
        obj['email'] = email;
        obj['items'] = items;
        obj['paymentAccountId'] = paymentAccountId;
    }

    /**
     * Constructs a <code>UpdaterecurrenceRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdaterecurrenceRequest} obj Optional instance to populate.
     * @return {module:model/UpdaterecurrenceRequest} The populated <code>UpdaterecurrenceRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdaterecurrenceRequest();

            if (data.hasOwnProperty('deliveryDay')) {
                obj['deliveryDay'] = ApiClient.convertToType(data['deliveryDay'], 'Number');
            }
            if (data.hasOwnProperty('deliveryWeekday')) {
                obj['deliveryWeekday'] = ApiClient.convertToType(data['deliveryWeekday'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], [Item]);
            }
            if (data.hasOwnProperty('paymentAccountId')) {
                obj['paymentAccountId'] = ApiClient.convertToType(data['paymentAccountId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdaterecurrenceRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdaterecurrenceRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdaterecurrenceRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['deliveryWeekday'] && !(typeof data['deliveryWeekday'] === 'string' || data['deliveryWeekday'] instanceof String)) {
            throw new Error("Expected the field `deliveryWeekday` to be a primitive type in the JSON string but got " + data['deliveryWeekday']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        if (data['items']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['items'])) {
                throw new Error("Expected the field `items` to be an array in the JSON data but got " + data['items']);
            }
            // validate the optional field `items` (array)
            for (const item of data['items']) {
                Item.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['paymentAccountId'] && !(typeof data['paymentAccountId'] === 'string' || data['paymentAccountId'] instanceof String)) {
            throw new Error("Expected the field `paymentAccountId` to be a primitive type in the JSON string but got " + data['paymentAccountId']);
        }

        return true;
    }


}

UpdaterecurrenceRequest.RequiredProperties = ["deliveryDay", "deliveryWeekday", "email", "items", "paymentAccountId"];

/**
 * @member {Number} deliveryDay
 */
UpdaterecurrenceRequest.prototype['deliveryDay'] = undefined;

/**
 * @member {String} deliveryWeekday
 */
UpdaterecurrenceRequest.prototype['deliveryWeekday'] = undefined;

/**
 * @member {String} email
 */
UpdaterecurrenceRequest.prototype['email'] = undefined;

/**
 * 
 * @member {Array.<module:model/Item>} items
 */
UpdaterecurrenceRequest.prototype['items'] = undefined;

/**
 * @member {String} paymentAccountId
 */
UpdaterecurrenceRequest.prototype['paymentAccountId'] = undefined;






export default UpdaterecurrenceRequest;

