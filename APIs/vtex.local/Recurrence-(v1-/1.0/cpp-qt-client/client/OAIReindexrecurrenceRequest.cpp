/**
 * Subscription (v1 - deprecated)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReindexrecurrenceRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReindexrecurrenceRequest::OAIReindexrecurrenceRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReindexrecurrenceRequest::OAIReindexrecurrenceRequest() {
    this->initializeModel();
}

OAIReindexrecurrenceRequest::~OAIReindexrecurrenceRequest() {}

void OAIReindexrecurrenceRequest::initializeModel() {

    m_frequency_isSet = false;
    m_frequency_isValid = false;
}

void OAIReindexrecurrenceRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReindexrecurrenceRequest::fromJsonObject(QJsonObject json) {

    m_frequency_isValid = ::OpenAPI::fromJsonValue(m_frequency, json[QString("frequency")]);
    m_frequency_isSet = !json[QString("frequency")].isNull() && m_frequency_isValid;
}

QString OAIReindexrecurrenceRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReindexrecurrenceRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_frequency.isSet()) {
        obj.insert(QString("frequency"), ::OpenAPI::toJsonValue(m_frequency));
    }
    return obj;
}

OAIFrequency OAIReindexrecurrenceRequest::getFrequency() const {
    return m_frequency;
}
void OAIReindexrecurrenceRequest::setFrequency(const OAIFrequency &frequency) {
    m_frequency = frequency;
    m_frequency_isSet = true;
}

bool OAIReindexrecurrenceRequest::is_frequency_Set() const{
    return m_frequency_isSet;
}

bool OAIReindexrecurrenceRequest::is_frequency_Valid() const{
    return m_frequency_isValid;
}

bool OAIReindexrecurrenceRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_frequency.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReindexrecurrenceRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_frequency_isValid && true;
}

} // namespace OpenAPI
