/**
 * Subscription (v1 - deprecated)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFrequency.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFrequency::OAIFrequency(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFrequency::OAIFrequency() {
    this->initializeModel();
}

OAIFrequency::~OAIFrequency() {}

void OAIFrequency::initializeModel() {

    m_interval_isSet = false;
    m_interval_isValid = false;

    m_periodicity_isSet = false;
    m_periodicity_isValid = false;
}

void OAIFrequency::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFrequency::fromJsonObject(QJsonObject json) {

    m_interval_isValid = ::OpenAPI::fromJsonValue(m_interval, json[QString("interval")]);
    m_interval_isSet = !json[QString("interval")].isNull() && m_interval_isValid;

    m_periodicity_isValid = ::OpenAPI::fromJsonValue(m_periodicity, json[QString("periodicity")]);
    m_periodicity_isSet = !json[QString("periodicity")].isNull() && m_periodicity_isValid;
}

QString OAIFrequency::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFrequency::asJsonObject() const {
    QJsonObject obj;
    if (m_interval_isSet) {
        obj.insert(QString("interval"), ::OpenAPI::toJsonValue(m_interval));
    }
    if (m_periodicity_isSet) {
        obj.insert(QString("periodicity"), ::OpenAPI::toJsonValue(m_periodicity));
    }
    return obj;
}

qint32 OAIFrequency::getInterval() const {
    return m_interval;
}
void OAIFrequency::setInterval(const qint32 &interval) {
    m_interval = interval;
    m_interval_isSet = true;
}

bool OAIFrequency::is_interval_Set() const{
    return m_interval_isSet;
}

bool OAIFrequency::is_interval_Valid() const{
    return m_interval_isValid;
}

QString OAIFrequency::getPeriodicity() const {
    return m_periodicity;
}
void OAIFrequency::setPeriodicity(const QString &periodicity) {
    m_periodicity = periodicity;
    m_periodicity_isSet = true;
}

bool OAIFrequency::is_periodicity_Set() const{
    return m_periodicity_isSet;
}

bool OAIFrequency::is_periodicity_Valid() const{
    return m_periodicity_isValid;
}

bool OAIFrequency::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_interval_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_periodicity_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFrequency::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_interval_isValid && m_periodicity_isValid && true;
}

} // namespace OpenAPI
