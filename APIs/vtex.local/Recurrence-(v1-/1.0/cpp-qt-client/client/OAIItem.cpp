/**
 * Subscription (v1 - deprecated)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIItem::OAIItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIItem::OAIItem() {
    this->initializeModel();
}

OAIItem::~OAIItem() {}

void OAIItem::initializeModel() {

    m_frequency_isSet = false;
    m_frequency_isValid = false;

    m_quantity_isSet = false;
    m_quantity_isValid = false;

    m_seller_isSet = false;
    m_seller_isValid = false;

    m_shipping_address_id_isSet = false;
    m_shipping_address_id_isValid = false;

    m_sku_isSet = false;
    m_sku_isValid = false;
}

void OAIItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIItem::fromJsonObject(QJsonObject json) {

    m_frequency_isValid = ::OpenAPI::fromJsonValue(m_frequency, json[QString("frequency")]);
    m_frequency_isSet = !json[QString("frequency")].isNull() && m_frequency_isValid;

    m_quantity_isValid = ::OpenAPI::fromJsonValue(m_quantity, json[QString("quantity")]);
    m_quantity_isSet = !json[QString("quantity")].isNull() && m_quantity_isValid;

    m_seller_isValid = ::OpenAPI::fromJsonValue(m_seller, json[QString("seller")]);
    m_seller_isSet = !json[QString("seller")].isNull() && m_seller_isValid;

    m_shipping_address_id_isValid = ::OpenAPI::fromJsonValue(m_shipping_address_id, json[QString("shippingAddressId")]);
    m_shipping_address_id_isSet = !json[QString("shippingAddressId")].isNull() && m_shipping_address_id_isValid;

    m_sku_isValid = ::OpenAPI::fromJsonValue(m_sku, json[QString("sku")]);
    m_sku_isSet = !json[QString("sku")].isNull() && m_sku_isValid;
}

QString OAIItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIItem::asJsonObject() const {
    QJsonObject obj;
    if (m_frequency.isSet()) {
        obj.insert(QString("frequency"), ::OpenAPI::toJsonValue(m_frequency));
    }
    if (m_quantity_isSet) {
        obj.insert(QString("quantity"), ::OpenAPI::toJsonValue(m_quantity));
    }
    if (m_seller_isSet) {
        obj.insert(QString("seller"), ::OpenAPI::toJsonValue(m_seller));
    }
    if (m_shipping_address_id_isSet) {
        obj.insert(QString("shippingAddressId"), ::OpenAPI::toJsonValue(m_shipping_address_id));
    }
    if (m_sku_isSet) {
        obj.insert(QString("sku"), ::OpenAPI::toJsonValue(m_sku));
    }
    return obj;
}

OAIFrequency OAIItem::getFrequency() const {
    return m_frequency;
}
void OAIItem::setFrequency(const OAIFrequency &frequency) {
    m_frequency = frequency;
    m_frequency_isSet = true;
}

bool OAIItem::is_frequency_Set() const{
    return m_frequency_isSet;
}

bool OAIItem::is_frequency_Valid() const{
    return m_frequency_isValid;
}

qint32 OAIItem::getQuantity() const {
    return m_quantity;
}
void OAIItem::setQuantity(const qint32 &quantity) {
    m_quantity = quantity;
    m_quantity_isSet = true;
}

bool OAIItem::is_quantity_Set() const{
    return m_quantity_isSet;
}

bool OAIItem::is_quantity_Valid() const{
    return m_quantity_isValid;
}

QString OAIItem::getSeller() const {
    return m_seller;
}
void OAIItem::setSeller(const QString &seller) {
    m_seller = seller;
    m_seller_isSet = true;
}

bool OAIItem::is_seller_Set() const{
    return m_seller_isSet;
}

bool OAIItem::is_seller_Valid() const{
    return m_seller_isValid;
}

QString OAIItem::getShippingAddressId() const {
    return m_shipping_address_id;
}
void OAIItem::setShippingAddressId(const QString &shipping_address_id) {
    m_shipping_address_id = shipping_address_id;
    m_shipping_address_id_isSet = true;
}

bool OAIItem::is_shipping_address_id_Set() const{
    return m_shipping_address_id_isSet;
}

bool OAIItem::is_shipping_address_id_Valid() const{
    return m_shipping_address_id_isValid;
}

QString OAIItem::getSku() const {
    return m_sku;
}
void OAIItem::setSku(const QString &sku) {
    m_sku = sku;
    m_sku_isSet = true;
}

bool OAIItem::is_sku_Set() const{
    return m_sku_isSet;
}

bool OAIItem::is_sku_Valid() const{
    return m_sku_isValid;
}

bool OAIItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_frequency.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_seller_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_address_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sku_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_frequency_isValid && m_quantity_isValid && m_seller_isValid && m_shipping_address_id_isValid && m_sku_isValid && true;
}

} // namespace OpenAPI
