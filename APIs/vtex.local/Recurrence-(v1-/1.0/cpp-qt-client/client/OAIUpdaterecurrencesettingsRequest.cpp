/**
 * Subscription (v1 - deprecated)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdaterecurrencesettingsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdaterecurrencesettingsRequest::OAIUpdaterecurrencesettingsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdaterecurrencesettingsRequest::OAIUpdaterecurrencesettingsRequest() {
    this->initializeModel();
}

OAIUpdaterecurrencesettingsRequest::~OAIUpdaterecurrencesettingsRequest() {}

void OAIUpdaterecurrencesettingsRequest::initializeModel() {

    m_default_sla_isSet = false;
    m_default_sla_isValid = false;

    m_sales_channel_isSet = false;
    m_sales_channel_isValid = false;
}

void OAIUpdaterecurrencesettingsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdaterecurrencesettingsRequest::fromJsonObject(QJsonObject json) {

    m_default_sla_isValid = ::OpenAPI::fromJsonValue(m_default_sla, json[QString("defaultSLA")]);
    m_default_sla_isSet = !json[QString("defaultSLA")].isNull() && m_default_sla_isValid;

    m_sales_channel_isValid = ::OpenAPI::fromJsonValue(m_sales_channel, json[QString("salesChannel")]);
    m_sales_channel_isSet = !json[QString("salesChannel")].isNull() && m_sales_channel_isValid;
}

QString OAIUpdaterecurrencesettingsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdaterecurrencesettingsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_default_sla_isSet) {
        obj.insert(QString("defaultSLA"), ::OpenAPI::toJsonValue(m_default_sla));
    }
    if (m_sales_channel_isSet) {
        obj.insert(QString("salesChannel"), ::OpenAPI::toJsonValue(m_sales_channel));
    }
    return obj;
}

QString OAIUpdaterecurrencesettingsRequest::getDefaultSla() const {
    return m_default_sla;
}
void OAIUpdaterecurrencesettingsRequest::setDefaultSla(const QString &default_sla) {
    m_default_sla = default_sla;
    m_default_sla_isSet = true;
}

bool OAIUpdaterecurrencesettingsRequest::is_default_sla_Set() const{
    return m_default_sla_isSet;
}

bool OAIUpdaterecurrencesettingsRequest::is_default_sla_Valid() const{
    return m_default_sla_isValid;
}

QString OAIUpdaterecurrencesettingsRequest::getSalesChannel() const {
    return m_sales_channel;
}
void OAIUpdaterecurrencesettingsRequest::setSalesChannel(const QString &sales_channel) {
    m_sales_channel = sales_channel;
    m_sales_channel_isSet = true;
}

bool OAIUpdaterecurrencesettingsRequest::is_sales_channel_Set() const{
    return m_sales_channel_isSet;
}

bool OAIUpdaterecurrencesettingsRequest::is_sales_channel_Valid() const{
    return m_sales_channel_isValid;
}

bool OAIUpdaterecurrencesettingsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_default_sla_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sales_channel_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdaterecurrencesettingsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_default_sla_isValid && m_sales_channel_isValid && true;
}

} // namespace OpenAPI
