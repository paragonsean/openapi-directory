# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdatepartialrecurrenceRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, delivery_day: int=None, delivery_weekday: str=None, status: str=None):
        """UpdatepartialrecurrenceRequest - a model defined in OpenAPI

        :param delivery_day: The delivery_day of this UpdatepartialrecurrenceRequest.
        :param delivery_weekday: The delivery_weekday of this UpdatepartialrecurrenceRequest.
        :param status: The status of this UpdatepartialrecurrenceRequest.
        """
        self.openapi_types = {
            'delivery_day': int,
            'delivery_weekday': str,
            'status': str
        }

        self.attribute_map = {
            'delivery_day': 'deliveryDay',
            'delivery_weekday': 'deliveryWeekday',
            'status': 'status'
        }

        self._delivery_day = delivery_day
        self._delivery_weekday = delivery_weekday
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdatepartialrecurrenceRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdatepartialrecurrenceRequest of this UpdatepartialrecurrenceRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def delivery_day(self):
        """Gets the delivery_day of this UpdatepartialrecurrenceRequest.


        :return: The delivery_day of this UpdatepartialrecurrenceRequest.
        :rtype: int
        """
        return self._delivery_day

    @delivery_day.setter
    def delivery_day(self, delivery_day):
        """Sets the delivery_day of this UpdatepartialrecurrenceRequest.


        :param delivery_day: The delivery_day of this UpdatepartialrecurrenceRequest.
        :type delivery_day: int
        """
        if delivery_day is None:
            raise ValueError("Invalid value for `delivery_day`, must not be `None`")

        self._delivery_day = delivery_day

    @property
    def delivery_weekday(self):
        """Gets the delivery_weekday of this UpdatepartialrecurrenceRequest.


        :return: The delivery_weekday of this UpdatepartialrecurrenceRequest.
        :rtype: str
        """
        return self._delivery_weekday

    @delivery_weekday.setter
    def delivery_weekday(self, delivery_weekday):
        """Sets the delivery_weekday of this UpdatepartialrecurrenceRequest.


        :param delivery_weekday: The delivery_weekday of this UpdatepartialrecurrenceRequest.
        :type delivery_weekday: str
        """
        if delivery_weekday is None:
            raise ValueError("Invalid value for `delivery_weekday`, must not be `None`")

        self._delivery_weekday = delivery_weekday

    @property
    def status(self):
        """Gets the status of this UpdatepartialrecurrenceRequest.


        :return: The status of this UpdatepartialrecurrenceRequest.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this UpdatepartialrecurrenceRequest.


        :param status: The status of this UpdatepartialrecurrenceRequest.
        :type status: str
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")

        self._status = status
