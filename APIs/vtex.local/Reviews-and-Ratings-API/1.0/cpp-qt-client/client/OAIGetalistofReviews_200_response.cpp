/**
 * Reviews and Ratings API
 *   Reviews & Ratings is a [VTEX IO native solution](https://developers.vtex.com/vtex-developer-docs/docs/vtex-reviews-and-ratings) that allows shoppers to submit reviews and ratings for products, as well as see them while navigating the store.    ## Rating    - [Get Product Rating](https://developers.vtex.com/vtex-rest-api/reference/getproductrating)    ## Review    - [Get Review by Review ID](https://developers.vtex.com/vtex-rest-api/reference/getreviewbyreviewid)  - [Delete Review](https://developers.vtex.com/vtex-rest-api/reference/deletereview)  - [Update a Review](https://developers.vtex.com/vtex-rest-api/reference/editreview)  - [Get a list of Reviews](https://developers.vtex.com/vtex-rest-api/reference/getalistofreviews)  - [Create Multiple Reviews](https://developers.vtex.com/vtex-rest-api/reference/savemultiplereviews)  - [Delete Multiple Reviews](https://developers.vtex.com/vtex-rest-api/reference/deletemultiplereviews)  - [Create a Review](https://developers.vtex.com/vtex-rest-api/reference/savereview)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetalistofReviews_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetalistofReviews_200_response::OAIGetalistofReviews_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetalistofReviews_200_response::OAIGetalistofReviews_200_response() {
    this->initializeModel();
}

OAIGetalistofReviews_200_response::~OAIGetalistofReviews_200_response() {}

void OAIGetalistofReviews_200_response::initializeModel() {

    m_data_isSet = false;
    m_data_isValid = false;

    m_range_isSet = false;
    m_range_isValid = false;
}

void OAIGetalistofReviews_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetalistofReviews_200_response::fromJsonObject(QJsonObject json) {

    m_data_isValid = ::OpenAPI::fromJsonValue(m_data, json[QString("data")]);
    m_data_isSet = !json[QString("data")].isNull() && m_data_isValid;

    m_range_isValid = ::OpenAPI::fromJsonValue(m_range, json[QString("range")]);
    m_range_isSet = !json[QString("range")].isNull() && m_range_isValid;
}

QString OAIGetalistofReviews_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetalistofReviews_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_data.size() > 0) {
        obj.insert(QString("data"), ::OpenAPI::toJsonValue(m_data));
    }
    if (m_range.isSet()) {
        obj.insert(QString("range"), ::OpenAPI::toJsonValue(m_range));
    }
    return obj;
}

QList<OAIGetalistofReviews_200_response_data_inner> OAIGetalistofReviews_200_response::getData() const {
    return m_data;
}
void OAIGetalistofReviews_200_response::setData(const QList<OAIGetalistofReviews_200_response_data_inner> &data) {
    m_data = data;
    m_data_isSet = true;
}

bool OAIGetalistofReviews_200_response::is_data_Set() const{
    return m_data_isSet;
}

bool OAIGetalistofReviews_200_response::is_data_Valid() const{
    return m_data_isValid;
}

OAIGetalistofReviews_200_response_range OAIGetalistofReviews_200_response::getRange() const {
    return m_range;
}
void OAIGetalistofReviews_200_response::setRange(const OAIGetalistofReviews_200_response_range &range) {
    m_range = range;
    m_range_isSet = true;
}

bool OAIGetalistofReviews_200_response::is_range_Set() const{
    return m_range_isSet;
}

bool OAIGetalistofReviews_200_response::is_range_Valid() const{
    return m_range_isValid;
}

bool OAIGetalistofReviews_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_range.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetalistofReviews_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
