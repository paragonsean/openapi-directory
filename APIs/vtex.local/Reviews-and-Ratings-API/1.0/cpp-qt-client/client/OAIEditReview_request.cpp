/**
 * Reviews and Ratings API
 *   Reviews & Ratings is a [VTEX IO native solution](https://developers.vtex.com/vtex-developer-docs/docs/vtex-reviews-and-ratings) that allows shoppers to submit reviews and ratings for products, as well as see them while navigating the store.    ## Rating    - [Get Product Rating](https://developers.vtex.com/vtex-rest-api/reference/getproductrating)    ## Review    - [Get Review by Review ID](https://developers.vtex.com/vtex-rest-api/reference/getreviewbyreviewid)  - [Delete Review](https://developers.vtex.com/vtex-rest-api/reference/deletereview)  - [Update a Review](https://developers.vtex.com/vtex-rest-api/reference/editreview)  - [Get a list of Reviews](https://developers.vtex.com/vtex-rest-api/reference/getalistofreviews)  - [Create Multiple Reviews](https://developers.vtex.com/vtex-rest-api/reference/savemultiplereviews)  - [Delete Multiple Reviews](https://developers.vtex.com/vtex-rest-api/reference/deletemultiplereviews)  - [Create a Review](https://developers.vtex.com/vtex-rest-api/reference/savereview)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEditReview_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEditReview_request::OAIEditReview_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEditReview_request::OAIEditReview_request() {
    this->initializeModel();
}

OAIEditReview_request::~OAIEditReview_request() {}

void OAIEditReview_request::initializeModel() {

    m_locale_isSet = false;
    m_locale_isValid = false;

    m_product_id_isSet = false;
    m_product_id_isValid = false;

    m_rating_isSet = false;
    m_rating_isValid = false;

    m_reviewer_name_isSet = false;
    m_reviewer_name_isValid = false;

    m_shopper_id_isSet = false;
    m_shopper_id_isValid = false;

    m_text_isSet = false;
    m_text_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_verified_purchaser_isSet = false;
    m_verified_purchaser_isValid = false;
}

void OAIEditReview_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEditReview_request::fromJsonObject(QJsonObject json) {

    m_locale_isValid = ::OpenAPI::fromJsonValue(m_locale, json[QString("locale")]);
    m_locale_isSet = !json[QString("locale")].isNull() && m_locale_isValid;

    m_product_id_isValid = ::OpenAPI::fromJsonValue(m_product_id, json[QString("productId")]);
    m_product_id_isSet = !json[QString("productId")].isNull() && m_product_id_isValid;

    m_rating_isValid = ::OpenAPI::fromJsonValue(m_rating, json[QString("rating")]);
    m_rating_isSet = !json[QString("rating")].isNull() && m_rating_isValid;

    m_reviewer_name_isValid = ::OpenAPI::fromJsonValue(m_reviewer_name, json[QString("reviewerName")]);
    m_reviewer_name_isSet = !json[QString("reviewerName")].isNull() && m_reviewer_name_isValid;

    m_shopper_id_isValid = ::OpenAPI::fromJsonValue(m_shopper_id, json[QString("shopperId")]);
    m_shopper_id_isSet = !json[QString("shopperId")].isNull() && m_shopper_id_isValid;

    m_text_isValid = ::OpenAPI::fromJsonValue(m_text, json[QString("text")]);
    m_text_isSet = !json[QString("text")].isNull() && m_text_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;

    m_verified_purchaser_isValid = ::OpenAPI::fromJsonValue(m_verified_purchaser, json[QString("verifiedPurchaser")]);
    m_verified_purchaser_isSet = !json[QString("verifiedPurchaser")].isNull() && m_verified_purchaser_isValid;
}

QString OAIEditReview_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEditReview_request::asJsonObject() const {
    QJsonObject obj;
    if (m_locale_isSet) {
        obj.insert(QString("locale"), ::OpenAPI::toJsonValue(m_locale));
    }
    if (m_product_id_isSet) {
        obj.insert(QString("productId"), ::OpenAPI::toJsonValue(m_product_id));
    }
    if (m_rating_isSet) {
        obj.insert(QString("rating"), ::OpenAPI::toJsonValue(m_rating));
    }
    if (m_reviewer_name_isSet) {
        obj.insert(QString("reviewerName"), ::OpenAPI::toJsonValue(m_reviewer_name));
    }
    if (m_shopper_id_isSet) {
        obj.insert(QString("shopperId"), ::OpenAPI::toJsonValue(m_shopper_id));
    }
    if (m_text_isSet) {
        obj.insert(QString("text"), ::OpenAPI::toJsonValue(m_text));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_verified_purchaser_isSet) {
        obj.insert(QString("verifiedPurchaser"), ::OpenAPI::toJsonValue(m_verified_purchaser));
    }
    return obj;
}

QString OAIEditReview_request::getLocale() const {
    return m_locale;
}
void OAIEditReview_request::setLocale(const QString &locale) {
    m_locale = locale;
    m_locale_isSet = true;
}

bool OAIEditReview_request::is_locale_Set() const{
    return m_locale_isSet;
}

bool OAIEditReview_request::is_locale_Valid() const{
    return m_locale_isValid;
}

QString OAIEditReview_request::getProductId() const {
    return m_product_id;
}
void OAIEditReview_request::setProductId(const QString &product_id) {
    m_product_id = product_id;
    m_product_id_isSet = true;
}

bool OAIEditReview_request::is_product_id_Set() const{
    return m_product_id_isSet;
}

bool OAIEditReview_request::is_product_id_Valid() const{
    return m_product_id_isValid;
}

double OAIEditReview_request::getRating() const {
    return m_rating;
}
void OAIEditReview_request::setRating(const double &rating) {
    m_rating = rating;
    m_rating_isSet = true;
}

bool OAIEditReview_request::is_rating_Set() const{
    return m_rating_isSet;
}

bool OAIEditReview_request::is_rating_Valid() const{
    return m_rating_isValid;
}

QString OAIEditReview_request::getReviewerName() const {
    return m_reviewer_name;
}
void OAIEditReview_request::setReviewerName(const QString &reviewer_name) {
    m_reviewer_name = reviewer_name;
    m_reviewer_name_isSet = true;
}

bool OAIEditReview_request::is_reviewer_name_Set() const{
    return m_reviewer_name_isSet;
}

bool OAIEditReview_request::is_reviewer_name_Valid() const{
    return m_reviewer_name_isValid;
}

QString OAIEditReview_request::getShopperId() const {
    return m_shopper_id;
}
void OAIEditReview_request::setShopperId(const QString &shopper_id) {
    m_shopper_id = shopper_id;
    m_shopper_id_isSet = true;
}

bool OAIEditReview_request::is_shopper_id_Set() const{
    return m_shopper_id_isSet;
}

bool OAIEditReview_request::is_shopper_id_Valid() const{
    return m_shopper_id_isValid;
}

QString OAIEditReview_request::getText() const {
    return m_text;
}
void OAIEditReview_request::setText(const QString &text) {
    m_text = text;
    m_text_isSet = true;
}

bool OAIEditReview_request::is_text_Set() const{
    return m_text_isSet;
}

bool OAIEditReview_request::is_text_Valid() const{
    return m_text_isValid;
}

QString OAIEditReview_request::getTitle() const {
    return m_title;
}
void OAIEditReview_request::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIEditReview_request::is_title_Set() const{
    return m_title_isSet;
}

bool OAIEditReview_request::is_title_Valid() const{
    return m_title_isValid;
}

bool OAIEditReview_request::isVerifiedPurchaser() const {
    return m_verified_purchaser;
}
void OAIEditReview_request::setVerifiedPurchaser(const bool &verified_purchaser) {
    m_verified_purchaser = verified_purchaser;
    m_verified_purchaser_isSet = true;
}

bool OAIEditReview_request::is_verified_purchaser_Set() const{
    return m_verified_purchaser_isSet;
}

bool OAIEditReview_request::is_verified_purchaser_Valid() const{
    return m_verified_purchaser_isValid;
}

bool OAIEditReview_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_locale_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rating_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reviewer_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shopper_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_verified_purchaser_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEditReview_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_product_id_isValid && m_rating_isValid && m_reviewer_name_isValid && m_text_isValid && m_title_isValid && true;
}

} // namespace OpenAPI
