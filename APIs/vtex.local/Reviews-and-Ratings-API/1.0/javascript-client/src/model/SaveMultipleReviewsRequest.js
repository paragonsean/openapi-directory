/**
 * Reviews and Ratings API
 *   Reviews & Ratings is a [VTEX IO native solution](https://developers.vtex.com/vtex-developer-docs/docs/vtex-reviews-and-ratings) that allows shoppers to submit reviews and ratings for products, as well as see them while navigating the store.    ## Rating    - [Get Product Rating](https://developers.vtex.com/vtex-rest-api/reference/getproductrating)    ## Review    - [Get Review by Review ID](https://developers.vtex.com/vtex-rest-api/reference/getreviewbyreviewid)  - [Delete Review](https://developers.vtex.com/vtex-rest-api/reference/deletereview)  - [Update a Review](https://developers.vtex.com/vtex-rest-api/reference/editreview)  - [Get a list of Reviews](https://developers.vtex.com/vtex-rest-api/reference/getalistofreviews)  - [Create Multiple Reviews](https://developers.vtex.com/vtex-rest-api/reference/savemultiplereviews)  - [Delete Multiple Reviews](https://developers.vtex.com/vtex-rest-api/reference/deletemultiplereviews)  - [Create a Review](https://developers.vtex.com/vtex-rest-api/reference/savereview)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SaveMultipleReviewsRequest model module.
 * @module model/SaveMultipleReviewsRequest
 * @version 1.0
 */
class SaveMultipleReviewsRequest {
    /**
     * Constructs a new <code>SaveMultipleReviewsRequest</code>.
     * @alias module:model/SaveMultipleReviewsRequest
     * @param approved {Boolean} If the review was approved (`true`) or not (`false`).
     * @param productId {String} Product ID.
     * @param rating {Number} Customer rating.
     * @param reviewerName {String} Reviewer name.
     * @param text {String} Review's text.
     * @param title {String} Review's title.
     * @param verifiedPurchaser {Boolean} If the reviewer is a verified purchaser (`true`) or not (`false`).
     */
    constructor(approved, productId, rating, reviewerName, text, title, verifiedPurchaser) { 
        
        SaveMultipleReviewsRequest.initialize(this, approved, productId, rating, reviewerName, text, title, verifiedPurchaser);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, approved, productId, rating, reviewerName, text, title, verifiedPurchaser) { 
        obj['approved'] = approved;
        obj['productId'] = productId;
        obj['rating'] = rating;
        obj['reviewerName'] = reviewerName;
        obj['text'] = text;
        obj['title'] = title;
        obj['verifiedPurchaser'] = verifiedPurchaser;
    }

    /**
     * Constructs a <code>SaveMultipleReviewsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SaveMultipleReviewsRequest} obj Optional instance to populate.
     * @return {module:model/SaveMultipleReviewsRequest} The populated <code>SaveMultipleReviewsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SaveMultipleReviewsRequest();

            if (data.hasOwnProperty('approved')) {
                obj['approved'] = ApiClient.convertToType(data['approved'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('productId')) {
                obj['productId'] = ApiClient.convertToType(data['productId'], 'String');
            }
            if (data.hasOwnProperty('rating')) {
                obj['rating'] = ApiClient.convertToType(data['rating'], 'Number');
            }
            if (data.hasOwnProperty('reviewerName')) {
                obj['reviewerName'] = ApiClient.convertToType(data['reviewerName'], 'String');
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('verifiedPurchaser')) {
                obj['verifiedPurchaser'] = ApiClient.convertToType(data['verifiedPurchaser'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SaveMultipleReviewsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SaveMultipleReviewsRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SaveMultipleReviewsRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['productId'] && !(typeof data['productId'] === 'string' || data['productId'] instanceof String)) {
            throw new Error("Expected the field `productId` to be a primitive type in the JSON string but got " + data['productId']);
        }
        // ensure the json data is a string
        if (data['reviewerName'] && !(typeof data['reviewerName'] === 'string' || data['reviewerName'] instanceof String)) {
            throw new Error("Expected the field `reviewerName` to be a primitive type in the JSON string but got " + data['reviewerName']);
        }
        // ensure the json data is a string
        if (data['text'] && !(typeof data['text'] === 'string' || data['text'] instanceof String)) {
            throw new Error("Expected the field `text` to be a primitive type in the JSON string but got " + data['text']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}

SaveMultipleReviewsRequest.RequiredProperties = ["approved", "productId", "rating", "reviewerName", "text", "title", "verifiedPurchaser"];

/**
 * If the review was approved (`true`) or not (`false`).
 * @member {Boolean} approved
 */
SaveMultipleReviewsRequest.prototype['approved'] = undefined;

/**
 * Review ID.
 * @member {String} id
 */
SaveMultipleReviewsRequest.prototype['id'] = undefined;

/**
 * Product ID.
 * @member {String} productId
 */
SaveMultipleReviewsRequest.prototype['productId'] = undefined;

/**
 * Customer rating.
 * @member {Number} rating
 */
SaveMultipleReviewsRequest.prototype['rating'] = undefined;

/**
 * Reviewer name.
 * @member {String} reviewerName
 */
SaveMultipleReviewsRequest.prototype['reviewerName'] = undefined;

/**
 * Review's text.
 * @member {String} text
 */
SaveMultipleReviewsRequest.prototype['text'] = undefined;

/**
 * Review's title.
 * @member {String} title
 */
SaveMultipleReviewsRequest.prototype['title'] = undefined;

/**
 * If the reviewer is a verified purchaser (`true`) or not (`false`).
 * @member {Boolean} verifiedPurchaser
 */
SaveMultipleReviewsRequest.prototype['verifiedPurchaser'] = undefined;






export default SaveMultipleReviewsRequest;

