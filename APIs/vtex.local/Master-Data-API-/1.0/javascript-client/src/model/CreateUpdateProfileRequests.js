/**
 * Master Data API - v2
 * # ATTENTION: **This version isn't compliant with data entities of old version (e.g. CL and AD). It's possible to use this configuration only to new data entities.**      ## Welcome!    VTEX Master Data is an easy-to-use, secure, fast, scalable and extensible repository. On it you can create your own Entities, store data and consult directly from the storefront or use it to store info for some external integration.    There are internal VTEX modules that use VTEX Master Data as data repository. We have the VTEX Customer Service, VTEX Profile System and VTEX InStore, for example. It is also used by other internal services.    There are two ways to use Master Data:    1. Directly from the storefront  2. External integration    ### Directly from the storefront    If your scenario is to be used inside the storefront, be aware of the following observations:    1. Use the storefront host to query or store information to avoid **CORS**;  2. Configure which information should be public and which shouldn't, inside the JSON Schema of the Data Entity;  3. Do not create query loops (the storefront may be affected with Throttling and apis may be turned off as a security protection);  4. Never add via JS any type of authentication key (x-vtex-api-appkey or x-vtex-api-apptoken);    **It's important to avoid CORS using the relative path**    ### External Integration    If your scenario is to perform external integration, such as migrating client data from another service, be aware of the following observations:    1. Use the host ```{{accountName}}.vtexcommercestable.com.br```;  2. Use the authentication keys (x-vtex-api-appkey ou x-vtex-api-apptoken);    ### Most used attributes listed here    | Name | Description |  | -------- | -------- |  | accountName | Account name in VTEX License Manager |  | name | Data Entity name |  | schema | JSON Schema of a Data Entity |  | id | Identifier of a document |  | x-vtex-api-appKey | User key |  | x-vtex-api-appToken | User token |
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateUpdateProfileRequests model module.
 * @module model/CreateUpdateProfileRequests
 * @version 1.0
 */
class CreateUpdateProfileRequests {
    /**
     * Constructs a new <code>CreateUpdateProfileRequests</code>.
     * @alias module:model/CreateUpdateProfileRequests
     */
    constructor() { 
        
        CreateUpdateProfileRequests.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateUpdateProfileRequests</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateUpdateProfileRequests} obj Optional instance to populate.
     * @return {module:model/CreateUpdateProfileRequests} The populated <code>CreateUpdateProfileRequests</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateUpdateProfileRequests();

            if (data.hasOwnProperty('document')) {
                obj['document'] = ApiClient.convertToType(data['document'], 'String');
            }
            if (data.hasOwnProperty('documentType')) {
                obj['documentType'] = ApiClient.convertToType(data['documentType'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('firstName')) {
                obj['firstName'] = ApiClient.convertToType(data['firstName'], 'String');
            }
            if (data.hasOwnProperty('isCorporate')) {
                obj['isCorporate'] = ApiClient.convertToType(data['isCorporate'], 'Boolean');
            }
            if (data.hasOwnProperty('isNewsletterOptIn')) {
                obj['isNewsletterOptIn'] = ApiClient.convertToType(data['isNewsletterOptIn'], 'Boolean');
            }
            if (data.hasOwnProperty('lastName')) {
                obj['lastName'] = ApiClient.convertToType(data['lastName'], 'String');
            }
            if (data.hasOwnProperty('localeDefault')) {
                obj['localeDefault'] = ApiClient.convertToType(data['localeDefault'], 'String');
            }
            if (data.hasOwnProperty('phone')) {
                obj['phone'] = ApiClient.convertToType(data['phone'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateUpdateProfileRequests</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateUpdateProfileRequests</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['document'] && !(typeof data['document'] === 'string' || data['document'] instanceof String)) {
            throw new Error("Expected the field `document` to be a primitive type in the JSON string but got " + data['document']);
        }
        // ensure the json data is a string
        if (data['documentType'] && !(typeof data['documentType'] === 'string' || data['documentType'] instanceof String)) {
            throw new Error("Expected the field `documentType` to be a primitive type in the JSON string but got " + data['documentType']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['firstName'] && !(typeof data['firstName'] === 'string' || data['firstName'] instanceof String)) {
            throw new Error("Expected the field `firstName` to be a primitive type in the JSON string but got " + data['firstName']);
        }
        // ensure the json data is a string
        if (data['lastName'] && !(typeof data['lastName'] === 'string' || data['lastName'] instanceof String)) {
            throw new Error("Expected the field `lastName` to be a primitive type in the JSON string but got " + data['lastName']);
        }
        // ensure the json data is a string
        if (data['localeDefault'] && !(typeof data['localeDefault'] === 'string' || data['localeDefault'] instanceof String)) {
            throw new Error("Expected the field `localeDefault` to be a primitive type in the JSON string but got " + data['localeDefault']);
        }
        // ensure the json data is a string
        if (data['phone'] && !(typeof data['phone'] === 'string' || data['phone'] instanceof String)) {
            throw new Error("Expected the field `phone` to be a primitive type in the JSON string but got " + data['phone']);
        }

        return true;
    }


}



/**
 * Client document.
 * @member {String} document
 */
CreateUpdateProfileRequests.prototype['document'] = undefined;

/**
 * Client document type.
 * @member {String} documentType
 */
CreateUpdateProfileRequests.prototype['documentType'] = undefined;

/**
 * Client email address.
 * @member {String} email
 */
CreateUpdateProfileRequests.prototype['email'] = undefined;

/**
 * Client first name.
 * @member {String} firstName
 */
CreateUpdateProfileRequests.prototype['firstName'] = undefined;

/**
 * Indicates whether client is corporate.
 * @member {Boolean} isCorporate
 */
CreateUpdateProfileRequests.prototype['isCorporate'] = undefined;

/**
 * Indicates whether client otped to receive the store newsletter.
 * @member {Boolean} isNewsletterOptIn
 */
CreateUpdateProfileRequests.prototype['isNewsletterOptIn'] = undefined;

/**
 * Client last name.
 * @member {String} lastName
 */
CreateUpdateProfileRequests.prototype['lastName'] = undefined;

/**
 * Default locale, used to set store language and currency, for example.
 * @member {String} localeDefault
 */
CreateUpdateProfileRequests.prototype['localeDefault'] = undefined;

/**
 * Client telephone number.
 * @member {String} phone
 */
CreateUpdateProfileRequests.prototype['phone'] = undefined;






export default CreateUpdateProfileRequests;

