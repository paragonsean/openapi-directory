/**
 * Master Data API - v2
 * # ATTENTION: **This version isn't compliant with data entities of old version (e.g. CL and AD). It's possible to use this configuration only to new data entities.**      ## Welcome!    VTEX Master Data is an easy-to-use, secure, fast, scalable and extensible repository. On it you can create your own Entities, store data and consult directly from the storefront or use it to store info for some external integration.    There are internal VTEX modules that use VTEX Master Data as data repository. We have the VTEX Customer Service, VTEX Profile System and VTEX InStore, for example. It is also used by other internal services.    There are two ways to use Master Data:    1. Directly from the storefront  2. External integration    ### Directly from the storefront    If your scenario is to be used inside the storefront, be aware of the following observations:    1. Use the storefront host to query or store information to avoid **CORS**;  2. Configure which information should be public and which shouldn't, inside the JSON Schema of the Data Entity;  3. Do not create query loops (the storefront may be affected with Throttling and apis may be turned off as a security protection);  4. Never add via JS any type of authentication key (x-vtex-api-appkey or x-vtex-api-apptoken);    **It's important to avoid CORS using the relative path**    ### External Integration    If your scenario is to perform external integration, such as migrating client data from another service, be aware of the following observations:    1. Use the host ```{{accountName}}.vtexcommercestable.com.br```;  2. Use the authentication keys (x-vtex-api-appkey ou x-vtex-api-apptoken);    ### Most used attributes listed here    | Name | Description |  | -------- | -------- |  | accountName | Account name in VTEX License Manager |  | name | Data Entity name |  | schema | JSON Schema of a Data Entity |  | id | Identifier of a document |  | x-vtex-api-appKey | User key |  | x-vtex-api-appToken | User token |
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateUpdateAddressRequests.h
 *
 * 
 */

#ifndef OAICreateUpdateAddressRequests_H
#define OAICreateUpdateAddressRequests_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateUpdateAddressRequests : public OAIObject {
public:
    OAICreateUpdateAddressRequests();
    OAICreateUpdateAddressRequests(QString json);
    ~OAICreateUpdateAddressRequests() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAddressName() const;
    void setAddressName(const QString &address_name);
    bool is_address_name_Set() const;
    bool is_address_name_Valid() const;

    QString getAddressType() const;
    void setAddressType(const QString &address_type);
    bool is_address_type_Set() const;
    bool is_address_type_Valid() const;

    QString getCity() const;
    void setCity(const QString &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    QString getComplement() const;
    void setComplement(const QString &complement);
    bool is_complement_Set() const;
    bool is_complement_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getNeighborhood() const;
    void setNeighborhood(const QString &neighborhood);
    bool is_neighborhood_Set() const;
    bool is_neighborhood_Valid() const;

    QString getNumber() const;
    void setNumber(const QString &number);
    bool is_number_Set() const;
    bool is_number_Valid() const;

    QString getPostalCode() const;
    void setPostalCode(const QString &postal_code);
    bool is_postal_code_Set() const;
    bool is_postal_code_Valid() const;

    QString getReceiverName() const;
    void setReceiverName(const QString &receiver_name);
    bool is_receiver_name_Set() const;
    bool is_receiver_name_Valid() const;

    QString getReference() const;
    void setReference(const QString &reference);
    bool is_reference_Set() const;
    bool is_reference_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getStreet() const;
    void setStreet(const QString &street);
    bool is_street_Set() const;
    bool is_street_Valid() const;

    QString getUserId() const;
    void setUserId(const QString &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_address_name;
    bool m_address_name_isSet;
    bool m_address_name_isValid;

    QString m_address_type;
    bool m_address_type_isSet;
    bool m_address_type_isValid;

    QString m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    QString m_complement;
    bool m_complement_isSet;
    bool m_complement_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_neighborhood;
    bool m_neighborhood_isSet;
    bool m_neighborhood_isValid;

    QString m_number;
    bool m_number_isSet;
    bool m_number_isValid;

    QString m_postal_code;
    bool m_postal_code_isSet;
    bool m_postal_code_isValid;

    QString m_receiver_name;
    bool m_receiver_name_isSet;
    bool m_receiver_name_isValid;

    QString m_reference;
    bool m_reference_isSet;
    bool m_reference_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_street;
    bool m_street_isSet;
    bool m_street_isValid;

    QString m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateUpdateAddressRequests)

#endif // OAICreateUpdateAddressRequests_H
