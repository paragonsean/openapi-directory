/*
 * Master Data API - v2
 * # ATTENTION: **This version isn't compliant with data entities of old version (e.g. CL and AD). It's possible to use this configuration only to new data entities.**      ## Welcome!    VTEX Master Data is an easy-to-use, secure, fast, scalable and extensible repository. On it you can create your own Entities, store data and consult directly from the storefront or use it to store info for some external integration.    There are internal VTEX modules that use VTEX Master Data as data repository. We have the VTEX Customer Service, VTEX Profile System and VTEX InStore, for example. It is also used by other internal services.    There are two ways to use Master Data:    1. Directly from the storefront  2. External integration    ### Directly from the storefront    If your scenario is to be used inside the storefront, be aware of the following observations:    1. Use the storefront host to query or store information to avoid **CORS**;  2. Configure which information should be public and which shouldn't, inside the JSON Schema of the Data Entity;  3. Do not create query loops (the storefront may be affected with Throttling and apis may be turned off as a security protection);  4. Never add via JS any type of authentication key (x-vtex-api-appkey or x-vtex-api-apptoken);    **It's important to avoid CORS using the relative path**    ### External Integration    If your scenario is to perform external integration, such as migrating client data from another service, be aware of the following observations:    1. Use the host ```{{accountName}}.vtexcommercestable.com.br```;  2. Use the authentication keys (x-vtex-api-appkey ou x-vtex-api-apptoken);    ### Most used attributes listed here    | Name | Description |  | -------- | -------- |  | accountName | Account name in VTEX License Manager |  | name | Data Entity name |  | schema | JSON Schema of a Data Entity |  | id | Identifier of a document |  | x-vtex-api-appKey | User key |  | x-vtex-api-appToken | User token |
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateUpdateProfileRequests
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:55:27.050089-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateUpdateProfileRequests {
  public static final String SERIALIZED_NAME_DOCUMENT = "document";
  @SerializedName(SERIALIZED_NAME_DOCUMENT)
  private String document;

  public static final String SERIALIZED_NAME_DOCUMENT_TYPE = "documentType";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_TYPE)
  private String documentType;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_IS_CORPORATE = "isCorporate";
  @SerializedName(SERIALIZED_NAME_IS_CORPORATE)
  private Boolean isCorporate;

  public static final String SERIALIZED_NAME_IS_NEWSLETTER_OPT_IN = "isNewsletterOptIn";
  @SerializedName(SERIALIZED_NAME_IS_NEWSLETTER_OPT_IN)
  private Boolean isNewsletterOptIn;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_LOCALE_DEFAULT = "localeDefault";
  @SerializedName(SERIALIZED_NAME_LOCALE_DEFAULT)
  private String localeDefault;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public CreateUpdateProfileRequests() {
  }

  public CreateUpdateProfileRequests document(String document) {
    this.document = document;
    return this;
  }

  /**
   * Client document.
   * @return document
   */
  @javax.annotation.Nullable
  public String getDocument() {
    return document;
  }

  public void setDocument(String document) {
    this.document = document;
  }


  public CreateUpdateProfileRequests documentType(String documentType) {
    this.documentType = documentType;
    return this;
  }

  /**
   * Client document type.
   * @return documentType
   */
  @javax.annotation.Nullable
  public String getDocumentType() {
    return documentType;
  }

  public void setDocumentType(String documentType) {
    this.documentType = documentType;
  }


  public CreateUpdateProfileRequests email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Client email address.
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public CreateUpdateProfileRequests firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * Client first name.
   * @return firstName
   */
  @javax.annotation.Nullable
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public CreateUpdateProfileRequests isCorporate(Boolean isCorporate) {
    this.isCorporate = isCorporate;
    return this;
  }

  /**
   * Indicates whether client is corporate.
   * @return isCorporate
   */
  @javax.annotation.Nullable
  public Boolean getIsCorporate() {
    return isCorporate;
  }

  public void setIsCorporate(Boolean isCorporate) {
    this.isCorporate = isCorporate;
  }


  public CreateUpdateProfileRequests isNewsletterOptIn(Boolean isNewsletterOptIn) {
    this.isNewsletterOptIn = isNewsletterOptIn;
    return this;
  }

  /**
   * Indicates whether client otped to receive the store newsletter.
   * @return isNewsletterOptIn
   */
  @javax.annotation.Nullable
  public Boolean getIsNewsletterOptIn() {
    return isNewsletterOptIn;
  }

  public void setIsNewsletterOptIn(Boolean isNewsletterOptIn) {
    this.isNewsletterOptIn = isNewsletterOptIn;
  }


  public CreateUpdateProfileRequests lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * Client last name.
   * @return lastName
   */
  @javax.annotation.Nullable
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public CreateUpdateProfileRequests localeDefault(String localeDefault) {
    this.localeDefault = localeDefault;
    return this;
  }

  /**
   * Default locale, used to set store language and currency, for example.
   * @return localeDefault
   */
  @javax.annotation.Nullable
  public String getLocaleDefault() {
    return localeDefault;
  }

  public void setLocaleDefault(String localeDefault) {
    this.localeDefault = localeDefault;
  }


  public CreateUpdateProfileRequests phone(String phone) {
    this.phone = phone;
    return this;
  }

  /**
   * Client telephone number.
   * @return phone
   */
  @javax.annotation.Nullable
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateUpdateProfileRequests createUpdateProfileRequests = (CreateUpdateProfileRequests) o;
    return Objects.equals(this.document, createUpdateProfileRequests.document) &&
        Objects.equals(this.documentType, createUpdateProfileRequests.documentType) &&
        Objects.equals(this.email, createUpdateProfileRequests.email) &&
        Objects.equals(this.firstName, createUpdateProfileRequests.firstName) &&
        Objects.equals(this.isCorporate, createUpdateProfileRequests.isCorporate) &&
        Objects.equals(this.isNewsletterOptIn, createUpdateProfileRequests.isNewsletterOptIn) &&
        Objects.equals(this.lastName, createUpdateProfileRequests.lastName) &&
        Objects.equals(this.localeDefault, createUpdateProfileRequests.localeDefault) &&
        Objects.equals(this.phone, createUpdateProfileRequests.phone);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(document, documentType, email, firstName, isCorporate, isNewsletterOptIn, lastName, localeDefault, phone);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateUpdateProfileRequests {\n");
    sb.append("    document: ").append(toIndentedString(document)).append("\n");
    sb.append("    documentType: ").append(toIndentedString(documentType)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    isCorporate: ").append(toIndentedString(isCorporate)).append("\n");
    sb.append("    isNewsletterOptIn: ").append(toIndentedString(isNewsletterOptIn)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    localeDefault: ").append(toIndentedString(localeDefault)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("document");
    openapiFields.add("documentType");
    openapiFields.add("email");
    openapiFields.add("firstName");
    openapiFields.add("isCorporate");
    openapiFields.add("isNewsletterOptIn");
    openapiFields.add("lastName");
    openapiFields.add("localeDefault");
    openapiFields.add("phone");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateUpdateProfileRequests
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateUpdateProfileRequests.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateUpdateProfileRequests is not found in the empty JSON string", CreateUpdateProfileRequests.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateUpdateProfileRequests.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateUpdateProfileRequests` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("document") != null && !jsonObj.get("document").isJsonNull()) && !jsonObj.get("document").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `document` to be a primitive type in the JSON string but got `%s`", jsonObj.get("document").toString()));
      }
      if ((jsonObj.get("documentType") != null && !jsonObj.get("documentType").isJsonNull()) && !jsonObj.get("documentType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `documentType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("documentType").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("firstName") != null && !jsonObj.get("firstName").isJsonNull()) && !jsonObj.get("firstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstName").toString()));
      }
      if ((jsonObj.get("lastName") != null && !jsonObj.get("lastName").isJsonNull()) && !jsonObj.get("lastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastName").toString()));
      }
      if ((jsonObj.get("localeDefault") != null && !jsonObj.get("localeDefault").isJsonNull()) && !jsonObj.get("localeDefault").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `localeDefault` to be a primitive type in the JSON string but got `%s`", jsonObj.get("localeDefault").toString()));
      }
      if ((jsonObj.get("phone") != null && !jsonObj.get("phone").isJsonNull()) && !jsonObj.get("phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateUpdateProfileRequests.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateUpdateProfileRequests' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateUpdateProfileRequests> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateUpdateProfileRequests.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateUpdateProfileRequests>() {
           @Override
           public void write(JsonWriter out, CreateUpdateProfileRequests value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateUpdateProfileRequests read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateUpdateProfileRequests given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateUpdateProfileRequests
   * @throws IOException if the JSON string is invalid with respect to CreateUpdateProfileRequests
   */
  public static CreateUpdateProfileRequests fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateUpdateProfileRequests.class);
  }

  /**
   * Convert an instance of CreateUpdateProfileRequests to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

