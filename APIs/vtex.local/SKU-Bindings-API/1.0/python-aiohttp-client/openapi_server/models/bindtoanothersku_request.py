# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BindtoanotherskuRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stock_keeping_unit_id: int=None):
        """BindtoanotherskuRequest - a model defined in OpenAPI

        :param stock_keeping_unit_id: The stock_keeping_unit_id of this BindtoanotherskuRequest.
        """
        self.openapi_types = {
            'stock_keeping_unit_id': int
        }

        self.attribute_map = {
            'stock_keeping_unit_id': 'StockKeepingUnitId'
        }

        self._stock_keeping_unit_id = stock_keeping_unit_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BindtoanotherskuRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Bindtoanothersku_request of this BindtoanotherskuRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stock_keeping_unit_id(self):
        """Gets the stock_keeping_unit_id of this BindtoanotherskuRequest.

        SKU ID in the marketplace.

        :return: The stock_keeping_unit_id of this BindtoanotherskuRequest.
        :rtype: int
        """
        return self._stock_keeping_unit_id

    @stock_keeping_unit_id.setter
    def stock_keeping_unit_id(self, stock_keeping_unit_id):
        """Sets the stock_keeping_unit_id of this BindtoanotherskuRequest.

        SKU ID in the marketplace.

        :param stock_keeping_unit_id: The stock_keeping_unit_id of this BindtoanotherskuRequest.
        :type stock_keeping_unit_id: int
        """
        if stock_keeping_unit_id is None:
            raise ValueError("Invalid value for `stock_keeping_unit_id`, must not be `None`")

        self._stock_keeping_unit_id = stock_keeping_unit_id
