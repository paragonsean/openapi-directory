# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetallbySellerId200ResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, freight_commission_percentage: float=None, is_active: bool=None, product_commission_percentage: float=None, seller_id: str=None, seller_stock_keeping_unit_id: str=None, stock_keeping_unit_id: int=None):
        """GetallbySellerId200ResponseInner - a model defined in OpenAPI

        :param freight_commission_percentage: The freight_commission_percentage of this GetallbySellerId200ResponseInner.
        :param is_active: The is_active of this GetallbySellerId200ResponseInner.
        :param product_commission_percentage: The product_commission_percentage of this GetallbySellerId200ResponseInner.
        :param seller_id: The seller_id of this GetallbySellerId200ResponseInner.
        :param seller_stock_keeping_unit_id: The seller_stock_keeping_unit_id of this GetallbySellerId200ResponseInner.
        :param stock_keeping_unit_id: The stock_keeping_unit_id of this GetallbySellerId200ResponseInner.
        """
        self.openapi_types = {
            'freight_commission_percentage': float,
            'is_active': bool,
            'product_commission_percentage': float,
            'seller_id': str,
            'seller_stock_keeping_unit_id': str,
            'stock_keeping_unit_id': int
        }

        self.attribute_map = {
            'freight_commission_percentage': 'FreightCommissionPercentage',
            'is_active': 'IsActive',
            'product_commission_percentage': 'ProductCommissionPercentage',
            'seller_id': 'SellerId',
            'seller_stock_keeping_unit_id': 'SellerStockKeepingUnitId',
            'stock_keeping_unit_id': 'StockKeepingUnitId'
        }

        self._freight_commission_percentage = freight_commission_percentage
        self._is_active = is_active
        self._product_commission_percentage = product_commission_percentage
        self._seller_id = seller_id
        self._seller_stock_keeping_unit_id = seller_stock_keeping_unit_id
        self._stock_keeping_unit_id = stock_keeping_unit_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetallbySellerId200ResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetallbySellerId_200_response_inner of this GetallbySellerId200ResponseInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def freight_commission_percentage(self):
        """Gets the freight_commission_percentage of this GetallbySellerId200ResponseInner.

        The percentage that must be filled in as agreed between the marketplace and the seller.

        :return: The freight_commission_percentage of this GetallbySellerId200ResponseInner.
        :rtype: float
        """
        return self._freight_commission_percentage

    @freight_commission_percentage.setter
    def freight_commission_percentage(self, freight_commission_percentage):
        """Sets the freight_commission_percentage of this GetallbySellerId200ResponseInner.

        The percentage that must be filled in as agreed between the marketplace and the seller.

        :param freight_commission_percentage: The freight_commission_percentage of this GetallbySellerId200ResponseInner.
        :type freight_commission_percentage: float
        """

        self._freight_commission_percentage = freight_commission_percentage

    @property
    def is_active(self):
        """Gets the is_active of this GetallbySellerId200ResponseInner.

        Defines if the SKU binding is active.

        :return: The is_active of this GetallbySellerId200ResponseInner.
        :rtype: bool
        """
        return self._is_active

    @is_active.setter
    def is_active(self, is_active):
        """Sets the is_active of this GetallbySellerId200ResponseInner.

        Defines if the SKU binding is active.

        :param is_active: The is_active of this GetallbySellerId200ResponseInner.
        :type is_active: bool
        """

        self._is_active = is_active

    @property
    def product_commission_percentage(self):
        """Gets the product_commission_percentage of this GetallbySellerId200ResponseInner.

        The percentage that must be filled in as agreed between the marketplace and the seller. If there is no such commission, please fill in the field with the value: `0.00`.

        :return: The product_commission_percentage of this GetallbySellerId200ResponseInner.
        :rtype: float
        """
        return self._product_commission_percentage

    @product_commission_percentage.setter
    def product_commission_percentage(self, product_commission_percentage):
        """Sets the product_commission_percentage of this GetallbySellerId200ResponseInner.

        The percentage that must be filled in as agreed between the marketplace and the seller. If there is no such commission, please fill in the field with the value: `0.00`.

        :param product_commission_percentage: The product_commission_percentage of this GetallbySellerId200ResponseInner.
        :type product_commission_percentage: float
        """

        self._product_commission_percentage = product_commission_percentage

    @property
    def seller_id(self):
        """Gets the seller_id of this GetallbySellerId200ResponseInner.

        ID that identifies the seller in the marketplace. It can be the same as the seller name or a unique number. Check the **Sellers management** section in the Admin to get the correct ID.

        :return: The seller_id of this GetallbySellerId200ResponseInner.
        :rtype: str
        """
        return self._seller_id

    @seller_id.setter
    def seller_id(self, seller_id):
        """Sets the seller_id of this GetallbySellerId200ResponseInner.

        ID that identifies the seller in the marketplace. It can be the same as the seller name or a unique number. Check the **Sellers management** section in the Admin to get the correct ID.

        :param seller_id: The seller_id of this GetallbySellerId200ResponseInner.
        :type seller_id: str
        """

        self._seller_id = seller_id

    @property
    def seller_stock_keeping_unit_id(self):
        """Gets the seller_stock_keeping_unit_id of this GetallbySellerId200ResponseInner.

        SKU ID in the seller's store.

        :return: The seller_stock_keeping_unit_id of this GetallbySellerId200ResponseInner.
        :rtype: str
        """
        return self._seller_stock_keeping_unit_id

    @seller_stock_keeping_unit_id.setter
    def seller_stock_keeping_unit_id(self, seller_stock_keeping_unit_id):
        """Sets the seller_stock_keeping_unit_id of this GetallbySellerId200ResponseInner.

        SKU ID in the seller's store.

        :param seller_stock_keeping_unit_id: The seller_stock_keeping_unit_id of this GetallbySellerId200ResponseInner.
        :type seller_stock_keeping_unit_id: str
        """

        self._seller_stock_keeping_unit_id = seller_stock_keeping_unit_id

    @property
    def stock_keeping_unit_id(self):
        """Gets the stock_keeping_unit_id of this GetallbySellerId200ResponseInner.

        SKU ID in the marketplace.

        :return: The stock_keeping_unit_id of this GetallbySellerId200ResponseInner.
        :rtype: int
        """
        return self._stock_keeping_unit_id

    @stock_keeping_unit_id.setter
    def stock_keeping_unit_id(self, stock_keeping_unit_id):
        """Sets the stock_keeping_unit_id of this GetallbySellerId200ResponseInner.

        SKU ID in the marketplace.

        :param stock_keeping_unit_id: The stock_keeping_unit_id of this GetallbySellerId200ResponseInner.
        :type stock_keeping_unit_id: int
        """

        self._stock_keeping_unit_id = stock_keeping_unit_id
