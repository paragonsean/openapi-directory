/**
 * SKU Bindings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetbySkuId_200_response_inner.h
 *
 * Object with information about an SKU Binding.
 */

#ifndef OAIGetbySkuId_200_response_inner_H
#define OAIGetbySkuId_200_response_inner_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetbySkuId_200_response_inner : public OAIObject {
public:
    OAIGetbySkuId_200_response_inner();
    OAIGetbySkuId_200_response_inner(QString json);
    ~OAIGetbySkuId_200_response_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsActive() const;
    void setIsActive(const bool &is_active);
    bool is_is_active_Set() const;
    bool is_is_active_Valid() const;

    QString getLastUpdateDate() const;
    void setLastUpdateDate(const QString &last_update_date);
    bool is_last_update_date_Set() const;
    bool is_last_update_date_Valid() const;

    qint32 getSalesPolicy() const;
    void setSalesPolicy(const qint32 &sales_policy);
    bool is_sales_policy_Set() const;
    bool is_sales_policy_Valid() const;

    QString getSellerId() const;
    void setSellerId(const QString &seller_id);
    bool is_seller_id_Set() const;
    bool is_seller_id_Valid() const;

    QString getSellerSkuId() const;
    void setSellerSkuId(const QString &seller_sku_id);
    bool is_seller_sku_id_Set() const;
    bool is_seller_sku_id_Valid() const;

    qint32 getStockKeepingUnitId() const;
    void setStockKeepingUnitId(const qint32 &stock_keeping_unit_id);
    bool is_stock_keeping_unit_id_Set() const;
    bool is_stock_keeping_unit_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_active;
    bool m_is_active_isSet;
    bool m_is_active_isValid;

    QString m_last_update_date;
    bool m_last_update_date_isSet;
    bool m_last_update_date_isValid;

    qint32 m_sales_policy;
    bool m_sales_policy_isSet;
    bool m_sales_policy_isValid;

    QString m_seller_id;
    bool m_seller_id_isSet;
    bool m_seller_id_isValid;

    QString m_seller_sku_id;
    bool m_seller_sku_id_isSet;
    bool m_seller_sku_id_isValid;

    qint32 m_stock_keeping_unit_id;
    bool m_stock_keeping_unit_id_isSet;
    bool m_stock_keeping_unit_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetbySkuId_200_response_inner)

#endif // OAIGetbySkuId_200_response_inner_H
