/**
 * SKU Bindings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetallbySellerId_200_response_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetallbySellerId_200_response_inner::OAIGetallbySellerId_200_response_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetallbySellerId_200_response_inner::OAIGetallbySellerId_200_response_inner() {
    this->initializeModel();
}

OAIGetallbySellerId_200_response_inner::~OAIGetallbySellerId_200_response_inner() {}

void OAIGetallbySellerId_200_response_inner::initializeModel() {

    m_freight_commission_percentage_isSet = false;
    m_freight_commission_percentage_isValid = false;

    m_is_active_isSet = false;
    m_is_active_isValid = false;

    m_product_commission_percentage_isSet = false;
    m_product_commission_percentage_isValid = false;

    m_seller_id_isSet = false;
    m_seller_id_isValid = false;

    m_seller_stock_keeping_unit_id_isSet = false;
    m_seller_stock_keeping_unit_id_isValid = false;

    m_stock_keeping_unit_id_isSet = false;
    m_stock_keeping_unit_id_isValid = false;
}

void OAIGetallbySellerId_200_response_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetallbySellerId_200_response_inner::fromJsonObject(QJsonObject json) {

    m_freight_commission_percentage_isValid = ::OpenAPI::fromJsonValue(m_freight_commission_percentage, json[QString("FreightCommissionPercentage")]);
    m_freight_commission_percentage_isSet = !json[QString("FreightCommissionPercentage")].isNull() && m_freight_commission_percentage_isValid;

    m_is_active_isValid = ::OpenAPI::fromJsonValue(m_is_active, json[QString("IsActive")]);
    m_is_active_isSet = !json[QString("IsActive")].isNull() && m_is_active_isValid;

    m_product_commission_percentage_isValid = ::OpenAPI::fromJsonValue(m_product_commission_percentage, json[QString("ProductCommissionPercentage")]);
    m_product_commission_percentage_isSet = !json[QString("ProductCommissionPercentage")].isNull() && m_product_commission_percentage_isValid;

    m_seller_id_isValid = ::OpenAPI::fromJsonValue(m_seller_id, json[QString("SellerId")]);
    m_seller_id_isSet = !json[QString("SellerId")].isNull() && m_seller_id_isValid;

    m_seller_stock_keeping_unit_id_isValid = ::OpenAPI::fromJsonValue(m_seller_stock_keeping_unit_id, json[QString("SellerStockKeepingUnitId")]);
    m_seller_stock_keeping_unit_id_isSet = !json[QString("SellerStockKeepingUnitId")].isNull() && m_seller_stock_keeping_unit_id_isValid;

    m_stock_keeping_unit_id_isValid = ::OpenAPI::fromJsonValue(m_stock_keeping_unit_id, json[QString("StockKeepingUnitId")]);
    m_stock_keeping_unit_id_isSet = !json[QString("StockKeepingUnitId")].isNull() && m_stock_keeping_unit_id_isValid;
}

QString OAIGetallbySellerId_200_response_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetallbySellerId_200_response_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_freight_commission_percentage_isSet) {
        obj.insert(QString("FreightCommissionPercentage"), ::OpenAPI::toJsonValue(m_freight_commission_percentage));
    }
    if (m_is_active_isSet) {
        obj.insert(QString("IsActive"), ::OpenAPI::toJsonValue(m_is_active));
    }
    if (m_product_commission_percentage_isSet) {
        obj.insert(QString("ProductCommissionPercentage"), ::OpenAPI::toJsonValue(m_product_commission_percentage));
    }
    if (m_seller_id_isSet) {
        obj.insert(QString("SellerId"), ::OpenAPI::toJsonValue(m_seller_id));
    }
    if (m_seller_stock_keeping_unit_id_isSet) {
        obj.insert(QString("SellerStockKeepingUnitId"), ::OpenAPI::toJsonValue(m_seller_stock_keeping_unit_id));
    }
    if (m_stock_keeping_unit_id_isSet) {
        obj.insert(QString("StockKeepingUnitId"), ::OpenAPI::toJsonValue(m_stock_keeping_unit_id));
    }
    return obj;
}

double OAIGetallbySellerId_200_response_inner::getFreightCommissionPercentage() const {
    return m_freight_commission_percentage;
}
void OAIGetallbySellerId_200_response_inner::setFreightCommissionPercentage(const double &freight_commission_percentage) {
    m_freight_commission_percentage = freight_commission_percentage;
    m_freight_commission_percentage_isSet = true;
}

bool OAIGetallbySellerId_200_response_inner::is_freight_commission_percentage_Set() const{
    return m_freight_commission_percentage_isSet;
}

bool OAIGetallbySellerId_200_response_inner::is_freight_commission_percentage_Valid() const{
    return m_freight_commission_percentage_isValid;
}

bool OAIGetallbySellerId_200_response_inner::isIsActive() const {
    return m_is_active;
}
void OAIGetallbySellerId_200_response_inner::setIsActive(const bool &is_active) {
    m_is_active = is_active;
    m_is_active_isSet = true;
}

bool OAIGetallbySellerId_200_response_inner::is_is_active_Set() const{
    return m_is_active_isSet;
}

bool OAIGetallbySellerId_200_response_inner::is_is_active_Valid() const{
    return m_is_active_isValid;
}

double OAIGetallbySellerId_200_response_inner::getProductCommissionPercentage() const {
    return m_product_commission_percentage;
}
void OAIGetallbySellerId_200_response_inner::setProductCommissionPercentage(const double &product_commission_percentage) {
    m_product_commission_percentage = product_commission_percentage;
    m_product_commission_percentage_isSet = true;
}

bool OAIGetallbySellerId_200_response_inner::is_product_commission_percentage_Set() const{
    return m_product_commission_percentage_isSet;
}

bool OAIGetallbySellerId_200_response_inner::is_product_commission_percentage_Valid() const{
    return m_product_commission_percentage_isValid;
}

QString OAIGetallbySellerId_200_response_inner::getSellerId() const {
    return m_seller_id;
}
void OAIGetallbySellerId_200_response_inner::setSellerId(const QString &seller_id) {
    m_seller_id = seller_id;
    m_seller_id_isSet = true;
}

bool OAIGetallbySellerId_200_response_inner::is_seller_id_Set() const{
    return m_seller_id_isSet;
}

bool OAIGetallbySellerId_200_response_inner::is_seller_id_Valid() const{
    return m_seller_id_isValid;
}

QString OAIGetallbySellerId_200_response_inner::getSellerStockKeepingUnitId() const {
    return m_seller_stock_keeping_unit_id;
}
void OAIGetallbySellerId_200_response_inner::setSellerStockKeepingUnitId(const QString &seller_stock_keeping_unit_id) {
    m_seller_stock_keeping_unit_id = seller_stock_keeping_unit_id;
    m_seller_stock_keeping_unit_id_isSet = true;
}

bool OAIGetallbySellerId_200_response_inner::is_seller_stock_keeping_unit_id_Set() const{
    return m_seller_stock_keeping_unit_id_isSet;
}

bool OAIGetallbySellerId_200_response_inner::is_seller_stock_keeping_unit_id_Valid() const{
    return m_seller_stock_keeping_unit_id_isValid;
}

qint32 OAIGetallbySellerId_200_response_inner::getStockKeepingUnitId() const {
    return m_stock_keeping_unit_id;
}
void OAIGetallbySellerId_200_response_inner::setStockKeepingUnitId(const qint32 &stock_keeping_unit_id) {
    m_stock_keeping_unit_id = stock_keeping_unit_id;
    m_stock_keeping_unit_id_isSet = true;
}

bool OAIGetallbySellerId_200_response_inner::is_stock_keeping_unit_id_Set() const{
    return m_stock_keeping_unit_id_isSet;
}

bool OAIGetallbySellerId_200_response_inner::is_stock_keeping_unit_id_Valid() const{
    return m_stock_keeping_unit_id_isValid;
}

bool OAIGetallbySellerId_200_response_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_freight_commission_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_commission_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_seller_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_seller_stock_keeping_unit_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stock_keeping_unit_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetallbySellerId_200_response_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
