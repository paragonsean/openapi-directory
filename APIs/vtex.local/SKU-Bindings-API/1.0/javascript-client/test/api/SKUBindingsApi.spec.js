/**
 * SKU Bindings API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SkuBindingsApi);
  }
}(this, function(expect, SkuBindingsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SkuBindingsApi.SKUBindingsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SKUBindingsApi', function() {
    describe('activateSKUBinding', function() {
      it('should call activateSKUBinding successfully', function(done) {
        //uncomment below and update the code to test activateSKUBinding
        //instance.activateSKUBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bindtoanothersku', function() {
      it('should call bindtoanothersku successfully', function(done) {
        //uncomment below and update the code to test bindtoanothersku
        //instance.bindtoanothersku(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('changeNotification', function() {
      it('should call changeNotification successfully', function(done) {
        //uncomment below and update the code to test changeNotification
        //instance.changeNotification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deactivateSKUBinding', function() {
      it('should call deactivateSKUBinding successfully', function(done) {
        //uncomment below and update the code to test deactivateSKUBinding
        //instance.deactivateSKUBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSKUsellerassociation', function() {
      it('should call deleteSKUsellerassociation successfully', function(done) {
        //uncomment below and update the code to test deleteSKUsellerassociation
        //instance.deleteSKUsellerassociation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSKUseller', function() {
      it('should call getSKUseller successfully', function(done) {
        //uncomment below and update the code to test getSKUseller
        //instance.getSKUseller(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getallbySellerId', function() {
      it('should call getallbySellerId successfully', function(done) {
        //uncomment below and update the code to test getallbySellerId
        //instance.getallbySellerId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getbySkuId', function() {
      it('should call getbySkuId successfully', function(done) {
        //uncomment below and update the code to test getbySkuId
        //instance.getbySkuId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getpagedadmin', function() {
      it('should call getpagedadmin successfully', function(done) {
        //uncomment below and update the code to test getpagedadmin
        //instance.getpagedadmin(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getpagedbySellerId', function() {
      it('should call getpagedbySellerId successfully', function(done) {
        //uncomment below and update the code to test getpagedbySellerId
        //instance.getpagedbySellerId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('insertSKUBinding', function() {
      it('should call insertSKUBinding successfully', function(done) {
        //uncomment below and update the code to test insertSKUBinding
        //instance.insertSKUBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('skuBindingPvtSkusellerChangenotificationSellerIdSellerSkuIdPost', function() {
      it('should call skuBindingPvtSkusellerChangenotificationSellerIdSellerSkuIdPost successfully', function(done) {
        //uncomment below and update the code to test skuBindingPvtSkusellerChangenotificationSellerIdSellerSkuIdPost
        //instance.skuBindingPvtSkusellerChangenotificationSellerIdSellerSkuIdPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
