# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CancelthetransactionRequestMinicart(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, freight: int=None, items: List[object]=None, tax: int=None):
        """CancelthetransactionRequestMinicart - a model defined in OpenAPI

        :param freight: The freight of this CancelthetransactionRequestMinicart.
        :param items: The items of this CancelthetransactionRequestMinicart.
        :param tax: The tax of this CancelthetransactionRequestMinicart.
        """
        self.openapi_types = {
            'freight': int,
            'items': List[object],
            'tax': int
        }

        self.attribute_map = {
            'freight': 'freight',
            'items': 'items',
            'tax': 'tax'
        }

        self._freight = freight
        self._items = items
        self._tax = tax

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CancelthetransactionRequestMinicart':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CancelthetransactionRequest_minicart of this CancelthetransactionRequestMinicart.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def freight(self):
        """Gets the freight of this CancelthetransactionRequestMinicart.


        :return: The freight of this CancelthetransactionRequestMinicart.
        :rtype: int
        """
        return self._freight

    @freight.setter
    def freight(self, freight):
        """Sets the freight of this CancelthetransactionRequestMinicart.


        :param freight: The freight of this CancelthetransactionRequestMinicart.
        :type freight: int
        """

        self._freight = freight

    @property
    def items(self):
        """Gets the items of this CancelthetransactionRequestMinicart.


        :return: The items of this CancelthetransactionRequestMinicart.
        :rtype: List[object]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this CancelthetransactionRequestMinicart.


        :param items: The items of this CancelthetransactionRequestMinicart.
        :type items: List[object]
        """

        self._items = items

    @property
    def tax(self):
        """Gets the tax of this CancelthetransactionRequestMinicart.


        :return: The tax of this CancelthetransactionRequestMinicart.
        :rtype: int
        """
        return self._tax

    @tax.setter
    def tax(self, tax):
        """Sets the tax of this CancelthetransactionRequestMinicart.


        :param tax: The tax of this CancelthetransactionRequestMinicart.
        :type tax: int
        """

        self._tax = tax
