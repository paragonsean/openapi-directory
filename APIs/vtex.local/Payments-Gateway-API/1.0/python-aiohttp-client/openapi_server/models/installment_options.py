# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InstallmentOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, interest_rate_method: str=None):
        """InstallmentOptions - a model defined in OpenAPI

        :param interest_rate_method: The interest_rate_method of this InstallmentOptions.
        """
        self.openapi_types = {
            'interest_rate_method': str
        }

        self.attribute_map = {
            'interest_rate_method': 'interestRateMethod'
        }

        self._interest_rate_method = interest_rate_method

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InstallmentOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InstallmentOptions of this InstallmentOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def interest_rate_method(self):
        """Gets the interest_rate_method of this InstallmentOptions.


        :return: The interest_rate_method of this InstallmentOptions.
        :rtype: str
        """
        return self._interest_rate_method

    @interest_rate_method.setter
    def interest_rate_method(self, interest_rate_method):
        """Sets the interest_rate_method of this InstallmentOptions.


        :param interest_rate_method: The interest_rate_method of this InstallmentOptions.
        :type interest_rate_method: str
        """
        if interest_rate_method is None:
            raise ValueError("Invalid value for `interest_rate_method`, must not be `None`")

        self._interest_rate_method = interest_rate_method
