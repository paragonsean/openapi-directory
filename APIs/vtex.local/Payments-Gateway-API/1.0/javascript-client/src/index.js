/**
 * Payments Gateway API
 * >ℹ️ Onboarding guide  >  > Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Payments Gateway API allows you to get payment data and process your store's transactions.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Action from './model/Action';
import Antifraud from './model/Antifraud';
import Antifraud1 from './model/Antifraud1';
import Cancellations from './model/Cancellations';
import CancelthetransactionRequest from './model/CancelthetransactionRequest';
import CancelthetransactionRequestMinicart from './model/CancelthetransactionRequestMinicart';
import Configuration from './model/Configuration';
import Connector from './model/Connector';
import Error from './model/Error';
import Field from './model/Field';
import Fields from './model/Fields';
import Fields1 from './model/Fields1';
import Fields3 from './model/Fields3';
import InsertAffiliationRequest from './model/InsertAffiliationRequest';
import InsertRuleRequest from './model/InsertRuleRequest';
import Installment from './model/Installment';
import InstallmentOptions from './model/InstallmentOptions';
import Interactions from './model/Interactions';
import InvalidRequestValue from './model/InvalidRequestValue';
import Issuer from './model/Issuer';
import Model1CreateanewtransactionRequest from './model/Model1CreateanewtransactionRequest';
import Model2SendPaymentsPrivateRequest from './model/Model2SendPaymentsPrivateRequest';
import Model2SendPaymentsPublicRequest from './model/Model2SendPaymentsPublicRequest';
import Model2SendPaymentsWithSavedCreditCardRequest from './model/Model2SendPaymentsWithSavedCreditCardRequest';
import Model3SendAdditionalDataRequest from './model/Model3SendAdditionalDataRequest';
import Model4DoauthorizationRequest from './model/Model4DoauthorizationRequest';
import Option from './model/Option';
import Payment from './model/Payment';
import Payment1 from './model/Payment1';
import PaymentDetailsResponse from './model/PaymentDetailsResponse';
import PaymentSystem from './model/PaymentSystem';
import PaymentSystemsResponse from './model/PaymentSystemsResponse';
import Payments from './model/Payments';
import PaymentsByTransactionResponse from './model/PaymentsByTransactionResponse';
import ReceivePaymentsResponse from './model/ReceivePaymentsResponse';
import Refunds from './model/Refunds';
import RefundthetransactionRequest from './model/RefundthetransactionRequest';
import Request from './model/Request';
import Rule from './model/Rule';
import RuleByIdRequest from './model/RuleByIdRequest';
import SalesChannel from './model/SalesChannel';
import Self from './model/Self';
import SettleResponse from './model/SettleResponse';
import Settlements from './model/Settlements';
import SettlethetransactionRequest from './model/SettlethetransactionRequest';
import StartTransactionResponse from './model/StartTransactionResponse';
import Transaction from './model/Transaction';
import TransactionDetailsResponse from './model/TransactionDetailsResponse';
import TransactionSettlementDetails from './model/TransactionSettlementDetails';
import UpdateAffiliationRequest from './model/UpdateAffiliationRequest';
import ValidRequest from './model/ValidRequest';
import Validator from './model/Validator';
import ConfigurationApi from './api/ConfigurationApi';
import InstallmentsApi from './api/InstallmentsApi';
import TransactionFlowApi from './api/TransactionFlowApi';
import TransactionProcessApi from './api/TransactionProcessApi';


/**
* &gt;ℹ️ Onboarding guide  &gt;  &gt; Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer&#39;s journey.    The Payments Gateway API allows you to get payment data and process your store&#39;s transactions..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var PaymentsGatewayApi = require('index'); // See note below*.
* var xxxSvc = new PaymentsGatewayApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new PaymentsGatewayApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new PaymentsGatewayApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new PaymentsGatewayApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Action model constructor.
     * @property {module:model/Action}
     */
    Action,

    /**
     * The Antifraud model constructor.
     * @property {module:model/Antifraud}
     */
    Antifraud,

    /**
     * The Antifraud1 model constructor.
     * @property {module:model/Antifraud1}
     */
    Antifraud1,

    /**
     * The Cancellations model constructor.
     * @property {module:model/Cancellations}
     */
    Cancellations,

    /**
     * The CancelthetransactionRequest model constructor.
     * @property {module:model/CancelthetransactionRequest}
     */
    CancelthetransactionRequest,

    /**
     * The CancelthetransactionRequestMinicart model constructor.
     * @property {module:model/CancelthetransactionRequestMinicart}
     */
    CancelthetransactionRequestMinicart,

    /**
     * The Configuration model constructor.
     * @property {module:model/Configuration}
     */
    Configuration,

    /**
     * The Connector model constructor.
     * @property {module:model/Connector}
     */
    Connector,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The Field model constructor.
     * @property {module:model/Field}
     */
    Field,

    /**
     * The Fields model constructor.
     * @property {module:model/Fields}
     */
    Fields,

    /**
     * The Fields1 model constructor.
     * @property {module:model/Fields1}
     */
    Fields1,

    /**
     * The Fields3 model constructor.
     * @property {module:model/Fields3}
     */
    Fields3,

    /**
     * The InsertAffiliationRequest model constructor.
     * @property {module:model/InsertAffiliationRequest}
     */
    InsertAffiliationRequest,

    /**
     * The InsertRuleRequest model constructor.
     * @property {module:model/InsertRuleRequest}
     */
    InsertRuleRequest,

    /**
     * The Installment model constructor.
     * @property {module:model/Installment}
     */
    Installment,

    /**
     * The InstallmentOptions model constructor.
     * @property {module:model/InstallmentOptions}
     */
    InstallmentOptions,

    /**
     * The Interactions model constructor.
     * @property {module:model/Interactions}
     */
    Interactions,

    /**
     * The InvalidRequestValue model constructor.
     * @property {module:model/InvalidRequestValue}
     */
    InvalidRequestValue,

    /**
     * The Issuer model constructor.
     * @property {module:model/Issuer}
     */
    Issuer,

    /**
     * The Model1CreateanewtransactionRequest model constructor.
     * @property {module:model/Model1CreateanewtransactionRequest}
     */
    Model1CreateanewtransactionRequest,

    /**
     * The Model2SendPaymentsPrivateRequest model constructor.
     * @property {module:model/Model2SendPaymentsPrivateRequest}
     */
    Model2SendPaymentsPrivateRequest,

    /**
     * The Model2SendPaymentsPublicRequest model constructor.
     * @property {module:model/Model2SendPaymentsPublicRequest}
     */
    Model2SendPaymentsPublicRequest,

    /**
     * The Model2SendPaymentsWithSavedCreditCardRequest model constructor.
     * @property {module:model/Model2SendPaymentsWithSavedCreditCardRequest}
     */
    Model2SendPaymentsWithSavedCreditCardRequest,

    /**
     * The Model3SendAdditionalDataRequest model constructor.
     * @property {module:model/Model3SendAdditionalDataRequest}
     */
    Model3SendAdditionalDataRequest,

    /**
     * The Model4DoauthorizationRequest model constructor.
     * @property {module:model/Model4DoauthorizationRequest}
     */
    Model4DoauthorizationRequest,

    /**
     * The Option model constructor.
     * @property {module:model/Option}
     */
    Option,

    /**
     * The Payment model constructor.
     * @property {module:model/Payment}
     */
    Payment,

    /**
     * The Payment1 model constructor.
     * @property {module:model/Payment1}
     */
    Payment1,

    /**
     * The PaymentDetailsResponse model constructor.
     * @property {module:model/PaymentDetailsResponse}
     */
    PaymentDetailsResponse,

    /**
     * The PaymentSystem model constructor.
     * @property {module:model/PaymentSystem}
     */
    PaymentSystem,

    /**
     * The PaymentSystemsResponse model constructor.
     * @property {module:model/PaymentSystemsResponse}
     */
    PaymentSystemsResponse,

    /**
     * The Payments model constructor.
     * @property {module:model/Payments}
     */
    Payments,

    /**
     * The PaymentsByTransactionResponse model constructor.
     * @property {module:model/PaymentsByTransactionResponse}
     */
    PaymentsByTransactionResponse,

    /**
     * The ReceivePaymentsResponse model constructor.
     * @property {module:model/ReceivePaymentsResponse}
     */
    ReceivePaymentsResponse,

    /**
     * The Refunds model constructor.
     * @property {module:model/Refunds}
     */
    Refunds,

    /**
     * The RefundthetransactionRequest model constructor.
     * @property {module:model/RefundthetransactionRequest}
     */
    RefundthetransactionRequest,

    /**
     * The Request model constructor.
     * @property {module:model/Request}
     */
    Request,

    /**
     * The Rule model constructor.
     * @property {module:model/Rule}
     */
    Rule,

    /**
     * The RuleByIdRequest model constructor.
     * @property {module:model/RuleByIdRequest}
     */
    RuleByIdRequest,

    /**
     * The SalesChannel model constructor.
     * @property {module:model/SalesChannel}
     */
    SalesChannel,

    /**
     * The Self model constructor.
     * @property {module:model/Self}
     */
    Self,

    /**
     * The SettleResponse model constructor.
     * @property {module:model/SettleResponse}
     */
    SettleResponse,

    /**
     * The Settlements model constructor.
     * @property {module:model/Settlements}
     */
    Settlements,

    /**
     * The SettlethetransactionRequest model constructor.
     * @property {module:model/SettlethetransactionRequest}
     */
    SettlethetransactionRequest,

    /**
     * The StartTransactionResponse model constructor.
     * @property {module:model/StartTransactionResponse}
     */
    StartTransactionResponse,

    /**
     * The Transaction model constructor.
     * @property {module:model/Transaction}
     */
    Transaction,

    /**
     * The TransactionDetailsResponse model constructor.
     * @property {module:model/TransactionDetailsResponse}
     */
    TransactionDetailsResponse,

    /**
     * The TransactionSettlementDetails model constructor.
     * @property {module:model/TransactionSettlementDetails}
     */
    TransactionSettlementDetails,

    /**
     * The UpdateAffiliationRequest model constructor.
     * @property {module:model/UpdateAffiliationRequest}
     */
    UpdateAffiliationRequest,

    /**
     * The ValidRequest model constructor.
     * @property {module:model/ValidRequest}
     */
    ValidRequest,

    /**
     * The Validator model constructor.
     * @property {module:model/Validator}
     */
    Validator,

    /**
    * The ConfigurationApi service constructor.
    * @property {module:api/ConfigurationApi}
    */
    ConfigurationApi,

    /**
    * The InstallmentsApi service constructor.
    * @property {module:api/InstallmentsApi}
    */
    InstallmentsApi,

    /**
    * The TransactionFlowApi service constructor.
    * @property {module:api/TransactionFlowApi}
    */
    TransactionFlowApi,

    /**
    * The TransactionProcessApi service constructor.
    * @property {module:api/TransactionProcessApi}
    */
    TransactionProcessApi
};
