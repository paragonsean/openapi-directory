/**
 * Payments Gateway API
 * >ℹ️ Onboarding guide  >  > Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Payments Gateway API allows you to get payment data and process your store's transactions.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CancelthetransactionRequestMinicart model module.
 * @module model/CancelthetransactionRequestMinicart
 * @version 1.0
 */
class CancelthetransactionRequestMinicart {
    /**
     * Constructs a new <code>CancelthetransactionRequestMinicart</code>.
     * This field is filled with the content of the cart of the transaction, which can be obtained using [Get Orders](https://developers.vtex.com/vtex-rest-api/reference/orders#getorder) or [Transaction Details](https://developers.vtex.com/vtex-rest-api/reference/transaction-process#transactiondetails) endpoints. It should only be included for transactions with split payment.
     * @alias module:model/CancelthetransactionRequestMinicart
     */
    constructor() { 
        
        CancelthetransactionRequestMinicart.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CancelthetransactionRequestMinicart</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CancelthetransactionRequestMinicart} obj Optional instance to populate.
     * @return {module:model/CancelthetransactionRequestMinicart} The populated <code>CancelthetransactionRequestMinicart</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CancelthetransactionRequestMinicart();

            if (data.hasOwnProperty('freight')) {
                obj['freight'] = ApiClient.convertToType(data['freight'], 'Number');
            }
            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], [Object]);
            }
            if (data.hasOwnProperty('tax')) {
                obj['tax'] = ApiClient.convertToType(data['tax'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CancelthetransactionRequestMinicart</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CancelthetransactionRequestMinicart</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['items'])) {
            throw new Error("Expected the field `items` to be an array in the JSON data but got " + data['items']);
        }

        return true;
    }


}



/**
 * @member {Number} freight
 */
CancelthetransactionRequestMinicart.prototype['freight'] = undefined;

/**
 * @member {Array.<Object>} items
 */
CancelthetransactionRequestMinicart.prototype['items'] = undefined;

/**
 * @member {Number} tax
 */
CancelthetransactionRequestMinicart.prototype['tax'] = undefined;






export default CancelthetransactionRequestMinicart;

