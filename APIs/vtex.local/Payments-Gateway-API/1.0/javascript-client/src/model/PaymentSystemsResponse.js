/**
 * Payments Gateway API
 * >ℹ️ Onboarding guide  >  > Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Payments Gateway API allows you to get payment data and process your store's transactions.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Rule from './Rule';
import Validator from './Validator';

/**
 * The PaymentSystemsResponse model module.
 * @module model/PaymentSystemsResponse
 * @version 1.0
 */
class PaymentSystemsResponse {
    /**
     * Constructs a new <code>PaymentSystemsResponse</code>.
     * @alias module:model/PaymentSystemsResponse
     * @param affiliationId {String} 
     * @param allowCommercialCondition {Boolean} 
     * @param allowCommercialPolicy {Boolean} 
     * @param allowCountry {Boolean} 
     * @param allowInstallments {Boolean} 
     * @param allowIssuer {Boolean} 
     * @param allowMultiple {Boolean} 
     * @param allowNotification {Boolean} 
     * @param allowPeriod {Boolean} 
     * @param antifraudConnectorImplementation {String} 
     * @param connectorId {Number} 
     * @param connectorImplementation {String} 
     * @param description {String} 
     * @param dueDate {String} 
     * @param fields {String} 
     * @param groupName {String} 
     * @param id {Number} 
     * @param implementation {String} 
     * @param isAvailable {Boolean} 
     * @param isCustom {Boolean} 
     * @param isSelfAuthorized {Boolean} 
     * @param name {String} 
     * @param requiresDocument {Boolean} 
     * @param requiresPhone {Boolean} 
     * @param rules {Array.<module:model/Rule>} 
     * @param validator {module:model/Validator} 
     */
    constructor(affiliationId, allowCommercialCondition, allowCommercialPolicy, allowCountry, allowInstallments, allowIssuer, allowMultiple, allowNotification, allowPeriod, antifraudConnectorImplementation, connectorId, connectorImplementation, description, dueDate, fields, groupName, id, implementation, isAvailable, isCustom, isSelfAuthorized, name, requiresDocument, requiresPhone, rules, validator) { 
        
        PaymentSystemsResponse.initialize(this, affiliationId, allowCommercialCondition, allowCommercialPolicy, allowCountry, allowInstallments, allowIssuer, allowMultiple, allowNotification, allowPeriod, antifraudConnectorImplementation, connectorId, connectorImplementation, description, dueDate, fields, groupName, id, implementation, isAvailable, isCustom, isSelfAuthorized, name, requiresDocument, requiresPhone, rules, validator);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, affiliationId, allowCommercialCondition, allowCommercialPolicy, allowCountry, allowInstallments, allowIssuer, allowMultiple, allowNotification, allowPeriod, antifraudConnectorImplementation, connectorId, connectorImplementation, description, dueDate, fields, groupName, id, implementation, isAvailable, isCustom, isSelfAuthorized, name, requiresDocument, requiresPhone, rules, validator) { 
        obj['affiliationId'] = affiliationId;
        obj['allowCommercialCondition'] = allowCommercialCondition;
        obj['allowCommercialPolicy'] = allowCommercialPolicy;
        obj['allowCountry'] = allowCountry;
        obj['allowInstallments'] = allowInstallments;
        obj['allowIssuer'] = allowIssuer;
        obj['allowMultiple'] = allowMultiple;
        obj['allowNotification'] = allowNotification;
        obj['allowPeriod'] = allowPeriod;
        obj['antifraudConnectorImplementation'] = antifraudConnectorImplementation;
        obj['connectorId'] = connectorId;
        obj['connectorImplementation'] = connectorImplementation;
        obj['description'] = description;
        obj['dueDate'] = dueDate;
        obj['fields'] = fields;
        obj['groupName'] = groupName;
        obj['id'] = id;
        obj['implementation'] = implementation;
        obj['isAvailable'] = isAvailable;
        obj['isCustom'] = isCustom;
        obj['isSelfAuthorized'] = isSelfAuthorized;
        obj['name'] = name;
        obj['requiresDocument'] = requiresDocument;
        obj['requiresPhone'] = requiresPhone;
        obj['rules'] = rules;
        obj['validator'] = validator;
    }

    /**
     * Constructs a <code>PaymentSystemsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PaymentSystemsResponse} obj Optional instance to populate.
     * @return {module:model/PaymentSystemsResponse} The populated <code>PaymentSystemsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaymentSystemsResponse();

            if (data.hasOwnProperty('affiliationId')) {
                obj['affiliationId'] = ApiClient.convertToType(data['affiliationId'], 'String');
            }
            if (data.hasOwnProperty('allowCommercialCondition')) {
                obj['allowCommercialCondition'] = ApiClient.convertToType(data['allowCommercialCondition'], 'Boolean');
            }
            if (data.hasOwnProperty('allowCommercialPolicy')) {
                obj['allowCommercialPolicy'] = ApiClient.convertToType(data['allowCommercialPolicy'], 'Boolean');
            }
            if (data.hasOwnProperty('allowCountry')) {
                obj['allowCountry'] = ApiClient.convertToType(data['allowCountry'], 'Boolean');
            }
            if (data.hasOwnProperty('allowInstallments')) {
                obj['allowInstallments'] = ApiClient.convertToType(data['allowInstallments'], 'Boolean');
            }
            if (data.hasOwnProperty('allowIssuer')) {
                obj['allowIssuer'] = ApiClient.convertToType(data['allowIssuer'], 'Boolean');
            }
            if (data.hasOwnProperty('allowMultiple')) {
                obj['allowMultiple'] = ApiClient.convertToType(data['allowMultiple'], 'Boolean');
            }
            if (data.hasOwnProperty('allowNotification')) {
                obj['allowNotification'] = ApiClient.convertToType(data['allowNotification'], 'Boolean');
            }
            if (data.hasOwnProperty('allowPeriod')) {
                obj['allowPeriod'] = ApiClient.convertToType(data['allowPeriod'], 'Boolean');
            }
            if (data.hasOwnProperty('antifraudConnectorImplementation')) {
                obj['antifraudConnectorImplementation'] = ApiClient.convertToType(data['antifraudConnectorImplementation'], 'String');
            }
            if (data.hasOwnProperty('connectorId')) {
                obj['connectorId'] = ApiClient.convertToType(data['connectorId'], 'Number');
            }
            if (data.hasOwnProperty('connectorImplementation')) {
                obj['connectorImplementation'] = ApiClient.convertToType(data['connectorImplementation'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('dueDate')) {
                obj['dueDate'] = ApiClient.convertToType(data['dueDate'], 'String');
            }
            if (data.hasOwnProperty('fields')) {
                obj['fields'] = ApiClient.convertToType(data['fields'], 'String');
            }
            if (data.hasOwnProperty('groupName')) {
                obj['groupName'] = ApiClient.convertToType(data['groupName'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('implementation')) {
                obj['implementation'] = ApiClient.convertToType(data['implementation'], 'String');
            }
            if (data.hasOwnProperty('isAvailable')) {
                obj['isAvailable'] = ApiClient.convertToType(data['isAvailable'], 'Boolean');
            }
            if (data.hasOwnProperty('isCustom')) {
                obj['isCustom'] = ApiClient.convertToType(data['isCustom'], 'Boolean');
            }
            if (data.hasOwnProperty('isSelfAuthorized')) {
                obj['isSelfAuthorized'] = ApiClient.convertToType(data['isSelfAuthorized'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('requiresDocument')) {
                obj['requiresDocument'] = ApiClient.convertToType(data['requiresDocument'], 'Boolean');
            }
            if (data.hasOwnProperty('requiresPhone')) {
                obj['requiresPhone'] = ApiClient.convertToType(data['requiresPhone'], 'Boolean');
            }
            if (data.hasOwnProperty('rules')) {
                obj['rules'] = ApiClient.convertToType(data['rules'], [Rule]);
            }
            if (data.hasOwnProperty('validator')) {
                obj['validator'] = Validator.constructFromObject(data['validator']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PaymentSystemsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PaymentSystemsResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PaymentSystemsResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['affiliationId'] && !(typeof data['affiliationId'] === 'string' || data['affiliationId'] instanceof String)) {
            throw new Error("Expected the field `affiliationId` to be a primitive type in the JSON string but got " + data['affiliationId']);
        }
        // ensure the json data is a string
        if (data['antifraudConnectorImplementation'] && !(typeof data['antifraudConnectorImplementation'] === 'string' || data['antifraudConnectorImplementation'] instanceof String)) {
            throw new Error("Expected the field `antifraudConnectorImplementation` to be a primitive type in the JSON string but got " + data['antifraudConnectorImplementation']);
        }
        // ensure the json data is a string
        if (data['connectorImplementation'] && !(typeof data['connectorImplementation'] === 'string' || data['connectorImplementation'] instanceof String)) {
            throw new Error("Expected the field `connectorImplementation` to be a primitive type in the JSON string but got " + data['connectorImplementation']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['dueDate'] && !(typeof data['dueDate'] === 'string' || data['dueDate'] instanceof String)) {
            throw new Error("Expected the field `dueDate` to be a primitive type in the JSON string but got " + data['dueDate']);
        }
        // ensure the json data is a string
        if (data['fields'] && !(typeof data['fields'] === 'string' || data['fields'] instanceof String)) {
            throw new Error("Expected the field `fields` to be a primitive type in the JSON string but got " + data['fields']);
        }
        // ensure the json data is a string
        if (data['groupName'] && !(typeof data['groupName'] === 'string' || data['groupName'] instanceof String)) {
            throw new Error("Expected the field `groupName` to be a primitive type in the JSON string but got " + data['groupName']);
        }
        // ensure the json data is a string
        if (data['implementation'] && !(typeof data['implementation'] === 'string' || data['implementation'] instanceof String)) {
            throw new Error("Expected the field `implementation` to be a primitive type in the JSON string but got " + data['implementation']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['rules']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['rules'])) {
                throw new Error("Expected the field `rules` to be an array in the JSON data but got " + data['rules']);
            }
            // validate the optional field `rules` (array)
            for (const item of data['rules']) {
                Rule.validateJSON(item);
            };
        }
        // validate the optional field `validator`
        if (data['validator']) { // data not null
          Validator.validateJSON(data['validator']);
        }

        return true;
    }


}

PaymentSystemsResponse.RequiredProperties = ["affiliationId", "allowCommercialCondition", "allowCommercialPolicy", "allowCountry", "allowInstallments", "allowIssuer", "allowMultiple", "allowNotification", "allowPeriod", "antifraudConnectorImplementation", "connectorId", "connectorImplementation", "description", "dueDate", "fields", "groupName", "id", "implementation", "isAvailable", "isCustom", "isSelfAuthorized", "name", "requiresDocument", "requiresPhone", "rules", "validator"];

/**
 * @member {String} affiliationId
 */
PaymentSystemsResponse.prototype['affiliationId'] = undefined;

/**
 * @member {Boolean} allowCommercialCondition
 */
PaymentSystemsResponse.prototype['allowCommercialCondition'] = undefined;

/**
 * @member {Boolean} allowCommercialPolicy
 */
PaymentSystemsResponse.prototype['allowCommercialPolicy'] = undefined;

/**
 * @member {Boolean} allowCountry
 */
PaymentSystemsResponse.prototype['allowCountry'] = undefined;

/**
 * @member {Boolean} allowInstallments
 */
PaymentSystemsResponse.prototype['allowInstallments'] = undefined;

/**
 * @member {Boolean} allowIssuer
 */
PaymentSystemsResponse.prototype['allowIssuer'] = undefined;

/**
 * @member {Boolean} allowMultiple
 */
PaymentSystemsResponse.prototype['allowMultiple'] = undefined;

/**
 * @member {Boolean} allowNotification
 */
PaymentSystemsResponse.prototype['allowNotification'] = undefined;

/**
 * @member {Boolean} allowPeriod
 */
PaymentSystemsResponse.prototype['allowPeriod'] = undefined;

/**
 * @member {String} antifraudConnectorImplementation
 */
PaymentSystemsResponse.prototype['antifraudConnectorImplementation'] = undefined;

/**
 * @member {Number} connectorId
 */
PaymentSystemsResponse.prototype['connectorId'] = undefined;

/**
 * @member {String} connectorImplementation
 */
PaymentSystemsResponse.prototype['connectorImplementation'] = undefined;

/**
 * @member {String} description
 */
PaymentSystemsResponse.prototype['description'] = undefined;

/**
 * @member {String} dueDate
 */
PaymentSystemsResponse.prototype['dueDate'] = undefined;

/**
 * @member {String} fields
 */
PaymentSystemsResponse.prototype['fields'] = undefined;

/**
 * @member {String} groupName
 */
PaymentSystemsResponse.prototype['groupName'] = undefined;

/**
 * @member {Number} id
 */
PaymentSystemsResponse.prototype['id'] = undefined;

/**
 * @member {String} implementation
 */
PaymentSystemsResponse.prototype['implementation'] = undefined;

/**
 * @member {Boolean} isAvailable
 */
PaymentSystemsResponse.prototype['isAvailable'] = undefined;

/**
 * @member {Boolean} isCustom
 */
PaymentSystemsResponse.prototype['isCustom'] = undefined;

/**
 * @member {Boolean} isSelfAuthorized
 */
PaymentSystemsResponse.prototype['isSelfAuthorized'] = undefined;

/**
 * @member {String} name
 */
PaymentSystemsResponse.prototype['name'] = undefined;

/**
 * @member {Boolean} requiresDocument
 */
PaymentSystemsResponse.prototype['requiresDocument'] = undefined;

/**
 * @member {Boolean} requiresPhone
 */
PaymentSystemsResponse.prototype['requiresPhone'] = undefined;

/**
 * 
 * @member {Array.<module:model/Rule>} rules
 */
PaymentSystemsResponse.prototype['rules'] = undefined;

/**
 * @member {module:model/Validator} validator
 */
PaymentSystemsResponse.prototype['validator'] = undefined;






export default PaymentSystemsResponse;

