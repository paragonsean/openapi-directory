/**
 * Payments Gateway API
 * >ℹ️ Onboarding guide  >  > Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Payments Gateway API allows you to get payment data and process your store's transactions.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PaymentsGatewayApi);
  }
}(this, function(expect, PaymentsGatewayApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PaymentsGatewayApi.PaymentSystemsResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PaymentSystemsResponse', function() {
    it('should create an instance of PaymentSystemsResponse', function() {
      // uncomment below and update the code to test PaymentSystemsResponse
      //var instance = new PaymentsGatewayApi.PaymentSystemsResponse();
      //expect(instance).to.be.a(PaymentsGatewayApi.PaymentSystemsResponse);
    });

    it('should have the property affiliationId (base name: "affiliationId")', function() {
      // uncomment below and update the code to test the property affiliationId
      //var instance = new PaymentsGatewayApi.PaymentSystemsResponse();
      //expect(instance).to.be();
    });

    it('should have the property allowCommercialCondition (base name: "allowCommercialCondition")', function() {
      // uncomment below and update the code to test the property allowCommercialCondition
      //var instance = new PaymentsGatewayApi.PaymentSystemsResponse();
      //expect(instance).to.be();
    });

    it('should have the property allowCommercialPolicy (base name: "allowCommercialPolicy")', function() {
      // uncomment below and update the code to test the property allowCommercialPolicy
      //var instance = new PaymentsGatewayApi.PaymentSystemsResponse();
      //expect(instance).to.be();
    });

    it('should have the property allowCountry (base name: "allowCountry")', function() {
      // uncomment below and update the code to test the property allowCountry
      //var instance = new PaymentsGatewayApi.PaymentSystemsResponse();
      //expect(instance).to.be();
    });

    it('should have the property allowInstallments (base name: "allowInstallments")', function() {
      // uncomment below and update the code to test the property allowInstallments
      //var instance = new PaymentsGatewayApi.PaymentSystemsResponse();
      //expect(instance).to.be();
    });

    it('should have the property allowIssuer (base name: "allowIssuer")', function() {
      // uncomment below and update the code to test the property allowIssuer
      //var instance = new PaymentsGatewayApi.PaymentSystemsResponse();
      //expect(instance).to.be();
    });

    it('should have the property allowMultiple (base name: "allowMultiple")', function() {
      // uncomment below and update the code to test the property allowMultiple
      //var instance = new PaymentsGatewayApi.PaymentSystemsResponse();
      //expect(instance).to.be();
    });

    it('should have the property allowNotification (base name: "allowNotification")', function() {
      // uncomment below and update the code to test the property allowNotification
      //var instance = new PaymentsGatewayApi.PaymentSystemsResponse();
      //expect(instance).to.be();
    });

    it('should have the property allowPeriod (base name: "allowPeriod")', function() {
      // uncomment below and update the code to test the property allowPeriod
      //var instance = new PaymentsGatewayApi.PaymentSystemsResponse();
      //expect(instance).to.be();
    });

    it('should have the property antifraudConnectorImplementation (base name: "antifraudConnectorImplementation")', function() {
      // uncomment below and update the code to test the property antifraudConnectorImplementation
      //var instance = new PaymentsGatewayApi.PaymentSystemsResponse();
      //expect(instance).to.be();
    });

    it('should have the property connectorId (base name: "connectorId")', function() {
      // uncomment below and update the code to test the property connectorId
      //var instance = new PaymentsGatewayApi.PaymentSystemsResponse();
      //expect(instance).to.be();
    });

    it('should have the property connectorImplementation (base name: "connectorImplementation")', function() {
      // uncomment below and update the code to test the property connectorImplementation
      //var instance = new PaymentsGatewayApi.PaymentSystemsResponse();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new PaymentsGatewayApi.PaymentSystemsResponse();
      //expect(instance).to.be();
    });

    it('should have the property dueDate (base name: "dueDate")', function() {
      // uncomment below and update the code to test the property dueDate
      //var instance = new PaymentsGatewayApi.PaymentSystemsResponse();
      //expect(instance).to.be();
    });

    it('should have the property fields (base name: "fields")', function() {
      // uncomment below and update the code to test the property fields
      //var instance = new PaymentsGatewayApi.PaymentSystemsResponse();
      //expect(instance).to.be();
    });

    it('should have the property groupName (base name: "groupName")', function() {
      // uncomment below and update the code to test the property groupName
      //var instance = new PaymentsGatewayApi.PaymentSystemsResponse();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new PaymentsGatewayApi.PaymentSystemsResponse();
      //expect(instance).to.be();
    });

    it('should have the property implementation (base name: "implementation")', function() {
      // uncomment below and update the code to test the property implementation
      //var instance = new PaymentsGatewayApi.PaymentSystemsResponse();
      //expect(instance).to.be();
    });

    it('should have the property isAvailable (base name: "isAvailable")', function() {
      // uncomment below and update the code to test the property isAvailable
      //var instance = new PaymentsGatewayApi.PaymentSystemsResponse();
      //expect(instance).to.be();
    });

    it('should have the property isCustom (base name: "isCustom")', function() {
      // uncomment below and update the code to test the property isCustom
      //var instance = new PaymentsGatewayApi.PaymentSystemsResponse();
      //expect(instance).to.be();
    });

    it('should have the property isSelfAuthorized (base name: "isSelfAuthorized")', function() {
      // uncomment below and update the code to test the property isSelfAuthorized
      //var instance = new PaymentsGatewayApi.PaymentSystemsResponse();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new PaymentsGatewayApi.PaymentSystemsResponse();
      //expect(instance).to.be();
    });

    it('should have the property requiresDocument (base name: "requiresDocument")', function() {
      // uncomment below and update the code to test the property requiresDocument
      //var instance = new PaymentsGatewayApi.PaymentSystemsResponse();
      //expect(instance).to.be();
    });

    it('should have the property requiresPhone (base name: "requiresPhone")', function() {
      // uncomment below and update the code to test the property requiresPhone
      //var instance = new PaymentsGatewayApi.PaymentSystemsResponse();
      //expect(instance).to.be();
    });

    it('should have the property rules (base name: "rules")', function() {
      // uncomment below and update the code to test the property rules
      //var instance = new PaymentsGatewayApi.PaymentSystemsResponse();
      //expect(instance).to.be();
    });

    it('should have the property validator (base name: "validator")', function() {
      // uncomment below and update the code to test the property validator
      //var instance = new PaymentsGatewayApi.PaymentSystemsResponse();
      //expect(instance).to.be();
    });

  });

}));
