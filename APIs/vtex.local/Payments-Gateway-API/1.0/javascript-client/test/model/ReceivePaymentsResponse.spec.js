/**
 * Payments Gateway API
 * >ℹ️ Onboarding guide  >  > Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Payments Gateway API allows you to get payment data and process your store's transactions.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PaymentsGatewayApi);
  }
}(this, function(expect, PaymentsGatewayApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PaymentsGatewayApi.ReceivePaymentsResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ReceivePaymentsResponse', function() {
    it('should create an instance of ReceivePaymentsResponse', function() {
      // uncomment below and update the code to test ReceivePaymentsResponse
      //var instance = new PaymentsGatewayApi.ReceivePaymentsResponse();
      //expect(instance).to.be.a(PaymentsGatewayApi.ReceivePaymentsResponse);
    });

    it('should have the property connectorResponses (base name: "ConnectorResponses")', function() {
      // uncomment below and update the code to test the property connectorResponses
      //var instance = new PaymentsGatewayApi.ReceivePaymentsResponse();
      //expect(instance).to.be();
    });

    it('should have the property showConnectorResponses (base name: "ShowConnectorResponses")', function() {
      // uncomment below and update the code to test the property showConnectorResponses
      //var instance = new PaymentsGatewayApi.ReceivePaymentsResponse();
      //expect(instance).to.be();
    });

    it('should have the property allowInstallments (base name: "allowInstallments")', function() {
      // uncomment below and update the code to test the property allowInstallments
      //var instance = new PaymentsGatewayApi.ReceivePaymentsResponse();
      //expect(instance).to.be();
    });

    it('should have the property allowIssuer (base name: "allowIssuer")', function() {
      // uncomment below and update the code to test the property allowIssuer
      //var instance = new PaymentsGatewayApi.ReceivePaymentsResponse();
      //expect(instance).to.be();
    });

    it('should have the property allowNotification (base name: "allowNotification")', function() {
      // uncomment below and update the code to test the property allowNotification
      //var instance = new PaymentsGatewayApi.ReceivePaymentsResponse();
      //expect(instance).to.be();
    });

    it('should have the property connector (base name: "connector")', function() {
      // uncomment below and update the code to test the property connector
      //var instance = new PaymentsGatewayApi.ReceivePaymentsResponse();
      //expect(instance).to.be();
    });

    it('should have the property connectorResponse (base name: "connectorResponse")', function() {
      // uncomment below and update the code to test the property connectorResponse
      //var instance = new PaymentsGatewayApi.ReceivePaymentsResponse();
      //expect(instance).to.be();
    });

    it('should have the property currencyCode (base name: "currencyCode")', function() {
      // uncomment below and update the code to test the property currencyCode
      //var instance = new PaymentsGatewayApi.ReceivePaymentsResponse();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new PaymentsGatewayApi.ReceivePaymentsResponse();
      //expect(instance).to.be();
    });

    it('should have the property fields (base name: "fields")', function() {
      // uncomment below and update the code to test the property fields
      //var instance = new PaymentsGatewayApi.ReceivePaymentsResponse();
      //expect(instance).to.be();
    });

    it('should have the property group (base name: "group")', function() {
      // uncomment below and update the code to test the property group
      //var instance = new PaymentsGatewayApi.ReceivePaymentsResponse();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new PaymentsGatewayApi.ReceivePaymentsResponse();
      //expect(instance).to.be();
    });

    it('should have the property installments (base name: "installments")', function() {
      // uncomment below and update the code to test the property installments
      //var instance = new PaymentsGatewayApi.ReceivePaymentsResponse();
      //expect(instance).to.be();
    });

    it('should have the property installmentsInterestRate (base name: "installmentsInterestRate")', function() {
      // uncomment below and update the code to test the property installmentsInterestRate
      //var instance = new PaymentsGatewayApi.ReceivePaymentsResponse();
      //expect(instance).to.be();
    });

    it('should have the property installmentsValue (base name: "installmentsValue")', function() {
      // uncomment below and update the code to test the property installmentsValue
      //var instance = new PaymentsGatewayApi.ReceivePaymentsResponse();
      //expect(instance).to.be();
    });

    it('should have the property isAvailable (base name: "isAvailable")', function() {
      // uncomment below and update the code to test the property isAvailable
      //var instance = new PaymentsGatewayApi.ReceivePaymentsResponse();
      //expect(instance).to.be();
    });

    it('should have the property isCustom (base name: "isCustom")', function() {
      // uncomment below and update the code to test the property isCustom
      //var instance = new PaymentsGatewayApi.ReceivePaymentsResponse();
      //expect(instance).to.be();
    });

    it('should have the property merchantName (base name: "merchantName")', function() {
      // uncomment below and update the code to test the property merchantName
      //var instance = new PaymentsGatewayApi.ReceivePaymentsResponse();
      //expect(instance).to.be();
    });

    it('should have the property paymentSystem (base name: "paymentSystem")', function() {
      // uncomment below and update the code to test the property paymentSystem
      //var instance = new PaymentsGatewayApi.ReceivePaymentsResponse();
      //expect(instance).to.be();
    });

    it('should have the property paymentSystemName (base name: "paymentSystemName")', function() {
      // uncomment below and update the code to test the property paymentSystemName
      //var instance = new PaymentsGatewayApi.ReceivePaymentsResponse();
      //expect(instance).to.be();
    });

    it('should have the property provider (base name: "provider")', function() {
      // uncomment below and update the code to test the property provider
      //var instance = new PaymentsGatewayApi.ReceivePaymentsResponse();
      //expect(instance).to.be();
    });

    it('should have the property referenceValue (base name: "referenceValue")', function() {
      // uncomment below and update the code to test the property referenceValue
      //var instance = new PaymentsGatewayApi.ReceivePaymentsResponse();
      //expect(instance).to.be();
    });

    it('should have the property returnCode (base name: "returnCode")', function() {
      // uncomment below and update the code to test the property returnCode
      //var instance = new PaymentsGatewayApi.ReceivePaymentsResponse();
      //expect(instance).to.be();
    });

    it('should have the property returnMessage (base name: "returnMessage")', function() {
      // uncomment below and update the code to test the property returnMessage
      //var instance = new PaymentsGatewayApi.ReceivePaymentsResponse();
      //expect(instance).to.be();
    });

    it('should have the property self (base name: "self")', function() {
      // uncomment below and update the code to test the property self
      //var instance = new PaymentsGatewayApi.ReceivePaymentsResponse();
      //expect(instance).to.be();
    });

    it('should have the property sheets (base name: "sheets")', function() {
      // uncomment below and update the code to test the property sheets
      //var instance = new PaymentsGatewayApi.ReceivePaymentsResponse();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new PaymentsGatewayApi.ReceivePaymentsResponse();
      //expect(instance).to.be();
    });

    it('should have the property tid (base name: "tid")', function() {
      // uncomment below and update the code to test the property tid
      //var instance = new PaymentsGatewayApi.ReceivePaymentsResponse();
      //expect(instance).to.be();
    });

    it('should have the property value (base name: "value")', function() {
      // uncomment below and update the code to test the property value
      //var instance = new PaymentsGatewayApi.ReceivePaymentsResponse();
      //expect(instance).to.be();
    });

  });

}));
