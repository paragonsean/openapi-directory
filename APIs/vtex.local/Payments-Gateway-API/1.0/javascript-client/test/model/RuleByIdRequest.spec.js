/**
 * Payments Gateway API
 * >ℹ️ Onboarding guide  >  > Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Payments Gateway API allows you to get payment data and process your store's transactions.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PaymentsGatewayApi);
  }
}(this, function(expect, PaymentsGatewayApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PaymentsGatewayApi.RuleByIdRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RuleByIdRequest', function() {
    it('should create an instance of RuleByIdRequest', function() {
      // uncomment below and update the code to test RuleByIdRequest
      //var instance = new PaymentsGatewayApi.RuleByIdRequest();
      //expect(instance).to.be.a(PaymentsGatewayApi.RuleByIdRequest);
    });

    it('should have the property antifraud (base name: "antifraud")', function() {
      // uncomment below and update the code to test the property antifraud
      //var instance = new PaymentsGatewayApi.RuleByIdRequest();
      //expect(instance).to.be();
    });

    it('should have the property beginDate (base name: "beginDate")', function() {
      // uncomment below and update the code to test the property beginDate
      //var instance = new PaymentsGatewayApi.RuleByIdRequest();
      //expect(instance).to.be();
    });

    it('should have the property condition (base name: "condition")', function() {
      // uncomment below and update the code to test the property condition
      //var instance = new PaymentsGatewayApi.RuleByIdRequest();
      //expect(instance).to.be();
    });

    it('should have the property connector (base name: "connector")', function() {
      // uncomment below and update the code to test the property connector
      //var instance = new PaymentsGatewayApi.RuleByIdRequest();
      //expect(instance).to.be();
    });

    it('should have the property country (base name: "country")', function() {
      // uncomment below and update the code to test the property country
      //var instance = new PaymentsGatewayApi.RuleByIdRequest();
      //expect(instance).to.be();
    });

    it('should have the property dateIntervals (base name: "dateIntervals")', function() {
      // uncomment below and update the code to test the property dateIntervals
      //var instance = new PaymentsGatewayApi.RuleByIdRequest();
      //expect(instance).to.be();
    });

    it('should have the property enabled (base name: "enabled")', function() {
      // uncomment below and update the code to test the property enabled
      //var instance = new PaymentsGatewayApi.RuleByIdRequest();
      //expect(instance).to.be();
    });

    it('should have the property endDate (base name: "endDate")', function() {
      // uncomment below and update the code to test the property endDate
      //var instance = new PaymentsGatewayApi.RuleByIdRequest();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new PaymentsGatewayApi.RuleByIdRequest();
      //expect(instance).to.be();
    });

    it('should have the property installmentOptions (base name: "installmentOptions")', function() {
      // uncomment below and update the code to test the property installmentOptions
      //var instance = new PaymentsGatewayApi.RuleByIdRequest();
      //expect(instance).to.be();
    });

    it('should have the property isDefault (base name: "isDefault")', function() {
      // uncomment below and update the code to test the property isDefault
      //var instance = new PaymentsGatewayApi.RuleByIdRequest();
      //expect(instance).to.be();
    });

    it('should have the property isSelfAuthorized (base name: "isSelfAuthorized")', function() {
      // uncomment below and update the code to test the property isSelfAuthorized
      //var instance = new PaymentsGatewayApi.RuleByIdRequest();
      //expect(instance).to.be();
    });

    it('should have the property issuer (base name: "issuer")', function() {
      // uncomment below and update the code to test the property issuer
      //var instance = new PaymentsGatewayApi.RuleByIdRequest();
      //expect(instance).to.be();
    });

    it('should have the property multiMerchantList (base name: "multiMerchantList")', function() {
      // uncomment below and update the code to test the property multiMerchantList
      //var instance = new PaymentsGatewayApi.RuleByIdRequest();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new PaymentsGatewayApi.RuleByIdRequest();
      //expect(instance).to.be();
    });

    it('should have the property paymentSystem (base name: "paymentSystem")', function() {
      // uncomment below and update the code to test the property paymentSystem
      //var instance = new PaymentsGatewayApi.RuleByIdRequest();
      //expect(instance).to.be();
    });

    it('should have the property salesChannels (base name: "salesChannels")', function() {
      // uncomment below and update the code to test the property salesChannels
      //var instance = new PaymentsGatewayApi.RuleByIdRequest();
      //expect(instance).to.be();
    });

  });

}));
