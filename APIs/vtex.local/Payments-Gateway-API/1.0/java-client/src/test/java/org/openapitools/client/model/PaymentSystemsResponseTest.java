/*
 * Payments Gateway API
 * >ℹ️ Onboarding guide  >  > Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Payments Gateway API allows you to get payment data and process your store's transactions.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Rule;
import org.openapitools.client.model.Validator;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PaymentSystemsResponse
 */
public class PaymentSystemsResponseTest {
    private final PaymentSystemsResponse model = new PaymentSystemsResponse();

    /**
     * Model tests for PaymentSystemsResponse
     */
    @Test
    public void testPaymentSystemsResponse() {
        // TODO: test PaymentSystemsResponse
    }

    /**
     * Test the property 'affiliationId'
     */
    @Test
    public void affiliationIdTest() {
        // TODO: test affiliationId
    }

    /**
     * Test the property 'allowCommercialCondition'
     */
    @Test
    public void allowCommercialConditionTest() {
        // TODO: test allowCommercialCondition
    }

    /**
     * Test the property 'allowCommercialPolicy'
     */
    @Test
    public void allowCommercialPolicyTest() {
        // TODO: test allowCommercialPolicy
    }

    /**
     * Test the property 'allowCountry'
     */
    @Test
    public void allowCountryTest() {
        // TODO: test allowCountry
    }

    /**
     * Test the property 'allowInstallments'
     */
    @Test
    public void allowInstallmentsTest() {
        // TODO: test allowInstallments
    }

    /**
     * Test the property 'allowIssuer'
     */
    @Test
    public void allowIssuerTest() {
        // TODO: test allowIssuer
    }

    /**
     * Test the property 'allowMultiple'
     */
    @Test
    public void allowMultipleTest() {
        // TODO: test allowMultiple
    }

    /**
     * Test the property 'allowNotification'
     */
    @Test
    public void allowNotificationTest() {
        // TODO: test allowNotification
    }

    /**
     * Test the property 'allowPeriod'
     */
    @Test
    public void allowPeriodTest() {
        // TODO: test allowPeriod
    }

    /**
     * Test the property 'antifraudConnectorImplementation'
     */
    @Test
    public void antifraudConnectorImplementationTest() {
        // TODO: test antifraudConnectorImplementation
    }

    /**
     * Test the property 'connectorId'
     */
    @Test
    public void connectorIdTest() {
        // TODO: test connectorId
    }

    /**
     * Test the property 'connectorImplementation'
     */
    @Test
    public void connectorImplementationTest() {
        // TODO: test connectorImplementation
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'dueDate'
     */
    @Test
    public void dueDateTest() {
        // TODO: test dueDate
    }

    /**
     * Test the property 'fields'
     */
    @Test
    public void fieldsTest() {
        // TODO: test fields
    }

    /**
     * Test the property 'groupName'
     */
    @Test
    public void groupNameTest() {
        // TODO: test groupName
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'implementation'
     */
    @Test
    public void implementationTest() {
        // TODO: test implementation
    }

    /**
     * Test the property 'isAvailable'
     */
    @Test
    public void isAvailableTest() {
        // TODO: test isAvailable
    }

    /**
     * Test the property 'isCustom'
     */
    @Test
    public void isCustomTest() {
        // TODO: test isCustom
    }

    /**
     * Test the property 'isSelfAuthorized'
     */
    @Test
    public void isSelfAuthorizedTest() {
        // TODO: test isSelfAuthorized
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'requiresDocument'
     */
    @Test
    public void requiresDocumentTest() {
        // TODO: test requiresDocument
    }

    /**
     * Test the property 'requiresPhone'
     */
    @Test
    public void requiresPhoneTest() {
        // TODO: test requiresPhone
    }

    /**
     * Test the property 'rules'
     */
    @Test
    public void rulesTest() {
        // TODO: test rules
    }

    /**
     * Test the property 'validator'
     */
    @Test
    public void validatorTest() {
        // TODO: test validator
    }

}
