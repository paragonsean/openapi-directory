/*
 * Payments Gateway API
 * >ℹ️ Onboarding guide  >  > Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Payments Gateway API allows you to get payment data and process your store's transactions.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Fields1;
import org.openapitools.client.model.Self;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PaymentsByTransactionResponse
 */
public class PaymentsByTransactionResponseTest {
    private final PaymentsByTransactionResponse model = new PaymentsByTransactionResponse();

    /**
     * Model tests for PaymentsByTransactionResponse
     */
    @Test
    public void testPaymentsByTransactionResponse() {
        // TODO: test PaymentsByTransactionResponse
    }

    /**
     * Test the property 'connectorResponses'
     */
    @Test
    public void connectorResponsesTest() {
        // TODO: test connectorResponses
    }

    /**
     * Test the property 'showConnectorResponses'
     */
    @Test
    public void showConnectorResponsesTest() {
        // TODO: test showConnectorResponses
    }

    /**
     * Test the property 'allowInstallments'
     */
    @Test
    public void allowInstallmentsTest() {
        // TODO: test allowInstallments
    }

    /**
     * Test the property 'allowIssuer'
     */
    @Test
    public void allowIssuerTest() {
        // TODO: test allowIssuer
    }

    /**
     * Test the property 'allowNotification'
     */
    @Test
    public void allowNotificationTest() {
        // TODO: test allowNotification
    }

    /**
     * Test the property 'connector'
     */
    @Test
    public void connectorTest() {
        // TODO: test connector
    }

    /**
     * Test the property 'connectorResponse'
     */
    @Test
    public void connectorResponseTest() {
        // TODO: test connectorResponse
    }

    /**
     * Test the property 'currencyCode'
     */
    @Test
    public void currencyCodeTest() {
        // TODO: test currencyCode
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'fields'
     */
    @Test
    public void fieldsTest() {
        // TODO: test fields
    }

    /**
     * Test the property 'group'
     */
    @Test
    public void groupTest() {
        // TODO: test group
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'installments'
     */
    @Test
    public void installmentsTest() {
        // TODO: test installments
    }

    /**
     * Test the property 'installmentsInterestRate'
     */
    @Test
    public void installmentsInterestRateTest() {
        // TODO: test installmentsInterestRate
    }

    /**
     * Test the property 'installmentsValue'
     */
    @Test
    public void installmentsValueTest() {
        // TODO: test installmentsValue
    }

    /**
     * Test the property 'isAvailable'
     */
    @Test
    public void isAvailableTest() {
        // TODO: test isAvailable
    }

    /**
     * Test the property 'isCustom'
     */
    @Test
    public void isCustomTest() {
        // TODO: test isCustom
    }

    /**
     * Test the property 'merchantName'
     */
    @Test
    public void merchantNameTest() {
        // TODO: test merchantName
    }

    /**
     * Test the property 'paymentSystem'
     */
    @Test
    public void paymentSystemTest() {
        // TODO: test paymentSystem
    }

    /**
     * Test the property 'paymentSystemName'
     */
    @Test
    public void paymentSystemNameTest() {
        // TODO: test paymentSystemName
    }

    /**
     * Test the property 'provider'
     */
    @Test
    public void providerTest() {
        // TODO: test provider
    }

    /**
     * Test the property 'referenceValue'
     */
    @Test
    public void referenceValueTest() {
        // TODO: test referenceValue
    }

    /**
     * Test the property 'returnCode'
     */
    @Test
    public void returnCodeTest() {
        // TODO: test returnCode
    }

    /**
     * Test the property 'returnMessage'
     */
    @Test
    public void returnMessageTest() {
        // TODO: test returnMessage
    }

    /**
     * Test the property 'self'
     */
    @Test
    public void selfTest() {
        // TODO: test self
    }

    /**
     * Test the property 'sheets'
     */
    @Test
    public void sheetsTest() {
        // TODO: test sheets
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'tid'
     */
    @Test
    public void tidTest() {
        // TODO: test tid
    }

    /**
     * Test the property 'value'
     */
    @Test
    public void valueTest() {
        // TODO: test value
    }

}
