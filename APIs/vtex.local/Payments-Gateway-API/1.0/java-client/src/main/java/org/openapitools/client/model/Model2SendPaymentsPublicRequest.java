/*
 * Payments Gateway API
 * >ℹ️ Onboarding guide  >  > Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Payments Gateway API allows you to get payment data and process your store's transactions.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.Fields;
import org.openapitools.client.model.Transaction;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Model2SendPaymentsPublicRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:55:23.786494-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Model2SendPaymentsPublicRequest {
  public static final String SERIALIZED_NAME_CURRENCY_CODE = "currencyCode";
  @SerializedName(SERIALIZED_NAME_CURRENCY_CODE)
  private String currencyCode;

  public static final String SERIALIZED_NAME_FIELDS = "fields";
  @SerializedName(SERIALIZED_NAME_FIELDS)
  private Fields fields;

  public static final String SERIALIZED_NAME_INSTALLMENTS = "installments";
  @SerializedName(SERIALIZED_NAME_INSTALLMENTS)
  private Integer installments;

  public static final String SERIALIZED_NAME_INSTALLMENTS_INTEREST_RATE = "installmentsInterestRate";
  @SerializedName(SERIALIZED_NAME_INSTALLMENTS_INTEREST_RATE)
  private Integer installmentsInterestRate;

  public static final String SERIALIZED_NAME_INSTALLMENTS_VALUE = "installmentsValue";
  @SerializedName(SERIALIZED_NAME_INSTALLMENTS_VALUE)
  private Integer installmentsValue;

  public static final String SERIALIZED_NAME_PAYMENT_SYSTEM = "paymentSystem";
  @SerializedName(SERIALIZED_NAME_PAYMENT_SYSTEM)
  private Integer paymentSystem;

  public static final String SERIALIZED_NAME_REFERENCE_VALUE = "referenceValue";
  @SerializedName(SERIALIZED_NAME_REFERENCE_VALUE)
  private Integer referenceValue;

  public static final String SERIALIZED_NAME_TRANSACTION = "transaction";
  @SerializedName(SERIALIZED_NAME_TRANSACTION)
  private Transaction transaction;

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private Integer value;

  public Model2SendPaymentsPublicRequest() {
  }

  public Model2SendPaymentsPublicRequest currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

  /**
   * Get currencyCode
   * @return currencyCode
   */
  @javax.annotation.Nonnull
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }


  public Model2SendPaymentsPublicRequest fields(Fields fields) {
    this.fields = fields;
    return this;
  }

  /**
   * Get fields
   * @return fields
   */
  @javax.annotation.Nonnull
  public Fields getFields() {
    return fields;
  }

  public void setFields(Fields fields) {
    this.fields = fields;
  }


  public Model2SendPaymentsPublicRequest installments(Integer installments) {
    this.installments = installments;
    return this;
  }

  /**
   * Get installments
   * @return installments
   */
  @javax.annotation.Nonnull
  public Integer getInstallments() {
    return installments;
  }

  public void setInstallments(Integer installments) {
    this.installments = installments;
  }


  public Model2SendPaymentsPublicRequest installmentsInterestRate(Integer installmentsInterestRate) {
    this.installmentsInterestRate = installmentsInterestRate;
    return this;
  }

  /**
   * Get installmentsInterestRate
   * @return installmentsInterestRate
   */
  @javax.annotation.Nonnull
  public Integer getInstallmentsInterestRate() {
    return installmentsInterestRate;
  }

  public void setInstallmentsInterestRate(Integer installmentsInterestRate) {
    this.installmentsInterestRate = installmentsInterestRate;
  }


  public Model2SendPaymentsPublicRequest installmentsValue(Integer installmentsValue) {
    this.installmentsValue = installmentsValue;
    return this;
  }

  /**
   * Get installmentsValue
   * @return installmentsValue
   */
  @javax.annotation.Nonnull
  public Integer getInstallmentsValue() {
    return installmentsValue;
  }

  public void setInstallmentsValue(Integer installmentsValue) {
    this.installmentsValue = installmentsValue;
  }


  public Model2SendPaymentsPublicRequest paymentSystem(Integer paymentSystem) {
    this.paymentSystem = paymentSystem;
    return this;
  }

  /**
   * Get paymentSystem
   * @return paymentSystem
   */
  @javax.annotation.Nonnull
  public Integer getPaymentSystem() {
    return paymentSystem;
  }

  public void setPaymentSystem(Integer paymentSystem) {
    this.paymentSystem = paymentSystem;
  }


  public Model2SendPaymentsPublicRequest referenceValue(Integer referenceValue) {
    this.referenceValue = referenceValue;
    return this;
  }

  /**
   * Get referenceValue
   * @return referenceValue
   */
  @javax.annotation.Nonnull
  public Integer getReferenceValue() {
    return referenceValue;
  }

  public void setReferenceValue(Integer referenceValue) {
    this.referenceValue = referenceValue;
  }


  public Model2SendPaymentsPublicRequest transaction(Transaction transaction) {
    this.transaction = transaction;
    return this;
  }

  /**
   * Get transaction
   * @return transaction
   */
  @javax.annotation.Nonnull
  public Transaction getTransaction() {
    return transaction;
  }

  public void setTransaction(Transaction transaction) {
    this.transaction = transaction;
  }


  public Model2SendPaymentsPublicRequest value(Integer value) {
    this.value = value;
    return this;
  }

  /**
   * Get value
   * @return value
   */
  @javax.annotation.Nonnull
  public Integer getValue() {
    return value;
  }

  public void setValue(Integer value) {
    this.value = value;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Model2SendPaymentsPublicRequest _2sendPaymentsPublicRequest = (Model2SendPaymentsPublicRequest) o;
    return Objects.equals(this.currencyCode, _2sendPaymentsPublicRequest.currencyCode) &&
        Objects.equals(this.fields, _2sendPaymentsPublicRequest.fields) &&
        Objects.equals(this.installments, _2sendPaymentsPublicRequest.installments) &&
        Objects.equals(this.installmentsInterestRate, _2sendPaymentsPublicRequest.installmentsInterestRate) &&
        Objects.equals(this.installmentsValue, _2sendPaymentsPublicRequest.installmentsValue) &&
        Objects.equals(this.paymentSystem, _2sendPaymentsPublicRequest.paymentSystem) &&
        Objects.equals(this.referenceValue, _2sendPaymentsPublicRequest.referenceValue) &&
        Objects.equals(this.transaction, _2sendPaymentsPublicRequest.transaction) &&
        Objects.equals(this.value, _2sendPaymentsPublicRequest.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currencyCode, fields, installments, installmentsInterestRate, installmentsValue, paymentSystem, referenceValue, transaction, value);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Model2SendPaymentsPublicRequest {\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    installments: ").append(toIndentedString(installments)).append("\n");
    sb.append("    installmentsInterestRate: ").append(toIndentedString(installmentsInterestRate)).append("\n");
    sb.append("    installmentsValue: ").append(toIndentedString(installmentsValue)).append("\n");
    sb.append("    paymentSystem: ").append(toIndentedString(paymentSystem)).append("\n");
    sb.append("    referenceValue: ").append(toIndentedString(referenceValue)).append("\n");
    sb.append("    transaction: ").append(toIndentedString(transaction)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("currencyCode");
    openapiFields.add("fields");
    openapiFields.add("installments");
    openapiFields.add("installmentsInterestRate");
    openapiFields.add("installmentsValue");
    openapiFields.add("paymentSystem");
    openapiFields.add("referenceValue");
    openapiFields.add("transaction");
    openapiFields.add("value");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("currencyCode");
    openapiRequiredFields.add("fields");
    openapiRequiredFields.add("installments");
    openapiRequiredFields.add("installmentsInterestRate");
    openapiRequiredFields.add("installmentsValue");
    openapiRequiredFields.add("paymentSystem");
    openapiRequiredFields.add("referenceValue");
    openapiRequiredFields.add("transaction");
    openapiRequiredFields.add("value");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Model2SendPaymentsPublicRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Model2SendPaymentsPublicRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Model2SendPaymentsPublicRequest is not found in the empty JSON string", Model2SendPaymentsPublicRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Model2SendPaymentsPublicRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Model2SendPaymentsPublicRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : Model2SendPaymentsPublicRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("currencyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currencyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currencyCode").toString()));
      }
      // validate the required field `fields`
      Fields.validateJsonElement(jsonObj.get("fields"));
      // validate the required field `transaction`
      Transaction.validateJsonElement(jsonObj.get("transaction"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Model2SendPaymentsPublicRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Model2SendPaymentsPublicRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Model2SendPaymentsPublicRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Model2SendPaymentsPublicRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<Model2SendPaymentsPublicRequest>() {
           @Override
           public void write(JsonWriter out, Model2SendPaymentsPublicRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Model2SendPaymentsPublicRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Model2SendPaymentsPublicRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Model2SendPaymentsPublicRequest
   * @throws IOException if the JSON string is invalid with respect to Model2SendPaymentsPublicRequest
   */
  public static Model2SendPaymentsPublicRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Model2SendPaymentsPublicRequest.class);
  }

  /**
   * Convert an instance of Model2SendPaymentsPublicRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

