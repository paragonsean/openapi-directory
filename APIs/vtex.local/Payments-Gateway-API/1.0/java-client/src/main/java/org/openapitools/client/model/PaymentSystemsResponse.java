/*
 * Payments Gateway API
 * >ℹ️ Onboarding guide  >  > Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Payments Gateway API allows you to get payment data and process your store's transactions.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Rule;
import org.openapitools.client.model.Validator;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PaymentSystemsResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:55:23.786494-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PaymentSystemsResponse {
  public static final String SERIALIZED_NAME_AFFILIATION_ID = "affiliationId";
  @SerializedName(SERIALIZED_NAME_AFFILIATION_ID)
  private String affiliationId;

  public static final String SERIALIZED_NAME_ALLOW_COMMERCIAL_CONDITION = "allowCommercialCondition";
  @SerializedName(SERIALIZED_NAME_ALLOW_COMMERCIAL_CONDITION)
  private Boolean allowCommercialCondition;

  public static final String SERIALIZED_NAME_ALLOW_COMMERCIAL_POLICY = "allowCommercialPolicy";
  @SerializedName(SERIALIZED_NAME_ALLOW_COMMERCIAL_POLICY)
  private Boolean allowCommercialPolicy;

  public static final String SERIALIZED_NAME_ALLOW_COUNTRY = "allowCountry";
  @SerializedName(SERIALIZED_NAME_ALLOW_COUNTRY)
  private Boolean allowCountry;

  public static final String SERIALIZED_NAME_ALLOW_INSTALLMENTS = "allowInstallments";
  @SerializedName(SERIALIZED_NAME_ALLOW_INSTALLMENTS)
  private Boolean allowInstallments;

  public static final String SERIALIZED_NAME_ALLOW_ISSUER = "allowIssuer";
  @SerializedName(SERIALIZED_NAME_ALLOW_ISSUER)
  private Boolean allowIssuer;

  public static final String SERIALIZED_NAME_ALLOW_MULTIPLE = "allowMultiple";
  @SerializedName(SERIALIZED_NAME_ALLOW_MULTIPLE)
  private Boolean allowMultiple;

  public static final String SERIALIZED_NAME_ALLOW_NOTIFICATION = "allowNotification";
  @SerializedName(SERIALIZED_NAME_ALLOW_NOTIFICATION)
  private Boolean allowNotification;

  public static final String SERIALIZED_NAME_ALLOW_PERIOD = "allowPeriod";
  @SerializedName(SERIALIZED_NAME_ALLOW_PERIOD)
  private Boolean allowPeriod;

  public static final String SERIALIZED_NAME_ANTIFRAUD_CONNECTOR_IMPLEMENTATION = "antifraudConnectorImplementation";
  @SerializedName(SERIALIZED_NAME_ANTIFRAUD_CONNECTOR_IMPLEMENTATION)
  private String antifraudConnectorImplementation;

  public static final String SERIALIZED_NAME_CONNECTOR_ID = "connectorId";
  @SerializedName(SERIALIZED_NAME_CONNECTOR_ID)
  private Integer connectorId;

  public static final String SERIALIZED_NAME_CONNECTOR_IMPLEMENTATION = "connectorImplementation";
  @SerializedName(SERIALIZED_NAME_CONNECTOR_IMPLEMENTATION)
  private String connectorImplementation;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DUE_DATE = "dueDate";
  @SerializedName(SERIALIZED_NAME_DUE_DATE)
  private String dueDate;

  public static final String SERIALIZED_NAME_FIELDS = "fields";
  @SerializedName(SERIALIZED_NAME_FIELDS)
  private String fields;

  public static final String SERIALIZED_NAME_GROUP_NAME = "groupName";
  @SerializedName(SERIALIZED_NAME_GROUP_NAME)
  private String groupName;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_IMPLEMENTATION = "implementation";
  @SerializedName(SERIALIZED_NAME_IMPLEMENTATION)
  private String implementation;

  public static final String SERIALIZED_NAME_IS_AVAILABLE = "isAvailable";
  @SerializedName(SERIALIZED_NAME_IS_AVAILABLE)
  private Boolean isAvailable;

  public static final String SERIALIZED_NAME_IS_CUSTOM = "isCustom";
  @SerializedName(SERIALIZED_NAME_IS_CUSTOM)
  private Boolean isCustom;

  public static final String SERIALIZED_NAME_IS_SELF_AUTHORIZED = "isSelfAuthorized";
  @SerializedName(SERIALIZED_NAME_IS_SELF_AUTHORIZED)
  private Boolean isSelfAuthorized;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_REQUIRES_DOCUMENT = "requiresDocument";
  @SerializedName(SERIALIZED_NAME_REQUIRES_DOCUMENT)
  private Boolean requiresDocument;

  public static final String SERIALIZED_NAME_REQUIRES_PHONE = "requiresPhone";
  @SerializedName(SERIALIZED_NAME_REQUIRES_PHONE)
  private Boolean requiresPhone;

  public static final String SERIALIZED_NAME_RULES = "rules";
  @SerializedName(SERIALIZED_NAME_RULES)
  private List<Rule> rules = new ArrayList<>();

  public static final String SERIALIZED_NAME_VALIDATOR = "validator";
  @SerializedName(SERIALIZED_NAME_VALIDATOR)
  private Validator validator;

  public PaymentSystemsResponse() {
  }

  public PaymentSystemsResponse affiliationId(String affiliationId) {
    this.affiliationId = affiliationId;
    return this;
  }

  /**
   * Get affiliationId
   * @return affiliationId
   */
  @javax.annotation.Nullable
  public String getAffiliationId() {
    return affiliationId;
  }

  public void setAffiliationId(String affiliationId) {
    this.affiliationId = affiliationId;
  }


  public PaymentSystemsResponse allowCommercialCondition(Boolean allowCommercialCondition) {
    this.allowCommercialCondition = allowCommercialCondition;
    return this;
  }

  /**
   * Get allowCommercialCondition
   * @return allowCommercialCondition
   */
  @javax.annotation.Nonnull
  public Boolean getAllowCommercialCondition() {
    return allowCommercialCondition;
  }

  public void setAllowCommercialCondition(Boolean allowCommercialCondition) {
    this.allowCommercialCondition = allowCommercialCondition;
  }


  public PaymentSystemsResponse allowCommercialPolicy(Boolean allowCommercialPolicy) {
    this.allowCommercialPolicy = allowCommercialPolicy;
    return this;
  }

  /**
   * Get allowCommercialPolicy
   * @return allowCommercialPolicy
   */
  @javax.annotation.Nonnull
  public Boolean getAllowCommercialPolicy() {
    return allowCommercialPolicy;
  }

  public void setAllowCommercialPolicy(Boolean allowCommercialPolicy) {
    this.allowCommercialPolicy = allowCommercialPolicy;
  }


  public PaymentSystemsResponse allowCountry(Boolean allowCountry) {
    this.allowCountry = allowCountry;
    return this;
  }

  /**
   * Get allowCountry
   * @return allowCountry
   */
  @javax.annotation.Nonnull
  public Boolean getAllowCountry() {
    return allowCountry;
  }

  public void setAllowCountry(Boolean allowCountry) {
    this.allowCountry = allowCountry;
  }


  public PaymentSystemsResponse allowInstallments(Boolean allowInstallments) {
    this.allowInstallments = allowInstallments;
    return this;
  }

  /**
   * Get allowInstallments
   * @return allowInstallments
   */
  @javax.annotation.Nonnull
  public Boolean getAllowInstallments() {
    return allowInstallments;
  }

  public void setAllowInstallments(Boolean allowInstallments) {
    this.allowInstallments = allowInstallments;
  }


  public PaymentSystemsResponse allowIssuer(Boolean allowIssuer) {
    this.allowIssuer = allowIssuer;
    return this;
  }

  /**
   * Get allowIssuer
   * @return allowIssuer
   */
  @javax.annotation.Nonnull
  public Boolean getAllowIssuer() {
    return allowIssuer;
  }

  public void setAllowIssuer(Boolean allowIssuer) {
    this.allowIssuer = allowIssuer;
  }


  public PaymentSystemsResponse allowMultiple(Boolean allowMultiple) {
    this.allowMultiple = allowMultiple;
    return this;
  }

  /**
   * Get allowMultiple
   * @return allowMultiple
   */
  @javax.annotation.Nonnull
  public Boolean getAllowMultiple() {
    return allowMultiple;
  }

  public void setAllowMultiple(Boolean allowMultiple) {
    this.allowMultiple = allowMultiple;
  }


  public PaymentSystemsResponse allowNotification(Boolean allowNotification) {
    this.allowNotification = allowNotification;
    return this;
  }

  /**
   * Get allowNotification
   * @return allowNotification
   */
  @javax.annotation.Nonnull
  public Boolean getAllowNotification() {
    return allowNotification;
  }

  public void setAllowNotification(Boolean allowNotification) {
    this.allowNotification = allowNotification;
  }


  public PaymentSystemsResponse allowPeriod(Boolean allowPeriod) {
    this.allowPeriod = allowPeriod;
    return this;
  }

  /**
   * Get allowPeriod
   * @return allowPeriod
   */
  @javax.annotation.Nonnull
  public Boolean getAllowPeriod() {
    return allowPeriod;
  }

  public void setAllowPeriod(Boolean allowPeriod) {
    this.allowPeriod = allowPeriod;
  }


  public PaymentSystemsResponse antifraudConnectorImplementation(String antifraudConnectorImplementation) {
    this.antifraudConnectorImplementation = antifraudConnectorImplementation;
    return this;
  }

  /**
   * Get antifraudConnectorImplementation
   * @return antifraudConnectorImplementation
   */
  @javax.annotation.Nullable
  public String getAntifraudConnectorImplementation() {
    return antifraudConnectorImplementation;
  }

  public void setAntifraudConnectorImplementation(String antifraudConnectorImplementation) {
    this.antifraudConnectorImplementation = antifraudConnectorImplementation;
  }


  public PaymentSystemsResponse connectorId(Integer connectorId) {
    this.connectorId = connectorId;
    return this;
  }

  /**
   * Get connectorId
   * @return connectorId
   */
  @javax.annotation.Nonnull
  public Integer getConnectorId() {
    return connectorId;
  }

  public void setConnectorId(Integer connectorId) {
    this.connectorId = connectorId;
  }


  public PaymentSystemsResponse connectorImplementation(String connectorImplementation) {
    this.connectorImplementation = connectorImplementation;
    return this;
  }

  /**
   * Get connectorImplementation
   * @return connectorImplementation
   */
  @javax.annotation.Nonnull
  public String getConnectorImplementation() {
    return connectorImplementation;
  }

  public void setConnectorImplementation(String connectorImplementation) {
    this.connectorImplementation = connectorImplementation;
  }


  public PaymentSystemsResponse description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public PaymentSystemsResponse dueDate(String dueDate) {
    this.dueDate = dueDate;
    return this;
  }

  /**
   * Get dueDate
   * @return dueDate
   */
  @javax.annotation.Nonnull
  public String getDueDate() {
    return dueDate;
  }

  public void setDueDate(String dueDate) {
    this.dueDate = dueDate;
  }


  public PaymentSystemsResponse fields(String fields) {
    this.fields = fields;
    return this;
  }

  /**
   * Get fields
   * @return fields
   */
  @javax.annotation.Nullable
  public String getFields() {
    return fields;
  }

  public void setFields(String fields) {
    this.fields = fields;
  }


  public PaymentSystemsResponse groupName(String groupName) {
    this.groupName = groupName;
    return this;
  }

  /**
   * Get groupName
   * @return groupName
   */
  @javax.annotation.Nonnull
  public String getGroupName() {
    return groupName;
  }

  public void setGroupName(String groupName) {
    this.groupName = groupName;
  }


  public PaymentSystemsResponse id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public PaymentSystemsResponse implementation(String implementation) {
    this.implementation = implementation;
    return this;
  }

  /**
   * Get implementation
   * @return implementation
   */
  @javax.annotation.Nonnull
  public String getImplementation() {
    return implementation;
  }

  public void setImplementation(String implementation) {
    this.implementation = implementation;
  }


  public PaymentSystemsResponse isAvailable(Boolean isAvailable) {
    this.isAvailable = isAvailable;
    return this;
  }

  /**
   * Get isAvailable
   * @return isAvailable
   */
  @javax.annotation.Nonnull
  public Boolean getIsAvailable() {
    return isAvailable;
  }

  public void setIsAvailable(Boolean isAvailable) {
    this.isAvailable = isAvailable;
  }


  public PaymentSystemsResponse isCustom(Boolean isCustom) {
    this.isCustom = isCustom;
    return this;
  }

  /**
   * Get isCustom
   * @return isCustom
   */
  @javax.annotation.Nonnull
  public Boolean getIsCustom() {
    return isCustom;
  }

  public void setIsCustom(Boolean isCustom) {
    this.isCustom = isCustom;
  }


  public PaymentSystemsResponse isSelfAuthorized(Boolean isSelfAuthorized) {
    this.isSelfAuthorized = isSelfAuthorized;
    return this;
  }

  /**
   * Get isSelfAuthorized
   * @return isSelfAuthorized
   */
  @javax.annotation.Nonnull
  public Boolean getIsSelfAuthorized() {
    return isSelfAuthorized;
  }

  public void setIsSelfAuthorized(Boolean isSelfAuthorized) {
    this.isSelfAuthorized = isSelfAuthorized;
  }


  public PaymentSystemsResponse name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public PaymentSystemsResponse requiresDocument(Boolean requiresDocument) {
    this.requiresDocument = requiresDocument;
    return this;
  }

  /**
   * Get requiresDocument
   * @return requiresDocument
   */
  @javax.annotation.Nonnull
  public Boolean getRequiresDocument() {
    return requiresDocument;
  }

  public void setRequiresDocument(Boolean requiresDocument) {
    this.requiresDocument = requiresDocument;
  }


  public PaymentSystemsResponse requiresPhone(Boolean requiresPhone) {
    this.requiresPhone = requiresPhone;
    return this;
  }

  /**
   * Get requiresPhone
   * @return requiresPhone
   */
  @javax.annotation.Nonnull
  public Boolean getRequiresPhone() {
    return requiresPhone;
  }

  public void setRequiresPhone(Boolean requiresPhone) {
    this.requiresPhone = requiresPhone;
  }


  public PaymentSystemsResponse rules(List<Rule> rules) {
    this.rules = rules;
    return this;
  }

  public PaymentSystemsResponse addRulesItem(Rule rulesItem) {
    if (this.rules == null) {
      this.rules = new ArrayList<>();
    }
    this.rules.add(rulesItem);
    return this;
  }

  /**
   * 
   * @return rules
   */
  @javax.annotation.Nonnull
  public List<Rule> getRules() {
    return rules;
  }

  public void setRules(List<Rule> rules) {
    this.rules = rules;
  }


  public PaymentSystemsResponse validator(Validator validator) {
    this.validator = validator;
    return this;
  }

  /**
   * Get validator
   * @return validator
   */
  @javax.annotation.Nonnull
  public Validator getValidator() {
    return validator;
  }

  public void setValidator(Validator validator) {
    this.validator = validator;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentSystemsResponse paymentSystemsResponse = (PaymentSystemsResponse) o;
    return Objects.equals(this.affiliationId, paymentSystemsResponse.affiliationId) &&
        Objects.equals(this.allowCommercialCondition, paymentSystemsResponse.allowCommercialCondition) &&
        Objects.equals(this.allowCommercialPolicy, paymentSystemsResponse.allowCommercialPolicy) &&
        Objects.equals(this.allowCountry, paymentSystemsResponse.allowCountry) &&
        Objects.equals(this.allowInstallments, paymentSystemsResponse.allowInstallments) &&
        Objects.equals(this.allowIssuer, paymentSystemsResponse.allowIssuer) &&
        Objects.equals(this.allowMultiple, paymentSystemsResponse.allowMultiple) &&
        Objects.equals(this.allowNotification, paymentSystemsResponse.allowNotification) &&
        Objects.equals(this.allowPeriod, paymentSystemsResponse.allowPeriod) &&
        Objects.equals(this.antifraudConnectorImplementation, paymentSystemsResponse.antifraudConnectorImplementation) &&
        Objects.equals(this.connectorId, paymentSystemsResponse.connectorId) &&
        Objects.equals(this.connectorImplementation, paymentSystemsResponse.connectorImplementation) &&
        Objects.equals(this.description, paymentSystemsResponse.description) &&
        Objects.equals(this.dueDate, paymentSystemsResponse.dueDate) &&
        Objects.equals(this.fields, paymentSystemsResponse.fields) &&
        Objects.equals(this.groupName, paymentSystemsResponse.groupName) &&
        Objects.equals(this.id, paymentSystemsResponse.id) &&
        Objects.equals(this.implementation, paymentSystemsResponse.implementation) &&
        Objects.equals(this.isAvailable, paymentSystemsResponse.isAvailable) &&
        Objects.equals(this.isCustom, paymentSystemsResponse.isCustom) &&
        Objects.equals(this.isSelfAuthorized, paymentSystemsResponse.isSelfAuthorized) &&
        Objects.equals(this.name, paymentSystemsResponse.name) &&
        Objects.equals(this.requiresDocument, paymentSystemsResponse.requiresDocument) &&
        Objects.equals(this.requiresPhone, paymentSystemsResponse.requiresPhone) &&
        Objects.equals(this.rules, paymentSystemsResponse.rules) &&
        Objects.equals(this.validator, paymentSystemsResponse.validator);
  }

  @Override
  public int hashCode() {
    return Objects.hash(affiliationId, allowCommercialCondition, allowCommercialPolicy, allowCountry, allowInstallments, allowIssuer, allowMultiple, allowNotification, allowPeriod, antifraudConnectorImplementation, connectorId, connectorImplementation, description, dueDate, fields, groupName, id, implementation, isAvailable, isCustom, isSelfAuthorized, name, requiresDocument, requiresPhone, rules, validator);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentSystemsResponse {\n");
    sb.append("    affiliationId: ").append(toIndentedString(affiliationId)).append("\n");
    sb.append("    allowCommercialCondition: ").append(toIndentedString(allowCommercialCondition)).append("\n");
    sb.append("    allowCommercialPolicy: ").append(toIndentedString(allowCommercialPolicy)).append("\n");
    sb.append("    allowCountry: ").append(toIndentedString(allowCountry)).append("\n");
    sb.append("    allowInstallments: ").append(toIndentedString(allowInstallments)).append("\n");
    sb.append("    allowIssuer: ").append(toIndentedString(allowIssuer)).append("\n");
    sb.append("    allowMultiple: ").append(toIndentedString(allowMultiple)).append("\n");
    sb.append("    allowNotification: ").append(toIndentedString(allowNotification)).append("\n");
    sb.append("    allowPeriod: ").append(toIndentedString(allowPeriod)).append("\n");
    sb.append("    antifraudConnectorImplementation: ").append(toIndentedString(antifraudConnectorImplementation)).append("\n");
    sb.append("    connectorId: ").append(toIndentedString(connectorId)).append("\n");
    sb.append("    connectorImplementation: ").append(toIndentedString(connectorImplementation)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    groupName: ").append(toIndentedString(groupName)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    implementation: ").append(toIndentedString(implementation)).append("\n");
    sb.append("    isAvailable: ").append(toIndentedString(isAvailable)).append("\n");
    sb.append("    isCustom: ").append(toIndentedString(isCustom)).append("\n");
    sb.append("    isSelfAuthorized: ").append(toIndentedString(isSelfAuthorized)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    requiresDocument: ").append(toIndentedString(requiresDocument)).append("\n");
    sb.append("    requiresPhone: ").append(toIndentedString(requiresPhone)).append("\n");
    sb.append("    rules: ").append(toIndentedString(rules)).append("\n");
    sb.append("    validator: ").append(toIndentedString(validator)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("affiliationId");
    openapiFields.add("allowCommercialCondition");
    openapiFields.add("allowCommercialPolicy");
    openapiFields.add("allowCountry");
    openapiFields.add("allowInstallments");
    openapiFields.add("allowIssuer");
    openapiFields.add("allowMultiple");
    openapiFields.add("allowNotification");
    openapiFields.add("allowPeriod");
    openapiFields.add("antifraudConnectorImplementation");
    openapiFields.add("connectorId");
    openapiFields.add("connectorImplementation");
    openapiFields.add("description");
    openapiFields.add("dueDate");
    openapiFields.add("fields");
    openapiFields.add("groupName");
    openapiFields.add("id");
    openapiFields.add("implementation");
    openapiFields.add("isAvailable");
    openapiFields.add("isCustom");
    openapiFields.add("isSelfAuthorized");
    openapiFields.add("name");
    openapiFields.add("requiresDocument");
    openapiFields.add("requiresPhone");
    openapiFields.add("rules");
    openapiFields.add("validator");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("affiliationId");
    openapiRequiredFields.add("allowCommercialCondition");
    openapiRequiredFields.add("allowCommercialPolicy");
    openapiRequiredFields.add("allowCountry");
    openapiRequiredFields.add("allowInstallments");
    openapiRequiredFields.add("allowIssuer");
    openapiRequiredFields.add("allowMultiple");
    openapiRequiredFields.add("allowNotification");
    openapiRequiredFields.add("allowPeriod");
    openapiRequiredFields.add("antifraudConnectorImplementation");
    openapiRequiredFields.add("connectorId");
    openapiRequiredFields.add("connectorImplementation");
    openapiRequiredFields.add("description");
    openapiRequiredFields.add("dueDate");
    openapiRequiredFields.add("fields");
    openapiRequiredFields.add("groupName");
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("implementation");
    openapiRequiredFields.add("isAvailable");
    openapiRequiredFields.add("isCustom");
    openapiRequiredFields.add("isSelfAuthorized");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("requiresDocument");
    openapiRequiredFields.add("requiresPhone");
    openapiRequiredFields.add("rules");
    openapiRequiredFields.add("validator");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PaymentSystemsResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PaymentSystemsResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PaymentSystemsResponse is not found in the empty JSON string", PaymentSystemsResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PaymentSystemsResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PaymentSystemsResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : PaymentSystemsResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("affiliationId") != null && !jsonObj.get("affiliationId").isJsonNull()) && !jsonObj.get("affiliationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `affiliationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("affiliationId").toString()));
      }
      if ((jsonObj.get("antifraudConnectorImplementation") != null && !jsonObj.get("antifraudConnectorImplementation").isJsonNull()) && !jsonObj.get("antifraudConnectorImplementation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `antifraudConnectorImplementation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("antifraudConnectorImplementation").toString()));
      }
      if (!jsonObj.get("connectorImplementation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `connectorImplementation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("connectorImplementation").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if (!jsonObj.get("dueDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dueDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dueDate").toString()));
      }
      if ((jsonObj.get("fields") != null && !jsonObj.get("fields").isJsonNull()) && !jsonObj.get("fields").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fields` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fields").toString()));
      }
      if (!jsonObj.get("groupName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `groupName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("groupName").toString()));
      }
      if (!jsonObj.get("implementation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `implementation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("implementation").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("rules").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `rules` to be an array in the JSON string but got `%s`", jsonObj.get("rules").toString()));
      }

      JsonArray jsonArrayrules = jsonObj.getAsJsonArray("rules");
      // validate the required field `rules` (array)
      for (int i = 0; i < jsonArrayrules.size(); i++) {
        Rule.validateJsonElement(jsonArrayrules.get(i));
      };
      // validate the required field `validator`
      Validator.validateJsonElement(jsonObj.get("validator"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PaymentSystemsResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PaymentSystemsResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PaymentSystemsResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PaymentSystemsResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<PaymentSystemsResponse>() {
           @Override
           public void write(JsonWriter out, PaymentSystemsResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PaymentSystemsResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PaymentSystemsResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PaymentSystemsResponse
   * @throws IOException if the JSON string is invalid with respect to PaymentSystemsResponse
   */
  public static PaymentSystemsResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PaymentSystemsResponse.class);
  }

  /**
   * Convert an instance of PaymentSystemsResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

