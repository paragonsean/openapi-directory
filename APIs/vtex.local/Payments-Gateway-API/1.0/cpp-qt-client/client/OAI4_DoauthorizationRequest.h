/**
 * Payments Gateway API
 * >ℹ️ Onboarding guide  >  > Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Payments Gateway API allows you to get payment data and process your store's transactions.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAI4_DoauthorizationRequest.h
 *
 * 
 */

#ifndef OAI4_DoauthorizationRequest_H
#define OAI4_DoauthorizationRequest_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAI4_DoauthorizationRequest : public OAIObject {
public:
    OAI4_DoauthorizationRequest();
    OAI4_DoauthorizationRequest(QString json);
    ~OAI4_DoauthorizationRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isPrepareForRecurrency() const;
    void setPrepareForRecurrency(const bool &prepare_for_recurrency);
    bool is_prepare_for_recurrency_Set() const;
    bool is_prepare_for_recurrency_Valid() const;

    QString getSoftDescriptor() const;
    void setSoftDescriptor(const QString &soft_descriptor);
    bool is_soft_descriptor_Set() const;
    bool is_soft_descriptor_Valid() const;

    QString getTransactionId() const;
    void setTransactionId(const QString &transaction_id);
    bool is_transaction_id_Set() const;
    bool is_transaction_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_prepare_for_recurrency;
    bool m_prepare_for_recurrency_isSet;
    bool m_prepare_for_recurrency_isValid;

    QString m_soft_descriptor;
    bool m_soft_descriptor_isSet;
    bool m_soft_descriptor_isValid;

    QString m_transaction_id;
    bool m_transaction_id_isSet;
    bool m_transaction_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAI4_DoauthorizationRequest)

#endif // OAI4_DoauthorizationRequest_H
