/**
 * Payments Gateway API
 * >ℹ️ Onboarding guide  >  > Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Payments Gateway API allows you to get payment data and process your store's transactions.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFields3.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFields3::OAIFields3(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFields3::OAIFields3() {
    this->initializeModel();
}

OAIFields3::~OAIFields3() {}

void OAIFields3::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_address_isSet = false;
    m_address_isValid = false;

    m_callback_url_isSet = false;
    m_callback_url_isValid = false;

    m_first_digits_isSet = false;
    m_first_digits_isValid = false;

    m_validation_code_isSet = false;
    m_validation_code_isValid = false;
}

void OAIFields3::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFields3::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("accountId")]);
    m_account_id_isSet = !json[QString("accountId")].isNull() && m_account_id_isValid;

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_callback_url_isValid = ::OpenAPI::fromJsonValue(m_callback_url, json[QString("callbackUrl")]);
    m_callback_url_isSet = !json[QString("callbackUrl")].isNull() && m_callback_url_isValid;

    m_first_digits_isValid = ::OpenAPI::fromJsonValue(m_first_digits, json[QString("firstDigits")]);
    m_first_digits_isSet = !json[QString("firstDigits")].isNull() && m_first_digits_isValid;

    m_validation_code_isValid = ::OpenAPI::fromJsonValue(m_validation_code, json[QString("validationCode")]);
    m_validation_code_isSet = !json[QString("validationCode")].isNull() && m_validation_code_isValid;
}

QString OAIFields3::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFields3::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("accountId"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_address_isSet) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_callback_url_isSet) {
        obj.insert(QString("callbackUrl"), ::OpenAPI::toJsonValue(m_callback_url));
    }
    if (m_first_digits_isSet) {
        obj.insert(QString("firstDigits"), ::OpenAPI::toJsonValue(m_first_digits));
    }
    if (m_validation_code_isSet) {
        obj.insert(QString("validationCode"), ::OpenAPI::toJsonValue(m_validation_code));
    }
    return obj;
}

QString OAIFields3::getAccountId() const {
    return m_account_id;
}
void OAIFields3::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIFields3::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIFields3::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QString OAIFields3::getAddress() const {
    return m_address;
}
void OAIFields3::setAddress(const QString &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIFields3::is_address_Set() const{
    return m_address_isSet;
}

bool OAIFields3::is_address_Valid() const{
    return m_address_isValid;
}

QString OAIFields3::getCallbackUrl() const {
    return m_callback_url;
}
void OAIFields3::setCallbackUrl(const QString &callback_url) {
    m_callback_url = callback_url;
    m_callback_url_isSet = true;
}

bool OAIFields3::is_callback_url_Set() const{
    return m_callback_url_isSet;
}

bool OAIFields3::is_callback_url_Valid() const{
    return m_callback_url_isValid;
}

QString OAIFields3::getFirstDigits() const {
    return m_first_digits;
}
void OAIFields3::setFirstDigits(const QString &first_digits) {
    m_first_digits = first_digits;
    m_first_digits_isSet = true;
}

bool OAIFields3::is_first_digits_Set() const{
    return m_first_digits_isSet;
}

bool OAIFields3::is_first_digits_Valid() const{
    return m_first_digits_isValid;
}

QString OAIFields3::getValidationCode() const {
    return m_validation_code;
}
void OAIFields3::setValidationCode(const QString &validation_code) {
    m_validation_code = validation_code;
    m_validation_code_isSet = true;
}

bool OAIFields3::is_validation_code_Set() const{
    return m_validation_code_isSet;
}

bool OAIFields3::is_validation_code_Valid() const{
    return m_validation_code_isValid;
}

bool OAIFields3::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_callback_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_digits_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_validation_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFields3::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_id_isValid && m_address_isValid && m_callback_url_isValid && m_first_digits_isValid && m_validation_code_isValid && true;
}

} // namespace OpenAPI
