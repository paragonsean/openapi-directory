/**
 * Payments Gateway API
 * >ℹ️ Onboarding guide  >  > Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Payments Gateway API allows you to get payment data and process your store's transactions.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInstallmentOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInstallmentOptions::OAIInstallmentOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInstallmentOptions::OAIInstallmentOptions() {
    this->initializeModel();
}

OAIInstallmentOptions::~OAIInstallmentOptions() {}

void OAIInstallmentOptions::initializeModel() {

    m_interest_rate_method_isSet = false;
    m_interest_rate_method_isValid = false;
}

void OAIInstallmentOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInstallmentOptions::fromJsonObject(QJsonObject json) {

    m_interest_rate_method_isValid = ::OpenAPI::fromJsonValue(m_interest_rate_method, json[QString("interestRateMethod")]);
    m_interest_rate_method_isSet = !json[QString("interestRateMethod")].isNull() && m_interest_rate_method_isValid;
}

QString OAIInstallmentOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInstallmentOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_interest_rate_method_isSet) {
        obj.insert(QString("interestRateMethod"), ::OpenAPI::toJsonValue(m_interest_rate_method));
    }
    return obj;
}

QString OAIInstallmentOptions::getInterestRateMethod() const {
    return m_interest_rate_method;
}
void OAIInstallmentOptions::setInterestRateMethod(const QString &interest_rate_method) {
    m_interest_rate_method = interest_rate_method;
    m_interest_rate_method_isSet = true;
}

bool OAIInstallmentOptions::is_interest_rate_method_Set() const{
    return m_interest_rate_method_isSet;
}

bool OAIInstallmentOptions::is_interest_rate_method_Valid() const{
    return m_interest_rate_method_isValid;
}

bool OAIInstallmentOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_interest_rate_method_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInstallmentOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_interest_rate_method_isValid && true;
}

} // namespace OpenAPI
