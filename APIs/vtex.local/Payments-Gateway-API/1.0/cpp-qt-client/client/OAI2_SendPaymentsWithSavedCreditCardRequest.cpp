/**
 * Payments Gateway API
 * >ℹ️ Onboarding guide  >  > Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Payments Gateway API allows you to get payment data and process your store's transactions.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI2_SendPaymentsWithSavedCreditCardRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI2_SendPaymentsWithSavedCreditCardRequest::OAI2_SendPaymentsWithSavedCreditCardRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI2_SendPaymentsWithSavedCreditCardRequest::OAI2_SendPaymentsWithSavedCreditCardRequest() {
    this->initializeModel();
}

OAI2_SendPaymentsWithSavedCreditCardRequest::~OAI2_SendPaymentsWithSavedCreditCardRequest() {}

void OAI2_SendPaymentsWithSavedCreditCardRequest::initializeModel() {

    m_currency_code_isSet = false;
    m_currency_code_isValid = false;

    m_fields_isSet = false;
    m_fields_isValid = false;

    m_installments_isSet = false;
    m_installments_isValid = false;

    m_installments_interest_rate_isSet = false;
    m_installments_interest_rate_isValid = false;

    m_installments_value_isSet = false;
    m_installments_value_isValid = false;

    m_payment_system_isSet = false;
    m_payment_system_isValid = false;

    m_reference_value_isSet = false;
    m_reference_value_isValid = false;

    m_transaction_isSet = false;
    m_transaction_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAI2_SendPaymentsWithSavedCreditCardRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI2_SendPaymentsWithSavedCreditCardRequest::fromJsonObject(QJsonObject json) {

    m_currency_code_isValid = ::OpenAPI::fromJsonValue(m_currency_code, json[QString("currencyCode")]);
    m_currency_code_isSet = !json[QString("currencyCode")].isNull() && m_currency_code_isValid;

    m_fields_isValid = ::OpenAPI::fromJsonValue(m_fields, json[QString("fields")]);
    m_fields_isSet = !json[QString("fields")].isNull() && m_fields_isValid;

    m_installments_isValid = ::OpenAPI::fromJsonValue(m_installments, json[QString("installments")]);
    m_installments_isSet = !json[QString("installments")].isNull() && m_installments_isValid;

    m_installments_interest_rate_isValid = ::OpenAPI::fromJsonValue(m_installments_interest_rate, json[QString("installmentsInterestRate")]);
    m_installments_interest_rate_isSet = !json[QString("installmentsInterestRate")].isNull() && m_installments_interest_rate_isValid;

    m_installments_value_isValid = ::OpenAPI::fromJsonValue(m_installments_value, json[QString("installmentsValue")]);
    m_installments_value_isSet = !json[QString("installmentsValue")].isNull() && m_installments_value_isValid;

    m_payment_system_isValid = ::OpenAPI::fromJsonValue(m_payment_system, json[QString("paymentSystem")]);
    m_payment_system_isSet = !json[QString("paymentSystem")].isNull() && m_payment_system_isValid;

    m_reference_value_isValid = ::OpenAPI::fromJsonValue(m_reference_value, json[QString("referenceValue")]);
    m_reference_value_isSet = !json[QString("referenceValue")].isNull() && m_reference_value_isValid;

    m_transaction_isValid = ::OpenAPI::fromJsonValue(m_transaction, json[QString("transaction")]);
    m_transaction_isSet = !json[QString("transaction")].isNull() && m_transaction_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAI2_SendPaymentsWithSavedCreditCardRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI2_SendPaymentsWithSavedCreditCardRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_currency_code_isSet) {
        obj.insert(QString("currencyCode"), ::OpenAPI::toJsonValue(m_currency_code));
    }
    if (m_fields.isSet()) {
        obj.insert(QString("fields"), ::OpenAPI::toJsonValue(m_fields));
    }
    if (m_installments_isSet) {
        obj.insert(QString("installments"), ::OpenAPI::toJsonValue(m_installments));
    }
    if (m_installments_interest_rate_isSet) {
        obj.insert(QString("installmentsInterestRate"), ::OpenAPI::toJsonValue(m_installments_interest_rate));
    }
    if (m_installments_value_isSet) {
        obj.insert(QString("installmentsValue"), ::OpenAPI::toJsonValue(m_installments_value));
    }
    if (m_payment_system_isSet) {
        obj.insert(QString("paymentSystem"), ::OpenAPI::toJsonValue(m_payment_system));
    }
    if (m_reference_value_isSet) {
        obj.insert(QString("referenceValue"), ::OpenAPI::toJsonValue(m_reference_value));
    }
    if (m_transaction.isSet()) {
        obj.insert(QString("transaction"), ::OpenAPI::toJsonValue(m_transaction));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAI2_SendPaymentsWithSavedCreditCardRequest::getCurrencyCode() const {
    return m_currency_code;
}
void OAI2_SendPaymentsWithSavedCreditCardRequest::setCurrencyCode(const QString &currency_code) {
    m_currency_code = currency_code;
    m_currency_code_isSet = true;
}

bool OAI2_SendPaymentsWithSavedCreditCardRequest::is_currency_code_Set() const{
    return m_currency_code_isSet;
}

bool OAI2_SendPaymentsWithSavedCreditCardRequest::is_currency_code_Valid() const{
    return m_currency_code_isValid;
}

OAIFields3 OAI2_SendPaymentsWithSavedCreditCardRequest::getFields() const {
    return m_fields;
}
void OAI2_SendPaymentsWithSavedCreditCardRequest::setFields(const OAIFields3 &fields) {
    m_fields = fields;
    m_fields_isSet = true;
}

bool OAI2_SendPaymentsWithSavedCreditCardRequest::is_fields_Set() const{
    return m_fields_isSet;
}

bool OAI2_SendPaymentsWithSavedCreditCardRequest::is_fields_Valid() const{
    return m_fields_isValid;
}

qint32 OAI2_SendPaymentsWithSavedCreditCardRequest::getInstallments() const {
    return m_installments;
}
void OAI2_SendPaymentsWithSavedCreditCardRequest::setInstallments(const qint32 &installments) {
    m_installments = installments;
    m_installments_isSet = true;
}

bool OAI2_SendPaymentsWithSavedCreditCardRequest::is_installments_Set() const{
    return m_installments_isSet;
}

bool OAI2_SendPaymentsWithSavedCreditCardRequest::is_installments_Valid() const{
    return m_installments_isValid;
}

qint32 OAI2_SendPaymentsWithSavedCreditCardRequest::getInstallmentsInterestRate() const {
    return m_installments_interest_rate;
}
void OAI2_SendPaymentsWithSavedCreditCardRequest::setInstallmentsInterestRate(const qint32 &installments_interest_rate) {
    m_installments_interest_rate = installments_interest_rate;
    m_installments_interest_rate_isSet = true;
}

bool OAI2_SendPaymentsWithSavedCreditCardRequest::is_installments_interest_rate_Set() const{
    return m_installments_interest_rate_isSet;
}

bool OAI2_SendPaymentsWithSavedCreditCardRequest::is_installments_interest_rate_Valid() const{
    return m_installments_interest_rate_isValid;
}

qint32 OAI2_SendPaymentsWithSavedCreditCardRequest::getInstallmentsValue() const {
    return m_installments_value;
}
void OAI2_SendPaymentsWithSavedCreditCardRequest::setInstallmentsValue(const qint32 &installments_value) {
    m_installments_value = installments_value;
    m_installments_value_isSet = true;
}

bool OAI2_SendPaymentsWithSavedCreditCardRequest::is_installments_value_Set() const{
    return m_installments_value_isSet;
}

bool OAI2_SendPaymentsWithSavedCreditCardRequest::is_installments_value_Valid() const{
    return m_installments_value_isValid;
}

qint32 OAI2_SendPaymentsWithSavedCreditCardRequest::getPaymentSystem() const {
    return m_payment_system;
}
void OAI2_SendPaymentsWithSavedCreditCardRequest::setPaymentSystem(const qint32 &payment_system) {
    m_payment_system = payment_system;
    m_payment_system_isSet = true;
}

bool OAI2_SendPaymentsWithSavedCreditCardRequest::is_payment_system_Set() const{
    return m_payment_system_isSet;
}

bool OAI2_SendPaymentsWithSavedCreditCardRequest::is_payment_system_Valid() const{
    return m_payment_system_isValid;
}

qint32 OAI2_SendPaymentsWithSavedCreditCardRequest::getReferenceValue() const {
    return m_reference_value;
}
void OAI2_SendPaymentsWithSavedCreditCardRequest::setReferenceValue(const qint32 &reference_value) {
    m_reference_value = reference_value;
    m_reference_value_isSet = true;
}

bool OAI2_SendPaymentsWithSavedCreditCardRequest::is_reference_value_Set() const{
    return m_reference_value_isSet;
}

bool OAI2_SendPaymentsWithSavedCreditCardRequest::is_reference_value_Valid() const{
    return m_reference_value_isValid;
}

OAITransaction OAI2_SendPaymentsWithSavedCreditCardRequest::getTransaction() const {
    return m_transaction;
}
void OAI2_SendPaymentsWithSavedCreditCardRequest::setTransaction(const OAITransaction &transaction) {
    m_transaction = transaction;
    m_transaction_isSet = true;
}

bool OAI2_SendPaymentsWithSavedCreditCardRequest::is_transaction_Set() const{
    return m_transaction_isSet;
}

bool OAI2_SendPaymentsWithSavedCreditCardRequest::is_transaction_Valid() const{
    return m_transaction_isValid;
}

qint32 OAI2_SendPaymentsWithSavedCreditCardRequest::getValue() const {
    return m_value;
}
void OAI2_SendPaymentsWithSavedCreditCardRequest::setValue(const qint32 &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAI2_SendPaymentsWithSavedCreditCardRequest::is_value_Set() const{
    return m_value_isSet;
}

bool OAI2_SendPaymentsWithSavedCreditCardRequest::is_value_Valid() const{
    return m_value_isValid;
}

bool OAI2_SendPaymentsWithSavedCreditCardRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fields.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_installments_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_installments_interest_rate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_installments_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_system_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reference_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transaction.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI2_SendPaymentsWithSavedCreditCardRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_currency_code_isValid && m_fields_isValid && m_installments_isValid && m_installments_interest_rate_isValid && m_installments_value_isValid && m_payment_system_isValid && m_reference_value_isValid && m_transaction_isValid && m_value_isValid && true;
}

} // namespace OpenAPI
