/**
 * Payments Gateway API
 * >ℹ️ Onboarding guide  >  > Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Payments Gateway API allows you to get payment data and process your store's transactions.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIValidator.h
 *
 * 
 */

#ifndef OAIValidator_H
#define OAIValidator_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIValidator : public OAIObject {
public:
    OAIValidator();
    OAIValidator(QString json);
    ~OAIValidator() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCardCodeMask() const;
    void setCardCodeMask(const QString &card_code_mask);
    bool is_card_code_mask_Set() const;
    bool is_card_code_mask_Valid() const;

    QString getCardCodeRegex() const;
    void setCardCodeRegex(const QString &card_code_regex);
    bool is_card_code_regex_Set() const;
    bool is_card_code_regex_Valid() const;

    QString getMask() const;
    void setMask(const QString &mask);
    bool is_mask_Set() const;
    bool is_mask_Valid() const;

    QString getRegex() const;
    void setRegex(const QString &regex);
    bool is_regex_Set() const;
    bool is_regex_Valid() const;

    bool isUseBillingAddress() const;
    void setUseBillingAddress(const bool &use_billing_address);
    bool is_use_billing_address_Set() const;
    bool is_use_billing_address_Valid() const;

    bool isUseCardHolderName() const;
    void setUseCardHolderName(const bool &use_card_holder_name);
    bool is_use_card_holder_name_Set() const;
    bool is_use_card_holder_name_Valid() const;

    bool isUseCvv() const;
    void setUseCvv(const bool &use_cvv);
    bool is_use_cvv_Set() const;
    bool is_use_cvv_Valid() const;

    bool isUseExpirationDate() const;
    void setUseExpirationDate(const bool &use_expiration_date);
    bool is_use_expiration_date_Set() const;
    bool is_use_expiration_date_Valid() const;

    QString getValidCardLengths() const;
    void setValidCardLengths(const QString &valid_card_lengths);
    bool is_valid_card_lengths_Set() const;
    bool is_valid_card_lengths_Valid() const;

    QList<qint32> getWeights() const;
    void setWeights(const QList<qint32> &weights);
    bool is_weights_Set() const;
    bool is_weights_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_card_code_mask;
    bool m_card_code_mask_isSet;
    bool m_card_code_mask_isValid;

    QString m_card_code_regex;
    bool m_card_code_regex_isSet;
    bool m_card_code_regex_isValid;

    QString m_mask;
    bool m_mask_isSet;
    bool m_mask_isValid;

    QString m_regex;
    bool m_regex_isSet;
    bool m_regex_isValid;

    bool m_use_billing_address;
    bool m_use_billing_address_isSet;
    bool m_use_billing_address_isValid;

    bool m_use_card_holder_name;
    bool m_use_card_holder_name_isSet;
    bool m_use_card_holder_name_isValid;

    bool m_use_cvv;
    bool m_use_cvv_isSet;
    bool m_use_cvv_isValid;

    bool m_use_expiration_date;
    bool m_use_expiration_date_isSet;
    bool m_use_expiration_date_isValid;

    QString m_valid_card_lengths;
    bool m_valid_card_lengths_isSet;
    bool m_valid_card_lengths_isValid;

    QList<qint32> m_weights;
    bool m_weights_isSet;
    bool m_weights_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIValidator)

#endif // OAIValidator_H
