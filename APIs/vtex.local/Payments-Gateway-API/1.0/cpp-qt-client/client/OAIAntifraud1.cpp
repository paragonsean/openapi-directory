/**
 * Payments Gateway API
 * >ℹ️ Onboarding guide  >  > Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Payments Gateway API allows you to get payment data and process your store's transactions.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAntifraud1.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAntifraud1::OAIAntifraud1(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAntifraud1::OAIAntifraud1() {
    this->initializeModel();
}

OAIAntifraud1::~OAIAntifraud1() {}

void OAIAntifraud1::initializeModel() {

    m_affiliation_id_isSet = false;
    m_affiliation_id_isValid = false;
}

void OAIAntifraud1::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAntifraud1::fromJsonObject(QJsonObject json) {

    m_affiliation_id_isValid = ::OpenAPI::fromJsonValue(m_affiliation_id, json[QString("affiliationId")]);
    m_affiliation_id_isSet = !json[QString("affiliationId")].isNull() && m_affiliation_id_isValid;
}

QString OAIAntifraud1::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAntifraud1::asJsonObject() const {
    QJsonObject obj;
    if (m_affiliation_id_isSet) {
        obj.insert(QString("affiliationId"), ::OpenAPI::toJsonValue(m_affiliation_id));
    }
    return obj;
}

QString OAIAntifraud1::getAffiliationId() const {
    return m_affiliation_id;
}
void OAIAntifraud1::setAffiliationId(const QString &affiliation_id) {
    m_affiliation_id = affiliation_id;
    m_affiliation_id_isSet = true;
}

bool OAIAntifraud1::is_affiliation_id_Set() const{
    return m_affiliation_id_isSet;
}

bool OAIAntifraud1::is_affiliation_id_Valid() const{
    return m_affiliation_id_isValid;
}

bool OAIAntifraud1::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_affiliation_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAntifraud1::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_affiliation_id_isValid && true;
}

} // namespace OpenAPI
