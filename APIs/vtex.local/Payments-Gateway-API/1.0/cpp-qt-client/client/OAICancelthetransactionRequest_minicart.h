/**
 * Payments Gateway API
 * >ℹ️ Onboarding guide  >  > Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Payments Gateway API allows you to get payment data and process your store's transactions.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICancelthetransactionRequest_minicart.h
 *
 * This field is filled with the content of the cart of the transaction, which can be obtained using [Get Orders](https://developers.vtex.com/vtex-rest-api/reference/orders#getorder) or [Transaction Details](https://developers.vtex.com/vtex-rest-api/reference/transaction-process#transactiondetails) endpoints. It should only be included for transactions with split payment.
 */

#ifndef OAICancelthetransactionRequest_minicart_H
#define OAICancelthetransactionRequest_minicart_H

#include <QJsonObject>

#include <QJsonValue>
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICancelthetransactionRequest_minicart : public OAIObject {
public:
    OAICancelthetransactionRequest_minicart();
    OAICancelthetransactionRequest_minicart(QString json);
    ~OAICancelthetransactionRequest_minicart() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getFreight() const;
    void setFreight(const qint32 &freight);
    bool is_freight_Set() const;
    bool is_freight_Valid() const;

    QList<QJsonValue> getItems() const;
    void setItems(const QList<QJsonValue> &items);
    bool is_items_Set() const;
    bool is_items_Valid() const;

    qint32 getTax() const;
    void setTax(const qint32 &tax);
    bool is_tax_Set() const;
    bool is_tax_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_freight;
    bool m_freight_isSet;
    bool m_freight_isValid;

    QList<QJsonValue> m_items;
    bool m_items_isSet;
    bool m_items_isValid;

    qint32 m_tax;
    bool m_tax_isSet;
    bool m_tax_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICancelthetransactionRequest_minicart)

#endif // OAICancelthetransactionRequest_minicart_H
