/**
 * Payments Gateway API
 * >ℹ️ Onboarding guide  >  > Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Payments Gateway API allows you to get payment data and process your store's transactions.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISettleResponse.h
 *
 * 
 */

#ifndef OAISettleResponse_H
#define OAISettleResponse_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISettleResponse : public OAIObject {
public:
    OAISettleResponse();
    OAISettleResponse(QString json);
    ~OAISettleResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getCancelledValue() const;
    void setCancelledValue(const qint32 &cancelled_value);
    bool is_cancelled_value_Set() const;
    bool is_cancelled_value_Valid() const;

    qint32 getConnectorRefundedValue() const;
    void setConnectorRefundedValue(const qint32 &connector_refunded_value);
    bool is_connector_refunded_value_Set() const;
    bool is_connector_refunded_value_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QString getProcessingDate() const;
    void setProcessingDate(const QString &processing_date);
    bool is_processing_date_Set() const;
    bool is_processing_date_Valid() const;

    QString getRefundedToken() const;
    void setRefundedToken(const QString &refunded_token);
    bool is_refunded_token_Set() const;
    bool is_refunded_token_Valid() const;

    qint32 getRefundedValue() const;
    void setRefundedValue(const qint32 &refunded_value);
    bool is_refunded_value_Set() const;
    bool is_refunded_value_Valid() const;

    qint32 getStatus() const;
    void setStatus(const qint32 &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getStatusDetail() const;
    void setStatusDetail(const QString &status_detail);
    bool is_status_detail_Set() const;
    bool is_status_detail_Valid() const;

    QString getToken() const;
    void setToken(const QString &token);
    bool is_token_Set() const;
    bool is_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_cancelled_value;
    bool m_cancelled_value_isSet;
    bool m_cancelled_value_isValid;

    qint32 m_connector_refunded_value;
    bool m_connector_refunded_value_isSet;
    bool m_connector_refunded_value_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QString m_processing_date;
    bool m_processing_date_isSet;
    bool m_processing_date_isValid;

    QString m_refunded_token;
    bool m_refunded_token_isSet;
    bool m_refunded_token_isValid;

    qint32 m_refunded_value;
    bool m_refunded_value_isSet;
    bool m_refunded_value_isValid;

    qint32 m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_status_detail;
    bool m_status_detail_isSet;
    bool m_status_detail_isValid;

    QString m_token;
    bool m_token_isSet;
    bool m_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISettleResponse)

#endif // OAISettleResponse_H
