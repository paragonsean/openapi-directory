/**
 * Payments Gateway API
 * >ℹ️ Onboarding guide  >  > Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Payments Gateway API allows you to get payment data and process your store's transactions.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPayment1.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPayment1::OAIPayment1(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPayment1::OAIPayment1() {
    this->initializeModel();
}

OAIPayment1::~OAIPayment1() {}

void OAIPayment1::initializeModel() {

    m_href_isSet = false;
    m_href_isValid = false;
}

void OAIPayment1::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPayment1::fromJsonObject(QJsonObject json) {

    m_href_isValid = ::OpenAPI::fromJsonValue(m_href, json[QString("href")]);
    m_href_isSet = !json[QString("href")].isNull() && m_href_isValid;
}

QString OAIPayment1::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPayment1::asJsonObject() const {
    QJsonObject obj;
    if (m_href_isSet) {
        obj.insert(QString("href"), ::OpenAPI::toJsonValue(m_href));
    }
    return obj;
}

QString OAIPayment1::getHref() const {
    return m_href;
}
void OAIPayment1::setHref(const QString &href) {
    m_href = href;
    m_href_isSet = true;
}

bool OAIPayment1::is_href_Set() const{
    return m_href_isSet;
}

bool OAIPayment1::is_href_Valid() const{
    return m_href_isValid;
}

bool OAIPayment1::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_href_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPayment1::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_href_isValid && true;
}

} // namespace OpenAPI
