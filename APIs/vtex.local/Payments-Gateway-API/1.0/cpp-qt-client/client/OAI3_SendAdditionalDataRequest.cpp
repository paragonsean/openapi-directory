/**
 * Payments Gateway API
 * >ℹ️ Onboarding guide  >  > Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Payments Gateway API allows you to get payment data and process your store's transactions.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI3_SendAdditionalDataRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI3_SendAdditionalDataRequest::OAI3_SendAdditionalDataRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI3_SendAdditionalDataRequest::OAI3_SendAdditionalDataRequest() {
    this->initializeModel();
}

OAI3_SendAdditionalDataRequest::~OAI3_SendAdditionalDataRequest() {}

void OAI3_SendAdditionalDataRequest::initializeModel() {

}

void OAI3_SendAdditionalDataRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI3_SendAdditionalDataRequest::fromJsonObject(QJsonObject json) {

}

QString OAI3_SendAdditionalDataRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI3_SendAdditionalDataRequest::asJsonObject() const {
    QJsonObject obj;
    return obj;
}

bool OAI3_SendAdditionalDataRequest::isSet() const {
    bool isObjectUpdated = false;
    do {

    } while (false);
    return isObjectUpdated;
}

bool OAI3_SendAdditionalDataRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
