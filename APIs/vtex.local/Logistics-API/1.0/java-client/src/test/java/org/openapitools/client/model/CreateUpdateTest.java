/*
 * Logistics API
 *     >Check the [Fulfillment onboarding guide](https://developers.vtex.com/docs/guides/fulfillment). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about fulfillment and is organized by focusing on the developer's journey.    Logistics or fulfillment is the module responsible for shipping calculation and inventory management.     The variable `{{environment}}` can be filled with `vtexcommercestable` or `vtexcommercebeta`, depending on the environment you want to test.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Address21;
import org.openapitools.client.model.BusinessHour1;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CreateUpdate
 */
public class CreateUpdateTest {
    private final CreateUpdate model = new CreateUpdate();

    /**
     * Model tests for CreateUpdate
     */
    @Test
    public void testCreateUpdate() {
        // TODO: test CreateUpdate
    }

    /**
     * Test the property 'address'
     */
    @Test
    public void addressTest() {
        // TODO: test address
    }

    /**
     * Test the property 'businessHours'
     */
    @Test
    public void businessHoursTest() {
        // TODO: test businessHours
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'formattedAddress'
     */
    @Test
    public void formattedAddressTest() {
        // TODO: test formattedAddress
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'instructions'
     */
    @Test
    public void instructionsTest() {
        // TODO: test instructions
    }

    /**
     * Test the property 'isActive'
     */
    @Test
    public void isActiveTest() {
        // TODO: test isActive
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'pickupHolidays'
     */
    @Test
    public void pickupHolidaysTest() {
        // TODO: test pickupHolidays
    }

    /**
     * Test the property 'tagsLabel'
     */
    @Test
    public void tagsLabelTest() {
        // TODO: test tagsLabel
    }

}
