/*
 * Logistics API
 *     >Check the [Fulfillment onboarding guide](https://developers.vtex.com/docs/guides/fulfillment). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about fulfillment and is organized by focusing on the developer's journey.    Logistics or fulfillment is the module responsible for shipping calculation and inventory management.     The variable `{{environment}}` can be filled with `vtexcommercestable` or `vtexcommercebeta`, depending on the environment you want to test.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AllWarehouses200ResponseInner;
import org.openapitools.client.model.CreateUpdateWarehouseRequest;
import org.openapitools.client.model.WarehouseById200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WarehousesApi
 */
@Disabled
public class WarehousesApiTest {

    private final WarehousesApi api = new WarehousesApi();

    /**
     * Activate warehouse
     *
     * Activates a given warehouse, by warehouse ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void activateWarehouseTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String warehouseId = null;
        api.activateWarehouse(contentType, accept, warehouseId);
        // TODO: test validations
    }

    /**
     * List all warehouses
     *
     * Lists information about all warehouses set up in your store.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void allWarehousesTest() throws ApiException {
        String contentType = null;
        String accept = null;
        List<AllWarehouses200ResponseInner> response = api.allWarehouses(contentType, accept);
        // TODO: test validations
    }

    /**
     * Create/update warehouse
     *
     * Creates or updates your store&#39;s warehouses
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createUpdateWarehouseTest() throws ApiException {
        String accept = null;
        String contentType = null;
        CreateUpdateWarehouseRequest createUpdateWarehouseRequest = null;
        api.createUpdateWarehouse(accept, contentType, createUpdateWarehouseRequest);
        // TODO: test validations
    }

    /**
     * Deactivate warehouse
     *
     * Deactivates a given warehouse by warehouse ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deactivateWarehouseTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String warehouseId = null;
        api.deactivateWarehouse(contentType, accept, warehouseId);
        // TODO: test validations
    }

    /**
     * Remove warehouse
     *
     * Deletes given warehouse by warehouse ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeWarehouseTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String warehouseId = null;
        api.removeWarehouse(contentType, accept, warehouseId);
        // TODO: test validations
    }

    /**
     * List warehouse by ID
     *
     * Lists the information of a given warehouse, searching by warehouse ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void warehouseByIdTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String warehouseId = null;
        WarehouseById200Response response = api.warehouseById(contentType, accept, warehouseId);
        // TODO: test validations
    }

}
