/*
 * Logistics API
 *     >Check the [Fulfillment onboarding guide](https://developers.vtex.com/docs/guides/fulfillment). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about fulfillment and is organized by focusing on the developer's journey.    Logistics or fulfillment is the module responsible for shipping calculation and inventory management.     The variable `{{environment}}` can be filled with `vtexcommercestable` or `vtexcommercebeta`, depending on the environment you want to test.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateReservation200Response;
import org.openapitools.client.model.CreateReservationRequest1;
import org.openapitools.client.model.ReservationById200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReservationsApi
 */
@Disabled
public class ReservationsApiTest {

    private final ReservationsApi api = new ReservationsApi();

    /**
     * Acknowledgment reservation
     *
     * Acknowledges reservations made by reservation ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void acknowledgmentReservationTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String reservationId = null;
        api.acknowledgmentReservation(contentType, accept, reservationId);
        // TODO: test validations
    }

    /**
     * Cancel reservation
     *
     * Cancels reservation by reservation ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cancelReservationTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String reservationId = null;
        api.cancelReservation(contentType, accept, reservationId);
        // TODO: test validations
    }

    /**
     * Confirm reservation
     *
     * Confirms reservation by reservation ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void confirmReservationTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String reservationId = null;
        api.confirmReservation(contentType, accept, reservationId);
        // TODO: test validations
    }

    /**
     * Create reservation
     *
     * Creates [reservation](https://help.vtex.com/en/tutorial/how-does-reservation-work--tutorials_92).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createReservationTest() throws ApiException {
        String accept = null;
        String contentType = null;
        CreateReservationRequest1 createReservationRequest1 = null;
        CreateReservation200Response response = api.createReservation(accept, contentType, createReservationRequest1);
        // TODO: test validations
    }

    /**
     * List reservation by ID
     *
     * Lists reservation&#39;s information by ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reservationByIdTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String reservationId = null;
        ReservationById200Response response = api.reservationById(contentType, accept, reservationId);
        // TODO: test validations
    }

    /**
     * List reservation by warehouse and SKU
     *
     * Lists reservations in your store, by searching through warehouse and SKU.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reservationbyWarehouseandSkuTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String warehouseId = null;
        String skuId = null;
        api.reservationbyWarehouseandSku(contentType, accept, warehouseId, skuId);
        // TODO: test validations
    }

}
