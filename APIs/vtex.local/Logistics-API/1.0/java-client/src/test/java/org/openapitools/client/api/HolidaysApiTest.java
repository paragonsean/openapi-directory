/*
 * Logistics API
 *     >Check the [Fulfillment onboarding guide](https://developers.vtex.com/docs/guides/fulfillment). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about fulfillment and is organized by focusing on the developer's journey.    Logistics or fulfillment is the module responsible for shipping calculation and inventory management.     The variable `{{environment}}` can be filled with `vtexcommercestable` or `vtexcommercebeta`, depending on the environment you want to test.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateUpdateHolidayRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for HolidaysApi
 */
@Disabled
public class HolidaysApiTest {

    private final HolidaysApi api = new HolidaysApi();

    /**
     * List all holidays
     *
     * Lists information of all holidays.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void allHolidaysTest() throws ApiException {
        String contentType = null;
        String accept = null;
        api.allHolidays(contentType, accept);
        // TODO: test validations
    }

    /**
     * Create/update holiday
     *
     * Creates or updates holidays through holiday ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createUpdateHolidayTest() throws ApiException {
        String accept = null;
        String contentType = null;
        String holidayId = null;
        CreateUpdateHolidayRequest createUpdateHolidayRequest = null;
        api.createUpdateHoliday(accept, contentType, holidayId, createUpdateHolidayRequest);
        // TODO: test validations
    }

    /**
     * Delete holiday
     *
     * Deletes given holidays set up in your store.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void holidayTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String holidayId = null;
        api.holiday(contentType, accept, holidayId);
        // TODO: test validations
    }

    /**
     * List holiday by ID
     *
     * Lists holiday&#39;s information by holiday ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void holidayByIdTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String holidayId = null;
        api.holidayById(contentType, accept, holidayId);
        // TODO: test validations
    }

}
