/*
 * Logistics API
 *     >Check the [Fulfillment onboarding guide](https://developers.vtex.com/docs/guides/fulfillment). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about fulfillment and is organized by focusing on the developer's journey.    Logistics or fulfillment is the module responsible for shipping calculation and inventory management.     The variable `{{environment}}` can be filled with `vtexcommercestable` or `vtexcommercebeta`, depending on the environment you want to test.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateUpdatePolygonRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PolygonsApi
 */
@Disabled
public class PolygonsApiTest {

    private final PolygonsApi api = new PolygonsApi();

    /**
     * Create/update polygon
     *
     * Creates or updates your store&#39;s polygons by geoshape coordinates and polygon name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createUpdatePolygonTest() throws ApiException {
        String contentType = null;
        String accept = null;
        CreateUpdatePolygonRequest createUpdatePolygonRequest = null;
        api.createUpdatePolygon(contentType, accept, createUpdatePolygonRequest);
        // TODO: test validations
    }

    /**
     * Delete polygon
     *
     * Deletes polygon set up in your store, by polygon name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deletePolygonTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String polygonName = null;
        api.deletePolygon(contentType, accept, polygonName);
        // TODO: test validations
    }

    /**
     * List paged polygons
     *
     * Lists stored polygons.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pagedPolygonsTest() throws ApiException {
        String page = null;
        String perPage = null;
        String contentType = null;
        String accept = null;
        api.pagedPolygons(page, perPage, contentType, accept);
        // TODO: test validations
    }

    /**
     * List polygon by ID
     *
     * Lists your store&#39;s polygons by searching through polygon name
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void polygonbyIdTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String polygonName = null;
        api.polygonbyId(contentType, accept, polygonName);
        // TODO: test validations
    }

}
