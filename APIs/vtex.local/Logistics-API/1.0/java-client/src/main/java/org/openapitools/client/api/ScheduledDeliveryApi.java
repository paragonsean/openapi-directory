/*
 * Logistics API
 *     >Check the [Fulfillment onboarding guide](https://developers.vtex.com/docs/guides/fulfillment). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about fulfillment and is organized by focusing on the developer's journey.    Logistics or fulfillment is the module responsible for shipping calculation and inventory management.     The variable `{{environment}}` can be filled with `vtexcommercestable` or `vtexcommercebeta`, depending on the environment you want to test.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;



import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ScheduledDeliveryApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ScheduledDeliveryApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ScheduledDeliveryApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for addBlockedDeliveryWindows
     * @param contentType Type of the content being sent (required)
     * @param accept HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand (required)
     * @param carrierId  (required)
     * @param body  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addBlockedDeliveryWindowsCall(String contentType, String accept, String carrierId, String body, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/api/logistics/pvt/configuration/carriers/{carrierId}/adddayofweekblocked"
            .replace("{" + "carrierId" + "}", localVarApiClient.escapeString(carrierId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (contentType != null) {
            localVarHeaderParams.put("Content-Type", localVarApiClient.parameterToString(contentType));
        }

        if (accept != null) {
            localVarHeaderParams.put("Accept", localVarApiClient.parameterToString(accept));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json; charset=utf-8"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "appToken", "appKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call addBlockedDeliveryWindowsValidateBeforeCall(String contentType, String accept, String carrierId, String body, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'contentType' is set
        if (contentType == null) {
            throw new ApiException("Missing the required parameter 'contentType' when calling addBlockedDeliveryWindows(Async)");
        }

        // verify the required parameter 'accept' is set
        if (accept == null) {
            throw new ApiException("Missing the required parameter 'accept' when calling addBlockedDeliveryWindows(Async)");
        }

        // verify the required parameter 'carrierId' is set
        if (carrierId == null) {
            throw new ApiException("Missing the required parameter 'carrierId' when calling addBlockedDeliveryWindows(Async)");
        }

        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling addBlockedDeliveryWindows(Async)");
        }

        return addBlockedDeliveryWindowsCall(contentType, accept, carrierId, body, _callback);

    }

    /**
     * Add blocked delivery windows
     * Adds blocked delivery windows for your store&#39;s shipping policies.    &gt; Note that, while most of our API endpoints return time fields in UTC, this endpoint returns time adjusted to the configured time zone of the account.
     * @param contentType Type of the content being sent (required)
     * @param accept HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand (required)
     * @param carrierId  (required)
     * @param body  (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public void addBlockedDeliveryWindows(String contentType, String accept, String carrierId, String body) throws ApiException {
        addBlockedDeliveryWindowsWithHttpInfo(contentType, accept, carrierId, body);
    }

    /**
     * Add blocked delivery windows
     * Adds blocked delivery windows for your store&#39;s shipping policies.    &gt; Note that, while most of our API endpoints return time fields in UTC, this endpoint returns time adjusted to the configured time zone of the account.
     * @param contentType Type of the content being sent (required)
     * @param accept HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand (required)
     * @param carrierId  (required)
     * @param body  (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> addBlockedDeliveryWindowsWithHttpInfo(String contentType, String accept, String carrierId, String body) throws ApiException {
        okhttp3.Call localVarCall = addBlockedDeliveryWindowsValidateBeforeCall(contentType, accept, carrierId, body, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Add blocked delivery windows (asynchronously)
     * Adds blocked delivery windows for your store&#39;s shipping policies.    &gt; Note that, while most of our API endpoints return time fields in UTC, this endpoint returns time adjusted to the configured time zone of the account.
     * @param contentType Type of the content being sent (required)
     * @param accept HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand (required)
     * @param carrierId  (required)
     * @param body  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addBlockedDeliveryWindowsAsync(String contentType, String accept, String carrierId, String body, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = addBlockedDeliveryWindowsValidateBeforeCall(contentType, accept, carrierId, body, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesGet
     * @param contentType Type of the content being sent (required)
     * @param accept HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand (required)
     * @param capacityType How the delivery capacity is measured as defined in the shipping policy. Capacity can be measured by maximum number of orders (&#x60;\&quot;orders_quantity\&quot;&#x60;) or SKUs (&#x60;\&quot;skus_quantity\&quot;&#x60;). (required)
     * @param shippingPolicyId ID of shipping policy to search. (required)
     * @param rangeStart Starting date of time range (required)
     * @param rangeEnd End date of time range. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesGetCall(String contentType, String accept, String capacityType, String shippingPolicyId, String rangeStart, String rangeEnd, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/logistics-capacity/resources/carrier@{capacityType}@{shippingPolicyId}/time-frames"
            .replace("{" + "capacityType" + "}", localVarApiClient.escapeString(capacityType.toString()))
            .replace("{" + "shippingPolicyId" + "}", localVarApiClient.escapeString(shippingPolicyId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (rangeStart != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rangeStart", rangeStart));
        }

        if (rangeEnd != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rangeEnd", rangeEnd));
        }

        if (contentType != null) {
            localVarHeaderParams.put("Content-Type", localVarApiClient.parameterToString(contentType));
        }

        if (accept != null) {
            localVarHeaderParams.put("Accept", localVarApiClient.parameterToString(accept));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "appToken", "appKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesGetValidateBeforeCall(String contentType, String accept, String capacityType, String shippingPolicyId, String rangeStart, String rangeEnd, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'contentType' is set
        if (contentType == null) {
            throw new ApiException("Missing the required parameter 'contentType' when calling apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesGet(Async)");
        }

        // verify the required parameter 'accept' is set
        if (accept == null) {
            throw new ApiException("Missing the required parameter 'accept' when calling apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesGet(Async)");
        }

        // verify the required parameter 'capacityType' is set
        if (capacityType == null) {
            throw new ApiException("Missing the required parameter 'capacityType' when calling apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesGet(Async)");
        }

        // verify the required parameter 'shippingPolicyId' is set
        if (shippingPolicyId == null) {
            throw new ApiException("Missing the required parameter 'shippingPolicyId' when calling apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesGet(Async)");
        }

        // verify the required parameter 'rangeStart' is set
        if (rangeStart == null) {
            throw new ApiException("Missing the required parameter 'rangeStart' when calling apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesGet(Async)");
        }

        // verify the required parameter 'rangeEnd' is set
        if (rangeEnd == null) {
            throw new ApiException("Missing the required parameter 'rangeEnd' when calling apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesGet(Async)");
        }

        return apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesGetCall(contentType, accept, capacityType, shippingPolicyId, rangeStart, rangeEnd, _callback);

    }

    /**
     * Search capacity reservations in time range
     * Get information on all capacity reservations made to scheduled delivery windows in a given time range.    &gt; Note that, while most of our API endpoints return time fields in UTC, this endpoint returns time adjusted to the configured time zone of the account.    &gt; Note that the combined string &#x60;carrier@{capacityType}@{shippingPolicyId}&#x60; can be referred to as a \&quot;resource\&quot; in the API&#39;s messages.
     * @param contentType Type of the content being sent (required)
     * @param accept HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand (required)
     * @param capacityType How the delivery capacity is measured as defined in the shipping policy. Capacity can be measured by maximum number of orders (&#x60;\&quot;orders_quantity\&quot;&#x60;) or SKUs (&#x60;\&quot;skus_quantity\&quot;&#x60;). (required)
     * @param shippingPolicyId ID of shipping policy to search. (required)
     * @param rangeStart Starting date of time range (required)
     * @param rangeEnd End date of time range. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public void apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesGet(String contentType, String accept, String capacityType, String shippingPolicyId, String rangeStart, String rangeEnd) throws ApiException {
        apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesGetWithHttpInfo(contentType, accept, capacityType, shippingPolicyId, rangeStart, rangeEnd);
    }

    /**
     * Search capacity reservations in time range
     * Get information on all capacity reservations made to scheduled delivery windows in a given time range.    &gt; Note that, while most of our API endpoints return time fields in UTC, this endpoint returns time adjusted to the configured time zone of the account.    &gt; Note that the combined string &#x60;carrier@{capacityType}@{shippingPolicyId}&#x60; can be referred to as a \&quot;resource\&quot; in the API&#39;s messages.
     * @param contentType Type of the content being sent (required)
     * @param accept HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand (required)
     * @param capacityType How the delivery capacity is measured as defined in the shipping policy. Capacity can be measured by maximum number of orders (&#x60;\&quot;orders_quantity\&quot;&#x60;) or SKUs (&#x60;\&quot;skus_quantity\&quot;&#x60;). (required)
     * @param shippingPolicyId ID of shipping policy to search. (required)
     * @param rangeStart Starting date of time range (required)
     * @param rangeEnd End date of time range. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesGetWithHttpInfo(String contentType, String accept, String capacityType, String shippingPolicyId, String rangeStart, String rangeEnd) throws ApiException {
        okhttp3.Call localVarCall = apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesGetValidateBeforeCall(contentType, accept, capacityType, shippingPolicyId, rangeStart, rangeEnd, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Search capacity reservations in time range (asynchronously)
     * Get information on all capacity reservations made to scheduled delivery windows in a given time range.    &gt; Note that, while most of our API endpoints return time fields in UTC, this endpoint returns time adjusted to the configured time zone of the account.    &gt; Note that the combined string &#x60;carrier@{capacityType}@{shippingPolicyId}&#x60; can be referred to as a \&quot;resource\&quot; in the API&#39;s messages.
     * @param contentType Type of the content being sent (required)
     * @param accept HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand (required)
     * @param capacityType How the delivery capacity is measured as defined in the shipping policy. Capacity can be measured by maximum number of orders (&#x60;\&quot;orders_quantity\&quot;&#x60;) or SKUs (&#x60;\&quot;skus_quantity\&quot;&#x60;). (required)
     * @param shippingPolicyId ID of shipping policy to search. (required)
     * @param rangeStart Starting date of time range (required)
     * @param rangeEnd End date of time range. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesGetAsync(String contentType, String accept, String capacityType, String shippingPolicyId, String rangeStart, String rangeEnd, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesGetValidateBeforeCall(contentType, accept, capacityType, shippingPolicyId, rangeStart, rangeEnd, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesWindowDayFwindowStartTimeTwindowEndTimeGet
     * @param contentType Type of the content being sent (required)
     * @param accept HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand (required)
     * @param capacityType How the delivery capacity is measured as defined in the shipping policy. Capacity can be measured by maximum number of orders (&#x60;\&quot;orders_quantity\&quot;&#x60;) or SKUs (&#x60;\&quot;skus_quantity\&quot;&#x60;). (required)
     * @param shippingPolicyId ID of shipping policy to search. (required)
     * @param windowDay Day of the specific scheduled delivery window to be consulted for reservations. (required)
     * @param windowStartTime Start time of specific scheduled delivery window to be consulted for reservations. (required)
     * @param windowEndTime End time of specific scheduled delivery window to be consulted for reservations. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesWindowDayFwindowStartTimeTwindowEndTimeGetCall(String contentType, String accept, String capacityType, String shippingPolicyId, String windowDay, String windowStartTime, String windowEndTime, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/logistics-capacity/resources/carrier@{capacityType}@{shippingPolicyId}/time-frames/{windowDay}F{windowStartTime}T{windowEndTime}"
            .replace("{" + "capacityType" + "}", localVarApiClient.escapeString(capacityType.toString()))
            .replace("{" + "shippingPolicyId" + "}", localVarApiClient.escapeString(shippingPolicyId.toString()))
            .replace("{" + "windowDay" + "}", localVarApiClient.escapeString(windowDay.toString()))
            .replace("{" + "windowStartTime" + "}", localVarApiClient.escapeString(windowStartTime.toString()))
            .replace("{" + "windowEndTime" + "}", localVarApiClient.escapeString(windowEndTime.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (contentType != null) {
            localVarHeaderParams.put("Content-Type", localVarApiClient.parameterToString(contentType));
        }

        if (accept != null) {
            localVarHeaderParams.put("Accept", localVarApiClient.parameterToString(accept));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "appToken", "appKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesWindowDayFwindowStartTimeTwindowEndTimeGetValidateBeforeCall(String contentType, String accept, String capacityType, String shippingPolicyId, String windowDay, String windowStartTime, String windowEndTime, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'contentType' is set
        if (contentType == null) {
            throw new ApiException("Missing the required parameter 'contentType' when calling apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesWindowDayFwindowStartTimeTwindowEndTimeGet(Async)");
        }

        // verify the required parameter 'accept' is set
        if (accept == null) {
            throw new ApiException("Missing the required parameter 'accept' when calling apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesWindowDayFwindowStartTimeTwindowEndTimeGet(Async)");
        }

        // verify the required parameter 'capacityType' is set
        if (capacityType == null) {
            throw new ApiException("Missing the required parameter 'capacityType' when calling apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesWindowDayFwindowStartTimeTwindowEndTimeGet(Async)");
        }

        // verify the required parameter 'shippingPolicyId' is set
        if (shippingPolicyId == null) {
            throw new ApiException("Missing the required parameter 'shippingPolicyId' when calling apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesWindowDayFwindowStartTimeTwindowEndTimeGet(Async)");
        }

        // verify the required parameter 'windowDay' is set
        if (windowDay == null) {
            throw new ApiException("Missing the required parameter 'windowDay' when calling apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesWindowDayFwindowStartTimeTwindowEndTimeGet(Async)");
        }

        // verify the required parameter 'windowStartTime' is set
        if (windowStartTime == null) {
            throw new ApiException("Missing the required parameter 'windowStartTime' when calling apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesWindowDayFwindowStartTimeTwindowEndTimeGet(Async)");
        }

        // verify the required parameter 'windowEndTime' is set
        if (windowEndTime == null) {
            throw new ApiException("Missing the required parameter 'windowEndTime' when calling apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesWindowDayFwindowStartTimeTwindowEndTimeGet(Async)");
        }

        return apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesWindowDayFwindowStartTimeTwindowEndTimeGetCall(contentType, accept, capacityType, shippingPolicyId, windowDay, windowStartTime, windowEndTime, _callback);

    }

    /**
     * Get capacity reservation usage by window
     * Retrieves capacity usage of a specific scheduled delivery reservation window.    &gt; Note that, while most of our API endpoints return time fields in UTC, this endpoint returns time adjusted to the configured time zone of the account.    &gt; Note that the combined string &#x60;carrier@{capacityType}@{shippingPolicyId}&#x60; can be referred to as a \&quot;resource\&quot; in the API&#39;s messages.
     * @param contentType Type of the content being sent (required)
     * @param accept HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand (required)
     * @param capacityType How the delivery capacity is measured as defined in the shipping policy. Capacity can be measured by maximum number of orders (&#x60;\&quot;orders_quantity\&quot;&#x60;) or SKUs (&#x60;\&quot;skus_quantity\&quot;&#x60;). (required)
     * @param shippingPolicyId ID of shipping policy to search. (required)
     * @param windowDay Day of the specific scheduled delivery window to be consulted for reservations. (required)
     * @param windowStartTime Start time of specific scheduled delivery window to be consulted for reservations. (required)
     * @param windowEndTime End time of specific scheduled delivery window to be consulted for reservations. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public void apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesWindowDayFwindowStartTimeTwindowEndTimeGet(String contentType, String accept, String capacityType, String shippingPolicyId, String windowDay, String windowStartTime, String windowEndTime) throws ApiException {
        apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesWindowDayFwindowStartTimeTwindowEndTimeGetWithHttpInfo(contentType, accept, capacityType, shippingPolicyId, windowDay, windowStartTime, windowEndTime);
    }

    /**
     * Get capacity reservation usage by window
     * Retrieves capacity usage of a specific scheduled delivery reservation window.    &gt; Note that, while most of our API endpoints return time fields in UTC, this endpoint returns time adjusted to the configured time zone of the account.    &gt; Note that the combined string &#x60;carrier@{capacityType}@{shippingPolicyId}&#x60; can be referred to as a \&quot;resource\&quot; in the API&#39;s messages.
     * @param contentType Type of the content being sent (required)
     * @param accept HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand (required)
     * @param capacityType How the delivery capacity is measured as defined in the shipping policy. Capacity can be measured by maximum number of orders (&#x60;\&quot;orders_quantity\&quot;&#x60;) or SKUs (&#x60;\&quot;skus_quantity\&quot;&#x60;). (required)
     * @param shippingPolicyId ID of shipping policy to search. (required)
     * @param windowDay Day of the specific scheduled delivery window to be consulted for reservations. (required)
     * @param windowStartTime Start time of specific scheduled delivery window to be consulted for reservations. (required)
     * @param windowEndTime End time of specific scheduled delivery window to be consulted for reservations. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesWindowDayFwindowStartTimeTwindowEndTimeGetWithHttpInfo(String contentType, String accept, String capacityType, String shippingPolicyId, String windowDay, String windowStartTime, String windowEndTime) throws ApiException {
        okhttp3.Call localVarCall = apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesWindowDayFwindowStartTimeTwindowEndTimeGetValidateBeforeCall(contentType, accept, capacityType, shippingPolicyId, windowDay, windowStartTime, windowEndTime, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Get capacity reservation usage by window (asynchronously)
     * Retrieves capacity usage of a specific scheduled delivery reservation window.    &gt; Note that, while most of our API endpoints return time fields in UTC, this endpoint returns time adjusted to the configured time zone of the account.    &gt; Note that the combined string &#x60;carrier@{capacityType}@{shippingPolicyId}&#x60; can be referred to as a \&quot;resource\&quot; in the API&#39;s messages.
     * @param contentType Type of the content being sent (required)
     * @param accept HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand (required)
     * @param capacityType How the delivery capacity is measured as defined in the shipping policy. Capacity can be measured by maximum number of orders (&#x60;\&quot;orders_quantity\&quot;&#x60;) or SKUs (&#x60;\&quot;skus_quantity\&quot;&#x60;). (required)
     * @param shippingPolicyId ID of shipping policy to search. (required)
     * @param windowDay Day of the specific scheduled delivery window to be consulted for reservations. (required)
     * @param windowStartTime Start time of specific scheduled delivery window to be consulted for reservations. (required)
     * @param windowEndTime End time of specific scheduled delivery window to be consulted for reservations. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesWindowDayFwindowStartTimeTwindowEndTimeGetAsync(String contentType, String accept, String capacityType, String shippingPolicyId, String windowDay, String windowStartTime, String windowEndTime, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesWindowDayFwindowStartTimeTwindowEndTimeGetValidateBeforeCall(contentType, accept, capacityType, shippingPolicyId, windowDay, windowStartTime, windowEndTime, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for removeBlockedDeliveryWindows
     * @param contentType Type of the content being sent (required)
     * @param accept HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand (required)
     * @param carrierId  (required)
     * @param body  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call removeBlockedDeliveryWindowsCall(String contentType, String accept, String carrierId, String body, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/api/logistics/pvt/configuration/carriers/{carrierId}/removedayofweekblocked"
            .replace("{" + "carrierId" + "}", localVarApiClient.escapeString(carrierId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (contentType != null) {
            localVarHeaderParams.put("Content-Type", localVarApiClient.parameterToString(contentType));
        }

        if (accept != null) {
            localVarHeaderParams.put("Accept", localVarApiClient.parameterToString(accept));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json; charset=utf-8"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "appToken", "appKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call removeBlockedDeliveryWindowsValidateBeforeCall(String contentType, String accept, String carrierId, String body, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'contentType' is set
        if (contentType == null) {
            throw new ApiException("Missing the required parameter 'contentType' when calling removeBlockedDeliveryWindows(Async)");
        }

        // verify the required parameter 'accept' is set
        if (accept == null) {
            throw new ApiException("Missing the required parameter 'accept' when calling removeBlockedDeliveryWindows(Async)");
        }

        // verify the required parameter 'carrierId' is set
        if (carrierId == null) {
            throw new ApiException("Missing the required parameter 'carrierId' when calling removeBlockedDeliveryWindows(Async)");
        }

        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling removeBlockedDeliveryWindows(Async)");
        }

        return removeBlockedDeliveryWindowsCall(contentType, accept, carrierId, body, _callback);

    }

    /**
     * Remove blocked delivery windows
     * Removes the blocked delivery windows set to your store&#39;s shipping policies.    &gt; Note that, while most of our API endpoints return time fields in UTC, this endpoint returns time adjusted to the configured time zone of the account.
     * @param contentType Type of the content being sent (required)
     * @param accept HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand (required)
     * @param carrierId  (required)
     * @param body  (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public void removeBlockedDeliveryWindows(String contentType, String accept, String carrierId, String body) throws ApiException {
        removeBlockedDeliveryWindowsWithHttpInfo(contentType, accept, carrierId, body);
    }

    /**
     * Remove blocked delivery windows
     * Removes the blocked delivery windows set to your store&#39;s shipping policies.    &gt; Note that, while most of our API endpoints return time fields in UTC, this endpoint returns time adjusted to the configured time zone of the account.
     * @param contentType Type of the content being sent (required)
     * @param accept HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand (required)
     * @param carrierId  (required)
     * @param body  (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> removeBlockedDeliveryWindowsWithHttpInfo(String contentType, String accept, String carrierId, String body) throws ApiException {
        okhttp3.Call localVarCall = removeBlockedDeliveryWindowsValidateBeforeCall(contentType, accept, carrierId, body, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Remove blocked delivery windows (asynchronously)
     * Removes the blocked delivery windows set to your store&#39;s shipping policies.    &gt; Note that, while most of our API endpoints return time fields in UTC, this endpoint returns time adjusted to the configured time zone of the account.
     * @param contentType Type of the content being sent (required)
     * @param accept HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand (required)
     * @param carrierId  (required)
     * @param body  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call removeBlockedDeliveryWindowsAsync(String contentType, String accept, String carrierId, String body, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = removeBlockedDeliveryWindowsValidateBeforeCall(contentType, accept, carrierId, body, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for retrieveBlockedDeliveryWindows
     * @param contentType Type of the content being sent (required)
     * @param accept HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand (required)
     * @param carrierId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call retrieveBlockedDeliveryWindowsCall(String contentType, String accept, String carrierId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/logistics/pvt/configuration/carriers/{carrierId}/getdayofweekblocked"
            .replace("{" + "carrierId" + "}", localVarApiClient.escapeString(carrierId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (contentType != null) {
            localVarHeaderParams.put("Content-Type", localVarApiClient.parameterToString(contentType));
        }

        if (accept != null) {
            localVarHeaderParams.put("Accept", localVarApiClient.parameterToString(accept));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "appToken", "appKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call retrieveBlockedDeliveryWindowsValidateBeforeCall(String contentType, String accept, String carrierId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'contentType' is set
        if (contentType == null) {
            throw new ApiException("Missing the required parameter 'contentType' when calling retrieveBlockedDeliveryWindows(Async)");
        }

        // verify the required parameter 'accept' is set
        if (accept == null) {
            throw new ApiException("Missing the required parameter 'accept' when calling retrieveBlockedDeliveryWindows(Async)");
        }

        // verify the required parameter 'carrierId' is set
        if (carrierId == null) {
            throw new ApiException("Missing the required parameter 'carrierId' when calling retrieveBlockedDeliveryWindows(Async)");
        }

        return retrieveBlockedDeliveryWindowsCall(contentType, accept, carrierId, _callback);

    }

    /**
     * Retrieve blocked delivery windows
     * Lists all blocked delivery windows of your store&#39;s shipping policies, searching by carrier ID.    &gt; Note that, while most of our API endpoints return time fields in UTC, this endpoint returns **Scheduled Delivery** related time fields adjusted to the configured time zone of the account.
     * @param contentType Type of the content being sent (required)
     * @param accept HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand (required)
     * @param carrierId  (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public void retrieveBlockedDeliveryWindows(String contentType, String accept, String carrierId) throws ApiException {
        retrieveBlockedDeliveryWindowsWithHttpInfo(contentType, accept, carrierId);
    }

    /**
     * Retrieve blocked delivery windows
     * Lists all blocked delivery windows of your store&#39;s shipping policies, searching by carrier ID.    &gt; Note that, while most of our API endpoints return time fields in UTC, this endpoint returns **Scheduled Delivery** related time fields adjusted to the configured time zone of the account.
     * @param contentType Type of the content being sent (required)
     * @param accept HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand (required)
     * @param carrierId  (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> retrieveBlockedDeliveryWindowsWithHttpInfo(String contentType, String accept, String carrierId) throws ApiException {
        okhttp3.Call localVarCall = retrieveBlockedDeliveryWindowsValidateBeforeCall(contentType, accept, carrierId, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Retrieve blocked delivery windows (asynchronously)
     * Lists all blocked delivery windows of your store&#39;s shipping policies, searching by carrier ID.    &gt; Note that, while most of our API endpoints return time fields in UTC, this endpoint returns **Scheduled Delivery** related time fields adjusted to the configured time zone of the account.
     * @param contentType Type of the content being sent (required)
     * @param accept HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand (required)
     * @param carrierId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call retrieveBlockedDeliveryWindowsAsync(String contentType, String accept, String carrierId, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = retrieveBlockedDeliveryWindowsValidateBeforeCall(contentType, accept, carrierId, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
