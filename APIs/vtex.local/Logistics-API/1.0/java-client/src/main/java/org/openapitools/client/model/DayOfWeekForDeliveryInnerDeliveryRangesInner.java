/*
 * Logistics API
 *     >Check the [Fulfillment onboarding guide](https://developers.vtex.com/docs/guides/fulfillment). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about fulfillment and is organized by focusing on the developer's journey.    Logistics or fulfillment is the module responsible for shipping calculation and inventory management.     The variable `{{environment}}` can be filled with `vtexcommercestable` or `vtexcommercebeta`, depending on the environment you want to test.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DayOfWeekForDeliveryInnerDeliveryRangesInnerDeliveryCapacityInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DayOfWeekForDeliveryInnerDeliveryRangesInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:56:20.128391-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DayOfWeekForDeliveryInnerDeliveryRangesInner {
  public static final String SERIALIZED_NAME_DELIVERY_CAPACITY = "deliveryCapacity";
  @SerializedName(SERIALIZED_NAME_DELIVERY_CAPACITY)
  private List<DayOfWeekForDeliveryInnerDeliveryRangesInnerDeliveryCapacityInner> deliveryCapacity = new ArrayList<>();

  public static final String SERIALIZED_NAME_END_TIME = "endTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private String endTime;

  public static final String SERIALIZED_NAME_LIST_PRICE = "listPrice";
  @SerializedName(SERIALIZED_NAME_LIST_PRICE)
  private BigDecimal listPrice;

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private String startTime;

  public DayOfWeekForDeliveryInnerDeliveryRangesInner() {
  }

  public DayOfWeekForDeliveryInnerDeliveryRangesInner deliveryCapacity(List<DayOfWeekForDeliveryInnerDeliveryRangesInnerDeliveryCapacityInner> deliveryCapacity) {
    this.deliveryCapacity = deliveryCapacity;
    return this;
  }

  public DayOfWeekForDeliveryInnerDeliveryRangesInner addDeliveryCapacityItem(DayOfWeekForDeliveryInnerDeliveryRangesInnerDeliveryCapacityInner deliveryCapacityItem) {
    if (this.deliveryCapacity == null) {
      this.deliveryCapacity = new ArrayList<>();
    }
    this.deliveryCapacity.add(deliveryCapacityItem);
    return this;
  }

  /**
   * Sets maximum delivery capacity for a given reservation window for scheduled delivery.
   * @return deliveryCapacity
   */
  @javax.annotation.Nullable
  public List<DayOfWeekForDeliveryInnerDeliveryRangesInnerDeliveryCapacityInner> getDeliveryCapacity() {
    return deliveryCapacity;
  }

  public void setDeliveryCapacity(List<DayOfWeekForDeliveryInnerDeliveryRangesInnerDeliveryCapacityInner> deliveryCapacity) {
    this.deliveryCapacity = deliveryCapacity;
  }


  public DayOfWeekForDeliveryInnerDeliveryRangesInner endTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * End time for day of the week.
   * @return endTime
   */
  @javax.annotation.Nonnull
  public String getEndTime() {
    return endTime;
  }

  public void setEndTime(String endTime) {
    this.endTime = endTime;
  }


  public DayOfWeekForDeliveryInnerDeliveryRangesInner listPrice(BigDecimal listPrice) {
    this.listPrice = listPrice;
    return this;
  }

  /**
   * List price for day of the week.
   * @return listPrice
   */
  @javax.annotation.Nonnull
  public BigDecimal getListPrice() {
    return listPrice;
  }

  public void setListPrice(BigDecimal listPrice) {
    this.listPrice = listPrice;
  }


  public DayOfWeekForDeliveryInnerDeliveryRangesInner startTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Start time for day of the week.
   * @return startTime
   */
  @javax.annotation.Nonnull
  public String getStartTime() {
    return startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DayOfWeekForDeliveryInnerDeliveryRangesInner dayOfWeekForDeliveryInnerDeliveryRangesInner = (DayOfWeekForDeliveryInnerDeliveryRangesInner) o;
    return Objects.equals(this.deliveryCapacity, dayOfWeekForDeliveryInnerDeliveryRangesInner.deliveryCapacity) &&
        Objects.equals(this.endTime, dayOfWeekForDeliveryInnerDeliveryRangesInner.endTime) &&
        Objects.equals(this.listPrice, dayOfWeekForDeliveryInnerDeliveryRangesInner.listPrice) &&
        Objects.equals(this.startTime, dayOfWeekForDeliveryInnerDeliveryRangesInner.startTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deliveryCapacity, endTime, listPrice, startTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DayOfWeekForDeliveryInnerDeliveryRangesInner {\n");
    sb.append("    deliveryCapacity: ").append(toIndentedString(deliveryCapacity)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    listPrice: ").append(toIndentedString(listPrice)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("deliveryCapacity");
    openapiFields.add("endTime");
    openapiFields.add("listPrice");
    openapiFields.add("startTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("endTime");
    openapiRequiredFields.add("listPrice");
    openapiRequiredFields.add("startTime");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DayOfWeekForDeliveryInnerDeliveryRangesInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DayOfWeekForDeliveryInnerDeliveryRangesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DayOfWeekForDeliveryInnerDeliveryRangesInner is not found in the empty JSON string", DayOfWeekForDeliveryInnerDeliveryRangesInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DayOfWeekForDeliveryInnerDeliveryRangesInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DayOfWeekForDeliveryInnerDeliveryRangesInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DayOfWeekForDeliveryInnerDeliveryRangesInner.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("deliveryCapacity") != null && !jsonObj.get("deliveryCapacity").isJsonNull()) {
        JsonArray jsonArraydeliveryCapacity = jsonObj.getAsJsonArray("deliveryCapacity");
        if (jsonArraydeliveryCapacity != null) {
          // ensure the json data is an array
          if (!jsonObj.get("deliveryCapacity").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `deliveryCapacity` to be an array in the JSON string but got `%s`", jsonObj.get("deliveryCapacity").toString()));
          }

          // validate the optional field `deliveryCapacity` (array)
          for (int i = 0; i < jsonArraydeliveryCapacity.size(); i++) {
            DayOfWeekForDeliveryInnerDeliveryRangesInnerDeliveryCapacityInner.validateJsonElement(jsonArraydeliveryCapacity.get(i));
          };
        }
      }
      if (!jsonObj.get("endTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endTime").toString()));
      }
      if (!jsonObj.get("startTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startTime").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DayOfWeekForDeliveryInnerDeliveryRangesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DayOfWeekForDeliveryInnerDeliveryRangesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DayOfWeekForDeliveryInnerDeliveryRangesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DayOfWeekForDeliveryInnerDeliveryRangesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<DayOfWeekForDeliveryInnerDeliveryRangesInner>() {
           @Override
           public void write(JsonWriter out, DayOfWeekForDeliveryInnerDeliveryRangesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DayOfWeekForDeliveryInnerDeliveryRangesInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DayOfWeekForDeliveryInnerDeliveryRangesInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DayOfWeekForDeliveryInnerDeliveryRangesInner
   * @throws IOException if the JSON string is invalid with respect to DayOfWeekForDeliveryInnerDeliveryRangesInner
   */
  public static DayOfWeekForDeliveryInnerDeliveryRangesInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DayOfWeekForDeliveryInnerDeliveryRangesInner.class);
  }

  /**
   * Convert an instance of DayOfWeekForDeliveryInnerDeliveryRangesInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

