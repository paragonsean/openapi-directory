/*
 * Logistics API
 *     >Check the [Fulfillment onboarding guide](https://developers.vtex.com/docs/guides/fulfillment). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about fulfillment and is organized by focusing on the developer's journey.    Logistics or fulfillment is the module responsible for shipping calculation and inventory management.     The variable `{{environment}}` can be filled with `vtexcommercestable` or `vtexcommercebeta`, depending on the environment you want to test.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateInventoryBySkuandWarehouseRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:56:20.128391-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateInventoryBySkuandWarehouseRequest {
  public static final String SERIALIZED_NAME_DATE_UTC_ON_BALANCE_SYSTEM = "dateUtcOnBalanceSystem";
  @SerializedName(SERIALIZED_NAME_DATE_UTC_ON_BALANCE_SYSTEM)
  private String dateUtcOnBalanceSystem;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Integer quantity;

  public static final String SERIALIZED_NAME_UNLIMITED_QUANTITY = "unlimitedQuantity";
  @SerializedName(SERIALIZED_NAME_UNLIMITED_QUANTITY)
  private Boolean unlimitedQuantity;

  public UpdateInventoryBySkuandWarehouseRequest() {
  }

  public UpdateInventoryBySkuandWarehouseRequest dateUtcOnBalanceSystem(String dateUtcOnBalanceSystem) {
    this.dateUtcOnBalanceSystem = dateUtcOnBalanceSystem;
    return this;
  }

  /**
   * Get dateUtcOnBalanceSystem
   * @return dateUtcOnBalanceSystem
   */
  @javax.annotation.Nullable
  public String getDateUtcOnBalanceSystem() {
    return dateUtcOnBalanceSystem;
  }

  public void setDateUtcOnBalanceSystem(String dateUtcOnBalanceSystem) {
    this.dateUtcOnBalanceSystem = dateUtcOnBalanceSystem;
  }


  public UpdateInventoryBySkuandWarehouseRequest quantity(Integer quantity) {
    this.quantity = quantity;
    return this;
  }

  /**
   * Get quantity
   * @return quantity
   */
  @javax.annotation.Nonnull
  public Integer getQuantity() {
    return quantity;
  }

  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }


  public UpdateInventoryBySkuandWarehouseRequest unlimitedQuantity(Boolean unlimitedQuantity) {
    this.unlimitedQuantity = unlimitedQuantity;
    return this;
  }

  /**
   * Get unlimitedQuantity
   * @return unlimitedQuantity
   */
  @javax.annotation.Nonnull
  public Boolean getUnlimitedQuantity() {
    return unlimitedQuantity;
  }

  public void setUnlimitedQuantity(Boolean unlimitedQuantity) {
    this.unlimitedQuantity = unlimitedQuantity;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateInventoryBySkuandWarehouseRequest updateInventoryBySkuandWarehouseRequest = (UpdateInventoryBySkuandWarehouseRequest) o;
    return Objects.equals(this.dateUtcOnBalanceSystem, updateInventoryBySkuandWarehouseRequest.dateUtcOnBalanceSystem) &&
        Objects.equals(this.quantity, updateInventoryBySkuandWarehouseRequest.quantity) &&
        Objects.equals(this.unlimitedQuantity, updateInventoryBySkuandWarehouseRequest.unlimitedQuantity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dateUtcOnBalanceSystem, quantity, unlimitedQuantity);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateInventoryBySkuandWarehouseRequest {\n");
    sb.append("    dateUtcOnBalanceSystem: ").append(toIndentedString(dateUtcOnBalanceSystem)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    unlimitedQuantity: ").append(toIndentedString(unlimitedQuantity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dateUtcOnBalanceSystem");
    openapiFields.add("quantity");
    openapiFields.add("unlimitedQuantity");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("dateUtcOnBalanceSystem");
    openapiRequiredFields.add("quantity");
    openapiRequiredFields.add("unlimitedQuantity");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateInventoryBySkuandWarehouseRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateInventoryBySkuandWarehouseRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateInventoryBySkuandWarehouseRequest is not found in the empty JSON string", UpdateInventoryBySkuandWarehouseRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateInventoryBySkuandWarehouseRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateInventoryBySkuandWarehouseRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UpdateInventoryBySkuandWarehouseRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("dateUtcOnBalanceSystem") != null && !jsonObj.get("dateUtcOnBalanceSystem").isJsonNull()) && !jsonObj.get("dateUtcOnBalanceSystem").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dateUtcOnBalanceSystem` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dateUtcOnBalanceSystem").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateInventoryBySkuandWarehouseRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateInventoryBySkuandWarehouseRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateInventoryBySkuandWarehouseRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateInventoryBySkuandWarehouseRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateInventoryBySkuandWarehouseRequest>() {
           @Override
           public void write(JsonWriter out, UpdateInventoryBySkuandWarehouseRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateInventoryBySkuandWarehouseRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateInventoryBySkuandWarehouseRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateInventoryBySkuandWarehouseRequest
   * @throws IOException if the JSON string is invalid with respect to UpdateInventoryBySkuandWarehouseRequest
   */
  public static UpdateInventoryBySkuandWarehouseRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateInventoryBySkuandWarehouseRequest.class);
  }

  /**
   * Convert an instance of UpdateInventoryBySkuandWarehouseRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

