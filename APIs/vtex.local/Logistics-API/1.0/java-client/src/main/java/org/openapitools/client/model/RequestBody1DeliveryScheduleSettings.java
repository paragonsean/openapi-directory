/*
 * Logistics API
 *     >Check the [Fulfillment onboarding guide](https://developers.vtex.com/docs/guides/fulfillment). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about fulfillment and is organized by focusing on the developer's journey.    Logistics or fulfillment is the module responsible for shipping calculation and inventory management.     The variable `{{environment}}` can be filled with `vtexcommercestable` or `vtexcommercebeta`, depending on the environment you want to test.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DayOfWeekForDeliveryInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Settings for the Scheduled Delivery feature.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:56:20.128391-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class RequestBody1DeliveryScheduleSettings {
  public static final String SERIALIZED_NAME_DAY_OF_WEEK_FOR_DELIVERY = "dayOfWeekForDelivery";
  @SerializedName(SERIALIZED_NAME_DAY_OF_WEEK_FOR_DELIVERY)
  private List<DayOfWeekForDeliveryInner> dayOfWeekForDelivery = new ArrayList<>();

  public static final String SERIALIZED_NAME_MAX_RANGE_DELIVERY = "maxRangeDelivery";
  @SerializedName(SERIALIZED_NAME_MAX_RANGE_DELIVERY)
  private BigDecimal maxRangeDelivery;

  public static final String SERIALIZED_NAME_USE_DELIVERY_SCHEDULE = "useDeliverySchedule";
  @SerializedName(SERIALIZED_NAME_USE_DELIVERY_SCHEDULE)
  private Boolean useDeliverySchedule;

  public RequestBody1DeliveryScheduleSettings() {
  }

  public RequestBody1DeliveryScheduleSettings dayOfWeekForDelivery(List<DayOfWeekForDeliveryInner> dayOfWeekForDelivery) {
    this.dayOfWeekForDelivery = dayOfWeekForDelivery;
    return this;
  }

  public RequestBody1DeliveryScheduleSettings addDayOfWeekForDeliveryItem(DayOfWeekForDeliveryInner dayOfWeekForDeliveryItem) {
    if (this.dayOfWeekForDelivery == null) {
      this.dayOfWeekForDelivery = new ArrayList<>();
    }
    this.dayOfWeekForDelivery.add(dayOfWeekForDeliveryItem);
    return this;
  }

  /**
   * Select the chosen days for delivery. Values for each day of the week are: 0 &#x3D; sunday, 1 &#x3D; monday, 2 &#x3D; tuesday, 3 &#x3D; wednesday, 4 &#x3D; thursday, 5 &#x3D; friday, 6 &#x3D; saturday. Make sure to add the available hours for the chosen days, following the example.
   * @return dayOfWeekForDelivery
   */
  @javax.annotation.Nonnull
  public List<DayOfWeekForDeliveryInner> getDayOfWeekForDelivery() {
    return dayOfWeekForDelivery;
  }

  public void setDayOfWeekForDelivery(List<DayOfWeekForDeliveryInner> dayOfWeekForDelivery) {
    this.dayOfWeekForDelivery = dayOfWeekForDelivery;
  }


  public RequestBody1DeliveryScheduleSettings maxRangeDelivery(BigDecimal maxRangeDelivery) {
    this.maxRangeDelivery = maxRangeDelivery;
    return this;
  }

  /**
   * Range of days available within a delivery window, for the customer to choose the scheduled delivery. For example, if the configured maxRangeDelivery is equal 7, and the customer buys something on a Tuesday, the options for scheduled delivery will be shown until the following Tuesday (7 days from the purchase day). If no options are available within the maxRangeDelivery set, this shipping policy won&#39;t be shown on the checkout.
   * @return maxRangeDelivery
   */
  @javax.annotation.Nonnull
  public BigDecimal getMaxRangeDelivery() {
    return maxRangeDelivery;
  }

  public void setMaxRangeDelivery(BigDecimal maxRangeDelivery) {
    this.maxRangeDelivery = maxRangeDelivery;
  }


  public RequestBody1DeliveryScheduleSettings useDeliverySchedule(Boolean useDeliverySchedule) {
    this.useDeliverySchedule = useDeliverySchedule;
    return this;
  }

  /**
   * Select the Scheduled Delivery configuration.
   * @return useDeliverySchedule
   */
  @javax.annotation.Nonnull
  public Boolean getUseDeliverySchedule() {
    return useDeliverySchedule;
  }

  public void setUseDeliverySchedule(Boolean useDeliverySchedule) {
    this.useDeliverySchedule = useDeliverySchedule;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RequestBody1DeliveryScheduleSettings requestBody1DeliveryScheduleSettings = (RequestBody1DeliveryScheduleSettings) o;
    return Objects.equals(this.dayOfWeekForDelivery, requestBody1DeliveryScheduleSettings.dayOfWeekForDelivery) &&
        Objects.equals(this.maxRangeDelivery, requestBody1DeliveryScheduleSettings.maxRangeDelivery) &&
        Objects.equals(this.useDeliverySchedule, requestBody1DeliveryScheduleSettings.useDeliverySchedule);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dayOfWeekForDelivery, maxRangeDelivery, useDeliverySchedule);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RequestBody1DeliveryScheduleSettings {\n");
    sb.append("    dayOfWeekForDelivery: ").append(toIndentedString(dayOfWeekForDelivery)).append("\n");
    sb.append("    maxRangeDelivery: ").append(toIndentedString(maxRangeDelivery)).append("\n");
    sb.append("    useDeliverySchedule: ").append(toIndentedString(useDeliverySchedule)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dayOfWeekForDelivery");
    openapiFields.add("maxRangeDelivery");
    openapiFields.add("useDeliverySchedule");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("dayOfWeekForDelivery");
    openapiRequiredFields.add("maxRangeDelivery");
    openapiRequiredFields.add("useDeliverySchedule");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to RequestBody1DeliveryScheduleSettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RequestBody1DeliveryScheduleSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RequestBody1DeliveryScheduleSettings is not found in the empty JSON string", RequestBody1DeliveryScheduleSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RequestBody1DeliveryScheduleSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RequestBody1DeliveryScheduleSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : RequestBody1DeliveryScheduleSettings.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the json data is an array
      if (!jsonObj.get("dayOfWeekForDelivery").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `dayOfWeekForDelivery` to be an array in the JSON string but got `%s`", jsonObj.get("dayOfWeekForDelivery").toString()));
      }

      JsonArray jsonArraydayOfWeekForDelivery = jsonObj.getAsJsonArray("dayOfWeekForDelivery");
      // validate the required field `dayOfWeekForDelivery` (array)
      for (int i = 0; i < jsonArraydayOfWeekForDelivery.size(); i++) {
        DayOfWeekForDeliveryInner.validateJsonElement(jsonArraydayOfWeekForDelivery.get(i));
      };
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RequestBody1DeliveryScheduleSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RequestBody1DeliveryScheduleSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RequestBody1DeliveryScheduleSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RequestBody1DeliveryScheduleSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<RequestBody1DeliveryScheduleSettings>() {
           @Override
           public void write(JsonWriter out, RequestBody1DeliveryScheduleSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RequestBody1DeliveryScheduleSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of RequestBody1DeliveryScheduleSettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of RequestBody1DeliveryScheduleSettings
   * @throws IOException if the JSON string is invalid with respect to RequestBody1DeliveryScheduleSettings
   */
  public static RequestBody1DeliveryScheduleSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RequestBody1DeliveryScheduleSettings.class);
  }

  /**
   * Convert an instance of RequestBody1DeliveryScheduleSettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

