/*
 * Logistics API
 *     >Check the [Fulfillment onboarding guide](https://developers.vtex.com/docs/guides/fulfillment). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about fulfillment and is organized by focusing on the developer's journey.    Logistics or fulfillment is the module responsible for shipping calculation and inventory management.     The variable `{{environment}}` can be filled with `vtexcommercestable` or `vtexcommercebeta`, depending on the environment you want to test.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.client.model.Item11;
import org.openapitools.client.model.Location11;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ReservationById200ResponseSlaRequestInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:56:20.128391-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ReservationById200ResponseSlaRequestInner {
  public static final String SERIALIZED_NAME_DELIVERY_WINDOWS = "deliveryWindows";
  @SerializedName(SERIALIZED_NAME_DELIVERY_WINDOWS)
  private String deliveryWindows;

  public static final String SERIALIZED_NAME_DOCK_ID = "dockId";
  @SerializedName(SERIALIZED_NAME_DOCK_ID)
  private String dockId;

  public static final String SERIALIZED_NAME_DOCK_TIME = "dockTime";
  @SerializedName(SERIALIZED_NAME_DOCK_TIME)
  private String dockTime;

  public static final String SERIALIZED_NAME_FREIGHT_TABLE_ID = "freightTableId";
  @SerializedName(SERIALIZED_NAME_FREIGHT_TABLE_ID)
  private String freightTableId;

  public static final String SERIALIZED_NAME_FREIGHT_TABLE_NAME = "freightTableName";
  @SerializedName(SERIALIZED_NAME_FREIGHT_TABLE_NAME)
  private String freightTableName;

  public static final String SERIALIZED_NAME_ITEM = "item";
  @SerializedName(SERIALIZED_NAME_ITEM)
  private Item11 item;

  public static final String SERIALIZED_NAME_LIST_PRICE = "listPrice";
  @SerializedName(SERIALIZED_NAME_LIST_PRICE)
  private BigDecimal listPrice;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private Location11 location;

  public static final String SERIALIZED_NAME_PICKUP_STORE_INFO = "pickupStoreInfo";
  @SerializedName(SERIALIZED_NAME_PICKUP_STORE_INFO)
  private String pickupStoreInfo;

  public static final String SERIALIZED_NAME_PROMOTIONAL_PRICE = "promotionalPrice";
  @SerializedName(SERIALIZED_NAME_PROMOTIONAL_PRICE)
  private BigDecimal promotionalPrice;

  public static final String SERIALIZED_NAME_SLA_TYPE = "slaType";
  @SerializedName(SERIALIZED_NAME_SLA_TYPE)
  private String slaType;

  public static final String SERIALIZED_NAME_SLA_TYPE_NAME = "slaTypeName";
  @SerializedName(SERIALIZED_NAME_SLA_TYPE_NAME)
  private String slaTypeName;

  public static final String SERIALIZED_NAME_TIME_TO_DOCK_PLUS_DOCK_TIME = "timeToDockPlusDockTime";
  @SerializedName(SERIALIZED_NAME_TIME_TO_DOCK_PLUS_DOCK_TIME)
  private String timeToDockPlusDockTime;

  public static final String SERIALIZED_NAME_TOTAL_TIME = "totalTime";
  @SerializedName(SERIALIZED_NAME_TOTAL_TIME)
  private String totalTime;

  public static final String SERIALIZED_NAME_TRANSIT_TIME = "transitTime";
  @SerializedName(SERIALIZED_NAME_TRANSIT_TIME)
  private String transitTime;

  public static final String SERIALIZED_NAME_WARE_HOUSE_ID = "wareHouseId";
  @SerializedName(SERIALIZED_NAME_WARE_HOUSE_ID)
  private String wareHouseId;

  public static final String SERIALIZED_NAME_WMS_END_POINT = "wmsEndPoint";
  @SerializedName(SERIALIZED_NAME_WMS_END_POINT)
  private String wmsEndPoint;

  public ReservationById200ResponseSlaRequestInner() {
  }

  public ReservationById200ResponseSlaRequestInner deliveryWindows(String deliveryWindows) {
    this.deliveryWindows = deliveryWindows;
    return this;
  }

  /**
   * Get deliveryWindows
   * @return deliveryWindows
   */
  @javax.annotation.Nullable
  public String getDeliveryWindows() {
    return deliveryWindows;
  }

  public void setDeliveryWindows(String deliveryWindows) {
    this.deliveryWindows = deliveryWindows;
  }


  public ReservationById200ResponseSlaRequestInner dockId(String dockId) {
    this.dockId = dockId;
    return this;
  }

  /**
   * Get dockId
   * @return dockId
   */
  @javax.annotation.Nullable
  public String getDockId() {
    return dockId;
  }

  public void setDockId(String dockId) {
    this.dockId = dockId;
  }


  public ReservationById200ResponseSlaRequestInner dockTime(String dockTime) {
    this.dockTime = dockTime;
    return this;
  }

  /**
   * Get dockTime
   * @return dockTime
   */
  @javax.annotation.Nullable
  public String getDockTime() {
    return dockTime;
  }

  public void setDockTime(String dockTime) {
    this.dockTime = dockTime;
  }


  public ReservationById200ResponseSlaRequestInner freightTableId(String freightTableId) {
    this.freightTableId = freightTableId;
    return this;
  }

  /**
   * Get freightTableId
   * @return freightTableId
   */
  @javax.annotation.Nullable
  public String getFreightTableId() {
    return freightTableId;
  }

  public void setFreightTableId(String freightTableId) {
    this.freightTableId = freightTableId;
  }


  public ReservationById200ResponseSlaRequestInner freightTableName(String freightTableName) {
    this.freightTableName = freightTableName;
    return this;
  }

  /**
   * Get freightTableName
   * @return freightTableName
   */
  @javax.annotation.Nullable
  public String getFreightTableName() {
    return freightTableName;
  }

  public void setFreightTableName(String freightTableName) {
    this.freightTableName = freightTableName;
  }


  public ReservationById200ResponseSlaRequestInner item(Item11 item) {
    this.item = item;
    return this;
  }

  /**
   * Get item
   * @return item
   */
  @javax.annotation.Nullable
  public Item11 getItem() {
    return item;
  }

  public void setItem(Item11 item) {
    this.item = item;
  }


  public ReservationById200ResponseSlaRequestInner listPrice(BigDecimal listPrice) {
    this.listPrice = listPrice;
    return this;
  }

  /**
   * Get listPrice
   * @return listPrice
   */
  @javax.annotation.Nullable
  public BigDecimal getListPrice() {
    return listPrice;
  }

  public void setListPrice(BigDecimal listPrice) {
    this.listPrice = listPrice;
  }


  public ReservationById200ResponseSlaRequestInner location(Location11 location) {
    this.location = location;
    return this;
  }

  /**
   * Get location
   * @return location
   */
  @javax.annotation.Nullable
  public Location11 getLocation() {
    return location;
  }

  public void setLocation(Location11 location) {
    this.location = location;
  }


  public ReservationById200ResponseSlaRequestInner pickupStoreInfo(String pickupStoreInfo) {
    this.pickupStoreInfo = pickupStoreInfo;
    return this;
  }

  /**
   * Get pickupStoreInfo
   * @return pickupStoreInfo
   */
  @javax.annotation.Nullable
  public String getPickupStoreInfo() {
    return pickupStoreInfo;
  }

  public void setPickupStoreInfo(String pickupStoreInfo) {
    this.pickupStoreInfo = pickupStoreInfo;
  }


  public ReservationById200ResponseSlaRequestInner promotionalPrice(BigDecimal promotionalPrice) {
    this.promotionalPrice = promotionalPrice;
    return this;
  }

  /**
   * Get promotionalPrice
   * @return promotionalPrice
   */
  @javax.annotation.Nullable
  public BigDecimal getPromotionalPrice() {
    return promotionalPrice;
  }

  public void setPromotionalPrice(BigDecimal promotionalPrice) {
    this.promotionalPrice = promotionalPrice;
  }


  public ReservationById200ResponseSlaRequestInner slaType(String slaType) {
    this.slaType = slaType;
    return this;
  }

  /**
   * Get slaType
   * @return slaType
   */
  @javax.annotation.Nullable
  public String getSlaType() {
    return slaType;
  }

  public void setSlaType(String slaType) {
    this.slaType = slaType;
  }


  public ReservationById200ResponseSlaRequestInner slaTypeName(String slaTypeName) {
    this.slaTypeName = slaTypeName;
    return this;
  }

  /**
   * Get slaTypeName
   * @return slaTypeName
   */
  @javax.annotation.Nullable
  public String getSlaTypeName() {
    return slaTypeName;
  }

  public void setSlaTypeName(String slaTypeName) {
    this.slaTypeName = slaTypeName;
  }


  public ReservationById200ResponseSlaRequestInner timeToDockPlusDockTime(String timeToDockPlusDockTime) {
    this.timeToDockPlusDockTime = timeToDockPlusDockTime;
    return this;
  }

  /**
   * Get timeToDockPlusDockTime
   * @return timeToDockPlusDockTime
   */
  @javax.annotation.Nullable
  public String getTimeToDockPlusDockTime() {
    return timeToDockPlusDockTime;
  }

  public void setTimeToDockPlusDockTime(String timeToDockPlusDockTime) {
    this.timeToDockPlusDockTime = timeToDockPlusDockTime;
  }


  public ReservationById200ResponseSlaRequestInner totalTime(String totalTime) {
    this.totalTime = totalTime;
    return this;
  }

  /**
   * Get totalTime
   * @return totalTime
   */
  @javax.annotation.Nullable
  public String getTotalTime() {
    return totalTime;
  }

  public void setTotalTime(String totalTime) {
    this.totalTime = totalTime;
  }


  public ReservationById200ResponseSlaRequestInner transitTime(String transitTime) {
    this.transitTime = transitTime;
    return this;
  }

  /**
   * Get transitTime
   * @return transitTime
   */
  @javax.annotation.Nullable
  public String getTransitTime() {
    return transitTime;
  }

  public void setTransitTime(String transitTime) {
    this.transitTime = transitTime;
  }


  public ReservationById200ResponseSlaRequestInner wareHouseId(String wareHouseId) {
    this.wareHouseId = wareHouseId;
    return this;
  }

  /**
   * Get wareHouseId
   * @return wareHouseId
   */
  @javax.annotation.Nullable
  public String getWareHouseId() {
    return wareHouseId;
  }

  public void setWareHouseId(String wareHouseId) {
    this.wareHouseId = wareHouseId;
  }


  public ReservationById200ResponseSlaRequestInner wmsEndPoint(String wmsEndPoint) {
    this.wmsEndPoint = wmsEndPoint;
    return this;
  }

  /**
   * Get wmsEndPoint
   * @return wmsEndPoint
   */
  @javax.annotation.Nullable
  public String getWmsEndPoint() {
    return wmsEndPoint;
  }

  public void setWmsEndPoint(String wmsEndPoint) {
    this.wmsEndPoint = wmsEndPoint;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReservationById200ResponseSlaRequestInner reservationById200ResponseSlaRequestInner = (ReservationById200ResponseSlaRequestInner) o;
    return Objects.equals(this.deliveryWindows, reservationById200ResponseSlaRequestInner.deliveryWindows) &&
        Objects.equals(this.dockId, reservationById200ResponseSlaRequestInner.dockId) &&
        Objects.equals(this.dockTime, reservationById200ResponseSlaRequestInner.dockTime) &&
        Objects.equals(this.freightTableId, reservationById200ResponseSlaRequestInner.freightTableId) &&
        Objects.equals(this.freightTableName, reservationById200ResponseSlaRequestInner.freightTableName) &&
        Objects.equals(this.item, reservationById200ResponseSlaRequestInner.item) &&
        Objects.equals(this.listPrice, reservationById200ResponseSlaRequestInner.listPrice) &&
        Objects.equals(this.location, reservationById200ResponseSlaRequestInner.location) &&
        Objects.equals(this.pickupStoreInfo, reservationById200ResponseSlaRequestInner.pickupStoreInfo) &&
        Objects.equals(this.promotionalPrice, reservationById200ResponseSlaRequestInner.promotionalPrice) &&
        Objects.equals(this.slaType, reservationById200ResponseSlaRequestInner.slaType) &&
        Objects.equals(this.slaTypeName, reservationById200ResponseSlaRequestInner.slaTypeName) &&
        Objects.equals(this.timeToDockPlusDockTime, reservationById200ResponseSlaRequestInner.timeToDockPlusDockTime) &&
        Objects.equals(this.totalTime, reservationById200ResponseSlaRequestInner.totalTime) &&
        Objects.equals(this.transitTime, reservationById200ResponseSlaRequestInner.transitTime) &&
        Objects.equals(this.wareHouseId, reservationById200ResponseSlaRequestInner.wareHouseId) &&
        Objects.equals(this.wmsEndPoint, reservationById200ResponseSlaRequestInner.wmsEndPoint);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(deliveryWindows, dockId, dockTime, freightTableId, freightTableName, item, listPrice, location, pickupStoreInfo, promotionalPrice, slaType, slaTypeName, timeToDockPlusDockTime, totalTime, transitTime, wareHouseId, wmsEndPoint);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReservationById200ResponseSlaRequestInner {\n");
    sb.append("    deliveryWindows: ").append(toIndentedString(deliveryWindows)).append("\n");
    sb.append("    dockId: ").append(toIndentedString(dockId)).append("\n");
    sb.append("    dockTime: ").append(toIndentedString(dockTime)).append("\n");
    sb.append("    freightTableId: ").append(toIndentedString(freightTableId)).append("\n");
    sb.append("    freightTableName: ").append(toIndentedString(freightTableName)).append("\n");
    sb.append("    item: ").append(toIndentedString(item)).append("\n");
    sb.append("    listPrice: ").append(toIndentedString(listPrice)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    pickupStoreInfo: ").append(toIndentedString(pickupStoreInfo)).append("\n");
    sb.append("    promotionalPrice: ").append(toIndentedString(promotionalPrice)).append("\n");
    sb.append("    slaType: ").append(toIndentedString(slaType)).append("\n");
    sb.append("    slaTypeName: ").append(toIndentedString(slaTypeName)).append("\n");
    sb.append("    timeToDockPlusDockTime: ").append(toIndentedString(timeToDockPlusDockTime)).append("\n");
    sb.append("    totalTime: ").append(toIndentedString(totalTime)).append("\n");
    sb.append("    transitTime: ").append(toIndentedString(transitTime)).append("\n");
    sb.append("    wareHouseId: ").append(toIndentedString(wareHouseId)).append("\n");
    sb.append("    wmsEndPoint: ").append(toIndentedString(wmsEndPoint)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("deliveryWindows");
    openapiFields.add("dockId");
    openapiFields.add("dockTime");
    openapiFields.add("freightTableId");
    openapiFields.add("freightTableName");
    openapiFields.add("item");
    openapiFields.add("listPrice");
    openapiFields.add("location");
    openapiFields.add("pickupStoreInfo");
    openapiFields.add("promotionalPrice");
    openapiFields.add("slaType");
    openapiFields.add("slaTypeName");
    openapiFields.add("timeToDockPlusDockTime");
    openapiFields.add("totalTime");
    openapiFields.add("transitTime");
    openapiFields.add("wareHouseId");
    openapiFields.add("wmsEndPoint");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ReservationById200ResponseSlaRequestInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ReservationById200ResponseSlaRequestInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ReservationById200ResponseSlaRequestInner is not found in the empty JSON string", ReservationById200ResponseSlaRequestInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ReservationById200ResponseSlaRequestInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ReservationById200ResponseSlaRequestInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("deliveryWindows") != null && !jsonObj.get("deliveryWindows").isJsonNull()) && !jsonObj.get("deliveryWindows").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deliveryWindows` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deliveryWindows").toString()));
      }
      if ((jsonObj.get("dockId") != null && !jsonObj.get("dockId").isJsonNull()) && !jsonObj.get("dockId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dockId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dockId").toString()));
      }
      if ((jsonObj.get("dockTime") != null && !jsonObj.get("dockTime").isJsonNull()) && !jsonObj.get("dockTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dockTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dockTime").toString()));
      }
      if ((jsonObj.get("freightTableId") != null && !jsonObj.get("freightTableId").isJsonNull()) && !jsonObj.get("freightTableId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `freightTableId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("freightTableId").toString()));
      }
      if ((jsonObj.get("freightTableName") != null && !jsonObj.get("freightTableName").isJsonNull()) && !jsonObj.get("freightTableName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `freightTableName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("freightTableName").toString()));
      }
      // validate the optional field `item`
      if (jsonObj.get("item") != null && !jsonObj.get("item").isJsonNull()) {
        Item11.validateJsonElement(jsonObj.get("item"));
      }
      // validate the optional field `location`
      if (jsonObj.get("location") != null && !jsonObj.get("location").isJsonNull()) {
        Location11.validateJsonElement(jsonObj.get("location"));
      }
      if ((jsonObj.get("pickupStoreInfo") != null && !jsonObj.get("pickupStoreInfo").isJsonNull()) && !jsonObj.get("pickupStoreInfo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pickupStoreInfo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pickupStoreInfo").toString()));
      }
      if ((jsonObj.get("slaType") != null && !jsonObj.get("slaType").isJsonNull()) && !jsonObj.get("slaType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `slaType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("slaType").toString()));
      }
      if ((jsonObj.get("slaTypeName") != null && !jsonObj.get("slaTypeName").isJsonNull()) && !jsonObj.get("slaTypeName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `slaTypeName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("slaTypeName").toString()));
      }
      if ((jsonObj.get("timeToDockPlusDockTime") != null && !jsonObj.get("timeToDockPlusDockTime").isJsonNull()) && !jsonObj.get("timeToDockPlusDockTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timeToDockPlusDockTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timeToDockPlusDockTime").toString()));
      }
      if ((jsonObj.get("totalTime") != null && !jsonObj.get("totalTime").isJsonNull()) && !jsonObj.get("totalTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `totalTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("totalTime").toString()));
      }
      if ((jsonObj.get("transitTime") != null && !jsonObj.get("transitTime").isJsonNull()) && !jsonObj.get("transitTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transitTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transitTime").toString()));
      }
      if ((jsonObj.get("wareHouseId") != null && !jsonObj.get("wareHouseId").isJsonNull()) && !jsonObj.get("wareHouseId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `wareHouseId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wareHouseId").toString()));
      }
      if ((jsonObj.get("wmsEndPoint") != null && !jsonObj.get("wmsEndPoint").isJsonNull()) && !jsonObj.get("wmsEndPoint").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `wmsEndPoint` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wmsEndPoint").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ReservationById200ResponseSlaRequestInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ReservationById200ResponseSlaRequestInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ReservationById200ResponseSlaRequestInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ReservationById200ResponseSlaRequestInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ReservationById200ResponseSlaRequestInner>() {
           @Override
           public void write(JsonWriter out, ReservationById200ResponseSlaRequestInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ReservationById200ResponseSlaRequestInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ReservationById200ResponseSlaRequestInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ReservationById200ResponseSlaRequestInner
   * @throws IOException if the JSON string is invalid with respect to ReservationById200ResponseSlaRequestInner
   */
  public static ReservationById200ResponseSlaRequestInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ReservationById200ResponseSlaRequestInner.class);
  }

  /**
   * Convert an instance of ReservationById200ResponseSlaRequestInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

