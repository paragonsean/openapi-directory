# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeliveryRange11(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_time: str=None, list_price: float=None, start_time: str=None):
        """DeliveryRange11 - a model defined in OpenAPI

        :param end_time: The end_time of this DeliveryRange11.
        :param list_price: The list_price of this DeliveryRange11.
        :param start_time: The start_time of this DeliveryRange11.
        """
        self.openapi_types = {
            'end_time': str,
            'list_price': float,
            'start_time': str
        }

        self.attribute_map = {
            'end_time': 'endTime',
            'list_price': 'listPrice',
            'start_time': 'startTime'
        }

        self._end_time = end_time
        self._list_price = list_price
        self._start_time = start_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeliveryRange11':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeliveryRange1_1 of this DeliveryRange11.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_time(self):
        """Gets the end_time of this DeliveryRange11.


        :return: The end_time of this DeliveryRange11.
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this DeliveryRange11.


        :param end_time: The end_time of this DeliveryRange11.
        :type end_time: str
        """
        if end_time is None:
            raise ValueError("Invalid value for `end_time`, must not be `None`")

        self._end_time = end_time

    @property
    def list_price(self):
        """Gets the list_price of this DeliveryRange11.


        :return: The list_price of this DeliveryRange11.
        :rtype: float
        """
        return self._list_price

    @list_price.setter
    def list_price(self, list_price):
        """Sets the list_price of this DeliveryRange11.


        :param list_price: The list_price of this DeliveryRange11.
        :type list_price: float
        """
        if list_price is None:
            raise ValueError("Invalid value for `list_price`, must not be `None`")

        self._list_price = list_price

    @property
    def start_time(self):
        """Gets the start_time of this DeliveryRange11.


        :return: The start_time of this DeliveryRange11.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this DeliveryRange11.


        :param start_time: The start_time of this DeliveryRange11.
        :type start_time: str
        """
        if start_time is None:
            raise ValueError("Invalid value for `start_time`, must not be `None`")

        self._start_time = start_time
