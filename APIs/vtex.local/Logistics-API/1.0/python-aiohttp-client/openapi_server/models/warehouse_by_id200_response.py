# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.warehouse_dock12 import WarehouseDock12
from openapi_server import util


class WarehouseById200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, is_active: bool=None, name: str=None, pickup_point_ids: List[object]=None, priority: int=None, warehouse_docks: List[WarehouseDock12]=None):
        """WarehouseById200Response - a model defined in OpenAPI

        :param id: The id of this WarehouseById200Response.
        :param is_active: The is_active of this WarehouseById200Response.
        :param name: The name of this WarehouseById200Response.
        :param pickup_point_ids: The pickup_point_ids of this WarehouseById200Response.
        :param priority: The priority of this WarehouseById200Response.
        :param warehouse_docks: The warehouse_docks of this WarehouseById200Response.
        """
        self.openapi_types = {
            'id': str,
            'is_active': bool,
            'name': str,
            'pickup_point_ids': List[object],
            'priority': int,
            'warehouse_docks': List[WarehouseDock12]
        }

        self.attribute_map = {
            'id': 'id',
            'is_active': 'isActive',
            'name': 'name',
            'pickup_point_ids': 'pickupPointIds',
            'priority': 'priority',
            'warehouse_docks': 'warehouseDocks'
        }

        self._id = id
        self._is_active = is_active
        self._name = name
        self._pickup_point_ids = pickup_point_ids
        self._priority = priority
        self._warehouse_docks = warehouse_docks

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WarehouseById200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WarehouseById_200_response of this WarehouseById200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this WarehouseById200Response.


        :return: The id of this WarehouseById200Response.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this WarehouseById200Response.


        :param id: The id of this WarehouseById200Response.
        :type id: str
        """

        self._id = id

    @property
    def is_active(self):
        """Gets the is_active of this WarehouseById200Response.

        Shows if the warehouse is active (`true`) or inactive (`false`).

        :return: The is_active of this WarehouseById200Response.
        :rtype: bool
        """
        return self._is_active

    @is_active.setter
    def is_active(self, is_active):
        """Sets the is_active of this WarehouseById200Response.

        Shows if the warehouse is active (`true`) or inactive (`false`).

        :param is_active: The is_active of this WarehouseById200Response.
        :type is_active: bool
        """

        self._is_active = is_active

    @property
    def name(self):
        """Gets the name of this WarehouseById200Response.


        :return: The name of this WarehouseById200Response.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this WarehouseById200Response.


        :param name: The name of this WarehouseById200Response.
        :type name: str
        """

        self._name = name

    @property
    def pickup_point_ids(self):
        """Gets the pickup_point_ids of this WarehouseById200Response.

        This field returns a list of the [pickup points' IDs](https://help.vtex.com/en/tutorial/pickup-points--2fljn6wLjn8M4lJHA6HP3R) associated with the given warehouse.

        :return: The pickup_point_ids of this WarehouseById200Response.
        :rtype: List[object]
        """
        return self._pickup_point_ids

    @pickup_point_ids.setter
    def pickup_point_ids(self, pickup_point_ids):
        """Sets the pickup_point_ids of this WarehouseById200Response.

        This field returns a list of the [pickup points' IDs](https://help.vtex.com/en/tutorial/pickup-points--2fljn6wLjn8M4lJHA6HP3R) associated with the given warehouse.

        :param pickup_point_ids: The pickup_point_ids of this WarehouseById200Response.
        :type pickup_point_ids: List[object]
        """

        self._pickup_point_ids = pickup_point_ids

    @property
    def priority(self):
        """Gets the priority of this WarehouseById200Response.

        If the warehouse was configured as a priority. When no priority was set, the value returns`0`.

        :return: The priority of this WarehouseById200Response.
        :rtype: int
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this WarehouseById200Response.

        If the warehouse was configured as a priority. When no priority was set, the value returns`0`.

        :param priority: The priority of this WarehouseById200Response.
        :type priority: int
        """

        self._priority = priority

    @property
    def warehouse_docks(self):
        """Gets the warehouse_docks of this WarehouseById200Response.

        

        :return: The warehouse_docks of this WarehouseById200Response.
        :rtype: List[WarehouseDock12]
        """
        return self._warehouse_docks

    @warehouse_docks.setter
    def warehouse_docks(self, warehouse_docks):
        """Sets the warehouse_docks of this WarehouseById200Response.

        

        :param warehouse_docks: The warehouse_docks of this WarehouseById200Response.
        :type warehouse_docks: List[WarehouseDock12]
        """

        self._warehouse_docks = warehouse_docks
