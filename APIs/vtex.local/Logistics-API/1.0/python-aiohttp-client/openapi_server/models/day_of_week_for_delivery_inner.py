# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.day_of_week_for_delivery_inner_delivery_ranges_inner import DayOfWeekForDeliveryInnerDeliveryRangesInner
from openapi_server import util


class DayOfWeekForDeliveryInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, day_of_week: int=None, delivery_ranges: List[DayOfWeekForDeliveryInnerDeliveryRangesInner]=None):
        """DayOfWeekForDeliveryInner - a model defined in OpenAPI

        :param day_of_week: The day_of_week of this DayOfWeekForDeliveryInner.
        :param delivery_ranges: The delivery_ranges of this DayOfWeekForDeliveryInner.
        """
        self.openapi_types = {
            'day_of_week': int,
            'delivery_ranges': List[DayOfWeekForDeliveryInnerDeliveryRangesInner]
        }

        self.attribute_map = {
            'day_of_week': 'dayOfWeek',
            'delivery_ranges': 'deliveryRanges'
        }

        self._day_of_week = day_of_week
        self._delivery_ranges = delivery_ranges

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DayOfWeekForDeliveryInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The dayOfWeekForDelivery_inner of this DayOfWeekForDeliveryInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def day_of_week(self):
        """Gets the day_of_week of this DayOfWeekForDeliveryInner.

        Day of the week, from `0` (sunday) to `6` (saturday).

        :return: The day_of_week of this DayOfWeekForDeliveryInner.
        :rtype: int
        """
        return self._day_of_week

    @day_of_week.setter
    def day_of_week(self, day_of_week):
        """Sets the day_of_week of this DayOfWeekForDeliveryInner.

        Day of the week, from `0` (sunday) to `6` (saturday).

        :param day_of_week: The day_of_week of this DayOfWeekForDeliveryInner.
        :type day_of_week: int
        """
        if day_of_week is None:
            raise ValueError("Invalid value for `day_of_week`, must not be `None`")

        self._day_of_week = day_of_week

    @property
    def delivery_ranges(self):
        """Gets the delivery_ranges of this DayOfWeekForDeliveryInner.

        Reservation windows for scheduled delivery.

        :return: The delivery_ranges of this DayOfWeekForDeliveryInner.
        :rtype: List[DayOfWeekForDeliveryInnerDeliveryRangesInner]
        """
        return self._delivery_ranges

    @delivery_ranges.setter
    def delivery_ranges(self, delivery_ranges):
        """Sets the delivery_ranges of this DayOfWeekForDeliveryInner.

        Reservation windows for scheduled delivery.

        :param delivery_ranges: The delivery_ranges of this DayOfWeekForDeliveryInner.
        :type delivery_ranges: List[DayOfWeekForDeliveryInnerDeliveryRangesInner]
        """
        if delivery_ranges is None:
            raise ValueError("Invalid value for `delivery_ranges`, must not be `None`")

        self._delivery_ranges = delivery_ranges
