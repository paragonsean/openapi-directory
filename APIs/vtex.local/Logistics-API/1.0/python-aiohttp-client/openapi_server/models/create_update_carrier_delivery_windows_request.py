# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.day_of_week_for_delivery_inner import DayOfWeekForDeliveryInner
from openapi_server.models.max_dimension11 import MaxDimension11
from openapi_server import util


class CreateUpdateCarrierDeliveryWindowsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, carrier_schedule: List[str]=None, day_of_week_for_delivery: List[DayOfWeekForDeliveryInner]=None, delivery_on_weekends: bool=None, factor_cubic_weight: str=None, id: str=None, max_dimension: MaxDimension11=None, max_range_delivery: int=None, minimun_cubic_weight: str=None, modals: List[str]=None, name: str=None, number_of_items_per_shipment: str=None, only_items_with_defined_modal: bool=None, scheduled_delivery: bool=None, sla_type: str=None):
        """CreateUpdateCarrierDeliveryWindowsRequest - a model defined in OpenAPI

        :param carrier_schedule: The carrier_schedule of this CreateUpdateCarrierDeliveryWindowsRequest.
        :param day_of_week_for_delivery: The day_of_week_for_delivery of this CreateUpdateCarrierDeliveryWindowsRequest.
        :param delivery_on_weekends: The delivery_on_weekends of this CreateUpdateCarrierDeliveryWindowsRequest.
        :param factor_cubic_weight: The factor_cubic_weight of this CreateUpdateCarrierDeliveryWindowsRequest.
        :param id: The id of this CreateUpdateCarrierDeliveryWindowsRequest.
        :param max_dimension: The max_dimension of this CreateUpdateCarrierDeliveryWindowsRequest.
        :param max_range_delivery: The max_range_delivery of this CreateUpdateCarrierDeliveryWindowsRequest.
        :param minimun_cubic_weight: The minimun_cubic_weight of this CreateUpdateCarrierDeliveryWindowsRequest.
        :param modals: The modals of this CreateUpdateCarrierDeliveryWindowsRequest.
        :param name: The name of this CreateUpdateCarrierDeliveryWindowsRequest.
        :param number_of_items_per_shipment: The number_of_items_per_shipment of this CreateUpdateCarrierDeliveryWindowsRequest.
        :param only_items_with_defined_modal: The only_items_with_defined_modal of this CreateUpdateCarrierDeliveryWindowsRequest.
        :param scheduled_delivery: The scheduled_delivery of this CreateUpdateCarrierDeliveryWindowsRequest.
        :param sla_type: The sla_type of this CreateUpdateCarrierDeliveryWindowsRequest.
        """
        self.openapi_types = {
            'carrier_schedule': List[str],
            'day_of_week_for_delivery': List[DayOfWeekForDeliveryInner],
            'delivery_on_weekends': bool,
            'factor_cubic_weight': str,
            'id': str,
            'max_dimension': MaxDimension11,
            'max_range_delivery': int,
            'minimun_cubic_weight': str,
            'modals': List[str],
            'name': str,
            'number_of_items_per_shipment': str,
            'only_items_with_defined_modal': bool,
            'scheduled_delivery': bool,
            'sla_type': str
        }

        self.attribute_map = {
            'carrier_schedule': 'carrierSchedule',
            'day_of_week_for_delivery': 'dayOfWeekForDelivery',
            'delivery_on_weekends': 'deliveryOnWeekends',
            'factor_cubic_weight': 'factorCubicWeight',
            'id': 'id',
            'max_dimension': 'maxDimension',
            'max_range_delivery': 'maxRangeDelivery',
            'minimun_cubic_weight': 'minimunCubicWeight',
            'modals': 'modals',
            'name': 'name',
            'number_of_items_per_shipment': 'numberOfItemsPerShipment',
            'only_items_with_defined_modal': 'onlyItemsWithDefinedModal',
            'scheduled_delivery': 'scheduledDelivery',
            'sla_type': 'slaType'
        }

        self._carrier_schedule = carrier_schedule
        self._day_of_week_for_delivery = day_of_week_for_delivery
        self._delivery_on_weekends = delivery_on_weekends
        self._factor_cubic_weight = factor_cubic_weight
        self._id = id
        self._max_dimension = max_dimension
        self._max_range_delivery = max_range_delivery
        self._minimun_cubic_weight = minimun_cubic_weight
        self._modals = modals
        self._name = name
        self._number_of_items_per_shipment = number_of_items_per_shipment
        self._only_items_with_defined_modal = only_items_with_defined_modal
        self._scheduled_delivery = scheduled_delivery
        self._sla_type = sla_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateUpdateCarrierDeliveryWindowsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateUpdateCarrierDeliveryWindowsRequest of this CreateUpdateCarrierDeliveryWindowsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def carrier_schedule(self):
        """Gets the carrier_schedule of this CreateUpdateCarrierDeliveryWindowsRequest.

        

        :return: The carrier_schedule of this CreateUpdateCarrierDeliveryWindowsRequest.
        :rtype: List[str]
        """
        return self._carrier_schedule

    @carrier_schedule.setter
    def carrier_schedule(self, carrier_schedule):
        """Sets the carrier_schedule of this CreateUpdateCarrierDeliveryWindowsRequest.

        

        :param carrier_schedule: The carrier_schedule of this CreateUpdateCarrierDeliveryWindowsRequest.
        :type carrier_schedule: List[str]
        """
        if carrier_schedule is None:
            raise ValueError("Invalid value for `carrier_schedule`, must not be `None`")

        self._carrier_schedule = carrier_schedule

    @property
    def day_of_week_for_delivery(self):
        """Gets the day_of_week_for_delivery of this CreateUpdateCarrierDeliveryWindowsRequest.

        Select the chosen days for delivery. Values for each day of the week are: 0 = sunday, 1 = monday, 2 = tuesday, 3 = wednesday, 4 = thursday, 5 = friday, 6 = saturday. Make sure to add the available hours for the chosen days, following the example.

        :return: The day_of_week_for_delivery of this CreateUpdateCarrierDeliveryWindowsRequest.
        :rtype: List[DayOfWeekForDeliveryInner]
        """
        return self._day_of_week_for_delivery

    @day_of_week_for_delivery.setter
    def day_of_week_for_delivery(self, day_of_week_for_delivery):
        """Sets the day_of_week_for_delivery of this CreateUpdateCarrierDeliveryWindowsRequest.

        Select the chosen days for delivery. Values for each day of the week are: 0 = sunday, 1 = monday, 2 = tuesday, 3 = wednesday, 4 = thursday, 5 = friday, 6 = saturday. Make sure to add the available hours for the chosen days, following the example.

        :param day_of_week_for_delivery: The day_of_week_for_delivery of this CreateUpdateCarrierDeliveryWindowsRequest.
        :type day_of_week_for_delivery: List[DayOfWeekForDeliveryInner]
        """
        if day_of_week_for_delivery is None:
            raise ValueError("Invalid value for `day_of_week_for_delivery`, must not be `None`")

        self._day_of_week_for_delivery = day_of_week_for_delivery

    @property
    def delivery_on_weekends(self):
        """Gets the delivery_on_weekends of this CreateUpdateCarrierDeliveryWindowsRequest.


        :return: The delivery_on_weekends of this CreateUpdateCarrierDeliveryWindowsRequest.
        :rtype: bool
        """
        return self._delivery_on_weekends

    @delivery_on_weekends.setter
    def delivery_on_weekends(self, delivery_on_weekends):
        """Sets the delivery_on_weekends of this CreateUpdateCarrierDeliveryWindowsRequest.


        :param delivery_on_weekends: The delivery_on_weekends of this CreateUpdateCarrierDeliveryWindowsRequest.
        :type delivery_on_weekends: bool
        """
        if delivery_on_weekends is None:
            raise ValueError("Invalid value for `delivery_on_weekends`, must not be `None`")

        self._delivery_on_weekends = delivery_on_weekends

    @property
    def factor_cubic_weight(self):
        """Gets the factor_cubic_weight of this CreateUpdateCarrierDeliveryWindowsRequest.


        :return: The factor_cubic_weight of this CreateUpdateCarrierDeliveryWindowsRequest.
        :rtype: str
        """
        return self._factor_cubic_weight

    @factor_cubic_weight.setter
    def factor_cubic_weight(self, factor_cubic_weight):
        """Sets the factor_cubic_weight of this CreateUpdateCarrierDeliveryWindowsRequest.


        :param factor_cubic_weight: The factor_cubic_weight of this CreateUpdateCarrierDeliveryWindowsRequest.
        :type factor_cubic_weight: str
        """
        if factor_cubic_weight is None:
            raise ValueError("Invalid value for `factor_cubic_weight`, must not be `None`")

        self._factor_cubic_weight = factor_cubic_weight

    @property
    def id(self):
        """Gets the id of this CreateUpdateCarrierDeliveryWindowsRequest.


        :return: The id of this CreateUpdateCarrierDeliveryWindowsRequest.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CreateUpdateCarrierDeliveryWindowsRequest.


        :param id: The id of this CreateUpdateCarrierDeliveryWindowsRequest.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def max_dimension(self):
        """Gets the max_dimension of this CreateUpdateCarrierDeliveryWindowsRequest.


        :return: The max_dimension of this CreateUpdateCarrierDeliveryWindowsRequest.
        :rtype: MaxDimension11
        """
        return self._max_dimension

    @max_dimension.setter
    def max_dimension(self, max_dimension):
        """Sets the max_dimension of this CreateUpdateCarrierDeliveryWindowsRequest.


        :param max_dimension: The max_dimension of this CreateUpdateCarrierDeliveryWindowsRequest.
        :type max_dimension: MaxDimension11
        """
        if max_dimension is None:
            raise ValueError("Invalid value for `max_dimension`, must not be `None`")

        self._max_dimension = max_dimension

    @property
    def max_range_delivery(self):
        """Gets the max_range_delivery of this CreateUpdateCarrierDeliveryWindowsRequest.


        :return: The max_range_delivery of this CreateUpdateCarrierDeliveryWindowsRequest.
        :rtype: int
        """
        return self._max_range_delivery

    @max_range_delivery.setter
    def max_range_delivery(self, max_range_delivery):
        """Sets the max_range_delivery of this CreateUpdateCarrierDeliveryWindowsRequest.


        :param max_range_delivery: The max_range_delivery of this CreateUpdateCarrierDeliveryWindowsRequest.
        :type max_range_delivery: int
        """
        if max_range_delivery is None:
            raise ValueError("Invalid value for `max_range_delivery`, must not be `None`")

        self._max_range_delivery = max_range_delivery

    @property
    def minimun_cubic_weight(self):
        """Gets the minimun_cubic_weight of this CreateUpdateCarrierDeliveryWindowsRequest.


        :return: The minimun_cubic_weight of this CreateUpdateCarrierDeliveryWindowsRequest.
        :rtype: str
        """
        return self._minimun_cubic_weight

    @minimun_cubic_weight.setter
    def minimun_cubic_weight(self, minimun_cubic_weight):
        """Sets the minimun_cubic_weight of this CreateUpdateCarrierDeliveryWindowsRequest.


        :param minimun_cubic_weight: The minimun_cubic_weight of this CreateUpdateCarrierDeliveryWindowsRequest.
        :type minimun_cubic_weight: str
        """
        if minimun_cubic_weight is None:
            raise ValueError("Invalid value for `minimun_cubic_weight`, must not be `None`")

        self._minimun_cubic_weight = minimun_cubic_weight

    @property
    def modals(self):
        """Gets the modals of this CreateUpdateCarrierDeliveryWindowsRequest.

        

        :return: The modals of this CreateUpdateCarrierDeliveryWindowsRequest.
        :rtype: List[str]
        """
        return self._modals

    @modals.setter
    def modals(self, modals):
        """Sets the modals of this CreateUpdateCarrierDeliveryWindowsRequest.

        

        :param modals: The modals of this CreateUpdateCarrierDeliveryWindowsRequest.
        :type modals: List[str]
        """
        if modals is None:
            raise ValueError("Invalid value for `modals`, must not be `None`")

        self._modals = modals

    @property
    def name(self):
        """Gets the name of this CreateUpdateCarrierDeliveryWindowsRequest.


        :return: The name of this CreateUpdateCarrierDeliveryWindowsRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateUpdateCarrierDeliveryWindowsRequest.


        :param name: The name of this CreateUpdateCarrierDeliveryWindowsRequest.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def number_of_items_per_shipment(self):
        """Gets the number_of_items_per_shipment of this CreateUpdateCarrierDeliveryWindowsRequest.


        :return: The number_of_items_per_shipment of this CreateUpdateCarrierDeliveryWindowsRequest.
        :rtype: str
        """
        return self._number_of_items_per_shipment

    @number_of_items_per_shipment.setter
    def number_of_items_per_shipment(self, number_of_items_per_shipment):
        """Sets the number_of_items_per_shipment of this CreateUpdateCarrierDeliveryWindowsRequest.


        :param number_of_items_per_shipment: The number_of_items_per_shipment of this CreateUpdateCarrierDeliveryWindowsRequest.
        :type number_of_items_per_shipment: str
        """
        if number_of_items_per_shipment is None:
            raise ValueError("Invalid value for `number_of_items_per_shipment`, must not be `None`")

        self._number_of_items_per_shipment = number_of_items_per_shipment

    @property
    def only_items_with_defined_modal(self):
        """Gets the only_items_with_defined_modal of this CreateUpdateCarrierDeliveryWindowsRequest.


        :return: The only_items_with_defined_modal of this CreateUpdateCarrierDeliveryWindowsRequest.
        :rtype: bool
        """
        return self._only_items_with_defined_modal

    @only_items_with_defined_modal.setter
    def only_items_with_defined_modal(self, only_items_with_defined_modal):
        """Sets the only_items_with_defined_modal of this CreateUpdateCarrierDeliveryWindowsRequest.


        :param only_items_with_defined_modal: The only_items_with_defined_modal of this CreateUpdateCarrierDeliveryWindowsRequest.
        :type only_items_with_defined_modal: bool
        """
        if only_items_with_defined_modal is None:
            raise ValueError("Invalid value for `only_items_with_defined_modal`, must not be `None`")

        self._only_items_with_defined_modal = only_items_with_defined_modal

    @property
    def scheduled_delivery(self):
        """Gets the scheduled_delivery of this CreateUpdateCarrierDeliveryWindowsRequest.


        :return: The scheduled_delivery of this CreateUpdateCarrierDeliveryWindowsRequest.
        :rtype: bool
        """
        return self._scheduled_delivery

    @scheduled_delivery.setter
    def scheduled_delivery(self, scheduled_delivery):
        """Sets the scheduled_delivery of this CreateUpdateCarrierDeliveryWindowsRequest.


        :param scheduled_delivery: The scheduled_delivery of this CreateUpdateCarrierDeliveryWindowsRequest.
        :type scheduled_delivery: bool
        """
        if scheduled_delivery is None:
            raise ValueError("Invalid value for `scheduled_delivery`, must not be `None`")

        self._scheduled_delivery = scheduled_delivery

    @property
    def sla_type(self):
        """Gets the sla_type of this CreateUpdateCarrierDeliveryWindowsRequest.


        :return: The sla_type of this CreateUpdateCarrierDeliveryWindowsRequest.
        :rtype: str
        """
        return self._sla_type

    @sla_type.setter
    def sla_type(self, sla_type):
        """Sets the sla_type of this CreateUpdateCarrierDeliveryWindowsRequest.


        :param sla_type: The sla_type of this CreateUpdateCarrierDeliveryWindowsRequest.
        :type sla_type: str
        """
        if sla_type is None:
            raise ValueError("Invalid value for `sla_type`, must not be `None`")

        self._sla_type = sla_type
