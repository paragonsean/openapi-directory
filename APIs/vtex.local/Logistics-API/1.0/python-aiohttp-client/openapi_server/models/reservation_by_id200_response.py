# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.reservation_by_id200_response_sla_request_inner import ReservationById200ResponseSlaRequestInner
from openapi_server import util


class ReservationById200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, authorized_date_utc: str=None, canceled_date_utc: str=None, confirmed_date_utc: str=None, errors: List[str]=None, is_sucess: bool=None, last_update_date_utc: str=None, lock_id: str=None, maximum_confirmation_date_utc: str=None, pickup_point_item_options: str=None, reservation_date_utc: str=None, sales_channel: str=None, sla_request: List[ReservationById200ResponseSlaRequestInner]=None, status: int=None):
        """ReservationById200Response - a model defined in OpenAPI

        :param authorized_date_utc: The authorized_date_utc of this ReservationById200Response.
        :param canceled_date_utc: The canceled_date_utc of this ReservationById200Response.
        :param confirmed_date_utc: The confirmed_date_utc of this ReservationById200Response.
        :param errors: The errors of this ReservationById200Response.
        :param is_sucess: The is_sucess of this ReservationById200Response.
        :param last_update_date_utc: The last_update_date_utc of this ReservationById200Response.
        :param lock_id: The lock_id of this ReservationById200Response.
        :param maximum_confirmation_date_utc: The maximum_confirmation_date_utc of this ReservationById200Response.
        :param pickup_point_item_options: The pickup_point_item_options of this ReservationById200Response.
        :param reservation_date_utc: The reservation_date_utc of this ReservationById200Response.
        :param sales_channel: The sales_channel of this ReservationById200Response.
        :param sla_request: The sla_request of this ReservationById200Response.
        :param status: The status of this ReservationById200Response.
        """
        self.openapi_types = {
            'authorized_date_utc': str,
            'canceled_date_utc': str,
            'confirmed_date_utc': str,
            'errors': List[str],
            'is_sucess': bool,
            'last_update_date_utc': str,
            'lock_id': str,
            'maximum_confirmation_date_utc': str,
            'pickup_point_item_options': str,
            'reservation_date_utc': str,
            'sales_channel': str,
            'sla_request': List[ReservationById200ResponseSlaRequestInner],
            'status': int
        }

        self.attribute_map = {
            'authorized_date_utc': 'AuthorizedDateUtc',
            'canceled_date_utc': 'CanceledDateUtc',
            'confirmed_date_utc': 'ConfirmedDateUtc',
            'errors': 'Errors',
            'is_sucess': 'IsSucess',
            'last_update_date_utc': 'LastUpdateDateUtc',
            'lock_id': 'LockId',
            'maximum_confirmation_date_utc': 'MaximumConfirmationDateUtc',
            'pickup_point_item_options': 'PickupPointItemOptions',
            'reservation_date_utc': 'ReservationDateUtc',
            'sales_channel': 'SalesChannel',
            'sla_request': 'SlaRequest',
            'status': 'Status'
        }

        self._authorized_date_utc = authorized_date_utc
        self._canceled_date_utc = canceled_date_utc
        self._confirmed_date_utc = confirmed_date_utc
        self._errors = errors
        self._is_sucess = is_sucess
        self._last_update_date_utc = last_update_date_utc
        self._lock_id = lock_id
        self._maximum_confirmation_date_utc = maximum_confirmation_date_utc
        self._pickup_point_item_options = pickup_point_item_options
        self._reservation_date_utc = reservation_date_utc
        self._sales_channel = sales_channel
        self._sla_request = sla_request
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReservationById200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReservationById_200_response of this ReservationById200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def authorized_date_utc(self):
        """Gets the authorized_date_utc of this ReservationById200Response.

        Authorized date in UTC.

        :return: The authorized_date_utc of this ReservationById200Response.
        :rtype: str
        """
        return self._authorized_date_utc

    @authorized_date_utc.setter
    def authorized_date_utc(self, authorized_date_utc):
        """Sets the authorized_date_utc of this ReservationById200Response.

        Authorized date in UTC.

        :param authorized_date_utc: The authorized_date_utc of this ReservationById200Response.
        :type authorized_date_utc: str
        """

        self._authorized_date_utc = authorized_date_utc

    @property
    def canceled_date_utc(self):
        """Gets the canceled_date_utc of this ReservationById200Response.

        Canceled date in UTC.

        :return: The canceled_date_utc of this ReservationById200Response.
        :rtype: str
        """
        return self._canceled_date_utc

    @canceled_date_utc.setter
    def canceled_date_utc(self, canceled_date_utc):
        """Sets the canceled_date_utc of this ReservationById200Response.

        Canceled date in UTC.

        :param canceled_date_utc: The canceled_date_utc of this ReservationById200Response.
        :type canceled_date_utc: str
        """

        self._canceled_date_utc = canceled_date_utc

    @property
    def confirmed_date_utc(self):
        """Gets the confirmed_date_utc of this ReservationById200Response.

        Confirmed date in UTC.

        :return: The confirmed_date_utc of this ReservationById200Response.
        :rtype: str
        """
        return self._confirmed_date_utc

    @confirmed_date_utc.setter
    def confirmed_date_utc(self, confirmed_date_utc):
        """Sets the confirmed_date_utc of this ReservationById200Response.

        Confirmed date in UTC.

        :param confirmed_date_utc: The confirmed_date_utc of this ReservationById200Response.
        :type confirmed_date_utc: str
        """

        self._confirmed_date_utc = confirmed_date_utc

    @property
    def errors(self):
        """Gets the errors of this ReservationById200Response.

        Information on errors, if there are any.

        :return: The errors of this ReservationById200Response.
        :rtype: List[str]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this ReservationById200Response.

        Information on errors, if there are any.

        :param errors: The errors of this ReservationById200Response.
        :type errors: List[str]
        """

        self._errors = errors

    @property
    def is_sucess(self):
        """Gets the is_sucess of this ReservationById200Response.


        :return: The is_sucess of this ReservationById200Response.
        :rtype: bool
        """
        return self._is_sucess

    @is_sucess.setter
    def is_sucess(self, is_sucess):
        """Sets the is_sucess of this ReservationById200Response.


        :param is_sucess: The is_sucess of this ReservationById200Response.
        :type is_sucess: bool
        """

        self._is_sucess = is_sucess

    @property
    def last_update_date_utc(self):
        """Gets the last_update_date_utc of this ReservationById200Response.

        Date of the last update in UTC.

        :return: The last_update_date_utc of this ReservationById200Response.
        :rtype: str
        """
        return self._last_update_date_utc

    @last_update_date_utc.setter
    def last_update_date_utc(self, last_update_date_utc):
        """Sets the last_update_date_utc of this ReservationById200Response.

        Date of the last update in UTC.

        :param last_update_date_utc: The last_update_date_utc of this ReservationById200Response.
        :type last_update_date_utc: str
        """

        self._last_update_date_utc = last_update_date_utc

    @property
    def lock_id(self):
        """Gets the lock_id of this ReservationById200Response.

        Lock ID.

        :return: The lock_id of this ReservationById200Response.
        :rtype: str
        """
        return self._lock_id

    @lock_id.setter
    def lock_id(self, lock_id):
        """Sets the lock_id of this ReservationById200Response.

        Lock ID.

        :param lock_id: The lock_id of this ReservationById200Response.
        :type lock_id: str
        """

        self._lock_id = lock_id

    @property
    def maximum_confirmation_date_utc(self):
        """Gets the maximum_confirmation_date_utc of this ReservationById200Response.

        Maximum confirmation date in UTC.

        :return: The maximum_confirmation_date_utc of this ReservationById200Response.
        :rtype: str
        """
        return self._maximum_confirmation_date_utc

    @maximum_confirmation_date_utc.setter
    def maximum_confirmation_date_utc(self, maximum_confirmation_date_utc):
        """Sets the maximum_confirmation_date_utc of this ReservationById200Response.

        Maximum confirmation date in UTC.

        :param maximum_confirmation_date_utc: The maximum_confirmation_date_utc of this ReservationById200Response.
        :type maximum_confirmation_date_utc: str
        """

        self._maximum_confirmation_date_utc = maximum_confirmation_date_utc

    @property
    def pickup_point_item_options(self):
        """Gets the pickup_point_item_options of this ReservationById200Response.

        Pickup point item options.

        :return: The pickup_point_item_options of this ReservationById200Response.
        :rtype: str
        """
        return self._pickup_point_item_options

    @pickup_point_item_options.setter
    def pickup_point_item_options(self, pickup_point_item_options):
        """Sets the pickup_point_item_options of this ReservationById200Response.

        Pickup point item options.

        :param pickup_point_item_options: The pickup_point_item_options of this ReservationById200Response.
        :type pickup_point_item_options: str
        """

        self._pickup_point_item_options = pickup_point_item_options

    @property
    def reservation_date_utc(self):
        """Gets the reservation_date_utc of this ReservationById200Response.

        Reservation date in UTC.

        :return: The reservation_date_utc of this ReservationById200Response.
        :rtype: str
        """
        return self._reservation_date_utc

    @reservation_date_utc.setter
    def reservation_date_utc(self, reservation_date_utc):
        """Sets the reservation_date_utc of this ReservationById200Response.

        Reservation date in UTC.

        :param reservation_date_utc: The reservation_date_utc of this ReservationById200Response.
        :type reservation_date_utc: str
        """

        self._reservation_date_utc = reservation_date_utc

    @property
    def sales_channel(self):
        """Gets the sales_channel of this ReservationById200Response.

        Sales channel.

        :return: The sales_channel of this ReservationById200Response.
        :rtype: str
        """
        return self._sales_channel

    @sales_channel.setter
    def sales_channel(self, sales_channel):
        """Sets the sales_channel of this ReservationById200Response.

        Sales channel.

        :param sales_channel: The sales_channel of this ReservationById200Response.
        :type sales_channel: str
        """

        self._sales_channel = sales_channel

    @property
    def sla_request(self):
        """Gets the sla_request of this ReservationById200Response.

        Information on SLA request.

        :return: The sla_request of this ReservationById200Response.
        :rtype: List[ReservationById200ResponseSlaRequestInner]
        """
        return self._sla_request

    @sla_request.setter
    def sla_request(self, sla_request):
        """Sets the sla_request of this ReservationById200Response.

        Information on SLA request.

        :param sla_request: The sla_request of this ReservationById200Response.
        :type sla_request: List[ReservationById200ResponseSlaRequestInner]
        """

        self._sla_request = sla_request

    @property
    def status(self):
        """Gets the status of this ReservationById200Response.

        Reservation status, being:  `0`: `NotCommitted`  `1`: `Authorized`  `2`: `Confirmed`  `3`: `Canceled_AbortedCommitted`  `4`: `Canceled_AuthorizationExpired`  `5`: `Canceled_Manually`

        :return: The status of this ReservationById200Response.
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ReservationById200Response.

        Reservation status, being:  `0`: `NotCommitted`  `1`: `Authorized`  `2`: `Confirmed`  `3`: `Canceled_AbortedCommitted`  `4`: `Canceled_AuthorizationExpired`  `5`: `Canceled_Manually`

        :param status: The status of this ReservationById200Response.
        :type status: int
        """

        self._status = status
