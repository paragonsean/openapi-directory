# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.delivery_range1 import DeliveryRange1
from openapi_server import util


class DayOfWeekForDelivery(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, day_of_week: int=None, delivery_ranges: List[DeliveryRange1]=None):
        """DayOfWeekForDelivery - a model defined in OpenAPI

        :param day_of_week: The day_of_week of this DayOfWeekForDelivery.
        :param delivery_ranges: The delivery_ranges of this DayOfWeekForDelivery.
        """
        self.openapi_types = {
            'day_of_week': int,
            'delivery_ranges': List[DeliveryRange1]
        }

        self.attribute_map = {
            'day_of_week': 'dayOfWeek',
            'delivery_ranges': 'deliveryRanges'
        }

        self._day_of_week = day_of_week
        self._delivery_ranges = delivery_ranges

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DayOfWeekForDelivery':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DayOfWeekForDelivery of this DayOfWeekForDelivery.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def day_of_week(self):
        """Gets the day_of_week of this DayOfWeekForDelivery.


        :return: The day_of_week of this DayOfWeekForDelivery.
        :rtype: int
        """
        return self._day_of_week

    @day_of_week.setter
    def day_of_week(self, day_of_week):
        """Sets the day_of_week of this DayOfWeekForDelivery.


        :param day_of_week: The day_of_week of this DayOfWeekForDelivery.
        :type day_of_week: int
        """
        if day_of_week is None:
            raise ValueError("Invalid value for `day_of_week`, must not be `None`")

        self._day_of_week = day_of_week

    @property
    def delivery_ranges(self):
        """Gets the delivery_ranges of this DayOfWeekForDelivery.

        

        :return: The delivery_ranges of this DayOfWeekForDelivery.
        :rtype: List[DeliveryRange1]
        """
        return self._delivery_ranges

    @delivery_ranges.setter
    def delivery_ranges(self, delivery_ranges):
        """Sets the delivery_ranges of this DayOfWeekForDelivery.

        

        :param delivery_ranges: The delivery_ranges of this DayOfWeekForDelivery.
        :type delivery_ranges: List[DeliveryRange1]
        """
        if delivery_ranges is None:
            raise ValueError("Invalid value for `delivery_ranges`, must not be `None`")

        self._delivery_ranges = delivery_ranges
