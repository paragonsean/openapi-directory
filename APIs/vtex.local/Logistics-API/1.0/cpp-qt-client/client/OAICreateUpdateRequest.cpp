/**
 * Logistics API
 *     >Check the [Fulfillment onboarding guide](https://developers.vtex.com/docs/guides/fulfillment). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about fulfillment and is organized by focusing on the developer's journey.    Logistics or fulfillment is the module responsible for shipping calculation and inventory management.     The variable `{{environment}}` can be filled with `vtexcommercestable` or `vtexcommercebeta`, depending on the environment you want to test.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateUpdateRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateUpdateRequest::OAICreateUpdateRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateUpdateRequest::OAICreateUpdateRequest() {
    this->initializeModel();
}

OAICreateUpdateRequest::~OAICreateUpdateRequest() {}

void OAICreateUpdateRequest::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_business_hours_isSet = false;
    m_business_hours_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_formatted_address_isSet = false;
    m_formatted_address_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_instructions_isSet = false;
    m_instructions_isValid = false;

    m_is_active_isSet = false;
    m_is_active_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_tags_label_isSet = false;
    m_tags_label_isValid = false;
}

void OAICreateUpdateRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateUpdateRequest::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_business_hours_isValid = ::OpenAPI::fromJsonValue(m_business_hours, json[QString("businessHours")]);
    m_business_hours_isSet = !json[QString("businessHours")].isNull() && m_business_hours_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_formatted_address_isValid = ::OpenAPI::fromJsonValue(m_formatted_address, json[QString("formatted_address")]);
    m_formatted_address_isSet = !json[QString("formatted_address")].isNull() && m_formatted_address_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_instructions_isValid = ::OpenAPI::fromJsonValue(m_instructions, json[QString("instructions")]);
    m_instructions_isSet = !json[QString("instructions")].isNull() && m_instructions_isValid;

    m_is_active_isValid = ::OpenAPI::fromJsonValue(m_is_active, json[QString("isActive")]);
    m_is_active_isSet = !json[QString("isActive")].isNull() && m_is_active_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_tags_label_isValid = ::OpenAPI::fromJsonValue(m_tags_label, json[QString("tagsLabel")]);
    m_tags_label_isSet = !json[QString("tagsLabel")].isNull() && m_tags_label_isValid;
}

QString OAICreateUpdateRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateUpdateRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_address.isSet()) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_business_hours.size() > 0) {
        obj.insert(QString("businessHours"), ::OpenAPI::toJsonValue(m_business_hours));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_formatted_address_isSet) {
        obj.insert(QString("formatted_address"), ::OpenAPI::toJsonValue(m_formatted_address));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_instructions_isSet) {
        obj.insert(QString("instructions"), ::OpenAPI::toJsonValue(m_instructions));
    }
    if (m_is_active_isSet) {
        obj.insert(QString("isActive"), ::OpenAPI::toJsonValue(m_is_active));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_tags_label.size() > 0) {
        obj.insert(QString("tagsLabel"), ::OpenAPI::toJsonValue(m_tags_label));
    }
    return obj;
}

OAIAddress2_1 OAICreateUpdateRequest::getAddress() const {
    return m_address;
}
void OAICreateUpdateRequest::setAddress(const OAIAddress2_1 &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAICreateUpdateRequest::is_address_Set() const{
    return m_address_isSet;
}

bool OAICreateUpdateRequest::is_address_Valid() const{
    return m_address_isValid;
}

QList<OAIBusinessHour_1> OAICreateUpdateRequest::getBusinessHours() const {
    return m_business_hours;
}
void OAICreateUpdateRequest::setBusinessHours(const QList<OAIBusinessHour_1> &business_hours) {
    m_business_hours = business_hours;
    m_business_hours_isSet = true;
}

bool OAICreateUpdateRequest::is_business_hours_Set() const{
    return m_business_hours_isSet;
}

bool OAICreateUpdateRequest::is_business_hours_Valid() const{
    return m_business_hours_isValid;
}

QString OAICreateUpdateRequest::getDescription() const {
    return m_description;
}
void OAICreateUpdateRequest::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICreateUpdateRequest::is_description_Set() const{
    return m_description_isSet;
}

bool OAICreateUpdateRequest::is_description_Valid() const{
    return m_description_isValid;
}

QString OAICreateUpdateRequest::getFormattedAddress() const {
    return m_formatted_address;
}
void OAICreateUpdateRequest::setFormattedAddress(const QString &formatted_address) {
    m_formatted_address = formatted_address;
    m_formatted_address_isSet = true;
}

bool OAICreateUpdateRequest::is_formatted_address_Set() const{
    return m_formatted_address_isSet;
}

bool OAICreateUpdateRequest::is_formatted_address_Valid() const{
    return m_formatted_address_isValid;
}

QString OAICreateUpdateRequest::getId() const {
    return m_id;
}
void OAICreateUpdateRequest::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICreateUpdateRequest::is_id_Set() const{
    return m_id_isSet;
}

bool OAICreateUpdateRequest::is_id_Valid() const{
    return m_id_isValid;
}

QString OAICreateUpdateRequest::getInstructions() const {
    return m_instructions;
}
void OAICreateUpdateRequest::setInstructions(const QString &instructions) {
    m_instructions = instructions;
    m_instructions_isSet = true;
}

bool OAICreateUpdateRequest::is_instructions_Set() const{
    return m_instructions_isSet;
}

bool OAICreateUpdateRequest::is_instructions_Valid() const{
    return m_instructions_isValid;
}

bool OAICreateUpdateRequest::isIsActive() const {
    return m_is_active;
}
void OAICreateUpdateRequest::setIsActive(const bool &is_active) {
    m_is_active = is_active;
    m_is_active_isSet = true;
}

bool OAICreateUpdateRequest::is_is_active_Set() const{
    return m_is_active_isSet;
}

bool OAICreateUpdateRequest::is_is_active_Valid() const{
    return m_is_active_isValid;
}

QString OAICreateUpdateRequest::getName() const {
    return m_name;
}
void OAICreateUpdateRequest::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateUpdateRequest::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateUpdateRequest::is_name_Valid() const{
    return m_name_isValid;
}

QList<QString> OAICreateUpdateRequest::getTagsLabel() const {
    return m_tags_label;
}
void OAICreateUpdateRequest::setTagsLabel(const QList<QString> &tags_label) {
    m_tags_label = tags_label;
    m_tags_label_isSet = true;
}

bool OAICreateUpdateRequest::is_tags_label_Set() const{
    return m_tags_label_isSet;
}

bool OAICreateUpdateRequest::is_tags_label_Valid() const{
    return m_tags_label_isValid;
}

bool OAICreateUpdateRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_business_hours.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_formatted_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instructions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags_label.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateUpdateRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_address_isValid && m_business_hours_isValid && m_description_isValid && m_formatted_address_isValid && m_id_isValid && m_instructions_isValid && m_is_active_isValid && m_name_isValid && m_tags_label_isValid && true;
}

} // namespace OpenAPI
