/**
 * Logistics API
 *     >Check the [Fulfillment onboarding guide](https://developers.vtex.com/docs/guides/fulfillment). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about fulfillment and is organized by focusing on the developer's journey.    Logistics or fulfillment is the module responsible for shipping calculation and inventory management.     The variable `{{environment}}` can be filled with `vtexcommercestable` or `vtexcommercebeta`, depending on the environment you want to test.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreate_UpdateDockRequest.h
 *
 * 
 */

#ifndef OAICreate_UpdateDockRequest_H
#define OAICreate_UpdateDockRequest_H

#include <QJsonObject>

#include "OAIAddress1_1.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAddress1_1;

class OAICreate_UpdateDockRequest : public OAIObject {
public:
    OAICreate_UpdateDockRequest();
    OAICreate_UpdateDockRequest(QString json);
    ~OAICreate_UpdateDockRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAddress1_1 getAddress() const;
    void setAddress(const OAIAddress1_1 &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    QString getDockTimeFake() const;
    void setDockTimeFake(const QString &dock_time_fake);
    bool is_dock_time_fake_Set() const;
    bool is_dock_time_fake_Valid() const;

    QList<QString> getFreightTableIds() const;
    void setFreightTableIds(const QList<QString> &freight_table_ids);
    bool is_freight_table_ids_Set() const;
    bool is_freight_table_ids_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getPriority() const;
    void setPriority(const qint32 &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    QString getSalesChannel() const;
    void setSalesChannel(const QString &sales_channel);
    bool is_sales_channel_Set() const;
    bool is_sales_channel_Valid() const;

    QList<QString> getSalesChannels() const;
    void setSalesChannels(const QList<QString> &sales_channels);
    bool is_sales_channels_Set() const;
    bool is_sales_channels_Valid() const;

    QString getTimeFakeOverhead() const;
    void setTimeFakeOverhead(const QString &time_fake_overhead);
    bool is_time_fake_overhead_Set() const;
    bool is_time_fake_overhead_Valid() const;

    QString getWmsEndPoint() const;
    void setWmsEndPoint(const QString &wms_end_point);
    bool is_wms_end_point_Set() const;
    bool is_wms_end_point_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAddress1_1 m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    QString m_dock_time_fake;
    bool m_dock_time_fake_isSet;
    bool m_dock_time_fake_isValid;

    QList<QString> m_freight_table_ids;
    bool m_freight_table_ids_isSet;
    bool m_freight_table_ids_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    QString m_sales_channel;
    bool m_sales_channel_isSet;
    bool m_sales_channel_isValid;

    QList<QString> m_sales_channels;
    bool m_sales_channels_isSet;
    bool m_sales_channels_isValid;

    QString m_time_fake_overhead;
    bool m_time_fake_overhead_isSet;
    bool m_time_fake_overhead_isValid;

    QString m_wms_end_point;
    bool m_wms_end_point_isSet;
    bool m_wms_end_point_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreate_UpdateDockRequest)

#endif // OAICreate_UpdateDockRequest_H
