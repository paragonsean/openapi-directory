/**
 * Logistics API
 *     >Check the [Fulfillment onboarding guide](https://developers.vtex.com/docs/guides/fulfillment). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about fulfillment and is organized by focusing on the developer's journey.    Logistics or fulfillment is the module responsible for shipping calculation and inventory management.     The variable `{{environment}}` can be filled with `vtexcommercestable` or `vtexcommercebeta`, depending on the environment you want to test.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreate_UpdateWarehouseRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreate_UpdateWarehouseRequest::OAICreate_UpdateWarehouseRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreate_UpdateWarehouseRequest::OAICreate_UpdateWarehouseRequest() {
    this->initializeModel();
}

OAICreate_UpdateWarehouseRequest::~OAICreate_UpdateWarehouseRequest() {}

void OAICreate_UpdateWarehouseRequest::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_warehouse_docks_isSet = false;
    m_warehouse_docks_isValid = false;
}

void OAICreate_UpdateWarehouseRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreate_UpdateWarehouseRequest::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_warehouse_docks_isValid = ::OpenAPI::fromJsonValue(m_warehouse_docks, json[QString("warehouseDocks")]);
    m_warehouse_docks_isSet = !json[QString("warehouseDocks")].isNull() && m_warehouse_docks_isValid;
}

QString OAICreate_UpdateWarehouseRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreate_UpdateWarehouseRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_warehouse_docks.size() > 0) {
        obj.insert(QString("warehouseDocks"), ::OpenAPI::toJsonValue(m_warehouse_docks));
    }
    return obj;
}

QString OAICreate_UpdateWarehouseRequest::getId() const {
    return m_id;
}
void OAICreate_UpdateWarehouseRequest::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICreate_UpdateWarehouseRequest::is_id_Set() const{
    return m_id_isSet;
}

bool OAICreate_UpdateWarehouseRequest::is_id_Valid() const{
    return m_id_isValid;
}

QString OAICreate_UpdateWarehouseRequest::getName() const {
    return m_name;
}
void OAICreate_UpdateWarehouseRequest::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreate_UpdateWarehouseRequest::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreate_UpdateWarehouseRequest::is_name_Valid() const{
    return m_name_isValid;
}

QList<OAIWarehouseDock_1> OAICreate_UpdateWarehouseRequest::getWarehouseDocks() const {
    return m_warehouse_docks;
}
void OAICreate_UpdateWarehouseRequest::setWarehouseDocks(const QList<OAIWarehouseDock_1> &warehouse_docks) {
    m_warehouse_docks = warehouse_docks;
    m_warehouse_docks_isSet = true;
}

bool OAICreate_UpdateWarehouseRequest::is_warehouse_docks_Set() const{
    return m_warehouse_docks_isSet;
}

bool OAICreate_UpdateWarehouseRequest::is_warehouse_docks_Valid() const{
    return m_warehouse_docks_isValid;
}

bool OAICreate_UpdateWarehouseRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_warehouse_docks.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreate_UpdateWarehouseRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && m_name_isValid && m_warehouse_docks_isValid && true;
}

} // namespace OpenAPI
