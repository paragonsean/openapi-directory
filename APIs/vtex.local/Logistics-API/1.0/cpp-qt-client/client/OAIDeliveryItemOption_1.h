/**
 * Logistics API
 *     >Check the [Fulfillment onboarding guide](https://developers.vtex.com/docs/guides/fulfillment). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about fulfillment and is organized by focusing on the developer's journey.    Logistics or fulfillment is the module responsible for shipping calculation and inventory management.     The variable `{{environment}}` can be filled with `vtexcommercestable` or `vtexcommercebeta`, depending on the environment you want to test.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeliveryItemOption_1.h
 *
 * 
 */

#ifndef OAIDeliveryItemOption_1_H
#define OAIDeliveryItemOption_1_H

#include <QJsonObject>

#include "OAIItem_1.h"
#include "OAILocation_1.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIItem_1;
class OAILocation_1;

class OAIDeliveryItemOption_1 : public OAIObject {
public:
    OAIDeliveryItemOption_1();
    OAIDeliveryItemOption_1(QString json);
    ~OAIDeliveryItemOption_1() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAditionalTimeBlockedDays() const;
    void setAditionalTimeBlockedDays(const QString &aditional_time_blocked_days);
    bool is_aditional_time_blocked_days_Set() const;
    bool is_aditional_time_blocked_days_Valid() const;

    QList<QString> getDeliveryWindows() const;
    void setDeliveryWindows(const QList<QString> &delivery_windows);
    bool is_delivery_windows_Set() const;
    bool is_delivery_windows_Valid() const;

    QString getDockId() const;
    void setDockId(const QString &dock_id);
    bool is_dock_id_Set() const;
    bool is_dock_id_Valid() const;

    QString getDockTime() const;
    void setDockTime(const QString &dock_time);
    bool is_dock_time_Set() const;
    bool is_dock_time_Valid() const;

    OAIItem_1 getItem() const;
    void setItem(const OAIItem_1 &item);
    bool is_item_Set() const;
    bool is_item_Valid() const;

    double getListPrice() const;
    void setListPrice(const double &list_price);
    bool is_list_price_Set() const;
    bool is_list_price_Valid() const;

    OAILocation_1 getLocation() const;
    void setLocation(const OAILocation_1 &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    double getPromotionalPrice() const;
    void setPromotionalPrice(const double &promotional_price);
    bool is_promotional_price_Set() const;
    bool is_promotional_price_Valid() const;

    QString getSlaType() const;
    void setSlaType(const QString &sla_type);
    bool is_sla_type_Set() const;
    bool is_sla_type_Valid() const;

    QString getSlaTypeName() const;
    void setSlaTypeName(const QString &sla_type_name);
    bool is_sla_type_name_Set() const;
    bool is_sla_type_name_Valid() const;

    QString getTimeToDockPlusDockTime() const;
    void setTimeToDockPlusDockTime(const QString &time_to_dock_plus_dock_time);
    bool is_time_to_dock_plus_dock_time_Set() const;
    bool is_time_to_dock_plus_dock_time_Valid() const;

    QString getTotalTime() const;
    void setTotalTime(const QString &total_time);
    bool is_total_time_Set() const;
    bool is_total_time_Valid() const;

    QString getTransitTime() const;
    void setTransitTime(const QString &transit_time);
    bool is_transit_time_Set() const;
    bool is_transit_time_Valid() const;

    QString getWareHouseId() const;
    void setWareHouseId(const QString &ware_house_id);
    bool is_ware_house_id_Set() const;
    bool is_ware_house_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_aditional_time_blocked_days;
    bool m_aditional_time_blocked_days_isSet;
    bool m_aditional_time_blocked_days_isValid;

    QList<QString> m_delivery_windows;
    bool m_delivery_windows_isSet;
    bool m_delivery_windows_isValid;

    QString m_dock_id;
    bool m_dock_id_isSet;
    bool m_dock_id_isValid;

    QString m_dock_time;
    bool m_dock_time_isSet;
    bool m_dock_time_isValid;

    OAIItem_1 m_item;
    bool m_item_isSet;
    bool m_item_isValid;

    double m_list_price;
    bool m_list_price_isSet;
    bool m_list_price_isValid;

    OAILocation_1 m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    double m_promotional_price;
    bool m_promotional_price_isSet;
    bool m_promotional_price_isValid;

    QString m_sla_type;
    bool m_sla_type_isSet;
    bool m_sla_type_isValid;

    QString m_sla_type_name;
    bool m_sla_type_name_isSet;
    bool m_sla_type_name_isValid;

    QString m_time_to_dock_plus_dock_time;
    bool m_time_to_dock_plus_dock_time_isSet;
    bool m_time_to_dock_plus_dock_time_isValid;

    QString m_total_time;
    bool m_total_time_isSet;
    bool m_total_time_isValid;

    QString m_transit_time;
    bool m_transit_time_isSet;
    bool m_transit_time_isValid;

    QString m_ware_house_id;
    bool m_ware_house_id_isSet;
    bool m_ware_house_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeliveryItemOption_1)

#endif // OAIDeliveryItemOption_1_H
