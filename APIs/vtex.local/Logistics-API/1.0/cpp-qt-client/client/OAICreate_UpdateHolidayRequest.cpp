/**
 * Logistics API
 *     >Check the [Fulfillment onboarding guide](https://developers.vtex.com/docs/guides/fulfillment). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about fulfillment and is organized by focusing on the developer's journey.    Logistics or fulfillment is the module responsible for shipping calculation and inventory management.     The variable `{{environment}}` can be filled with `vtexcommercestable` or `vtexcommercebeta`, depending on the environment you want to test.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreate_UpdateHolidayRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreate_UpdateHolidayRequest::OAICreate_UpdateHolidayRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreate_UpdateHolidayRequest::OAICreate_UpdateHolidayRequest() {
    this->initializeModel();
}

OAICreate_UpdateHolidayRequest::~OAICreate_UpdateHolidayRequest() {}

void OAICreate_UpdateHolidayRequest::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_start_date_isSet = false;
    m_start_date_isValid = false;
}

void OAICreate_UpdateHolidayRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreate_UpdateHolidayRequest::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_start_date_isValid = ::OpenAPI::fromJsonValue(m_start_date, json[QString("startDate")]);
    m_start_date_isSet = !json[QString("startDate")].isNull() && m_start_date_isValid;
}

QString OAICreate_UpdateHolidayRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreate_UpdateHolidayRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_start_date_isSet) {
        obj.insert(QString("startDate"), ::OpenAPI::toJsonValue(m_start_date));
    }
    return obj;
}

QString OAICreate_UpdateHolidayRequest::getName() const {
    return m_name;
}
void OAICreate_UpdateHolidayRequest::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreate_UpdateHolidayRequest::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreate_UpdateHolidayRequest::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICreate_UpdateHolidayRequest::getStartDate() const {
    return m_start_date;
}
void OAICreate_UpdateHolidayRequest::setStartDate(const QString &start_date) {
    m_start_date = start_date;
    m_start_date_isSet = true;
}

bool OAICreate_UpdateHolidayRequest::is_start_date_Set() const{
    return m_start_date_isSet;
}

bool OAICreate_UpdateHolidayRequest::is_start_date_Valid() const{
    return m_start_date_isValid;
}

bool OAICreate_UpdateHolidayRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreate_UpdateHolidayRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && m_start_date_isValid && true;
}

} // namespace OpenAPI
