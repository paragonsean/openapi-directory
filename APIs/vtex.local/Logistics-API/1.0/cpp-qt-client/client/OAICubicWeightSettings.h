/**
 * Logistics API
 *     >Check the [Fulfillment onboarding guide](https://developers.vtex.com/docs/guides/fulfillment). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about fulfillment and is organized by focusing on the developer's journey.    Logistics or fulfillment is the module responsible for shipping calculation and inventory management.     The variable `{{environment}}` can be filled with `vtexcommercestable` or `vtexcommercebeta`, depending on the environment you want to test.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICubicWeightSettings.h
 *
 * Measure that accounts package&#39;s volume, and not only weight.
 */

#ifndef OAICubicWeightSettings_H
#define OAICubicWeightSettings_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICubicWeightSettings : public OAIObject {
public:
    OAICubicWeightSettings();
    OAICubicWeightSettings(QString json);
    ~OAICubicWeightSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getMinimunAcceptableVolumetricWeight() const;
    void setMinimunAcceptableVolumetricWeight(const double &minimun_acceptable_volumetric_weight);
    bool is_minimun_acceptable_volumetric_weight_Set() const;
    bool is_minimun_acceptable_volumetric_weight_Valid() const;

    double getVolumetricFactor() const;
    void setVolumetricFactor(const double &volumetric_factor);
    bool is_volumetric_factor_Set() const;
    bool is_volumetric_factor_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_minimun_acceptable_volumetric_weight;
    bool m_minimun_acceptable_volumetric_weight_isSet;
    bool m_minimun_acceptable_volumetric_weight_isValid;

    double m_volumetric_factor;
    bool m_volumetric_factor_isSet;
    bool m_volumetric_factor_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICubicWeightSettings)

#endif // OAICubicWeightSettings_H
