/**
 * Logistics API
 *     >Check the [Fulfillment onboarding guide](https://developers.vtex.com/docs/guides/fulfillment). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about fulfillment and is organized by focusing on the developer's journey.    Logistics or fulfillment is the module responsible for shipping calculation and inventory management.     The variable `{{environment}}` can be filled with `vtexcommercestable` or `vtexcommercebeta`, depending on the environment you want to test.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateUpdateWarehouseRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateUpdateWarehouseRequest::OAICreateUpdateWarehouseRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateUpdateWarehouseRequest::OAICreateUpdateWarehouseRequest() {
    this->initializeModel();
}

OAICreateUpdateWarehouseRequest::~OAICreateUpdateWarehouseRequest() {}

void OAICreateUpdateWarehouseRequest::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_warehouse_docks_isSet = false;
    m_warehouse_docks_isValid = false;
}

void OAICreateUpdateWarehouseRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateUpdateWarehouseRequest::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_warehouse_docks_isValid = ::OpenAPI::fromJsonValue(m_warehouse_docks, json[QString("warehouseDocks")]);
    m_warehouse_docks_isSet = !json[QString("warehouseDocks")].isNull() && m_warehouse_docks_isValid;
}

QString OAICreateUpdateWarehouseRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateUpdateWarehouseRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_warehouse_docks.size() > 0) {
        obj.insert(QString("warehouseDocks"), ::OpenAPI::toJsonValue(m_warehouse_docks));
    }
    return obj;
}

QString OAICreateUpdateWarehouseRequest::getId() const {
    return m_id;
}
void OAICreateUpdateWarehouseRequest::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICreateUpdateWarehouseRequest::is_id_Set() const{
    return m_id_isSet;
}

bool OAICreateUpdateWarehouseRequest::is_id_Valid() const{
    return m_id_isValid;
}

QString OAICreateUpdateWarehouseRequest::getName() const {
    return m_name;
}
void OAICreateUpdateWarehouseRequest::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateUpdateWarehouseRequest::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateUpdateWarehouseRequest::is_name_Valid() const{
    return m_name_isValid;
}

QList<OAIWarehouseDock_1> OAICreateUpdateWarehouseRequest::getWarehouseDocks() const {
    return m_warehouse_docks;
}
void OAICreateUpdateWarehouseRequest::setWarehouseDocks(const QList<OAIWarehouseDock_1> &warehouse_docks) {
    m_warehouse_docks = warehouse_docks;
    m_warehouse_docks_isSet = true;
}

bool OAICreateUpdateWarehouseRequest::is_warehouse_docks_Set() const{
    return m_warehouse_docks_isSet;
}

bool OAICreateUpdateWarehouseRequest::is_warehouse_docks_Valid() const{
    return m_warehouse_docks_isValid;
}

bool OAICreateUpdateWarehouseRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_warehouse_docks.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateUpdateWarehouseRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && m_name_isValid && m_warehouse_docks_isValid && true;
}

} // namespace OpenAPI
