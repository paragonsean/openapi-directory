/**
 * Logistics API
 *     >Check the [Fulfillment onboarding guide](https://developers.vtex.com/docs/guides/fulfillment). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about fulfillment and is organized by focusing on the developer's journey.    Logistics or fulfillment is the module responsible for shipping calculation and inventory management.     The variable `{{environment}}` can be filled with `vtexcommercestable` or `vtexcommercebeta`, depending on the environment you want to test.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICarrierbyid.h
 *
 * 
 */

#ifndef OAICarrierbyid_H
#define OAICarrierbyid_H

#include <QJsonObject>

#include "OAIDayOfWeekForDelivery_inner.h"
#include "OAIMaxDimension2_1.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDayOfWeekForDelivery_inner;
class OAIMaxDimension2_1;

class OAICarrierbyid : public OAIObject {
public:
    OAICarrierbyid();
    OAICarrierbyid(QString json);
    ~OAICarrierbyid() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getCarrierSchedule() const;
    void setCarrierSchedule(const QList<QString> &carrier_schedule);
    bool is_carrier_schedule_Set() const;
    bool is_carrier_schedule_Valid() const;

    QList<QString> getDayOfWeekBlockeds() const;
    void setDayOfWeekBlockeds(const QList<QString> &day_of_week_blockeds);
    bool is_day_of_week_blockeds_Set() const;
    bool is_day_of_week_blockeds_Valid() const;

    QList<OAIDayOfWeekForDelivery_inner> getDayOfWeekForDelivery() const;
    void setDayOfWeekForDelivery(const QList<OAIDayOfWeekForDelivery_inner> &day_of_week_for_delivery);
    bool is_day_of_week_for_delivery_Set() const;
    bool is_day_of_week_for_delivery_Valid() const;

    bool isDeliveryOnWeekends() const;
    void setDeliveryOnWeekends(const bool &delivery_on_weekends);
    bool is_delivery_on_weekends_Set() const;
    bool is_delivery_on_weekends_Valid() const;

    bool isExclusiveToDeliveryPoints() const;
    void setExclusiveToDeliveryPoints(const bool &exclusive_to_delivery_points);
    bool is_exclusive_to_delivery_points_Set() const;
    bool is_exclusive_to_delivery_points_Valid() const;

    double getFactorCubicWeight() const;
    void setFactorCubicWeight(const double &factor_cubic_weight);
    bool is_factor_cubic_weight_Set() const;
    bool is_factor_cubic_weight_Valid() const;

    qint32 getFreightTableProcessStatus() const;
    void setFreightTableProcessStatus(const qint32 &freight_table_process_status);
    bool is_freight_table_process_status_Set() const;
    bool is_freight_table_process_status_Valid() const;

    QString getFreightTableValueError() const;
    void setFreightTableValueError(const QString &freight_table_value_error);
    bool is_freight_table_value_error_Set() const;
    bool is_freight_table_value_error_Valid() const;

    QList<QString> getFreightValue() const;
    void setFreightValue(const QList<QString> &freight_value);
    bool is_freight_value_Set() const;
    bool is_freight_value_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsPolygon() const;
    void setIsPolygon(const bool &is_polygon);
    bool is_is_polygon_Set() const;
    bool is_is_polygon_Valid() const;

    OAIMaxDimension2_1 getMaxDimension() const;
    void setMaxDimension(const OAIMaxDimension2_1 &max_dimension);
    bool is_max_dimension_Set() const;
    bool is_max_dimension_Valid() const;

    qint32 getMaxRangeDelivery() const;
    void setMaxRangeDelivery(const qint32 &max_range_delivery);
    bool is_max_range_delivery_Set() const;
    bool is_max_range_delivery_Valid() const;

    double getMinimunCubicWeight() const;
    void setMinimunCubicWeight(const double &minimun_cubic_weight);
    bool is_minimun_cubic_weight_Set() const;
    bool is_minimun_cubic_weight_Valid() const;

    QList<QString> getModals() const;
    void setModals(const QList<QString> &modals);
    bool is_modals_Set() const;
    bool is_modals_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNumberOfItemsPerShipment() const;
    void setNumberOfItemsPerShipment(const QString &number_of_items_per_shipment);
    bool is_number_of_items_per_shipment_Set() const;
    bool is_number_of_items_per_shipment_Valid() const;

    bool isOnlyItemsWithDefinedModal() const;
    void setOnlyItemsWithDefinedModal(const bool &only_items_with_defined_modal);
    bool is_only_items_with_defined_modal_Set() const;
    bool is_only_items_with_defined_modal_Valid() const;

    bool isScheduledDelivery() const;
    void setScheduledDelivery(const bool &scheduled_delivery);
    bool is_scheduled_delivery_Set() const;
    bool is_scheduled_delivery_Valid() const;

    QString getSlaType() const;
    void setSlaType(const QString &sla_type);
    bool is_sla_type_Set() const;
    bool is_sla_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_carrier_schedule;
    bool m_carrier_schedule_isSet;
    bool m_carrier_schedule_isValid;

    QList<QString> m_day_of_week_blockeds;
    bool m_day_of_week_blockeds_isSet;
    bool m_day_of_week_blockeds_isValid;

    QList<OAIDayOfWeekForDelivery_inner> m_day_of_week_for_delivery;
    bool m_day_of_week_for_delivery_isSet;
    bool m_day_of_week_for_delivery_isValid;

    bool m_delivery_on_weekends;
    bool m_delivery_on_weekends_isSet;
    bool m_delivery_on_weekends_isValid;

    bool m_exclusive_to_delivery_points;
    bool m_exclusive_to_delivery_points_isSet;
    bool m_exclusive_to_delivery_points_isValid;

    double m_factor_cubic_weight;
    bool m_factor_cubic_weight_isSet;
    bool m_factor_cubic_weight_isValid;

    qint32 m_freight_table_process_status;
    bool m_freight_table_process_status_isSet;
    bool m_freight_table_process_status_isValid;

    QString m_freight_table_value_error;
    bool m_freight_table_value_error_isSet;
    bool m_freight_table_value_error_isValid;

    QList<QString> m_freight_value;
    bool m_freight_value_isSet;
    bool m_freight_value_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_polygon;
    bool m_is_polygon_isSet;
    bool m_is_polygon_isValid;

    OAIMaxDimension2_1 m_max_dimension;
    bool m_max_dimension_isSet;
    bool m_max_dimension_isValid;

    qint32 m_max_range_delivery;
    bool m_max_range_delivery_isSet;
    bool m_max_range_delivery_isValid;

    double m_minimun_cubic_weight;
    bool m_minimun_cubic_weight_isSet;
    bool m_minimun_cubic_weight_isValid;

    QList<QString> m_modals;
    bool m_modals_isSet;
    bool m_modals_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_number_of_items_per_shipment;
    bool m_number_of_items_per_shipment_isSet;
    bool m_number_of_items_per_shipment_isValid;

    bool m_only_items_with_defined_modal;
    bool m_only_items_with_defined_modal_isSet;
    bool m_only_items_with_defined_modal_isValid;

    bool m_scheduled_delivery;
    bool m_scheduled_delivery_isSet;
    bool m_scheduled_delivery_isValid;

    QString m_sla_type;
    bool m_sla_type_isSet;
    bool m_sla_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICarrierbyid)

#endif // OAICarrierbyid_H
