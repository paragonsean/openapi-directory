/**
 * Logistics API
 *     >Check the [Fulfillment onboarding guide](https://developers.vtex.com/docs/guides/fulfillment). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about fulfillment and is organized by focusing on the developer's journey.    Logistics or fulfillment is the module responsible for shipping calculation and inventory management.     The variable `{{environment}}` can be filled with `vtexcommercestable` or `vtexcommercebeta`, depending on the environment you want to test.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeliveryRange1_1.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeliveryRange1_1::OAIDeliveryRange1_1(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeliveryRange1_1::OAIDeliveryRange1_1() {
    this->initializeModel();
}

OAIDeliveryRange1_1::~OAIDeliveryRange1_1() {}

void OAIDeliveryRange1_1::initializeModel() {

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_list_price_isSet = false;
    m_list_price_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;
}

void OAIDeliveryRange1_1::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeliveryRange1_1::fromJsonObject(QJsonObject json) {

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_list_price_isValid = ::OpenAPI::fromJsonValue(m_list_price, json[QString("listPrice")]);
    m_list_price_isSet = !json[QString("listPrice")].isNull() && m_list_price_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;
}

QString OAIDeliveryRange1_1::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeliveryRange1_1::asJsonObject() const {
    QJsonObject obj;
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_list_price_isSet) {
        obj.insert(QString("listPrice"), ::OpenAPI::toJsonValue(m_list_price));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    return obj;
}

QString OAIDeliveryRange1_1::getEndTime() const {
    return m_end_time;
}
void OAIDeliveryRange1_1::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIDeliveryRange1_1::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIDeliveryRange1_1::is_end_time_Valid() const{
    return m_end_time_isValid;
}

double OAIDeliveryRange1_1::getListPrice() const {
    return m_list_price;
}
void OAIDeliveryRange1_1::setListPrice(const double &list_price) {
    m_list_price = list_price;
    m_list_price_isSet = true;
}

bool OAIDeliveryRange1_1::is_list_price_Set() const{
    return m_list_price_isSet;
}

bool OAIDeliveryRange1_1::is_list_price_Valid() const{
    return m_list_price_isValid;
}

QString OAIDeliveryRange1_1::getStartTime() const {
    return m_start_time;
}
void OAIDeliveryRange1_1::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIDeliveryRange1_1::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIDeliveryRange1_1::is_start_time_Valid() const{
    return m_start_time_isValid;
}

bool OAIDeliveryRange1_1::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_list_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeliveryRange1_1::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_end_time_isValid && m_list_price_isValid && m_start_time_isValid && true;
}

} // namespace OpenAPI
