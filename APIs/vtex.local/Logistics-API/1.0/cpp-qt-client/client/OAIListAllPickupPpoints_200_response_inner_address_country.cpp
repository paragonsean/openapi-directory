/**
 * Logistics API
 *     >Check the [Fulfillment onboarding guide](https://developers.vtex.com/docs/guides/fulfillment). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about fulfillment and is organized by focusing on the developer's journey.    Logistics or fulfillment is the module responsible for shipping calculation and inventory management.     The variable `{{environment}}` can be filled with `vtexcommercestable` or `vtexcommercebeta`, depending on the environment you want to test.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListAllPickupPpoints_200_response_inner_address_country.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListAllPickupPpoints_200_response_inner_address_country::OAIListAllPickupPpoints_200_response_inner_address_country(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListAllPickupPpoints_200_response_inner_address_country::OAIListAllPickupPpoints_200_response_inner_address_country() {
    this->initializeModel();
}

OAIListAllPickupPpoints_200_response_inner_address_country::~OAIListAllPickupPpoints_200_response_inner_address_country() {}

void OAIListAllPickupPpoints_200_response_inner_address_country::initializeModel() {

    m_acronym_isSet = false;
    m_acronym_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIListAllPickupPpoints_200_response_inner_address_country::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListAllPickupPpoints_200_response_inner_address_country::fromJsonObject(QJsonObject json) {

    m_acronym_isValid = ::OpenAPI::fromJsonValue(m_acronym, json[QString("acronym")]);
    m_acronym_isSet = !json[QString("acronym")].isNull() && m_acronym_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIListAllPickupPpoints_200_response_inner_address_country::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListAllPickupPpoints_200_response_inner_address_country::asJsonObject() const {
    QJsonObject obj;
    if (m_acronym_isSet) {
        obj.insert(QString("acronym"), ::OpenAPI::toJsonValue(m_acronym));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIListAllPickupPpoints_200_response_inner_address_country::getAcronym() const {
    return m_acronym;
}
void OAIListAllPickupPpoints_200_response_inner_address_country::setAcronym(const QString &acronym) {
    m_acronym = acronym;
    m_acronym_isSet = true;
}

bool OAIListAllPickupPpoints_200_response_inner_address_country::is_acronym_Set() const{
    return m_acronym_isSet;
}

bool OAIListAllPickupPpoints_200_response_inner_address_country::is_acronym_Valid() const{
    return m_acronym_isValid;
}

QString OAIListAllPickupPpoints_200_response_inner_address_country::getName() const {
    return m_name;
}
void OAIListAllPickupPpoints_200_response_inner_address_country::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIListAllPickupPpoints_200_response_inner_address_country::is_name_Set() const{
    return m_name_isSet;
}

bool OAIListAllPickupPpoints_200_response_inner_address_country::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIListAllPickupPpoints_200_response_inner_address_country::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_acronym_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListAllPickupPpoints_200_response_inner_address_country::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
