/**
 * Logistics API
 *     >Check the [Fulfillment onboarding guide](https://developers.vtex.com/docs/guides/fulfillment). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about fulfillment and is organized by focusing on the developer's journey.    Logistics or fulfillment is the module responsible for shipping calculation and inventory management.     The variable `{{environment}}` can be filled with `vtexcommercestable` or `vtexcommercebeta`, depending on the environment you want to test.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDimension1_1.h
 *
 * 
 */

#ifndef OAIDimension1_1_H
#define OAIDimension1_1_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDimension1_1 : public OAIObject {
public:
    OAIDimension1_1();
    OAIDimension1_1(QString json);
    ~OAIDimension1_1() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getHeight() const;
    void setHeight(const double &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    double getLength() const;
    void setLength(const double &length);
    bool is_length_Set() const;
    bool is_length_Valid() const;

    double getMaxSumDimension() const;
    void setMaxSumDimension(const double &max_sum_dimension);
    bool is_max_sum_dimension_Set() const;
    bool is_max_sum_dimension_Valid() const;

    double getWeight() const;
    void setWeight(const double &weight);
    bool is_weight_Set() const;
    bool is_weight_Valid() const;

    double getWidth() const;
    void setWidth(const double &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    double m_length;
    bool m_length_isSet;
    bool m_length_isValid;

    double m_max_sum_dimension;
    bool m_max_sum_dimension_isSet;
    bool m_max_sum_dimension_isValid;

    double m_weight;
    bool m_weight_isSet;
    bool m_weight_isValid;

    double m_width;
    bool m_width_isSet;
    bool m_width_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDimension1_1)

#endif // OAIDimension1_1_H
