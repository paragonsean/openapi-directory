/**
 * Logistics API
 *     >Check the [Fulfillment onboarding guide](https://developers.vtex.com/docs/guides/fulfillment). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about fulfillment and is organized by focusing on the developer's journey.    Logistics or fulfillment is the module responsible for shipping calculation and inventory management.     The variable `{{environment}}` can be filled with `vtexcommercestable` or `vtexcommercebeta`, depending on the environment you want to test.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRequest_body_1_deliveryScheduleSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRequest_body_1_deliveryScheduleSettings::OAIRequest_body_1_deliveryScheduleSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRequest_body_1_deliveryScheduleSettings::OAIRequest_body_1_deliveryScheduleSettings() {
    this->initializeModel();
}

OAIRequest_body_1_deliveryScheduleSettings::~OAIRequest_body_1_deliveryScheduleSettings() {}

void OAIRequest_body_1_deliveryScheduleSettings::initializeModel() {

    m_day_of_week_for_delivery_isSet = false;
    m_day_of_week_for_delivery_isValid = false;

    m_max_range_delivery_isSet = false;
    m_max_range_delivery_isValid = false;

    m_use_delivery_schedule_isSet = false;
    m_use_delivery_schedule_isValid = false;
}

void OAIRequest_body_1_deliveryScheduleSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRequest_body_1_deliveryScheduleSettings::fromJsonObject(QJsonObject json) {

    m_day_of_week_for_delivery_isValid = ::OpenAPI::fromJsonValue(m_day_of_week_for_delivery, json[QString("dayOfWeekForDelivery")]);
    m_day_of_week_for_delivery_isSet = !json[QString("dayOfWeekForDelivery")].isNull() && m_day_of_week_for_delivery_isValid;

    m_max_range_delivery_isValid = ::OpenAPI::fromJsonValue(m_max_range_delivery, json[QString("maxRangeDelivery")]);
    m_max_range_delivery_isSet = !json[QString("maxRangeDelivery")].isNull() && m_max_range_delivery_isValid;

    m_use_delivery_schedule_isValid = ::OpenAPI::fromJsonValue(m_use_delivery_schedule, json[QString("useDeliverySchedule")]);
    m_use_delivery_schedule_isSet = !json[QString("useDeliverySchedule")].isNull() && m_use_delivery_schedule_isValid;
}

QString OAIRequest_body_1_deliveryScheduleSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRequest_body_1_deliveryScheduleSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_day_of_week_for_delivery.size() > 0) {
        obj.insert(QString("dayOfWeekForDelivery"), ::OpenAPI::toJsonValue(m_day_of_week_for_delivery));
    }
    if (m_max_range_delivery_isSet) {
        obj.insert(QString("maxRangeDelivery"), ::OpenAPI::toJsonValue(m_max_range_delivery));
    }
    if (m_use_delivery_schedule_isSet) {
        obj.insert(QString("useDeliverySchedule"), ::OpenAPI::toJsonValue(m_use_delivery_schedule));
    }
    return obj;
}

QList<OAIDayOfWeekForDelivery_inner> OAIRequest_body_1_deliveryScheduleSettings::getDayOfWeekForDelivery() const {
    return m_day_of_week_for_delivery;
}
void OAIRequest_body_1_deliveryScheduleSettings::setDayOfWeekForDelivery(const QList<OAIDayOfWeekForDelivery_inner> &day_of_week_for_delivery) {
    m_day_of_week_for_delivery = day_of_week_for_delivery;
    m_day_of_week_for_delivery_isSet = true;
}

bool OAIRequest_body_1_deliveryScheduleSettings::is_day_of_week_for_delivery_Set() const{
    return m_day_of_week_for_delivery_isSet;
}

bool OAIRequest_body_1_deliveryScheduleSettings::is_day_of_week_for_delivery_Valid() const{
    return m_day_of_week_for_delivery_isValid;
}

double OAIRequest_body_1_deliveryScheduleSettings::getMaxRangeDelivery() const {
    return m_max_range_delivery;
}
void OAIRequest_body_1_deliveryScheduleSettings::setMaxRangeDelivery(const double &max_range_delivery) {
    m_max_range_delivery = max_range_delivery;
    m_max_range_delivery_isSet = true;
}

bool OAIRequest_body_1_deliveryScheduleSettings::is_max_range_delivery_Set() const{
    return m_max_range_delivery_isSet;
}

bool OAIRequest_body_1_deliveryScheduleSettings::is_max_range_delivery_Valid() const{
    return m_max_range_delivery_isValid;
}

bool OAIRequest_body_1_deliveryScheduleSettings::isUseDeliverySchedule() const {
    return m_use_delivery_schedule;
}
void OAIRequest_body_1_deliveryScheduleSettings::setUseDeliverySchedule(const bool &use_delivery_schedule) {
    m_use_delivery_schedule = use_delivery_schedule;
    m_use_delivery_schedule_isSet = true;
}

bool OAIRequest_body_1_deliveryScheduleSettings::is_use_delivery_schedule_Set() const{
    return m_use_delivery_schedule_isSet;
}

bool OAIRequest_body_1_deliveryScheduleSettings::is_use_delivery_schedule_Valid() const{
    return m_use_delivery_schedule_isValid;
}

bool OAIRequest_body_1_deliveryScheduleSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_day_of_week_for_delivery.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_range_delivery_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_use_delivery_schedule_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRequest_body_1_deliveryScheduleSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_day_of_week_for_delivery_isValid && m_max_range_delivery_isValid && m_use_delivery_schedule_isValid && true;
}

} // namespace OpenAPI
