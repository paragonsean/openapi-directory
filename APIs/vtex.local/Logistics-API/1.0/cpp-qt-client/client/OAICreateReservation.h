/**
 * Logistics API
 *     >Check the [Fulfillment onboarding guide](https://developers.vtex.com/docs/guides/fulfillment). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about fulfillment and is organized by focusing on the developer's journey.    Logistics or fulfillment is the module responsible for shipping calculation and inventory management.     The variable `{{environment}}` can be filled with `vtexcommercestable` or `vtexcommercebeta`, depending on the environment you want to test.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateReservation.h
 *
 * 
 */

#ifndef OAICreateReservation_H
#define OAICreateReservation_H

#include <QJsonObject>

#include "OAISlaRequest_1.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISlaRequest_1;

class OAICreateReservation : public OAIObject {
public:
    OAICreateReservation();
    OAICreateReservation(QString json);
    ~OAICreateReservation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAuthorizedDateUtc() const;
    void setAuthorizedDateUtc(const QString &authorized_date_utc);
    bool is_authorized_date_utc_Set() const;
    bool is_authorized_date_utc_Valid() const;

    QString getCanceledDateUtc() const;
    void setCanceledDateUtc(const QString &canceled_date_utc);
    bool is_canceled_date_utc_Set() const;
    bool is_canceled_date_utc_Valid() const;

    QString getConfirmedDateUtc() const;
    void setConfirmedDateUtc(const QString &confirmed_date_utc);
    bool is_confirmed_date_utc_Set() const;
    bool is_confirmed_date_utc_Valid() const;

    QList<QString> getErrors() const;
    void setErrors(const QList<QString> &errors);
    bool is_errors_Set() const;
    bool is_errors_Valid() const;

    bool isIsSucess() const;
    void setIsSucess(const bool &is_sucess);
    bool is_is_sucess_Set() const;
    bool is_is_sucess_Valid() const;

    QString getLastUpdateDateUtc() const;
    void setLastUpdateDateUtc(const QString &last_update_date_utc);
    bool is_last_update_date_utc_Set() const;
    bool is_last_update_date_utc_Valid() const;

    QString getLockId() const;
    void setLockId(const QString &lock_id);
    bool is_lock_id_Set() const;
    bool is_lock_id_Valid() const;

    QString getMaximumConfirmationDateUtc() const;
    void setMaximumConfirmationDateUtc(const QString &maximum_confirmation_date_utc);
    bool is_maximum_confirmation_date_utc_Set() const;
    bool is_maximum_confirmation_date_utc_Valid() const;

    QString getPickupPointItemOptions() const;
    void setPickupPointItemOptions(const QString &pickup_point_item_options);
    bool is_pickup_point_item_options_Set() const;
    bool is_pickup_point_item_options_Valid() const;

    QString getReservationDateUtc() const;
    void setReservationDateUtc(const QString &reservation_date_utc);
    bool is_reservation_date_utc_Set() const;
    bool is_reservation_date_utc_Valid() const;

    QString getSalesChannel() const;
    void setSalesChannel(const QString &sales_channel);
    bool is_sales_channel_Set() const;
    bool is_sales_channel_Valid() const;

    QList<OAISlaRequest_1> getSlaRequest() const;
    void setSlaRequest(const QList<OAISlaRequest_1> &sla_request);
    bool is_sla_request_Set() const;
    bool is_sla_request_Valid() const;

    qint32 getStatus() const;
    void setStatus(const qint32 &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_authorized_date_utc;
    bool m_authorized_date_utc_isSet;
    bool m_authorized_date_utc_isValid;

    QString m_canceled_date_utc;
    bool m_canceled_date_utc_isSet;
    bool m_canceled_date_utc_isValid;

    QString m_confirmed_date_utc;
    bool m_confirmed_date_utc_isSet;
    bool m_confirmed_date_utc_isValid;

    QList<QString> m_errors;
    bool m_errors_isSet;
    bool m_errors_isValid;

    bool m_is_sucess;
    bool m_is_sucess_isSet;
    bool m_is_sucess_isValid;

    QString m_last_update_date_utc;
    bool m_last_update_date_utc_isSet;
    bool m_last_update_date_utc_isValid;

    QString m_lock_id;
    bool m_lock_id_isSet;
    bool m_lock_id_isValid;

    QString m_maximum_confirmation_date_utc;
    bool m_maximum_confirmation_date_utc_isSet;
    bool m_maximum_confirmation_date_utc_isValid;

    QString m_pickup_point_item_options;
    bool m_pickup_point_item_options_isSet;
    bool m_pickup_point_item_options_isValid;

    QString m_reservation_date_utc;
    bool m_reservation_date_utc_isSet;
    bool m_reservation_date_utc_isValid;

    QString m_sales_channel;
    bool m_sales_channel_isSet;
    bool m_sales_channel_isValid;

    QList<OAISlaRequest_1> m_sla_request;
    bool m_sla_request_isSet;
    bool m_sla_request_isValid;

    qint32 m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateReservation)

#endif // OAICreateReservation_H
