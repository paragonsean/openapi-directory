/**
 * Logistics API
 *     >Check the [Fulfillment onboarding guide](https://developers.vtex.com/docs/guides/fulfillment). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about fulfillment and is organized by focusing on the developer's journey.    Logistics or fulfillment is the module responsible for shipping calculation and inventory management.     The variable `{{environment}}` can be filled with `vtexcommercestable` or `vtexcommercebeta`, depending on the environment you want to test.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateUpdatePickupPoint_request.h
 *
 * 
 */

#ifndef OAICreateUpdatePickupPoint_request_H
#define OAICreateUpdatePickupPoint_request_H

#include <QJsonObject>

#include "OAIBusinessHour_1.h"
#include "OAICreateUpdatePickupPoint_request_address.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateUpdatePickupPoint_request_address;
class OAIBusinessHour_1;

class OAICreateUpdatePickupPoint_request : public OAIObject {
public:
    OAICreateUpdatePickupPoint_request();
    OAICreateUpdatePickupPoint_request(QString json);
    ~OAICreateUpdatePickupPoint_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICreateUpdatePickupPoint_request_address getAddress() const;
    void setAddress(const OAICreateUpdatePickupPoint_request_address &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    QList<OAIBusinessHour_1> getBusinessHours() const;
    void setBusinessHours(const QList<OAIBusinessHour_1> &business_hours);
    bool is_business_hours_Set() const;
    bool is_business_hours_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getFormattedAddress() const;
    void setFormattedAddress(const QString &formatted_address);
    bool is_formatted_address_Set() const;
    bool is_formatted_address_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getInstructions() const;
    void setInstructions(const QString &instructions);
    bool is_instructions_Set() const;
    bool is_instructions_Valid() const;

    bool isIsActive() const;
    void setIsActive(const bool &is_active);
    bool is_is_active_Set() const;
    bool is_is_active_Valid() const;

    bool isIsThirdPartyPickup() const;
    void setIsThirdPartyPickup(const bool &is_third_party_pickup);
    bool is_is_third_party_pickup_Set() const;
    bool is_is_third_party_pickup_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<QString> getTagsLabel() const;
    void setTagsLabel(const QList<QString> &tags_label);
    bool is_tags_label_Set() const;
    bool is_tags_label_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICreateUpdatePickupPoint_request_address m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    QList<OAIBusinessHour_1> m_business_hours;
    bool m_business_hours_isSet;
    bool m_business_hours_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_formatted_address;
    bool m_formatted_address_isSet;
    bool m_formatted_address_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_instructions;
    bool m_instructions_isSet;
    bool m_instructions_isValid;

    bool m_is_active;
    bool m_is_active_isSet;
    bool m_is_active_isValid;

    bool m_is_third_party_pickup;
    bool m_is_third_party_pickup_isSet;
    bool m_is_third_party_pickup_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<QString> m_tags_label;
    bool m_tags_label_isSet;
    bool m_tags_label_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateUpdatePickupPoint_request)

#endif // OAICreateUpdatePickupPoint_request_H
