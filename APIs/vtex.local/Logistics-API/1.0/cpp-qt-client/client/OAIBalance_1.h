/**
 * Logistics API
 *     >Check the [Fulfillment onboarding guide](https://developers.vtex.com/docs/guides/fulfillment). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about fulfillment and is organized by focusing on the developer's journey.    Logistics or fulfillment is the module responsible for shipping calculation and inventory management.     The variable `{{environment}}` can be filled with `vtexcommercestable` or `vtexcommercebeta`, depending on the environment you want to test.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBalance_1.h
 *
 * 
 */

#ifndef OAIBalance_1_H
#define OAIBalance_1_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBalance_1 : public OAIObject {
public:
    OAIBalance_1();
    OAIBalance_1(QString json);
    ~OAIBalance_1() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isHasUnlimitedQuantity() const;
    void setHasUnlimitedQuantity(const bool &has_unlimited_quantity);
    bool is_has_unlimited_quantity_Set() const;
    bool is_has_unlimited_quantity_Valid() const;

    qint32 getReservedQuantity() const;
    void setReservedQuantity(const qint32 &reserved_quantity);
    bool is_reserved_quantity_Set() const;
    bool is_reserved_quantity_Valid() const;

    qint32 getTotalQuantity() const;
    void setTotalQuantity(const qint32 &total_quantity);
    bool is_total_quantity_Set() const;
    bool is_total_quantity_Valid() const;

    QString getWarehouseId() const;
    void setWarehouseId(const QString &warehouse_id);
    bool is_warehouse_id_Set() const;
    bool is_warehouse_id_Valid() const;

    QString getWarehouseName() const;
    void setWarehouseName(const QString &warehouse_name);
    bool is_warehouse_name_Set() const;
    bool is_warehouse_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_has_unlimited_quantity;
    bool m_has_unlimited_quantity_isSet;
    bool m_has_unlimited_quantity_isValid;

    qint32 m_reserved_quantity;
    bool m_reserved_quantity_isSet;
    bool m_reserved_quantity_isValid;

    qint32 m_total_quantity;
    bool m_total_quantity_isSet;
    bool m_total_quantity_isValid;

    QString m_warehouse_id;
    bool m_warehouse_id_isSet;
    bool m_warehouse_id_isValid;

    QString m_warehouse_name;
    bool m_warehouse_name_isSet;
    bool m_warehouse_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBalance_1)

#endif // OAIBalance_1_H
