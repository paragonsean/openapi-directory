/**
 * Logistics API
 *     >Check the [Fulfillment onboarding guide](https://developers.vtex.com/docs/guides/fulfillment). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about fulfillment and is organized by focusing on the developer's journey.    Logistics or fulfillment is the module responsible for shipping calculation and inventory management.     The variable `{{environment}}` can be filled with `vtexcommercestable` or `vtexcommercebeta`, depending on the environment you want to test.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISaveSupplyLot.h
 *
 * 
 */

#ifndef OAISaveSupplyLot_H
#define OAISaveSupplyLot_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISaveSupplyLot : public OAIObject {
public:
    OAISaveSupplyLot();
    OAISaveSupplyLot(QString json);
    ~OAISaveSupplyLot() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDateOfSupplyUtc() const;
    void setDateOfSupplyUtc(const QString &date_of_supply_utc);
    bool is_date_of_supply_utc_Set() const;
    bool is_date_of_supply_utc_Valid() const;

    bool isKeepSellingAfterExpiration() const;
    void setKeepSellingAfterExpiration(const bool &keep_selling_after_expiration);
    bool is_keep_selling_after_expiration_Set() const;
    bool is_keep_selling_after_expiration_Valid() const;

    double getQuantity() const;
    void setQuantity(const double &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_date_of_supply_utc;
    bool m_date_of_supply_utc_isSet;
    bool m_date_of_supply_utc_isValid;

    bool m_keep_selling_after_expiration;
    bool m_keep_selling_after_expiration_isSet;
    bool m_keep_selling_after_expiration_isValid;

    double m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISaveSupplyLot)

#endif // OAISaveSupplyLot_H
