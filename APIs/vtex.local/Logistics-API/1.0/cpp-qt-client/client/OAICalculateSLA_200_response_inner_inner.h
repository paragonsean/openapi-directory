/**
 * Logistics API
 *     >Check the [Fulfillment onboarding guide](https://developers.vtex.com/docs/guides/fulfillment). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about fulfillment and is organized by focusing on the developer's journey.    Logistics or fulfillment is the module responsible for shipping calculation and inventory management.     The variable `{{environment}}` can be filled with `vtexcommercestable` or `vtexcommercebeta`, depending on the environment you want to test.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICalculateSLA_200_response_inner_inner.h
 *
 * 
 */

#ifndef OAICalculateSLA_200_response_inner_inner_H
#define OAICalculateSLA_200_response_inner_inner_H

#include <QJsonObject>

#include "OAIDeliveryWindow_1.h"
#include "OAILocation1_1.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDeliveryWindow_1;
class OAILocation1_1;

class OAICalculateSLA_200_response_inner_inner : public OAIObject {
public:
    OAICalculateSLA_200_response_inner_inner();
    OAICalculateSLA_200_response_inner_inner(QString json);
    ~OAICalculateSLA_200_response_inner_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAditionalTimeBlockedDays() const;
    void setAditionalTimeBlockedDays(const QString &aditional_time_blocked_days);
    bool is_aditional_time_blocked_days_Set() const;
    bool is_aditional_time_blocked_days_Valid() const;

    qint32 getAvailabilityQuantity() const;
    void setAvailabilityQuantity(const qint32 &availability_quantity);
    bool is_availability_quantity_Set() const;
    bool is_availability_quantity_Valid() const;

    QList<QString> getCarrierSchedule() const;
    void setCarrierSchedule(const QList<QString> &carrier_schedule);
    bool is_carrier_schedule_Set() const;
    bool is_carrier_schedule_Valid() const;

    QString getCoordinates() const;
    void setCoordinates(const QString &coordinates);
    bool is_coordinates_Set() const;
    bool is_coordinates_Valid() const;

    bool isDeliveryOnWeekends() const;
    void setDeliveryOnWeekends(const bool &delivery_on_weekends);
    bool is_delivery_on_weekends_Set() const;
    bool is_delivery_on_weekends_Valid() const;

    QList<OAIDeliveryWindow_1> getDeliveryWindows() const;
    void setDeliveryWindows(const QList<OAIDeliveryWindow_1> &delivery_windows);
    bool is_delivery_windows_Set() const;
    bool is_delivery_windows_Valid() const;

    QString getDockId() const;
    void setDockId(const QString &dock_id);
    bool is_dock_id_Set() const;
    bool is_dock_id_Valid() const;

    QString getDockTime() const;
    void setDockTime(const QString &dock_time);
    bool is_dock_time_Set() const;
    bool is_dock_time_Valid() const;

    QString getFreightTableId() const;
    void setFreightTableId(const QString &freight_table_id);
    bool is_freight_table_id_Set() const;
    bool is_freight_table_id_Valid() const;

    QString getFreightTableName() const;
    void setFreightTableName(const QString &freight_table_name);
    bool is_freight_table_name_Set() const;
    bool is_freight_table_name_Valid() const;

    QString getItemId() const;
    void setItemId(const QString &item_id);
    bool is_item_id_Set() const;
    bool is_item_id_Valid() const;

    double getListPrice() const;
    void setListPrice(const double &list_price);
    bool is_list_price_Set() const;
    bool is_list_price_Valid() const;

    OAILocation1_1 getLocation() const;
    void setLocation(const OAILocation1_1 &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QString getPickupStoreInfo() const;
    void setPickupStoreInfo(const QString &pickup_store_info);
    bool is_pickup_store_info_Set() const;
    bool is_pickup_store_info_Valid() const;

    qint32 getQuantity() const;
    void setQuantity(const qint32 &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    QString getRestrictedFreight() const;
    void setRestrictedFreight(const QString &restricted_freight);
    bool is_restricted_freight_Set() const;
    bool is_restricted_freight_Valid() const;

    QString getSalesChannel() const;
    void setSalesChannel(const QString &sales_channel);
    bool is_sales_channel_Set() const;
    bool is_sales_channel_Valid() const;

    QString getSlaType() const;
    void setSlaType(const QString &sla_type);
    bool is_sla_type_Set() const;
    bool is_sla_type_Valid() const;

    QString getSlaTypeName() const;
    void setSlaTypeName(const QString &sla_type_name);
    bool is_sla_type_name_Set() const;
    bool is_sla_type_name_Valid() const;

    QString getTimeToDockPlusDockTime() const;
    void setTimeToDockPlusDockTime(const QString &time_to_dock_plus_dock_time);
    bool is_time_to_dock_plus_dock_time_Set() const;
    bool is_time_to_dock_plus_dock_time_Valid() const;

    QString getTotalTime() const;
    void setTotalTime(const QString &total_time);
    bool is_total_time_Set() const;
    bool is_total_time_Valid() const;

    QString getTransitTime() const;
    void setTransitTime(const QString &transit_time);
    bool is_transit_time_Set() const;
    bool is_transit_time_Valid() const;

    QString getWareHouseId() const;
    void setWareHouseId(const QString &ware_house_id);
    bool is_ware_house_id_Set() const;
    bool is_ware_house_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_aditional_time_blocked_days;
    bool m_aditional_time_blocked_days_isSet;
    bool m_aditional_time_blocked_days_isValid;

    qint32 m_availability_quantity;
    bool m_availability_quantity_isSet;
    bool m_availability_quantity_isValid;

    QList<QString> m_carrier_schedule;
    bool m_carrier_schedule_isSet;
    bool m_carrier_schedule_isValid;

    QString m_coordinates;
    bool m_coordinates_isSet;
    bool m_coordinates_isValid;

    bool m_delivery_on_weekends;
    bool m_delivery_on_weekends_isSet;
    bool m_delivery_on_weekends_isValid;

    QList<OAIDeliveryWindow_1> m_delivery_windows;
    bool m_delivery_windows_isSet;
    bool m_delivery_windows_isValid;

    QString m_dock_id;
    bool m_dock_id_isSet;
    bool m_dock_id_isValid;

    QString m_dock_time;
    bool m_dock_time_isSet;
    bool m_dock_time_isValid;

    QString m_freight_table_id;
    bool m_freight_table_id_isSet;
    bool m_freight_table_id_isValid;

    QString m_freight_table_name;
    bool m_freight_table_name_isSet;
    bool m_freight_table_name_isValid;

    QString m_item_id;
    bool m_item_id_isSet;
    bool m_item_id_isValid;

    double m_list_price;
    bool m_list_price_isSet;
    bool m_list_price_isValid;

    OAILocation1_1 m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QString m_pickup_store_info;
    bool m_pickup_store_info_isSet;
    bool m_pickup_store_info_isValid;

    qint32 m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    QString m_restricted_freight;
    bool m_restricted_freight_isSet;
    bool m_restricted_freight_isValid;

    QString m_sales_channel;
    bool m_sales_channel_isSet;
    bool m_sales_channel_isValid;

    QString m_sla_type;
    bool m_sla_type_isSet;
    bool m_sla_type_isValid;

    QString m_sla_type_name;
    bool m_sla_type_name_isSet;
    bool m_sla_type_name_isValid;

    QString m_time_to_dock_plus_dock_time;
    bool m_time_to_dock_plus_dock_time_isSet;
    bool m_time_to_dock_plus_dock_time_isValid;

    QString m_total_time;
    bool m_total_time_isSet;
    bool m_total_time_isValid;

    QString m_transit_time;
    bool m_transit_time_isSet;
    bool m_transit_time_isValid;

    QString m_ware_house_id;
    bool m_ware_house_id_isSet;
    bool m_ware_house_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICalculateSLA_200_response_inner_inner)

#endif // OAICalculateSLA_200_response_inner_inner_H
