/**
 * Logistics API
 *     >Check the [Fulfillment onboarding guide](https://developers.vtex.com/docs/guides/fulfillment). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about fulfillment and is organized by focusing on the developer's journey.    Logistics or fulfillment is the module responsible for shipping calculation and inventory management.     The variable `{{environment}}` can be filled with `vtexcommercestable` or `vtexcommercebeta`, depending on the environment you want to test.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIItem.h
 *
 * 
 */

#ifndef OAIItem_H
#define OAIItem_H

#include <QJsonObject>

#include "OAIDimension_1.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDimension_1;

class OAIItem : public OAIObject {
public:
    OAIItem();
    OAIItem(QString json);
    ~OAIItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAdditionalHandlingTime() const;
    void setAdditionalHandlingTime(const QString &additional_handling_time);
    bool is_additional_handling_time_Set() const;
    bool is_additional_handling_time_Valid() const;

    OAIDimension_1 getDimension() const;
    void setDimension(const OAIDimension_1 &dimension);
    bool is_dimension_Set() const;
    bool is_dimension_Valid() const;

    QString getGroupItemId() const;
    void setGroupItemId(const QString &group_item_id);
    bool is_group_item_id_Set() const;
    bool is_group_item_id_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<QString> getKitItem() const;
    void setKitItem(const QList<QString> &kit_item);
    bool is_kit_item_Set() const;
    bool is_kit_item_Valid() const;

    qint32 getPrice() const;
    void setPrice(const qint32 &price);
    bool is_price_Set() const;
    bool is_price_Valid() const;

    qint32 getQuantity() const;
    void setQuantity(const qint32 &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_additional_handling_time;
    bool m_additional_handling_time_isSet;
    bool m_additional_handling_time_isValid;

    OAIDimension_1 m_dimension;
    bool m_dimension_isSet;
    bool m_dimension_isValid;

    QString m_group_item_id;
    bool m_group_item_id_isSet;
    bool m_group_item_id_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<QString> m_kit_item;
    bool m_kit_item_isSet;
    bool m_kit_item_isValid;

    qint32 m_price;
    bool m_price_isSet;
    bool m_price_isValid;

    qint32 m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIItem)

#endif // OAIItem_H
