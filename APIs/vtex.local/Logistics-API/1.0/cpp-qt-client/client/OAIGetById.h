/**
 * Logistics API
 *     >Check the [Fulfillment onboarding guide](https://developers.vtex.com/docs/guides/fulfillment). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about fulfillment and is organized by focusing on the developer's journey.    Logistics or fulfillment is the module responsible for shipping calculation and inventory management.     The variable `{{environment}}` can be filled with `vtexcommercestable` or `vtexcommercebeta`, depending on the environment you want to test.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetById.h
 *
 * 
 */

#ifndef OAIGetById_H
#define OAIGetById_H

#include <QJsonObject>

#include "OAIAddress4_1.h"
#include "OAIBusinessHour_1.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAddress4_1;
class OAIBusinessHour_1;

class OAIGetById : public OAIObject {
public:
    OAIGetById();
    OAIGetById(QString json);
    ~OAIGetById() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAddress4_1 getAddress() const;
    void setAddress(const OAIAddress4_1 &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    QList<OAIBusinessHour_1> getBusinessHours() const;
    void setBusinessHours(const QList<OAIBusinessHour_1> &business_hours);
    bool is_business_hours_Set() const;
    bool is_business_hours_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getFormattedAddress() const;
    void setFormattedAddress(const QString &formatted_address);
    bool is_formatted_address_Set() const;
    bool is_formatted_address_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getInstructions() const;
    void setInstructions(const QString &instructions);
    bool is_instructions_Set() const;
    bool is_instructions_Valid() const;

    bool isIsActive() const;
    void setIsActive(const bool &is_active);
    bool is_is_active_Set() const;
    bool is_is_active_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getWarehouseId() const;
    void setWarehouseId(const QString &warehouse_id);
    bool is_warehouse_id_Set() const;
    bool is_warehouse_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAddress4_1 m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    QList<OAIBusinessHour_1> m_business_hours;
    bool m_business_hours_isSet;
    bool m_business_hours_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_formatted_address;
    bool m_formatted_address_isSet;
    bool m_formatted_address_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_instructions;
    bool m_instructions_isSet;
    bool m_instructions_isValid;

    bool m_is_active;
    bool m_is_active_isSet;
    bool m_is_active_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_warehouse_id;
    bool m_warehouse_id_isSet;
    bool m_warehouse_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetById)

#endif // OAIGetById_H
