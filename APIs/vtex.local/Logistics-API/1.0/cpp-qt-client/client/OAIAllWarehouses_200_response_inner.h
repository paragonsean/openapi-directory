/**
 * Logistics API
 *     >Check the [Fulfillment onboarding guide](https://developers.vtex.com/docs/guides/fulfillment). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about fulfillment and is organized by focusing on the developer's journey.    Logistics or fulfillment is the module responsible for shipping calculation and inventory management.     The variable `{{environment}}` can be filled with `vtexcommercestable` or `vtexcommercebeta`, depending on the environment you want to test.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAllWarehouses_200_response_inner.h
 *
 * 
 */

#ifndef OAIAllWarehouses_200_response_inner_H
#define OAIAllWarehouses_200_response_inner_H

#include <QJsonObject>

#include "OAIWarehouseDock1_1.h"
#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIWarehouseDock1_1;

class OAIAllWarehouses_200_response_inner : public OAIObject {
public:
    OAIAllWarehouses_200_response_inner();
    OAIAllWarehouses_200_response_inner(QString json);
    ~OAIAllWarehouses_200_response_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsActive() const;
    void setIsActive(const bool &is_active);
    bool is_is_active_Set() const;
    bool is_is_active_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<QJsonValue> getPickupPointIds() const;
    void setPickupPointIds(const QList<QJsonValue> &pickup_point_ids);
    bool is_pickup_point_ids_Set() const;
    bool is_pickup_point_ids_Valid() const;

    qint32 getPriority() const;
    void setPriority(const qint32 &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    QList<OAIWarehouseDock1_1> getWarehouseDocks() const;
    void setWarehouseDocks(const QList<OAIWarehouseDock1_1> &warehouse_docks);
    bool is_warehouse_docks_Set() const;
    bool is_warehouse_docks_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_active;
    bool m_is_active_isSet;
    bool m_is_active_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<QJsonValue> m_pickup_point_ids;
    bool m_pickup_point_ids_isSet;
    bool m_pickup_point_ids_isValid;

    qint32 m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    QList<OAIWarehouseDock1_1> m_warehouse_docks;
    bool m_warehouse_docks_isSet;
    bool m_warehouse_docks_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAllWarehouses_200_response_inner)

#endif // OAIAllWarehouses_200_response_inner_H
