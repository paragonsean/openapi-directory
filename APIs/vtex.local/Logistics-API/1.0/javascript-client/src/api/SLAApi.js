/**
 * Logistics API
 *     >Check the [Fulfillment onboarding guide](https://developers.vtex.com/docs/guides/fulfillment). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about fulfillment and is organized by focusing on the developer's journey.    Logistics or fulfillment is the module responsible for shipping calculation and inventory management.     The variable `{{environment}}` can be filled with `vtexcommercestable` or `vtexcommercebeta`, depending on the environment you want to test.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CalculateSLA200ResponseInnerInner from '../model/CalculateSLA200ResponseInnerInner';
import CalculateSLARequest1 from '../model/CalculateSLARequest1';

/**
* SLA service.
* @module api/SLAApi
* @version 1.0
*/
export default class SLAApi {

    /**
    * Constructs a new SLAApi. 
    * @alias module:api/SLAApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the calculateSLA operation.
     * @callback module:api/SLAApi~calculateSLACallback
     * @param {String} error Error message, if any.
     * @param {Array.<[CalculateSLA200ResponseInnerInner]>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Calculate SLA
     * Endpoint used by the checkout to calculate the Service Level Agreement (SLA), a contract between the store and shoppers on the order's fulfillment conditions, such as the shipping estimated date.     The calculation of the estimated date considers the [shipping policy](https://help.vtex.com/en/tutorial/shipping-policy--tutorials_140) and [loading dock](https://help.vtex.com/en/tutorial/loading-dock--5DY8xHEjOLYDVL41Urd5qj) related to the order.
     * @param {String} contentType Type of the content being sent.
     * @param {String} accept HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.
     * @param {Array.<module:model/CalculateSLARequest1>} calculateSLARequest1 
     * @param {module:api/SLAApi~calculateSLACallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<[CalculateSLA200ResponseInnerInner]>}
     */
    calculateSLA(contentType, accept, calculateSLARequest1, callback) {
      let postBody = calculateSLARequest1;
      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling calculateSLA");
      }
      // verify the required parameter 'accept' is set
      if (accept === undefined || accept === null) {
        throw new Error("Missing the required parameter 'accept' when calling calculateSLA");
      }
      // verify the required parameter 'calculateSLARequest1' is set
      if (calculateSLARequest1 === undefined || calculateSLARequest1 === null) {
        throw new Error("Missing the required parameter 'calculateSLARequest1' when calling calculateSLA");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Content-Type': contentType,
        'Accept': accept
      };
      let formParams = {
      };

      let authNames = ['appToken', 'appKey'];
      let contentTypes = ['application/json; charset=utf-8'];
      let accepts = ['application/json; charset=utf-8'];
      let returnType = [[CalculateSLA200ResponseInnerInner]];
      return this.apiClient.callApi(
        '/api/logistics/pvt/shipping/calculate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
