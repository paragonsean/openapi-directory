/**
 * Logistics API
 *     >Check the [Fulfillment onboarding guide](https://developers.vtex.com/docs/guides/fulfillment). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about fulfillment and is organized by focusing on the developer's journey.    Logistics or fulfillment is the module responsible for shipping calculation and inventory management.     The variable `{{environment}}` can be filled with `vtexcommercestable` or `vtexcommercebeta`, depending on the environment you want to test.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import RequestBody from '../model/RequestBody';
import RequestBody1 from '../model/RequestBody1';

/**
* ShippingPolicies service.
* @module api/ShippingPoliciesApi
* @version 1.0
*/
export default class ShippingPoliciesApi {

    /**
    * Constructs a new ShippingPoliciesApi. 
    * @alias module:api/ShippingPoliciesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiLogisticsPvtShippingPoliciesGet operation.
     * @callback module:api/ShippingPoliciesApi~apiLogisticsPvtShippingPoliciesGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List shipping policies
     * This endpoint lists existing shipping policies from carriers in your store.    > Note that, while most of our API endpoints return time fields in UTC, this endpoint returns **Scheduled Delivery** related time fields adjusted to the configured time zone of the account.
     * @param {String} accept HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand
     * @param {String} contentType Type of the content being sent
     * @param {String} page Desired number of pages to retrieve information from your Shipping Policies.
     * @param {String} perPage Desired number of items per page, to retrieve information from your Shipping Policies.
     * @param {module:api/ShippingPoliciesApi~apiLogisticsPvtShippingPoliciesGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiLogisticsPvtShippingPoliciesGet(accept, contentType, page, perPage, callback) {
      let postBody = null;
      // verify the required parameter 'accept' is set
      if (accept === undefined || accept === null) {
        throw new Error("Missing the required parameter 'accept' when calling apiLogisticsPvtShippingPoliciesGet");
      }
      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling apiLogisticsPvtShippingPoliciesGet");
      }
      // verify the required parameter 'page' is set
      if (page === undefined || page === null) {
        throw new Error("Missing the required parameter 'page' when calling apiLogisticsPvtShippingPoliciesGet");
      }
      // verify the required parameter 'perPage' is set
      if (perPage === undefined || perPage === null) {
        throw new Error("Missing the required parameter 'perPage' when calling apiLogisticsPvtShippingPoliciesGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'page': page,
        'perPage': perPage
      };
      let headerParams = {
        'Accept': accept,
        'Content-Type': contentType
      };
      let formParams = {
      };

      let authNames = ['appToken', 'appKey'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/logistics/pvt/shipping-policies', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiLogisticsPvtShippingPoliciesIdDelete operation.
     * @callback module:api/ShippingPoliciesApi~apiLogisticsPvtShippingPoliciesIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete shipping policies by ID
     * This endpoint deletes existing shipping policies from carriers in your store, searching by their IDs.
     * @param {String} accept HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand
     * @param {String} contentType Type of the content being sent
     * @param {String} id ID of the shipping policy.
     * @param {module:api/ShippingPoliciesApi~apiLogisticsPvtShippingPoliciesIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiLogisticsPvtShippingPoliciesIdDelete(accept, contentType, id, callback) {
      let postBody = null;
      // verify the required parameter 'accept' is set
      if (accept === undefined || accept === null) {
        throw new Error("Missing the required parameter 'accept' when calling apiLogisticsPvtShippingPoliciesIdDelete");
      }
      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling apiLogisticsPvtShippingPoliciesIdDelete");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiLogisticsPvtShippingPoliciesIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept': accept,
        'Content-Type': contentType
      };
      let formParams = {
      };

      let authNames = ['appToken', 'appKey'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/logistics/pvt/shipping-policies/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiLogisticsPvtShippingPoliciesIdGet operation.
     * @callback module:api/ShippingPoliciesApi~apiLogisticsPvtShippingPoliciesIdGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve shipping policy by ID
     * This endpoint lists existing [shipping policies](https://help.vtex.com/en/tutorial/shipping-policy--tutorials_140) from carriers in your store, searching by their IDs.    > Note that, while most of our API endpoints return time fields in UTC, this endpoint returns **Scheduled Delivery** related time fields adjusted to the configured time zone of the account.
     * @param {String} accept HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand
     * @param {String} contentType Type of the content being sent
     * @param {String} id ID of the shipping policy.
     * @param {module:api/ShippingPoliciesApi~apiLogisticsPvtShippingPoliciesIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiLogisticsPvtShippingPoliciesIdGet(accept, contentType, id, callback) {
      let postBody = null;
      // verify the required parameter 'accept' is set
      if (accept === undefined || accept === null) {
        throw new Error("Missing the required parameter 'accept' when calling apiLogisticsPvtShippingPoliciesIdGet");
      }
      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling apiLogisticsPvtShippingPoliciesIdGet");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiLogisticsPvtShippingPoliciesIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept': accept,
        'Content-Type': contentType
      };
      let formParams = {
      };

      let authNames = ['appToken', 'appKey'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/logistics/pvt/shipping-policies/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiLogisticsPvtShippingPoliciesIdPut operation.
     * @callback module:api/ShippingPoliciesApi~apiLogisticsPvtShippingPoliciesIdPutCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update shipping policy
     * This endpoint updates information on existing Shipping Policies from carriers.    > Note that, while most of our API endpoints return time fields in UTC, this endpoint returns **Scheduled Delivery** related time fields adjusted to the configured time zone of the account.
     * @param {String} accept HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand
     * @param {String} contentType Type of the content being sent
     * @param {String} id Shipping policy's ID
     * @param {Object} opts Optional parameters
     * @param {module:model/RequestBody1} [requestBody1] 
     * @param {module:api/ShippingPoliciesApi~apiLogisticsPvtShippingPoliciesIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiLogisticsPvtShippingPoliciesIdPut(accept, contentType, id, opts, callback) {
      opts = opts || {};
      let postBody = opts['requestBody1'];
      // verify the required parameter 'accept' is set
      if (accept === undefined || accept === null) {
        throw new Error("Missing the required parameter 'accept' when calling apiLogisticsPvtShippingPoliciesIdPut");
      }
      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling apiLogisticsPvtShippingPoliciesIdPut");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiLogisticsPvtShippingPoliciesIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept': accept,
        'Content-Type': contentType
      };
      let formParams = {
      };

      let authNames = ['appToken', 'appKey'];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/logistics/pvt/shipping-policies/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiLogisticsPvtShippingPoliciesPost operation.
     * @callback module:api/ShippingPoliciesApi~apiLogisticsPvtShippingPoliciesPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create shipping policy
     * This endpoint creates new shipping policies from carriers in your store.    > Note that, while most of our API endpoints return time fields in UTC, this endpoint returns **Scheduled Delivery** related time fields adjusted to the configured time zone of the account.
     * @param {String} accept HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand
     * @param {String} contentType Type of the content being sent
     * @param {Object} opts Optional parameters
     * @param {module:model/RequestBody} [requestBody] 
     * @param {module:api/ShippingPoliciesApi~apiLogisticsPvtShippingPoliciesPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiLogisticsPvtShippingPoliciesPost(accept, contentType, opts, callback) {
      opts = opts || {};
      let postBody = opts['requestBody'];
      // verify the required parameter 'accept' is set
      if (accept === undefined || accept === null) {
        throw new Error("Missing the required parameter 'accept' when calling apiLogisticsPvtShippingPoliciesPost");
      }
      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling apiLogisticsPvtShippingPoliciesPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept': accept,
        'Content-Type': contentType
      };
      let formParams = {
      };

      let authNames = ['appToken', 'appKey'];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/logistics/pvt/shipping-policies', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
