/**
 * Logistics API
 *     >Check the [Fulfillment onboarding guide](https://developers.vtex.com/docs/guides/fulfillment). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about fulfillment and is organized by focusing on the developer's journey.    Logistics or fulfillment is the module responsible for shipping calculation and inventory management.     The variable `{{environment}}` can be filled with `vtexcommercestable` or `vtexcommercebeta`, depending on the environment you want to test.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* ScheduledDelivery service.
* @module api/ScheduledDeliveryApi
* @version 1.0
*/
export default class ScheduledDeliveryApi {

    /**
    * Constructs a new ScheduledDeliveryApi. 
    * @alias module:api/ScheduledDeliveryApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the addBlockedDeliveryWindows operation.
     * @callback module:api/ScheduledDeliveryApi~addBlockedDeliveryWindowsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add blocked delivery windows
     * Adds blocked delivery windows for your store's shipping policies.    > Note that, while most of our API endpoints return time fields in UTC, this endpoint returns time adjusted to the configured time zone of the account.
     * @param {String} contentType Type of the content being sent
     * @param {String} accept HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand
     * @param {String} carrierId 
     * @param {String} body 
     * @param {module:api/ScheduledDeliveryApi~addBlockedDeliveryWindowsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    addBlockedDeliveryWindows(contentType, accept, carrierId, body, callback) {
      let postBody = body;
      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling addBlockedDeliveryWindows");
      }
      // verify the required parameter 'accept' is set
      if (accept === undefined || accept === null) {
        throw new Error("Missing the required parameter 'accept' when calling addBlockedDeliveryWindows");
      }
      // verify the required parameter 'carrierId' is set
      if (carrierId === undefined || carrierId === null) {
        throw new Error("Missing the required parameter 'carrierId' when calling addBlockedDeliveryWindows");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling addBlockedDeliveryWindows");
      }

      let pathParams = {
        'carrierId': carrierId
      };
      let queryParams = {
      };
      let headerParams = {
        'Content-Type': contentType,
        'Accept': accept
      };
      let formParams = {
      };

      let authNames = ['appToken', 'appKey'];
      let contentTypes = ['application/json; charset=utf-8'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/logistics/pvt/configuration/carriers/{carrierId}/adddayofweekblocked', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesGet operation.
     * @callback module:api/ScheduledDeliveryApi~apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Search capacity reservations in time range
     * Get information on all capacity reservations made to scheduled delivery windows in a given time range.    > Note that, while most of our API endpoints return time fields in UTC, this endpoint returns time adjusted to the configured time zone of the account.    > Note that the combined string `carrier@{capacityType}@{shippingPolicyId}` can be referred to as a \"resource\" in the API's messages.
     * @param {String} contentType Type of the content being sent
     * @param {String} accept HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand
     * @param {String} capacityType How the delivery capacity is measured as defined in the shipping policy. Capacity can be measured by maximum number of orders (`\"orders_quantity\"`) or SKUs (`\"skus_quantity\"`).
     * @param {String} shippingPolicyId ID of shipping policy to search.
     * @param {String} rangeStart Starting date of time range
     * @param {String} rangeEnd End date of time range.
     * @param {module:api/ScheduledDeliveryApi~apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesGet(contentType, accept, capacityType, shippingPolicyId, rangeStart, rangeEnd, callback) {
      let postBody = null;
      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesGet");
      }
      // verify the required parameter 'accept' is set
      if (accept === undefined || accept === null) {
        throw new Error("Missing the required parameter 'accept' when calling apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesGet");
      }
      // verify the required parameter 'capacityType' is set
      if (capacityType === undefined || capacityType === null) {
        throw new Error("Missing the required parameter 'capacityType' when calling apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesGet");
      }
      // verify the required parameter 'shippingPolicyId' is set
      if (shippingPolicyId === undefined || shippingPolicyId === null) {
        throw new Error("Missing the required parameter 'shippingPolicyId' when calling apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesGet");
      }
      // verify the required parameter 'rangeStart' is set
      if (rangeStart === undefined || rangeStart === null) {
        throw new Error("Missing the required parameter 'rangeStart' when calling apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesGet");
      }
      // verify the required parameter 'rangeEnd' is set
      if (rangeEnd === undefined || rangeEnd === null) {
        throw new Error("Missing the required parameter 'rangeEnd' when calling apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesGet");
      }

      let pathParams = {
        'capacityType': capacityType,
        'shippingPolicyId': shippingPolicyId
      };
      let queryParams = {
        'rangeStart': rangeStart,
        'rangeEnd': rangeEnd
      };
      let headerParams = {
        'Content-Type': contentType,
        'Accept': accept
      };
      let formParams = {
      };

      let authNames = ['appToken', 'appKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/logistics-capacity/resources/carrier@{capacityType}@{shippingPolicyId}/time-frames', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesWindowDayFwindowStartTimeTwindowEndTimeGet operation.
     * @callback module:api/ScheduledDeliveryApi~apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesWindowDayFwindowStartTimeTwindowEndTimeGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get capacity reservation usage by window
     * Retrieves capacity usage of a specific scheduled delivery reservation window.    > Note that, while most of our API endpoints return time fields in UTC, this endpoint returns time adjusted to the configured time zone of the account.    > Note that the combined string `carrier@{capacityType}@{shippingPolicyId}` can be referred to as a \"resource\" in the API's messages.
     * @param {String} contentType Type of the content being sent
     * @param {String} accept HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand
     * @param {String} capacityType How the delivery capacity is measured as defined in the shipping policy. Capacity can be measured by maximum number of orders (`\"orders_quantity\"`) or SKUs (`\"skus_quantity\"`).
     * @param {String} shippingPolicyId ID of shipping policy to search.
     * @param {String} windowDay Day of the specific scheduled delivery window to be consulted for reservations.
     * @param {String} windowStartTime Start time of specific scheduled delivery window to be consulted for reservations.
     * @param {String} windowEndTime End time of specific scheduled delivery window to be consulted for reservations.
     * @param {module:api/ScheduledDeliveryApi~apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesWindowDayFwindowStartTimeTwindowEndTimeGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesWindowDayFwindowStartTimeTwindowEndTimeGet(contentType, accept, capacityType, shippingPolicyId, windowDay, windowStartTime, windowEndTime, callback) {
      let postBody = null;
      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesWindowDayFwindowStartTimeTwindowEndTimeGet");
      }
      // verify the required parameter 'accept' is set
      if (accept === undefined || accept === null) {
        throw new Error("Missing the required parameter 'accept' when calling apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesWindowDayFwindowStartTimeTwindowEndTimeGet");
      }
      // verify the required parameter 'capacityType' is set
      if (capacityType === undefined || capacityType === null) {
        throw new Error("Missing the required parameter 'capacityType' when calling apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesWindowDayFwindowStartTimeTwindowEndTimeGet");
      }
      // verify the required parameter 'shippingPolicyId' is set
      if (shippingPolicyId === undefined || shippingPolicyId === null) {
        throw new Error("Missing the required parameter 'shippingPolicyId' when calling apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesWindowDayFwindowStartTimeTwindowEndTimeGet");
      }
      // verify the required parameter 'windowDay' is set
      if (windowDay === undefined || windowDay === null) {
        throw new Error("Missing the required parameter 'windowDay' when calling apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesWindowDayFwindowStartTimeTwindowEndTimeGet");
      }
      // verify the required parameter 'windowStartTime' is set
      if (windowStartTime === undefined || windowStartTime === null) {
        throw new Error("Missing the required parameter 'windowStartTime' when calling apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesWindowDayFwindowStartTimeTwindowEndTimeGet");
      }
      // verify the required parameter 'windowEndTime' is set
      if (windowEndTime === undefined || windowEndTime === null) {
        throw new Error("Missing the required parameter 'windowEndTime' when calling apiLogisticsCapacityResourcesCarriercapacityTypeshippingPolicyIdTimeFramesWindowDayFwindowStartTimeTwindowEndTimeGet");
      }

      let pathParams = {
        'capacityType': capacityType,
        'shippingPolicyId': shippingPolicyId,
        'windowDay': windowDay,
        'windowStartTime': windowStartTime,
        'windowEndTime': windowEndTime
      };
      let queryParams = {
      };
      let headerParams = {
        'Content-Type': contentType,
        'Accept': accept
      };
      let formParams = {
      };

      let authNames = ['appToken', 'appKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/logistics-capacity/resources/carrier@{capacityType}@{shippingPolicyId}/time-frames/{windowDay}F{windowStartTime}T{windowEndTime}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the removeBlockedDeliveryWindows operation.
     * @callback module:api/ScheduledDeliveryApi~removeBlockedDeliveryWindowsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove blocked delivery windows
     * Removes the blocked delivery windows set to your store's shipping policies.    > Note that, while most of our API endpoints return time fields in UTC, this endpoint returns time adjusted to the configured time zone of the account.
     * @param {String} contentType Type of the content being sent
     * @param {String} accept HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand
     * @param {String} carrierId 
     * @param {String} body 
     * @param {module:api/ScheduledDeliveryApi~removeBlockedDeliveryWindowsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    removeBlockedDeliveryWindows(contentType, accept, carrierId, body, callback) {
      let postBody = body;
      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling removeBlockedDeliveryWindows");
      }
      // verify the required parameter 'accept' is set
      if (accept === undefined || accept === null) {
        throw new Error("Missing the required parameter 'accept' when calling removeBlockedDeliveryWindows");
      }
      // verify the required parameter 'carrierId' is set
      if (carrierId === undefined || carrierId === null) {
        throw new Error("Missing the required parameter 'carrierId' when calling removeBlockedDeliveryWindows");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling removeBlockedDeliveryWindows");
      }

      let pathParams = {
        'carrierId': carrierId
      };
      let queryParams = {
      };
      let headerParams = {
        'Content-Type': contentType,
        'Accept': accept
      };
      let formParams = {
      };

      let authNames = ['appToken', 'appKey'];
      let contentTypes = ['application/json; charset=utf-8'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/logistics/pvt/configuration/carriers/{carrierId}/removedayofweekblocked', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the retrieveBlockedDeliveryWindows operation.
     * @callback module:api/ScheduledDeliveryApi~retrieveBlockedDeliveryWindowsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve blocked delivery windows
     * Lists all blocked delivery windows of your store's shipping policies, searching by carrier ID.    > Note that, while most of our API endpoints return time fields in UTC, this endpoint returns **Scheduled Delivery** related time fields adjusted to the configured time zone of the account.
     * @param {String} contentType Type of the content being sent
     * @param {String} accept HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand
     * @param {String} carrierId 
     * @param {module:api/ScheduledDeliveryApi~retrieveBlockedDeliveryWindowsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    retrieveBlockedDeliveryWindows(contentType, accept, carrierId, callback) {
      let postBody = null;
      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling retrieveBlockedDeliveryWindows");
      }
      // verify the required parameter 'accept' is set
      if (accept === undefined || accept === null) {
        throw new Error("Missing the required parameter 'accept' when calling retrieveBlockedDeliveryWindows");
      }
      // verify the required parameter 'carrierId' is set
      if (carrierId === undefined || carrierId === null) {
        throw new Error("Missing the required parameter 'carrierId' when calling retrieveBlockedDeliveryWindows");
      }

      let pathParams = {
        'carrierId': carrierId
      };
      let queryParams = {
      };
      let headerParams = {
        'Content-Type': contentType,
        'Accept': accept
      };
      let formParams = {
      };

      let authNames = ['appToken', 'appKey'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/logistics/pvt/configuration/carriers/{carrierId}/getdayofweekblocked', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
