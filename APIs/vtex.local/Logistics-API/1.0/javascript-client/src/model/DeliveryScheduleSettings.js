/**
 * Logistics API
 *     >Check the [Fulfillment onboarding guide](https://developers.vtex.com/docs/guides/fulfillment). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about fulfillment and is organized by focusing on the developer's journey.    Logistics or fulfillment is the module responsible for shipping calculation and inventory management.     The variable `{{environment}}` can be filled with `vtexcommercestable` or `vtexcommercebeta`, depending on the environment you want to test.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DayOfWeekForDeliveryInner from './DayOfWeekForDeliveryInner';

/**
 * The DeliveryScheduleSettings model module.
 * @module model/DeliveryScheduleSettings
 * @version 1.0
 */
class DeliveryScheduleSettings {
    /**
     * Constructs a new <code>DeliveryScheduleSettings</code>.
     * Settings for the Scheduled Delivery feature.
     * @alias module:model/DeliveryScheduleSettings
     * @param dayOfWeekForDelivery {Array.<module:model/DayOfWeekForDeliveryInner>} Select the chosen days for delivery. Values for each day of the week are: 0 = sunday, 1 = monday, 2 = tuesday, 3 = wednesday, 4 = thursday, 5 = friday, 6 = saturday. Make sure to add the available hours for the chosen days, following the example.
     * @param maxRangeDelivery {Number} Range of days available within a delivery window, for the customer to choose the scheduled delivery. For example, if the configured maxRangeDelivery is equal 7, and the customer buys something on a Tuesday, the options for scheduled delivery will be shown until the following Tuesday (7 days from the purchase day). If no options are available within the maxRangeDelivery set, this shipping policy won't be shown on the checkout.
     * @param useDeliverySchedule {Boolean} Select the Scheduled Delivery configuration.
     */
    constructor(dayOfWeekForDelivery, maxRangeDelivery, useDeliverySchedule) { 
        
        DeliveryScheduleSettings.initialize(this, dayOfWeekForDelivery, maxRangeDelivery, useDeliverySchedule);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, dayOfWeekForDelivery, maxRangeDelivery, useDeliverySchedule) { 
        obj['dayOfWeekForDelivery'] = dayOfWeekForDelivery;
        obj['maxRangeDelivery'] = maxRangeDelivery;
        obj['useDeliverySchedule'] = useDeliverySchedule;
    }

    /**
     * Constructs a <code>DeliveryScheduleSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeliveryScheduleSettings} obj Optional instance to populate.
     * @return {module:model/DeliveryScheduleSettings} The populated <code>DeliveryScheduleSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeliveryScheduleSettings();

            if (data.hasOwnProperty('dayOfWeekForDelivery')) {
                obj['dayOfWeekForDelivery'] = ApiClient.convertToType(data['dayOfWeekForDelivery'], [DayOfWeekForDeliveryInner]);
            }
            if (data.hasOwnProperty('maxRangeDelivery')) {
                obj['maxRangeDelivery'] = ApiClient.convertToType(data['maxRangeDelivery'], 'Number');
            }
            if (data.hasOwnProperty('useDeliverySchedule')) {
                obj['useDeliverySchedule'] = ApiClient.convertToType(data['useDeliverySchedule'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeliveryScheduleSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeliveryScheduleSettings</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DeliveryScheduleSettings.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['dayOfWeekForDelivery']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['dayOfWeekForDelivery'])) {
                throw new Error("Expected the field `dayOfWeekForDelivery` to be an array in the JSON data but got " + data['dayOfWeekForDelivery']);
            }
            // validate the optional field `dayOfWeekForDelivery` (array)
            for (const item of data['dayOfWeekForDelivery']) {
                DayOfWeekForDeliveryInner.validateJSON(item);
            };
        }

        return true;
    }


}

DeliveryScheduleSettings.RequiredProperties = ["dayOfWeekForDelivery", "maxRangeDelivery", "useDeliverySchedule"];

/**
 * Select the chosen days for delivery. Values for each day of the week are: 0 = sunday, 1 = monday, 2 = tuesday, 3 = wednesday, 4 = thursday, 5 = friday, 6 = saturday. Make sure to add the available hours for the chosen days, following the example.
 * @member {Array.<module:model/DayOfWeekForDeliveryInner>} dayOfWeekForDelivery
 */
DeliveryScheduleSettings.prototype['dayOfWeekForDelivery'] = undefined;

/**
 * Range of days available within a delivery window, for the customer to choose the scheduled delivery. For example, if the configured maxRangeDelivery is equal 7, and the customer buys something on a Tuesday, the options for scheduled delivery will be shown until the following Tuesday (7 days from the purchase day). If no options are available within the maxRangeDelivery set, this shipping policy won't be shown on the checkout.
 * @member {Number} maxRangeDelivery
 */
DeliveryScheduleSettings.prototype['maxRangeDelivery'] = undefined;

/**
 * Select the Scheduled Delivery configuration.
 * @member {Boolean} useDeliverySchedule
 */
DeliveryScheduleSettings.prototype['useDeliverySchedule'] = undefined;






export default DeliveryScheduleSettings;

