/**
 * Logistics API
 *     >Check the [Fulfillment onboarding guide](https://developers.vtex.com/docs/guides/fulfillment). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about fulfillment and is organized by focusing on the developer's journey.    Logistics or fulfillment is the module responsible for shipping calculation and inventory management.     The variable `{{environment}}` can be filled with `vtexcommercestable` or `vtexcommercebeta`, depending on the environment you want to test.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.LogisticsApi);
  }
}(this, function(expect, LogisticsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new LogisticsApi.ListReservationByWarehouseAndSKU();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ListReservationByWarehouseAndSKU', function() {
    it('should create an instance of ListReservationByWarehouseAndSKU', function() {
      // uncomment below and update the code to test ListReservationByWarehouseAndSKU
      //var instance = new LogisticsApi.ListReservationByWarehouseAndSKU();
      //expect(instance).to.be.a(LogisticsApi.ListReservationByWarehouseAndSKU);
    });

    it('should have the property aditionalTimeBlockedDays (base name: "aditionalTimeBlockedDays")', function() {
      // uncomment below and update the code to test the property aditionalTimeBlockedDays
      //var instance = new LogisticsApi.ListReservationByWarehouseAndSKU();
      //expect(instance).to.be();
    });

    it('should have the property availabilityQuantity (base name: "availabilityQuantity")', function() {
      // uncomment below and update the code to test the property availabilityQuantity
      //var instance = new LogisticsApi.ListReservationByWarehouseAndSKU();
      //expect(instance).to.be();
    });

    it('should have the property carrierSchedule (base name: "carrierSchedule")', function() {
      // uncomment below and update the code to test the property carrierSchedule
      //var instance = new LogisticsApi.ListReservationByWarehouseAndSKU();
      //expect(instance).to.be();
    });

    it('should have the property coordinates (base name: "coordinates")', function() {
      // uncomment below and update the code to test the property coordinates
      //var instance = new LogisticsApi.ListReservationByWarehouseAndSKU();
      //expect(instance).to.be();
    });

    it('should have the property deliveryOnWeekends (base name: "deliveryOnWeekends")', function() {
      // uncomment below and update the code to test the property deliveryOnWeekends
      //var instance = new LogisticsApi.ListReservationByWarehouseAndSKU();
      //expect(instance).to.be();
    });

    it('should have the property deliveryWindows (base name: "deliveryWindows")', function() {
      // uncomment below and update the code to test the property deliveryWindows
      //var instance = new LogisticsApi.ListReservationByWarehouseAndSKU();
      //expect(instance).to.be();
    });

    it('should have the property dockId (base name: "dockId")', function() {
      // uncomment below and update the code to test the property dockId
      //var instance = new LogisticsApi.ListReservationByWarehouseAndSKU();
      //expect(instance).to.be();
    });

    it('should have the property dockTime (base name: "dockTime")', function() {
      // uncomment below and update the code to test the property dockTime
      //var instance = new LogisticsApi.ListReservationByWarehouseAndSKU();
      //expect(instance).to.be();
    });

    it('should have the property freightTableId (base name: "freightTableId")', function() {
      // uncomment below and update the code to test the property freightTableId
      //var instance = new LogisticsApi.ListReservationByWarehouseAndSKU();
      //expect(instance).to.be();
    });

    it('should have the property freightTableName (base name: "freightTableName")', function() {
      // uncomment below and update the code to test the property freightTableName
      //var instance = new LogisticsApi.ListReservationByWarehouseAndSKU();
      //expect(instance).to.be();
    });

    it('should have the property itemId (base name: "itemId")', function() {
      // uncomment below and update the code to test the property itemId
      //var instance = new LogisticsApi.ListReservationByWarehouseAndSKU();
      //expect(instance).to.be();
    });

    it('should have the property listPrice (base name: "listPrice")', function() {
      // uncomment below and update the code to test the property listPrice
      //var instance = new LogisticsApi.ListReservationByWarehouseAndSKU();
      //expect(instance).to.be();
    });

    it('should have the property location (base name: "location")', function() {
      // uncomment below and update the code to test the property location
      //var instance = new LogisticsApi.ListReservationByWarehouseAndSKU();
      //expect(instance).to.be();
    });

    it('should have the property pickupStoreInfo (base name: "pickupStoreInfo")', function() {
      // uncomment below and update the code to test the property pickupStoreInfo
      //var instance = new LogisticsApi.ListReservationByWarehouseAndSKU();
      //expect(instance).to.be();
    });

    it('should have the property quantity (base name: "quantity")', function() {
      // uncomment below and update the code to test the property quantity
      //var instance = new LogisticsApi.ListReservationByWarehouseAndSKU();
      //expect(instance).to.be();
    });

    it('should have the property restrictedFreight (base name: "restrictedFreight")', function() {
      // uncomment below and update the code to test the property restrictedFreight
      //var instance = new LogisticsApi.ListReservationByWarehouseAndSKU();
      //expect(instance).to.be();
    });

    it('should have the property salesChannel (base name: "salesChannel")', function() {
      // uncomment below and update the code to test the property salesChannel
      //var instance = new LogisticsApi.ListReservationByWarehouseAndSKU();
      //expect(instance).to.be();
    });

    it('should have the property slaType (base name: "slaType")', function() {
      // uncomment below and update the code to test the property slaType
      //var instance = new LogisticsApi.ListReservationByWarehouseAndSKU();
      //expect(instance).to.be();
    });

    it('should have the property slaTypeName (base name: "slaTypeName")', function() {
      // uncomment below and update the code to test the property slaTypeName
      //var instance = new LogisticsApi.ListReservationByWarehouseAndSKU();
      //expect(instance).to.be();
    });

    it('should have the property timeToDockPlusDockTime (base name: "timeToDockPlusDockTime")', function() {
      // uncomment below and update the code to test the property timeToDockPlusDockTime
      //var instance = new LogisticsApi.ListReservationByWarehouseAndSKU();
      //expect(instance).to.be();
    });

    it('should have the property totalTime (base name: "totalTime")', function() {
      // uncomment below and update the code to test the property totalTime
      //var instance = new LogisticsApi.ListReservationByWarehouseAndSKU();
      //expect(instance).to.be();
    });

    it('should have the property transitTime (base name: "transitTime")', function() {
      // uncomment below and update the code to test the property transitTime
      //var instance = new LogisticsApi.ListReservationByWarehouseAndSKU();
      //expect(instance).to.be();
    });

    it('should have the property wareHouseId (base name: "wareHouseId")', function() {
      // uncomment below and update the code to test the property wareHouseId
      //var instance = new LogisticsApi.ListReservationByWarehouseAndSKU();
      //expect(instance).to.be();
    });

  });

}));
