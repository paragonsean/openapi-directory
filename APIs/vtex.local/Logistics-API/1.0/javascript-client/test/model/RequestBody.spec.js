/**
 * Logistics API
 *     >Check the [Fulfillment onboarding guide](https://developers.vtex.com/docs/guides/fulfillment). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about fulfillment and is organized by focusing on the developer's journey.    Logistics or fulfillment is the module responsible for shipping calculation and inventory management.     The variable `{{environment}}` can be filled with `vtexcommercestable` or `vtexcommercebeta`, depending on the environment you want to test.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.LogisticsApi);
  }
}(this, function(expect, LogisticsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new LogisticsApi.RequestBody();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RequestBody', function() {
    it('should create an instance of RequestBody', function() {
      // uncomment below and update the code to test RequestBody
      //var instance = new LogisticsApi.RequestBody();
      //expect(instance).to.be.a(LogisticsApi.RequestBody);
    });

    it('should have the property businessHourSettings (base name: "businessHourSettings")', function() {
      // uncomment below and update the code to test the property businessHourSettings
      //var instance = new LogisticsApi.RequestBody();
      //expect(instance).to.be();
    });

    it('should have the property carrierSchedule (base name: "carrierSchedule")', function() {
      // uncomment below and update the code to test the property carrierSchedule
      //var instance = new LogisticsApi.RequestBody();
      //expect(instance).to.be();
    });

    it('should have the property cubicWeightSettings (base name: "cubicWeightSettings")', function() {
      // uncomment below and update the code to test the property cubicWeightSettings
      //var instance = new LogisticsApi.RequestBody();
      //expect(instance).to.be();
    });

    it('should have the property deliveryScheduleSettings (base name: "deliveryScheduleSettings")', function() {
      // uncomment below and update the code to test the property deliveryScheduleSettings
      //var instance = new LogisticsApi.RequestBody();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new LogisticsApi.RequestBody();
      //expect(instance).to.be();
    });

    it('should have the property isActive (base name: "isActive")', function() {
      // uncomment below and update the code to test the property isActive
      //var instance = new LogisticsApi.RequestBody();
      //expect(instance).to.be();
    });

    it('should have the property maxDimension (base name: "maxDimension")', function() {
      // uncomment below and update the code to test the property maxDimension
      //var instance = new LogisticsApi.RequestBody();
      //expect(instance).to.be();
    });

    it('should have the property maximumValueAceptable (base name: "maximumValueAceptable")', function() {
      // uncomment below and update the code to test the property maximumValueAceptable
      //var instance = new LogisticsApi.RequestBody();
      //expect(instance).to.be();
    });

    it('should have the property minimumValueAceptable (base name: "minimumValueAceptable")', function() {
      // uncomment below and update the code to test the property minimumValueAceptable
      //var instance = new LogisticsApi.RequestBody();
      //expect(instance).to.be();
    });

    it('should have the property modalSettings (base name: "modalSettings")', function() {
      // uncomment below and update the code to test the property modalSettings
      //var instance = new LogisticsApi.RequestBody();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new LogisticsApi.RequestBody();
      //expect(instance).to.be();
    });

    it('should have the property numberOfItemsPerShipment (base name: "numberOfItemsPerShipment")', function() {
      // uncomment below and update the code to test the property numberOfItemsPerShipment
      //var instance = new LogisticsApi.RequestBody();
      //expect(instance).to.be();
    });

    it('should have the property pickupPointsSettings (base name: "pickupPointsSettings")', function() {
      // uncomment below and update the code to test the property pickupPointsSettings
      //var instance = new LogisticsApi.RequestBody();
      //expect(instance).to.be();
    });

    it('should have the property shippingMethod (base name: "shippingMethod")', function() {
      // uncomment below and update the code to test the property shippingMethod
      //var instance = new LogisticsApi.RequestBody();
      //expect(instance).to.be();
    });

    it('should have the property weekendAndHolidays (base name: "weekendAndHolidays")', function() {
      // uncomment below and update the code to test the property weekendAndHolidays
      //var instance = new LogisticsApi.RequestBody();
      //expect(instance).to.be();
    });

  });

}));
