/*
 * Intelligent Search API
 * >ℹ️ Onboarding guide  >  > Check the new [Search onboarding guide](https://developers.vtex.com/docs/guides/search-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Search and is organized by focusing on the developer's journey.    This API is from the [VTEX Intelligent Search](https://help.vtex.com/en/tracks/vtex-intelligent-search--19wrbB7nEQcmwzDPl1l4Cb/3qgT47zY08biLP3d5os3DG) solution, an alternative to the platform’s native search, as it assists the customer in their purchase journey, and it presents results since the first interaction with the search bar.    ## Index  - [Get list of the 10 most searched terms](https://developers.vtex.com/docs/api-reference/intelligent-search-api#get-/top_searches)  - [Get list of suggested terms and attributes similar to the search term](https://developers.vtex.com/docs/api-reference/intelligent-search-api#get-/autocomplete_suggestions)  - [Get attempt of correction of a misspelled term](https://developers.vtex.com/docs/api-reference/intelligent-search-api#get-/correction_search)  - [Get list of banners registered for query](https://developers.vtex.com/docs/api-reference/intelligent-search-api#get-/banners/-facets-)  - [Get list of suggested terms similar to the search term](https://developers.vtex.com/docs/api-reference/intelligent-search-api#get-/search_suggestions)  - [Get list of products for a query](https://developers.vtex.com/docs/api-reference/intelligent-search-api#get-/product_search/-facets-)  - [Get list of the possible facets for a given query](https://developers.vtex.com/docs/api-reference/intelligent-search-api#get-/facets/-facets-)
 *
 * The version of the OpenAPI document: 0.1.12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Banners;
import java.math.BigDecimal;
import org.openapitools.client.model.Correction;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.Facets;
import org.openapitools.client.model.ProductSearch;
import org.openapitools.client.model.SearchSuggestions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProductListPageApi
 */
@Disabled
public class ProductListPageApiTest {

    private final ProductListPageApi api = new ProductListPageApi();

    /**
     * Get list of banners registered for query
     *
     * Lists the banners registered for a given query. Check the [configuring banners documentation](https://help.vtex.com/en/tracks/vtex-intelligent-search--19wrbB7nEQcmwzDPl1l4Cb/4ViKEivLJtJsvpaW0aqIQ5) for a full explanation of the banner feature.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bannersFacetsGetTest() throws ApiException {
        String facets = null;
        String query = null;
        String locale = null;
        Banners response = api.bannersFacetsGet(facets, query, locale);
        // TODO: test validations
    }

    /**
     * Get attempt of correction of a misspelled term
     *
     * Tries to correct a misspelled term from the search.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void correctionSearchGetTest() throws ApiException {
        String query = null;
        String locale = null;
        Correction response = api.correctionSearchGet(query, locale);
        // TODO: test validations
    }

    /**
     * Get list of the possible facets for a given query
     *
     * Lists the possible facets for a given query
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void facetsFacetsGetTest() throws ApiException {
        String facets = null;
        String query = null;
        String locale = null;
        Boolean hideUnavailableItems = null;
        Facets response = api.facetsFacetsGet(facets, query, locale, hideUnavailableItems);
        // TODO: test validations
    }

    /**
     * Get list of products for a query
     *
     * Lists the products for a given query.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productSearchFacetsGetTest() throws ApiException {
        String facets = null;
        String query = null;
        String simulationBehavior = null;
        BigDecimal count = null;
        BigDecimal page = null;
        String sort = null;
        String locale = null;
        Boolean hideUnavailableItems = null;
        ProductSearch response = api.productSearchFacetsGet(facets, query, simulationBehavior, count, page, sort, locale, hideUnavailableItems);
        // TODO: test validations
    }

    /**
     * Get list of suggested terms similar to the search term
     *
     * Lists suggested terms similar to the search term.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchSuggestionsGetTest() throws ApiException {
        String query = null;
        String locale = null;
        SearchSuggestions response = api.searchSuggestionsGet(query, locale);
        // TODO: test validations
    }

}
