/**
 * Intelligent Search API
 * >ℹ️ Onboarding guide  >  > Check the new [Search onboarding guide](https://developers.vtex.com/docs/guides/search-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Search and is organized by focusing on the developer's journey.    This API is from the [VTEX Intelligent Search](https://help.vtex.com/en/tracks/vtex-intelligent-search--19wrbB7nEQcmwzDPl1l4Cb/3qgT47zY08biLP3d5os3DG) solution, an alternative to the platform’s native search, as it assists the customer in their purchase journey, and it presents results since the first interaction with the search bar.    ## Index  - [Get list of the 10 most searched terms](https://developers.vtex.com/docs/api-reference/intelligent-search-api#get-/top_searches)  - [Get list of suggested terms and attributes similar to the search term](https://developers.vtex.com/docs/api-reference/intelligent-search-api#get-/autocomplete_suggestions)  - [Get attempt of correction of a misspelled term](https://developers.vtex.com/docs/api-reference/intelligent-search-api#get-/correction_search)  - [Get list of banners registered for query](https://developers.vtex.com/docs/api-reference/intelligent-search-api#get-/banners/-facets-)  - [Get list of suggested terms similar to the search term](https://developers.vtex.com/docs/api-reference/intelligent-search-api#get-/search_suggestions)  - [Get list of products for a query](https://developers.vtex.com/docs/api-reference/intelligent-search-api#get-/product_search/-facets-)  - [Get list of the possible facets for a given query](https://developers.vtex.com/docs/api-reference/intelligent-search-api#get-/facets/-facets-)
 *
 * The version of the OpenAPI document: 0.1.12
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFacets.h
 *
 * 
 */

#ifndef OAIFacets_H
#define OAIFacets_H

#include <QJsonObject>

#include "OAIFacets_breadcrumb_inner.h"
#include "OAIFacets_facets_inner.h"
#include "OAIFacets_queryArgs.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFacets_breadcrumb_inner;
class OAIFacets_facets_inner;
class OAIFacets_queryArgs;

class OAIFacets : public OAIObject {
public:
    OAIFacets();
    OAIFacets(QString json);
    ~OAIFacets() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIFacets_breadcrumb_inner> getBreadcrumb() const;
    void setBreadcrumb(const QList<OAIFacets_breadcrumb_inner> &breadcrumb);
    bool is_breadcrumb_Set() const;
    bool is_breadcrumb_Valid() const;

    QList<OAIFacets_facets_inner> getFacets() const;
    void setFacets(const QList<OAIFacets_facets_inner> &facets);
    bool is_facets_Set() const;
    bool is_facets_Valid() const;

    OAIFacets_queryArgs getQueryArgs() const;
    void setQueryArgs(const OAIFacets_queryArgs &query_args);
    bool is_query_args_Set() const;
    bool is_query_args_Valid() const;

    bool isSampling() const;
    void setSampling(const bool &sampling);
    bool is_sampling_Set() const;
    bool is_sampling_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIFacets_breadcrumb_inner> m_breadcrumb;
    bool m_breadcrumb_isSet;
    bool m_breadcrumb_isValid;

    QList<OAIFacets_facets_inner> m_facets;
    bool m_facets_isSet;
    bool m_facets_isValid;

    OAIFacets_queryArgs m_query_args;
    bool m_query_args_isSet;
    bool m_query_args_isValid;

    bool m_sampling;
    bool m_sampling_isSet;
    bool m_sampling_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFacets)

#endif // OAIFacets_H
