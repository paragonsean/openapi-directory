/**
 * Intelligent Search API
 * >ℹ️ Onboarding guide  >  > Check the new [Search onboarding guide](https://developers.vtex.com/docs/guides/search-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Search and is organized by focusing on the developer's journey.    This API is from the [VTEX Intelligent Search](https://help.vtex.com/en/tracks/vtex-intelligent-search--19wrbB7nEQcmwzDPl1l4Cb/3qgT47zY08biLP3d5os3DG) solution, an alternative to the platform’s native search, as it assists the customer in their purchase journey, and it presents results since the first interaction with the search bar.    ## Index  - [Get list of the 10 most searched terms](https://developers.vtex.com/docs/api-reference/intelligent-search-api#get-/top_searches)  - [Get list of suggested terms and attributes similar to the search term](https://developers.vtex.com/docs/api-reference/intelligent-search-api#get-/autocomplete_suggestions)  - [Get attempt of correction of a misspelled term](https://developers.vtex.com/docs/api-reference/intelligent-search-api#get-/correction_search)  - [Get list of banners registered for query](https://developers.vtex.com/docs/api-reference/intelligent-search-api#get-/banners/-facets-)  - [Get list of suggested terms similar to the search term](https://developers.vtex.com/docs/api-reference/intelligent-search-api#get-/search_suggestions)  - [Get list of products for a query](https://developers.vtex.com/docs/api-reference/intelligent-search-api#get-/product_search/-facets-)  - [Get list of the possible facets for a given query](https://developers.vtex.com/docs/api-reference/intelligent-search-api#get-/facets/-facets-)
 *
 * The version of the OpenAPI document: 0.1.12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AutocompleteSearchSuggestions from './model/AutocompleteSearchSuggestions';
import AutocompleteSearchSuggestionsSearchesInner from './model/AutocompleteSearchSuggestionsSearchesInner';
import AutocompleteSearchSuggestionsSearchesInnerAttributesInner from './model/AutocompleteSearchSuggestionsSearchesInnerAttributesInner';
import Banners from './model/Banners';
import BannersBannersInner from './model/BannersBannersInner';
import Correction from './model/Correction';
import CorrectionCorrection from './model/CorrectionCorrection';
import Error from './model/Error';
import Facets from './model/Facets';
import FacetsBreadcrumbInner from './model/FacetsBreadcrumbInner';
import FacetsFacetsInner from './model/FacetsFacetsInner';
import FacetsFacetsInnerValuesInner from './model/FacetsFacetsInnerValuesInner';
import FacetsQueryArgs from './model/FacetsQueryArgs';
import FacetsQueryArgsSelectedFacetsInner from './model/FacetsQueryArgsSelectedFacetsInner';
import ProductSearch from './model/ProductSearch';
import ProductSearchCorrection from './model/ProductSearchCorrection';
import SearchSuggestions from './model/SearchSuggestions';
import SearchSuggestionsSearchesInner from './model/SearchSuggestionsSearchesInner';
import TopSearches from './model/TopSearches';
import AutocompleteApi from './api/AutocompleteApi';
import ProductListPageApi from './api/ProductListPageApi';


/**
* &gt;ℹ️ Onboarding guide  &gt;  &gt; Check the new [Search onboarding guide](https://developers.vtex.com/docs/guides/search-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Search and is organized by focusing on the developer&#39;s journey.    This API is from the [VTEX Intelligent Search](https://help.vtex.com/en/tracks/vtex-intelligent-search--19wrbB7nEQcmwzDPl1l4Cb/3qgT47zY08biLP3d5os3DG) solution, an alternative to the platform’s native search, as it assists the customer in their purchase journey, and it presents results since the first interaction with the search bar.    ## Index  - [Get list of the 10 most searched terms](https://developers.vtex.com/docs/api-reference/intelligent-search-api#get-/top_searches)  - [Get list of suggested terms and attributes similar to the search term](https://developers.vtex.com/docs/api-reference/intelligent-search-api#get-/autocomplete_suggestions)  - [Get attempt of correction of a misspelled term](https://developers.vtex.com/docs/api-reference/intelligent-search-api#get-/correction_search)  - [Get list of banners registered for query](https://developers.vtex.com/docs/api-reference/intelligent-search-api#get-/banners/-facets-)  - [Get list of suggested terms similar to the search term](https://developers.vtex.com/docs/api-reference/intelligent-search-api#get-/search_suggestions)  - [Get list of products for a query](https://developers.vtex.com/docs/api-reference/intelligent-search-api#get-/product_search/-facets-)  - [Get list of the possible facets for a given query](https://developers.vtex.com/docs/api-reference/intelligent-search-api#get-/facets/-facets-).<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var IntelligentSearchApi = require('index'); // See note below*.
* var xxxSvc = new IntelligentSearchApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new IntelligentSearchApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new IntelligentSearchApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new IntelligentSearchApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 0.1.12
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AutocompleteSearchSuggestions model constructor.
     * @property {module:model/AutocompleteSearchSuggestions}
     */
    AutocompleteSearchSuggestions,

    /**
     * The AutocompleteSearchSuggestionsSearchesInner model constructor.
     * @property {module:model/AutocompleteSearchSuggestionsSearchesInner}
     */
    AutocompleteSearchSuggestionsSearchesInner,

    /**
     * The AutocompleteSearchSuggestionsSearchesInnerAttributesInner model constructor.
     * @property {module:model/AutocompleteSearchSuggestionsSearchesInnerAttributesInner}
     */
    AutocompleteSearchSuggestionsSearchesInnerAttributesInner,

    /**
     * The Banners model constructor.
     * @property {module:model/Banners}
     */
    Banners,

    /**
     * The BannersBannersInner model constructor.
     * @property {module:model/BannersBannersInner}
     */
    BannersBannersInner,

    /**
     * The Correction model constructor.
     * @property {module:model/Correction}
     */
    Correction,

    /**
     * The CorrectionCorrection model constructor.
     * @property {module:model/CorrectionCorrection}
     */
    CorrectionCorrection,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The Facets model constructor.
     * @property {module:model/Facets}
     */
    Facets,

    /**
     * The FacetsBreadcrumbInner model constructor.
     * @property {module:model/FacetsBreadcrumbInner}
     */
    FacetsBreadcrumbInner,

    /**
     * The FacetsFacetsInner model constructor.
     * @property {module:model/FacetsFacetsInner}
     */
    FacetsFacetsInner,

    /**
     * The FacetsFacetsInnerValuesInner model constructor.
     * @property {module:model/FacetsFacetsInnerValuesInner}
     */
    FacetsFacetsInnerValuesInner,

    /**
     * The FacetsQueryArgs model constructor.
     * @property {module:model/FacetsQueryArgs}
     */
    FacetsQueryArgs,

    /**
     * The FacetsQueryArgsSelectedFacetsInner model constructor.
     * @property {module:model/FacetsQueryArgsSelectedFacetsInner}
     */
    FacetsQueryArgsSelectedFacetsInner,

    /**
     * The ProductSearch model constructor.
     * @property {module:model/ProductSearch}
     */
    ProductSearch,

    /**
     * The ProductSearchCorrection model constructor.
     * @property {module:model/ProductSearchCorrection}
     */
    ProductSearchCorrection,

    /**
     * The SearchSuggestions model constructor.
     * @property {module:model/SearchSuggestions}
     */
    SearchSuggestions,

    /**
     * The SearchSuggestionsSearchesInner model constructor.
     * @property {module:model/SearchSuggestionsSearchesInner}
     */
    SearchSuggestionsSearchesInner,

    /**
     * The TopSearches model constructor.
     * @property {module:model/TopSearches}
     */
    TopSearches,

    /**
    * The AutocompleteApi service constructor.
    * @property {module:api/AutocompleteApi}
    */
    AutocompleteApi,

    /**
    * The ProductListPageApi service constructor.
    * @property {module:api/ProductListPageApi}
    */
    ProductListPageApi
};
