# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.autocomplete_search_suggestions_searches_inner_attributes_inner import AutocompleteSearchSuggestionsSearchesInnerAttributesInner
from openapi_server import util


class AutocompleteSearchSuggestionsSearchesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributes: List[AutocompleteSearchSuggestionsSearchesInnerAttributesInner]=None, count: float=None, term: str=None):
        """AutocompleteSearchSuggestionsSearchesInner - a model defined in OpenAPI

        :param attributes: The attributes of this AutocompleteSearchSuggestionsSearchesInner.
        :param count: The count of this AutocompleteSearchSuggestionsSearchesInner.
        :param term: The term of this AutocompleteSearchSuggestionsSearchesInner.
        """
        self.openapi_types = {
            'attributes': List[AutocompleteSearchSuggestionsSearchesInnerAttributesInner],
            'count': float,
            'term': str
        }

        self.attribute_map = {
            'attributes': 'attributes',
            'count': 'count',
            'term': 'term'
        }

        self._attributes = attributes
        self._count = count
        self._term = term

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AutocompleteSearchSuggestionsSearchesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AutocompleteSearchSuggestions_searches_inner of this AutocompleteSearchSuggestionsSearchesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributes(self):
        """Gets the attributes of this AutocompleteSearchSuggestionsSearchesInner.

        List of facets in which the term can be searched.

        :return: The attributes of this AutocompleteSearchSuggestionsSearchesInner.
        :rtype: List[AutocompleteSearchSuggestionsSearchesInnerAttributesInner]
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this AutocompleteSearchSuggestionsSearchesInner.

        List of facets in which the term can be searched.

        :param attributes: The attributes of this AutocompleteSearchSuggestionsSearchesInner.
        :type attributes: List[AutocompleteSearchSuggestionsSearchesInnerAttributesInner]
        """

        self._attributes = attributes

    @property
    def count(self):
        """Gets the count of this AutocompleteSearchSuggestionsSearchesInner.

        Number of times the term was searched.

        :return: The count of this AutocompleteSearchSuggestionsSearchesInner.
        :rtype: float
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this AutocompleteSearchSuggestionsSearchesInner.

        Number of times the term was searched.

        :param count: The count of this AutocompleteSearchSuggestionsSearchesInner.
        :type count: float
        """

        self._count = count

    @property
    def term(self):
        """Gets the term of this AutocompleteSearchSuggestionsSearchesInner.

        Search term.

        :return: The term of this AutocompleteSearchSuggestionsSearchesInner.
        :rtype: str
        """
        return self._term

    @term.setter
    def term(self, term):
        """Sets the term of this AutocompleteSearchSuggestionsSearchesInner.

        Search term.

        :param term: The term of this AutocompleteSearchSuggestionsSearchesInner.
        :type term: str
        """

        self._term = term
