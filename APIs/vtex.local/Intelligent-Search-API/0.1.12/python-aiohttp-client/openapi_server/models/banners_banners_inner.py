# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BannersBannersInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, area: str=None, html: str=None, id: str=None, name: str=None):
        """BannersBannersInner - a model defined in OpenAPI

        :param area: The area of this BannersBannersInner.
        :param html: The html of this BannersBannersInner.
        :param id: The id of this BannersBannersInner.
        :param name: The name of this BannersBannersInner.
        """
        self.openapi_types = {
            'area': str,
            'html': str,
            'id': str,
            'name': str
        }

        self.attribute_map = {
            'area': 'area',
            'html': 'html',
            'id': 'id',
            'name': 'name'
        }

        self._area = area
        self._html = html
        self._id = id
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BannersBannersInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Banners_banners_inner of this BannersBannersInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def area(self):
        """Gets the area of this BannersBannersInner.

        Banner area.

        :return: The area of this BannersBannersInner.
        :rtype: str
        """
        return self._area

    @area.setter
    def area(self, area):
        """Sets the area of this BannersBannersInner.

        Banner area.

        :param area: The area of this BannersBannersInner.
        :type area: str
        """

        self._area = area

    @property
    def html(self):
        """Gets the html of this BannersBannersInner.

        Banner HTML.

        :return: The html of this BannersBannersInner.
        :rtype: str
        """
        return self._html

    @html.setter
    def html(self, html):
        """Sets the html of this BannersBannersInner.

        Banner HTML.

        :param html: The html of this BannersBannersInner.
        :type html: str
        """

        self._html = html

    @property
    def id(self):
        """Gets the id of this BannersBannersInner.

        Banner id.

        :return: The id of this BannersBannersInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this BannersBannersInner.

        Banner id.

        :param id: The id of this BannersBannersInner.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this BannersBannersInner.

        Banner name.

        :return: The name of this BannersBannersInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this BannersBannersInner.

        Banner name.

        :param name: The name of this BannersBannersInner.
        :type name: str
        """

        self._name = name
