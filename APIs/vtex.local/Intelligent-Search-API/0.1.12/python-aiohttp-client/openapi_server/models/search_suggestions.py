# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.search_suggestions_searches_inner import SearchSuggestionsSearchesInner
from openapi_server import util


class SearchSuggestions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, searches: List[SearchSuggestionsSearchesInner]=None):
        """SearchSuggestions - a model defined in OpenAPI

        :param searches: The searches of this SearchSuggestions.
        """
        self.openapi_types = {
            'searches': List[SearchSuggestionsSearchesInner]
        }

        self.attribute_map = {
            'searches': 'searches'
        }

        self._searches = searches

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchSuggestions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchSuggestions of this SearchSuggestions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def searches(self):
        """Gets the searches of this SearchSuggestions.

        List of suggested terms.

        :return: The searches of this SearchSuggestions.
        :rtype: List[SearchSuggestionsSearchesInner]
        """
        return self._searches

    @searches.setter
    def searches(self, searches):
        """Sets the searches of this SearchSuggestions.

        List of suggested terms.

        :param searches: The searches of this SearchSuggestions.
        :type searches: List[SearchSuggestionsSearchesInner]
        """

        self._searches = searches
