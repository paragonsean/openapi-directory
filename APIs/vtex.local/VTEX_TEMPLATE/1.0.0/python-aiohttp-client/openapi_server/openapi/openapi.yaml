openapi: 3.0.0
info:
  license:
    name: MIT
  title: Pets Api
  version: 1.0.0
  x-origin:
  - format: openapi
    url: https://raw.githubusercontent.com/vtex/openapi-schemas/master/VTEX_TEMPLATE.json
    version: "3.0"
  x-providerName: vtex.local
  x-serviceName: VTEX_TEMPLATE
servers:
- url: https://vtex.local
- description: VTEX server url
  url: "https://{accountName}.{environment}.com.br"
  variables:
    accountName:
      default: "{accountName}"
      description: Your VTEX account name
    environment:
      default: "{environment}"
      enum:
      - vtexcommercestable
      - myvtex
security:
- appKey: []
  appToken: []
paths:
  /pets:
    get:
      operationId: list_pets
      parameters:
      - description: How many items to return at one time (max 100)
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pets'
          description: An paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              explode: false
              schema:
                type: string
              style: simple
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      summary: List all pets
      tags:
      - pets
      x-openapi-router-controller: openapi_server.controllers.pets_controller
    post:
      operationId: create_pets
      responses:
        "201":
          description: Null response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      summary: Create a pet
      tags:
      - pets
      x-openapi-router-controller: openapi_server.controllers.pets_controller
  /pets/{petId}:
    get:
      operationId: show_pet_by_id
      parameters:
      - description: The id of the pet to retrieve
        explode: false
        in: path
        name: petId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pets'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      summary: Info for a specific pet
      tags:
      - pets
      x-openapi-router-controller: openapi_server.controllers.pets_controller
components:
  schemas:
    Error:
      example:
        code: 6
        message: message
      properties:
        code:
          format: int32
          title: code
          type: integer
        message:
          title: message
          type: string
      required:
      - code
      - message
      title: Error
    Pet:
      example:
        name: name
        id: 0
        tag: tag
      properties:
        id:
          format: int64
          title: id
          type: integer
        name:
          title: name
          type: string
        tag:
          title: tag
          type: string
      required:
      - id
      - name
      title: Pet
    Pets:
      items:
        $ref: '#/components/schemas/Pet'
      type: array
  securitySchemes:
    appKey:
      in: header
      name: X-VTEX-API-AppKey
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_appKey
    appToken:
      in: header
      name: X-VTEX-API-AppToken
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_appToken
