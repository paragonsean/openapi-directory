# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApiCatalogPvtCollectionPost200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, date_from: str=None, date_to: str=None, description: str=None, highlight: bool=None, id: int=None, name: str=None, searchable: bool=None, total_products: int=None, type: str=None):
        """ApiCatalogPvtCollectionPost200Response - a model defined in OpenAPI

        :param date_from: The date_from of this ApiCatalogPvtCollectionPost200Response.
        :param date_to: The date_to of this ApiCatalogPvtCollectionPost200Response.
        :param description: The description of this ApiCatalogPvtCollectionPost200Response.
        :param highlight: The highlight of this ApiCatalogPvtCollectionPost200Response.
        :param id: The id of this ApiCatalogPvtCollectionPost200Response.
        :param name: The name of this ApiCatalogPvtCollectionPost200Response.
        :param searchable: The searchable of this ApiCatalogPvtCollectionPost200Response.
        :param total_products: The total_products of this ApiCatalogPvtCollectionPost200Response.
        :param type: The type of this ApiCatalogPvtCollectionPost200Response.
        """
        self.openapi_types = {
            'date_from': str,
            'date_to': str,
            'description': str,
            'highlight': bool,
            'id': int,
            'name': str,
            'searchable': bool,
            'total_products': int,
            'type': str
        }

        self.attribute_map = {
            'date_from': 'DateFrom',
            'date_to': 'DateTo',
            'description': 'Description',
            'highlight': 'Highlight',
            'id': 'Id',
            'name': 'Name',
            'searchable': 'Searchable',
            'total_products': 'TotalProducts',
            'type': 'Type'
        }

        self._date_from = date_from
        self._date_to = date_to
        self._description = description
        self._highlight = highlight
        self._id = id
        self._name = name
        self._searchable = searchable
        self._total_products = total_products
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiCatalogPvtCollectionPost200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _api_catalog_pvt_collection_post_200_response of this ApiCatalogPvtCollectionPost200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def date_from(self):
        """Gets the date_from of this ApiCatalogPvtCollectionPost200Response.

        Initial value date for the Collection.

        :return: The date_from of this ApiCatalogPvtCollectionPost200Response.
        :rtype: str
        """
        return self._date_from

    @date_from.setter
    def date_from(self, date_from):
        """Sets the date_from of this ApiCatalogPvtCollectionPost200Response.

        Initial value date for the Collection.

        :param date_from: The date_from of this ApiCatalogPvtCollectionPost200Response.
        :type date_from: str
        """

        self._date_from = date_from

    @property
    def date_to(self):
        """Gets the date_to of this ApiCatalogPvtCollectionPost200Response.

        Final value date for the Collection.

        :return: The date_to of this ApiCatalogPvtCollectionPost200Response.
        :rtype: str
        """
        return self._date_to

    @date_to.setter
    def date_to(self, date_to):
        """Sets the date_to of this ApiCatalogPvtCollectionPost200Response.

        Final value date for the Collection.

        :param date_to: The date_to of this ApiCatalogPvtCollectionPost200Response.
        :type date_to: str
        """

        self._date_to = date_to

    @property
    def description(self):
        """Gets the description of this ApiCatalogPvtCollectionPost200Response.

        Collection description.

        :return: The description of this ApiCatalogPvtCollectionPost200Response.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ApiCatalogPvtCollectionPost200Response.

        Collection description.

        :param description: The description of this ApiCatalogPvtCollectionPost200Response.
        :type description: str
        """

        self._description = description

    @property
    def highlight(self):
        """Gets the highlight of this ApiCatalogPvtCollectionPost200Response.

        Defines if the Collection is highlighted or not.

        :return: The highlight of this ApiCatalogPvtCollectionPost200Response.
        :rtype: bool
        """
        return self._highlight

    @highlight.setter
    def highlight(self, highlight):
        """Sets the highlight of this ApiCatalogPvtCollectionPost200Response.

        Defines if the Collection is highlighted or not.

        :param highlight: The highlight of this ApiCatalogPvtCollectionPost200Response.
        :type highlight: bool
        """

        self._highlight = highlight

    @property
    def id(self):
        """Gets the id of this ApiCatalogPvtCollectionPost200Response.

        Collection ID.

        :return: The id of this ApiCatalogPvtCollectionPost200Response.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ApiCatalogPvtCollectionPost200Response.

        Collection ID.

        :param id: The id of this ApiCatalogPvtCollectionPost200Response.
        :type id: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this ApiCatalogPvtCollectionPost200Response.

        Collection Name.

        :return: The name of this ApiCatalogPvtCollectionPost200Response.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ApiCatalogPvtCollectionPost200Response.

        Collection Name.

        :param name: The name of this ApiCatalogPvtCollectionPost200Response.
        :type name: str
        """

        self._name = name

    @property
    def searchable(self):
        """Gets the searchable of this ApiCatalogPvtCollectionPost200Response.

        Defines if the Collection is searchable or not.

        :return: The searchable of this ApiCatalogPvtCollectionPost200Response.
        :rtype: bool
        """
        return self._searchable

    @searchable.setter
    def searchable(self, searchable):
        """Sets the searchable of this ApiCatalogPvtCollectionPost200Response.

        Defines if the Collection is searchable or not.

        :param searchable: The searchable of this ApiCatalogPvtCollectionPost200Response.
        :type searchable: bool
        """

        self._searchable = searchable

    @property
    def total_products(self):
        """Gets the total_products of this ApiCatalogPvtCollectionPost200Response.

        Total quantity of products in the collection.

        :return: The total_products of this ApiCatalogPvtCollectionPost200Response.
        :rtype: int
        """
        return self._total_products

    @total_products.setter
    def total_products(self, total_products):
        """Sets the total_products of this ApiCatalogPvtCollectionPost200Response.

        Total quantity of products in the collection.

        :param total_products: The total_products of this ApiCatalogPvtCollectionPost200Response.
        :type total_products: int
        """

        self._total_products = total_products

    @property
    def type(self):
        """Gets the type of this ApiCatalogPvtCollectionPost200Response.

        Type of collection.

        :return: The type of this ApiCatalogPvtCollectionPost200Response.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ApiCatalogPvtCollectionPost200Response.

        Type of collection.

        :param type: The type of this ApiCatalogPvtCollectionPost200Response.
        :type type: str
        """

        self._type = type
