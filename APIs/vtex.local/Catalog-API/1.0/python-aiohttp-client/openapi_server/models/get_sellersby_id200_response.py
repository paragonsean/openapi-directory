# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetSellersbyId200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, archive_id: int=None, cnpj: str=None, csc_identification: str=None, catalog_system_endpoint: str=None, category_commission_percentage: str=None, delivery_policy: str=None, description: str=None, email: str=None, exchange_return_policy: str=None, freight_commission_percentage: float=None, fulfillment_endpoint: str=None, fulfillment_seller_id: int=None, is_active: bool=None, is_better_scope: bool=None, merchant_name: str=None, name: str=None, password: str=None, product_commission_percentage: float=None, secutity_privacy_policy: str=None, seller_id: str=None, seller_type: int=None, trust_policy: str=None, url_logo: str=None, use_hybrid_payment_options: bool=None, user_name: str=None):
        """GetSellersbyId200Response - a model defined in OpenAPI

        :param archive_id: The archive_id of this GetSellersbyId200Response.
        :param cnpj: The cnpj of this GetSellersbyId200Response.
        :param csc_identification: The csc_identification of this GetSellersbyId200Response.
        :param catalog_system_endpoint: The catalog_system_endpoint of this GetSellersbyId200Response.
        :param category_commission_percentage: The category_commission_percentage of this GetSellersbyId200Response.
        :param delivery_policy: The delivery_policy of this GetSellersbyId200Response.
        :param description: The description of this GetSellersbyId200Response.
        :param email: The email of this GetSellersbyId200Response.
        :param exchange_return_policy: The exchange_return_policy of this GetSellersbyId200Response.
        :param freight_commission_percentage: The freight_commission_percentage of this GetSellersbyId200Response.
        :param fulfillment_endpoint: The fulfillment_endpoint of this GetSellersbyId200Response.
        :param fulfillment_seller_id: The fulfillment_seller_id of this GetSellersbyId200Response.
        :param is_active: The is_active of this GetSellersbyId200Response.
        :param is_better_scope: The is_better_scope of this GetSellersbyId200Response.
        :param merchant_name: The merchant_name of this GetSellersbyId200Response.
        :param name: The name of this GetSellersbyId200Response.
        :param password: The password of this GetSellersbyId200Response.
        :param product_commission_percentage: The product_commission_percentage of this GetSellersbyId200Response.
        :param secutity_privacy_policy: The secutity_privacy_policy of this GetSellersbyId200Response.
        :param seller_id: The seller_id of this GetSellersbyId200Response.
        :param seller_type: The seller_type of this GetSellersbyId200Response.
        :param trust_policy: The trust_policy of this GetSellersbyId200Response.
        :param url_logo: The url_logo of this GetSellersbyId200Response.
        :param use_hybrid_payment_options: The use_hybrid_payment_options of this GetSellersbyId200Response.
        :param user_name: The user_name of this GetSellersbyId200Response.
        """
        self.openapi_types = {
            'archive_id': int,
            'cnpj': str,
            'csc_identification': str,
            'catalog_system_endpoint': str,
            'category_commission_percentage': str,
            'delivery_policy': str,
            'description': str,
            'email': str,
            'exchange_return_policy': str,
            'freight_commission_percentage': float,
            'fulfillment_endpoint': str,
            'fulfillment_seller_id': int,
            'is_active': bool,
            'is_better_scope': bool,
            'merchant_name': str,
            'name': str,
            'password': str,
            'product_commission_percentage': float,
            'secutity_privacy_policy': str,
            'seller_id': str,
            'seller_type': int,
            'trust_policy': str,
            'url_logo': str,
            'use_hybrid_payment_options': bool,
            'user_name': str
        }

        self.attribute_map = {
            'archive_id': 'ArchiveId',
            'cnpj': 'CNPJ',
            'csc_identification': 'CSCIdentification',
            'catalog_system_endpoint': 'CatalogSystemEndpoint',
            'category_commission_percentage': 'CategoryCommissionPercentage',
            'delivery_policy': 'DeliveryPolicy',
            'description': 'Description',
            'email': 'Email',
            'exchange_return_policy': 'ExchangeReturnPolicy',
            'freight_commission_percentage': 'FreightCommissionPercentage',
            'fulfillment_endpoint': 'FulfillmentEndpoint',
            'fulfillment_seller_id': 'FulfillmentSellerId',
            'is_active': 'IsActive',
            'is_better_scope': 'IsBetterScope',
            'merchant_name': 'MerchantName',
            'name': 'Name',
            'password': 'Password',
            'product_commission_percentage': 'ProductCommissionPercentage',
            'secutity_privacy_policy': 'SecutityPrivacyPolicy',
            'seller_id': 'SellerId',
            'seller_type': 'SellerType',
            'trust_policy': 'TrustPolicy',
            'url_logo': 'UrlLogo',
            'use_hybrid_payment_options': 'UseHybridPaymentOptions',
            'user_name': 'UserName'
        }

        self._archive_id = archive_id
        self._cnpj = cnpj
        self._csc_identification = csc_identification
        self._catalog_system_endpoint = catalog_system_endpoint
        self._category_commission_percentage = category_commission_percentage
        self._delivery_policy = delivery_policy
        self._description = description
        self._email = email
        self._exchange_return_policy = exchange_return_policy
        self._freight_commission_percentage = freight_commission_percentage
        self._fulfillment_endpoint = fulfillment_endpoint
        self._fulfillment_seller_id = fulfillment_seller_id
        self._is_active = is_active
        self._is_better_scope = is_better_scope
        self._merchant_name = merchant_name
        self._name = name
        self._password = password
        self._product_commission_percentage = product_commission_percentage
        self._secutity_privacy_policy = secutity_privacy_policy
        self._seller_id = seller_id
        self._seller_type = seller_type
        self._trust_policy = trust_policy
        self._url_logo = url_logo
        self._use_hybrid_payment_options = use_hybrid_payment_options
        self._user_name = user_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetSellersbyId200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetSellersbyId_200_response of this GetSellersbyId200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def archive_id(self):
        """Gets the archive_id of this GetSellersbyId200Response.

        Seller archive ID.

        :return: The archive_id of this GetSellersbyId200Response.
        :rtype: int
        """
        return self._archive_id

    @archive_id.setter
    def archive_id(self, archive_id):
        """Sets the archive_id of this GetSellersbyId200Response.

        Seller archive ID.

        :param archive_id: The archive_id of this GetSellersbyId200Response.
        :type archive_id: int
        """

        self._archive_id = archive_id

    @property
    def cnpj(self):
        """Gets the cnpj of this GetSellersbyId200Response.

        Company registration number.

        :return: The cnpj of this GetSellersbyId200Response.
        :rtype: str
        """
        return self._cnpj

    @cnpj.setter
    def cnpj(self, cnpj):
        """Sets the cnpj of this GetSellersbyId200Response.

        Company registration number.

        :param cnpj: The cnpj of this GetSellersbyId200Response.
        :type cnpj: str
        """

        self._cnpj = cnpj

    @property
    def csc_identification(self):
        """Gets the csc_identification of this GetSellersbyId200Response.

        CSC identification.

        :return: The csc_identification of this GetSellersbyId200Response.
        :rtype: str
        """
        return self._csc_identification

    @csc_identification.setter
    def csc_identification(self, csc_identification):
        """Sets the csc_identification of this GetSellersbyId200Response.

        CSC identification.

        :param csc_identification: The csc_identification of this GetSellersbyId200Response.
        :type csc_identification: str
        """

        self._csc_identification = csc_identification

    @property
    def catalog_system_endpoint(self):
        """Gets the catalog_system_endpoint of this GetSellersbyId200Response.

        URL of the endpoint of the seller's catalog. This field will only be displayed if the seller type is VTEX Store. The field format will be as follows: `http://{sellerName}.vtexcommercestable.com.br/api/catalog_system/`.

        :return: The catalog_system_endpoint of this GetSellersbyId200Response.
        :rtype: str
        """
        return self._catalog_system_endpoint

    @catalog_system_endpoint.setter
    def catalog_system_endpoint(self, catalog_system_endpoint):
        """Sets the catalog_system_endpoint of this GetSellersbyId200Response.

        URL of the endpoint of the seller's catalog. This field will only be displayed if the seller type is VTEX Store. The field format will be as follows: `http://{sellerName}.vtexcommercestable.com.br/api/catalog_system/`.

        :param catalog_system_endpoint: The catalog_system_endpoint of this GetSellersbyId200Response.
        :type catalog_system_endpoint: str
        """

        self._catalog_system_endpoint = catalog_system_endpoint

    @property
    def category_commission_percentage(self):
        """Gets the category_commission_percentage of this GetSellersbyId200Response.

        The percentage that must be filled in as agreed between the marketplace and the seller. If there is no such commission, please fill in the field with the value: `0.00`.

        :return: The category_commission_percentage of this GetSellersbyId200Response.
        :rtype: str
        """
        return self._category_commission_percentage

    @category_commission_percentage.setter
    def category_commission_percentage(self, category_commission_percentage):
        """Sets the category_commission_percentage of this GetSellersbyId200Response.

        The percentage that must be filled in as agreed between the marketplace and the seller. If there is no such commission, please fill in the field with the value: `0.00`.

        :param category_commission_percentage: The category_commission_percentage of this GetSellersbyId200Response.
        :type category_commission_percentage: str
        """

        self._category_commission_percentage = category_commission_percentage

    @property
    def delivery_policy(self):
        """Gets the delivery_policy of this GetSellersbyId200Response.

        Text describing the delivery policy previously agreed between the marketplace and the seller.

        :return: The delivery_policy of this GetSellersbyId200Response.
        :rtype: str
        """
        return self._delivery_policy

    @delivery_policy.setter
    def delivery_policy(self, delivery_policy):
        """Sets the delivery_policy of this GetSellersbyId200Response.

        Text describing the delivery policy previously agreed between the marketplace and the seller.

        :param delivery_policy: The delivery_policy of this GetSellersbyId200Response.
        :type delivery_policy: str
        """

        self._delivery_policy = delivery_policy

    @property
    def description(self):
        """Gets the description of this GetSellersbyId200Response.

        Text describing the seller with a marketing tone. You can display this text in the marketplace window display by [customizing the CMS](https://help.vtex.com/en/tutorial/list-of-controls-for-templates--tutorials_563).

        :return: The description of this GetSellersbyId200Response.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GetSellersbyId200Response.

        Text describing the seller with a marketing tone. You can display this text in the marketplace window display by [customizing the CMS](https://help.vtex.com/en/tutorial/list-of-controls-for-templates--tutorials_563).

        :param description: The description of this GetSellersbyId200Response.
        :type description: str
        """

        self._description = description

    @property
    def email(self):
        """Gets the email of this GetSellersbyId200Response.

        Email of the admin responsible for the seller. 

        :return: The email of this GetSellersbyId200Response.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this GetSellersbyId200Response.

        Email of the admin responsible for the seller. 

        :param email: The email of this GetSellersbyId200Response.
        :type email: str
        """

        self._email = email

    @property
    def exchange_return_policy(self):
        """Gets the exchange_return_policy of this GetSellersbyId200Response.

        Text describing the exchange and return policy previously agreed between the marketplace and the seller.

        :return: The exchange_return_policy of this GetSellersbyId200Response.
        :rtype: str
        """
        return self._exchange_return_policy

    @exchange_return_policy.setter
    def exchange_return_policy(self, exchange_return_policy):
        """Sets the exchange_return_policy of this GetSellersbyId200Response.

        Text describing the exchange and return policy previously agreed between the marketplace and the seller.

        :param exchange_return_policy: The exchange_return_policy of this GetSellersbyId200Response.
        :type exchange_return_policy: str
        """

        self._exchange_return_policy = exchange_return_policy

    @property
    def freight_commission_percentage(self):
        """Gets the freight_commission_percentage of this GetSellersbyId200Response.

        The percentage that must be filled in as agreed between the marketplace and the seller. If there is no such commission, please fill in the field with the value: `0.00`.

        :return: The freight_commission_percentage of this GetSellersbyId200Response.
        :rtype: float
        """
        return self._freight_commission_percentage

    @freight_commission_percentage.setter
    def freight_commission_percentage(self, freight_commission_percentage):
        """Sets the freight_commission_percentage of this GetSellersbyId200Response.

        The percentage that must be filled in as agreed between the marketplace and the seller. If there is no such commission, please fill in the field with the value: `0.00`.

        :param freight_commission_percentage: The freight_commission_percentage of this GetSellersbyId200Response.
        :type freight_commission_percentage: float
        """

        self._freight_commission_percentage = freight_commission_percentage

    @property
    def fulfillment_endpoint(self):
        """Gets the fulfillment_endpoint of this GetSellersbyId200Response.

        URL of the endpoint for fulfillment of seller's orders, which the marketplace will use to communicate with the seller. This field applies to all sellers, regardless of their type. However, for `VTEX Stores`, you don’t need to fill it in because the system will do that automatically. You can edit this field once the seller has been successfully added.

        :return: The fulfillment_endpoint of this GetSellersbyId200Response.
        :rtype: str
        """
        return self._fulfillment_endpoint

    @fulfillment_endpoint.setter
    def fulfillment_endpoint(self, fulfillment_endpoint):
        """Sets the fulfillment_endpoint of this GetSellersbyId200Response.

        URL of the endpoint for fulfillment of seller's orders, which the marketplace will use to communicate with the seller. This field applies to all sellers, regardless of their type. However, for `VTEX Stores`, you don’t need to fill it in because the system will do that automatically. You can edit this field once the seller has been successfully added.

        :param fulfillment_endpoint: The fulfillment_endpoint of this GetSellersbyId200Response.
        :type fulfillment_endpoint: str
        """

        self._fulfillment_endpoint = fulfillment_endpoint

    @property
    def fulfillment_seller_id(self):
        """Gets the fulfillment_seller_id of this GetSellersbyId200Response.

        Identification code of the seller responsible for fulfilling the order. This is an optional field used when a seller sells SKUs from another seller. If the seller sells their own SKUs, it must be left blank.

        :return: The fulfillment_seller_id of this GetSellersbyId200Response.
        :rtype: int
        """
        return self._fulfillment_seller_id

    @fulfillment_seller_id.setter
    def fulfillment_seller_id(self, fulfillment_seller_id):
        """Sets the fulfillment_seller_id of this GetSellersbyId200Response.

        Identification code of the seller responsible for fulfilling the order. This is an optional field used when a seller sells SKUs from another seller. If the seller sells their own SKUs, it must be left blank.

        :param fulfillment_seller_id: The fulfillment_seller_id of this GetSellersbyId200Response.
        :type fulfillment_seller_id: int
        """

        self._fulfillment_seller_id = fulfillment_seller_id

    @property
    def is_active(self):
        """Gets the is_active of this GetSellersbyId200Response.

        If the selle is active (`true`) or not (`false`).

        :return: The is_active of this GetSellersbyId200Response.
        :rtype: bool
        """
        return self._is_active

    @is_active.setter
    def is_active(self, is_active):
        """Sets the is_active of this GetSellersbyId200Response.

        If the selle is active (`true`) or not (`false`).

        :param is_active: The is_active of this GetSellersbyId200Response.
        :type is_active: bool
        """

        self._is_active = is_active

    @property
    def is_better_scope(self):
        """Gets the is_better_scope of this GetSellersbyId200Response.

        Indicates whether it is a [comprehensive seller](https://help.vtex.com/en/tutorial/comprehensive-seller--5Qn4O2GpjUIzWTPpvLUfkI).

        :return: The is_better_scope of this GetSellersbyId200Response.
        :rtype: bool
        """
        return self._is_better_scope

    @is_better_scope.setter
    def is_better_scope(self, is_better_scope):
        """Sets the is_better_scope of this GetSellersbyId200Response.

        Indicates whether it is a [comprehensive seller](https://help.vtex.com/en/tutorial/comprehensive-seller--5Qn4O2GpjUIzWTPpvLUfkI).

        :param is_better_scope: The is_better_scope of this GetSellersbyId200Response.
        :type is_better_scope: bool
        """

        self._is_better_scope = is_better_scope

    @property
    def merchant_name(self):
        """Gets the merchant_name of this GetSellersbyId200Response.

        Name of the marketplace, used to guide payments. This field should be nulled if the marketplace is responsible for processing payments. Check out our [Split Payment](https://help.vtex.com/en/tutorial/split-de-pagamento--6k5JidhYRUxileNolY2VLx) article to know more.

        :return: The merchant_name of this GetSellersbyId200Response.
        :rtype: str
        """
        return self._merchant_name

    @merchant_name.setter
    def merchant_name(self, merchant_name):
        """Sets the merchant_name of this GetSellersbyId200Response.

        Name of the marketplace, used to guide payments. This field should be nulled if the marketplace is responsible for processing payments. Check out our [Split Payment](https://help.vtex.com/en/tutorial/split-de-pagamento--6k5JidhYRUxileNolY2VLx) article to know more.

        :param merchant_name: The merchant_name of this GetSellersbyId200Response.
        :type merchant_name: str
        """

        self._merchant_name = merchant_name

    @property
    def name(self):
        """Gets the name of this GetSellersbyId200Response.

        Name of the account in the seller's environment. You can find it on **Account settings > Account > Account Name**). Applicable only if the seller uses their own payment method.

        :return: The name of this GetSellersbyId200Response.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetSellersbyId200Response.

        Name of the account in the seller's environment. You can find it on **Account settings > Account > Account Name**). Applicable only if the seller uses their own payment method.

        :param name: The name of this GetSellersbyId200Response.
        :type name: str
        """

        self._name = name

    @property
    def password(self):
        """Gets the password of this GetSellersbyId200Response.

        Seller password.

        :return: The password of this GetSellersbyId200Response.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this GetSellersbyId200Response.

        Seller password.

        :param password: The password of this GetSellersbyId200Response.
        :type password: str
        """

        self._password = password

    @property
    def product_commission_percentage(self):
        """Gets the product_commission_percentage of this GetSellersbyId200Response.

        The percentage that must be filled in as agreed between the marketplace and the seller. If there is no such commission, please fill in the field with the value: `0.00`.

        :return: The product_commission_percentage of this GetSellersbyId200Response.
        :rtype: float
        """
        return self._product_commission_percentage

    @product_commission_percentage.setter
    def product_commission_percentage(self, product_commission_percentage):
        """Sets the product_commission_percentage of this GetSellersbyId200Response.

        The percentage that must be filled in as agreed between the marketplace and the seller. If there is no such commission, please fill in the field with the value: `0.00`.

        :param product_commission_percentage: The product_commission_percentage of this GetSellersbyId200Response.
        :type product_commission_percentage: float
        """

        self._product_commission_percentage = product_commission_percentage

    @property
    def secutity_privacy_policy(self):
        """Gets the secutity_privacy_policy of this GetSellersbyId200Response.

        Text describing the security policy previously agreed between the marketplace and the seller.

        :return: The secutity_privacy_policy of this GetSellersbyId200Response.
        :rtype: str
        """
        return self._secutity_privacy_policy

    @secutity_privacy_policy.setter
    def secutity_privacy_policy(self, secutity_privacy_policy):
        """Sets the secutity_privacy_policy of this GetSellersbyId200Response.

        Text describing the security policy previously agreed between the marketplace and the seller.

        :param secutity_privacy_policy: The secutity_privacy_policy of this GetSellersbyId200Response.
        :type secutity_privacy_policy: str
        """

        self._secutity_privacy_policy = secutity_privacy_policy

    @property
    def seller_id(self):
        """Gets the seller_id of this GetSellersbyId200Response.

        Code used to identify the seller. It is assigned by the marketplace. We recommend filling it in with the seller's account name.

        :return: The seller_id of this GetSellersbyId200Response.
        :rtype: str
        """
        return self._seller_id

    @seller_id.setter
    def seller_id(self, seller_id):
        """Sets the seller_id of this GetSellersbyId200Response.

        Code used to identify the seller. It is assigned by the marketplace. We recommend filling it in with the seller's account name.

        :param seller_id: The seller_id of this GetSellersbyId200Response.
        :type seller_id: str
        """

        self._seller_id = seller_id

    @property
    def seller_type(self):
        """Gets the seller_type of this GetSellersbyId200Response.

        Seller type.

        :return: The seller_type of this GetSellersbyId200Response.
        :rtype: int
        """
        return self._seller_type

    @seller_type.setter
    def seller_type(self, seller_type):
        """Sets the seller_type of this GetSellersbyId200Response.

        Seller type.

        :param seller_type: The seller_type of this GetSellersbyId200Response.
        :type seller_type: int
        """

        self._seller_type = seller_type

    @property
    def trust_policy(self):
        """Gets the trust_policy of this GetSellersbyId200Response.

        Seller trust policy. The default value is `'Default'`, but if your store is a B2B marketplace and you want to share the customers'emails with the sellers you need to set this field as `'AllowEmailSharing'`.

        :return: The trust_policy of this GetSellersbyId200Response.
        :rtype: str
        """
        return self._trust_policy

    @trust_policy.setter
    def trust_policy(self, trust_policy):
        """Sets the trust_policy of this GetSellersbyId200Response.

        Seller trust policy. The default value is `'Default'`, but if your store is a B2B marketplace and you want to share the customers'emails with the sellers you need to set this field as `'AllowEmailSharing'`.

        :param trust_policy: The trust_policy of this GetSellersbyId200Response.
        :type trust_policy: str
        """

        self._trust_policy = trust_policy

    @property
    def url_logo(self):
        """Gets the url_logo of this GetSellersbyId200Response.

        Seller URL logo.

        :return: The url_logo of this GetSellersbyId200Response.
        :rtype: str
        """
        return self._url_logo

    @url_logo.setter
    def url_logo(self, url_logo):
        """Sets the url_logo of this GetSellersbyId200Response.

        Seller URL logo.

        :param url_logo: The url_logo of this GetSellersbyId200Response.
        :type url_logo: str
        """

        self._url_logo = url_logo

    @property
    def use_hybrid_payment_options(self):
        """Gets the use_hybrid_payment_options of this GetSellersbyId200Response.

        Allows customers to use gift cards from the seller to buy their products on the marketplace. It identifies purchases made with a gift card so that only the final price (with discounts applied) is paid to the seller. 

        :return: The use_hybrid_payment_options of this GetSellersbyId200Response.
        :rtype: bool
        """
        return self._use_hybrid_payment_options

    @use_hybrid_payment_options.setter
    def use_hybrid_payment_options(self, use_hybrid_payment_options):
        """Sets the use_hybrid_payment_options of this GetSellersbyId200Response.

        Allows customers to use gift cards from the seller to buy their products on the marketplace. It identifies purchases made with a gift card so that only the final price (with discounts applied) is paid to the seller. 

        :param use_hybrid_payment_options: The use_hybrid_payment_options of this GetSellersbyId200Response.
        :type use_hybrid_payment_options: bool
        """

        self._use_hybrid_payment_options = use_hybrid_payment_options

    @property
    def user_name(self):
        """Gets the user_name of this GetSellersbyId200Response.

        Seller username.

        :return: The user_name of this GetSellersbyId200Response.
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """Sets the user_name of this GetSellersbyId200Response.

        Seller username.

        :param user_name: The user_name of this GetSellersbyId200Response.
        :type user_name: str
        """

        self._user_name = user_name
