# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApiCatalogPvtStockkeepingunitSkuIdSpecificationPostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, field_id: int=None, field_value_id: int=None):
        """ApiCatalogPvtStockkeepingunitSkuIdSpecificationPostRequest - a model defined in OpenAPI

        :param field_id: The field_id of this ApiCatalogPvtStockkeepingunitSkuIdSpecificationPostRequest.
        :param field_value_id: The field_value_id of this ApiCatalogPvtStockkeepingunitSkuIdSpecificationPostRequest.
        """
        self.openapi_types = {
            'field_id': int,
            'field_value_id': int
        }

        self.attribute_map = {
            'field_id': 'FieldId',
            'field_value_id': 'FieldValueId'
        }

        self._field_id = field_id
        self._field_value_id = field_value_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiCatalogPvtStockkeepingunitSkuIdSpecificationPostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _api_catalog_pvt_stockkeepingunit__skuId__specification_post_request of this ApiCatalogPvtStockkeepingunitSkuIdSpecificationPostRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def field_id(self):
        """Gets the field_id of this ApiCatalogPvtStockkeepingunitSkuIdSpecificationPostRequest.

        Specification ID.

        :return: The field_id of this ApiCatalogPvtStockkeepingunitSkuIdSpecificationPostRequest.
        :rtype: int
        """
        return self._field_id

    @field_id.setter
    def field_id(self, field_id):
        """Sets the field_id of this ApiCatalogPvtStockkeepingunitSkuIdSpecificationPostRequest.

        Specification ID.

        :param field_id: The field_id of this ApiCatalogPvtStockkeepingunitSkuIdSpecificationPostRequest.
        :type field_id: int
        """
        if field_id is None:
            raise ValueError("Invalid value for `field_id`, must not be `None`")

        self._field_id = field_id

    @property
    def field_value_id(self):
        """Gets the field_value_id of this ApiCatalogPvtStockkeepingunitSkuIdSpecificationPostRequest.

        Specification Value ID. Required only for `FieldTypeId` as `5`, `6` and `7`.

        :return: The field_value_id of this ApiCatalogPvtStockkeepingunitSkuIdSpecificationPostRequest.
        :rtype: int
        """
        return self._field_value_id

    @field_value_id.setter
    def field_value_id(self, field_value_id):
        """Sets the field_value_id of this ApiCatalogPvtStockkeepingunitSkuIdSpecificationPostRequest.

        Specification Value ID. Required only for `FieldTypeId` as `5`, `6` and `7`.

        :param field_value_id: The field_value_id of this ApiCatalogPvtStockkeepingunitSkuIdSpecificationPostRequest.
        :type field_value_id: int
        """

        self._field_value_id = field_value_id
