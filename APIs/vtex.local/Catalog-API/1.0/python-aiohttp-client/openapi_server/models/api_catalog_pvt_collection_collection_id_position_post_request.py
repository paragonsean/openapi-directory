# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApiCatalogPvtCollectionCollectionIdPositionPostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, position: int=None, sku_id: int=None, sub_collection_id: int=None):
        """ApiCatalogPvtCollectionCollectionIdPositionPostRequest - a model defined in OpenAPI

        :param position: The position of this ApiCatalogPvtCollectionCollectionIdPositionPostRequest.
        :param sku_id: The sku_id of this ApiCatalogPvtCollectionCollectionIdPositionPostRequest.
        :param sub_collection_id: The sub_collection_id of this ApiCatalogPvtCollectionCollectionIdPositionPostRequest.
        """
        self.openapi_types = {
            'position': int,
            'sku_id': int,
            'sub_collection_id': int
        }

        self.attribute_map = {
            'position': 'position',
            'sku_id': 'skuId',
            'sub_collection_id': 'subCollectionId'
        }

        self._position = position
        self._sku_id = sku_id
        self._sub_collection_id = sub_collection_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiCatalogPvtCollectionCollectionIdPositionPostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _api_catalog_pvt_collection__collectionId__position_post_request of this ApiCatalogPvtCollectionCollectionIdPositionPostRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def position(self):
        """Gets the position of this ApiCatalogPvtCollectionCollectionIdPositionPostRequest.

        SKU position.

        :return: The position of this ApiCatalogPvtCollectionCollectionIdPositionPostRequest.
        :rtype: int
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this ApiCatalogPvtCollectionCollectionIdPositionPostRequest.

        SKU position.

        :param position: The position of this ApiCatalogPvtCollectionCollectionIdPositionPostRequest.
        :type position: int
        """
        if position is None:
            raise ValueError("Invalid value for `position`, must not be `None`")

        self._position = position

    @property
    def sku_id(self):
        """Gets the sku_id of this ApiCatalogPvtCollectionCollectionIdPositionPostRequest.

        SKU ID.

        :return: The sku_id of this ApiCatalogPvtCollectionCollectionIdPositionPostRequest.
        :rtype: int
        """
        return self._sku_id

    @sku_id.setter
    def sku_id(self, sku_id):
        """Sets the sku_id of this ApiCatalogPvtCollectionCollectionIdPositionPostRequest.

        SKU ID.

        :param sku_id: The sku_id of this ApiCatalogPvtCollectionCollectionIdPositionPostRequest.
        :type sku_id: int
        """
        if sku_id is None:
            raise ValueError("Invalid value for `sku_id`, must not be `None`")

        self._sku_id = sku_id

    @property
    def sub_collection_id(self):
        """Gets the sub_collection_id of this ApiCatalogPvtCollectionCollectionIdPositionPostRequest.

        Subcollection ID.

        :return: The sub_collection_id of this ApiCatalogPvtCollectionCollectionIdPositionPostRequest.
        :rtype: int
        """
        return self._sub_collection_id

    @sub_collection_id.setter
    def sub_collection_id(self, sub_collection_id):
        """Sets the sub_collection_id of this ApiCatalogPvtCollectionCollectionIdPositionPostRequest.

        Subcollection ID.

        :param sub_collection_id: The sub_collection_id of this ApiCatalogPvtCollectionCollectionIdPositionPostRequest.
        :type sub_collection_id: int
        """
        if sub_collection_id is None:
            raise ValueError("Invalid value for `sub_collection_id`, must not be `None`")

        self._sub_collection_id = sub_collection_id
