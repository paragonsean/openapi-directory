# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GiftListMembersInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_id: str=None, gift_list_id: int=None, gift_list_member_id: int=None, is_active: bool=None, is_admin: bool=None, name: str=None, surname: str=None, text1: str=None, text2: str=None, title: str=None, user_id: str=None):
        """GiftListMembersInner - a model defined in OpenAPI

        :param client_id: The client_id of this GiftListMembersInner.
        :param gift_list_id: The gift_list_id of this GiftListMembersInner.
        :param gift_list_member_id: The gift_list_member_id of this GiftListMembersInner.
        :param is_active: The is_active of this GiftListMembersInner.
        :param is_admin: The is_admin of this GiftListMembersInner.
        :param name: The name of this GiftListMembersInner.
        :param surname: The surname of this GiftListMembersInner.
        :param text1: The text1 of this GiftListMembersInner.
        :param text2: The text2 of this GiftListMembersInner.
        :param title: The title of this GiftListMembersInner.
        :param user_id: The user_id of this GiftListMembersInner.
        """
        self.openapi_types = {
            'client_id': str,
            'gift_list_id': int,
            'gift_list_member_id': int,
            'is_active': bool,
            'is_admin': bool,
            'name': str,
            'surname': str,
            'text1': str,
            'text2': str,
            'title': str,
            'user_id': str
        }

        self.attribute_map = {
            'client_id': 'clientId',
            'gift_list_id': 'giftListId',
            'gift_list_member_id': 'giftListMemberId',
            'is_active': 'isActive',
            'is_admin': 'isAdmin',
            'name': 'name',
            'surname': 'surname',
            'text1': 'text1',
            'text2': 'text2',
            'title': 'title',
            'user_id': 'userId'
        }

        self._client_id = client_id
        self._gift_list_id = gift_list_id
        self._gift_list_member_id = gift_list_member_id
        self._is_active = is_active
        self._is_admin = is_admin
        self._name = name
        self._surname = surname
        self._text1 = text1
        self._text2 = text2
        self._title = title
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GiftListMembersInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The giftListMembers_inner of this GiftListMembersInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_id(self):
        """Gets the client_id of this GiftListMembersInner.

        Client ID.

        :return: The client_id of this GiftListMembersInner.
        :rtype: str
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this GiftListMembersInner.

        Client ID.

        :param client_id: The client_id of this GiftListMembersInner.
        :type client_id: str
        """

        self._client_id = client_id

    @property
    def gift_list_id(self):
        """Gets the gift_list_id of this GiftListMembersInner.

        Gift List ID.

        :return: The gift_list_id of this GiftListMembersInner.
        :rtype: int
        """
        return self._gift_list_id

    @gift_list_id.setter
    def gift_list_id(self, gift_list_id):
        """Sets the gift_list_id of this GiftListMembersInner.

        Gift List ID.

        :param gift_list_id: The gift_list_id of this GiftListMembersInner.
        :type gift_list_id: int
        """

        self._gift_list_id = gift_list_id

    @property
    def gift_list_member_id(self):
        """Gets the gift_list_member_id of this GiftListMembersInner.

        Gift List member ID.

        :return: The gift_list_member_id of this GiftListMembersInner.
        :rtype: int
        """
        return self._gift_list_member_id

    @gift_list_member_id.setter
    def gift_list_member_id(self, gift_list_member_id):
        """Sets the gift_list_member_id of this GiftListMembersInner.

        Gift List member ID.

        :param gift_list_member_id: The gift_list_member_id of this GiftListMembersInner.
        :type gift_list_member_id: int
        """

        self._gift_list_member_id = gift_list_member_id

    @property
    def is_active(self):
        """Gets the is_active of this GiftListMembersInner.

        Defines if the Gift List user is active or not.

        :return: The is_active of this GiftListMembersInner.
        :rtype: bool
        """
        return self._is_active

    @is_active.setter
    def is_active(self, is_active):
        """Sets the is_active of this GiftListMembersInner.

        Defines if the Gift List user is active or not.

        :param is_active: The is_active of this GiftListMembersInner.
        :type is_active: bool
        """

        self._is_active = is_active

    @property
    def is_admin(self):
        """Gets the is_admin of this GiftListMembersInner.

        Defines if the Gift List member is an administrator of the Gift List or not.

        :return: The is_admin of this GiftListMembersInner.
        :rtype: bool
        """
        return self._is_admin

    @is_admin.setter
    def is_admin(self, is_admin):
        """Sets the is_admin of this GiftListMembersInner.

        Defines if the Gift List member is an administrator of the Gift List or not.

        :param is_admin: The is_admin of this GiftListMembersInner.
        :type is_admin: bool
        """

        self._is_admin = is_admin

    @property
    def name(self):
        """Gets the name of this GiftListMembersInner.

        Name of the Gift List member.

        :return: The name of this GiftListMembersInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GiftListMembersInner.

        Name of the Gift List member.

        :param name: The name of this GiftListMembersInner.
        :type name: str
        """

        self._name = name

    @property
    def surname(self):
        """Gets the surname of this GiftListMembersInner.

        Surname of the Gift List member.

        :return: The surname of this GiftListMembersInner.
        :rtype: str
        """
        return self._surname

    @surname.setter
    def surname(self, surname):
        """Sets the surname of this GiftListMembersInner.

        Surname of the Gift List member.

        :param surname: The surname of this GiftListMembersInner.
        :type surname: str
        """

        self._surname = surname

    @property
    def text1(self):
        """Gets the text1 of this GiftListMembersInner.

        Complementary text.

        :return: The text1 of this GiftListMembersInner.
        :rtype: str
        """
        return self._text1

    @text1.setter
    def text1(self, text1):
        """Sets the text1 of this GiftListMembersInner.

        Complementary text.

        :param text1: The text1 of this GiftListMembersInner.
        :type text1: str
        """

        self._text1 = text1

    @property
    def text2(self):
        """Gets the text2 of this GiftListMembersInner.

        Complementary text.

        :return: The text2 of this GiftListMembersInner.
        :rtype: str
        """
        return self._text2

    @text2.setter
    def text2(self, text2):
        """Sets the text2 of this GiftListMembersInner.

        Complementary text.

        :param text2: The text2 of this GiftListMembersInner.
        :type text2: str
        """

        self._text2 = text2

    @property
    def title(self):
        """Gets the title of this GiftListMembersInner.

        Title of the Gift List member.

        :return: The title of this GiftListMembersInner.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this GiftListMembersInner.

        Title of the Gift List member.

        :param title: The title of this GiftListMembersInner.
        :type title: str
        """

        self._title = title

    @property
    def user_id(self):
        """Gets the user_id of this GiftListMembersInner.

        User ID.

        :return: The user_id of this GiftListMembersInner.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this GiftListMembersInner.

        User ID.

        :param user_id: The user_id of this GiftListMembersInner.
        :type user_id: str
        """

        self._user_id = user_id
