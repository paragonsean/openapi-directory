# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CategorySpecificationInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category_id: int=None, field_id: int=None, is_active: bool=None, is_stock_keeping_unit: bool=None, name: str=None):
        """CategorySpecificationInner - a model defined in OpenAPI

        :param category_id: The category_id of this CategorySpecificationInner.
        :param field_id: The field_id of this CategorySpecificationInner.
        :param is_active: The is_active of this CategorySpecificationInner.
        :param is_stock_keeping_unit: The is_stock_keeping_unit of this CategorySpecificationInner.
        :param name: The name of this CategorySpecificationInner.
        """
        self.openapi_types = {
            'category_id': int,
            'field_id': int,
            'is_active': bool,
            'is_stock_keeping_unit': bool,
            'name': str
        }

        self.attribute_map = {
            'category_id': 'CategoryId',
            'field_id': 'FieldId',
            'is_active': 'IsActive',
            'is_stock_keeping_unit': 'IsStockKeepingUnit',
            'name': 'Name'
        }

        self._category_id = category_id
        self._field_id = field_id
        self._is_active = is_active
        self._is_stock_keeping_unit = is_stock_keeping_unit
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CategorySpecificationInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CategorySpecification_inner of this CategorySpecificationInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category_id(self):
        """Gets the category_id of this CategorySpecificationInner.

        Category ID.

        :return: The category_id of this CategorySpecificationInner.
        :rtype: int
        """
        return self._category_id

    @category_id.setter
    def category_id(self, category_id):
        """Sets the category_id of this CategorySpecificationInner.

        Category ID.

        :param category_id: The category_id of this CategorySpecificationInner.
        :type category_id: int
        """

        self._category_id = category_id

    @property
    def field_id(self):
        """Gets the field_id of this CategorySpecificationInner.

        Specification ID.

        :return: The field_id of this CategorySpecificationInner.
        :rtype: int
        """
        return self._field_id

    @field_id.setter
    def field_id(self, field_id):
        """Sets the field_id of this CategorySpecificationInner.

        Specification ID.

        :param field_id: The field_id of this CategorySpecificationInner.
        :type field_id: int
        """

        self._field_id = field_id

    @property
    def is_active(self):
        """Gets the is_active of this CategorySpecificationInner.

        Defines if the specification is active.

        :return: The is_active of this CategorySpecificationInner.
        :rtype: bool
        """
        return self._is_active

    @is_active.setter
    def is_active(self, is_active):
        """Sets the is_active of this CategorySpecificationInner.

        Defines if the specification is active.

        :param is_active: The is_active of this CategorySpecificationInner.
        :type is_active: bool
        """

        self._is_active = is_active

    @property
    def is_stock_keeping_unit(self):
        """Gets the is_stock_keeping_unit of this CategorySpecificationInner.

        Defines if it is an SKU specification.

        :return: The is_stock_keeping_unit of this CategorySpecificationInner.
        :rtype: bool
        """
        return self._is_stock_keeping_unit

    @is_stock_keeping_unit.setter
    def is_stock_keeping_unit(self, is_stock_keeping_unit):
        """Sets the is_stock_keeping_unit of this CategorySpecificationInner.

        Defines if it is an SKU specification.

        :param is_stock_keeping_unit: The is_stock_keeping_unit of this CategorySpecificationInner.
        :type is_stock_keeping_unit: bool
        """

        self._is_stock_keeping_unit = is_stock_keeping_unit

    @property
    def name(self):
        """Gets the name of this CategorySpecificationInner.

        Specification name.

        :return: The name of this CategorySpecificationInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CategorySpecificationInner.

        Specification name.

        :param name: The name of this CategorySpecificationInner.
        :type name: str
        """

        self._name = name
