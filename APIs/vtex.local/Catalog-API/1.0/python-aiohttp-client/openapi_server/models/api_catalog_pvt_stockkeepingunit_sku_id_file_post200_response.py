# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApiCatalogPvtStockkeepingunitSkuIdFilePost200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, archive_id: int=None, id: int=None, is_main: bool=None, label: str=None, sku_id: int=None):
        """ApiCatalogPvtStockkeepingunitSkuIdFilePost200Response - a model defined in OpenAPI

        :param archive_id: The archive_id of this ApiCatalogPvtStockkeepingunitSkuIdFilePost200Response.
        :param id: The id of this ApiCatalogPvtStockkeepingunitSkuIdFilePost200Response.
        :param is_main: The is_main of this ApiCatalogPvtStockkeepingunitSkuIdFilePost200Response.
        :param label: The label of this ApiCatalogPvtStockkeepingunitSkuIdFilePost200Response.
        :param sku_id: The sku_id of this ApiCatalogPvtStockkeepingunitSkuIdFilePost200Response.
        """
        self.openapi_types = {
            'archive_id': int,
            'id': int,
            'is_main': bool,
            'label': str,
            'sku_id': int
        }

        self.attribute_map = {
            'archive_id': 'ArchiveId',
            'id': 'Id',
            'is_main': 'IsMain',
            'label': 'Label',
            'sku_id': 'SkuId'
        }

        self._archive_id = archive_id
        self._id = id
        self._is_main = is_main
        self._label = label
        self._sku_id = sku_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiCatalogPvtStockkeepingunitSkuIdFilePost200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _api_catalog_pvt_stockkeepingunit__skuId__file_post_200_response of this ApiCatalogPvtStockkeepingunitSkuIdFilePost200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def archive_id(self):
        """Gets the archive_id of this ApiCatalogPvtStockkeepingunitSkuIdFilePost200Response.

        Unique identifier of the image file.

        :return: The archive_id of this ApiCatalogPvtStockkeepingunitSkuIdFilePost200Response.
        :rtype: int
        """
        return self._archive_id

    @archive_id.setter
    def archive_id(self, archive_id):
        """Sets the archive_id of this ApiCatalogPvtStockkeepingunitSkuIdFilePost200Response.

        Unique identifier of the image file.

        :param archive_id: The archive_id of this ApiCatalogPvtStockkeepingunitSkuIdFilePost200Response.
        :type archive_id: int
        """

        self._archive_id = archive_id

    @property
    def id(self):
        """Gets the id of this ApiCatalogPvtStockkeepingunitSkuIdFilePost200Response.

        ID of the association of the SKU and the image (`SkuFileId`). This is the ID that is used to update or delete it.

        :return: The id of this ApiCatalogPvtStockkeepingunitSkuIdFilePost200Response.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ApiCatalogPvtStockkeepingunitSkuIdFilePost200Response.

        ID of the association of the SKU and the image (`SkuFileId`). This is the ID that is used to update or delete it.

        :param id: The id of this ApiCatalogPvtStockkeepingunitSkuIdFilePost200Response.
        :type id: int
        """

        self._id = id

    @property
    def is_main(self):
        """Gets the is_main of this ApiCatalogPvtStockkeepingunitSkuIdFilePost200Response.

        Set the image as the main image for the product.

        :return: The is_main of this ApiCatalogPvtStockkeepingunitSkuIdFilePost200Response.
        :rtype: bool
        """
        return self._is_main

    @is_main.setter
    def is_main(self, is_main):
        """Sets the is_main of this ApiCatalogPvtStockkeepingunitSkuIdFilePost200Response.

        Set the image as the main image for the product.

        :param is_main: The is_main of this ApiCatalogPvtStockkeepingunitSkuIdFilePost200Response.
        :type is_main: bool
        """

        self._is_main = is_main

    @property
    def label(self):
        """Gets the label of this ApiCatalogPvtStockkeepingunitSkuIdFilePost200Response.

        Image label.

        :return: The label of this ApiCatalogPvtStockkeepingunitSkuIdFilePost200Response.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this ApiCatalogPvtStockkeepingunitSkuIdFilePost200Response.

        Image label.

        :param label: The label of this ApiCatalogPvtStockkeepingunitSkuIdFilePost200Response.
        :type label: str
        """

        self._label = label

    @property
    def sku_id(self):
        """Gets the sku_id of this ApiCatalogPvtStockkeepingunitSkuIdFilePost200Response.

        SKU ID.

        :return: The sku_id of this ApiCatalogPvtStockkeepingunitSkuIdFilePost200Response.
        :rtype: int
        """
        return self._sku_id

    @sku_id.setter
    def sku_id(self, sku_id):
        """Sets the sku_id of this ApiCatalogPvtStockkeepingunitSkuIdFilePost200Response.

        SKU ID.

        :param sku_id: The sku_id of this ApiCatalogPvtStockkeepingunitSkuIdFilePost200Response.
        :type sku_id: int
        """

        self._sku_id = sku_id
