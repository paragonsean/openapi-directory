# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.product_variations200_response_skus_inner_measures import ProductVariations200ResponseSkusInnerMeasures
from openapi_server import util


class ProductVariations200ResponseSkusInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, available: bool=None, availablequantity: int=None, best_price: int=None, best_price_formated: str=None, cache_version_used_to_call_checkout: str=None, dimensions: Dict[str, str]=None, image: str=None, installments: int=None, installments_insterest_rate: int=None, installments_value: int=None, list_price: int=None, list_price_formated: str=None, measures: ProductVariations200ResponseSkusInnerMeasures=None, reward_value: int=None, seller_id: str=None, sku: int=None, skuname: str=None, spot_price: int=None, tax_as_int: int=None, tax_formated: str=None, unit_multiplier: float=None):
        """ProductVariations200ResponseSkusInner - a model defined in OpenAPI

        :param available: The available of this ProductVariations200ResponseSkusInner.
        :param availablequantity: The availablequantity of this ProductVariations200ResponseSkusInner.
        :param best_price: The best_price of this ProductVariations200ResponseSkusInner.
        :param best_price_formated: The best_price_formated of this ProductVariations200ResponseSkusInner.
        :param cache_version_used_to_call_checkout: The cache_version_used_to_call_checkout of this ProductVariations200ResponseSkusInner.
        :param dimensions: The dimensions of this ProductVariations200ResponseSkusInner.
        :param image: The image of this ProductVariations200ResponseSkusInner.
        :param installments: The installments of this ProductVariations200ResponseSkusInner.
        :param installments_insterest_rate: The installments_insterest_rate of this ProductVariations200ResponseSkusInner.
        :param installments_value: The installments_value of this ProductVariations200ResponseSkusInner.
        :param list_price: The list_price of this ProductVariations200ResponseSkusInner.
        :param list_price_formated: The list_price_formated of this ProductVariations200ResponseSkusInner.
        :param measures: The measures of this ProductVariations200ResponseSkusInner.
        :param reward_value: The reward_value of this ProductVariations200ResponseSkusInner.
        :param seller_id: The seller_id of this ProductVariations200ResponseSkusInner.
        :param sku: The sku of this ProductVariations200ResponseSkusInner.
        :param skuname: The skuname of this ProductVariations200ResponseSkusInner.
        :param spot_price: The spot_price of this ProductVariations200ResponseSkusInner.
        :param tax_as_int: The tax_as_int of this ProductVariations200ResponseSkusInner.
        :param tax_formated: The tax_formated of this ProductVariations200ResponseSkusInner.
        :param unit_multiplier: The unit_multiplier of this ProductVariations200ResponseSkusInner.
        """
        self.openapi_types = {
            'available': bool,
            'availablequantity': int,
            'best_price': int,
            'best_price_formated': str,
            'cache_version_used_to_call_checkout': str,
            'dimensions': Dict[str, str],
            'image': str,
            'installments': int,
            'installments_insterest_rate': int,
            'installments_value': int,
            'list_price': int,
            'list_price_formated': str,
            'measures': ProductVariations200ResponseSkusInnerMeasures,
            'reward_value': int,
            'seller_id': str,
            'sku': int,
            'skuname': str,
            'spot_price': int,
            'tax_as_int': int,
            'tax_formated': str,
            'unit_multiplier': float
        }

        self.attribute_map = {
            'available': 'available',
            'availablequantity': 'availablequantity',
            'best_price': 'bestPrice',
            'best_price_formated': 'bestPriceFormated',
            'cache_version_used_to_call_checkout': 'cacheVersionUsedToCallCheckout',
            'dimensions': 'dimensions',
            'image': 'image',
            'installments': 'installments',
            'installments_insterest_rate': 'installmentsInsterestRate',
            'installments_value': 'installmentsValue',
            'list_price': 'listPrice',
            'list_price_formated': 'listPriceFormated',
            'measures': 'measures',
            'reward_value': 'rewardValue',
            'seller_id': 'sellerId',
            'sku': 'sku',
            'skuname': 'skuname',
            'spot_price': 'spotPrice',
            'tax_as_int': 'taxAsInt',
            'tax_formated': 'taxFormated',
            'unit_multiplier': 'unitMultiplier'
        }

        self._available = available
        self._availablequantity = availablequantity
        self._best_price = best_price
        self._best_price_formated = best_price_formated
        self._cache_version_used_to_call_checkout = cache_version_used_to_call_checkout
        self._dimensions = dimensions
        self._image = image
        self._installments = installments
        self._installments_insterest_rate = installments_insterest_rate
        self._installments_value = installments_value
        self._list_price = list_price
        self._list_price_formated = list_price_formated
        self._measures = measures
        self._reward_value = reward_value
        self._seller_id = seller_id
        self._sku = sku
        self._skuname = skuname
        self._spot_price = spot_price
        self._tax_as_int = tax_as_int
        self._tax_formated = tax_formated
        self._unit_multiplier = unit_multiplier

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProductVariations200ResponseSkusInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProductVariations_200_response_skus_inner of this ProductVariations200ResponseSkusInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def available(self):
        """Gets the available of this ProductVariations200ResponseSkusInner.

        Defines if the SKU is available (`true`) or not (`false`).

        :return: The available of this ProductVariations200ResponseSkusInner.
        :rtype: bool
        """
        return self._available

    @available.setter
    def available(self, available):
        """Sets the available of this ProductVariations200ResponseSkusInner.

        Defines if the SKU is available (`true`) or not (`false`).

        :param available: The available of this ProductVariations200ResponseSkusInner.
        :type available: bool
        """

        self._available = available

    @property
    def availablequantity(self):
        """Gets the availablequantity of this ProductVariations200ResponseSkusInner.

        Available quantity of the SKU in stock.

        :return: The availablequantity of this ProductVariations200ResponseSkusInner.
        :rtype: int
        """
        return self._availablequantity

    @availablequantity.setter
    def availablequantity(self, availablequantity):
        """Sets the availablequantity of this ProductVariations200ResponseSkusInner.

        Available quantity of the SKU in stock.

        :param availablequantity: The availablequantity of this ProductVariations200ResponseSkusInner.
        :type availablequantity: int
        """

        self._availablequantity = availablequantity

    @property
    def best_price(self):
        """Gets the best_price of this ProductVariations200ResponseSkusInner.

        Best price.

        :return: The best_price of this ProductVariations200ResponseSkusInner.
        :rtype: int
        """
        return self._best_price

    @best_price.setter
    def best_price(self, best_price):
        """Sets the best_price of this ProductVariations200ResponseSkusInner.

        Best price.

        :param best_price: The best_price of this ProductVariations200ResponseSkusInner.
        :type best_price: int
        """

        self._best_price = best_price

    @property
    def best_price_formated(self):
        """Gets the best_price_formated of this ProductVariations200ResponseSkusInner.

        Best price formatted according to the valid currency.

        :return: The best_price_formated of this ProductVariations200ResponseSkusInner.
        :rtype: str
        """
        return self._best_price_formated

    @best_price_formated.setter
    def best_price_formated(self, best_price_formated):
        """Sets the best_price_formated of this ProductVariations200ResponseSkusInner.

        Best price formatted according to the valid currency.

        :param best_price_formated: The best_price_formated of this ProductVariations200ResponseSkusInner.
        :type best_price_formated: str
        """

        self._best_price_formated = best_price_formated

    @property
    def cache_version_used_to_call_checkout(self):
        """Gets the cache_version_used_to_call_checkout of this ProductVariations200ResponseSkusInner.

        Cache version used to call Checkout.

        :return: The cache_version_used_to_call_checkout of this ProductVariations200ResponseSkusInner.
        :rtype: str
        """
        return self._cache_version_used_to_call_checkout

    @cache_version_used_to_call_checkout.setter
    def cache_version_used_to_call_checkout(self, cache_version_used_to_call_checkout):
        """Sets the cache_version_used_to_call_checkout of this ProductVariations200ResponseSkusInner.

        Cache version used to call Checkout.

        :param cache_version_used_to_call_checkout: The cache_version_used_to_call_checkout of this ProductVariations200ResponseSkusInner.
        :type cache_version_used_to_call_checkout: str
        """

        self._cache_version_used_to_call_checkout = cache_version_used_to_call_checkout

    @property
    def dimensions(self):
        """Gets the dimensions of this ProductVariations200ResponseSkusInner.

        Lists SKU specifications and their respective values.

        :return: The dimensions of this ProductVariations200ResponseSkusInner.
        :rtype: Dict[str, str]
        """
        return self._dimensions

    @dimensions.setter
    def dimensions(self, dimensions):
        """Sets the dimensions of this ProductVariations200ResponseSkusInner.

        Lists SKU specifications and their respective values.

        :param dimensions: The dimensions of this ProductVariations200ResponseSkusInner.
        :type dimensions: Dict[str, str]
        """

        self._dimensions = dimensions

    @property
    def image(self):
        """Gets the image of this ProductVariations200ResponseSkusInner.

        SKU image URL.

        :return: The image of this ProductVariations200ResponseSkusInner.
        :rtype: str
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this ProductVariations200ResponseSkusInner.

        SKU image URL.

        :param image: The image of this ProductVariations200ResponseSkusInner.
        :type image: str
        """

        self._image = image

    @property
    def installments(self):
        """Gets the installments of this ProductVariations200ResponseSkusInner.

        Number of installments.

        :return: The installments of this ProductVariations200ResponseSkusInner.
        :rtype: int
        """
        return self._installments

    @installments.setter
    def installments(self, installments):
        """Sets the installments of this ProductVariations200ResponseSkusInner.

        Number of installments.

        :param installments: The installments of this ProductVariations200ResponseSkusInner.
        :type installments: int
        """

        self._installments = installments

    @property
    def installments_insterest_rate(self):
        """Gets the installments_insterest_rate of this ProductVariations200ResponseSkusInner.

        Interest rate of installments.

        :return: The installments_insterest_rate of this ProductVariations200ResponseSkusInner.
        :rtype: int
        """
        return self._installments_insterest_rate

    @installments_insterest_rate.setter
    def installments_insterest_rate(self, installments_insterest_rate):
        """Sets the installments_insterest_rate of this ProductVariations200ResponseSkusInner.

        Interest rate of installments.

        :param installments_insterest_rate: The installments_insterest_rate of this ProductVariations200ResponseSkusInner.
        :type installments_insterest_rate: int
        """

        self._installments_insterest_rate = installments_insterest_rate

    @property
    def installments_value(self):
        """Gets the installments_value of this ProductVariations200ResponseSkusInner.

        Value of installments.

        :return: The installments_value of this ProductVariations200ResponseSkusInner.
        :rtype: int
        """
        return self._installments_value

    @installments_value.setter
    def installments_value(self, installments_value):
        """Sets the installments_value of this ProductVariations200ResponseSkusInner.

        Value of installments.

        :param installments_value: The installments_value of this ProductVariations200ResponseSkusInner.
        :type installments_value: int
        """

        self._installments_value = installments_value

    @property
    def list_price(self):
        """Gets the list_price of this ProductVariations200ResponseSkusInner.

        List price.

        :return: The list_price of this ProductVariations200ResponseSkusInner.
        :rtype: int
        """
        return self._list_price

    @list_price.setter
    def list_price(self, list_price):
        """Sets the list_price of this ProductVariations200ResponseSkusInner.

        List price.

        :param list_price: The list_price of this ProductVariations200ResponseSkusInner.
        :type list_price: int
        """

        self._list_price = list_price

    @property
    def list_price_formated(self):
        """Gets the list_price_formated of this ProductVariations200ResponseSkusInner.

        List price formatted according to the valid currency.

        :return: The list_price_formated of this ProductVariations200ResponseSkusInner.
        :rtype: str
        """
        return self._list_price_formated

    @list_price_formated.setter
    def list_price_formated(self, list_price_formated):
        """Sets the list_price_formated of this ProductVariations200ResponseSkusInner.

        List price formatted according to the valid currency.

        :param list_price_formated: The list_price_formated of this ProductVariations200ResponseSkusInner.
        :type list_price_formated: str
        """

        self._list_price_formated = list_price_formated

    @property
    def measures(self):
        """Gets the measures of this ProductVariations200ResponseSkusInner.


        :return: The measures of this ProductVariations200ResponseSkusInner.
        :rtype: ProductVariations200ResponseSkusInnerMeasures
        """
        return self._measures

    @measures.setter
    def measures(self, measures):
        """Sets the measures of this ProductVariations200ResponseSkusInner.


        :param measures: The measures of this ProductVariations200ResponseSkusInner.
        :type measures: ProductVariations200ResponseSkusInnerMeasures
        """

        self._measures = measures

    @property
    def reward_value(self):
        """Gets the reward_value of this ProductVariations200ResponseSkusInner.

        SKU reward value for rewards program.

        :return: The reward_value of this ProductVariations200ResponseSkusInner.
        :rtype: int
        """
        return self._reward_value

    @reward_value.setter
    def reward_value(self, reward_value):
        """Sets the reward_value of this ProductVariations200ResponseSkusInner.

        SKU reward value for rewards program.

        :param reward_value: The reward_value of this ProductVariations200ResponseSkusInner.
        :type reward_value: int
        """

        self._reward_value = reward_value

    @property
    def seller_id(self):
        """Gets the seller_id of this ProductVariations200ResponseSkusInner.

        Seller ID.

        :return: The seller_id of this ProductVariations200ResponseSkusInner.
        :rtype: str
        """
        return self._seller_id

    @seller_id.setter
    def seller_id(self, seller_id):
        """Sets the seller_id of this ProductVariations200ResponseSkusInner.

        Seller ID.

        :param seller_id: The seller_id of this ProductVariations200ResponseSkusInner.
        :type seller_id: str
        """

        self._seller_id = seller_id

    @property
    def sku(self):
        """Gets the sku of this ProductVariations200ResponseSkusInner.

        SKU ID.

        :return: The sku of this ProductVariations200ResponseSkusInner.
        :rtype: int
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """Sets the sku of this ProductVariations200ResponseSkusInner.

        SKU ID.

        :param sku: The sku of this ProductVariations200ResponseSkusInner.
        :type sku: int
        """

        self._sku = sku

    @property
    def skuname(self):
        """Gets the skuname of this ProductVariations200ResponseSkusInner.

        SKU Name.

        :return: The skuname of this ProductVariations200ResponseSkusInner.
        :rtype: str
        """
        return self._skuname

    @skuname.setter
    def skuname(self, skuname):
        """Sets the skuname of this ProductVariations200ResponseSkusInner.

        SKU Name.

        :param skuname: The skuname of this ProductVariations200ResponseSkusInner.
        :type skuname: str
        """

        self._skuname = skuname

    @property
    def spot_price(self):
        """Gets the spot_price of this ProductVariations200ResponseSkusInner.

        Spot price.

        :return: The spot_price of this ProductVariations200ResponseSkusInner.
        :rtype: int
        """
        return self._spot_price

    @spot_price.setter
    def spot_price(self, spot_price):
        """Sets the spot_price of this ProductVariations200ResponseSkusInner.

        Spot price.

        :param spot_price: The spot_price of this ProductVariations200ResponseSkusInner.
        :type spot_price: int
        """

        self._spot_price = spot_price

    @property
    def tax_as_int(self):
        """Gets the tax_as_int of this ProductVariations200ResponseSkusInner.

        Tax value.

        :return: The tax_as_int of this ProductVariations200ResponseSkusInner.
        :rtype: int
        """
        return self._tax_as_int

    @tax_as_int.setter
    def tax_as_int(self, tax_as_int):
        """Sets the tax_as_int of this ProductVariations200ResponseSkusInner.

        Tax value.

        :param tax_as_int: The tax_as_int of this ProductVariations200ResponseSkusInner.
        :type tax_as_int: int
        """

        self._tax_as_int = tax_as_int

    @property
    def tax_formated(self):
        """Gets the tax_formated of this ProductVariations200ResponseSkusInner.

        Tax value formatted according to the valid currency.

        :return: The tax_formated of this ProductVariations200ResponseSkusInner.
        :rtype: str
        """
        return self._tax_formated

    @tax_formated.setter
    def tax_formated(self, tax_formated):
        """Sets the tax_formated of this ProductVariations200ResponseSkusInner.

        Tax value formatted according to the valid currency.

        :param tax_formated: The tax_formated of this ProductVariations200ResponseSkusInner.
        :type tax_formated: str
        """

        self._tax_formated = tax_formated

    @property
    def unit_multiplier(self):
        """Gets the unit_multiplier of this ProductVariations200ResponseSkusInner.

        SKU Unit Multiplier.

        :return: The unit_multiplier of this ProductVariations200ResponseSkusInner.
        :rtype: float
        """
        return self._unit_multiplier

    @unit_multiplier.setter
    def unit_multiplier(self, unit_multiplier):
        """Sets the unit_multiplier of this ProductVariations200ResponseSkusInner.

        SKU Unit Multiplier.

        :param unit_multiplier: The unit_multiplier of this ProductVariations200ResponseSkusInner.
        :type unit_multiplier: float
        """

        self._unit_multiplier = unit_multiplier
