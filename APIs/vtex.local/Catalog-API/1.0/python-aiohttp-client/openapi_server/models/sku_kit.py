# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SkuKit(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, quantity: int=None, stock_keeping_unit_id: int=None, stock_keeping_unit_parent: int=None, unit_price: int=None):
        """SkuKit - a model defined in OpenAPI

        :param id: The id of this SkuKit.
        :param quantity: The quantity of this SkuKit.
        :param stock_keeping_unit_id: The stock_keeping_unit_id of this SkuKit.
        :param stock_keeping_unit_parent: The stock_keeping_unit_parent of this SkuKit.
        :param unit_price: The unit_price of this SkuKit.
        """
        self.openapi_types = {
            'id': int,
            'quantity': int,
            'stock_keeping_unit_id': int,
            'stock_keeping_unit_parent': int,
            'unit_price': int
        }

        self.attribute_map = {
            'id': 'Id',
            'quantity': 'Quantity',
            'stock_keeping_unit_id': 'StockKeepingUnitId',
            'stock_keeping_unit_parent': 'StockKeepingUnitParent',
            'unit_price': 'UnitPrice'
        }

        self._id = id
        self._quantity = quantity
        self._stock_keeping_unit_id = stock_keeping_unit_id
        self._stock_keeping_unit_parent = stock_keeping_unit_parent
        self._unit_price = unit_price

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SkuKit':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SkuKit of this SkuKit.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this SkuKit.

        SKU Kit ID, same as `StockKeepingUnitParent`.

        :return: The id of this SkuKit.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SkuKit.

        SKU Kit ID, same as `StockKeepingUnitParent`.

        :param id: The id of this SkuKit.
        :type id: int
        """

        self._id = id

    @property
    def quantity(self):
        """Gets the quantity of this SkuKit.

        Component quantity.

        :return: The quantity of this SkuKit.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this SkuKit.

        Component quantity.

        :param quantity: The quantity of this SkuKit.
        :type quantity: int
        """

        self._quantity = quantity

    @property
    def stock_keeping_unit_id(self):
        """Gets the stock_keeping_unit_id of this SkuKit.

        SKU ID of the kit component.

        :return: The stock_keeping_unit_id of this SkuKit.
        :rtype: int
        """
        return self._stock_keeping_unit_id

    @stock_keeping_unit_id.setter
    def stock_keeping_unit_id(self, stock_keeping_unit_id):
        """Sets the stock_keeping_unit_id of this SkuKit.

        SKU ID of the kit component.

        :param stock_keeping_unit_id: The stock_keeping_unit_id of this SkuKit.
        :type stock_keeping_unit_id: int
        """

        self._stock_keeping_unit_id = stock_keeping_unit_id

    @property
    def stock_keeping_unit_parent(self):
        """Gets the stock_keeping_unit_parent of this SkuKit.

        Parent SKU ID.

        :return: The stock_keeping_unit_parent of this SkuKit.
        :rtype: int
        """
        return self._stock_keeping_unit_parent

    @stock_keeping_unit_parent.setter
    def stock_keeping_unit_parent(self, stock_keeping_unit_parent):
        """Sets the stock_keeping_unit_parent of this SkuKit.

        Parent SKU ID.

        :param stock_keeping_unit_parent: The stock_keeping_unit_parent of this SkuKit.
        :type stock_keeping_unit_parent: int
        """

        self._stock_keeping_unit_parent = stock_keeping_unit_parent

    @property
    def unit_price(self):
        """Gets the unit_price of this SkuKit.

        Component price per unit.

        :return: The unit_price of this SkuKit.
        :rtype: int
        """
        return self._unit_price

    @unit_price.setter
    def unit_price(self, unit_price):
        """Sets the unit_price of this SkuKit.

        Component price per unit.

        :param unit_price: The unit_price of this SkuKit.
        :type unit_price: int
        """

        self._unit_price = unit_price
