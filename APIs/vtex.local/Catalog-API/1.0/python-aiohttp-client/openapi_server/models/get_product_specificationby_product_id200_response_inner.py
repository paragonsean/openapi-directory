# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetProductSpecificationbyProductID200ResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, field_id: int=None, field_value_id: int=None, id: int=None, product_id: int=None, text: str=None):
        """GetProductSpecificationbyProductID200ResponseInner - a model defined in OpenAPI

        :param field_id: The field_id of this GetProductSpecificationbyProductID200ResponseInner.
        :param field_value_id: The field_value_id of this GetProductSpecificationbyProductID200ResponseInner.
        :param id: The id of this GetProductSpecificationbyProductID200ResponseInner.
        :param product_id: The product_id of this GetProductSpecificationbyProductID200ResponseInner.
        :param text: The text of this GetProductSpecificationbyProductID200ResponseInner.
        """
        self.openapi_types = {
            'field_id': int,
            'field_value_id': int,
            'id': int,
            'product_id': int,
            'text': str
        }

        self.attribute_map = {
            'field_id': 'FieldId',
            'field_value_id': 'FieldValueId',
            'id': 'Id',
            'product_id': 'ProductId',
            'text': 'Text'
        }

        self._field_id = field_id
        self._field_value_id = field_value_id
        self._id = id
        self._product_id = product_id
        self._text = text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetProductSpecificationbyProductID200ResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetProductSpecificationbyProductID_200_response_inner of this GetProductSpecificationbyProductID200ResponseInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def field_id(self):
        """Gets the field_id of this GetProductSpecificationbyProductID200ResponseInner.

        Specification ID.

        :return: The field_id of this GetProductSpecificationbyProductID200ResponseInner.
        :rtype: int
        """
        return self._field_id

    @field_id.setter
    def field_id(self, field_id):
        """Sets the field_id of this GetProductSpecificationbyProductID200ResponseInner.

        Specification ID.

        :param field_id: The field_id of this GetProductSpecificationbyProductID200ResponseInner.
        :type field_id: int
        """

        self._field_id = field_id

    @property
    def field_value_id(self):
        """Gets the field_value_id of this GetProductSpecificationbyProductID200ResponseInner.

        Current specification value ID.

        :return: The field_value_id of this GetProductSpecificationbyProductID200ResponseInner.
        :rtype: int
        """
        return self._field_value_id

    @field_value_id.setter
    def field_value_id(self, field_value_id):
        """Sets the field_value_id of this GetProductSpecificationbyProductID200ResponseInner.

        Current specification value ID.

        :param field_value_id: The field_value_id of this GetProductSpecificationbyProductID200ResponseInner.
        :type field_value_id: int
        """

        self._field_value_id = field_value_id

    @property
    def id(self):
        """Gets the id of this GetProductSpecificationbyProductID200ResponseInner.

        ID of the association of the specification and the product. This ID is used to update or delete the specification.

        :return: The id of this GetProductSpecificationbyProductID200ResponseInner.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetProductSpecificationbyProductID200ResponseInner.

        ID of the association of the specification and the product. This ID is used to update or delete the specification.

        :param id: The id of this GetProductSpecificationbyProductID200ResponseInner.
        :type id: int
        """

        self._id = id

    @property
    def product_id(self):
        """Gets the product_id of this GetProductSpecificationbyProductID200ResponseInner.

        Product ID.

        :return: The product_id of this GetProductSpecificationbyProductID200ResponseInner.
        :rtype: int
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """Sets the product_id of this GetProductSpecificationbyProductID200ResponseInner.

        Product ID.

        :param product_id: The product_id of this GetProductSpecificationbyProductID200ResponseInner.
        :type product_id: int
        """

        self._product_id = product_id

    @property
    def text(self):
        """Gets the text of this GetProductSpecificationbyProductID200ResponseInner.

        Current specification value text.

        :return: The text of this GetProductSpecificationbyProductID200ResponseInner.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this GetProductSpecificationbyProductID200ResponseInner.

        Current specification value text.

        :param text: The text of this GetProductSpecificationbyProductID200ResponseInner.
        :type text: str
        """

        self._text = text
