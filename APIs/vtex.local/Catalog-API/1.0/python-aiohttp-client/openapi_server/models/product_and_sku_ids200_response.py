# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.product_and_sku_ids200_response_data import ProductAndSkuIds200ResponseData
from openapi_server.models.product_and_sku_ids200_response_range import ProductAndSkuIds200ResponseRange
from openapi_server import util


class ProductAndSkuIds200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data: ProductAndSkuIds200ResponseData=None, range: ProductAndSkuIds200ResponseRange=None):
        """ProductAndSkuIds200Response - a model defined in OpenAPI

        :param data: The data of this ProductAndSkuIds200Response.
        :param range: The range of this ProductAndSkuIds200Response.
        """
        self.openapi_types = {
            'data': ProductAndSkuIds200ResponseData,
            'range': ProductAndSkuIds200ResponseRange
        }

        self.attribute_map = {
            'data': 'data',
            'range': 'range'
        }

        self._data = data
        self._range = range

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProductAndSkuIds200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProductAndSkuIds_200_response of this ProductAndSkuIds200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data(self):
        """Gets the data of this ProductAndSkuIds200Response.


        :return: The data of this ProductAndSkuIds200Response.
        :rtype: ProductAndSkuIds200ResponseData
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this ProductAndSkuIds200Response.


        :param data: The data of this ProductAndSkuIds200Response.
        :type data: ProductAndSkuIds200ResponseData
        """

        self._data = data

    @property
    def range(self):
        """Gets the range of this ProductAndSkuIds200Response.


        :return: The range of this ProductAndSkuIds200Response.
        :rtype: ProductAndSkuIds200ResponseRange
        """
        return self._range

    @range.setter
    def range(self, range):
        """Sets the range of this ProductAndSkuIds200Response.


        :param range: The range of this ProductAndSkuIds200Response.
        :type range: ProductAndSkuIds200ResponseRange
        """

        self._range = range
