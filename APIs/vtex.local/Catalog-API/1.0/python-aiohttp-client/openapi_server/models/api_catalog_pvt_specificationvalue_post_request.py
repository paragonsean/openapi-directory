# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApiCatalogPvtSpecificationvaluePostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, field_id: int=None, is_active: bool=None, name: str=None, position: int=None, text: str=None):
        """ApiCatalogPvtSpecificationvaluePostRequest - a model defined in OpenAPI

        :param field_id: The field_id of this ApiCatalogPvtSpecificationvaluePostRequest.
        :param is_active: The is_active of this ApiCatalogPvtSpecificationvaluePostRequest.
        :param name: The name of this ApiCatalogPvtSpecificationvaluePostRequest.
        :param position: The position of this ApiCatalogPvtSpecificationvaluePostRequest.
        :param text: The text of this ApiCatalogPvtSpecificationvaluePostRequest.
        """
        self.openapi_types = {
            'field_id': int,
            'is_active': bool,
            'name': str,
            'position': int,
            'text': str
        }

        self.attribute_map = {
            'field_id': 'FieldId',
            'is_active': 'IsActive',
            'name': 'Name',
            'position': 'Position',
            'text': 'Text'
        }

        self._field_id = field_id
        self._is_active = is_active
        self._name = name
        self._position = position
        self._text = text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiCatalogPvtSpecificationvaluePostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _api_catalog_pvt_specificationvalue_post_request of this ApiCatalogPvtSpecificationvaluePostRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def field_id(self):
        """Gets the field_id of this ApiCatalogPvtSpecificationvaluePostRequest.

        Specification ID associated with this specification value.

        :return: The field_id of this ApiCatalogPvtSpecificationvaluePostRequest.
        :rtype: int
        """
        return self._field_id

    @field_id.setter
    def field_id(self, field_id):
        """Sets the field_id of this ApiCatalogPvtSpecificationvaluePostRequest.

        Specification ID associated with this specification value.

        :param field_id: The field_id of this ApiCatalogPvtSpecificationvaluePostRequest.
        :type field_id: int
        """
        if field_id is None:
            raise ValueError("Invalid value for `field_id`, must not be `None`")

        self._field_id = field_id

    @property
    def is_active(self):
        """Gets the is_active of this ApiCatalogPvtSpecificationvaluePostRequest.

        Enable (`true`) or disable (`false`) specification value.

        :return: The is_active of this ApiCatalogPvtSpecificationvaluePostRequest.
        :rtype: bool
        """
        return self._is_active

    @is_active.setter
    def is_active(self, is_active):
        """Sets the is_active of this ApiCatalogPvtSpecificationvaluePostRequest.

        Enable (`true`) or disable (`false`) specification value.

        :param is_active: The is_active of this ApiCatalogPvtSpecificationvaluePostRequest.
        :type is_active: bool
        """

        self._is_active = is_active

    @property
    def name(self):
        """Gets the name of this ApiCatalogPvtSpecificationvaluePostRequest.

        Specification Value name.

        :return: The name of this ApiCatalogPvtSpecificationvaluePostRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ApiCatalogPvtSpecificationvaluePostRequest.

        Specification Value name.

        :param name: The name of this ApiCatalogPvtSpecificationvaluePostRequest.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def position(self):
        """Gets the position of this ApiCatalogPvtSpecificationvaluePostRequest.

        The position of the value to be shown on product registration page (`/admin/Site/Produto.aspx`).

        :return: The position of this ApiCatalogPvtSpecificationvaluePostRequest.
        :rtype: int
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this ApiCatalogPvtSpecificationvaluePostRequest.

        The position of the value to be shown on product registration page (`/admin/Site/Produto.aspx`).

        :param position: The position of this ApiCatalogPvtSpecificationvaluePostRequest.
        :type position: int
        """

        self._position = position

    @property
    def text(self):
        """Gets the text of this ApiCatalogPvtSpecificationvaluePostRequest.

        Specification Value Text.

        :return: The text of this ApiCatalogPvtSpecificationvaluePostRequest.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this ApiCatalogPvtSpecificationvaluePostRequest.

        Specification Value Text.

        :param text: The text of this ApiCatalogPvtSpecificationvaluePostRequest.
        :type text: str
        """

        self._text = text
