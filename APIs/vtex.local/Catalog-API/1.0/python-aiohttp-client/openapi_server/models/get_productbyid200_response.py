# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetProductbyid200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ad_words_remarketing_code: str=None, brand_id: int=None, category_id: int=None, department_id: int=None, description: str=None, description_short: str=None, id: int=None, is_active: bool=None, is_visible: bool=None, key_words: str=None, link_id: str=None, lomadee_campaign_code: str=None, meta_tag_description: str=None, name: str=None, ref_id: str=None, release_date: str=None, score: int=None, show_without_stock: bool=None, supplier_id: int=None, tax_code: str=None, title: str=None):
        """GetProductbyid200Response - a model defined in OpenAPI

        :param ad_words_remarketing_code: The ad_words_remarketing_code of this GetProductbyid200Response.
        :param brand_id: The brand_id of this GetProductbyid200Response.
        :param category_id: The category_id of this GetProductbyid200Response.
        :param department_id: The department_id of this GetProductbyid200Response.
        :param description: The description of this GetProductbyid200Response.
        :param description_short: The description_short of this GetProductbyid200Response.
        :param id: The id of this GetProductbyid200Response.
        :param is_active: The is_active of this GetProductbyid200Response.
        :param is_visible: The is_visible of this GetProductbyid200Response.
        :param key_words: The key_words of this GetProductbyid200Response.
        :param link_id: The link_id of this GetProductbyid200Response.
        :param lomadee_campaign_code: The lomadee_campaign_code of this GetProductbyid200Response.
        :param meta_tag_description: The meta_tag_description of this GetProductbyid200Response.
        :param name: The name of this GetProductbyid200Response.
        :param ref_id: The ref_id of this GetProductbyid200Response.
        :param release_date: The release_date of this GetProductbyid200Response.
        :param score: The score of this GetProductbyid200Response.
        :param show_without_stock: The show_without_stock of this GetProductbyid200Response.
        :param supplier_id: The supplier_id of this GetProductbyid200Response.
        :param tax_code: The tax_code of this GetProductbyid200Response.
        :param title: The title of this GetProductbyid200Response.
        """
        self.openapi_types = {
            'ad_words_remarketing_code': str,
            'brand_id': int,
            'category_id': int,
            'department_id': int,
            'description': str,
            'description_short': str,
            'id': int,
            'is_active': bool,
            'is_visible': bool,
            'key_words': str,
            'link_id': str,
            'lomadee_campaign_code': str,
            'meta_tag_description': str,
            'name': str,
            'ref_id': str,
            'release_date': str,
            'score': int,
            'show_without_stock': bool,
            'supplier_id': int,
            'tax_code': str,
            'title': str
        }

        self.attribute_map = {
            'ad_words_remarketing_code': 'AdWordsRemarketingCode',
            'brand_id': 'BrandId',
            'category_id': 'CategoryId',
            'department_id': 'DepartmentId',
            'description': 'Description',
            'description_short': 'DescriptionShort',
            'id': 'Id',
            'is_active': 'IsActive',
            'is_visible': 'IsVisible',
            'key_words': 'KeyWords',
            'link_id': 'LinkId',
            'lomadee_campaign_code': 'LomadeeCampaignCode',
            'meta_tag_description': 'MetaTagDescription',
            'name': 'Name',
            'ref_id': 'RefId',
            'release_date': 'ReleaseDate',
            'score': 'Score',
            'show_without_stock': 'ShowWithoutStock',
            'supplier_id': 'SupplierId',
            'tax_code': 'TaxCode',
            'title': 'Title'
        }

        self._ad_words_remarketing_code = ad_words_remarketing_code
        self._brand_id = brand_id
        self._category_id = category_id
        self._department_id = department_id
        self._description = description
        self._description_short = description_short
        self._id = id
        self._is_active = is_active
        self._is_visible = is_visible
        self._key_words = key_words
        self._link_id = link_id
        self._lomadee_campaign_code = lomadee_campaign_code
        self._meta_tag_description = meta_tag_description
        self._name = name
        self._ref_id = ref_id
        self._release_date = release_date
        self._score = score
        self._show_without_stock = show_without_stock
        self._supplier_id = supplier_id
        self._tax_code = tax_code
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetProductbyid200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetProductbyid_200_response of this GetProductbyid200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ad_words_remarketing_code(self):
        """Gets the ad_words_remarketing_code of this GetProductbyid200Response.

        This is a legacy field. Do not take this information into consideration.

        :return: The ad_words_remarketing_code of this GetProductbyid200Response.
        :rtype: str
        """
        return self._ad_words_remarketing_code

    @ad_words_remarketing_code.setter
    def ad_words_remarketing_code(self, ad_words_remarketing_code):
        """Sets the ad_words_remarketing_code of this GetProductbyid200Response.

        This is a legacy field. Do not take this information into consideration.

        :param ad_words_remarketing_code: The ad_words_remarketing_code of this GetProductbyid200Response.
        :type ad_words_remarketing_code: str
        """

        self._ad_words_remarketing_code = ad_words_remarketing_code

    @property
    def brand_id(self):
        """Gets the brand_id of this GetProductbyid200Response.

        Brand ID associated with this product.

        :return: The brand_id of this GetProductbyid200Response.
        :rtype: int
        """
        return self._brand_id

    @brand_id.setter
    def brand_id(self, brand_id):
        """Sets the brand_id of this GetProductbyid200Response.

        Brand ID associated with this product.

        :param brand_id: The brand_id of this GetProductbyid200Response.
        :type brand_id: int
        """

        self._brand_id = brand_id

    @property
    def category_id(self):
        """Gets the category_id of this GetProductbyid200Response.

        Category ID associated with this product.

        :return: The category_id of this GetProductbyid200Response.
        :rtype: int
        """
        return self._category_id

    @category_id.setter
    def category_id(self, category_id):
        """Sets the category_id of this GetProductbyid200Response.

        Category ID associated with this product.

        :param category_id: The category_id of this GetProductbyid200Response.
        :type category_id: int
        """

        self._category_id = category_id

    @property
    def department_id(self):
        """Gets the department_id of this GetProductbyid200Response.

        Department ID according to the product's category.

        :return: The department_id of this GetProductbyid200Response.
        :rtype: int
        """
        return self._department_id

    @department_id.setter
    def department_id(self, department_id):
        """Sets the department_id of this GetProductbyid200Response.

        Department ID according to the product's category.

        :param department_id: The department_id of this GetProductbyid200Response.
        :type department_id: int
        """

        self._department_id = department_id

    @property
    def description(self):
        """Gets the description of this GetProductbyid200Response.

        Product description.

        :return: The description of this GetProductbyid200Response.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GetProductbyid200Response.

        Product description.

        :param description: The description of this GetProductbyid200Response.
        :type description: str
        """

        self._description = description

    @property
    def description_short(self):
        """Gets the description_short of this GetProductbyid200Response.

        Short product description. This information can be displayed on both the product page and the shelf, using the following controls:   Store Framework:  `$product.DescriptionShort`.   Legacy CMS Portal: `<vtex.cmc:productDescriptionShort/>`.  

        :return: The description_short of this GetProductbyid200Response.
        :rtype: str
        """
        return self._description_short

    @description_short.setter
    def description_short(self, description_short):
        """Sets the description_short of this GetProductbyid200Response.

        Short product description. This information can be displayed on both the product page and the shelf, using the following controls:   Store Framework:  `$product.DescriptionShort`.   Legacy CMS Portal: `<vtex.cmc:productDescriptionShort/>`.  

        :param description_short: The description_short of this GetProductbyid200Response.
        :type description_short: str
        """

        self._description_short = description_short

    @property
    def id(self):
        """Gets the id of this GetProductbyid200Response.

        Product’s unique numerical identifier.

        :return: The id of this GetProductbyid200Response.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetProductbyid200Response.

        Product’s unique numerical identifier.

        :param id: The id of this GetProductbyid200Response.
        :type id: int
        """

        self._id = id

    @property
    def is_active(self):
        """Gets the is_active of this GetProductbyid200Response.

        Activate (`true`) or inactivate (`false`) product.

        :return: The is_active of this GetProductbyid200Response.
        :rtype: bool
        """
        return self._is_active

    @is_active.setter
    def is_active(self, is_active):
        """Sets the is_active of this GetProductbyid200Response.

        Activate (`true`) or inactivate (`false`) product.

        :param is_active: The is_active of this GetProductbyid200Response.
        :type is_active: bool
        """

        self._is_active = is_active

    @property
    def is_visible(self):
        """Gets the is_visible of this GetProductbyid200Response.

        Shows (`true`) or hides (`false`) the product in search result and product pages, but the product can still be added to the shopping cart. Usually applicable for gifts.

        :return: The is_visible of this GetProductbyid200Response.
        :rtype: bool
        """
        return self._is_visible

    @is_visible.setter
    def is_visible(self, is_visible):
        """Sets the is_visible of this GetProductbyid200Response.

        Shows (`true`) or hides (`false`) the product in search result and product pages, but the product can still be added to the shopping cart. Usually applicable for gifts.

        :param is_visible: The is_visible of this GetProductbyid200Response.
        :type is_visible: bool
        """

        self._is_visible = is_visible

    @property
    def key_words(self):
        """Gets the key_words of this GetProductbyid200Response.

        Store Framework: Deprecated.   Legacy CMS Portal: Keywords or synonyms related to the product, separated by comma (`,`). \"Television\", for example, can have a substitute word like \"TV\". This field is important to make your searches more comprehensive.  

        :return: The key_words of this GetProductbyid200Response.
        :rtype: str
        """
        return self._key_words

    @key_words.setter
    def key_words(self, key_words):
        """Sets the key_words of this GetProductbyid200Response.

        Store Framework: Deprecated.   Legacy CMS Portal: Keywords or synonyms related to the product, separated by comma (`,`). \"Television\", for example, can have a substitute word like \"TV\". This field is important to make your searches more comprehensive.  

        :param key_words: The key_words of this GetProductbyid200Response.
        :type key_words: str
        """

        self._key_words = key_words

    @property
    def link_id(self):
        """Gets the link_id of this GetProductbyid200Response.

        Slug that will be used to build the product page URL. If it not informed, it will be generated according to the product's name replacing spaces and special characters by hyphens (`-`).

        :return: The link_id of this GetProductbyid200Response.
        :rtype: str
        """
        return self._link_id

    @link_id.setter
    def link_id(self, link_id):
        """Sets the link_id of this GetProductbyid200Response.

        Slug that will be used to build the product page URL. If it not informed, it will be generated according to the product's name replacing spaces and special characters by hyphens (`-`).

        :param link_id: The link_id of this GetProductbyid200Response.
        :type link_id: str
        """

        self._link_id = link_id

    @property
    def lomadee_campaign_code(self):
        """Gets the lomadee_campaign_code of this GetProductbyid200Response.

        This is a legacy field. Do not take this information into consideration.

        :return: The lomadee_campaign_code of this GetProductbyid200Response.
        :rtype: str
        """
        return self._lomadee_campaign_code

    @lomadee_campaign_code.setter
    def lomadee_campaign_code(self, lomadee_campaign_code):
        """Sets the lomadee_campaign_code of this GetProductbyid200Response.

        This is a legacy field. Do not take this information into consideration.

        :param lomadee_campaign_code: The lomadee_campaign_code of this GetProductbyid200Response.
        :type lomadee_campaign_code: str
        """

        self._lomadee_campaign_code = lomadee_campaign_code

    @property
    def meta_tag_description(self):
        """Gets the meta_tag_description of this GetProductbyid200Response.

        Brief description of the product for SEO. It is recommended not to exceed 150 characters.

        :return: The meta_tag_description of this GetProductbyid200Response.
        :rtype: str
        """
        return self._meta_tag_description

    @meta_tag_description.setter
    def meta_tag_description(self, meta_tag_description):
        """Sets the meta_tag_description of this GetProductbyid200Response.

        Brief description of the product for SEO. It is recommended not to exceed 150 characters.

        :param meta_tag_description: The meta_tag_description of this GetProductbyid200Response.
        :type meta_tag_description: str
        """

        self._meta_tag_description = meta_tag_description

    @property
    def name(self):
        """Gets the name of this GetProductbyid200Response.

        Product's name. Limited to 150 characters.

        :return: The name of this GetProductbyid200Response.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetProductbyid200Response.

        Product's name. Limited to 150 characters.

        :param name: The name of this GetProductbyid200Response.
        :type name: str
        """

        self._name = name

    @property
    def ref_id(self):
        """Gets the ref_id of this GetProductbyid200Response.

        Product Reference Code.

        :return: The ref_id of this GetProductbyid200Response.
        :rtype: str
        """
        return self._ref_id

    @ref_id.setter
    def ref_id(self, ref_id):
        """Sets the ref_id of this GetProductbyid200Response.

        Product Reference Code.

        :param ref_id: The ref_id of this GetProductbyid200Response.
        :type ref_id: str
        """

        self._ref_id = ref_id

    @property
    def release_date(self):
        """Gets the release_date of this GetProductbyid200Response.

        Used to assist in the ordering of the search result of the site. Using the `O=OrderByReleaseDateDESC` query string, you can pull this value and show the display order by release date. This attribute is also used as a condition for dynamic collections.

        :return: The release_date of this GetProductbyid200Response.
        :rtype: str
        """
        return self._release_date

    @release_date.setter
    def release_date(self, release_date):
        """Sets the release_date of this GetProductbyid200Response.

        Used to assist in the ordering of the search result of the site. Using the `O=OrderByReleaseDateDESC` query string, you can pull this value and show the display order by release date. This attribute is also used as a condition for dynamic collections.

        :param release_date: The release_date of this GetProductbyid200Response.
        :type release_date: str
        """

        self._release_date = release_date

    @property
    def score(self):
        """Gets the score of this GetProductbyid200Response.

        Value used to set the priority on the search result page.

        :return: The score of this GetProductbyid200Response.
        :rtype: int
        """
        return self._score

    @score.setter
    def score(self, score):
        """Sets the score of this GetProductbyid200Response.

        Value used to set the priority on the search result page.

        :param score: The score of this GetProductbyid200Response.
        :type score: int
        """

        self._score = score

    @property
    def show_without_stock(self):
        """Gets the show_without_stock of this GetProductbyid200Response.

        If `true`, activates the [Notify Me](https://help.vtex.com/en/tutorial/setting-up-the-notify-me-option--2VqVifQuf6Co2KG048Yu6e) option when the product is out of stock.

        :return: The show_without_stock of this GetProductbyid200Response.
        :rtype: bool
        """
        return self._show_without_stock

    @show_without_stock.setter
    def show_without_stock(self, show_without_stock):
        """Sets the show_without_stock of this GetProductbyid200Response.

        If `true`, activates the [Notify Me](https://help.vtex.com/en/tutorial/setting-up-the-notify-me-option--2VqVifQuf6Co2KG048Yu6e) option when the product is out of stock.

        :param show_without_stock: The show_without_stock of this GetProductbyid200Response.
        :type show_without_stock: bool
        """

        self._show_without_stock = show_without_stock

    @property
    def supplier_id(self):
        """Gets the supplier_id of this GetProductbyid200Response.


        :return: The supplier_id of this GetProductbyid200Response.
        :rtype: int
        """
        return self._supplier_id

    @supplier_id.setter
    def supplier_id(self, supplier_id):
        """Sets the supplier_id of this GetProductbyid200Response.


        :param supplier_id: The supplier_id of this GetProductbyid200Response.
        :type supplier_id: int
        """

        self._supplier_id = supplier_id

    @property
    def tax_code(self):
        """Gets the tax_code of this GetProductbyid200Response.

        Product tax code, used for tax calculation.

        :return: The tax_code of this GetProductbyid200Response.
        :rtype: str
        """
        return self._tax_code

    @tax_code.setter
    def tax_code(self, tax_code):
        """Sets the tax_code of this GetProductbyid200Response.

        Product tax code, used for tax calculation.

        :param tax_code: The tax_code of this GetProductbyid200Response.
        :type tax_code: str
        """

        self._tax_code = tax_code

    @property
    def title(self):
        """Gets the title of this GetProductbyid200Response.

        Product's Title tag. Limited to 150 characters. It is presented in the browser tab and corresponds to the title of the product page. This field is important for SEO.

        :return: The title of this GetProductbyid200Response.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this GetProductbyid200Response.

        Product's Title tag. Limited to 150 characters. It is presented in the browser tab and corresponds to the title of the product page. This field is important for SEO.

        :param title: The title of this GetProductbyid200Response.
        :type title: str
        """

        self._title = title
