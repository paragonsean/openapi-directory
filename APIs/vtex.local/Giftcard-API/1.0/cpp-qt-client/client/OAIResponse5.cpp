/**
 * GiftCard API
 * >ℹ️ Onboarding guide  >  > Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Gift Card is a payment method configured as a cash value associated with a client. It is used to grant a discount on the value of the order at the store.    > ⚠ A Gift Card works as a **payment method**, not a promotion.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIResponse5.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIResponse5::OAIResponse5(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIResponse5::OAIResponse5() {
    this->initializeModel();
}

OAIResponse5::~OAIResponse5() {}

void OAIResponse5::initializeModel() {

    m_date_isSet = false;
    m_date_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_redemption_mode_isSet = false;
    m_redemption_mode_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIResponse5::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIResponse5::fromJsonObject(QJsonObject json) {

    m_date_isValid = ::OpenAPI::fromJsonValue(m_date, json[QString("date")]);
    m_date_isSet = !json[QString("date")].isNull() && m_date_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_redemption_mode_isValid = ::OpenAPI::fromJsonValue(m_redemption_mode, json[QString("redemptionMode")]);
    m_redemption_mode_isSet = !json[QString("redemptionMode")].isNull() && m_redemption_mode_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIResponse5::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIResponse5::asJsonObject() const {
    QJsonObject obj;
    if (m_date_isSet) {
        obj.insert(QString("date"), ::OpenAPI::toJsonValue(m_date));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_redemption_mode_isSet) {
        obj.insert(QString("redemptionMode"), ::OpenAPI::toJsonValue(m_redemption_mode));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAIResponse5::getDate() const {
    return m_date;
}
void OAIResponse5::setDate(const QString &date) {
    m_date = date;
    m_date_isSet = true;
}

bool OAIResponse5::is_date_Set() const{
    return m_date_isSet;
}

bool OAIResponse5::is_date_Valid() const{
    return m_date_isValid;
}

QString OAIResponse5::getDescription() const {
    return m_description;
}
void OAIResponse5::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIResponse5::is_description_Set() const{
    return m_description_isSet;
}

bool OAIResponse5::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIResponse5::getRedemptionMode() const {
    return m_redemption_mode;
}
void OAIResponse5::setRedemptionMode(const QString &redemption_mode) {
    m_redemption_mode = redemption_mode;
    m_redemption_mode_isSet = true;
}

bool OAIResponse5::is_redemption_mode_Set() const{
    return m_redemption_mode_isSet;
}

bool OAIResponse5::is_redemption_mode_Valid() const{
    return m_redemption_mode_isValid;
}

double OAIResponse5::getValue() const {
    return m_value;
}
void OAIResponse5::setValue(const double &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIResponse5::is_value_Set() const{
    return m_value_isSet;
}

bool OAIResponse5::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIResponse5::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_redemption_mode_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIResponse5::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_date_isValid && m_description_isValid && m_redemption_mode_isValid && m_value_isValid && true;
}

} // namespace OpenAPI
