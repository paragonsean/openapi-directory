/**
 * GiftCard API
 * >ℹ️ Onboarding guide  >  > Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Gift Card is a payment method configured as a cash value associated with a client. It is used to grant a discount on the value of the order at the store.    > ⚠ A Gift Card works as a **payment method**, not a promotion.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateGiftCardTransactionRequest.h
 *
 * 
 */

#ifndef OAICreateGiftCardTransactionRequest_H
#define OAICreateGiftCardTransactionRequest_H

#include <QJsonObject>

#include "OAIOrderInfo.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOrderInfo;

class OAICreateGiftCardTransactionRequest : public OAIObject {
public:
    OAICreateGiftCardTransactionRequest();
    OAICreateGiftCardTransactionRequest(QString json);
    ~OAICreateGiftCardTransactionRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getOperation() const;
    void setOperation(const QString &operation);
    bool is_operation_Set() const;
    bool is_operation_Valid() const;

    OAIOrderInfo getOrderInfo() const;
    void setOrderInfo(const OAIOrderInfo &order_info);
    bool is_order_info_Set() const;
    bool is_order_info_Valid() const;

    QString getRedemptionCode() const;
    void setRedemptionCode(const QString &redemption_code);
    bool is_redemption_code_Set() const;
    bool is_redemption_code_Valid() const;

    QString getRedemptionToken() const;
    void setRedemptionToken(const QString &redemption_token);
    bool is_redemption_token_Set() const;
    bool is_redemption_token_Valid() const;

    QString getRequestId() const;
    void setRequestId(const QString &request_id);
    bool is_request_id_Set() const;
    bool is_request_id_Valid() const;

    double getValue() const;
    void setValue(const double &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_operation;
    bool m_operation_isSet;
    bool m_operation_isValid;

    OAIOrderInfo m_order_info;
    bool m_order_info_isSet;
    bool m_order_info_isValid;

    QString m_redemption_code;
    bool m_redemption_code_isSet;
    bool m_redemption_code_isValid;

    QString m_redemption_token;
    bool m_redemption_token_isSet;
    bool m_redemption_token_isValid;

    QString m_request_id;
    bool m_request_id_isSet;
    bool m_request_id_isValid;

    double m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateGiftCardTransactionRequest)

#endif // OAICreateGiftCardTransactionRequest_H
