/**
 * GiftCard API
 * >ℹ️ Onboarding guide  >  > Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Gift Card is a payment method configured as a cash value associated with a client. It is used to grant a discount on the value of the order at the store.    > ⚠ A Gift Card works as a **payment method**, not a promotion.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIClient.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIClient::OAIClient(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIClient::OAIClient() {
    this->initializeModel();
}

OAIClient::~OAIClient() {}

void OAIClient::initializeModel() {

    m_document_isSet = false;
    m_document_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;
}

void OAIClient::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIClient::fromJsonObject(QJsonObject json) {

    m_document_isValid = ::OpenAPI::fromJsonValue(m_document, json[QString("document")]);
    m_document_isSet = !json[QString("document")].isNull() && m_document_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;
}

QString OAIClient::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIClient::asJsonObject() const {
    QJsonObject obj;
    if (m_document_isSet) {
        obj.insert(QString("document"), ::OpenAPI::toJsonValue(m_document));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    return obj;
}

QString OAIClient::getDocument() const {
    return m_document;
}
void OAIClient::setDocument(const QString &document) {
    m_document = document;
    m_document_isSet = true;
}

bool OAIClient::is_document_Set() const{
    return m_document_isSet;
}

bool OAIClient::is_document_Valid() const{
    return m_document_isValid;
}

QString OAIClient::getEmail() const {
    return m_email;
}
void OAIClient::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIClient::is_email_Set() const{
    return m_email_isSet;
}

bool OAIClient::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIClient::getId() const {
    return m_id;
}
void OAIClient::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIClient::is_id_Set() const{
    return m_id_isSet;
}

bool OAIClient::is_id_Valid() const{
    return m_id_isValid;
}

bool OAIClient::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_document_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIClient::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_document_isValid && m_email_isValid && m_id_isValid && true;
}

} // namespace OpenAPI
