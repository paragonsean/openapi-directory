/**
 * GiftCard API
 * >ℹ️ Onboarding guide  >  > Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Gift Card is a payment method configured as a cash value associated with a client. It is used to grant a discount on the value of the order at the store.    > ⚠ A Gift Card works as a **payment method**, not a promotion.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIItem1.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIItem1::OAIItem1(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIItem1::OAIItem1() {
    this->initializeModel();
}

OAIItem1::~OAIItem1() {}

void OAIItem1::initializeModel() {

    m__self_isSet = false;
    m__self_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;
}

void OAIItem1::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIItem1::fromJsonObject(QJsonObject json) {

    m__self_isValid = ::OpenAPI::fromJsonValue(m__self, json[QString("_self")]);
    m__self_isSet = !json[QString("_self")].isNull() && m__self_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;
}

QString OAIItem1::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIItem1::asJsonObject() const {
    QJsonObject obj;
    if (m__self.isSet()) {
        obj.insert(QString("_self"), ::OpenAPI::toJsonValue(m__self));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    return obj;
}

OAISelf OAIItem1::getSelf() const {
    return m__self;
}
void OAIItem1::setSelf(const OAISelf &_self) {
    m__self = _self;
    m__self_isSet = true;
}

bool OAIItem1::is__self_Set() const{
    return m__self_isSet;
}

bool OAIItem1::is__self_Valid() const{
    return m__self_isValid;
}

QString OAIItem1::getId() const {
    return m_id;
}
void OAIItem1::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIItem1::is_id_Set() const{
    return m_id_isSet;
}

bool OAIItem1::is_id_Valid() const{
    return m_id_isValid;
}

bool OAIItem1::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m__self.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIItem1::isValid() const {
    // only required properties are required for the object to be considered valid
    return m__self_isValid && m_id_isValid && true;
}

} // namespace OpenAPI
