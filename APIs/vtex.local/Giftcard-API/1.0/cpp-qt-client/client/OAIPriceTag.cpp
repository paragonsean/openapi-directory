/**
 * GiftCard API
 * >ℹ️ Onboarding guide  >  > Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Gift Card is a payment method configured as a cash value associated with a client. It is used to grant a discount on the value of the order at the store.    > ⚠ A Gift Card works as a **payment method**, not a promotion.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPriceTag.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPriceTag::OAIPriceTag(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPriceTag::OAIPriceTag() {
    this->initializeModel();
}

OAIPriceTag::~OAIPriceTag() {}

void OAIPriceTag::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIPriceTag::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPriceTag::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIPriceTag::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPriceTag::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAIPriceTag::getName() const {
    return m_name;
}
void OAIPriceTag::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIPriceTag::is_name_Set() const{
    return m_name_isSet;
}

bool OAIPriceTag::is_name_Valid() const{
    return m_name_isValid;
}

qint32 OAIPriceTag::getValue() const {
    return m_value;
}
void OAIPriceTag::setValue(const qint32 &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIPriceTag::is_value_Set() const{
    return m_value_isSet;
}

bool OAIPriceTag::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIPriceTag::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPriceTag::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && m_value_isValid && true;
}

} // namespace OpenAPI
