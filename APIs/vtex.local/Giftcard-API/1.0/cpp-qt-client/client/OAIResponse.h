/**
 * GiftCard API
 * >ℹ️ Onboarding guide  >  > Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Gift Card is a payment method configured as a cash value associated with a client. It is used to grant a discount on the value of the order at the store.    > ⚠ A Gift Card works as a **payment method**, not a promotion.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResponse.h
 *
 * 
 */

#ifndef OAIResponse_H
#define OAIResponse_H

#include <QJsonObject>

#include "OAITransactions.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITransactions;

class OAIResponse : public OAIObject {
public:
    OAIResponse();
    OAIResponse(QString json);
    ~OAIResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getBalance() const;
    void setBalance(const qint32 &balance);
    bool is_balance_Set() const;
    bool is_balance_Valid() const;

    QString getCaption() const;
    void setCaption(const QString &caption);
    bool is_caption_Set() const;
    bool is_caption_Valid() const;

    QString getEmissionDate() const;
    void setEmissionDate(const QString &emission_date);
    bool is_emission_date_Set() const;
    bool is_emission_date_Valid() const;

    QString getExpiringDate() const;
    void setExpiringDate(const QString &expiring_date);
    bool is_expiring_date_Set() const;
    bool is_expiring_date_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getRedemptionCode() const;
    void setRedemptionCode(const QString &redemption_code);
    bool is_redemption_code_Set() const;
    bool is_redemption_code_Valid() const;

    QString getRedemptionToken() const;
    void setRedemptionToken(const QString &redemption_token);
    bool is_redemption_token_Set() const;
    bool is_redemption_token_Valid() const;

    QString getRelationName() const;
    void setRelationName(const QString &relation_name);
    bool is_relation_name_Set() const;
    bool is_relation_name_Valid() const;

    OAITransactions getTransactions() const;
    void setTransactions(const OAITransactions &transactions);
    bool is_transactions_Set() const;
    bool is_transactions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_balance;
    bool m_balance_isSet;
    bool m_balance_isValid;

    QString m_caption;
    bool m_caption_isSet;
    bool m_caption_isValid;

    QString m_emission_date;
    bool m_emission_date_isSet;
    bool m_emission_date_isValid;

    QString m_expiring_date;
    bool m_expiring_date_isSet;
    bool m_expiring_date_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_redemption_code;
    bool m_redemption_code_isSet;
    bool m_redemption_code_isValid;

    QString m_redemption_token;
    bool m_redemption_token_isSet;
    bool m_redemption_token_isValid;

    QString m_relation_name;
    bool m_relation_name_isSet;
    bool m_relation_name_isValid;

    OAITransactions m_transactions;
    bool m_transactions_isSet;
    bool m_transactions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResponse)

#endif // OAIResponse_H
