/**
 * GiftCard API
 * >ℹ️ Onboarding guide  >  > Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Gift Card is a payment method configured as a cash value associated with a client. It is used to grant a discount on the value of the order at the store.    > ⚠ A Gift Card works as a **payment method**, not a promotion.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISettleGiftCardTransactionRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISettleGiftCardTransactionRequest::OAISettleGiftCardTransactionRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISettleGiftCardTransactionRequest::OAISettleGiftCardTransactionRequest() {
    this->initializeModel();
}

OAISettleGiftCardTransactionRequest::~OAISettleGiftCardTransactionRequest() {}

void OAISettleGiftCardTransactionRequest::initializeModel() {

    m_request_id_isSet = false;
    m_request_id_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAISettleGiftCardTransactionRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISettleGiftCardTransactionRequest::fromJsonObject(QJsonObject json) {

    m_request_id_isValid = ::OpenAPI::fromJsonValue(m_request_id, json[QString("requestId")]);
    m_request_id_isSet = !json[QString("requestId")].isNull() && m_request_id_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAISettleGiftCardTransactionRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISettleGiftCardTransactionRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_request_id_isSet) {
        obj.insert(QString("requestId"), ::OpenAPI::toJsonValue(m_request_id));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAISettleGiftCardTransactionRequest::getRequestId() const {
    return m_request_id;
}
void OAISettleGiftCardTransactionRequest::setRequestId(const QString &request_id) {
    m_request_id = request_id;
    m_request_id_isSet = true;
}

bool OAISettleGiftCardTransactionRequest::is_request_id_Set() const{
    return m_request_id_isSet;
}

bool OAISettleGiftCardTransactionRequest::is_request_id_Valid() const{
    return m_request_id_isValid;
}

double OAISettleGiftCardTransactionRequest::getValue() const {
    return m_value;
}
void OAISettleGiftCardTransactionRequest::setValue(const double &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAISettleGiftCardTransactionRequest::is_value_Set() const{
    return m_value_isSet;
}

bool OAISettleGiftCardTransactionRequest::is_value_Valid() const{
    return m_value_isValid;
}

bool OAISettleGiftCardTransactionRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_request_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISettleGiftCardTransactionRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_request_id_isValid && m_value_isValid && true;
}

} // namespace OpenAPI
