/**
 * GiftCard API
 * >ℹ️ Onboarding guide  >  > Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Gift Card is a payment method configured as a cash value associated with a client. It is used to grant a discount on the value of the order at the store.    > ⚠ A Gift Card works as a **payment method**, not a promotion.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateGiftCardRequest.h
 *
 * 
 */

#ifndef OAICreateGiftCardRequest_H
#define OAICreateGiftCardRequest_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateGiftCardRequest : public OAIObject {
public:
    OAICreateGiftCardRequest();
    OAICreateGiftCardRequest(QString json);
    ~OAICreateGiftCardRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCaption() const;
    void setCaption(const QString &caption);
    bool is_caption_Set() const;
    bool is_caption_Valid() const;

    QString getExpiringDate() const;
    void setExpiringDate(const QString &expiring_date);
    bool is_expiring_date_Set() const;
    bool is_expiring_date_Valid() const;

    bool isMultipleCredits() const;
    void setMultipleCredits(const bool &multiple_credits);
    bool is_multiple_credits_Set() const;
    bool is_multiple_credits_Valid() const;

    bool isMultipleRedemptions() const;
    void setMultipleRedemptions(const bool &multiple_redemptions);
    bool is_multiple_redemptions_Set() const;
    bool is_multiple_redemptions_Valid() const;

    QString getProfileId() const;
    void setProfileId(const QString &profile_id);
    bool is_profile_id_Set() const;
    bool is_profile_id_Valid() const;

    QString getRelationName() const;
    void setRelationName(const QString &relation_name);
    bool is_relation_name_Set() const;
    bool is_relation_name_Valid() const;

    bool isRestrictedToOwner() const;
    void setRestrictedToOwner(const bool &restricted_to_owner);
    bool is_restricted_to_owner_Set() const;
    bool is_restricted_to_owner_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_caption;
    bool m_caption_isSet;
    bool m_caption_isValid;

    QString m_expiring_date;
    bool m_expiring_date_isSet;
    bool m_expiring_date_isValid;

    bool m_multiple_credits;
    bool m_multiple_credits_isSet;
    bool m_multiple_credits_isValid;

    bool m_multiple_redemptions;
    bool m_multiple_redemptions_isSet;
    bool m_multiple_redemptions_isValid;

    QString m_profile_id;
    bool m_profile_id_isSet;
    bool m_profile_id_isValid;

    QString m_relation_name;
    bool m_relation_name_isSet;
    bool m_relation_name_isValid;

    bool m_restricted_to_owner;
    bool m_restricted_to_owner_isSet;
    bool m_restricted_to_owner_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateGiftCardRequest)

#endif // OAICreateGiftCardRequest_H
