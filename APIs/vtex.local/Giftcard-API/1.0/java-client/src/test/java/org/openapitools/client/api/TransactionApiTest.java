/*
 * GiftCard API
 * >ℹ️ Onboarding guide  >  > Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Gift Card is a payment method configured as a cash value associated with a client. It is used to grant a discount on the value of the order at the store.    > ⚠ A Gift Card works as a **payment method**, not a promotion.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CancelGiftCardTransactionRequest;
import org.openapitools.client.model.CreateGiftCardTransactionRequest;
import org.openapitools.client.model.Response3;
import org.openapitools.client.model.Response5;
import org.openapitools.client.model.Response6;
import org.openapitools.client.model.Response7;
import org.openapitools.client.model.SettleGiftCardTransactionRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransactionApi
 */
@Disabled
public class TransactionApiTest {

    private final TransactionApi api = new TransactionApi();

    /**
     * Cancel GiftCard Transaction
     *
     * Creates a cancellation in the transaction. Cancel a item reservation or create a refund.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cancelGiftCardTransactionTest() throws ApiException {
        String accept = null;
        String contentType = null;
        String giftCardID = null;
        String transactionID = null;
        CancelGiftCardTransactionRequest cancelGiftCardTransactionRequest = null;
        Response6 response = api.cancelGiftCardTransaction(accept, contentType, giftCardID, transactionID, cancelGiftCardTransactionRequest);
        // TODO: test validations
    }

    /**
     * Create GiftCard Transaction
     *
     * Register a new giftcard transaction and authorize the item reservation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createGiftCardTransactionTest() throws ApiException {
        String accept = null;
        String contentType = null;
        String giftCardID = null;
        CreateGiftCardTransactionRequest createGiftCardTransactionRequest = null;
        Response3 response = api.createGiftCardTransaction(accept, contentType, giftCardID, createGiftCardTransactionRequest);
        // TODO: test validations
    }

    /**
     * Get GiftCard Transaction by ID
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGiftCardTransactionbyIDTest() throws ApiException {
        String accept = null;
        String contentType = null;
        String giftCardID = null;
        String transactionID = null;
        Response5 response = api.getGiftCardTransactionbyID(accept, contentType, giftCardID, transactionID);
        // TODO: test validations
    }

    /**
     * Get GiftCard Transactions
     *
     * Returns all transaction of a giftcard.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGiftCardTransactionsTest() throws ApiException {
        String accept = null;
        String contentType = null;
        String giftCardID = null;
        List<Response3> response = api.getGiftCardTransactions(accept, contentType, giftCardID);
        // TODO: test validations
    }

    /**
     * Get Transaction Authorizations
     *
     * Returns the giftcard transaction authorizations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTransactionAuthorizationsTest() throws ApiException {
        String accept = null;
        String contentType = null;
        String giftCardID = null;
        String transactionID = null;
        Response6 response = api.getTransactionAuthorizations(accept, contentType, giftCardID, transactionID);
        // TODO: test validations
    }

    /**
     * Get Transaction Cancellations
     *
     * Returns the giftcard transaction cancellations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTransactionCancellationsTest() throws ApiException {
        String accept = null;
        String contentType = null;
        String giftCardID = null;
        String transactionID = null;
        List<Response7> response = api.getTransactionCancellations(accept, contentType, giftCardID, transactionID);
        // TODO: test validations
    }

    /**
     * Get Transaction Settlements
     *
     * Returns the giftcard transaction settlements.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTransactionSettlementsTest() throws ApiException {
        String accept = null;
        String contentType = null;
        String giftCardID = null;
        String transactionID = null;
        List<Response6> response = api.getTransactionSettlements(accept, contentType, giftCardID, transactionID);
        // TODO: test validations
    }

    /**
     * Settle GiftCard Transaction
     *
     * Creates a giftcard transaction settlement.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void settleGiftCardTransactionTest() throws ApiException {
        String accept = null;
        String contentType = null;
        String giftCardID = null;
        String transactionID = null;
        SettleGiftCardTransactionRequest settleGiftCardTransactionRequest = null;
        Response6 response = api.settleGiftCardTransaction(accept, contentType, giftCardID, transactionID, settleGiftCardTransactionRequest);
        // TODO: test validations
    }

}
