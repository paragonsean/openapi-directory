/*
 * GiftCard API
 * >ℹ️ Onboarding guide  >  > Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Gift Card is a payment method configured as a cash value associated with a client. It is used to grant a discount on the value of the order at the store.    > ⚠ A Gift Card works as a **payment method**, not a promotion.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateGiftCardRequest;
import org.openapitools.client.model.GetGiftCardusingJSONRequest;
import org.openapitools.client.model.Response;
import org.openapitools.client.model.Response2;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GiftCardApi
 */
@Disabled
public class GiftCardApiTest {

    private final GiftCardApi api = new GiftCardApi();

    /**
     * Create GiftCard
     *
     * Creates a GiftCard for a specific user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createGiftCardTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String xVTEXAPIAppKey = null;
        String xVTEXAPIAppToken = null;
        CreateGiftCardRequest createGiftCardRequest = null;
        Response response = api.createGiftCard(contentType, accept, xVTEXAPIAppKey, xVTEXAPIAppToken, createGiftCardRequest);
        // TODO: test validations
    }

    /**
     * Get GiftCard by ID
     *
     * Returns associated data for a specified giftcardId.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGiftCardbyIDTest() throws ApiException {
        String accept = null;
        String contentType = null;
        String giftCardID = null;
        Response response = api.getGiftCardbyID(accept, contentType, giftCardID);
        // TODO: test validations
    }

    /**
     * Get GiftCard using JSON
     *
     * Returns the giftcards based on the cart data.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGiftCardusingJSONTest() throws ApiException {
        String accept = null;
        String contentType = null;
        GetGiftCardusingJSONRequest getGiftCardusingJSONRequest = null;
        String reSTRange = null;
        Response2 response = api.getGiftCardusingJSON(accept, contentType, getGiftCardusingJSONRequest, reSTRange);
        // TODO: test validations
    }

}
