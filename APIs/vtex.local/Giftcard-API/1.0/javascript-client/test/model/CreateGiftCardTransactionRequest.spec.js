/**
 * GiftCard API
 * >ℹ️ Onboarding guide  >  > Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Gift Card is a payment method configured as a cash value associated with a client. It is used to grant a discount on the value of the order at the store.    > ⚠ A Gift Card works as a **payment method**, not a promotion.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GiftCardApi);
  }
}(this, function(expect, GiftCardApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GiftCardApi.CreateGiftCardTransactionRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CreateGiftCardTransactionRequest', function() {
    it('should create an instance of CreateGiftCardTransactionRequest', function() {
      // uncomment below and update the code to test CreateGiftCardTransactionRequest
      //var instance = new GiftCardApi.CreateGiftCardTransactionRequest();
      //expect(instance).to.be.a(GiftCardApi.CreateGiftCardTransactionRequest);
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new GiftCardApi.CreateGiftCardTransactionRequest();
      //expect(instance).to.be();
    });

    it('should have the property operation (base name: "operation")', function() {
      // uncomment below and update the code to test the property operation
      //var instance = new GiftCardApi.CreateGiftCardTransactionRequest();
      //expect(instance).to.be();
    });

    it('should have the property orderInfo (base name: "orderInfo")', function() {
      // uncomment below and update the code to test the property orderInfo
      //var instance = new GiftCardApi.CreateGiftCardTransactionRequest();
      //expect(instance).to.be();
    });

    it('should have the property redemptionCode (base name: "redemptionCode")', function() {
      // uncomment below and update the code to test the property redemptionCode
      //var instance = new GiftCardApi.CreateGiftCardTransactionRequest();
      //expect(instance).to.be();
    });

    it('should have the property redemptionToken (base name: "redemptionToken")', function() {
      // uncomment below and update the code to test the property redemptionToken
      //var instance = new GiftCardApi.CreateGiftCardTransactionRequest();
      //expect(instance).to.be();
    });

    it('should have the property requestId (base name: "requestId")', function() {
      // uncomment below and update the code to test the property requestId
      //var instance = new GiftCardApi.CreateGiftCardTransactionRequest();
      //expect(instance).to.be();
    });

    it('should have the property value (base name: "value")', function() {
      // uncomment below and update the code to test the property value
      //var instance = new GiftCardApi.CreateGiftCardTransactionRequest();
      //expect(instance).to.be();
    });

  });

}));
