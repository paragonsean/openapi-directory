/**
 * GiftCard API
 * >ℹ️ Onboarding guide  >  > Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Gift Card is a payment method configured as a cash value associated with a client. It is used to grant a discount on the value of the order at the store.    > ⚠ A Gift Card works as a **payment method**, not a promotion.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GiftCardApi);
  }
}(this, function(expect, GiftCardApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GiftCardApi.CreateGiftCardRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CreateGiftCardRequest', function() {
    it('should create an instance of CreateGiftCardRequest', function() {
      // uncomment below and update the code to test CreateGiftCardRequest
      //var instance = new GiftCardApi.CreateGiftCardRequest();
      //expect(instance).to.be.a(GiftCardApi.CreateGiftCardRequest);
    });

    it('should have the property caption (base name: "caption")', function() {
      // uncomment below and update the code to test the property caption
      //var instance = new GiftCardApi.CreateGiftCardRequest();
      //expect(instance).to.be();
    });

    it('should have the property expiringDate (base name: "expiringDate")', function() {
      // uncomment below and update the code to test the property expiringDate
      //var instance = new GiftCardApi.CreateGiftCardRequest();
      //expect(instance).to.be();
    });

    it('should have the property multipleCredits (base name: "multipleCredits")', function() {
      // uncomment below and update the code to test the property multipleCredits
      //var instance = new GiftCardApi.CreateGiftCardRequest();
      //expect(instance).to.be();
    });

    it('should have the property multipleRedemptions (base name: "multipleRedemptions")', function() {
      // uncomment below and update the code to test the property multipleRedemptions
      //var instance = new GiftCardApi.CreateGiftCardRequest();
      //expect(instance).to.be();
    });

    it('should have the property profileId (base name: "profileId")', function() {
      // uncomment below and update the code to test the property profileId
      //var instance = new GiftCardApi.CreateGiftCardRequest();
      //expect(instance).to.be();
    });

    it('should have the property relationName (base name: "relationName")', function() {
      // uncomment below and update the code to test the property relationName
      //var instance = new GiftCardApi.CreateGiftCardRequest();
      //expect(instance).to.be();
    });

    it('should have the property restrictedToOwner (base name: "restrictedToOwner")', function() {
      // uncomment below and update the code to test the property restrictedToOwner
      //var instance = new GiftCardApi.CreateGiftCardRequest();
      //expect(instance).to.be();
    });

  });

}));
