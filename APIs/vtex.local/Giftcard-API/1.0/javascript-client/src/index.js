/**
 * GiftCard API
 * >ℹ️ Onboarding guide  >  > Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer's journey.    The Gift Card is a payment method configured as a cash value associated with a client. It is used to grant a discount on the value of the order at the store.    > ⚠ A Gift Card works as a **payment method**, not a promotion.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import CancelGiftCardTransactionRequest from './model/CancelGiftCardTransactionRequest';
import Cart from './model/Cart';
import Cart1 from './model/Cart1';
import Client from './model/Client';
import ClientProfile from './model/ClientProfile';
import CreateGiftCardRequest from './model/CreateGiftCardRequest';
import CreateGiftCardTransactionRequest from './model/CreateGiftCardTransactionRequest';
import GetGiftCardusingJSONRequest from './model/GetGiftCardusingJSONRequest';
import Item from './model/Item';
import Item1 from './model/Item1';
import Item2 from './model/Item2';
import OrderInfo from './model/OrderInfo';
import Paging from './model/Paging';
import PriceTag from './model/PriceTag';
import Response from './model/Response';
import Response2 from './model/Response2';
import Response3 from './model/Response3';
import Response5 from './model/Response5';
import Response6 from './model/Response6';
import Response7 from './model/Response7';
import Self from './model/Self';
import SettleGiftCardTransactionRequest from './model/SettleGiftCardTransactionRequest';
import Shipping from './model/Shipping';
import Transactions from './model/Transactions';
import GiftCardApi from './api/GiftCardApi';
import TransactionApi from './api/TransactionApi';


/**
* &gt;ℹ️ Onboarding guide  &gt;  &gt; Check the new [Payments onboarding guide](https://developers.vtex.com/docs/guides/payments-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Payments and is organized by focusing on the developer&#39;s journey.    The Gift Card is a payment method configured as a cash value associated with a client. It is used to grant a discount on the value of the order at the store.    &gt; ⚠ A Gift Card works as a **payment method**, not a promotion..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var GiftCardApi = require('index'); // See note below*.
* var xxxSvc = new GiftCardApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new GiftCardApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new GiftCardApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new GiftCardApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The CancelGiftCardTransactionRequest model constructor.
     * @property {module:model/CancelGiftCardTransactionRequest}
     */
    CancelGiftCardTransactionRequest,

    /**
     * The Cart model constructor.
     * @property {module:model/Cart}
     */
    Cart,

    /**
     * The Cart1 model constructor.
     * @property {module:model/Cart1}
     */
    Cart1,

    /**
     * The Client model constructor.
     * @property {module:model/Client}
     */
    Client,

    /**
     * The ClientProfile model constructor.
     * @property {module:model/ClientProfile}
     */
    ClientProfile,

    /**
     * The CreateGiftCardRequest model constructor.
     * @property {module:model/CreateGiftCardRequest}
     */
    CreateGiftCardRequest,

    /**
     * The CreateGiftCardTransactionRequest model constructor.
     * @property {module:model/CreateGiftCardTransactionRequest}
     */
    CreateGiftCardTransactionRequest,

    /**
     * The GetGiftCardusingJSONRequest model constructor.
     * @property {module:model/GetGiftCardusingJSONRequest}
     */
    GetGiftCardusingJSONRequest,

    /**
     * The Item model constructor.
     * @property {module:model/Item}
     */
    Item,

    /**
     * The Item1 model constructor.
     * @property {module:model/Item1}
     */
    Item1,

    /**
     * The Item2 model constructor.
     * @property {module:model/Item2}
     */
    Item2,

    /**
     * The OrderInfo model constructor.
     * @property {module:model/OrderInfo}
     */
    OrderInfo,

    /**
     * The Paging model constructor.
     * @property {module:model/Paging}
     */
    Paging,

    /**
     * The PriceTag model constructor.
     * @property {module:model/PriceTag}
     */
    PriceTag,

    /**
     * The Response model constructor.
     * @property {module:model/Response}
     */
    Response,

    /**
     * The Response2 model constructor.
     * @property {module:model/Response2}
     */
    Response2,

    /**
     * The Response3 model constructor.
     * @property {module:model/Response3}
     */
    Response3,

    /**
     * The Response5 model constructor.
     * @property {module:model/Response5}
     */
    Response5,

    /**
     * The Response6 model constructor.
     * @property {module:model/Response6}
     */
    Response6,

    /**
     * The Response7 model constructor.
     * @property {module:model/Response7}
     */
    Response7,

    /**
     * The Self model constructor.
     * @property {module:model/Self}
     */
    Self,

    /**
     * The SettleGiftCardTransactionRequest model constructor.
     * @property {module:model/SettleGiftCardTransactionRequest}
     */
    SettleGiftCardTransactionRequest,

    /**
     * The Shipping model constructor.
     * @property {module:model/Shipping}
     */
    Shipping,

    /**
     * The Transactions model constructor.
     * @property {module:model/Transactions}
     */
    Transactions,

    /**
    * The GiftCardApi service constructor.
    * @property {module:api/GiftCardApi}
    */
    GiftCardApi,

    /**
    * The TransactionApi service constructor.
    * @property {module:api/TransactionApi}
    */
    TransactionApi
};
