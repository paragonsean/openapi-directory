/*
 * Marketplace API
 *   The **Marketplace API** enables marketplaces and sellers hosted on VTEX to perform their collaborative operations.      >⚠️ The marketplace must [create an appKey and appToken](https://developers.vtex.com/docs/guides/getting-started-authentication) for each non-VTEX seller that will use this API.    ## Index    ### Notification    Endpoints used by sellers to notify marketplaces that the price or inventory language has changed for one of their SKUs.    `POST` [Notify marketplace of price update](https://developers.vtex.com/docs/api-reference/marketplace-apis#post-/notificator/-sellerId-/changenotification/-skuId-/price)    `POST` [Notify marketplace of inventory update](https://developers.vtex.com/docs/api-reference/marketplace-apis#post-/notificator/-sellerId-/changenotification/-skuId-/inventory)      ### Suggestions    #### Get Suggestions    Search and filter all suggestions using specific criteria.    `GET` [Get all SKU Suggestions](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions)    `GET` [Get SKU Suggestion by ID](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/-sellerId-/-sellerSkuId-)      #### Manage Suggestions    Send or delete SKU suggestions from the seller to marketplace.    `PUT` [Send SKU Suggestion](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/-sellerId-/-sellerSkuId-)    `DELETE` [Delete SKU Suggestion](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#delete-/suggestions/-sellerId-/-sellerSkuId-)      #### Get Versions    Search and filter all versions of suggestions, using specific criteria.    `GET` [Get all versions](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/-sellerId-/-sellerskuid-/versions)    `GET` [Get version by ID](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/-sellerId-/-sellerskuid-/versions/-version-)      #### Match Received SKUs    Match SKU suggestions received in the marketplace.    `PUT` [Match Received SKUs individually](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/-sellerId-/-sellerskuid-/versions/-version-/matches/-matchid-)    `PUT` [Match Multiple Received SKUs](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/matches/action/-actionName-)      #### SKU Approval Settings    Allows marketplaces to configure rules for automatically and manually approving SKUs received from sellers.    `GET`[Get autoApprove Status in Account Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/configuration/autoapproval/toggle)      `PUT`[Activate autoApprove in Marketplace's Account](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration/autoapproval/toggle)      `GET`[Get Account's Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/configuration)    `PUT`[Save Account's Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration)    `GET`[Get Seller's Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/configuration/seller/-sellerId-)    `PUT`[Save Seller's Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration/seller/-sellerId-)    `PUT`[Activate autoApprove Setting for a Seller](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration/autoapproval/toggle/seller/-sellerId-)         ### Matched Offers    Offers are seller products and SKUs that were sent to the marketplace, and already have their price and inventory level configured.    `GET`[Get Matched Offers List](https://developers.vtex.com/docs/api-reference/marketplace-apis#get-/offer-manager/pvt/offers)    `GET`[Get Matched Offer's Data by SKU ID](https://developers.vtex.com/docs/api-reference/marketplace-apis#get-/offer-manager/pvt/product/-productId-/sku/-skuId-)      `GET`[Get Matched Offer's Data by Product ID](https://developers.vtex.com/docs/api-reference/marketplace-apis#get-/offer-manager/pvt/product/-productId-)  
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * OffersPerSalesChannel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:56:15.351495-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class OffersPerSalesChannel {
  public static final String SERIALIZED_NAME_AVAILABLE_QUANTITY = "AvailableQuantity";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_QUANTITY)
  private Integer availableQuantity = 30;

  public static final String SERIALIZED_NAME_LIST_PRICE = "ListPrice";
  @SerializedName(SERIALIZED_NAME_LIST_PRICE)
  private Integer listPrice = 1200;

  public static final String SERIALIZED_NAME_PRICE = "Price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private Integer price = 1300;

  public static final String SERIALIZED_NAME_PRICE_WITHOUT_DISCOUNT = "PriceWithoutDiscount";
  @SerializedName(SERIALIZED_NAME_PRICE_WITHOUT_DISCOUNT)
  private Integer priceWithoutDiscount = 1400;

  public static final String SERIALIZED_NAME_SALE_CHANNEL = "SaleChannel";
  @SerializedName(SERIALIZED_NAME_SALE_CHANNEL)
  private Integer saleChannel = 1;

  public OffersPerSalesChannel() {
  }

  public OffersPerSalesChannel availableQuantity(Integer availableQuantity) {
    this.availableQuantity = availableQuantity;
    return this;
  }

  /**
   * Available SKU stock quantity
   * @return availableQuantity
   */
  @javax.annotation.Nonnull
  public Integer getAvailableQuantity() {
    return availableQuantity;
  }

  public void setAvailableQuantity(Integer availableQuantity) {
    this.availableQuantity = availableQuantity;
  }


  public OffersPerSalesChannel listPrice(Integer listPrice) {
    this.listPrice = listPrice;
    return this;
  }

  /**
   * SKU&#39;s suggested selling price
   * @return listPrice
   */
  @javax.annotation.Nonnull
  public Integer getListPrice() {
    return listPrice;
  }

  public void setListPrice(Integer listPrice) {
    this.listPrice = listPrice;
  }


  public OffersPerSalesChannel price(Integer price) {
    this.price = price;
    return this;
  }

  /**
   * SKU&#39;s price.
   * @return price
   */
  @javax.annotation.Nonnull
  public Integer getPrice() {
    return price;
  }

  public void setPrice(Integer price) {
    this.price = price;
  }


  public OffersPerSalesChannel priceWithoutDiscount(Integer priceWithoutDiscount) {
    this.priceWithoutDiscount = priceWithoutDiscount;
    return this;
  }

  /**
   * SKU&#39;s price without discount applied.
   * @return priceWithoutDiscount
   */
  @javax.annotation.Nonnull
  public Integer getPriceWithoutDiscount() {
    return priceWithoutDiscount;
  }

  public void setPriceWithoutDiscount(Integer priceWithoutDiscount) {
    this.priceWithoutDiscount = priceWithoutDiscount;
  }


  public OffersPerSalesChannel saleChannel(Integer saleChannel) {
    this.saleChannel = saleChannel;
    return this;
  }

  /**
   * The sales channel (or [trade policy](https://help.vtex.com/en/tutorial/como-funciona-uma-politica-comercial--6Xef8PZiFm40kg2STrMkMV#master-data)) of the SKU.
   * @return saleChannel
   */
  @javax.annotation.Nonnull
  public Integer getSaleChannel() {
    return saleChannel;
  }

  public void setSaleChannel(Integer saleChannel) {
    this.saleChannel = saleChannel;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OffersPerSalesChannel offersPerSalesChannel = (OffersPerSalesChannel) o;
    return Objects.equals(this.availableQuantity, offersPerSalesChannel.availableQuantity) &&
        Objects.equals(this.listPrice, offersPerSalesChannel.listPrice) &&
        Objects.equals(this.price, offersPerSalesChannel.price) &&
        Objects.equals(this.priceWithoutDiscount, offersPerSalesChannel.priceWithoutDiscount) &&
        Objects.equals(this.saleChannel, offersPerSalesChannel.saleChannel);
  }

  @Override
  public int hashCode() {
    return Objects.hash(availableQuantity, listPrice, price, priceWithoutDiscount, saleChannel);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OffersPerSalesChannel {\n");
    sb.append("    availableQuantity: ").append(toIndentedString(availableQuantity)).append("\n");
    sb.append("    listPrice: ").append(toIndentedString(listPrice)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    priceWithoutDiscount: ").append(toIndentedString(priceWithoutDiscount)).append("\n");
    sb.append("    saleChannel: ").append(toIndentedString(saleChannel)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AvailableQuantity");
    openapiFields.add("ListPrice");
    openapiFields.add("Price");
    openapiFields.add("PriceWithoutDiscount");
    openapiFields.add("SaleChannel");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("AvailableQuantity");
    openapiRequiredFields.add("ListPrice");
    openapiRequiredFields.add("Price");
    openapiRequiredFields.add("PriceWithoutDiscount");
    openapiRequiredFields.add("SaleChannel");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OffersPerSalesChannel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OffersPerSalesChannel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OffersPerSalesChannel is not found in the empty JSON string", OffersPerSalesChannel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OffersPerSalesChannel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OffersPerSalesChannel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : OffersPerSalesChannel.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OffersPerSalesChannel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OffersPerSalesChannel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OffersPerSalesChannel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OffersPerSalesChannel.class));

       return (TypeAdapter<T>) new TypeAdapter<OffersPerSalesChannel>() {
           @Override
           public void write(JsonWriter out, OffersPerSalesChannel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OffersPerSalesChannel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OffersPerSalesChannel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OffersPerSalesChannel
   * @throws IOException if the JSON string is invalid with respect to OffersPerSalesChannel
   */
  public static OffersPerSalesChannel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OffersPerSalesChannel.class);
  }

  /**
   * Convert an instance of OffersPerSalesChannel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

