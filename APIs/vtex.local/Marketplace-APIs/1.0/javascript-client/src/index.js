/**
 * Marketplace API
 *   The **Marketplace API** enables marketplaces and sellers hosted on VTEX to perform their collaborative operations.      >⚠️ The marketplace must [create an appKey and appToken](https://developers.vtex.com/docs/guides/getting-started-authentication) for each non-VTEX seller that will use this API.    ## Index    ### Notification    Endpoints used by sellers to notify marketplaces that the price or inventory language has changed for one of their SKUs.    `POST` [Notify marketplace of price update](https://developers.vtex.com/docs/api-reference/marketplace-apis#post-/notificator/-sellerId-/changenotification/-skuId-/price)    `POST` [Notify marketplace of inventory update](https://developers.vtex.com/docs/api-reference/marketplace-apis#post-/notificator/-sellerId-/changenotification/-skuId-/inventory)      ### Suggestions    #### Get Suggestions    Search and filter all suggestions using specific criteria.    `GET` [Get all SKU Suggestions](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions)    `GET` [Get SKU Suggestion by ID](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/-sellerId-/-sellerSkuId-)      #### Manage Suggestions    Send or delete SKU suggestions from the seller to marketplace.    `PUT` [Send SKU Suggestion](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/-sellerId-/-sellerSkuId-)    `DELETE` [Delete SKU Suggestion](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#delete-/suggestions/-sellerId-/-sellerSkuId-)      #### Get Versions    Search and filter all versions of suggestions, using specific criteria.    `GET` [Get all versions](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/-sellerId-/-sellerskuid-/versions)    `GET` [Get version by ID](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/-sellerId-/-sellerskuid-/versions/-version-)      #### Match Received SKUs    Match SKU suggestions received in the marketplace.    `PUT` [Match Received SKUs individually](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/-sellerId-/-sellerskuid-/versions/-version-/matches/-matchid-)    `PUT` [Match Multiple Received SKUs](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/matches/action/-actionName-)      #### SKU Approval Settings    Allows marketplaces to configure rules for automatically and manually approving SKUs received from sellers.    `GET`[Get autoApprove Status in Account Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/configuration/autoapproval/toggle)      `PUT`[Activate autoApprove in Marketplace's Account](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration/autoapproval/toggle)      `GET`[Get Account's Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/configuration)    `PUT`[Save Account's Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration)    `GET`[Get Seller's Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/configuration/seller/-sellerId-)    `PUT`[Save Seller's Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration/seller/-sellerId-)    `PUT`[Activate autoApprove Setting for a Seller](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration/autoapproval/toggle/seller/-sellerId-)         ### Matched Offers    Offers are seller products and SKUs that were sent to the marketplace, and already have their price and inventory level configured.    `GET`[Get Matched Offers List](https://developers.vtex.com/docs/api-reference/marketplace-apis#get-/offer-manager/pvt/offers)    `GET`[Get Matched Offer's Data by SKU ID](https://developers.vtex.com/docs/api-reference/marketplace-apis#get-/offer-manager/pvt/product/-productId-/sku/-skuId-)      `GET`[Get Matched Offer's Data by Product ID](https://developers.vtex.com/docs/api-reference/marketplace-apis#get-/offer-manager/pvt/product/-productId-)  
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AcceptSellerLeadRequest from './model/AcceptSellerLeadRequest';
import Accountable from './model/Accountable';
import Address from './model/Address';
import AvailableSalesChannel from './model/AvailableSalesChannel';
import BulkUpsertSellerCommissionsRequest from './model/BulkUpsertSellerCommissionsRequest';
import CreateSellerLeadRequest from './model/CreateSellerLeadRequest';
import GetMatchedOffersResponse from './model/GetMatchedOffersResponse';
import Groups from './model/Groups';
import MainImage from './model/MainImage';
import Offer from './model/Offer';
import OffersPerSalesChannel from './model/OffersPerSalesChannel';
import RequestBodyInner from './model/RequestBodyInner';
import ResendSellerLeadRequestRequest from './model/ResendSellerLeadRequestRequest';
import SellerCommissionConfiguration from './model/SellerCommissionConfiguration';
import Sku2 from './model/Sku2';
import UpsertMappingRequest from './model/UpsertMappingRequest';
import UpsertSellerCommissionsRequest from './model/UpsertSellerCommissionsRequest';
import UpsertSellerRequest from './model/UpsertSellerRequest';
import MatchedOffersApi from './api/MatchedOffersApi';
import NotificationApi from './api/NotificationApi';
import SalesChannelMappingApi from './api/SalesChannelMappingApi';
import SellerCommissionsApi from './api/SellerCommissionsApi';
import SellerInviteApi from './api/SellerInviteApi';
import SellersApi from './api/SellersApi';


/**
*   The **Marketplace API** enables marketplaces and sellers hosted on VTEX to perform their collaborative operations.      &gt;⚠️ The marketplace must [create an appKey and appToken](https://developers.vtex.com/docs/guides/getting-started-authentication) for each non-VTEX seller that will use this API.    ## Index    ### Notification    Endpoints used by sellers to notify marketplaces that the price or inventory language has changed for one of their SKUs.    &#x60;POST&#x60; [Notify marketplace of price update](https://developers.vtex.com/docs/api-reference/marketplace-apis#post-/notificator/-sellerId-/changenotification/-skuId-/price)    &#x60;POST&#x60; [Notify marketplace of inventory update](https://developers.vtex.com/docs/api-reference/marketplace-apis#post-/notificator/-sellerId-/changenotification/-skuId-/inventory)      ### Suggestions    #### Get Suggestions    Search and filter all suggestions using specific criteria.    &#x60;GET&#x60; [Get all SKU Suggestions](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions)    &#x60;GET&#x60; [Get SKU Suggestion by ID](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/-sellerId-/-sellerSkuId-)      #### Manage Suggestions    Send or delete SKU suggestions from the seller to marketplace.    &#x60;PUT&#x60; [Send SKU Suggestion](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/-sellerId-/-sellerSkuId-)    &#x60;DELETE&#x60; [Delete SKU Suggestion](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#delete-/suggestions/-sellerId-/-sellerSkuId-)      #### Get Versions    Search and filter all versions of suggestions, using specific criteria.    &#x60;GET&#x60; [Get all versions](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/-sellerId-/-sellerskuid-/versions)    &#x60;GET&#x60; [Get version by ID](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/-sellerId-/-sellerskuid-/versions/-version-)      #### Match Received SKUs    Match SKU suggestions received in the marketplace.    &#x60;PUT&#x60; [Match Received SKUs individually](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/-sellerId-/-sellerskuid-/versions/-version-/matches/-matchid-)    &#x60;PUT&#x60; [Match Multiple Received SKUs](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/matches/action/-actionName-)      #### SKU Approval Settings    Allows marketplaces to configure rules for automatically and manually approving SKUs received from sellers.    &#x60;GET&#x60;[Get autoApprove Status in Account Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/configuration/autoapproval/toggle)      &#x60;PUT&#x60;[Activate autoApprove in Marketplace&#39;s Account](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration/autoapproval/toggle)      &#x60;GET&#x60;[Get Account&#39;s Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/configuration)    &#x60;PUT&#x60;[Save Account&#39;s Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration)    &#x60;GET&#x60;[Get Seller&#39;s Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/configuration/seller/-sellerId-)    &#x60;PUT&#x60;[Save Seller&#39;s Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration/seller/-sellerId-)    &#x60;PUT&#x60;[Activate autoApprove Setting for a Seller](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration/autoapproval/toggle/seller/-sellerId-)         ### Matched Offers    Offers are seller products and SKUs that were sent to the marketplace, and already have their price and inventory level configured.    &#x60;GET&#x60;[Get Matched Offers List](https://developers.vtex.com/docs/api-reference/marketplace-apis#get-/offer-manager/pvt/offers)    &#x60;GET&#x60;[Get Matched Offer&#39;s Data by SKU ID](https://developers.vtex.com/docs/api-reference/marketplace-apis#get-/offer-manager/pvt/product/-productId-/sku/-skuId-)      &#x60;GET&#x60;[Get Matched Offer&#39;s Data by Product ID](https://developers.vtex.com/docs/api-reference/marketplace-apis#get-/offer-manager/pvt/product/-productId-)  .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var MarketplaceApi = require('index'); // See note below*.
* var xxxSvc = new MarketplaceApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new MarketplaceApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new MarketplaceApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new MarketplaceApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AcceptSellerLeadRequest model constructor.
     * @property {module:model/AcceptSellerLeadRequest}
     */
    AcceptSellerLeadRequest,

    /**
     * The Accountable model constructor.
     * @property {module:model/Accountable}
     */
    Accountable,

    /**
     * The Address model constructor.
     * @property {module:model/Address}
     */
    Address,

    /**
     * The AvailableSalesChannel model constructor.
     * @property {module:model/AvailableSalesChannel}
     */
    AvailableSalesChannel,

    /**
     * The BulkUpsertSellerCommissionsRequest model constructor.
     * @property {module:model/BulkUpsertSellerCommissionsRequest}
     */
    BulkUpsertSellerCommissionsRequest,

    /**
     * The CreateSellerLeadRequest model constructor.
     * @property {module:model/CreateSellerLeadRequest}
     */
    CreateSellerLeadRequest,

    /**
     * The GetMatchedOffersResponse model constructor.
     * @property {module:model/GetMatchedOffersResponse}
     */
    GetMatchedOffersResponse,

    /**
     * The Groups model constructor.
     * @property {module:model/Groups}
     */
    Groups,

    /**
     * The MainImage model constructor.
     * @property {module:model/MainImage}
     */
    MainImage,

    /**
     * The Offer model constructor.
     * @property {module:model/Offer}
     */
    Offer,

    /**
     * The OffersPerSalesChannel model constructor.
     * @property {module:model/OffersPerSalesChannel}
     */
    OffersPerSalesChannel,

    /**
     * The RequestBodyInner model constructor.
     * @property {module:model/RequestBodyInner}
     */
    RequestBodyInner,

    /**
     * The ResendSellerLeadRequestRequest model constructor.
     * @property {module:model/ResendSellerLeadRequestRequest}
     */
    ResendSellerLeadRequestRequest,

    /**
     * The SellerCommissionConfiguration model constructor.
     * @property {module:model/SellerCommissionConfiguration}
     */
    SellerCommissionConfiguration,

    /**
     * The Sku2 model constructor.
     * @property {module:model/Sku2}
     */
    Sku2,

    /**
     * The UpsertMappingRequest model constructor.
     * @property {module:model/UpsertMappingRequest}
     */
    UpsertMappingRequest,

    /**
     * The UpsertSellerCommissionsRequest model constructor.
     * @property {module:model/UpsertSellerCommissionsRequest}
     */
    UpsertSellerCommissionsRequest,

    /**
     * The UpsertSellerRequest model constructor.
     * @property {module:model/UpsertSellerRequest}
     */
    UpsertSellerRequest,

    /**
    * The MatchedOffersApi service constructor.
    * @property {module:api/MatchedOffersApi}
    */
    MatchedOffersApi,

    /**
    * The NotificationApi service constructor.
    * @property {module:api/NotificationApi}
    */
    NotificationApi,

    /**
    * The SalesChannelMappingApi service constructor.
    * @property {module:api/SalesChannelMappingApi}
    */
    SalesChannelMappingApi,

    /**
    * The SellerCommissionsApi service constructor.
    * @property {module:api/SellerCommissionsApi}
    */
    SellerCommissionsApi,

    /**
    * The SellerInviteApi service constructor.
    * @property {module:api/SellerInviteApi}
    */
    SellerInviteApi,

    /**
    * The SellersApi service constructor.
    * @property {module:api/SellersApi}
    */
    SellersApi
};
