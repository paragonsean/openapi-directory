/**
 * Customer Credit API
 * With Customer Credit your store can enable **credit payments** through the checkout. You can also control **invoices** and the **credit limits** of your clients.    Learn more about Customer Credit in our [Help Center article](https://help.vtex.com/en/tracks/customer-credit-getting-started--1hCRg21lXYy2seOKgqQ2CC/36grlQ69NK6OCuioeekyCs).    All requests need the **authorization header**.    Additionally, you can find more information on installment payments for an order in the `customData`  field found in the [Get Order](https://developers.vtex.com/docs/api-reference/orders-api#get-/api/oms/pvt/orders/-orderId-) endpoint of the Orders API. This includes the number of installments, amount and due dates.    This API allows two kinds of authorization:  1. Authorization header containing the VTEX ID authentication token.  2. VTEX Appkey and Apptoken headers.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CustomerCreditApi);
  }
}(this, function(expect, CustomerCreditApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CustomerCreditApi.InvoicesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('InvoicesApi', function() {
    describe('cancelInvoice', function() {
      it('should call cancelInvoice successfully', function(done) {
        //uncomment below and update the code to test cancelInvoice
        //instance.cancelInvoice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('changeInvoice', function() {
      it('should call changeInvoice successfully', function(done) {
        //uncomment below and update the code to test changeInvoice
        //instance.changeInvoice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('markaninvoiceasPaid', function() {
      it('should call markaninvoiceasPaid successfully', function(done) {
        //uncomment below and update the code to test markaninvoiceasPaid
        //instance.markaninvoiceasPaid(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postponeaninvoice', function() {
      it('should call postponeaninvoice successfully', function(done) {
        //uncomment below and update the code to test postponeaninvoice
        //instance.postponeaninvoice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retrieveInvoicebyId', function() {
      it('should call retrieveInvoicebyId successfully', function(done) {
        //uncomment below and update the code to test retrieveInvoicebyId
        //instance.retrieveInvoicebyId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchallinvoices', function() {
      it('should call searchallinvoices successfully', function(done) {
        //uncomment below and update the code to test searchallinvoices
        //instance.searchallinvoices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchallinvoicesofaAccount', function() {
      it('should call searchallinvoicesofaAccount successfully', function(done) {
        //uncomment below and update the code to test searchallinvoicesofaAccount
        //instance.searchallinvoicesofaAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
