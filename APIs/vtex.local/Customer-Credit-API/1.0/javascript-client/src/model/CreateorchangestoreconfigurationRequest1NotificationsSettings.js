/**
 * Customer Credit API
 * With Customer Credit your store can enable **credit payments** through the checkout. You can also control **invoices** and the **credit limits** of your clients.    Learn more about Customer Credit in our [Help Center article](https://help.vtex.com/en/tracks/customer-credit-getting-started--1hCRg21lXYy2seOKgqQ2CC/36grlQ69NK6OCuioeekyCs).    All requests need the **authorization header**.    Additionally, you can find more information on installment payments for an order in the `customData`  field found in the [Get Order](https://developers.vtex.com/docs/api-reference/orders-api#get-/api/oms/pvt/orders/-orderId-) endpoint of the Orders API. This includes the number of installments, amount and due dates.    This API allows two kinds of authorization:  1. Authorization header containing the VTEX ID authentication token.  2. VTEX Appkey and Apptoken headers.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateorchangestoreconfigurationRequest1NotificationsSettingsDaysAfterInner from './CreateorchangestoreconfigurationRequest1NotificationsSettingsDaysAfterInner';
import CreateorchangestoreconfigurationRequest1NotificationsSettingsDaysPriorInner from './CreateorchangestoreconfigurationRequest1NotificationsSettingsDaysPriorInner';

/**
 * The CreateorchangestoreconfigurationRequest1NotificationsSettings model module.
 * @module model/CreateorchangestoreconfigurationRequest1NotificationsSettings
 * @version 1.0
 */
class CreateorchangestoreconfigurationRequest1NotificationsSettings {
    /**
     * Constructs a new <code>CreateorchangestoreconfigurationRequest1NotificationsSettings</code>.
     * @alias module:model/CreateorchangestoreconfigurationRequest1NotificationsSettings
     */
    constructor() { 
        
        CreateorchangestoreconfigurationRequest1NotificationsSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateorchangestoreconfigurationRequest1NotificationsSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateorchangestoreconfigurationRequest1NotificationsSettings} obj Optional instance to populate.
     * @return {module:model/CreateorchangestoreconfigurationRequest1NotificationsSettings} The populated <code>CreateorchangestoreconfigurationRequest1NotificationsSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateorchangestoreconfigurationRequest1NotificationsSettings();

            if (data.hasOwnProperty('daysAfter')) {
                obj['daysAfter'] = ApiClient.convertToType(data['daysAfter'], [CreateorchangestoreconfigurationRequest1NotificationsSettingsDaysAfterInner]);
            }
            if (data.hasOwnProperty('daysPrior')) {
                obj['daysPrior'] = ApiClient.convertToType(data['daysPrior'], [CreateorchangestoreconfigurationRequest1NotificationsSettingsDaysPriorInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateorchangestoreconfigurationRequest1NotificationsSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateorchangestoreconfigurationRequest1NotificationsSettings</code>.
     */
    static validateJSON(data) {
        if (data['daysAfter']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['daysAfter'])) {
                throw new Error("Expected the field `daysAfter` to be an array in the JSON data but got " + data['daysAfter']);
            }
            // validate the optional field `daysAfter` (array)
            for (const item of data['daysAfter']) {
                CreateorchangestoreconfigurationRequest1NotificationsSettingsDaysAfterInner.validateJSON(item);
            };
        }
        if (data['daysPrior']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['daysPrior'])) {
                throw new Error("Expected the field `daysPrior` to be an array in the JSON data but got " + data['daysPrior']);
            }
            // validate the optional field `daysPrior` (array)
            for (const item of data['daysPrior']) {
                CreateorchangestoreconfigurationRequest1NotificationsSettingsDaysPriorInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/CreateorchangestoreconfigurationRequest1NotificationsSettingsDaysAfterInner>} daysAfter
 */
CreateorchangestoreconfigurationRequest1NotificationsSettings.prototype['daysAfter'] = undefined;

/**
 * @member {Array.<module:model/CreateorchangestoreconfigurationRequest1NotificationsSettingsDaysPriorInner>} daysPrior
 */
CreateorchangestoreconfigurationRequest1NotificationsSettings.prototype['daysPrior'] = undefined;






export default CreateorchangestoreconfigurationRequest1NotificationsSettings;

