/**
 * Customer Credit API
 * With Customer Credit your store can enable **credit payments** through the checkout. You can also control **invoices** and the **credit limits** of your clients.    Learn more about Customer Credit in our [Help Center article](https://help.vtex.com/en/tracks/customer-credit-getting-started--1hCRg21lXYy2seOKgqQ2CC/36grlQ69NK6OCuioeekyCs).    All requests need the **authorization header**.    Additionally, you can find more information on installment payments for an order in the `customData`  field found in the [Get Order](https://developers.vtex.com/docs/api-reference/orders-api#get-/api/oms/pvt/orders/-orderId-) endpoint of the Orders API. This includes the number of installments, amount and due dates.    This API allows two kinds of authorization:  1. Authorization header containing the VTEX ID authentication token.  2. VTEX Appkey and Apptoken headers.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDatum1.h
 *
 * 
 */

#ifndef OAIDatum1_H
#define OAIDatum1_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDatum1 : public OAIObject {
public:
    OAIDatum1();
    OAIDatum1(QString json);
    ~OAIDatum1() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCheckingAccountId() const;
    void setCheckingAccountId(const QString &checking_account_id);
    bool is_checking_account_id_Set() const;
    bool is_checking_account_id_Valid() const;

    QString getCreatedAt() const;
    void setCreatedAt(const QString &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDueDate() const;
    void setDueDate(const QString &due_date);
    bool is_due_date_Set() const;
    bool is_due_date_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getObservation() const;
    void setObservation(const QString &observation);
    bool is_observation_Set() const;
    bool is_observation_Valid() const;

    QString getOriginalDueDate() const;
    void setOriginalDueDate(const QString &original_due_date);
    bool is_original_due_date_Set() const;
    bool is_original_due_date_Valid() const;

    QString getPaymentLink() const;
    void setPaymentLink(const QString &payment_link);
    bool is_payment_link_Set() const;
    bool is_payment_link_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getUpdatedAt() const;
    void setUpdatedAt(const QString &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    double getValue() const;
    void setValue(const double &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_checking_account_id;
    bool m_checking_account_id_isSet;
    bool m_checking_account_id_isValid;

    QString m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_due_date;
    bool m_due_date_isSet;
    bool m_due_date_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_observation;
    bool m_observation_isSet;
    bool m_observation_isValid;

    QString m_original_due_date;
    bool m_original_due_date_isSet;
    bool m_original_due_date_isValid;

    QString m_payment_link;
    bool m_payment_link_isSet;
    bool m_payment_link_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    double m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDatum1)

#endif // OAIDatum1_H
