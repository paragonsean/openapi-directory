/**
 * Customer Credit API
 * With Customer Credit your store can enable **credit payments** through the checkout. You can also control **invoices** and the **credit limits** of your clients.    Learn more about Customer Credit in our [Help Center article](https://help.vtex.com/en/tracks/customer-credit-getting-started--1hCRg21lXYy2seOKgqQ2CC/36grlQ69NK6OCuioeekyCs).    All requests need the **authorization header**.    Additionally, you can find more information on installment payments for an order in the `customData`  field found in the [Get Order](https://developers.vtex.com/docs/api-reference/orders-api#get-/api/oms/pvt/orders/-orderId-) endpoint of the Orders API. This includes the number of installments, amount and due dates.    This API allows two kinds of authorization:  1. Authorization header containing the VTEX ID authentication token.  2. VTEX Appkey and Apptoken headers.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISavestoreconfig_1.h
 *
 * 
 */

#ifndef OAISavestoreconfig_1_H
#define OAISavestoreconfig_1_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISavestoreconfig_1 : public OAIObject {
public:
    OAISavestoreconfig_1();
    OAISavestoreconfig_1(QString json);
    ~OAISavestoreconfig_1() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getDailyInterestRate() const;
    void setDailyInterestRate(const double &daily_interest_rate);
    bool is_daily_interest_rate_Set() const;
    bool is_daily_interest_rate_Valid() const;

    qint32 getInvoicePostponementLimit() const;
    void setInvoicePostponementLimit(const qint32 &invoice_postponement_limit);
    bool is_invoice_postponement_limit_Set() const;
    bool is_invoice_postponement_limit_Valid() const;

    double getTaxRate() const;
    void setTaxRate(const double &tax_rate);
    bool is_tax_rate_Set() const;
    bool is_tax_rate_Valid() const;

    double getTolerancePercent() const;
    void setTolerancePercent(const double &tolerance_percent);
    bool is_tolerance_percent_Set() const;
    bool is_tolerance_percent_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_daily_interest_rate;
    bool m_daily_interest_rate_isSet;
    bool m_daily_interest_rate_isValid;

    qint32 m_invoice_postponement_limit;
    bool m_invoice_postponement_limit_isSet;
    bool m_invoice_postponement_limit_isValid;

    double m_tax_rate;
    bool m_tax_rate_isSet;
    bool m_tax_rate_isValid;

    double m_tolerance_percent;
    bool m_tolerance_percent_isSet;
    bool m_tolerance_percent_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISavestoreconfig_1)

#endif // OAISavestoreconfig_1_H
