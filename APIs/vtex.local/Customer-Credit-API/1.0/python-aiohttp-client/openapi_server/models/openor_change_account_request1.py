# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OpenorChangeAccountRequest1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, credit_limit: int=None, document: str='00221292404', email: str='email@email.com', id: str='teste'):
        """OpenorChangeAccountRequest1 - a model defined in OpenAPI

        :param credit_limit: The credit_limit of this OpenorChangeAccountRequest1.
        :param document: The document of this OpenorChangeAccountRequest1.
        :param email: The email of this OpenorChangeAccountRequest1.
        :param id: The id of this OpenorChangeAccountRequest1.
        """
        self.openapi_types = {
            'credit_limit': int,
            'document': str,
            'email': str,
            'id': str
        }

        self.attribute_map = {
            'credit_limit': 'creditLimit',
            'document': 'document',
            'email': 'email',
            'id': 'id'
        }

        self._credit_limit = credit_limit
        self._document = document
        self._email = email
        self._id = id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OpenorChangeAccountRequest1':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OpenorChangeAccountRequest_1 of this OpenorChangeAccountRequest1.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def credit_limit(self):
        """Gets the credit_limit of this OpenorChangeAccountRequest1.

        If the user don't set a credit limit, the system will define 100 for default

        :return: The credit_limit of this OpenorChangeAccountRequest1.
        :rtype: int
        """
        return self._credit_limit

    @credit_limit.setter
    def credit_limit(self, credit_limit):
        """Sets the credit_limit of this OpenorChangeAccountRequest1.

        If the user don't set a credit limit, the system will define 100 for default

        :param credit_limit: The credit_limit of this OpenorChangeAccountRequest1.
        :type credit_limit: int
        """

        self._credit_limit = credit_limit

    @property
    def document(self):
        """Gets the document of this OpenorChangeAccountRequest1.


        :return: The document of this OpenorChangeAccountRequest1.
        :rtype: str
        """
        return self._document

    @document.setter
    def document(self, document):
        """Sets the document of this OpenorChangeAccountRequest1.


        :param document: The document of this OpenorChangeAccountRequest1.
        :type document: str
        """

        self._document = document

    @property
    def email(self):
        """Gets the email of this OpenorChangeAccountRequest1.


        :return: The email of this OpenorChangeAccountRequest1.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this OpenorChangeAccountRequest1.


        :param email: The email of this OpenorChangeAccountRequest1.
        :type email: str
        """
        if email is None:
            raise ValueError("Invalid value for `email`, must not be `None`")

        self._email = email

    @property
    def id(self):
        """Gets the id of this OpenorChangeAccountRequest1.


        :return: The id of this OpenorChangeAccountRequest1.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OpenorChangeAccountRequest1.


        :param id: The id of this OpenorChangeAccountRequest1.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id
