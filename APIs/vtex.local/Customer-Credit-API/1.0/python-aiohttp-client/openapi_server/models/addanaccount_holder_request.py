# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.claims2 import Claims2
from openapi_server import util


class AddanaccountHolderRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, claims: Claims2=None):
        """AddanaccountHolderRequest - a model defined in OpenAPI

        :param claims: The claims of this AddanaccountHolderRequest.
        """
        self.openapi_types = {
            'claims': Claims2
        }

        self.attribute_map = {
            'claims': 'claims'
        }

        self._claims = claims

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddanaccountHolderRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddanaccountHolderRequest of this AddanaccountHolderRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def claims(self):
        """Gets the claims of this AddanaccountHolderRequest.


        :return: The claims of this AddanaccountHolderRequest.
        :rtype: Claims2
        """
        return self._claims

    @claims.setter
    def claims(self, claims):
        """Sets the claims of this AddanaccountHolderRequest.


        :param claims: The claims of this AddanaccountHolderRequest.
        :type claims: Claims2
        """
        if claims is None:
            raise ValueError("Invalid value for `claims`, must not be `None`")

        self._claims = claims
