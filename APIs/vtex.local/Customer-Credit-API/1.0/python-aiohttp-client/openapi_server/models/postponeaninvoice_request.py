# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PostponeaninvoiceRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, due_days: str=None):
        """PostponeaninvoiceRequest - a model defined in OpenAPI

        :param due_days: The due_days of this PostponeaninvoiceRequest.
        """
        self.openapi_types = {
            'due_days': str
        }

        self.attribute_map = {
            'due_days': 'dueDays'
        }

        self._due_days = due_days

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PostponeaninvoiceRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PostponeaninvoiceRequest of this PostponeaninvoiceRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def due_days(self):
        """Gets the due_days of this PostponeaninvoiceRequest.


        :return: The due_days of this PostponeaninvoiceRequest.
        :rtype: str
        """
        return self._due_days

    @due_days.setter
    def due_days(self, due_days):
        """Sets the due_days of this PostponeaninvoiceRequest.


        :param due_days: The due_days of this PostponeaninvoiceRequest.
        :type due_days: str
        """
        if due_days is None:
            raise ValueError("Invalid value for `due_days`, must not be `None`")

        self._due_days = due_days
