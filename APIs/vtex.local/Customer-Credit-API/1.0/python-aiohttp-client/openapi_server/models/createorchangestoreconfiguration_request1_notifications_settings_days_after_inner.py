# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateorchangestoreconfigurationRequest1NotificationsSettingsDaysAfterInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, days: int=None, time_of_day: str='43200'):
        """CreateorchangestoreconfigurationRequest1NotificationsSettingsDaysAfterInner - a model defined in OpenAPI

        :param days: The days of this CreateorchangestoreconfigurationRequest1NotificationsSettingsDaysAfterInner.
        :param time_of_day: The time_of_day of this CreateorchangestoreconfigurationRequest1NotificationsSettingsDaysAfterInner.
        """
        self.openapi_types = {
            'days': int,
            'time_of_day': str
        }

        self.attribute_map = {
            'days': 'days',
            'time_of_day': 'timeOfDay'
        }

        self._days = days
        self._time_of_day = time_of_day

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateorchangestoreconfigurationRequest1NotificationsSettingsDaysAfterInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateorchangestoreconfigurationRequest_1_notificationsSettings_daysAfter_inner of this CreateorchangestoreconfigurationRequest1NotificationsSettingsDaysAfterInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def days(self):
        """Gets the days of this CreateorchangestoreconfigurationRequest1NotificationsSettingsDaysAfterInner.


        :return: The days of this CreateorchangestoreconfigurationRequest1NotificationsSettingsDaysAfterInner.
        :rtype: int
        """
        return self._days

    @days.setter
    def days(self, days):
        """Sets the days of this CreateorchangestoreconfigurationRequest1NotificationsSettingsDaysAfterInner.


        :param days: The days of this CreateorchangestoreconfigurationRequest1NotificationsSettingsDaysAfterInner.
        :type days: int
        """
        if days is None:
            raise ValueError("Invalid value for `days`, must not be `None`")

        self._days = days

    @property
    def time_of_day(self):
        """Gets the time_of_day of this CreateorchangestoreconfigurationRequest1NotificationsSettingsDaysAfterInner.


        :return: The time_of_day of this CreateorchangestoreconfigurationRequest1NotificationsSettingsDaysAfterInner.
        :rtype: str
        """
        return self._time_of_day

    @time_of_day.setter
    def time_of_day(self, time_of_day):
        """Sets the time_of_day of this CreateorchangestoreconfigurationRequest1NotificationsSettingsDaysAfterInner.


        :param time_of_day: The time_of_day of this CreateorchangestoreconfigurationRequest1NotificationsSettingsDaysAfterInner.
        :type time_of_day: str
        """
        if time_of_day is None:
            raise ValueError("Invalid value for `time_of_day`, must not be `None`")

        self._time_of_day = time_of_day
