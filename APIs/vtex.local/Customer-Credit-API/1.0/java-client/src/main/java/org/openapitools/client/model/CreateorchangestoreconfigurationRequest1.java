/*
 * Customer Credit API
 * With Customer Credit your store can enable **credit payments** through the checkout. You can also control **invoices** and the **credit limits** of your clients.    Learn more about Customer Credit in our [Help Center article](https://help.vtex.com/en/tracks/customer-credit-getting-started--1hCRg21lXYy2seOKgqQ2CC/36grlQ69NK6OCuioeekyCs).    All requests need the **authorization header**.    Additionally, you can find more information on installment payments for an order in the `customData`  field found in the [Get Order](https://developers.vtex.com/docs/api-reference/orders-api#get-/api/oms/pvt/orders/-orderId-) endpoint of the Orders API. This includes the number of installments, amount and due dates.    This API allows two kinds of authorization:  1. Authorization header containing the VTEX ID authentication token.  2. VTEX Appkey and Apptoken headers.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CreateorchangestoreconfigurationRequest1NotificationsSettings;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateorchangestoreconfigurationRequest1
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:55:41.771522-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateorchangestoreconfigurationRequest1 {
  public static final String SERIALIZED_NAME_AUTOMATIC_CHECKING_ACCOUNT_CREATION_ENABLED = "automaticCheckingAccountCreationEnabled";
  @SerializedName(SERIALIZED_NAME_AUTOMATIC_CHECKING_ACCOUNT_CREATION_ENABLED)
  private Boolean automaticCheckingAccountCreationEnabled = false;

  public static final String SERIALIZED_NAME_DAILY_INTEREST_RATE = "dailyInterestRate";
  @SerializedName(SERIALIZED_NAME_DAILY_INTEREST_RATE)
  private String dailyInterestRate = "0.6";

  public static final String SERIALIZED_NAME_DEFAULT_CREDIT_VALUE = "defaultCreditValue";
  @SerializedName(SERIALIZED_NAME_DEFAULT_CREDIT_VALUE)
  private String defaultCreditValue = "150.0";

  public static final String SERIALIZED_NAME_INVOICE_POSTPONEMENT_LIMIT = "invoicePostponementLimit";
  @SerializedName(SERIALIZED_NAME_INVOICE_POSTPONEMENT_LIMIT)
  private String invoicePostponementLimit = "2";

  public static final String SERIALIZED_NAME_MAX_POSTPONEMENT_DAYS = "maxPostponementDays";
  @SerializedName(SERIALIZED_NAME_MAX_POSTPONEMENT_DAYS)
  private String maxPostponementDays = "3";

  public static final String SERIALIZED_NAME_MAX_PRE_AUTHORIZATION_GROWTH_RATE = "maxPreAuthorizationGrowthRate";
  @SerializedName(SERIALIZED_NAME_MAX_PRE_AUTHORIZATION_GROWTH_RATE)
  private String maxPreAuthorizationGrowthRate = "0.1";

  public static final String SERIALIZED_NAME_MY_CREDITS_ENABLED = "myCreditsEnabled";
  @SerializedName(SERIALIZED_NAME_MY_CREDITS_ENABLED)
  private Boolean myCreditsEnabled = true;

  public static final String SERIALIZED_NAME_NOTIFICATIONS_SETTINGS = "notificationsSettings";
  @SerializedName(SERIALIZED_NAME_NOTIFICATIONS_SETTINGS)
  private CreateorchangestoreconfigurationRequest1NotificationsSettings notificationsSettings;

  public static final String SERIALIZED_NAME_POSTPONEMENT_ENABLED = "postponementEnabled";
  @SerializedName(SERIALIZED_NAME_POSTPONEMENT_ENABLED)
  private Boolean postponementEnabled = false;

  public static final String SERIALIZED_NAME_TAX_RATE = "taxRate";
  @SerializedName(SERIALIZED_NAME_TAX_RATE)
  private String taxRate = "0.4";

  public static final String SERIALIZED_NAME_TOLERANCE_ENABLED = "toleranceEnabled";
  @SerializedName(SERIALIZED_NAME_TOLERANCE_ENABLED)
  private Boolean toleranceEnabled = true;

  public CreateorchangestoreconfigurationRequest1() {
  }

  public CreateorchangestoreconfigurationRequest1 automaticCheckingAccountCreationEnabled(Boolean automaticCheckingAccountCreationEnabled) {
    this.automaticCheckingAccountCreationEnabled = automaticCheckingAccountCreationEnabled;
    return this;
  }

  /**
   * Get automaticCheckingAccountCreationEnabled
   * @return automaticCheckingAccountCreationEnabled
   */
  @javax.annotation.Nonnull
  public Boolean getAutomaticCheckingAccountCreationEnabled() {
    return automaticCheckingAccountCreationEnabled;
  }

  public void setAutomaticCheckingAccountCreationEnabled(Boolean automaticCheckingAccountCreationEnabled) {
    this.automaticCheckingAccountCreationEnabled = automaticCheckingAccountCreationEnabled;
  }


  public CreateorchangestoreconfigurationRequest1 dailyInterestRate(String dailyInterestRate) {
    this.dailyInterestRate = dailyInterestRate;
    return this;
  }

  /**
   * Get dailyInterestRate
   * @return dailyInterestRate
   */
  @javax.annotation.Nonnull
  public String getDailyInterestRate() {
    return dailyInterestRate;
  }

  public void setDailyInterestRate(String dailyInterestRate) {
    this.dailyInterestRate = dailyInterestRate;
  }


  public CreateorchangestoreconfigurationRequest1 defaultCreditValue(String defaultCreditValue) {
    this.defaultCreditValue = defaultCreditValue;
    return this;
  }

  /**
   * Get defaultCreditValue
   * @return defaultCreditValue
   */
  @javax.annotation.Nonnull
  public String getDefaultCreditValue() {
    return defaultCreditValue;
  }

  public void setDefaultCreditValue(String defaultCreditValue) {
    this.defaultCreditValue = defaultCreditValue;
  }


  public CreateorchangestoreconfigurationRequest1 invoicePostponementLimit(String invoicePostponementLimit) {
    this.invoicePostponementLimit = invoicePostponementLimit;
    return this;
  }

  /**
   * Get invoicePostponementLimit
   * @return invoicePostponementLimit
   */
  @javax.annotation.Nonnull
  public String getInvoicePostponementLimit() {
    return invoicePostponementLimit;
  }

  public void setInvoicePostponementLimit(String invoicePostponementLimit) {
    this.invoicePostponementLimit = invoicePostponementLimit;
  }


  public CreateorchangestoreconfigurationRequest1 maxPostponementDays(String maxPostponementDays) {
    this.maxPostponementDays = maxPostponementDays;
    return this;
  }

  /**
   * Get maxPostponementDays
   * @return maxPostponementDays
   */
  @javax.annotation.Nonnull
  public String getMaxPostponementDays() {
    return maxPostponementDays;
  }

  public void setMaxPostponementDays(String maxPostponementDays) {
    this.maxPostponementDays = maxPostponementDays;
  }


  public CreateorchangestoreconfigurationRequest1 maxPreAuthorizationGrowthRate(String maxPreAuthorizationGrowthRate) {
    this.maxPreAuthorizationGrowthRate = maxPreAuthorizationGrowthRate;
    return this;
  }

  /**
   * Get maxPreAuthorizationGrowthRate
   * @return maxPreAuthorizationGrowthRate
   */
  @javax.annotation.Nonnull
  public String getMaxPreAuthorizationGrowthRate() {
    return maxPreAuthorizationGrowthRate;
  }

  public void setMaxPreAuthorizationGrowthRate(String maxPreAuthorizationGrowthRate) {
    this.maxPreAuthorizationGrowthRate = maxPreAuthorizationGrowthRate;
  }


  public CreateorchangestoreconfigurationRequest1 myCreditsEnabled(Boolean myCreditsEnabled) {
    this.myCreditsEnabled = myCreditsEnabled;
    return this;
  }

  /**
   * Get myCreditsEnabled
   * @return myCreditsEnabled
   */
  @javax.annotation.Nonnull
  public Boolean getMyCreditsEnabled() {
    return myCreditsEnabled;
  }

  public void setMyCreditsEnabled(Boolean myCreditsEnabled) {
    this.myCreditsEnabled = myCreditsEnabled;
  }


  public CreateorchangestoreconfigurationRequest1 notificationsSettings(CreateorchangestoreconfigurationRequest1NotificationsSettings notificationsSettings) {
    this.notificationsSettings = notificationsSettings;
    return this;
  }

  /**
   * Get notificationsSettings
   * @return notificationsSettings
   */
  @javax.annotation.Nullable
  public CreateorchangestoreconfigurationRequest1NotificationsSettings getNotificationsSettings() {
    return notificationsSettings;
  }

  public void setNotificationsSettings(CreateorchangestoreconfigurationRequest1NotificationsSettings notificationsSettings) {
    this.notificationsSettings = notificationsSettings;
  }


  public CreateorchangestoreconfigurationRequest1 postponementEnabled(Boolean postponementEnabled) {
    this.postponementEnabled = postponementEnabled;
    return this;
  }

  /**
   * Get postponementEnabled
   * @return postponementEnabled
   */
  @javax.annotation.Nonnull
  public Boolean getPostponementEnabled() {
    return postponementEnabled;
  }

  public void setPostponementEnabled(Boolean postponementEnabled) {
    this.postponementEnabled = postponementEnabled;
  }


  public CreateorchangestoreconfigurationRequest1 taxRate(String taxRate) {
    this.taxRate = taxRate;
    return this;
  }

  /**
   * Get taxRate
   * @return taxRate
   */
  @javax.annotation.Nonnull
  public String getTaxRate() {
    return taxRate;
  }

  public void setTaxRate(String taxRate) {
    this.taxRate = taxRate;
  }


  public CreateorchangestoreconfigurationRequest1 toleranceEnabled(Boolean toleranceEnabled) {
    this.toleranceEnabled = toleranceEnabled;
    return this;
  }

  /**
   * Get toleranceEnabled
   * @return toleranceEnabled
   */
  @javax.annotation.Nonnull
  public Boolean getToleranceEnabled() {
    return toleranceEnabled;
  }

  public void setToleranceEnabled(Boolean toleranceEnabled) {
    this.toleranceEnabled = toleranceEnabled;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateorchangestoreconfigurationRequest1 createorchangestoreconfigurationRequest1 = (CreateorchangestoreconfigurationRequest1) o;
    return Objects.equals(this.automaticCheckingAccountCreationEnabled, createorchangestoreconfigurationRequest1.automaticCheckingAccountCreationEnabled) &&
        Objects.equals(this.dailyInterestRate, createorchangestoreconfigurationRequest1.dailyInterestRate) &&
        Objects.equals(this.defaultCreditValue, createorchangestoreconfigurationRequest1.defaultCreditValue) &&
        Objects.equals(this.invoicePostponementLimit, createorchangestoreconfigurationRequest1.invoicePostponementLimit) &&
        Objects.equals(this.maxPostponementDays, createorchangestoreconfigurationRequest1.maxPostponementDays) &&
        Objects.equals(this.maxPreAuthorizationGrowthRate, createorchangestoreconfigurationRequest1.maxPreAuthorizationGrowthRate) &&
        Objects.equals(this.myCreditsEnabled, createorchangestoreconfigurationRequest1.myCreditsEnabled) &&
        Objects.equals(this.notificationsSettings, createorchangestoreconfigurationRequest1.notificationsSettings) &&
        Objects.equals(this.postponementEnabled, createorchangestoreconfigurationRequest1.postponementEnabled) &&
        Objects.equals(this.taxRate, createorchangestoreconfigurationRequest1.taxRate) &&
        Objects.equals(this.toleranceEnabled, createorchangestoreconfigurationRequest1.toleranceEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(automaticCheckingAccountCreationEnabled, dailyInterestRate, defaultCreditValue, invoicePostponementLimit, maxPostponementDays, maxPreAuthorizationGrowthRate, myCreditsEnabled, notificationsSettings, postponementEnabled, taxRate, toleranceEnabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateorchangestoreconfigurationRequest1 {\n");
    sb.append("    automaticCheckingAccountCreationEnabled: ").append(toIndentedString(automaticCheckingAccountCreationEnabled)).append("\n");
    sb.append("    dailyInterestRate: ").append(toIndentedString(dailyInterestRate)).append("\n");
    sb.append("    defaultCreditValue: ").append(toIndentedString(defaultCreditValue)).append("\n");
    sb.append("    invoicePostponementLimit: ").append(toIndentedString(invoicePostponementLimit)).append("\n");
    sb.append("    maxPostponementDays: ").append(toIndentedString(maxPostponementDays)).append("\n");
    sb.append("    maxPreAuthorizationGrowthRate: ").append(toIndentedString(maxPreAuthorizationGrowthRate)).append("\n");
    sb.append("    myCreditsEnabled: ").append(toIndentedString(myCreditsEnabled)).append("\n");
    sb.append("    notificationsSettings: ").append(toIndentedString(notificationsSettings)).append("\n");
    sb.append("    postponementEnabled: ").append(toIndentedString(postponementEnabled)).append("\n");
    sb.append("    taxRate: ").append(toIndentedString(taxRate)).append("\n");
    sb.append("    toleranceEnabled: ").append(toIndentedString(toleranceEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("automaticCheckingAccountCreationEnabled");
    openapiFields.add("dailyInterestRate");
    openapiFields.add("defaultCreditValue");
    openapiFields.add("invoicePostponementLimit");
    openapiFields.add("maxPostponementDays");
    openapiFields.add("maxPreAuthorizationGrowthRate");
    openapiFields.add("myCreditsEnabled");
    openapiFields.add("notificationsSettings");
    openapiFields.add("postponementEnabled");
    openapiFields.add("taxRate");
    openapiFields.add("toleranceEnabled");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("automaticCheckingAccountCreationEnabled");
    openapiRequiredFields.add("dailyInterestRate");
    openapiRequiredFields.add("defaultCreditValue");
    openapiRequiredFields.add("invoicePostponementLimit");
    openapiRequiredFields.add("maxPostponementDays");
    openapiRequiredFields.add("maxPreAuthorizationGrowthRate");
    openapiRequiredFields.add("myCreditsEnabled");
    openapiRequiredFields.add("postponementEnabled");
    openapiRequiredFields.add("taxRate");
    openapiRequiredFields.add("toleranceEnabled");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateorchangestoreconfigurationRequest1
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateorchangestoreconfigurationRequest1.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateorchangestoreconfigurationRequest1 is not found in the empty JSON string", CreateorchangestoreconfigurationRequest1.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateorchangestoreconfigurationRequest1.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateorchangestoreconfigurationRequest1` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateorchangestoreconfigurationRequest1.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("dailyInterestRate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dailyInterestRate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dailyInterestRate").toString()));
      }
      if (!jsonObj.get("defaultCreditValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `defaultCreditValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("defaultCreditValue").toString()));
      }
      if (!jsonObj.get("invoicePostponementLimit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `invoicePostponementLimit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("invoicePostponementLimit").toString()));
      }
      if (!jsonObj.get("maxPostponementDays").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maxPostponementDays` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maxPostponementDays").toString()));
      }
      if (!jsonObj.get("maxPreAuthorizationGrowthRate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maxPreAuthorizationGrowthRate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maxPreAuthorizationGrowthRate").toString()));
      }
      // validate the optional field `notificationsSettings`
      if (jsonObj.get("notificationsSettings") != null && !jsonObj.get("notificationsSettings").isJsonNull()) {
        CreateorchangestoreconfigurationRequest1NotificationsSettings.validateJsonElement(jsonObj.get("notificationsSettings"));
      }
      if (!jsonObj.get("taxRate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxRate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxRate").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateorchangestoreconfigurationRequest1.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateorchangestoreconfigurationRequest1' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateorchangestoreconfigurationRequest1> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateorchangestoreconfigurationRequest1.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateorchangestoreconfigurationRequest1>() {
           @Override
           public void write(JsonWriter out, CreateorchangestoreconfigurationRequest1 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateorchangestoreconfigurationRequest1 read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateorchangestoreconfigurationRequest1 given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateorchangestoreconfigurationRequest1
   * @throws IOException if the JSON string is invalid with respect to CreateorchangestoreconfigurationRequest1
   */
  public static CreateorchangestoreconfigurationRequest1 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateorchangestoreconfigurationRequest1.class);
  }

  /**
   * Convert an instance of CreateorchangestoreconfigurationRequest1 to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

