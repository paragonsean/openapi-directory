/*
 * Customer Credit API
 * With Customer Credit your store can enable **credit payments** through the checkout. You can also control **invoices** and the **credit limits** of your clients.    Learn more about Customer Credit in our [Help Center article](https://help.vtex.com/en/tracks/customer-credit-getting-started--1hCRg21lXYy2seOKgqQ2CC/36grlQ69NK6OCuioeekyCs).    All requests need the **authorization header**.    Additionally, you can find more information on installment payments for an order in the `customData`  field found in the [Get Order](https://developers.vtex.com/docs/api-reference/orders-api#get-/api/oms/pvt/orders/-orderId-) endpoint of the Orders API. This includes the number of installments, amount and due dates.    This API allows two kinds of authorization:  1. Authorization header containing the VTEX ID authentication token.  2. VTEX Appkey and Apptoken headers.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.math.BigDecimal;
import org.openapitools.client.model.ChangeInvoiceRequest1;
import org.openapitools.client.model.Getinvoicesfromacheckingaccount1;
import org.openapitools.client.model.MarkaninvoiceasPaidRequest1;
import org.openapitools.client.model.Paidinvoices1;
import org.openapitools.client.model.PostponeaninvoiceRequest1;
import org.openapitools.client.model.Retrievedinvoice1;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InvoicesApi
 */
@Disabled
public class InvoicesApiTest {

    private final InvoicesApi api = new InvoicesApi();

    /**
     * Cancel Invoice
     *
     * Changes invoice&#39;s status from ancells invoice by specified Id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cancelInvoiceTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String creditAccountId = null;
        String invoiceId = null;
        Object response = api.cancelInvoice(contentType, accept, creditAccountId, invoiceId);
        // TODO: test validations
    }

    /**
     * Change Invoice
     *
     * Updates invoice&#39;s attributes &#x60;status&#x60;, &#x60;paymentLink&#x60; and &#x60;observation&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void changeInvoiceTest() throws ApiException {
        String creditAccountId = null;
        String invoiceId = null;
        String accept = null;
        String contentType = null;
        ChangeInvoiceRequest1 changeInvoiceRequest1 = null;
        String friendlyId = null;
        Object response = api.changeInvoice(creditAccountId, invoiceId, accept, contentType, changeInvoiceRequest1, friendlyId);
        // TODO: test validations
    }

    /**
     * Mark an invoice as Paid
     *
     * Pay an invoice.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void markaninvoiceasPaidTest() throws ApiException {
        String creditAccountId = null;
        String invoiceId = null;
        String accept = null;
        String contentType = null;
        MarkaninvoiceasPaidRequest1 markaninvoiceasPaidRequest1 = null;
        String response = api.markaninvoiceasPaid(creditAccountId, invoiceId, accept, contentType, markaninvoiceasPaidRequest1);
        // TODO: test validations
    }

    /**
     * Postpone an invoice
     *
     * Postpone an invoice.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postponeaninvoiceTest() throws ApiException {
        String creditAccountId = null;
        String invoiceId = null;
        String accept = null;
        String contentType = null;
        PostponeaninvoiceRequest1 postponeaninvoiceRequest1 = null;
        Object response = api.postponeaninvoice(creditAccountId, invoiceId, accept, contentType, postponeaninvoiceRequest1);
        // TODO: test validations
    }

    /**
     * Retrieve Invoice by Id
     *
     * Returns associated data for the specified Invoice Id, like status  and value, for example.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retrieveInvoicebyIdTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String creditAccountId = null;
        String invoiceId = null;
        Retrievedinvoice1 response = api.retrieveInvoicebyId(contentType, accept, creditAccountId, invoiceId);
        // TODO: test validations
    }

    /**
     * Search all invoices
     *
     * Returns all invoices according to the informed query params in the request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchallinvoicesTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String from = null;
        String to = null;
        String createdDateFrom = null;
        String createdDateTo = null;
        BigDecimal value = null;
        String status = null;
        String friendlyId = null;
        String creditAccountId = null;
        Paidinvoices1 response = api.searchallinvoices(contentType, accept, from, to, createdDateFrom, createdDateTo, value, status, friendlyId, creditAccountId);
        // TODO: test validations
    }

    /**
     * Retrieve invoice by creditAccountId
     *
     * Returns associated invoices by specified creditAccountId, the param that identifies a client in VTEX&#39;s system.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchallinvoicesofaAccountTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String creditAccountId = null;
        Getinvoicesfromacheckingaccount1 response = api.searchallinvoicesofaAccount(contentType, accept, creditAccountId);
        // TODO: test validations
    }

}
