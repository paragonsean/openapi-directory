/**
 * Message Center API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Model200OK from '../model/Model200OK';
import Model401Unauthorized from '../model/Model401Unauthorized';

/**
* DKIMConfiguration service.
* @module api/DKIMConfigurationApi
* @version 1.0.0
*/
export default class DKIMConfigurationApi {

    /**
    * Constructs a new DKIMConfigurationApi. 
    * @alias module:api/DKIMConfigurationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createDKIM operation.
     * @callback module:api/DKIMConfigurationApi~createDKIMCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Model200OK} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate DKIM keys
     * Create DKIM keys for sender that was setup in VTEX mail servers
     * @param {String} emailProvider E-mail address for sender that was setup in VTEX mail servers
     * @param {module:api/DKIMConfigurationApi~createDKIMCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Model200OK}
     */
    createDKIM(emailProvider, callback) {
      let postBody = null;
      // verify the required parameter 'emailProvider' is set
      if (emailProvider === undefined || emailProvider === null) {
        throw new Error("Missing the required parameter 'emailProvider' when calling createDKIM");
      }

      let pathParams = {
        'EmailProvider': emailProvider
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['appToken', 'appKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Model200OK;
      return this.apiClient.callApi(
        '/api/mail-service/pvt/providers/{EmailProvider}/dkim', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
