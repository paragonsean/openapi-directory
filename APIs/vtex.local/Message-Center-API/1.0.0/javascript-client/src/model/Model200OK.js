/**
 * Message Center API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Model200OK model module.
 * @module model/Model200OK
 * @version 1.0.0
 */
class Model200OK {
    /**
     * Constructs a new <code>Model200OK</code>.
     * @alias module:model/Model200OK
     * @extends Object
     * @param status {module:model/Model200OK.StatusEnum} 
     */
    constructor(status) { 
        
        Model200OK.initialize(this, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, status) { 
        obj['status'] = status;
    }

    /**
     * Constructs a <code>Model200OK</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Model200OK} obj Optional instance to populate.
     * @return {module:model/Model200OK} The populated <code>Model200OK</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Model200OK();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('dkimKeys')) {
                obj['dkimKeys'] = ApiClient.convertToType(data['dkimKeys'], [Object]);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Model200OK</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Model200OK</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Model200OK.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['dkimKeys'])) {
            throw new Error("Expected the field `dkimKeys` to be an array in the JSON data but got " + data['dkimKeys']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}

Model200OK.RequiredProperties = ["status"];

/**
 * @member {Array.<Object>} dkimKeys
 */
Model200OK.prototype['dkimKeys'] = undefined;

/**
 * @member {module:model/Model200OK.StatusEnum} status
 */
Model200OK.prototype['status'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
Model200OK['StatusEnum'] = {

    /**
     * value: "emailNotFound"
     * @const
     */
    "emailNotFound": "emailNotFound",

    /**
     * value: "emailNotVerified"
     * @const
     */
    "emailNotVerified": "emailNotVerified",

    /**
     * value: "created"
     * @const
     */
    "created": "created"
};



export default Model200OK;

