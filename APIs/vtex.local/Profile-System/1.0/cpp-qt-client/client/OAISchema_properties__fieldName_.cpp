/**
 * Profile System
 * Create shopper profiles and manage their information.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISchema_properties__fieldName_.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISchema_properties__fieldName_::OAISchema_properties__fieldName_(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISchema_properties__fieldName_::OAISchema_properties__fieldName_() {
    this->initializeModel();
}

OAISchema_properties__fieldName_::~OAISchema_properties__fieldName_() {}

void OAISchema_properties__fieldName_::initializeModel() {

    m_items_isSet = false;
    m_items_isValid = false;

    m_pii_isSet = false;
    m_pii_isValid = false;

    m_sensitive_isSet = false;
    m_sensitive_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAISchema_properties__fieldName_::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISchema_properties__fieldName_::fromJsonObject(QJsonObject json) {

    m_items_isValid = ::OpenAPI::fromJsonValue(m_items, json[QString("items")]);
    m_items_isSet = !json[QString("items")].isNull() && m_items_isValid;

    m_pii_isValid = ::OpenAPI::fromJsonValue(m_pii, json[QString("pii")]);
    m_pii_isSet = !json[QString("pii")].isNull() && m_pii_isValid;

    m_sensitive_isValid = ::OpenAPI::fromJsonValue(m_sensitive, json[QString("sensitive")]);
    m_sensitive_isSet = !json[QString("sensitive")].isNull() && m_sensitive_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAISchema_properties__fieldName_::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISchema_properties__fieldName_::asJsonObject() const {
    QJsonObject obj;
    if (m_items_isSet) {
        obj.insert(QString("items"), ::OpenAPI::toJsonValue(m_items));
    }
    if (m_pii_isSet) {
        obj.insert(QString("pii"), ::OpenAPI::toJsonValue(m_pii));
    }
    if (m_sensitive_isSet) {
        obj.insert(QString("sensitive"), ::OpenAPI::toJsonValue(m_sensitive));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

OAIObject OAISchema_properties__fieldName_::getItems() const {
    return m_items;
}
void OAISchema_properties__fieldName_::setItems(const OAIObject &items) {
    m_items = items;
    m_items_isSet = true;
}

bool OAISchema_properties__fieldName_::is_items_Set() const{
    return m_items_isSet;
}

bool OAISchema_properties__fieldName_::is_items_Valid() const{
    return m_items_isValid;
}

bool OAISchema_properties__fieldName_::isPii() const {
    return m_pii;
}
void OAISchema_properties__fieldName_::setPii(const bool &pii) {
    m_pii = pii;
    m_pii_isSet = true;
}

bool OAISchema_properties__fieldName_::is_pii_Set() const{
    return m_pii_isSet;
}

bool OAISchema_properties__fieldName_::is_pii_Valid() const{
    return m_pii_isValid;
}

bool OAISchema_properties__fieldName_::isSensitive() const {
    return m_sensitive;
}
void OAISchema_properties__fieldName_::setSensitive(const bool &sensitive) {
    m_sensitive = sensitive;
    m_sensitive_isSet = true;
}

bool OAISchema_properties__fieldName_::is_sensitive_Set() const{
    return m_sensitive_isSet;
}

bool OAISchema_properties__fieldName_::is_sensitive_Valid() const{
    return m_sensitive_isValid;
}

QString OAISchema_properties__fieldName_::getType() const {
    return m_type;
}
void OAISchema_properties__fieldName_::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAISchema_properties__fieldName_::is_type_Set() const{
    return m_type_isSet;
}

bool OAISchema_properties__fieldName_::is_type_Valid() const{
    return m_type_isValid;
}

bool OAISchema_properties__fieldName_::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_items_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pii_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sensitive_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISchema_properties__fieldName_::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_pii_isValid && m_sensitive_isValid && m_type_isValid && true;
}

} // namespace OpenAPI
