/**
 * Profile System
 * Create shopper profiles and manage their information.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISchema.h
 *
 * 
 */

#ifndef OAISchema_H
#define OAISchema_H

#include <QJsonObject>

#include "OAISchema_properties.h"
#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISchema_properties;

class OAISchema : public OAIObject {
public:
    OAISchema();
    OAISchema(QString json);
    ~OAISchema() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getDocumentTtl() const;
    void setDocumentTtl(const qint32 &document_ttl);
    bool is_document_ttl_Set() const;
    bool is_document_ttl_Valid() const;

    OAISchema_properties getProperties() const;
    void setProperties(const OAISchema_properties &properties);
    bool is_properties_Set() const;
    bool is_properties_Valid() const;

    QList<QString> getRequired() const;
    void setRequired(const QList<QString> &required);
    bool is_required_Set() const;
    bool is_required_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QList<QJsonValue> getVIndexed() const;
    void setVIndexed(const QList<QJsonValue> &v_indexed);
    bool is_v_indexed_Set() const;
    bool is_v_indexed_Valid() const;

    QList<QJsonValue> getVUnique() const;
    void setVUnique(const QList<QJsonValue> &v_unique);
    bool is_v_unique_Set() const;
    bool is_v_unique_Valid() const;

    qint32 getVersion() const;
    void setVersion(const qint32 &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_document_ttl;
    bool m_document_ttl_isSet;
    bool m_document_ttl_isValid;

    OAISchema_properties m_properties;
    bool m_properties_isSet;
    bool m_properties_isValid;

    QList<QString> m_required;
    bool m_required_isSet;
    bool m_required_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QList<QJsonValue> m_v_indexed;
    bool m_v_indexed_isSet;
    bool m_v_indexed_isValid;

    QList<QJsonValue> m_v_unique;
    bool m_v_unique_isSet;
    bool m_v_unique_isValid;

    qint32 m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISchema)

#endif // OAISchema_H
