/**
 * Profile System
 * Create shopper profiles and manage their information.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISchema_properties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISchema_properties::OAISchema_properties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISchema_properties::OAISchema_properties() {
    this->initializeModel();
}

OAISchema_properties::~OAISchema_properties() {}

void OAISchema_properties::initializeModel() {

    m_field_name_isSet = false;
    m_field_name_isValid = false;
}

void OAISchema_properties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISchema_properties::fromJsonObject(QJsonObject json) {

    m_field_name_isValid = ::OpenAPI::fromJsonValue(m_field_name, json[QString("{fieldName}")]);
    m_field_name_isSet = !json[QString("{fieldName}")].isNull() && m_field_name_isValid;
}

QString OAISchema_properties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISchema_properties::asJsonObject() const {
    QJsonObject obj;
    if (m_field_name.isSet()) {
        obj.insert(QString("{fieldName}"), ::OpenAPI::toJsonValue(m_field_name));
    }
    return obj;
}

OAISchema_properties__fieldName_ OAISchema_properties::getFieldName() const {
    return m_field_name;
}
void OAISchema_properties::setFieldName(const OAISchema_properties__fieldName_ &field_name) {
    m_field_name = field_name;
    m_field_name_isSet = true;
}

bool OAISchema_properties::is_field_name_Set() const{
    return m_field_name_isSet;
}

bool OAISchema_properties::is_field_name_Valid() const{
    return m_field_name_isValid;
}

bool OAISchema_properties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_field_name.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISchema_properties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
