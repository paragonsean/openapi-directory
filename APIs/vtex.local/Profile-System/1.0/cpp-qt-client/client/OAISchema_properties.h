/**
 * Profile System
 * Create shopper profiles and manage their information.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISchema_properties.h
 *
 * Object describing each field in your desired schema. In this object, each property is a new object, describing the field according to: &#x60;type&#x60; (string); &#x60;sensitive&#x60; (boolean); &#x60;pii&#x60; (boolean) and; &#x60;items.type&#x60; (if field is array).
 */

#ifndef OAISchema_properties_H
#define OAISchema_properties_H

#include <QJsonObject>

#include "OAISchema_properties__fieldName_.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISchema_properties__fieldName_;

class OAISchema_properties : public OAIObject {
public:
    OAISchema_properties();
    OAISchema_properties(QString json);
    ~OAISchema_properties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISchema_properties__fieldName_ getFieldName() const;
    void setFieldName(const OAISchema_properties__fieldName_ &field_name);
    bool is_field_name_Set() const;
    bool is_field_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISchema_properties__fieldName_ m_field_name;
    bool m_field_name_isSet;
    bool m_field_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISchema_properties)

#endif // OAISchema_properties_H
