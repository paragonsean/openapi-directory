/**
 * Profile System
 * Create shopper profiles and manage their information.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Profile model module.
 * @module model/Profile
 * @version 1.0
 */
class Profile {
    /**
     * Constructs a new <code>Profile</code>.
     * @alias module:model/Profile
     * @param document {String} Client's document.
     * @param documentType {String} Type of document informed in `document`.
     * @param email {String} Client's email address.
     * @param firstName {String} Client's first name.
     * @param lastName {String} Client's last name.
     */
    constructor(document, documentType, email, firstName, lastName) { 
        
        Profile.initialize(this, document, documentType, email, firstName, lastName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, document, documentType, email, firstName, lastName) { 
        obj['document'] = document;
        obj['documentType'] = documentType;
        obj['email'] = email;
        obj['firstName'] = firstName;
        obj['lastName'] = lastName;
    }

    /**
     * Constructs a <code>Profile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Profile} obj Optional instance to populate.
     * @return {module:model/Profile} The populated <code>Profile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Profile();

            if (data.hasOwnProperty('birthDate')) {
                obj['birthDate'] = ApiClient.convertToType(data['birthDate'], 'String');
            }
            if (data.hasOwnProperty('document')) {
                obj['document'] = ApiClient.convertToType(data['document'], 'String');
            }
            if (data.hasOwnProperty('documentType')) {
                obj['documentType'] = ApiClient.convertToType(data['documentType'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('firstName')) {
                obj['firstName'] = ApiClient.convertToType(data['firstName'], 'String');
            }
            if (data.hasOwnProperty('lastName')) {
                obj['lastName'] = ApiClient.convertToType(data['lastName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Profile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Profile</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Profile.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['birthDate'] && !(typeof data['birthDate'] === 'string' || data['birthDate'] instanceof String)) {
            throw new Error("Expected the field `birthDate` to be a primitive type in the JSON string but got " + data['birthDate']);
        }
        // ensure the json data is a string
        if (data['document'] && !(typeof data['document'] === 'string' || data['document'] instanceof String)) {
            throw new Error("Expected the field `document` to be a primitive type in the JSON string but got " + data['document']);
        }
        // ensure the json data is a string
        if (data['documentType'] && !(typeof data['documentType'] === 'string' || data['documentType'] instanceof String)) {
            throw new Error("Expected the field `documentType` to be a primitive type in the JSON string but got " + data['documentType']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['firstName'] && !(typeof data['firstName'] === 'string' || data['firstName'] instanceof String)) {
            throw new Error("Expected the field `firstName` to be a primitive type in the JSON string but got " + data['firstName']);
        }
        // ensure the json data is a string
        if (data['lastName'] && !(typeof data['lastName'] === 'string' || data['lastName'] instanceof String)) {
            throw new Error("Expected the field `lastName` to be a primitive type in the JSON string but got " + data['lastName']);
        }

        return true;
    }


}

Profile.RequiredProperties = ["document", "documentType", "email", "firstName", "lastName"];

/**
 * Client's birth date in ISO 8601 format.
 * @member {String} birthDate
 */
Profile.prototype['birthDate'] = undefined;

/**
 * Client's document.
 * @member {String} document
 */
Profile.prototype['document'] = undefined;

/**
 * Type of document informed in `document`.
 * @member {String} documentType
 */
Profile.prototype['documentType'] = undefined;

/**
 * Client's email address.
 * @member {String} email
 */
Profile.prototype['email'] = undefined;

/**
 * Client's first name.
 * @member {String} firstName
 */
Profile.prototype['firstName'] = undefined;

/**
 * Client's last name.
 * @member {String} lastName
 */
Profile.prototype['lastName'] = undefined;






export default Profile;

