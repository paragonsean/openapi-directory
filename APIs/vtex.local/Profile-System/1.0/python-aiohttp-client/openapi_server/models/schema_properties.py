# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.schema_properties_field_name import SchemaPropertiesFieldName
from openapi_server import util


class SchemaProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, field_name: SchemaPropertiesFieldName=None):
        """SchemaProperties - a model defined in OpenAPI

        :param field_name: The field_name of this SchemaProperties.
        """
        self.openapi_types = {
            'field_name': SchemaPropertiesFieldName
        }

        self.attribute_map = {
            'field_name': '{fieldName}'
        }

        self._field_name = field_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SchemaProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The schema_properties of this SchemaProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def field_name(self):
        """Gets the field_name of this SchemaProperties.


        :return: The field_name of this SchemaProperties.
        :rtype: SchemaPropertiesFieldName
        """
        return self._field_name

    @field_name.setter
    def field_name(self, field_name):
        """Sets the field_name of this SchemaProperties.


        :param field_name: The field_name of this SchemaProperties.
        :type field_name: SchemaPropertiesFieldName
        """

        self._field_name = field_name
