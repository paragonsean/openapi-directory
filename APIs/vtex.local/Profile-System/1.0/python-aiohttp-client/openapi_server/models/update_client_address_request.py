# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateClientAddressRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, administrative_area_level1: str=None, country_code: str=None, country_name: str=None, locality: str=None, locality_area_level1: str=None, postal_code: str=None, route: str=None, street_number: str=None):
        """UpdateClientAddressRequest - a model defined in OpenAPI

        :param administrative_area_level1: The administrative_area_level1 of this UpdateClientAddressRequest.
        :param country_code: The country_code of this UpdateClientAddressRequest.
        :param country_name: The country_name of this UpdateClientAddressRequest.
        :param locality: The locality of this UpdateClientAddressRequest.
        :param locality_area_level1: The locality_area_level1 of this UpdateClientAddressRequest.
        :param postal_code: The postal_code of this UpdateClientAddressRequest.
        :param route: The route of this UpdateClientAddressRequest.
        :param street_number: The street_number of this UpdateClientAddressRequest.
        """
        self.openapi_types = {
            'administrative_area_level1': str,
            'country_code': str,
            'country_name': str,
            'locality': str,
            'locality_area_level1': str,
            'postal_code': str,
            'route': str,
            'street_number': str
        }

        self.attribute_map = {
            'administrative_area_level1': 'administrativeAreaLevel1',
            'country_code': 'countryCode',
            'country_name': 'countryName',
            'locality': 'locality',
            'locality_area_level1': 'localityAreaLevel1',
            'postal_code': 'postalCode',
            'route': 'route',
            'street_number': 'streetNumber'
        }

        self._administrative_area_level1 = administrative_area_level1
        self._country_code = country_code
        self._country_name = country_name
        self._locality = locality
        self._locality_area_level1 = locality_area_level1
        self._postal_code = postal_code
        self._route = route
        self._street_number = street_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateClientAddressRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateClientAddress_request of this UpdateClientAddressRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def administrative_area_level1(self):
        """Gets the administrative_area_level1 of this UpdateClientAddressRequest.

        Name of administrative area, such as the state or province.

        :return: The administrative_area_level1 of this UpdateClientAddressRequest.
        :rtype: str
        """
        return self._administrative_area_level1

    @administrative_area_level1.setter
    def administrative_area_level1(self, administrative_area_level1):
        """Sets the administrative_area_level1 of this UpdateClientAddressRequest.

        Name of administrative area, such as the state or province.

        :param administrative_area_level1: The administrative_area_level1 of this UpdateClientAddressRequest.
        :type administrative_area_level1: str
        """

        self._administrative_area_level1 = administrative_area_level1

    @property
    def country_code(self):
        """Gets the country_code of this UpdateClientAddressRequest.

        Two letter country code.

        :return: The country_code of this UpdateClientAddressRequest.
        :rtype: str
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code):
        """Sets the country_code of this UpdateClientAddressRequest.

        Two letter country code.

        :param country_code: The country_code of this UpdateClientAddressRequest.
        :type country_code: str
        """

        self._country_code = country_code

    @property
    def country_name(self):
        """Gets the country_name of this UpdateClientAddressRequest.

        Name of the address country.

        :return: The country_name of this UpdateClientAddressRequest.
        :rtype: str
        """
        return self._country_name

    @country_name.setter
    def country_name(self, country_name):
        """Sets the country_name of this UpdateClientAddressRequest.

        Name of the address country.

        :param country_name: The country_name of this UpdateClientAddressRequest.
        :type country_name: str
        """

        self._country_name = country_name

    @property
    def locality(self):
        """Gets the locality of this UpdateClientAddressRequest.

        Name of address locality, such as the city.

        :return: The locality of this UpdateClientAddressRequest.
        :rtype: str
        """
        return self._locality

    @locality.setter
    def locality(self, locality):
        """Sets the locality of this UpdateClientAddressRequest.

        Name of address locality, such as the city.

        :param locality: The locality of this UpdateClientAddressRequest.
        :type locality: str
        """

        self._locality = locality

    @property
    def locality_area_level1(self):
        """Gets the locality_area_level1 of this UpdateClientAddressRequest.

        Name of the address locality area, such as the neighborhood or district.

        :return: The locality_area_level1 of this UpdateClientAddressRequest.
        :rtype: str
        """
        return self._locality_area_level1

    @locality_area_level1.setter
    def locality_area_level1(self, locality_area_level1):
        """Sets the locality_area_level1 of this UpdateClientAddressRequest.

        Name of the address locality area, such as the neighborhood or district.

        :param locality_area_level1: The locality_area_level1 of this UpdateClientAddressRequest.
        :type locality_area_level1: str
        """

        self._locality_area_level1 = locality_area_level1

    @property
    def postal_code(self):
        """Gets the postal_code of this UpdateClientAddressRequest.

        Address postal code.

        :return: The postal_code of this UpdateClientAddressRequest.
        :rtype: str
        """
        return self._postal_code

    @postal_code.setter
    def postal_code(self, postal_code):
        """Sets the postal_code of this UpdateClientAddressRequest.

        Address postal code.

        :param postal_code: The postal_code of this UpdateClientAddressRequest.
        :type postal_code: str
        """

        self._postal_code = postal_code

    @property
    def route(self):
        """Gets the route of this UpdateClientAddressRequest.

        Name of the address country.

        :return: The route of this UpdateClientAddressRequest.
        :rtype: str
        """
        return self._route

    @route.setter
    def route(self, route):
        """Sets the route of this UpdateClientAddressRequest.

        Name of the address country.

        :param route: The route of this UpdateClientAddressRequest.
        :type route: str
        """

        self._route = route

    @property
    def street_number(self):
        """Gets the street_number of this UpdateClientAddressRequest.

        Name of the address country.

        :return: The street_number of this UpdateClientAddressRequest.
        :rtype: str
        """
        return self._street_number

    @street_number.setter
    def street_number(self, street_number):
        """Sets the street_number of this UpdateClientAddressRequest.

        Name of the address country.

        :param street_number: The street_number of this UpdateClientAddressRequest.
        :type street_number: str
        """

        self._street_number = street_number
