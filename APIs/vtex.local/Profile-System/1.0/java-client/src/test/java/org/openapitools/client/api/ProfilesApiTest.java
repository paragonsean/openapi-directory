/*
 * Profile System
 * Create shopper profiles and manage their information.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Profile;
import org.openapitools.client.model.UpdateClientProfileRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProfilesApi
 */
@Disabled
public class ProfilesApiTest {

    private final ProfilesApi api = new ProfilesApi();

    /**
     * Create client profile
     *
     * Creates new client profile.    &gt; Since your store&#39;s profile schema is customizable, the schema and examples presented below may differ from yours. Your integration must be adapted accordingly.    &gt; The &#x60;id&#x60; field returned by this request is the &#x60;profileId&#x60; used to retrieve information on a specific profile later.    &gt; Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createClientProfileTest() throws ApiException {
        String contentType = null;
        String accept = null;
        Integer ttl = null;
        Profile profile = null;
        Object response = api.createClientProfile(contentType, accept, ttl, profile);
        // TODO: test validations
    }

    /**
     * Delete client profile
     *
     * Deletes a client profile by &#x60;profileId&#x60;.    &gt; Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteClientProfileTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String profileId = null;
        api.deleteClientProfile(contentType, accept, profileId);
        // TODO: test validations
    }

    /**
     * Get profile
     *
     * Retrieves the information of a specific client, by its &#x60;profileId&#x60;.    &gt; Since your store&#39;s profile schema is customizable, the schema and examples presented below may differ from yours. Your integration must be adapted accordingly.    &gt; For security and privacy reasons, this request returns masked profile data. For unmasked information, see Get unmasked profile.    &gt; Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProfileTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String profileId = null;
        String alternativeKey = null;
        List<Object> response = api.getProfile(contentType, accept, profileId, alternativeKey);
        // TODO: test validations
    }

    /**
     * Get profile by version
     *
     * Retrieves the information of a specific version of a client profile.    &gt; Since your store&#39;s profile schema is customizable, the schema and examples presented below may differ from yours. Your integration must be adapted accordingly.    &gt; For security and privacy reasons, this request returns masked profile data. For unmasked information, see Get unmasked profile by version.    &gt; Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProfileByVersionTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String profileId = null;
        String profileVersionId = null;
        List<Object> response = api.getProfileByVersion(contentType, accept, profileId, profileVersionId);
        // TODO: test validations
    }

    /**
     * Get unmasked profile
     *
     * Retrieves unmasked information of a specific client, by its &#x60;profileId&#x60;.    &gt; Since your store&#39;s profile schema is customizable, the schema and examples presented below may differ from yours. Your integration must be adapted accordingly.    &gt; Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUnmaskedProfileTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String profileId = null;
        String reason = null;
        String alternativeKey = null;
        List<Object> response = api.getUnmaskedProfile(contentType, accept, profileId, reason, alternativeKey);
        // TODO: test validations
    }

    /**
     * Get unmasked profile by version
     *
     * Retrieves unmasked information of a specific version of a client profile.    &gt; Since your store&#39;s profile schema is customizable, the schema and examples presented below may differ from yours. Your integration must be adapted accordingly.    &gt; Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUnmaskedProfileByVersionTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String profileId = null;
        String profileVersionId = null;
        String reason = null;
        List<Object> response = api.getUnmaskedProfileByVersion(contentType, accept, profileId, profileVersionId, reason);
        // TODO: test validations
    }

    /**
     * Updates client profile
     *
     * Updates one or more fields of an existing client profile.    &gt; Since your store&#39;s profile schema is customizable, the schema and examples presented below may differ from yours. Your integration must be adapted accordingly.    &gt; Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateClientProfileTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String profileId = null;
        String alternativeKey = null;
        Integer ttl = null;
        UpdateClientProfileRequest updateClientProfileRequest = null;
        Object response = api.updateClientProfile(contentType, accept, profileId, alternativeKey, ttl, updateClientProfileRequest);
        // TODO: test validations
    }

}
