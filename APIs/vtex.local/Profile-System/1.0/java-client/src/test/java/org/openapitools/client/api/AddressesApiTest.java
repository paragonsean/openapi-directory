/*
 * Profile System
 * Create shopper profiles and manage their information.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Address;
import org.openapitools.client.model.UpdateClientAddressRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AddressesApi
 */
@Disabled
public class AddressesApiTest {

    private final AddressesApi api = new AddressesApi();

    /**
     * Create client address
     *
     * Creates new address for a given client profile.    &gt; The &#x60;id&#x60; field returned by this request is the &#x60;addressId&#x60; used to retrieve or update information of a specific address later.    &gt; Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createClientAddressTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String profileId = null;
        String alternativeKey = null;
        Address address = null;
        Object response = api.createClientAddress(contentType, accept, profileId, alternativeKey, address);
        // TODO: test validations
    }

    /**
     * Delete address
     *
     * Deletes a client&#39;s address by &#x60;profileId&#x60; and &#x60;addressId&#x60;.    &gt; Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAddressTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String profileId = null;
        String addressId = null;
        String alternativeKey = null;
        api.deleteAddress(contentType, accept, profileId, addressId, alternativeKey);
        // TODO: test validations
    }

    /**
     * Get address
     *
     * Retrieves information of a specific address of a given client, by its respectives &#x60;adderssId&#x60; and &#x60;profileId&#x60;.    &gt; For security and privacy reasons, this request returns masked address data. For unmasked information, see Get unmasked address.    &gt; Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAddressTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String profileId = null;
        String addressId = null;
        String alternativeKey = null;
        Object response = api.getAddress(contentType, accept, profileId, addressId, alternativeKey);
        // TODO: test validations
    }

    /**
     * Get address by version
     *
     * Retrieves information of a specific version address of a given client.    &gt; For security and privacy reasons, this request returns masked address data by version. For unmasked information, see Get unmasked address by version.    &gt; Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAddressByVersionTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String profileId = null;
        String addressId = null;
        String addressVersionId = null;
        String reason = null;
        String alternativeKey = null;
        Object response = api.getAddressByVersion(contentType, accept, profileId, addressId, addressVersionId, reason, alternativeKey);
        // TODO: test validations
    }

    /**
     * Get client addresses
     *
     * Retrieves information of all addresses of a given client, by its &#x60;profileId&#x60;.    &gt; For security and privacy reasons, this request returns masked address data. For unmasked information, see Get unmasked client addresses.    &gt; Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getClientAddressesTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String profileId = null;
        String alternativeKey = null;
        List<Object> response = api.getClientAddresses(contentType, accept, profileId, alternativeKey);
        // TODO: test validations
    }

    /**
     * Get unmasked address
     *
     * Retrieves unmasked information of a specific address of a given client, by its respectives &#x60;adderssId&#x60; and &#x60;profileId&#x60;.    &gt; Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUnmaskedAddressTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String profileId = null;
        String addressId = null;
        String reason = null;
        String alternativeKey = null;
        Object response = api.getUnmaskedAddress(contentType, accept, profileId, addressId, reason, alternativeKey);
        // TODO: test validations
    }

    /**
     * Get unmasked address by version
     *
     * Retrieves unmasked information of a specific address version of a given client.    &gt; Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUnmaskedAddressByVersionTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String profileId = null;
        String addressId = null;
        String addressVersionId = null;
        String reason = null;
        String alternativeKey = null;
        Object response = api.getUnmaskedAddressByVersion(contentType, accept, profileId, addressId, addressVersionId, reason, alternativeKey);
        // TODO: test validations
    }

    /**
     * Get unmasked client addresses
     *
     * Retrieves unmasked information of all addresses of a given client, by its &#x60;profileId&#x60;.    &gt; Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUnmaskedClientAddressesTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String profileId = null;
        String alternativeKey = null;
        List<Map<String, Object>> response = api.getUnmaskedClientAddresses(contentType, accept, profileId, alternativeKey);
        // TODO: test validations
    }

    /**
     * Update client address
     *
     * Updates one or more fields of an existing address for a given client profile.    &gt; Learn more about the [Profile System](https://developers.vtex.com/vtex-rest-api/docs/profile-system) and its other API endpoints.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateClientAddressTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String profileId = null;
        String addressId = null;
        String alternativeKey = null;
        UpdateClientAddressRequest updateClientAddressRequest = null;
        Object response = api.updateClientAddress(contentType, accept, profileId, addressId, alternativeKey, updateClientAddressRequest);
        // TODO: test validations
    }

}
