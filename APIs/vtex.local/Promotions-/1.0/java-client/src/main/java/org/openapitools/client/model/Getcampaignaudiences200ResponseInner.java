/*
 * Promotions & Taxes API
 *   > Check the new [Promotions onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/promotions-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Promotions and is organized by focusing on the developer's journey.     The Promotions & Taxes API allows you to manage and retrieve all promotions, coupons and tax rules from your VTEX store.     ## Index     ### Coupons   `POST` [Create multiple coupons](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-multiple-coupons)   `POST` [Create coupon](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-coupon)   `GET` [Get coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/getbycouponcode)   `GET` [Get archived coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/getarchivedbycouponcode)   `POST` [Archive coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/archivebycouponcode)   `POST` [Update coupon](https://developers.vtex.com/vtex-rest-api/reference/update)   `GET` [Get all coupons](https://developers.vtex.com/vtex-rest-api/reference/getall)   `POST` [Coupon Massive Generation](https://developers.vtex.com/vtex-rest-api/reference/massivegeneration)   `GET` [Get coupon usage](https://developers.vtex.com/vtex-rest-api/reference/getusage)   `POST` [Unarchive coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/unarchivebycouponcode)     ### Promotions and Taxes   `GET` [Get All Promotions](https://developers.vtex.com/vtex-rest-api/reference/getallbenefits)   `GET` [Get All Taxes](https://developers.vtex.com/vtex-rest-api/reference/getalltaxes)   `GET` [Get Promotion or Tax By ID](https://developers.vtex.com/vtex-rest-api/reference/getcalculatorconfigurationbyid)   `POST` [Create or Update Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/createorupdatecalculatorconfiguration)   `POST` [Create Multiple SKU Promotion](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-import-calculatorconfiguration)   `PUT` [Update Multiple SKU Promotion](https://developers.vtex.com/vtex-rest-api/reference/put_api-rnb-pvt-import-calculatorconfiguration-promotionid)   `POST` [Archive Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/archivepromotion-1)   `POST` [Unarchive Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/unarchivepromotion-1)   `GET` [List archived Promotions](https://developers.vtex.com/vtex-rest-api/reference/getarchivedpromotions)   `GET` [List archived Taxes](https://developers.vtex.com/vtex-rest-api/reference/getarchivedtaxes)       ### Campaign Audiences   `GET` [Get campaign audience configuration](https://developers.vtex.com/vtex-rest-api/reference/getcampaignconfiguration)   `POST` [Create campaign audience](https://developers.vtex.com/vtex-rest-api/reference/setcampaignconfiguration)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Getcampaignaudiences200ResponseInnerLastModified;
import org.openapitools.client.model.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Object containing information about the campaign audience.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:56:03.993078-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Getcampaignaudiences200ResponseInner {
  public static final String SERIALIZED_NAME_BEGIN_DATE_UTC = "beginDateUtc";
  @SerializedName(SERIALIZED_NAME_BEGIN_DATE_UTC)
  private String beginDateUtc;

  public static final String SERIALIZED_NAME_END_DATE_UTC = "endDateUtc";
  @SerializedName(SERIALIZED_NAME_END_DATE_UTC)
  private String endDateUtc;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IS_ACTIVE = "isActive";
  @SerializedName(SERIALIZED_NAME_IS_ACTIVE)
  private Boolean isActive;

  public static final String SERIALIZED_NAME_IS_AND_OPERATOR = "isAndOperator";
  @SerializedName(SERIALIZED_NAME_IS_AND_OPERATOR)
  private Boolean isAndOperator;

  public static final String SERIALIZED_NAME_IS_ARCHIVED = "isArchived";
  @SerializedName(SERIALIZED_NAME_IS_ARCHIVED)
  private Boolean isArchived;

  public static final String SERIALIZED_NAME_LAST_MODIFIED = "lastModified";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED)
  private Getcampaignaudiences200ResponseInnerLastModified lastModified;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_TARGET_CONFIGURATIONS = "targetConfigurations";
  @SerializedName(SERIALIZED_NAME_TARGET_CONFIGURATIONS)
  private List<Getcampaignaudiences200ResponseInnerTargetConfigurationsInner> targetConfigurations = new ArrayList<>();

  public Getcampaignaudiences200ResponseInner() {
  }

  public Getcampaignaudiences200ResponseInner beginDateUtc(String beginDateUtc) {
    this.beginDateUtc = beginDateUtc;
    return this;
  }

  /**
   * Start date of the campaign audience in UTC format.
   * @return beginDateUtc
   */
  @javax.annotation.Nullable
  public String getBeginDateUtc() {
    return beginDateUtc;
  }

  public void setBeginDateUtc(String beginDateUtc) {
    this.beginDateUtc = beginDateUtc;
  }


  public Getcampaignaudiences200ResponseInner endDateUtc(String endDateUtc) {
    this.endDateUtc = endDateUtc;
    return this;
  }

  /**
   * End date of the campaign audience in UTC format.
   * @return endDateUtc
   */
  @javax.annotation.Nullable
  public String getEndDateUtc() {
    return endDateUtc;
  }

  public void setEndDateUtc(String endDateUtc) {
    this.endDateUtc = endDateUtc;
  }


  public Getcampaignaudiences200ResponseInner id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Campaign audience ID.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public Getcampaignaudiences200ResponseInner isActive(Boolean isActive) {
    this.isActive = isActive;
    return this;
  }

  /**
   * Defines if the campaign audience is active (&#x60;true&#x60;) or not (&#x60;false&#x60;).
   * @return isActive
   */
  @javax.annotation.Nullable
  public Boolean getIsActive() {
    return isActive;
  }

  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }


  public Getcampaignaudiences200ResponseInner isAndOperator(Boolean isAndOperator) {
    this.isAndOperator = isAndOperator;
    return this;
  }

  /**
   * When &#x60;true&#x60;, determines that all the &#x60;targetConfigurations&#x60; need to be valid for the campaign audience to be active. When &#x60;false&#x60;, determines that if at least one of the &#x60;targetConfigurations&#x60; is valid, the campaign audience will be active.
   * @return isAndOperator
   */
  @javax.annotation.Nullable
  public Boolean getIsAndOperator() {
    return isAndOperator;
  }

  public void setIsAndOperator(Boolean isAndOperator) {
    this.isAndOperator = isAndOperator;
  }


  public Getcampaignaudiences200ResponseInner isArchived(Boolean isArchived) {
    this.isArchived = isArchived;
    return this;
  }

  /**
   * Defines if the campaign audience is archived (&#x60;true&#x60;) or not (&#x60;false&#x60;).
   * @return isArchived
   */
  @javax.annotation.Nullable
  public Boolean getIsArchived() {
    return isArchived;
  }

  public void setIsArchived(Boolean isArchived) {
    this.isArchived = isArchived;
  }


  public Getcampaignaudiences200ResponseInner lastModified(Getcampaignaudiences200ResponseInnerLastModified lastModified) {
    this.lastModified = lastModified;
    return this;
  }

  /**
   * Get lastModified
   * @return lastModified
   */
  @javax.annotation.Nullable
  public Getcampaignaudiences200ResponseInnerLastModified getLastModified() {
    return lastModified;
  }

  public void setLastModified(Getcampaignaudiences200ResponseInnerLastModified lastModified) {
    this.lastModified = lastModified;
  }


  public Getcampaignaudiences200ResponseInner name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Campaign audience name.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public Getcampaignaudiences200ResponseInner targetConfigurations(List<Getcampaignaudiences200ResponseInnerTargetConfigurationsInner> targetConfigurations) {
    this.targetConfigurations = targetConfigurations;
    return this;
  }

  public Getcampaignaudiences200ResponseInner addTargetConfigurationsItem(Getcampaignaudiences200ResponseInnerTargetConfigurationsInner targetConfigurationsItem) {
    if (this.targetConfigurations == null) {
      this.targetConfigurations = new ArrayList<>();
    }
    this.targetConfigurations.add(targetConfigurationsItem);
    return this;
  }

  /**
   * Array that contains all target audience that the campaign audience will be valid.
   * @return targetConfigurations
   */
  @javax.annotation.Nullable
  public List<Getcampaignaudiences200ResponseInnerTargetConfigurationsInner> getTargetConfigurations() {
    return targetConfigurations;
  }

  public void setTargetConfigurations(List<Getcampaignaudiences200ResponseInnerTargetConfigurationsInner> targetConfigurations) {
    this.targetConfigurations = targetConfigurations;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Getcampaignaudiences200ResponseInner getcampaignaudiences200ResponseInner = (Getcampaignaudiences200ResponseInner) o;
    return Objects.equals(this.beginDateUtc, getcampaignaudiences200ResponseInner.beginDateUtc) &&
        Objects.equals(this.endDateUtc, getcampaignaudiences200ResponseInner.endDateUtc) &&
        Objects.equals(this.id, getcampaignaudiences200ResponseInner.id) &&
        Objects.equals(this.isActive, getcampaignaudiences200ResponseInner.isActive) &&
        Objects.equals(this.isAndOperator, getcampaignaudiences200ResponseInner.isAndOperator) &&
        Objects.equals(this.isArchived, getcampaignaudiences200ResponseInner.isArchived) &&
        Objects.equals(this.lastModified, getcampaignaudiences200ResponseInner.lastModified) &&
        Objects.equals(this.name, getcampaignaudiences200ResponseInner.name) &&
        Objects.equals(this.targetConfigurations, getcampaignaudiences200ResponseInner.targetConfigurations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(beginDateUtc, endDateUtc, id, isActive, isAndOperator, isArchived, lastModified, name, targetConfigurations);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Getcampaignaudiences200ResponseInner {\n");
    sb.append("    beginDateUtc: ").append(toIndentedString(beginDateUtc)).append("\n");
    sb.append("    endDateUtc: ").append(toIndentedString(endDateUtc)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    isAndOperator: ").append(toIndentedString(isAndOperator)).append("\n");
    sb.append("    isArchived: ").append(toIndentedString(isArchived)).append("\n");
    sb.append("    lastModified: ").append(toIndentedString(lastModified)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    targetConfigurations: ").append(toIndentedString(targetConfigurations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("beginDateUtc");
    openapiFields.add("endDateUtc");
    openapiFields.add("id");
    openapiFields.add("isActive");
    openapiFields.add("isAndOperator");
    openapiFields.add("isArchived");
    openapiFields.add("lastModified");
    openapiFields.add("name");
    openapiFields.add("targetConfigurations");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Getcampaignaudiences200ResponseInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Getcampaignaudiences200ResponseInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Getcampaignaudiences200ResponseInner is not found in the empty JSON string", Getcampaignaudiences200ResponseInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Getcampaignaudiences200ResponseInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Getcampaignaudiences200ResponseInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("beginDateUtc") != null && !jsonObj.get("beginDateUtc").isJsonNull()) && !jsonObj.get("beginDateUtc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `beginDateUtc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("beginDateUtc").toString()));
      }
      if ((jsonObj.get("endDateUtc") != null && !jsonObj.get("endDateUtc").isJsonNull()) && !jsonObj.get("endDateUtc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endDateUtc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endDateUtc").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // validate the optional field `lastModified`
      if (jsonObj.get("lastModified") != null && !jsonObj.get("lastModified").isJsonNull()) {
        Getcampaignaudiences200ResponseInnerLastModified.validateJsonElement(jsonObj.get("lastModified"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("targetConfigurations") != null && !jsonObj.get("targetConfigurations").isJsonNull()) {
        JsonArray jsonArraytargetConfigurations = jsonObj.getAsJsonArray("targetConfigurations");
        if (jsonArraytargetConfigurations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("targetConfigurations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `targetConfigurations` to be an array in the JSON string but got `%s`", jsonObj.get("targetConfigurations").toString()));
          }

          // validate the optional field `targetConfigurations` (array)
          for (int i = 0; i < jsonArraytargetConfigurations.size(); i++) {
            Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.validateJsonElement(jsonArraytargetConfigurations.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Getcampaignaudiences200ResponseInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Getcampaignaudiences200ResponseInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Getcampaignaudiences200ResponseInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Getcampaignaudiences200ResponseInner.class));

       return (TypeAdapter<T>) new TypeAdapter<Getcampaignaudiences200ResponseInner>() {
           @Override
           public void write(JsonWriter out, Getcampaignaudiences200ResponseInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Getcampaignaudiences200ResponseInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Getcampaignaudiences200ResponseInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Getcampaignaudiences200ResponseInner
   * @throws IOException if the JSON string is invalid with respect to Getcampaignaudiences200ResponseInner
   */
  public static Getcampaignaudiences200ResponseInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Getcampaignaudiences200ResponseInner.class);
  }

  /**
   * Convert an instance of Getcampaignaudiences200ResponseInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

