/*
 * Promotions & Taxes API
 *   > Check the new [Promotions onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/promotions-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Promotions and is organized by focusing on the developer's journey.     The Promotions & Taxes API allows you to manage and retrieve all promotions, coupons and tax rules from your VTEX store.     ## Index     ### Coupons   `POST` [Create multiple coupons](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-multiple-coupons)   `POST` [Create coupon](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-coupon)   `GET` [Get coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/getbycouponcode)   `GET` [Get archived coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/getarchivedbycouponcode)   `POST` [Archive coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/archivebycouponcode)   `POST` [Update coupon](https://developers.vtex.com/vtex-rest-api/reference/update)   `GET` [Get all coupons](https://developers.vtex.com/vtex-rest-api/reference/getall)   `POST` [Coupon Massive Generation](https://developers.vtex.com/vtex-rest-api/reference/massivegeneration)   `GET` [Get coupon usage](https://developers.vtex.com/vtex-rest-api/reference/getusage)   `POST` [Unarchive coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/unarchivebycouponcode)     ### Promotions and Taxes   `GET` [Get All Promotions](https://developers.vtex.com/vtex-rest-api/reference/getallbenefits)   `GET` [Get All Taxes](https://developers.vtex.com/vtex-rest-api/reference/getalltaxes)   `GET` [Get Promotion or Tax By ID](https://developers.vtex.com/vtex-rest-api/reference/getcalculatorconfigurationbyid)   `POST` [Create or Update Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/createorupdatecalculatorconfiguration)   `POST` [Create Multiple SKU Promotion](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-import-calculatorconfiguration)   `PUT` [Update Multiple SKU Promotion](https://developers.vtex.com/vtex-rest-api/reference/put_api-rnb-pvt-import-calculatorconfiguration-promotionid)   `POST` [Archive Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/archivepromotion-1)   `POST` [Unarchive Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/unarchivepromotion-1)   `GET` [List archived Promotions](https://developers.vtex.com/vtex-rest-api/reference/getarchivedpromotions)   `GET` [List archived Taxes](https://developers.vtex.com/vtex-rest-api/reference/getarchivedtaxes)       ### Campaign Audiences   `GET` [Get campaign audience configuration](https://developers.vtex.com/vtex-rest-api/reference/getcampaignconfiguration)   `POST` [Create campaign audience](https://developers.vtex.com/vtex-rest-api/reference/setcampaignconfiguration)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Scope of the tax.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:56:03.993078-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetTaxesInnerScope {
  public static final String SERIALIZED_NAME_ALL_CATALOG = "allCatalog";
  @SerializedName(SERIALIZED_NAME_ALL_CATALOG)
  private Boolean allCatalog;

  public static final String SERIALIZED_NAME_BRANDS = "brands";
  @SerializedName(SERIALIZED_NAME_BRANDS)
  private BigDecimal brands;

  public static final String SERIALIZED_NAME_BRANDS_ARE_INCLUSIVE = "brandsAreInclusive";
  @SerializedName(SERIALIZED_NAME_BRANDS_ARE_INCLUSIVE)
  private Boolean brandsAreInclusive;

  public static final String SERIALIZED_NAME_CATEGORIES = "categories";
  @SerializedName(SERIALIZED_NAME_CATEGORIES)
  private BigDecimal categories;

  public static final String SERIALIZED_NAME_CATEGORIES_ARE_INCLUSIVE = "categoriesAreInclusive";
  @SerializedName(SERIALIZED_NAME_CATEGORIES_ARE_INCLUSIVE)
  private Boolean categoriesAreInclusive;

  public static final String SERIALIZED_NAME_COLLECTIONS = "collections";
  @SerializedName(SERIALIZED_NAME_COLLECTIONS)
  private BigDecimal collections;

  public static final String SERIALIZED_NAME_COLLECTIONS_ARE_INCLUSIVE = "collectionsAreInclusive";
  @SerializedName(SERIALIZED_NAME_COLLECTIONS_ARE_INCLUSIVE)
  private Boolean collectionsAreInclusive;

  public static final String SERIALIZED_NAME_PRODUCTS = "products";
  @SerializedName(SERIALIZED_NAME_PRODUCTS)
  private BigDecimal products;

  public static final String SERIALIZED_NAME_PRODUCTS_ARE_INCLUSIVE = "productsAreInclusive";
  @SerializedName(SERIALIZED_NAME_PRODUCTS_ARE_INCLUSIVE)
  private Boolean productsAreInclusive;

  public static final String SERIALIZED_NAME_SELLERS = "sellers";
  @SerializedName(SERIALIZED_NAME_SELLERS)
  private BigDecimal sellers;

  public static final String SERIALIZED_NAME_SELLERS_ARE_INCLUSIVE = "sellersAreInclusive";
  @SerializedName(SERIALIZED_NAME_SELLERS_ARE_INCLUSIVE)
  private Boolean sellersAreInclusive;

  public static final String SERIALIZED_NAME_SKUS = "skus";
  @SerializedName(SERIALIZED_NAME_SKUS)
  private BigDecimal skus;

  public static final String SERIALIZED_NAME_SKUS_ARE_INCLUSIVE = "skusAreInclusive";
  @SerializedName(SERIALIZED_NAME_SKUS_ARE_INCLUSIVE)
  private Boolean skusAreInclusive;

  public GetTaxesInnerScope() {
  }

  public GetTaxesInnerScope allCatalog(Boolean allCatalog) {
    this.allCatalog = allCatalog;
    return this;
  }

  /**
   * Determines if the tax applies to all products in the Catalog (&#x60;true&#x60;) or not (&#x60;false&#x60;).
   * @return allCatalog
   */
  @javax.annotation.Nullable
  public Boolean getAllCatalog() {
    return allCatalog;
  }

  public void setAllCatalog(Boolean allCatalog) {
    this.allCatalog = allCatalog;
  }


  public GetTaxesInnerScope brands(BigDecimal brands) {
    this.brands = brands;
    return this;
  }

  /**
   * Quantity of brands which activate or deactivate the tax.
   * @return brands
   */
  @javax.annotation.Nullable
  public BigDecimal getBrands() {
    return brands;
  }

  public void setBrands(BigDecimal brands) {
    this.brands = brands;
  }


  public GetTaxesInnerScope brandsAreInclusive(Boolean brandsAreInclusive) {
    this.brandsAreInclusive = brandsAreInclusive;
    return this;
  }

  /**
   * If set to &#x60;true&#x60;, this tax will be applied to any brand present on the &#x60;brands&#x60; field. If set to &#x60;false&#x60;, brands present on that field will make this tax not to be applied.
   * @return brandsAreInclusive
   */
  @javax.annotation.Nullable
  public Boolean getBrandsAreInclusive() {
    return brandsAreInclusive;
  }

  public void setBrandsAreInclusive(Boolean brandsAreInclusive) {
    this.brandsAreInclusive = brandsAreInclusive;
  }


  public GetTaxesInnerScope categories(BigDecimal categories) {
    this.categories = categories;
    return this;
  }

  /**
   * Quantity of categories which activate or deactivate the tax.
   * @return categories
   */
  @javax.annotation.Nullable
  public BigDecimal getCategories() {
    return categories;
  }

  public void setCategories(BigDecimal categories) {
    this.categories = categories;
  }


  public GetTaxesInnerScope categoriesAreInclusive(Boolean categoriesAreInclusive) {
    this.categoriesAreInclusive = categoriesAreInclusive;
    return this;
  }

  /**
   * If set to &#x60;true&#x60;, this tax will be applied to any category present on the &#x60;categories&#x60; field. If set to &#x60;false&#x60;, categories present on that field will make this tax not to be applied.
   * @return categoriesAreInclusive
   */
  @javax.annotation.Nullable
  public Boolean getCategoriesAreInclusive() {
    return categoriesAreInclusive;
  }

  public void setCategoriesAreInclusive(Boolean categoriesAreInclusive) {
    this.categoriesAreInclusive = categoriesAreInclusive;
  }


  public GetTaxesInnerScope collections(BigDecimal collections) {
    this.collections = collections;
    return this;
  }

  /**
   * Quantity of collections which activate or deactivate the tax.
   * @return collections
   */
  @javax.annotation.Nullable
  public BigDecimal getCollections() {
    return collections;
  }

  public void setCollections(BigDecimal collections) {
    this.collections = collections;
  }


  public GetTaxesInnerScope collectionsAreInclusive(Boolean collectionsAreInclusive) {
    this.collectionsAreInclusive = collectionsAreInclusive;
    return this;
  }

  /**
   * If set to &#x60;true&#x60;, this tax will be applied to any collection present on the &#x60;collections&#x60; field. If set to &#x60;false&#x60;, collections present on that field will make this tax not to be applied.
   * @return collectionsAreInclusive
   */
  @javax.annotation.Nullable
  public Boolean getCollectionsAreInclusive() {
    return collectionsAreInclusive;
  }

  public void setCollectionsAreInclusive(Boolean collectionsAreInclusive) {
    this.collectionsAreInclusive = collectionsAreInclusive;
  }


  public GetTaxesInnerScope products(BigDecimal products) {
    this.products = products;
    return this;
  }

  /**
   * Quantity of products which activate or deactivate the tax.
   * @return products
   */
  @javax.annotation.Nullable
  public BigDecimal getProducts() {
    return products;
  }

  public void setProducts(BigDecimal products) {
    this.products = products;
  }


  public GetTaxesInnerScope productsAreInclusive(Boolean productsAreInclusive) {
    this.productsAreInclusive = productsAreInclusive;
    return this;
  }

  /**
   * If set to &#x60;true&#x60;, this tax will be applied to any product present on the &#x60;products&#x60; field. If set to &#x60;false&#x60;, products present on that field will make this tax not to be applied.
   * @return productsAreInclusive
   */
  @javax.annotation.Nullable
  public Boolean getProductsAreInclusive() {
    return productsAreInclusive;
  }

  public void setProductsAreInclusive(Boolean productsAreInclusive) {
    this.productsAreInclusive = productsAreInclusive;
  }


  public GetTaxesInnerScope sellers(BigDecimal sellers) {
    this.sellers = sellers;
    return this;
  }

  /**
   * Quantity of sellers which activate or deactivate the tax.
   * @return sellers
   */
  @javax.annotation.Nullable
  public BigDecimal getSellers() {
    return sellers;
  }

  public void setSellers(BigDecimal sellers) {
    this.sellers = sellers;
  }


  public GetTaxesInnerScope sellersAreInclusive(Boolean sellersAreInclusive) {
    this.sellersAreInclusive = sellersAreInclusive;
    return this;
  }

  /**
   * If set to &#x60;true&#x60;, this tax will be applied to any seller present on the &#x60;sellers&#x60; field. If set to &#x60;false&#x60;, sellers present on that field will make this tax not to be applied.
   * @return sellersAreInclusive
   */
  @javax.annotation.Nullable
  public Boolean getSellersAreInclusive() {
    return sellersAreInclusive;
  }

  public void setSellersAreInclusive(Boolean sellersAreInclusive) {
    this.sellersAreInclusive = sellersAreInclusive;
  }


  public GetTaxesInnerScope skus(BigDecimal skus) {
    this.skus = skus;
    return this;
  }

  /**
   * Quantity of SKUs which activate or deactivate the tax.
   * @return skus
   */
  @javax.annotation.Nullable
  public BigDecimal getSkus() {
    return skus;
  }

  public void setSkus(BigDecimal skus) {
    this.skus = skus;
  }


  public GetTaxesInnerScope skusAreInclusive(Boolean skusAreInclusive) {
    this.skusAreInclusive = skusAreInclusive;
    return this;
  }

  /**
   * If set to &#x60;true&#x60;, this tax will be applied to any SKU present on the &#x60;skus&#x60; field. If set to &#x60;false&#x60;, SKUs present on that field will make this tax not to be applied.
   * @return skusAreInclusive
   */
  @javax.annotation.Nullable
  public Boolean getSkusAreInclusive() {
    return skusAreInclusive;
  }

  public void setSkusAreInclusive(Boolean skusAreInclusive) {
    this.skusAreInclusive = skusAreInclusive;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetTaxesInnerScope getTaxesInnerScope = (GetTaxesInnerScope) o;
    return Objects.equals(this.allCatalog, getTaxesInnerScope.allCatalog) &&
        Objects.equals(this.brands, getTaxesInnerScope.brands) &&
        Objects.equals(this.brandsAreInclusive, getTaxesInnerScope.brandsAreInclusive) &&
        Objects.equals(this.categories, getTaxesInnerScope.categories) &&
        Objects.equals(this.categoriesAreInclusive, getTaxesInnerScope.categoriesAreInclusive) &&
        Objects.equals(this.collections, getTaxesInnerScope.collections) &&
        Objects.equals(this.collectionsAreInclusive, getTaxesInnerScope.collectionsAreInclusive) &&
        Objects.equals(this.products, getTaxesInnerScope.products) &&
        Objects.equals(this.productsAreInclusive, getTaxesInnerScope.productsAreInclusive) &&
        Objects.equals(this.sellers, getTaxesInnerScope.sellers) &&
        Objects.equals(this.sellersAreInclusive, getTaxesInnerScope.sellersAreInclusive) &&
        Objects.equals(this.skus, getTaxesInnerScope.skus) &&
        Objects.equals(this.skusAreInclusive, getTaxesInnerScope.skusAreInclusive);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allCatalog, brands, brandsAreInclusive, categories, categoriesAreInclusive, collections, collectionsAreInclusive, products, productsAreInclusive, sellers, sellersAreInclusive, skus, skusAreInclusive);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetTaxesInnerScope {\n");
    sb.append("    allCatalog: ").append(toIndentedString(allCatalog)).append("\n");
    sb.append("    brands: ").append(toIndentedString(brands)).append("\n");
    sb.append("    brandsAreInclusive: ").append(toIndentedString(brandsAreInclusive)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    categoriesAreInclusive: ").append(toIndentedString(categoriesAreInclusive)).append("\n");
    sb.append("    collections: ").append(toIndentedString(collections)).append("\n");
    sb.append("    collectionsAreInclusive: ").append(toIndentedString(collectionsAreInclusive)).append("\n");
    sb.append("    products: ").append(toIndentedString(products)).append("\n");
    sb.append("    productsAreInclusive: ").append(toIndentedString(productsAreInclusive)).append("\n");
    sb.append("    sellers: ").append(toIndentedString(sellers)).append("\n");
    sb.append("    sellersAreInclusive: ").append(toIndentedString(sellersAreInclusive)).append("\n");
    sb.append("    skus: ").append(toIndentedString(skus)).append("\n");
    sb.append("    skusAreInclusive: ").append(toIndentedString(skusAreInclusive)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("allCatalog");
    openapiFields.add("brands");
    openapiFields.add("brandsAreInclusive");
    openapiFields.add("categories");
    openapiFields.add("categoriesAreInclusive");
    openapiFields.add("collections");
    openapiFields.add("collectionsAreInclusive");
    openapiFields.add("products");
    openapiFields.add("productsAreInclusive");
    openapiFields.add("sellers");
    openapiFields.add("sellersAreInclusive");
    openapiFields.add("skus");
    openapiFields.add("skusAreInclusive");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetTaxesInnerScope
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetTaxesInnerScope.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetTaxesInnerScope is not found in the empty JSON string", GetTaxesInnerScope.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetTaxesInnerScope.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetTaxesInnerScope` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetTaxesInnerScope.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetTaxesInnerScope' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetTaxesInnerScope> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetTaxesInnerScope.class));

       return (TypeAdapter<T>) new TypeAdapter<GetTaxesInnerScope>() {
           @Override
           public void write(JsonWriter out, GetTaxesInnerScope value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetTaxesInnerScope read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetTaxesInnerScope given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetTaxesInnerScope
   * @throws IOException if the JSON string is invalid with respect to GetTaxesInnerScope
   */
  public static GetTaxesInnerScope fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetTaxesInnerScope.class);
  }

  /**
   * Convert an instance of GetTaxesInnerScope to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

