/*
 * Promotions & Taxes API
 *   > Check the new [Promotions onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/promotions-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Promotions and is organized by focusing on the developer's journey.     The Promotions & Taxes API allows you to manage and retrieve all promotions, coupons and tax rules from your VTEX store.     ## Index     ### Coupons   `POST` [Create multiple coupons](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-multiple-coupons)   `POST` [Create coupon](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-coupon)   `GET` [Get coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/getbycouponcode)   `GET` [Get archived coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/getarchivedbycouponcode)   `POST` [Archive coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/archivebycouponcode)   `POST` [Update coupon](https://developers.vtex.com/vtex-rest-api/reference/update)   `GET` [Get all coupons](https://developers.vtex.com/vtex-rest-api/reference/getall)   `POST` [Coupon Massive Generation](https://developers.vtex.com/vtex-rest-api/reference/massivegeneration)   `GET` [Get coupon usage](https://developers.vtex.com/vtex-rest-api/reference/getusage)   `POST` [Unarchive coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/unarchivebycouponcode)     ### Promotions and Taxes   `GET` [Get All Promotions](https://developers.vtex.com/vtex-rest-api/reference/getallbenefits)   `GET` [Get All Taxes](https://developers.vtex.com/vtex-rest-api/reference/getalltaxes)   `GET` [Get Promotion or Tax By ID](https://developers.vtex.com/vtex-rest-api/reference/getcalculatorconfigurationbyid)   `POST` [Create or Update Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/createorupdatecalculatorconfiguration)   `POST` [Create Multiple SKU Promotion](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-import-calculatorconfiguration)   `PUT` [Update Multiple SKU Promotion](https://developers.vtex.com/vtex-rest-api/reference/put_api-rnb-pvt-import-calculatorconfiguration-promotionid)   `POST` [Archive Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/archivepromotion-1)   `POST` [Unarchive Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/unarchivepromotion-1)   `GET` [List archived Promotions](https://developers.vtex.com/vtex-rest-api/reference/getarchivedpromotions)   `GET` [List archived Taxes](https://developers.vtex.com/vtex-rest-api/reference/getarchivedtaxes)       ### Campaign Audiences   `GET` [Get campaign audience configuration](https://developers.vtex.com/vtex-rest-api/reference/getcampaignconfiguration)   `POST` [Create campaign audience](https://developers.vtex.com/vtex-rest-api/reference/setcampaignconfiguration)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * MassiveGenerationRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:56:03.993078-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class MassiveGenerationRequest {
  public static final String SERIALIZED_NAME_COUPON_CODE = "couponCode";
  @SerializedName(SERIALIZED_NAME_COUPON_CODE)
  private String couponCode;

  public static final String SERIALIZED_NAME_EXPIRATION_INTERVAL_PER_USE = "expirationIntervalPerUse";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_INTERVAL_PER_USE)
  private String expirationIntervalPerUse;

  public static final String SERIALIZED_NAME_MAX_ITEMS_PER_CLIENT = "maxItemsPerClient";
  @SerializedName(SERIALIZED_NAME_MAX_ITEMS_PER_CLIENT)
  private Integer maxItemsPerClient;

  public static final String SERIALIZED_NAME_UTM_CAMPAIGN = "utmCampaign";
  @SerializedName(SERIALIZED_NAME_UTM_CAMPAIGN)
  private String utmCampaign;

  public static final String SERIALIZED_NAME_UTM_SOURCE = "utmSource";
  @SerializedName(SERIALIZED_NAME_UTM_SOURCE)
  private String utmSource;

  public MassiveGenerationRequest() {
  }

  public MassiveGenerationRequest couponCode(String couponCode) {
    this.couponCode = couponCode;
    return this;
  }

  /**
   * Coupon code.
   * @return couponCode
   */
  @javax.annotation.Nonnull
  public String getCouponCode() {
    return couponCode;
  }

  public void setCouponCode(String couponCode) {
    this.couponCode = couponCode;
  }


  public MassiveGenerationRequest expirationIntervalPerUse(String expirationIntervalPerUse) {
    this.expirationIntervalPerUse = expirationIntervalPerUse;
    return this;
  }

  /**
   * Coupon expiration interval per use.
   * @return expirationIntervalPerUse
   */
  @javax.annotation.Nonnull
  public String getExpirationIntervalPerUse() {
    return expirationIntervalPerUse;
  }

  public void setExpirationIntervalPerUse(String expirationIntervalPerUse) {
    this.expirationIntervalPerUse = expirationIntervalPerUse;
  }


  public MassiveGenerationRequest maxItemsPerClient(Integer maxItemsPerClient) {
    this.maxItemsPerClient = maxItemsPerClient;
    return this;
  }

  /**
   * Defines if the coupon is archived (&#x60;true&#x60;) or not (&#x60;false&#x60;).
   * @return maxItemsPerClient
   */
  @javax.annotation.Nonnull
  public Integer getMaxItemsPerClient() {
    return maxItemsPerClient;
  }

  public void setMaxItemsPerClient(Integer maxItemsPerClient) {
    this.maxItemsPerClient = maxItemsPerClient;
  }


  public MassiveGenerationRequest utmCampaign(String utmCampaign) {
    this.utmCampaign = utmCampaign;
    return this;
  }

  /**
   * UTM campaign code.
   * @return utmCampaign
   */
  @javax.annotation.Nonnull
  public String getUtmCampaign() {
    return utmCampaign;
  }

  public void setUtmCampaign(String utmCampaign) {
    this.utmCampaign = utmCampaign;
  }


  public MassiveGenerationRequest utmSource(String utmSource) {
    this.utmSource = utmSource;
    return this;
  }

  /**
   * UTM source code.
   * @return utmSource
   */
  @javax.annotation.Nonnull
  public String getUtmSource() {
    return utmSource;
  }

  public void setUtmSource(String utmSource) {
    this.utmSource = utmSource;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MassiveGenerationRequest massiveGenerationRequest = (MassiveGenerationRequest) o;
    return Objects.equals(this.couponCode, massiveGenerationRequest.couponCode) &&
        Objects.equals(this.expirationIntervalPerUse, massiveGenerationRequest.expirationIntervalPerUse) &&
        Objects.equals(this.maxItemsPerClient, massiveGenerationRequest.maxItemsPerClient) &&
        Objects.equals(this.utmCampaign, massiveGenerationRequest.utmCampaign) &&
        Objects.equals(this.utmSource, massiveGenerationRequest.utmSource);
  }

  @Override
  public int hashCode() {
    return Objects.hash(couponCode, expirationIntervalPerUse, maxItemsPerClient, utmCampaign, utmSource);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MassiveGenerationRequest {\n");
    sb.append("    couponCode: ").append(toIndentedString(couponCode)).append("\n");
    sb.append("    expirationIntervalPerUse: ").append(toIndentedString(expirationIntervalPerUse)).append("\n");
    sb.append("    maxItemsPerClient: ").append(toIndentedString(maxItemsPerClient)).append("\n");
    sb.append("    utmCampaign: ").append(toIndentedString(utmCampaign)).append("\n");
    sb.append("    utmSource: ").append(toIndentedString(utmSource)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("couponCode");
    openapiFields.add("expirationIntervalPerUse");
    openapiFields.add("maxItemsPerClient");
    openapiFields.add("utmCampaign");
    openapiFields.add("utmSource");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("couponCode");
    openapiRequiredFields.add("expirationIntervalPerUse");
    openapiRequiredFields.add("maxItemsPerClient");
    openapiRequiredFields.add("utmCampaign");
    openapiRequiredFields.add("utmSource");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MassiveGenerationRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MassiveGenerationRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MassiveGenerationRequest is not found in the empty JSON string", MassiveGenerationRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MassiveGenerationRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MassiveGenerationRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : MassiveGenerationRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("couponCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `couponCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("couponCode").toString()));
      }
      if (!jsonObj.get("expirationIntervalPerUse").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expirationIntervalPerUse` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expirationIntervalPerUse").toString()));
      }
      if (!jsonObj.get("utmCampaign").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `utmCampaign` to be a primitive type in the JSON string but got `%s`", jsonObj.get("utmCampaign").toString()));
      }
      if (!jsonObj.get("utmSource").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `utmSource` to be a primitive type in the JSON string but got `%s`", jsonObj.get("utmSource").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MassiveGenerationRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MassiveGenerationRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MassiveGenerationRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MassiveGenerationRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<MassiveGenerationRequest>() {
           @Override
           public void write(JsonWriter out, MassiveGenerationRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MassiveGenerationRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MassiveGenerationRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MassiveGenerationRequest
   * @throws IOException if the JSON string is invalid with respect to MassiveGenerationRequest
   */
  public static MassiveGenerationRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MassiveGenerationRequest.class);
  }

  /**
   * Convert an instance of MassiveGenerationRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

