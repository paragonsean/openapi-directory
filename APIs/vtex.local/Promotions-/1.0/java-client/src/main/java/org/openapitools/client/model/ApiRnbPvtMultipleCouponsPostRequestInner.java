/*
 * Promotions & Taxes API
 *   > Check the new [Promotions onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/promotions-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Promotions and is organized by focusing on the developer's journey.     The Promotions & Taxes API allows you to manage and retrieve all promotions, coupons and tax rules from your VTEX store.     ## Index     ### Coupons   `POST` [Create multiple coupons](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-multiple-coupons)   `POST` [Create coupon](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-coupon)   `GET` [Get coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/getbycouponcode)   `GET` [Get archived coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/getarchivedbycouponcode)   `POST` [Archive coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/archivebycouponcode)   `POST` [Update coupon](https://developers.vtex.com/vtex-rest-api/reference/update)   `GET` [Get all coupons](https://developers.vtex.com/vtex-rest-api/reference/getall)   `POST` [Coupon Massive Generation](https://developers.vtex.com/vtex-rest-api/reference/massivegeneration)   `GET` [Get coupon usage](https://developers.vtex.com/vtex-rest-api/reference/getusage)   `POST` [Unarchive coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/unarchivebycouponcode)     ### Promotions and Taxes   `GET` [Get All Promotions](https://developers.vtex.com/vtex-rest-api/reference/getallbenefits)   `GET` [Get All Taxes](https://developers.vtex.com/vtex-rest-api/reference/getalltaxes)   `GET` [Get Promotion or Tax By ID](https://developers.vtex.com/vtex-rest-api/reference/getcalculatorconfigurationbyid)   `POST` [Create or Update Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/createorupdatecalculatorconfiguration)   `POST` [Create Multiple SKU Promotion](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-import-calculatorconfiguration)   `PUT` [Update Multiple SKU Promotion](https://developers.vtex.com/vtex-rest-api/reference/put_api-rnb-pvt-import-calculatorconfiguration-promotionid)   `POST` [Archive Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/archivepromotion-1)   `POST` [Unarchive Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/unarchivepromotion-1)   `GET` [List archived Promotions](https://developers.vtex.com/vtex-rest-api/reference/getarchivedpromotions)   `GET` [List archived Taxes](https://developers.vtex.com/vtex-rest-api/reference/getarchivedtaxes)       ### Campaign Audiences   `GET` [Get campaign audience configuration](https://developers.vtex.com/vtex-rest-api/reference/getcampaignconfiguration)   `POST` [Create campaign audience](https://developers.vtex.com/vtex-rest-api/reference/setcampaignconfiguration)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CouponConfiguration;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ApiRnbPvtMultipleCouponsPostRequestInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:56:03.993078-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ApiRnbPvtMultipleCouponsPostRequestInner {
  public static final String SERIALIZED_NAME_COUPON_CONFIGURATION = "couponConfiguration";
  @SerializedName(SERIALIZED_NAME_COUPON_CONFIGURATION)
  private CouponConfiguration couponConfiguration;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Integer quantity;

  public ApiRnbPvtMultipleCouponsPostRequestInner() {
  }

  public ApiRnbPvtMultipleCouponsPostRequestInner couponConfiguration(CouponConfiguration couponConfiguration) {
    this.couponConfiguration = couponConfiguration;
    return this;
  }

  /**
   * Get couponConfiguration
   * @return couponConfiguration
   */
  @javax.annotation.Nonnull
  public CouponConfiguration getCouponConfiguration() {
    return couponConfiguration;
  }

  public void setCouponConfiguration(CouponConfiguration couponConfiguration) {
    this.couponConfiguration = couponConfiguration;
  }


  public ApiRnbPvtMultipleCouponsPostRequestInner quantity(Integer quantity) {
    this.quantity = quantity;
    return this;
  }

  /**
   * Quantity of coupons created. The value must be a minimum of &#x60;1&#x60; and at maximum &#x60;1000&#x60;. If the amount is &#x60;1&#x60;, the coupon code will be the value of the &#x60;couponCode&#x60; parameter. If the value is greater than &#x60;1&#x60;, the coupon code will receive a random suffix.
   * @return quantity
   */
  @javax.annotation.Nonnull
  public Integer getQuantity() {
    return quantity;
  }

  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiRnbPvtMultipleCouponsPostRequestInner apiRnbPvtMultipleCouponsPostRequestInner = (ApiRnbPvtMultipleCouponsPostRequestInner) o;
    return Objects.equals(this.couponConfiguration, apiRnbPvtMultipleCouponsPostRequestInner.couponConfiguration) &&
        Objects.equals(this.quantity, apiRnbPvtMultipleCouponsPostRequestInner.quantity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(couponConfiguration, quantity);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiRnbPvtMultipleCouponsPostRequestInner {\n");
    sb.append("    couponConfiguration: ").append(toIndentedString(couponConfiguration)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("couponConfiguration");
    openapiFields.add("quantity");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("couponConfiguration");
    openapiRequiredFields.add("quantity");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ApiRnbPvtMultipleCouponsPostRequestInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApiRnbPvtMultipleCouponsPostRequestInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApiRnbPvtMultipleCouponsPostRequestInner is not found in the empty JSON string", ApiRnbPvtMultipleCouponsPostRequestInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ApiRnbPvtMultipleCouponsPostRequestInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApiRnbPvtMultipleCouponsPostRequestInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ApiRnbPvtMultipleCouponsPostRequestInner.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `couponConfiguration`
      CouponConfiguration.validateJsonElement(jsonObj.get("couponConfiguration"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApiRnbPvtMultipleCouponsPostRequestInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApiRnbPvtMultipleCouponsPostRequestInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApiRnbPvtMultipleCouponsPostRequestInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApiRnbPvtMultipleCouponsPostRequestInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ApiRnbPvtMultipleCouponsPostRequestInner>() {
           @Override
           public void write(JsonWriter out, ApiRnbPvtMultipleCouponsPostRequestInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApiRnbPvtMultipleCouponsPostRequestInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ApiRnbPvtMultipleCouponsPostRequestInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ApiRnbPvtMultipleCouponsPostRequestInner
   * @throws IOException if the JSON string is invalid with respect to ApiRnbPvtMultipleCouponsPostRequestInner
   */
  public static ApiRnbPvtMultipleCouponsPostRequestInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApiRnbPvtMultipleCouponsPostRequestInner.class);
  }

  /**
   * Convert an instance of ApiRnbPvtMultipleCouponsPostRequestInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

