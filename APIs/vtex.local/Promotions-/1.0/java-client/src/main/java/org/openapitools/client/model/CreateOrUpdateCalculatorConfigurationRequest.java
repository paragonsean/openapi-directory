/*
 * Promotions & Taxes API
 *   > Check the new [Promotions onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/promotions-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Promotions and is organized by focusing on the developer's journey.     The Promotions & Taxes API allows you to manage and retrieve all promotions, coupons and tax rules from your VTEX store.     ## Index     ### Coupons   `POST` [Create multiple coupons](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-multiple-coupons)   `POST` [Create coupon](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-coupon)   `GET` [Get coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/getbycouponcode)   `GET` [Get archived coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/getarchivedbycouponcode)   `POST` [Archive coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/archivebycouponcode)   `POST` [Update coupon](https://developers.vtex.com/vtex-rest-api/reference/update)   `GET` [Get all coupons](https://developers.vtex.com/vtex-rest-api/reference/getall)   `POST` [Coupon Massive Generation](https://developers.vtex.com/vtex-rest-api/reference/massivegeneration)   `GET` [Get coupon usage](https://developers.vtex.com/vtex-rest-api/reference/getusage)   `POST` [Unarchive coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/unarchivebycouponcode)     ### Promotions and Taxes   `GET` [Get All Promotions](https://developers.vtex.com/vtex-rest-api/reference/getallbenefits)   `GET` [Get All Taxes](https://developers.vtex.com/vtex-rest-api/reference/getalltaxes)   `GET` [Get Promotion or Tax By ID](https://developers.vtex.com/vtex-rest-api/reference/getcalculatorconfigurationbyid)   `POST` [Create or Update Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/createorupdatecalculatorconfiguration)   `POST` [Create Multiple SKU Promotion](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-import-calculatorconfiguration)   `PUT` [Update Multiple SKU Promotion](https://developers.vtex.com/vtex-rest-api/reference/put_api-rnb-pvt-import-calculatorconfiguration-promotionid)   `POST` [Archive Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/archivepromotion-1)   `POST` [Unarchive Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/unarchivepromotion-1)   `GET` [List archived Promotions](https://developers.vtex.com/vtex-rest-api/reference/getarchivedpromotions)   `GET` [List archived Taxes](https://developers.vtex.com/vtex-rest-api/reference/getarchivedtaxes)       ### Campaign Audiences   `GET` [Get campaign audience configuration](https://developers.vtex.com/vtex-rest-api/reference/getcampaignconfiguration)   `POST` [Create campaign audience](https://developers.vtex.com/vtex-rest-api/reference/setcampaignconfiguration)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateOrUpdateCalculatorConfigurationRequestAffiliatesInner;
import org.openapitools.client.model.CreateOrUpdateCalculatorConfigurationRequestBrandsInner;
import org.openapitools.client.model.CreateOrUpdateCalculatorConfigurationRequestCategoriesInner;
import org.openapitools.client.model.CreateOrUpdateCalculatorConfigurationRequestCollectionsInner;
import org.openapitools.client.model.CreateOrUpdateCalculatorConfigurationRequestPaymentsMethodsInner;
import org.openapitools.client.model.CreateOrUpdateCalculatorConfigurationRequestProductsInner;
import org.openapitools.client.model.CreateOrUpdateCalculatorConfigurationRequestSkusGift;
import org.openapitools.client.model.CreateOrUpdateCalculatorConfigurationRequestSkusInner;
import org.openapitools.client.model.CreateOrUpdateCalculatorConfigurationRequestZipCodeRangesInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateOrUpdateCalculatorConfigurationRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:56:03.993078-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateOrUpdateCalculatorConfigurationRequest {
  public static final String SERIALIZED_NAME_ABSOLUTE_SHIPPING_DISCOUNT_VALUE = "absoluteShippingDiscountValue";
  @SerializedName(SERIALIZED_NAME_ABSOLUTE_SHIPPING_DISCOUNT_VALUE)
  private BigDecimal absoluteShippingDiscountValue;

  public static final String SERIALIZED_NAME_ACCUMULATE_WITH_MANUAL_PRICE = "accumulateWithManualPrice";
  @SerializedName(SERIALIZED_NAME_ACCUMULATE_WITH_MANUAL_PRICE)
  private Boolean accumulateWithManualPrice;

  public static final String SERIALIZED_NAME_ACTIVATE_GIFTS_MULTIPLIER = "activateGiftsMultiplier";
  @SerializedName(SERIALIZED_NAME_ACTIVATE_GIFTS_MULTIPLIER)
  private Boolean activateGiftsMultiplier;

  public static final String SERIALIZED_NAME_ACTIVE_DAYS_OF_WEEK = "activeDaysOfWeek";
  @SerializedName(SERIALIZED_NAME_ACTIVE_DAYS_OF_WEEK)
  private List<String> activeDaysOfWeek = new ArrayList<>();

  public static final String SERIALIZED_NAME_AFFILIATES = "affiliates";
  @SerializedName(SERIALIZED_NAME_AFFILIATES)
  private List<CreateOrUpdateCalculatorConfigurationRequestAffiliatesInner> affiliates = new ArrayList<>();

  public static final String SERIALIZED_NAME_APPLY_TO_ALL_SHIPPINGS = "applyToAllShippings";
  @SerializedName(SERIALIZED_NAME_APPLY_TO_ALL_SHIPPINGS)
  private Boolean applyToAllShippings;

  public static final String SERIALIZED_NAME_ARE_SALES_CHANNEL_IDS_EXCLUSIVE = "areSalesChannelIdsExclusive";
  @SerializedName(SERIALIZED_NAME_ARE_SALES_CHANNEL_IDS_EXCLUSIVE)
  private Boolean areSalesChannelIdsExclusive;

  public static final String SERIALIZED_NAME_BEGIN_DATE_UTC = "beginDateUtc";
  @SerializedName(SERIALIZED_NAME_BEGIN_DATE_UTC)
  private String beginDateUtc;

  public static final String SERIALIZED_NAME_BRANDS = "brands";
  @SerializedName(SERIALIZED_NAME_BRANDS)
  private List<CreateOrUpdateCalculatorConfigurationRequestBrandsInner> brands = new ArrayList<>();

  public static final String SERIALIZED_NAME_BRANDS_ARE_INCLUSIVE = "brandsAreInclusive";
  @SerializedName(SERIALIZED_NAME_BRANDS_ARE_INCLUSIVE)
  private Boolean brandsAreInclusive;

  public static final String SERIALIZED_NAME_CAMPAIGNS = "campaigns";
  @SerializedName(SERIALIZED_NAME_CAMPAIGNS)
  private List<Object> campaigns = new ArrayList<>();

  public static final String SERIALIZED_NAME_CARD_ISSUERS = "cardIssuers";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_CARD_ISSUERS)
  private List<Object> cardIssuers = new ArrayList<>();

  public static final String SERIALIZED_NAME_CATEGORIES = "categories";
  @SerializedName(SERIALIZED_NAME_CATEGORIES)
  private List<CreateOrUpdateCalculatorConfigurationRequestCategoriesInner> categories = new ArrayList<>();

  public static final String SERIALIZED_NAME_CATEGORIES_ARE_INCLUSIVE = "categoriesAreInclusive";
  @SerializedName(SERIALIZED_NAME_CATEGORIES_ARE_INCLUSIVE)
  private Boolean categoriesAreInclusive;

  public static final String SERIALIZED_NAME_CLUSTER_EXPRESSIONS = "clusterExpressions";
  @SerializedName(SERIALIZED_NAME_CLUSTER_EXPRESSIONS)
  private List<String> clusterExpressions = new ArrayList<>();

  public static final String SERIALIZED_NAME_COLLECTIONS = "collections";
  @SerializedName(SERIALIZED_NAME_COLLECTIONS)
  private List<CreateOrUpdateCalculatorConfigurationRequestCollectionsInner> collections = new ArrayList<>();

  public static final String SERIALIZED_NAME_COLLECTIONS1_BUY_TOGETHER = "collections1BuyTogether";
  @SerializedName(SERIALIZED_NAME_COLLECTIONS1_BUY_TOGETHER)
  private List<String> collections1BuyTogether = new ArrayList<>();

  public static final String SERIALIZED_NAME_COLLECTIONS2_BUY_TOGETHER = "collections2BuyTogether";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_COLLECTIONS2_BUY_TOGETHER)
  private List<Object> collections2BuyTogether = new ArrayList<>();

  public static final String SERIALIZED_NAME_COLLECTIONS_IS_INCLUSIVE = "collectionsIsInclusive";
  @SerializedName(SERIALIZED_NAME_COLLECTIONS_IS_INCLUSIVE)
  private Boolean collectionsIsInclusive;

  public static final String SERIALIZED_NAME_COMPARE_LIST_PRICE_AND_PRICE = "compareListPriceAndPrice";
  @SerializedName(SERIALIZED_NAME_COMPARE_LIST_PRICE_AND_PRICE)
  private Boolean compareListPriceAndPrice;

  public static final String SERIALIZED_NAME_CONDITIONS_IDS = "conditionsIds";
  @SerializedName(SERIALIZED_NAME_CONDITIONS_IDS)
  private List<String> conditionsIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_COUPON = "coupon";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_COUPON)
  private List<Object> coupon = new ArrayList<>();

  public static final String SERIALIZED_NAME_CUMULATIVE = "cumulative";
  @SerializedName(SERIALIZED_NAME_CUMULATIVE)
  private Boolean cumulative;

  public static final String SERIALIZED_NAME_DAYS_AGO_OF_PURCHASES = "daysAgoOfPurchases";
  @SerializedName(SERIALIZED_NAME_DAYS_AGO_OF_PURCHASES)
  private Integer daysAgoOfPurchases;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISABLE_DEAL = "disableDeal";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_DISABLE_DEAL)
  private Boolean disableDeal;

  public static final String SERIALIZED_NAME_DISCOUNT_TYPE = "discountType";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_TYPE)
  private String discountType;

  public static final String SERIALIZED_NAME_ENABLE_BUY_TOGETHER_PER_SKU = "enableBuyTogetherPerSku";
  @SerializedName(SERIALIZED_NAME_ENABLE_BUY_TOGETHER_PER_SKU)
  private Boolean enableBuyTogetherPerSku;

  public static final String SERIALIZED_NAME_END_DATE_UTC = "endDateUtc";
  @SerializedName(SERIALIZED_NAME_END_DATE_UTC)
  private String endDateUtc;

  public static final String SERIALIZED_NAME_FIRST_BUY_IS_PROFILE_OPTIMISTIC = "firstBuyIsProfileOptimistic";
  @SerializedName(SERIALIZED_NAME_FIRST_BUY_IS_PROFILE_OPTIMISTIC)
  private Boolean firstBuyIsProfileOptimistic;

  public static final String SERIALIZED_NAME_GIFT_LIST_TYPES = "giftListTypes";
  @SerializedName(SERIALIZED_NAME_GIFT_LIST_TYPES)
  private List<String> giftListTypes = new ArrayList<>();

  public static final String SERIALIZED_NAME_ID_CALCULATOR_CONFIGURATION = "idCalculatorConfiguration";
  @SerializedName(SERIALIZED_NAME_ID_CALCULATOR_CONFIGURATION)
  private String idCalculatorConfiguration;

  public static final String SERIALIZED_NAME_ID_SELLER = "idSeller";
  @SerializedName(SERIALIZED_NAME_ID_SELLER)
  private String idSeller;

  public static final String SERIALIZED_NAME_ID_SELLER_IS_INCLUSIVE = "idSellerIsInclusive";
  @SerializedName(SERIALIZED_NAME_ID_SELLER_IS_INCLUSIVE)
  private Boolean idSellerIsInclusive;

  public static final String SERIALIZED_NAME_IDS_SALES_CHANNEL = "idsSalesChannel";
  @SerializedName(SERIALIZED_NAME_IDS_SALES_CHANNEL)
  private List<String> idsSalesChannel = new ArrayList<>();

  public static final String SERIALIZED_NAME_INSTALLMENT = "installment";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_INSTALLMENT)
  private Integer installment;

  public static final String SERIALIZED_NAME_IS_ACTIVE = "isActive";
  @SerializedName(SERIALIZED_NAME_IS_ACTIVE)
  private Boolean isActive;

  public static final String SERIALIZED_NAME_IS_ARCHIVED = "isArchived";
  @SerializedName(SERIALIZED_NAME_IS_ARCHIVED)
  private Boolean isArchived;

  public static final String SERIALIZED_NAME_IS_DIFFERENT_LIST_PRICE_AND_PRICE = "isDifferentListPriceAndPrice";
  @SerializedName(SERIALIZED_NAME_IS_DIFFERENT_LIST_PRICE_AND_PRICE)
  private Boolean isDifferentListPriceAndPrice;

  public static final String SERIALIZED_NAME_IS_FEATURED = "isFeatured";
  @SerializedName(SERIALIZED_NAME_IS_FEATURED)
  private Boolean isFeatured;

  public static final String SERIALIZED_NAME_IS_FIRST_BUY = "isFirstBuy";
  @SerializedName(SERIALIZED_NAME_IS_FIRST_BUY)
  private Boolean isFirstBuy;

  public static final String SERIALIZED_NAME_IS_MIN_MAX_INSTALLMENTS = "isMinMaxInstallments";
  @SerializedName(SERIALIZED_NAME_IS_MIN_MAX_INSTALLMENTS)
  private Boolean isMinMaxInstallments;

  public static final String SERIALIZED_NAME_IS_SLA_SELECTED = "isSlaSelected";
  @SerializedName(SERIALIZED_NAME_IS_SLA_SELECTED)
  private Boolean isSlaSelected;

  public static final String SERIALIZED_NAME_ITEM_MAX_PRICE = "itemMaxPrice";
  @SerializedName(SERIALIZED_NAME_ITEM_MAX_PRICE)
  private BigDecimal itemMaxPrice;

  public static final String SERIALIZED_NAME_ITEM_MIN_PRICE = "itemMinPrice";
  @SerializedName(SERIALIZED_NAME_ITEM_MIN_PRICE)
  private BigDecimal itemMinPrice;

  public static final String SERIALIZED_NAME_LAST_MODIFIED = "lastModified";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED)
  private String lastModified;

  public static final String SERIALIZED_NAME_LIST_SKU1_BUY_TOGETHER = "listSku1BuyTogether";
  @SerializedName(SERIALIZED_NAME_LIST_SKU1_BUY_TOGETHER)
  private List<Object> listSku1BuyTogether = new ArrayList<>();

  public static final String SERIALIZED_NAME_LIST_SKU2_BUY_TOGETHER = "listSku2BuyTogether";
  @SerializedName(SERIALIZED_NAME_LIST_SKU2_BUY_TOGETHER)
  private List<Object> listSku2BuyTogether = new ArrayList<>();

  public static final String SERIALIZED_NAME_MARKETING_TAGS = "marketingTags";
  @SerializedName(SERIALIZED_NAME_MARKETING_TAGS)
  private List<String> marketingTags = new ArrayList<>();

  public static final String SERIALIZED_NAME_MARKETING_TAGS_ARE_NOT_INCLUSIVE = "marketingTagsAreNotInclusive";
  @SerializedName(SERIALIZED_NAME_MARKETING_TAGS_ARE_NOT_INCLUSIVE)
  private Boolean marketingTagsAreNotInclusive;

  public static final String SERIALIZED_NAME_MAX_INSTALLMENT = "maxInstallment";
  @SerializedName(SERIALIZED_NAME_MAX_INSTALLMENT)
  private Integer maxInstallment;

  public static final String SERIALIZED_NAME_MAX_NUMBER_OF_AFFECTED_ITEMS = "maxNumberOfAffectedItems";
  @SerializedName(SERIALIZED_NAME_MAX_NUMBER_OF_AFFECTED_ITEMS)
  private Integer maxNumberOfAffectedItems;

  public static final String SERIALIZED_NAME_MAX_NUMBER_OF_AFFECTED_ITEMS_GROUP_KEY = "maxNumberOfAffectedItemsGroupKey";
  @SerializedName(SERIALIZED_NAME_MAX_NUMBER_OF_AFFECTED_ITEMS_GROUP_KEY)
  private String maxNumberOfAffectedItemsGroupKey;

  public static final String SERIALIZED_NAME_MAX_PRICES_PER_ITEMS = "maxPricesPerItems";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_MAX_PRICES_PER_ITEMS)
  private List<Object> maxPricesPerItems = new ArrayList<>();

  public static final String SERIALIZED_NAME_MAX_USAGE = "maxUsage";
  @SerializedName(SERIALIZED_NAME_MAX_USAGE)
  private Integer maxUsage;

  public static final String SERIALIZED_NAME_MAX_USAGE_PER_CLIENT = "maxUsagePerClient";
  @SerializedName(SERIALIZED_NAME_MAX_USAGE_PER_CLIENT)
  private Integer maxUsagePerClient;

  public static final String SERIALIZED_NAME_MAXIMUM_UNIT_PRICE_DISCOUNT = "maximumUnitPriceDiscount";
  @SerializedName(SERIALIZED_NAME_MAXIMUM_UNIT_PRICE_DISCOUNT)
  private BigDecimal maximumUnitPriceDiscount;

  public static final String SERIALIZED_NAME_MERCHANTS = "merchants";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_MERCHANTS)
  private List<Object> merchants = new ArrayList<>();

  public static final String SERIALIZED_NAME_MIN_INSTALLMENT = "minInstallment";
  @SerializedName(SERIALIZED_NAME_MIN_INSTALLMENT)
  private Integer minInstallment;

  public static final String SERIALIZED_NAME_MINIMUM_QUANTITY_BUY_TOGETHER = "minimumQuantityBuyTogether";
  @SerializedName(SERIALIZED_NAME_MINIMUM_QUANTITY_BUY_TOGETHER)
  private Integer minimumQuantityBuyTogether;

  public static final String SERIALIZED_NAME_MULTIPLE_USE_PER_CLIENT = "multipleUsePerClient";
  @SerializedName(SERIALIZED_NAME_MULTIPLE_USE_PER_CLIENT)
  private Boolean multipleUsePerClient;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NEW_OFFSET = "newOffset";
  @SerializedName(SERIALIZED_NAME_NEW_OFFSET)
  private BigDecimal newOffset;

  public static final String SERIALIZED_NAME_NOMINAL_DISCOUNT_VALUE = "nominalDiscountValue";
  @SerializedName(SERIALIZED_NAME_NOMINAL_DISCOUNT_VALUE)
  private BigDecimal nominalDiscountValue;

  public static final String SERIALIZED_NAME_NOMINAL_REWARD_VALUE = "nominalRewardValue";
  @SerializedName(SERIALIZED_NAME_NOMINAL_REWARD_VALUE)
  private BigDecimal nominalRewardValue;

  public static final String SERIALIZED_NAME_NOMINAL_SHIPPING_DISCOUNT_VALUE = "nominalShippingDiscountValue";
  @SerializedName(SERIALIZED_NAME_NOMINAL_SHIPPING_DISCOUNT_VALUE)
  private BigDecimal nominalShippingDiscountValue;

  public static final String SERIALIZED_NAME_NOMINAL_TAX = "nominalTax";
  @SerializedName(SERIALIZED_NAME_NOMINAL_TAX)
  private BigDecimal nominalTax;

  public static final String SERIALIZED_NAME_OFFSET = "offset";
  @SerializedName(SERIALIZED_NAME_OFFSET)
  private Integer offset;

  public static final String SERIALIZED_NAME_ORDER_STATUS_REWARD_VALUE = "orderStatusRewardValue";
  @SerializedName(SERIALIZED_NAME_ORDER_STATUS_REWARD_VALUE)
  private String orderStatusRewardValue;

  public static final String SERIALIZED_NAME_ORIGIN = "origin";
  @SerializedName(SERIALIZED_NAME_ORIGIN)
  private String origin;

  public static final String SERIALIZED_NAME_PAYMENTS_METHODS = "paymentsMethods";
  @SerializedName(SERIALIZED_NAME_PAYMENTS_METHODS)
  private List<CreateOrUpdateCalculatorConfigurationRequestPaymentsMethodsInner> paymentsMethods = new ArrayList<>();

  public static final String SERIALIZED_NAME_PAYMENTS_RULES = "paymentsRules";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_PAYMENTS_RULES)
  private List<Object> paymentsRules = new ArrayList<>();

  public static final String SERIALIZED_NAME_PERCENTUAL_DISCOUNT_VALUE = "percentualDiscountValue";
  @SerializedName(SERIALIZED_NAME_PERCENTUAL_DISCOUNT_VALUE)
  private BigDecimal percentualDiscountValue;

  public static final String SERIALIZED_NAME_PERCENTUAL_DISCOUNT_VALUE_LIST = "percentualDiscountValueList";
  @SerializedName(SERIALIZED_NAME_PERCENTUAL_DISCOUNT_VALUE_LIST)
  private List<BigDecimal> percentualDiscountValueList = new ArrayList<>();

  public static final String SERIALIZED_NAME_PERCENTUAL_DISCOUNT_VALUE_LIST1 = "percentualDiscountValueList1";
  @SerializedName(SERIALIZED_NAME_PERCENTUAL_DISCOUNT_VALUE_LIST1)
  private BigDecimal percentualDiscountValueList1;

  public static final String SERIALIZED_NAME_PERCENTUAL_DISCOUNT_VALUE_LIST2 = "percentualDiscountValueList2";
  @SerializedName(SERIALIZED_NAME_PERCENTUAL_DISCOUNT_VALUE_LIST2)
  private BigDecimal percentualDiscountValueList2;

  public static final String SERIALIZED_NAME_PERCENTUAL_REWARD_VALUE = "percentualRewardValue";
  @SerializedName(SERIALIZED_NAME_PERCENTUAL_REWARD_VALUE)
  private BigDecimal percentualRewardValue;

  public static final String SERIALIZED_NAME_PERCENTUAL_SHIPPING_DISCOUNT_VALUE = "percentualShippingDiscountValue";
  @SerializedName(SERIALIZED_NAME_PERCENTUAL_SHIPPING_DISCOUNT_VALUE)
  private BigDecimal percentualShippingDiscountValue;

  public static final String SERIALIZED_NAME_PERCENTUAL_TAX = "percentualTax";
  @SerializedName(SERIALIZED_NAME_PERCENTUAL_TAX)
  private BigDecimal percentualTax;

  public static final String SERIALIZED_NAME_PRODUCTS = "products";
  @SerializedName(SERIALIZED_NAME_PRODUCTS)
  private List<CreateOrUpdateCalculatorConfigurationRequestProductsInner> products = new ArrayList<>();

  public static final String SERIALIZED_NAME_PRODUCTS_ARE_INCLUSIVE = "productsAreInclusive";
  @SerializedName(SERIALIZED_NAME_PRODUCTS_ARE_INCLUSIVE)
  private Boolean productsAreInclusive;

  public static final String SERIALIZED_NAME_PRODUCTS_SPECIFICATIONS = "productsSpecifications";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_PRODUCTS_SPECIFICATIONS)
  private List<Object> productsSpecifications = new ArrayList<>();

  public static final String SERIALIZED_NAME_QUANTITY_TO_AFFECT_BUY_TOGETHER = "quantityToAffectBuyTogether";
  @SerializedName(SERIALIZED_NAME_QUANTITY_TO_AFFECT_BUY_TOGETHER)
  private Integer quantityToAffectBuyTogether;

  public static final String SERIALIZED_NAME_REBATE_PERCENTUAL_DISCOUNT_VALUE = "rebatePercentualDiscountValue";
  @SerializedName(SERIALIZED_NAME_REBATE_PERCENTUAL_DISCOUNT_VALUE)
  private BigDecimal rebatePercentualDiscountValue;

  public static final String SERIALIZED_NAME_RESTRICTIONS_BINS = "restrictionsBins";
  @SerializedName(SERIALIZED_NAME_RESTRICTIONS_BINS)
  private List<String> restrictionsBins = new ArrayList<>();

  public static final String SERIALIZED_NAME_SHIPPING_PERCENTUAL_TAX = "shippingPercentualTax";
  @SerializedName(SERIALIZED_NAME_SHIPPING_PERCENTUAL_TAX)
  private BigDecimal shippingPercentualTax;

  public static final String SERIALIZED_NAME_SHOULD_DISTRIBUTE_DISCOUNT_AMONG_MATCHED_ITEMS = "shouldDistributeDiscountAmongMatchedItems";
  @SerializedName(SERIALIZED_NAME_SHOULD_DISTRIBUTE_DISCOUNT_AMONG_MATCHED_ITEMS)
  private Boolean shouldDistributeDiscountAmongMatchedItems;

  public static final String SERIALIZED_NAME_SKUS = "skus";
  @SerializedName(SERIALIZED_NAME_SKUS)
  private List<CreateOrUpdateCalculatorConfigurationRequestSkusInner> skus = new ArrayList<>();

  public static final String SERIALIZED_NAME_SKUS_ARE_INCLUSIVE = "skusAreInclusive";
  @SerializedName(SERIALIZED_NAME_SKUS_ARE_INCLUSIVE)
  private Boolean skusAreInclusive;

  public static final String SERIALIZED_NAME_SKUS_GIFT = "skusGift";
  @SerializedName(SERIALIZED_NAME_SKUS_GIFT)
  private CreateOrUpdateCalculatorConfigurationRequestSkusGift skusGift;

  public static final String SERIALIZED_NAME_SLAS_IDS = "slasIds";
  @SerializedName(SERIALIZED_NAME_SLAS_IDS)
  private List<String> slasIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_STORES = "stores";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_STORES)
  private List<Object> stores = new ArrayList<>();

  public static final String SERIALIZED_NAME_STORES_ARE_INCLUSIVE = "storesAreInclusive";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_STORES_ARE_INCLUSIVE)
  private Boolean storesAreInclusive;

  public static final String SERIALIZED_NAME_TOTAL_VALUE_CELING = "totalValueCeling";
  @SerializedName(SERIALIZED_NAME_TOTAL_VALUE_CELING)
  private BigDecimal totalValueCeling;

  public static final String SERIALIZED_NAME_TOTAL_VALUE_FLOOR = "totalValueFloor";
  @SerializedName(SERIALIZED_NAME_TOTAL_VALUE_FLOOR)
  private BigDecimal totalValueFloor;

  public static final String SERIALIZED_NAME_TOTAL_VALUE_INCLUDE_ALL_ITEMS = "totalValueIncludeAllItems";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_TOTAL_VALUE_INCLUDE_ALL_ITEMS)
  private Boolean totalValueIncludeAllItems;

  public static final String SERIALIZED_NAME_TOTAL_VALUE_MODE = "totalValueMode";
  @SerializedName(SERIALIZED_NAME_TOTAL_VALUE_MODE)
  private String totalValueMode;

  public static final String SERIALIZED_NAME_TOTAL_VALUE_PURCHASE = "totalValuePurchase";
  @SerializedName(SERIALIZED_NAME_TOTAL_VALUE_PURCHASE)
  private BigDecimal totalValuePurchase;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_USE_NEW_PROGRESSIVE_ALGORITHM = "useNewProgressiveAlgorithm";
  @SerializedName(SERIALIZED_NAME_USE_NEW_PROGRESSIVE_ALGORITHM)
  private Boolean useNewProgressiveAlgorithm;

  public static final String SERIALIZED_NAME_UTM_CAMPAIGN = "utmCampaign";
  @SerializedName(SERIALIZED_NAME_UTM_CAMPAIGN)
  private String utmCampaign;

  public static final String SERIALIZED_NAME_UTM_SOURCE = "utmSource";
  @SerializedName(SERIALIZED_NAME_UTM_SOURCE)
  private String utmSource;

  public static final String SERIALIZED_NAME_ZIP_CODE_RANGES = "zipCodeRanges";
  @SerializedName(SERIALIZED_NAME_ZIP_CODE_RANGES)
  private List<CreateOrUpdateCalculatorConfigurationRequestZipCodeRangesInner> zipCodeRanges = new ArrayList<>();

  public CreateOrUpdateCalculatorConfigurationRequest() {
  }

  public CreateOrUpdateCalculatorConfigurationRequest absoluteShippingDiscountValue(BigDecimal absoluteShippingDiscountValue) {
    this.absoluteShippingDiscountValue = absoluteShippingDiscountValue;
    return this;
  }

  /**
   * Maximum shipping value.
   * @return absoluteShippingDiscountValue
   */
  @javax.annotation.Nullable
  public BigDecimal getAbsoluteShippingDiscountValue() {
    return absoluteShippingDiscountValue;
  }

  public void setAbsoluteShippingDiscountValue(BigDecimal absoluteShippingDiscountValue) {
    this.absoluteShippingDiscountValue = absoluteShippingDiscountValue;
  }


  public CreateOrUpdateCalculatorConfigurationRequest accumulateWithManualPrice(Boolean accumulateWithManualPrice) {
    this.accumulateWithManualPrice = accumulateWithManualPrice;
    return this;
  }

  /**
   * Allows the promotion to apply to products whose prices have been manually added by a call-center operator.
   * @return accumulateWithManualPrice
   */
  @javax.annotation.Nullable
  public Boolean getAccumulateWithManualPrice() {
    return accumulateWithManualPrice;
  }

  public void setAccumulateWithManualPrice(Boolean accumulateWithManualPrice) {
    this.accumulateWithManualPrice = accumulateWithManualPrice;
  }


  public CreateOrUpdateCalculatorConfigurationRequest activateGiftsMultiplier(Boolean activateGiftsMultiplier) {
    this.activateGiftsMultiplier = activateGiftsMultiplier;
    return this;
  }

  /**
   * If set as &#x60;true&#x60;, it activates gifts Multiplier.
   * @return activateGiftsMultiplier
   */
  @javax.annotation.Nullable
  public Boolean getActivateGiftsMultiplier() {
    return activateGiftsMultiplier;
  }

  public void setActivateGiftsMultiplier(Boolean activateGiftsMultiplier) {
    this.activateGiftsMultiplier = activateGiftsMultiplier;
  }


  public CreateOrUpdateCalculatorConfigurationRequest activeDaysOfWeek(List<String> activeDaysOfWeek) {
    this.activeDaysOfWeek = activeDaysOfWeek;
    return this;
  }

  public CreateOrUpdateCalculatorConfigurationRequest addActiveDaysOfWeekItem(String activeDaysOfWeekItem) {
    if (this.activeDaysOfWeek == null) {
      this.activeDaysOfWeek = new ArrayList<>();
    }
    this.activeDaysOfWeek.add(activeDaysOfWeekItem);
    return this;
  }

  /**
   * Defines which days of the week the Promotion or Tax will applied.
   * @return activeDaysOfWeek
   */
  @javax.annotation.Nullable
  public List<String> getActiveDaysOfWeek() {
    return activeDaysOfWeek;
  }

  public void setActiveDaysOfWeek(List<String> activeDaysOfWeek) {
    this.activeDaysOfWeek = activeDaysOfWeek;
  }


  public CreateOrUpdateCalculatorConfigurationRequest affiliates(List<CreateOrUpdateCalculatorConfigurationRequestAffiliatesInner> affiliates) {
    this.affiliates = affiliates;
    return this;
  }

  public CreateOrUpdateCalculatorConfigurationRequest addAffiliatesItem(CreateOrUpdateCalculatorConfigurationRequestAffiliatesInner affiliatesItem) {
    if (this.affiliates == null) {
      this.affiliates = new ArrayList<>();
    }
    this.affiliates.add(affiliatesItem);
    return this;
  }

  /**
   * Marketplace order identifier. The discount will apply to selected affiliates.
   * @return affiliates
   */
  @javax.annotation.Nullable
  public List<CreateOrUpdateCalculatorConfigurationRequestAffiliatesInner> getAffiliates() {
    return affiliates;
  }

  public void setAffiliates(List<CreateOrUpdateCalculatorConfigurationRequestAffiliatesInner> affiliates) {
    this.affiliates = affiliates;
  }


  public CreateOrUpdateCalculatorConfigurationRequest applyToAllShippings(Boolean applyToAllShippings) {
    this.applyToAllShippings = applyToAllShippings;
    return this;
  }

  /**
   * Promotion or Tax will be applied to all kind of shipping.
   * @return applyToAllShippings
   */
  @javax.annotation.Nullable
  public Boolean getApplyToAllShippings() {
    return applyToAllShippings;
  }

  public void setApplyToAllShippings(Boolean applyToAllShippings) {
    this.applyToAllShippings = applyToAllShippings;
  }


  public CreateOrUpdateCalculatorConfigurationRequest areSalesChannelIdsExclusive(Boolean areSalesChannelIdsExclusive) {
    this.areSalesChannelIdsExclusive = areSalesChannelIdsExclusive;
    return this;
  }

  /**
   * If set to &#x60;false&#x60;, this Promotion or Tax will be applied to any trade policies present on the &#x60;idsSalesChannel&#x60; field. If set to &#x60;true&#x60;, trade policies present on that field will make this Promotion or Tax not to be applied.
   * @return areSalesChannelIdsExclusive
   */
  @javax.annotation.Nullable
  public Boolean getAreSalesChannelIdsExclusive() {
    return areSalesChannelIdsExclusive;
  }

  public void setAreSalesChannelIdsExclusive(Boolean areSalesChannelIdsExclusive) {
    this.areSalesChannelIdsExclusive = areSalesChannelIdsExclusive;
  }


  public CreateOrUpdateCalculatorConfigurationRequest beginDateUtc(String beginDateUtc) {
    this.beginDateUtc = beginDateUtc;
    return this;
  }

  /**
   * Promotion or Tax Begin Date (UTC).
   * @return beginDateUtc
   */
  @javax.annotation.Nullable
  public String getBeginDateUtc() {
    return beginDateUtc;
  }

  public void setBeginDateUtc(String beginDateUtc) {
    this.beginDateUtc = beginDateUtc;
  }


  public CreateOrUpdateCalculatorConfigurationRequest brands(List<CreateOrUpdateCalculatorConfigurationRequestBrandsInner> brands) {
    this.brands = brands;
    return this;
  }

  public CreateOrUpdateCalculatorConfigurationRequest addBrandsItem(CreateOrUpdateCalculatorConfigurationRequestBrandsInner brandsItem) {
    if (this.brands == null) {
      this.brands = new ArrayList<>();
    }
    this.brands.add(brandsItem);
    return this;
  }

  /**
   * Object composed by the brands that will activate or deactivate the Promotion or Tax.
   * @return brands
   */
  @javax.annotation.Nullable
  public List<CreateOrUpdateCalculatorConfigurationRequestBrandsInner> getBrands() {
    return brands;
  }

  public void setBrands(List<CreateOrUpdateCalculatorConfigurationRequestBrandsInner> brands) {
    this.brands = brands;
  }


  public CreateOrUpdateCalculatorConfigurationRequest brandsAreInclusive(Boolean brandsAreInclusive) {
    this.brandsAreInclusive = brandsAreInclusive;
    return this;
  }

  /**
   * If set to &#x60;true&#x60;, this Promotion or Tax will be applied to any brand present on the &#x60;brands&#x60; field. If set to &#x60;false&#x60;, brands present on that field will make this Promotion or Tax not to be applied.
   * @return brandsAreInclusive
   */
  @javax.annotation.Nullable
  public Boolean getBrandsAreInclusive() {
    return brandsAreInclusive;
  }

  public void setBrandsAreInclusive(Boolean brandsAreInclusive) {
    this.brandsAreInclusive = brandsAreInclusive;
  }


  public CreateOrUpdateCalculatorConfigurationRequest campaigns(List<Object> campaigns) {
    this.campaigns = campaigns;
    return this;
  }

  public CreateOrUpdateCalculatorConfigurationRequest addCampaignsItem(Object campaignsItem) {
    if (this.campaigns == null) {
      this.campaigns = new ArrayList<>();
    }
    this.campaigns.add(campaignsItem);
    return this;
  }

  /**
   * Campaign Audiences that activate this Promotion or Tax.
   * @return campaigns
   */
  @javax.annotation.Nullable
  public List<Object> getCampaigns() {
    return campaigns;
  }

  public void setCampaigns(List<Object> campaigns) {
    this.campaigns = campaigns;
  }


  @Deprecated
  public CreateOrUpdateCalculatorConfigurationRequest cardIssuers(List<Object> cardIssuers) {
    this.cardIssuers = cardIssuers;
    return this;
  }

  public CreateOrUpdateCalculatorConfigurationRequest addCardIssuersItem(Object cardIssuersItem) {
    if (this.cardIssuers == null) {
      this.cardIssuers = new ArrayList<>();
    }
    this.cardIssuers.add(cardIssuersItem);
    return this;
  }

  /**
   * Get cardIssuers
   * @return cardIssuers
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public List<Object> getCardIssuers() {
    return cardIssuers;
  }

  @Deprecated
  public void setCardIssuers(List<Object> cardIssuers) {
    this.cardIssuers = cardIssuers;
  }


  public CreateOrUpdateCalculatorConfigurationRequest categories(List<CreateOrUpdateCalculatorConfigurationRequestCategoriesInner> categories) {
    this.categories = categories;
    return this;
  }

  public CreateOrUpdateCalculatorConfigurationRequest addCategoriesItem(CreateOrUpdateCalculatorConfigurationRequestCategoriesInner categoriesItem) {
    if (this.categories == null) {
      this.categories = new ArrayList<>();
    }
    this.categories.add(categoriesItem);
    return this;
  }

  /**
   * Object composed by the categories that will activate or deactivate the Promotion or Tax.
   * @return categories
   */
  @javax.annotation.Nullable
  public List<CreateOrUpdateCalculatorConfigurationRequestCategoriesInner> getCategories() {
    return categories;
  }

  public void setCategories(List<CreateOrUpdateCalculatorConfigurationRequestCategoriesInner> categories) {
    this.categories = categories;
  }


  public CreateOrUpdateCalculatorConfigurationRequest categoriesAreInclusive(Boolean categoriesAreInclusive) {
    this.categoriesAreInclusive = categoriesAreInclusive;
    return this;
  }

  /**
   * If set to &#x60;true&#x60;, this Promotion or Tax will be applied to any category present on the &#x60;categories&#x60; field. If set to &#x60;false&#x60;, categories present on that field will make this Promotion or Tax not to be applied.
   * @return categoriesAreInclusive
   */
  @javax.annotation.Nullable
  public Boolean getCategoriesAreInclusive() {
    return categoriesAreInclusive;
  }

  public void setCategoriesAreInclusive(Boolean categoriesAreInclusive) {
    this.categoriesAreInclusive = categoriesAreInclusive;
  }


  public CreateOrUpdateCalculatorConfigurationRequest clusterExpressions(List<String> clusterExpressions) {
    this.clusterExpressions = clusterExpressions;
    return this;
  }

  public CreateOrUpdateCalculatorConfigurationRequest addClusterExpressionsItem(String clusterExpressionsItem) {
    if (this.clusterExpressions == null) {
      this.clusterExpressions = new ArrayList<>();
    }
    this.clusterExpressions.add(clusterExpressionsItem);
    return this;
  }

  /**
   * An expression to use with clusters.
   * @return clusterExpressions
   */
  @javax.annotation.Nullable
  public List<String> getClusterExpressions() {
    return clusterExpressions;
  }

  public void setClusterExpressions(List<String> clusterExpressions) {
    this.clusterExpressions = clusterExpressions;
  }


  public CreateOrUpdateCalculatorConfigurationRequest collections(List<CreateOrUpdateCalculatorConfigurationRequestCollectionsInner> collections) {
    this.collections = collections;
    return this;
  }

  public CreateOrUpdateCalculatorConfigurationRequest addCollectionsItem(CreateOrUpdateCalculatorConfigurationRequestCollectionsInner collectionsItem) {
    if (this.collections == null) {
      this.collections = new ArrayList<>();
    }
    this.collections.add(collectionsItem);
    return this;
  }

  /**
   * Object composed by the collections that will activate or deactivate the Promotion or Tax.
   * @return collections
   */
  @javax.annotation.Nullable
  public List<CreateOrUpdateCalculatorConfigurationRequestCollectionsInner> getCollections() {
    return collections;
  }

  public void setCollections(List<CreateOrUpdateCalculatorConfigurationRequestCollectionsInner> collections) {
    this.collections = collections;
  }


  public CreateOrUpdateCalculatorConfigurationRequest collections1BuyTogether(List<String> collections1BuyTogether) {
    this.collections1BuyTogether = collections1BuyTogether;
    return this;
  }

  public CreateOrUpdateCalculatorConfigurationRequest addCollections1BuyTogetherItem(String collections1BuyTogetherItem) {
    if (this.collections1BuyTogether == null) {
      this.collections1BuyTogether = new ArrayList<>();
    }
    this.collections1BuyTogether.add(collections1BuyTogetherItem);
    return this;
  }

  /**
   * Collections that will generate the Promotion, type **Buy Together**, **More for less**, **Progressive Discount**, **Buy One Get One**.
   * @return collections1BuyTogether
   */
  @javax.annotation.Nullable
  public List<String> getCollections1BuyTogether() {
    return collections1BuyTogether;
  }

  public void setCollections1BuyTogether(List<String> collections1BuyTogether) {
    this.collections1BuyTogether = collections1BuyTogether;
  }


  @Deprecated
  public CreateOrUpdateCalculatorConfigurationRequest collections2BuyTogether(List<Object> collections2BuyTogether) {
    this.collections2BuyTogether = collections2BuyTogether;
    return this;
  }

  public CreateOrUpdateCalculatorConfigurationRequest addCollections2BuyTogetherItem(Object collections2BuyTogetherItem) {
    if (this.collections2BuyTogether == null) {
      this.collections2BuyTogether = new ArrayList<>();
    }
    this.collections2BuyTogether.add(collections2BuyTogetherItem);
    return this;
  }

  /**
   * Get collections2BuyTogether
   * @return collections2BuyTogether
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public List<Object> getCollections2BuyTogether() {
    return collections2BuyTogether;
  }

  @Deprecated
  public void setCollections2BuyTogether(List<Object> collections2BuyTogether) {
    this.collections2BuyTogether = collections2BuyTogether;
  }


  public CreateOrUpdateCalculatorConfigurationRequest collectionsIsInclusive(Boolean collectionsIsInclusive) {
    this.collectionsIsInclusive = collectionsIsInclusive;
    return this;
  }

  /**
   * If set to &#x60;true&#x60;, this Promotion or Tax will be applied to any collection present on the &#x60;collections&#x60; field. If set to &#x60;false&#x60;, collections present on that field will make this Promotion or Tax not to be applied.
   * @return collectionsIsInclusive
   */
  @javax.annotation.Nullable
  public Boolean getCollectionsIsInclusive() {
    return collectionsIsInclusive;
  }

  public void setCollectionsIsInclusive(Boolean collectionsIsInclusive) {
    this.collectionsIsInclusive = collectionsIsInclusive;
  }


  public CreateOrUpdateCalculatorConfigurationRequest compareListPriceAndPrice(Boolean compareListPriceAndPrice) {
    this.compareListPriceAndPrice = compareListPriceAndPrice;
    return this;
  }

  /**
   * If the **List Price** and **Price** are the same.
   * @return compareListPriceAndPrice
   */
  @javax.annotation.Nullable
  public Boolean getCompareListPriceAndPrice() {
    return compareListPriceAndPrice;
  }

  public void setCompareListPriceAndPrice(Boolean compareListPriceAndPrice) {
    this.compareListPriceAndPrice = compareListPriceAndPrice;
  }


  public CreateOrUpdateCalculatorConfigurationRequest conditionsIds(List<String> conditionsIds) {
    this.conditionsIds = conditionsIds;
    return this;
  }

  public CreateOrUpdateCalculatorConfigurationRequest addConditionsIdsItem(String conditionsIdsItem) {
    if (this.conditionsIds == null) {
      this.conditionsIds = new ArrayList<>();
    }
    this.conditionsIds.add(conditionsIdsItem);
    return this;
  }

  /**
   * Array with conditions IDs.
   * @return conditionsIds
   */
  @javax.annotation.Nullable
  public List<String> getConditionsIds() {
    return conditionsIds;
  }

  public void setConditionsIds(List<String> conditionsIds) {
    this.conditionsIds = conditionsIds;
  }


  @Deprecated
  public CreateOrUpdateCalculatorConfigurationRequest coupon(List<Object> coupon) {
    this.coupon = coupon;
    return this;
  }

  public CreateOrUpdateCalculatorConfigurationRequest addCouponItem(Object couponItem) {
    if (this.coupon == null) {
      this.coupon = new ArrayList<>();
    }
    this.coupon.add(couponItem);
    return this;
  }

  /**
   * Get coupon
   * @return coupon
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public List<Object> getCoupon() {
    return coupon;
  }

  @Deprecated
  public void setCoupon(List<Object> coupon) {
    this.coupon = coupon;
  }


  public CreateOrUpdateCalculatorConfigurationRequest cumulative(Boolean cumulative) {
    this.cumulative = cumulative;
    return this;
  }

  /**
   * Defines if a Promotion or Tax can accumulate with another one. (&#x60;true&#x60;) or not (&#x60;false&#x60;).
   * @return cumulative
   */
  @javax.annotation.Nullable
  public Boolean getCumulative() {
    return cumulative;
  }

  public void setCumulative(Boolean cumulative) {
    this.cumulative = cumulative;
  }


  public CreateOrUpdateCalculatorConfigurationRequest daysAgoOfPurchases(Integer daysAgoOfPurchases) {
    this.daysAgoOfPurchases = daysAgoOfPurchases;
    return this;
  }

  /**
   * Number of days that are considered to add the purchase history.
   * @return daysAgoOfPurchases
   */
  @javax.annotation.Nullable
  public Integer getDaysAgoOfPurchases() {
    return daysAgoOfPurchases;
  }

  public void setDaysAgoOfPurchases(Integer daysAgoOfPurchases) {
    this.daysAgoOfPurchases = daysAgoOfPurchases;
  }


  public CreateOrUpdateCalculatorConfigurationRequest description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Internal description of the Promotion or Tax.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  @Deprecated
  public CreateOrUpdateCalculatorConfigurationRequest disableDeal(Boolean disableDeal) {
    this.disableDeal = disableDeal;
    return this;
  }

  /**
   * Get disableDeal
   * @return disableDeal
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public Boolean getDisableDeal() {
    return disableDeal;
  }

  @Deprecated
  public void setDisableDeal(Boolean disableDeal) {
    this.disableDeal = disableDeal;
  }


  public CreateOrUpdateCalculatorConfigurationRequest discountType(String discountType) {
    this.discountType = discountType;
    return this;
  }

  /**
   * The type of discount that will apply to the promotion.
   * @return discountType
   */
  @javax.annotation.Nullable
  public String getDiscountType() {
    return discountType;
  }

  public void setDiscountType(String discountType) {
    this.discountType = discountType;
  }


  public CreateOrUpdateCalculatorConfigurationRequest enableBuyTogetherPerSku(Boolean enableBuyTogetherPerSku) {
    this.enableBuyTogetherPerSku = enableBuyTogetherPerSku;
    return this;
  }

  /**
   * Enable **Buy Together** per SKU.
   * @return enableBuyTogetherPerSku
   */
  @javax.annotation.Nullable
  public Boolean getEnableBuyTogetherPerSku() {
    return enableBuyTogetherPerSku;
  }

  public void setEnableBuyTogetherPerSku(Boolean enableBuyTogetherPerSku) {
    this.enableBuyTogetherPerSku = enableBuyTogetherPerSku;
  }


  public CreateOrUpdateCalculatorConfigurationRequest endDateUtc(String endDateUtc) {
    this.endDateUtc = endDateUtc;
    return this;
  }

  /**
   * Promotion or Tax End Date (UTC).
   * @return endDateUtc
   */
  @javax.annotation.Nullable
  public String getEndDateUtc() {
    return endDateUtc;
  }

  public void setEndDateUtc(String endDateUtc) {
    this.endDateUtc = endDateUtc;
  }


  public CreateOrUpdateCalculatorConfigurationRequest firstBuyIsProfileOptimistic(Boolean firstBuyIsProfileOptimistic) {
    this.firstBuyIsProfileOptimistic = firstBuyIsProfileOptimistic;
    return this;
  }

  /**
   * Applies the discount even if the user is not logged.
   * @return firstBuyIsProfileOptimistic
   */
  @javax.annotation.Nullable
  public Boolean getFirstBuyIsProfileOptimistic() {
    return firstBuyIsProfileOptimistic;
  }

  public void setFirstBuyIsProfileOptimistic(Boolean firstBuyIsProfileOptimistic) {
    this.firstBuyIsProfileOptimistic = firstBuyIsProfileOptimistic;
  }


  public CreateOrUpdateCalculatorConfigurationRequest giftListTypes(List<String> giftListTypes) {
    this.giftListTypes = giftListTypes;
    return this;
  }

  public CreateOrUpdateCalculatorConfigurationRequest addGiftListTypesItem(String giftListTypesItem) {
    if (this.giftListTypes == null) {
      this.giftListTypes = new ArrayList<>();
    }
    this.giftListTypes.add(giftListTypesItem);
    return this;
  }

  /**
   * Gifts List Type.
   * @return giftListTypes
   */
  @javax.annotation.Nullable
  public List<String> getGiftListTypes() {
    return giftListTypes;
  }

  public void setGiftListTypes(List<String> giftListTypes) {
    this.giftListTypes = giftListTypes;
  }


  public CreateOrUpdateCalculatorConfigurationRequest idCalculatorConfiguration(String idCalculatorConfiguration) {
    this.idCalculatorConfiguration = idCalculatorConfiguration;
    return this;
  }

  /**
   * Promotion ID or Tax ID.
   * @return idCalculatorConfiguration
   */
  @javax.annotation.Nullable
  public String getIdCalculatorConfiguration() {
    return idCalculatorConfiguration;
  }

  public void setIdCalculatorConfiguration(String idCalculatorConfiguration) {
    this.idCalculatorConfiguration = idCalculatorConfiguration;
  }


  public CreateOrUpdateCalculatorConfigurationRequest idSeller(String idSeller) {
    this.idSeller = idSeller;
    return this;
  }

  /**
   * Seller Name.
   * @return idSeller
   */
  @javax.annotation.Nullable
  public String getIdSeller() {
    return idSeller;
  }

  public void setIdSeller(String idSeller) {
    this.idSeller = idSeller;
  }


  public CreateOrUpdateCalculatorConfigurationRequest idSellerIsInclusive(Boolean idSellerIsInclusive) {
    this.idSellerIsInclusive = idSellerIsInclusive;
    return this;
  }

  /**
   * If set to &#x60;true&#x60;, this Promotion or Tax will be applied to any seller present on the &#x60;idSeller&#x60; field. If set to &#x60;false&#x60;, sellers present on that field will make this Promotion or Tax not to be applied.
   * @return idSellerIsInclusive
   */
  @javax.annotation.Nullable
  public Boolean getIdSellerIsInclusive() {
    return idSellerIsInclusive;
  }

  public void setIdSellerIsInclusive(Boolean idSellerIsInclusive) {
    this.idSellerIsInclusive = idSellerIsInclusive;
  }


  public CreateOrUpdateCalculatorConfigurationRequest idsSalesChannel(List<String> idsSalesChannel) {
    this.idsSalesChannel = idsSalesChannel;
    return this;
  }

  public CreateOrUpdateCalculatorConfigurationRequest addIdsSalesChannelItem(String idsSalesChannelItem) {
    if (this.idsSalesChannel == null) {
      this.idsSalesChannel = new ArrayList<>();
    }
    this.idsSalesChannel.add(idsSalesChannelItem);
    return this;
  }

  /**
   * List of Trade Policies that activate this Promotion or Tax.
   * @return idsSalesChannel
   */
  @javax.annotation.Nullable
  public List<String> getIdsSalesChannel() {
    return idsSalesChannel;
  }

  public void setIdsSalesChannel(List<String> idsSalesChannel) {
    this.idsSalesChannel = idsSalesChannel;
  }


  @Deprecated
  public CreateOrUpdateCalculatorConfigurationRequest installment(Integer installment) {
    this.installment = installment;
    return this;
  }

  /**
   * Get installment
   * @return installment
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public Integer getInstallment() {
    return installment;
  }

  @Deprecated
  public void setInstallment(Integer installment) {
    this.installment = installment;
  }


  public CreateOrUpdateCalculatorConfigurationRequest isActive(Boolean isActive) {
    this.isActive = isActive;
    return this;
  }

  /**
   * If set as &#x60;true&#x60; the Promotion or Tax is activated. If set as &#x60;false&#x60; the Promotion or Tax is deactivated.
   * @return isActive
   */
  @javax.annotation.Nullable
  public Boolean getIsActive() {
    return isActive;
  }

  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }


  public CreateOrUpdateCalculatorConfigurationRequest isArchived(Boolean isArchived) {
    this.isArchived = isArchived;
    return this;
  }

  /**
   * If set as &#x60;true&#x60; the Promotion or Tax is archived. If set as &#x60;false&#x60; the Promotion or Tax is not archived.
   * @return isArchived
   */
  @javax.annotation.Nullable
  public Boolean getIsArchived() {
    return isArchived;
  }

  public void setIsArchived(Boolean isArchived) {
    this.isArchived = isArchived;
  }


  public CreateOrUpdateCalculatorConfigurationRequest isDifferentListPriceAndPrice(Boolean isDifferentListPriceAndPrice) {
    this.isDifferentListPriceAndPrice = isDifferentListPriceAndPrice;
    return this;
  }

  /**
   * Applies the Promotion or Tax only if the list price and price is different.
   * @return isDifferentListPriceAndPrice
   */
  @javax.annotation.Nullable
  public Boolean getIsDifferentListPriceAndPrice() {
    return isDifferentListPriceAndPrice;
  }

  public void setIsDifferentListPriceAndPrice(Boolean isDifferentListPriceAndPrice) {
    this.isDifferentListPriceAndPrice = isDifferentListPriceAndPrice;
  }


  public CreateOrUpdateCalculatorConfigurationRequest isFeatured(Boolean isFeatured) {
    this.isFeatured = isFeatured;
    return this;
  }

  /**
   * Insert a flag with the promotion name used in the product&#39;s window display and page.
   * @return isFeatured
   */
  @javax.annotation.Nullable
  public Boolean getIsFeatured() {
    return isFeatured;
  }

  public void setIsFeatured(Boolean isFeatured) {
    this.isFeatured = isFeatured;
  }


  public CreateOrUpdateCalculatorConfigurationRequest isFirstBuy(Boolean isFirstBuy) {
    this.isFirstBuy = isFirstBuy;
    return this;
  }

  /**
   * Applies the discount only if it&#39;s a first buy.
   * @return isFirstBuy
   */
  @javax.annotation.Nullable
  public Boolean getIsFirstBuy() {
    return isFirstBuy;
  }

  public void setIsFirstBuy(Boolean isFirstBuy) {
    this.isFirstBuy = isFirstBuy;
  }


  public CreateOrUpdateCalculatorConfigurationRequest isMinMaxInstallments(Boolean isMinMaxInstallments) {
    this.isMinMaxInstallments = isMinMaxInstallments;
    return this;
  }

  /**
   * Set if the Promotion or Tax will be applied considering a minimum and maximum values for installments.
   * @return isMinMaxInstallments
   */
  @javax.annotation.Nullable
  public Boolean getIsMinMaxInstallments() {
    return isMinMaxInstallments;
  }

  public void setIsMinMaxInstallments(Boolean isMinMaxInstallments) {
    this.isMinMaxInstallments = isMinMaxInstallments;
  }


  public CreateOrUpdateCalculatorConfigurationRequest isSlaSelected(Boolean isSlaSelected) {
    this.isSlaSelected = isSlaSelected;
    return this;
  }

  /**
   * Applies selected discount only when one of the defined shipping method is selected by the customer.
   * @return isSlaSelected
   */
  @javax.annotation.Nullable
  public Boolean getIsSlaSelected() {
    return isSlaSelected;
  }

  public void setIsSlaSelected(Boolean isSlaSelected) {
    this.isSlaSelected = isSlaSelected;
  }


  public CreateOrUpdateCalculatorConfigurationRequest itemMaxPrice(BigDecimal itemMaxPrice) {
    this.itemMaxPrice = itemMaxPrice;
    return this;
  }

  /**
   * Maximum price of the item.
   * @return itemMaxPrice
   */
  @javax.annotation.Nullable
  public BigDecimal getItemMaxPrice() {
    return itemMaxPrice;
  }

  public void setItemMaxPrice(BigDecimal itemMaxPrice) {
    this.itemMaxPrice = itemMaxPrice;
  }


  public CreateOrUpdateCalculatorConfigurationRequest itemMinPrice(BigDecimal itemMinPrice) {
    this.itemMinPrice = itemMinPrice;
    return this;
  }

  /**
   * Minimum price of the item.
   * @return itemMinPrice
   */
  @javax.annotation.Nullable
  public BigDecimal getItemMinPrice() {
    return itemMinPrice;
  }

  public void setItemMinPrice(BigDecimal itemMinPrice) {
    this.itemMinPrice = itemMinPrice;
  }


  public CreateOrUpdateCalculatorConfigurationRequest lastModified(String lastModified) {
    this.lastModified = lastModified;
    return this;
  }

  /**
   * Date when the Promotion or Tax was last modified.
   * @return lastModified
   */
  @javax.annotation.Nullable
  public String getLastModified() {
    return lastModified;
  }

  public void setLastModified(String lastModified) {
    this.lastModified = lastModified;
  }


  public CreateOrUpdateCalculatorConfigurationRequest listSku1BuyTogether(List<Object> listSku1BuyTogether) {
    this.listSku1BuyTogether = listSku1BuyTogether;
    return this;
  }

  public CreateOrUpdateCalculatorConfigurationRequest addListSku1BuyTogetherItem(Object listSku1BuyTogetherItem) {
    if (this.listSku1BuyTogether == null) {
      this.listSku1BuyTogether = new ArrayList<>();
    }
    this.listSku1BuyTogether.add(listSku1BuyTogetherItem);
    return this;
  }

  /**
   * SKU first list for the promotion **Buy Together**.
   * @return listSku1BuyTogether
   */
  @javax.annotation.Nullable
  public List<Object> getListSku1BuyTogether() {
    return listSku1BuyTogether;
  }

  public void setListSku1BuyTogether(List<Object> listSku1BuyTogether) {
    this.listSku1BuyTogether = listSku1BuyTogether;
  }


  public CreateOrUpdateCalculatorConfigurationRequest listSku2BuyTogether(List<Object> listSku2BuyTogether) {
    this.listSku2BuyTogether = listSku2BuyTogether;
    return this;
  }

  public CreateOrUpdateCalculatorConfigurationRequest addListSku2BuyTogetherItem(Object listSku2BuyTogetherItem) {
    if (this.listSku2BuyTogether == null) {
      this.listSku2BuyTogether = new ArrayList<>();
    }
    this.listSku2BuyTogether.add(listSku2BuyTogetherItem);
    return this;
  }

  /**
   * SKU second list for the promotion **Buy Together**.
   * @return listSku2BuyTogether
   */
  @javax.annotation.Nullable
  public List<Object> getListSku2BuyTogether() {
    return listSku2BuyTogether;
  }

  public void setListSku2BuyTogether(List<Object> listSku2BuyTogether) {
    this.listSku2BuyTogether = listSku2BuyTogether;
  }


  public CreateOrUpdateCalculatorConfigurationRequest marketingTags(List<String> marketingTags) {
    this.marketingTags = marketingTags;
    return this;
  }

  public CreateOrUpdateCalculatorConfigurationRequest addMarketingTagsItem(String marketingTagsItem) {
    if (this.marketingTags == null) {
      this.marketingTags = new ArrayList<>();
    }
    this.marketingTags.add(marketingTagsItem);
    return this;
  }

  /**
   * Promotion or Tax Marketing tags.
   * @return marketingTags
   */
  @javax.annotation.Nullable
  public List<String> getMarketingTags() {
    return marketingTags;
  }

  public void setMarketingTags(List<String> marketingTags) {
    this.marketingTags = marketingTags;
  }


  public CreateOrUpdateCalculatorConfigurationRequest marketingTagsAreNotInclusive(Boolean marketingTagsAreNotInclusive) {
    this.marketingTagsAreNotInclusive = marketingTagsAreNotInclusive;
    return this;
  }

  /**
   * If set to &#x60;false&#x60;, this Promotion or Tax will be applied to any marketing tag present on the &#x60;marketingTags&#x60; field. If set to &#x60;true&#x60;, marketing tags present on that field will make this Promotion or Tax not to be applied.
   * @return marketingTagsAreNotInclusive
   */
  @javax.annotation.Nullable
  public Boolean getMarketingTagsAreNotInclusive() {
    return marketingTagsAreNotInclusive;
  }

  public void setMarketingTagsAreNotInclusive(Boolean marketingTagsAreNotInclusive) {
    this.marketingTagsAreNotInclusive = marketingTagsAreNotInclusive;
  }


  public CreateOrUpdateCalculatorConfigurationRequest maxInstallment(Integer maxInstallment) {
    this.maxInstallment = maxInstallment;
    return this;
  }

  /**
   * Maximum value for installment.
   * @return maxInstallment
   */
  @javax.annotation.Nullable
  public Integer getMaxInstallment() {
    return maxInstallment;
  }

  public void setMaxInstallment(Integer maxInstallment) {
    this.maxInstallment = maxInstallment;
  }


  public CreateOrUpdateCalculatorConfigurationRequest maxNumberOfAffectedItems(Integer maxNumberOfAffectedItems) {
    this.maxNumberOfAffectedItems = maxNumberOfAffectedItems;
    return this;
  }

  /**
   * The maximum number of affected items for a promotion.
   * @return maxNumberOfAffectedItems
   */
  @javax.annotation.Nullable
  public Integer getMaxNumberOfAffectedItems() {
    return maxNumberOfAffectedItems;
  }

  public void setMaxNumberOfAffectedItems(Integer maxNumberOfAffectedItems) {
    this.maxNumberOfAffectedItems = maxNumberOfAffectedItems;
  }


  public CreateOrUpdateCalculatorConfigurationRequest maxNumberOfAffectedItemsGroupKey(String maxNumberOfAffectedItemsGroupKey) {
    this.maxNumberOfAffectedItemsGroupKey = maxNumberOfAffectedItemsGroupKey;
    return this;
  }

  /**
   * The maximum number of affected items by group key for a promotion.
   * @return maxNumberOfAffectedItemsGroupKey
   */
  @javax.annotation.Nullable
  public String getMaxNumberOfAffectedItemsGroupKey() {
    return maxNumberOfAffectedItemsGroupKey;
  }

  public void setMaxNumberOfAffectedItemsGroupKey(String maxNumberOfAffectedItemsGroupKey) {
    this.maxNumberOfAffectedItemsGroupKey = maxNumberOfAffectedItemsGroupKey;
  }


  @Deprecated
  public CreateOrUpdateCalculatorConfigurationRequest maxPricesPerItems(List<Object> maxPricesPerItems) {
    this.maxPricesPerItems = maxPricesPerItems;
    return this;
  }

  public CreateOrUpdateCalculatorConfigurationRequest addMaxPricesPerItemsItem(Object maxPricesPerItemsItem) {
    if (this.maxPricesPerItems == null) {
      this.maxPricesPerItems = new ArrayList<>();
    }
    this.maxPricesPerItems.add(maxPricesPerItemsItem);
    return this;
  }

  /**
   * Get maxPricesPerItems
   * @return maxPricesPerItems
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public List<Object> getMaxPricesPerItems() {
    return maxPricesPerItems;
  }

  @Deprecated
  public void setMaxPricesPerItems(List<Object> maxPricesPerItems) {
    this.maxPricesPerItems = maxPricesPerItems;
  }


  public CreateOrUpdateCalculatorConfigurationRequest maxUsage(Integer maxUsage) {
    this.maxUsage = maxUsage;
    return this;
  }

  /**
   * Defines how many times the Promotion or Tax can be used.
   * @return maxUsage
   */
  @javax.annotation.Nullable
  public Integer getMaxUsage() {
    return maxUsage;
  }

  public void setMaxUsage(Integer maxUsage) {
    this.maxUsage = maxUsage;
  }


  public CreateOrUpdateCalculatorConfigurationRequest maxUsagePerClient(Integer maxUsagePerClient) {
    this.maxUsagePerClient = maxUsagePerClient;
    return this;
  }

  /**
   * Defines if the promotion can be used multiple times per client.
   * @return maxUsagePerClient
   */
  @javax.annotation.Nullable
  public Integer getMaxUsagePerClient() {
    return maxUsagePerClient;
  }

  public void setMaxUsagePerClient(Integer maxUsagePerClient) {
    this.maxUsagePerClient = maxUsagePerClient;
  }


  public CreateOrUpdateCalculatorConfigurationRequest maximumUnitPriceDiscount(BigDecimal maximumUnitPriceDiscount) {
    this.maximumUnitPriceDiscount = maximumUnitPriceDiscount;
    return this;
  }

  /**
   * The maximum price for each item of the purchase will be the price set up.
   * @return maximumUnitPriceDiscount
   */
  @javax.annotation.Nullable
  public BigDecimal getMaximumUnitPriceDiscount() {
    return maximumUnitPriceDiscount;
  }

  public void setMaximumUnitPriceDiscount(BigDecimal maximumUnitPriceDiscount) {
    this.maximumUnitPriceDiscount = maximumUnitPriceDiscount;
  }


  @Deprecated
  public CreateOrUpdateCalculatorConfigurationRequest merchants(List<Object> merchants) {
    this.merchants = merchants;
    return this;
  }

  public CreateOrUpdateCalculatorConfigurationRequest addMerchantsItem(Object merchantsItem) {
    if (this.merchants == null) {
      this.merchants = new ArrayList<>();
    }
    this.merchants.add(merchantsItem);
    return this;
  }

  /**
   * Get merchants
   * @return merchants
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public List<Object> getMerchants() {
    return merchants;
  }

  @Deprecated
  public void setMerchants(List<Object> merchants) {
    this.merchants = merchants;
  }


  public CreateOrUpdateCalculatorConfigurationRequest minInstallment(Integer minInstallment) {
    this.minInstallment = minInstallment;
    return this;
  }

  /**
   * Minimum value for installment.
   * @return minInstallment
   */
  @javax.annotation.Nullable
  public Integer getMinInstallment() {
    return minInstallment;
  }

  public void setMinInstallment(Integer minInstallment) {
    this.minInstallment = minInstallment;
  }


  public CreateOrUpdateCalculatorConfigurationRequest minimumQuantityBuyTogether(Integer minimumQuantityBuyTogether) {
    this.minimumQuantityBuyTogether = minimumQuantityBuyTogether;
    return this;
  }

  /**
   * Minimum quantity for **Buy Together** promotion.
   * @return minimumQuantityBuyTogether
   */
  @javax.annotation.Nullable
  public Integer getMinimumQuantityBuyTogether() {
    return minimumQuantityBuyTogether;
  }

  public void setMinimumQuantityBuyTogether(Integer minimumQuantityBuyTogether) {
    this.minimumQuantityBuyTogether = minimumQuantityBuyTogether;
  }


  public CreateOrUpdateCalculatorConfigurationRequest multipleUsePerClient(Boolean multipleUsePerClient) {
    this.multipleUsePerClient = multipleUsePerClient;
    return this;
  }

  /**
   * Defines if the promotion can be used multiple times per client.
   * @return multipleUsePerClient
   */
  @javax.annotation.Nullable
  public Boolean getMultipleUsePerClient() {
    return multipleUsePerClient;
  }

  public void setMultipleUsePerClient(Boolean multipleUsePerClient) {
    this.multipleUsePerClient = multipleUsePerClient;
  }


  public CreateOrUpdateCalculatorConfigurationRequest name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Promotion name or Tax name.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CreateOrUpdateCalculatorConfigurationRequest newOffset(BigDecimal newOffset) {
    this.newOffset = newOffset;
    return this;
  }

  /**
   * New time offset from UTC in seconds.
   * @return newOffset
   */
  @javax.annotation.Nullable
  public BigDecimal getNewOffset() {
    return newOffset;
  }

  public void setNewOffset(BigDecimal newOffset) {
    this.newOffset = newOffset;
  }


  public CreateOrUpdateCalculatorConfigurationRequest nominalDiscountValue(BigDecimal nominalDiscountValue) {
    this.nominalDiscountValue = nominalDiscountValue;
    return this;
  }

  /**
   * Exact discount to be applied for the total purchase value.
   * @return nominalDiscountValue
   */
  @javax.annotation.Nullable
  public BigDecimal getNominalDiscountValue() {
    return nominalDiscountValue;
  }

  public void setNominalDiscountValue(BigDecimal nominalDiscountValue) {
    this.nominalDiscountValue = nominalDiscountValue;
  }


  public CreateOrUpdateCalculatorConfigurationRequest nominalRewardValue(BigDecimal nominalRewardValue) {
    this.nominalRewardValue = nominalRewardValue;
    return this;
  }

  /**
   * Nominal value for rewards program.
   * @return nominalRewardValue
   */
  @javax.annotation.Nullable
  public BigDecimal getNominalRewardValue() {
    return nominalRewardValue;
  }

  public void setNominalRewardValue(BigDecimal nominalRewardValue) {
    this.nominalRewardValue = nominalRewardValue;
  }


  public CreateOrUpdateCalculatorConfigurationRequest nominalShippingDiscountValue(BigDecimal nominalShippingDiscountValue) {
    this.nominalShippingDiscountValue = nominalShippingDiscountValue;
    return this;
  }

  /**
   * Exact discount to be applied for the shipping value.
   * @return nominalShippingDiscountValue
   */
  @javax.annotation.Nullable
  public BigDecimal getNominalShippingDiscountValue() {
    return nominalShippingDiscountValue;
  }

  public void setNominalShippingDiscountValue(BigDecimal nominalShippingDiscountValue) {
    this.nominalShippingDiscountValue = nominalShippingDiscountValue;
  }


  public CreateOrUpdateCalculatorConfigurationRequest nominalTax(BigDecimal nominalTax) {
    this.nominalTax = nominalTax;
    return this;
  }

  /**
   * Nominal Tax.
   * @return nominalTax
   */
  @javax.annotation.Nullable
  public BigDecimal getNominalTax() {
    return nominalTax;
  }

  public void setNominalTax(BigDecimal nominalTax) {
    this.nominalTax = nominalTax;
  }


  public CreateOrUpdateCalculatorConfigurationRequest offset(Integer offset) {
    this.offset = offset;
    return this;
  }

  /**
   * Time offset from UTC in seconds.
   * @return offset
   */
  @javax.annotation.Nullable
  public Integer getOffset() {
    return offset;
  }

  public void setOffset(Integer offset) {
    this.offset = offset;
  }


  public CreateOrUpdateCalculatorConfigurationRequest orderStatusRewardValue(String orderStatusRewardValue) {
    this.orderStatusRewardValue = orderStatusRewardValue;
    return this;
  }

  /**
   * Order status reward value.
   * @return orderStatusRewardValue
   */
  @javax.annotation.Nullable
  public String getOrderStatusRewardValue() {
    return orderStatusRewardValue;
  }

  public void setOrderStatusRewardValue(String orderStatusRewardValue) {
    this.orderStatusRewardValue = orderStatusRewardValue;
  }


  public CreateOrUpdateCalculatorConfigurationRequest origin(String origin) {
    this.origin = origin;
    return this;
  }

  /**
   * Origin of the Promotion or Tax, &#x60;marketplace&#x60; or &#x60;Fulfillment&#x60;.  Read [Difference between orders with marketplace and fulfillment sources](https://help.vtex.com/en/tutorial/what-are-orders-with-marketplace-source-and-orders-with-fulfillment-source--6eVYrmUAwMOeKICU2KuG06) for more information.
   * @return origin
   */
  @javax.annotation.Nullable
  public String getOrigin() {
    return origin;
  }

  public void setOrigin(String origin) {
    this.origin = origin;
  }


  public CreateOrUpdateCalculatorConfigurationRequest paymentsMethods(List<CreateOrUpdateCalculatorConfigurationRequestPaymentsMethodsInner> paymentsMethods) {
    this.paymentsMethods = paymentsMethods;
    return this;
  }

  public CreateOrUpdateCalculatorConfigurationRequest addPaymentsMethodsItem(CreateOrUpdateCalculatorConfigurationRequestPaymentsMethodsInner paymentsMethodsItem) {
    if (this.paymentsMethods == null) {
      this.paymentsMethods = new ArrayList<>();
    }
    this.paymentsMethods.add(paymentsMethodsItem);
    return this;
  }

  /**
   * Array composed by all the Payments Methods that activate this Promotion or Tax.
   * @return paymentsMethods
   */
  @javax.annotation.Nullable
  public List<CreateOrUpdateCalculatorConfigurationRequestPaymentsMethodsInner> getPaymentsMethods() {
    return paymentsMethods;
  }

  public void setPaymentsMethods(List<CreateOrUpdateCalculatorConfigurationRequestPaymentsMethodsInner> paymentsMethods) {
    this.paymentsMethods = paymentsMethods;
  }


  @Deprecated
  public CreateOrUpdateCalculatorConfigurationRequest paymentsRules(List<Object> paymentsRules) {
    this.paymentsRules = paymentsRules;
    return this;
  }

  public CreateOrUpdateCalculatorConfigurationRequest addPaymentsRulesItem(Object paymentsRulesItem) {
    if (this.paymentsRules == null) {
      this.paymentsRules = new ArrayList<>();
    }
    this.paymentsRules.add(paymentsRulesItem);
    return this;
  }

  /**
   * Get paymentsRules
   * @return paymentsRules
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public List<Object> getPaymentsRules() {
    return paymentsRules;
  }

  @Deprecated
  public void setPaymentsRules(List<Object> paymentsRules) {
    this.paymentsRules = paymentsRules;
  }


  public CreateOrUpdateCalculatorConfigurationRequest percentualDiscountValue(BigDecimal percentualDiscountValue) {
    this.percentualDiscountValue = percentualDiscountValue;
    return this;
  }

  /**
   * Percentage discount to be applied for total purchase value.
   * @return percentualDiscountValue
   */
  @javax.annotation.Nullable
  public BigDecimal getPercentualDiscountValue() {
    return percentualDiscountValue;
  }

  public void setPercentualDiscountValue(BigDecimal percentualDiscountValue) {
    this.percentualDiscountValue = percentualDiscountValue;
  }


  public CreateOrUpdateCalculatorConfigurationRequest percentualDiscountValueList(List<BigDecimal> percentualDiscountValueList) {
    this.percentualDiscountValueList = percentualDiscountValueList;
    return this;
  }

  public CreateOrUpdateCalculatorConfigurationRequest addPercentualDiscountValueListItem(BigDecimal percentualDiscountValueListItem) {
    if (this.percentualDiscountValueList == null) {
      this.percentualDiscountValueList = new ArrayList<>();
    }
    this.percentualDiscountValueList.add(percentualDiscountValueListItem);
    return this;
  }

  /**
   * Percentual discount value list.
   * @return percentualDiscountValueList
   */
  @javax.annotation.Nullable
  public List<BigDecimal> getPercentualDiscountValueList() {
    return percentualDiscountValueList;
  }

  public void setPercentualDiscountValueList(List<BigDecimal> percentualDiscountValueList) {
    this.percentualDiscountValueList = percentualDiscountValueList;
  }


  public CreateOrUpdateCalculatorConfigurationRequest percentualDiscountValueList1(BigDecimal percentualDiscountValueList1) {
    this.percentualDiscountValueList1 = percentualDiscountValueList1;
    return this;
  }

  /**
   * Valid discounts for the SKUs in &#x60;listSku1BuyTogether&#x60;, discount list used for Buy Together Promotions.
   * @return percentualDiscountValueList1
   */
  @javax.annotation.Nullable
  public BigDecimal getPercentualDiscountValueList1() {
    return percentualDiscountValueList1;
  }

  public void setPercentualDiscountValueList1(BigDecimal percentualDiscountValueList1) {
    this.percentualDiscountValueList1 = percentualDiscountValueList1;
  }


  public CreateOrUpdateCalculatorConfigurationRequest percentualDiscountValueList2(BigDecimal percentualDiscountValueList2) {
    this.percentualDiscountValueList2 = percentualDiscountValueList2;
    return this;
  }

  /**
   * Equivalent to &#x60;percentualDiscountValueList1&#x60;.
   * @return percentualDiscountValueList2
   */
  @javax.annotation.Nullable
  public BigDecimal getPercentualDiscountValueList2() {
    return percentualDiscountValueList2;
  }

  public void setPercentualDiscountValueList2(BigDecimal percentualDiscountValueList2) {
    this.percentualDiscountValueList2 = percentualDiscountValueList2;
  }


  public CreateOrUpdateCalculatorConfigurationRequest percentualRewardValue(BigDecimal percentualRewardValue) {
    this.percentualRewardValue = percentualRewardValue;
    return this;
  }

  /**
   * Percentage value for rewards program.
   * @return percentualRewardValue
   */
  @javax.annotation.Nullable
  public BigDecimal getPercentualRewardValue() {
    return percentualRewardValue;
  }

  public void setPercentualRewardValue(BigDecimal percentualRewardValue) {
    this.percentualRewardValue = percentualRewardValue;
  }


  public CreateOrUpdateCalculatorConfigurationRequest percentualShippingDiscountValue(BigDecimal percentualShippingDiscountValue) {
    this.percentualShippingDiscountValue = percentualShippingDiscountValue;
    return this;
  }

  /**
   * Percentage discount to be applied for shipping value.
   * @return percentualShippingDiscountValue
   */
  @javax.annotation.Nullable
  public BigDecimal getPercentualShippingDiscountValue() {
    return percentualShippingDiscountValue;
  }

  public void setPercentualShippingDiscountValue(BigDecimal percentualShippingDiscountValue) {
    this.percentualShippingDiscountValue = percentualShippingDiscountValue;
  }


  public CreateOrUpdateCalculatorConfigurationRequest percentualTax(BigDecimal percentualTax) {
    this.percentualTax = percentualTax;
    return this;
  }

  /**
   * Percentual Tax over purchase total value.
   * @return percentualTax
   */
  @javax.annotation.Nullable
  public BigDecimal getPercentualTax() {
    return percentualTax;
  }

  public void setPercentualTax(BigDecimal percentualTax) {
    this.percentualTax = percentualTax;
  }


  public CreateOrUpdateCalculatorConfigurationRequest products(List<CreateOrUpdateCalculatorConfigurationRequestProductsInner> products) {
    this.products = products;
    return this;
  }

  public CreateOrUpdateCalculatorConfigurationRequest addProductsItem(CreateOrUpdateCalculatorConfigurationRequestProductsInner productsItem) {
    if (this.products == null) {
      this.products = new ArrayList<>();
    }
    this.products.add(productsItem);
    return this;
  }

  /**
   * Object composed by the products that will activate or deactivate the Promotion or Tax.
   * @return products
   */
  @javax.annotation.Nullable
  public List<CreateOrUpdateCalculatorConfigurationRequestProductsInner> getProducts() {
    return products;
  }

  public void setProducts(List<CreateOrUpdateCalculatorConfigurationRequestProductsInner> products) {
    this.products = products;
  }


  public CreateOrUpdateCalculatorConfigurationRequest productsAreInclusive(Boolean productsAreInclusive) {
    this.productsAreInclusive = productsAreInclusive;
    return this;
  }

  /**
   * If set to &#x60;true&#x60;, this Promotion or Tax will be applied to any product present on the &#x60;products&#x60; field. If set to &#x60;false&#x60;, products present on that field will make this Promotion or Tax not to be applied.
   * @return productsAreInclusive
   */
  @javax.annotation.Nullable
  public Boolean getProductsAreInclusive() {
    return productsAreInclusive;
  }

  public void setProductsAreInclusive(Boolean productsAreInclusive) {
    this.productsAreInclusive = productsAreInclusive;
  }


  @Deprecated
  public CreateOrUpdateCalculatorConfigurationRequest productsSpecifications(List<Object> productsSpecifications) {
    this.productsSpecifications = productsSpecifications;
    return this;
  }

  public CreateOrUpdateCalculatorConfigurationRequest addProductsSpecificationsItem(Object productsSpecificationsItem) {
    if (this.productsSpecifications == null) {
      this.productsSpecifications = new ArrayList<>();
    }
    this.productsSpecifications.add(productsSpecificationsItem);
    return this;
  }

  /**
   * Get productsSpecifications
   * @return productsSpecifications
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public List<Object> getProductsSpecifications() {
    return productsSpecifications;
  }

  @Deprecated
  public void setProductsSpecifications(List<Object> productsSpecifications) {
    this.productsSpecifications = productsSpecifications;
  }


  public CreateOrUpdateCalculatorConfigurationRequest quantityToAffectBuyTogether(Integer quantityToAffectBuyTogether) {
    this.quantityToAffectBuyTogether = quantityToAffectBuyTogether;
    return this;
  }

  /**
   * Quantity to affect **Buy Together** promotion.
   * @return quantityToAffectBuyTogether
   */
  @javax.annotation.Nullable
  public Integer getQuantityToAffectBuyTogether() {
    return quantityToAffectBuyTogether;
  }

  public void setQuantityToAffectBuyTogether(Integer quantityToAffectBuyTogether) {
    this.quantityToAffectBuyTogether = quantityToAffectBuyTogether;
  }


  public CreateOrUpdateCalculatorConfigurationRequest rebatePercentualDiscountValue(BigDecimal rebatePercentualDiscountValue) {
    this.rebatePercentualDiscountValue = rebatePercentualDiscountValue;
    return this;
  }

  /**
   * Percentual Shipping Discount Value.
   * @return rebatePercentualDiscountValue
   */
  @javax.annotation.Nullable
  public BigDecimal getRebatePercentualDiscountValue() {
    return rebatePercentualDiscountValue;
  }

  public void setRebatePercentualDiscountValue(BigDecimal rebatePercentualDiscountValue) {
    this.rebatePercentualDiscountValue = rebatePercentualDiscountValue;
  }


  public CreateOrUpdateCalculatorConfigurationRequest restrictionsBins(List<String> restrictionsBins) {
    this.restrictionsBins = restrictionsBins;
    return this;
  }

  public CreateOrUpdateCalculatorConfigurationRequest addRestrictionsBinsItem(String restrictionsBinsItem) {
    if (this.restrictionsBins == null) {
      this.restrictionsBins = new ArrayList<>();
    }
    this.restrictionsBins.add(restrictionsBinsItem);
    return this;
  }

  /**
   * The discount will be granted if the card&#39;s BIN is given.
   * @return restrictionsBins
   */
  @javax.annotation.Nullable
  public List<String> getRestrictionsBins() {
    return restrictionsBins;
  }

  public void setRestrictionsBins(List<String> restrictionsBins) {
    this.restrictionsBins = restrictionsBins;
  }


  public CreateOrUpdateCalculatorConfigurationRequest shippingPercentualTax(BigDecimal shippingPercentualTax) {
    this.shippingPercentualTax = shippingPercentualTax;
    return this;
  }

  /**
   * Shipping Percentual Tax over purchase total value.
   * @return shippingPercentualTax
   */
  @javax.annotation.Nullable
  public BigDecimal getShippingPercentualTax() {
    return shippingPercentualTax;
  }

  public void setShippingPercentualTax(BigDecimal shippingPercentualTax) {
    this.shippingPercentualTax = shippingPercentualTax;
  }


  public CreateOrUpdateCalculatorConfigurationRequest shouldDistributeDiscountAmongMatchedItems(Boolean shouldDistributeDiscountAmongMatchedItems) {
    this.shouldDistributeDiscountAmongMatchedItems = shouldDistributeDiscountAmongMatchedItems;
    return this;
  }

  /**
   * Should distribute discount among matched items.
   * @return shouldDistributeDiscountAmongMatchedItems
   */
  @javax.annotation.Nullable
  public Boolean getShouldDistributeDiscountAmongMatchedItems() {
    return shouldDistributeDiscountAmongMatchedItems;
  }

  public void setShouldDistributeDiscountAmongMatchedItems(Boolean shouldDistributeDiscountAmongMatchedItems) {
    this.shouldDistributeDiscountAmongMatchedItems = shouldDistributeDiscountAmongMatchedItems;
  }


  public CreateOrUpdateCalculatorConfigurationRequest skus(List<CreateOrUpdateCalculatorConfigurationRequestSkusInner> skus) {
    this.skus = skus;
    return this;
  }

  public CreateOrUpdateCalculatorConfigurationRequest addSkusItem(CreateOrUpdateCalculatorConfigurationRequestSkusInner skusItem) {
    if (this.skus == null) {
      this.skus = new ArrayList<>();
    }
    this.skus.add(skusItem);
    return this;
  }

  /**
   * Object composed by the SKUs that will activate or deactivate the Promotion or Tax.
   * @return skus
   */
  @javax.annotation.Nullable
  public List<CreateOrUpdateCalculatorConfigurationRequestSkusInner> getSkus() {
    return skus;
  }

  public void setSkus(List<CreateOrUpdateCalculatorConfigurationRequestSkusInner> skus) {
    this.skus = skus;
  }


  public CreateOrUpdateCalculatorConfigurationRequest skusAreInclusive(Boolean skusAreInclusive) {
    this.skusAreInclusive = skusAreInclusive;
    return this;
  }

  /**
   * If set to &#x60;true&#x60;, this Promotion or Tax will be applied to any SKU present on the &#x60;skus&#x60; field. If set to &#x60;false&#x60;, SKUs present on that field will make this Promotion or Tax not to be applied.
   * @return skusAreInclusive
   */
  @javax.annotation.Nullable
  public Boolean getSkusAreInclusive() {
    return skusAreInclusive;
  }

  public void setSkusAreInclusive(Boolean skusAreInclusive) {
    this.skusAreInclusive = skusAreInclusive;
  }


  public CreateOrUpdateCalculatorConfigurationRequest skusGift(CreateOrUpdateCalculatorConfigurationRequestSkusGift skusGift) {
    this.skusGift = skusGift;
    return this;
  }

  /**
   * Get skusGift
   * @return skusGift
   */
  @javax.annotation.Nullable
  public CreateOrUpdateCalculatorConfigurationRequestSkusGift getSkusGift() {
    return skusGift;
  }

  public void setSkusGift(CreateOrUpdateCalculatorConfigurationRequestSkusGift skusGift) {
    this.skusGift = skusGift;
  }


  public CreateOrUpdateCalculatorConfigurationRequest slasIds(List<String> slasIds) {
    this.slasIds = slasIds;
    return this;
  }

  public CreateOrUpdateCalculatorConfigurationRequest addSlasIdsItem(String slasIdsItem) {
    if (this.slasIds == null) {
      this.slasIds = new ArrayList<>();
    }
    this.slasIds.add(slasIdsItem);
    return this;
  }

  /**
   * The discount will be granted if the shipping method is the same as the one given.
   * @return slasIds
   */
  @javax.annotation.Nullable
  public List<String> getSlasIds() {
    return slasIds;
  }

  public void setSlasIds(List<String> slasIds) {
    this.slasIds = slasIds;
  }


  @Deprecated
  public CreateOrUpdateCalculatorConfigurationRequest stores(List<Object> stores) {
    this.stores = stores;
    return this;
  }

  public CreateOrUpdateCalculatorConfigurationRequest addStoresItem(Object storesItem) {
    if (this.stores == null) {
      this.stores = new ArrayList<>();
    }
    this.stores.add(storesItem);
    return this;
  }

  /**
   * Get stores
   * @return stores
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public List<Object> getStores() {
    return stores;
  }

  @Deprecated
  public void setStores(List<Object> stores) {
    this.stores = stores;
  }


  @Deprecated
  public CreateOrUpdateCalculatorConfigurationRequest storesAreInclusive(Boolean storesAreInclusive) {
    this.storesAreInclusive = storesAreInclusive;
    return this;
  }

  /**
   * Get storesAreInclusive
   * @return storesAreInclusive
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public Boolean getStoresAreInclusive() {
    return storesAreInclusive;
  }

  @Deprecated
  public void setStoresAreInclusive(Boolean storesAreInclusive) {
    this.storesAreInclusive = storesAreInclusive;
  }


  public CreateOrUpdateCalculatorConfigurationRequest totalValueCeling(BigDecimal totalValueCeling) {
    this.totalValueCeling = totalValueCeling;
    return this;
  }

  /**
   * Maximum chart value to activate the Promotion or Tax.
   * @return totalValueCeling
   */
  @javax.annotation.Nullable
  public BigDecimal getTotalValueCeling() {
    return totalValueCeling;
  }

  public void setTotalValueCeling(BigDecimal totalValueCeling) {
    this.totalValueCeling = totalValueCeling;
  }


  public CreateOrUpdateCalculatorConfigurationRequest totalValueFloor(BigDecimal totalValueFloor) {
    this.totalValueFloor = totalValueFloor;
    return this;
  }

  /**
   * Minimum chart value to activate the Promotion or Tax.
   * @return totalValueFloor
   */
  @javax.annotation.Nullable
  public BigDecimal getTotalValueFloor() {
    return totalValueFloor;
  }

  public void setTotalValueFloor(BigDecimal totalValueFloor) {
    this.totalValueFloor = totalValueFloor;
  }


  @Deprecated
  public CreateOrUpdateCalculatorConfigurationRequest totalValueIncludeAllItems(Boolean totalValueIncludeAllItems) {
    this.totalValueIncludeAllItems = totalValueIncludeAllItems;
    return this;
  }

  /**
   * Get totalValueIncludeAllItems
   * @return totalValueIncludeAllItems
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public Boolean getTotalValueIncludeAllItems() {
    return totalValueIncludeAllItems;
  }

  @Deprecated
  public void setTotalValueIncludeAllItems(Boolean totalValueIncludeAllItems) {
    this.totalValueIncludeAllItems = totalValueIncludeAllItems;
  }


  public CreateOrUpdateCalculatorConfigurationRequest totalValueMode(String totalValueMode) {
    this.totalValueMode = totalValueMode;
    return this;
  }

  /**
   * Defines if products that already are receiving a promotion will be considered on the chart total value. There are three options available: &#x60;IncludeMatchedItems&#x60;, &#x60;ExcludeMatchedItems&#x60;, &#x60;AllItems&#x60;.
   * @return totalValueMode
   */
  @javax.annotation.Nullable
  public String getTotalValueMode() {
    return totalValueMode;
  }

  public void setTotalValueMode(String totalValueMode) {
    this.totalValueMode = totalValueMode;
  }


  public CreateOrUpdateCalculatorConfigurationRequest totalValuePurchase(BigDecimal totalValuePurchase) {
    this.totalValuePurchase = totalValuePurchase;
    return this;
  }

  /**
   * Total value a client must have in past orders to activate the Promotion or Tax.
   * @return totalValuePurchase
   */
  @javax.annotation.Nullable
  public BigDecimal getTotalValuePurchase() {
    return totalValuePurchase;
  }

  public void setTotalValuePurchase(BigDecimal totalValuePurchase) {
    this.totalValuePurchase = totalValuePurchase;
  }


  public CreateOrUpdateCalculatorConfigurationRequest type(String type) {
    this.type = type;
    return this;
  }

  /**
   * Defines what is the type of the promotion or indicates if it is a tax. Possible values: &#x60;regular&#x60; ([Regular Promotion](https://help.vtex.com/tutorial/regular-promotion--tutorials_327)), &#x60;combo&#x60; ([Buy Together](https://help.vtex.com/en/tutorial/buy-together--tutorials_323)), &#x60;forThePriceOf&#x60; ([More for Less](https://help.vtex.com/en/tutorial/creating-a-more-for-less-promotion--tutorials_325)), &#x60;progressive&#x60; ([Progressive Discount](https://help.vtex.com/en/tutorial/progressive-discount--tutorials_324)), &#x60;buyAndWin&#x60; ([Buy One Get One](https://help.vtex.com/en/tutorial/buy-one-get-one--tutorials_322)), &#x60;maxPricePerItem&#x60; (Deprecated), &#x60;campaign&#x60; ([Campaign Promotion](https://help.vtex.com/en/tutorial/campaign-promotion--1ChYXhK2AQGuS6wAqS8Ume)), &#x60;tax&#x60; (Tax), &#x60;multipleEffects&#x60; (Multiple Effects).
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  public CreateOrUpdateCalculatorConfigurationRequest useNewProgressiveAlgorithm(Boolean useNewProgressiveAlgorithm) {
    this.useNewProgressiveAlgorithm = useNewProgressiveAlgorithm;
    return this;
  }

  /**
   * Use new progressive algorithm.
   * @return useNewProgressiveAlgorithm
   */
  @javax.annotation.Nullable
  public Boolean getUseNewProgressiveAlgorithm() {
    return useNewProgressiveAlgorithm;
  }

  public void setUseNewProgressiveAlgorithm(Boolean useNewProgressiveAlgorithm) {
    this.useNewProgressiveAlgorithm = useNewProgressiveAlgorithm;
  }


  public CreateOrUpdateCalculatorConfigurationRequest utmCampaign(String utmCampaign) {
    this.utmCampaign = utmCampaign;
    return this;
  }

  /**
   * Coupon utmCampaign code.
   * @return utmCampaign
   */
  @javax.annotation.Nullable
  public String getUtmCampaign() {
    return utmCampaign;
  }

  public void setUtmCampaign(String utmCampaign) {
    this.utmCampaign = utmCampaign;
  }


  public CreateOrUpdateCalculatorConfigurationRequest utmSource(String utmSource) {
    this.utmSource = utmSource;
    return this;
  }

  /**
   * Coupon utmSource code.
   * @return utmSource
   */
  @javax.annotation.Nullable
  public String getUtmSource() {
    return utmSource;
  }

  public void setUtmSource(String utmSource) {
    this.utmSource = utmSource;
  }


  public CreateOrUpdateCalculatorConfigurationRequest zipCodeRanges(List<CreateOrUpdateCalculatorConfigurationRequestZipCodeRangesInner> zipCodeRanges) {
    this.zipCodeRanges = zipCodeRanges;
    return this;
  }

  public CreateOrUpdateCalculatorConfigurationRequest addZipCodeRangesItem(CreateOrUpdateCalculatorConfigurationRequestZipCodeRangesInner zipCodeRangesItem) {
    if (this.zipCodeRanges == null) {
      this.zipCodeRanges = new ArrayList<>();
    }
    this.zipCodeRanges.add(zipCodeRangesItem);
    return this;
  }

  /**
   * Range of the zip code that applies the promotion.
   * @return zipCodeRanges
   */
  @javax.annotation.Nullable
  public List<CreateOrUpdateCalculatorConfigurationRequestZipCodeRangesInner> getZipCodeRanges() {
    return zipCodeRanges;
  }

  public void setZipCodeRanges(List<CreateOrUpdateCalculatorConfigurationRequestZipCodeRangesInner> zipCodeRanges) {
    this.zipCodeRanges = zipCodeRanges;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateOrUpdateCalculatorConfigurationRequest createOrUpdateCalculatorConfigurationRequest = (CreateOrUpdateCalculatorConfigurationRequest) o;
    return Objects.equals(this.absoluteShippingDiscountValue, createOrUpdateCalculatorConfigurationRequest.absoluteShippingDiscountValue) &&
        Objects.equals(this.accumulateWithManualPrice, createOrUpdateCalculatorConfigurationRequest.accumulateWithManualPrice) &&
        Objects.equals(this.activateGiftsMultiplier, createOrUpdateCalculatorConfigurationRequest.activateGiftsMultiplier) &&
        Objects.equals(this.activeDaysOfWeek, createOrUpdateCalculatorConfigurationRequest.activeDaysOfWeek) &&
        Objects.equals(this.affiliates, createOrUpdateCalculatorConfigurationRequest.affiliates) &&
        Objects.equals(this.applyToAllShippings, createOrUpdateCalculatorConfigurationRequest.applyToAllShippings) &&
        Objects.equals(this.areSalesChannelIdsExclusive, createOrUpdateCalculatorConfigurationRequest.areSalesChannelIdsExclusive) &&
        Objects.equals(this.beginDateUtc, createOrUpdateCalculatorConfigurationRequest.beginDateUtc) &&
        Objects.equals(this.brands, createOrUpdateCalculatorConfigurationRequest.brands) &&
        Objects.equals(this.brandsAreInclusive, createOrUpdateCalculatorConfigurationRequest.brandsAreInclusive) &&
        Objects.equals(this.campaigns, createOrUpdateCalculatorConfigurationRequest.campaigns) &&
        Objects.equals(this.cardIssuers, createOrUpdateCalculatorConfigurationRequest.cardIssuers) &&
        Objects.equals(this.categories, createOrUpdateCalculatorConfigurationRequest.categories) &&
        Objects.equals(this.categoriesAreInclusive, createOrUpdateCalculatorConfigurationRequest.categoriesAreInclusive) &&
        Objects.equals(this.clusterExpressions, createOrUpdateCalculatorConfigurationRequest.clusterExpressions) &&
        Objects.equals(this.collections, createOrUpdateCalculatorConfigurationRequest.collections) &&
        Objects.equals(this.collections1BuyTogether, createOrUpdateCalculatorConfigurationRequest.collections1BuyTogether) &&
        Objects.equals(this.collections2BuyTogether, createOrUpdateCalculatorConfigurationRequest.collections2BuyTogether) &&
        Objects.equals(this.collectionsIsInclusive, createOrUpdateCalculatorConfigurationRequest.collectionsIsInclusive) &&
        Objects.equals(this.compareListPriceAndPrice, createOrUpdateCalculatorConfigurationRequest.compareListPriceAndPrice) &&
        Objects.equals(this.conditionsIds, createOrUpdateCalculatorConfigurationRequest.conditionsIds) &&
        Objects.equals(this.coupon, createOrUpdateCalculatorConfigurationRequest.coupon) &&
        Objects.equals(this.cumulative, createOrUpdateCalculatorConfigurationRequest.cumulative) &&
        Objects.equals(this.daysAgoOfPurchases, createOrUpdateCalculatorConfigurationRequest.daysAgoOfPurchases) &&
        Objects.equals(this.description, createOrUpdateCalculatorConfigurationRequest.description) &&
        Objects.equals(this.disableDeal, createOrUpdateCalculatorConfigurationRequest.disableDeal) &&
        Objects.equals(this.discountType, createOrUpdateCalculatorConfigurationRequest.discountType) &&
        Objects.equals(this.enableBuyTogetherPerSku, createOrUpdateCalculatorConfigurationRequest.enableBuyTogetherPerSku) &&
        Objects.equals(this.endDateUtc, createOrUpdateCalculatorConfigurationRequest.endDateUtc) &&
        Objects.equals(this.firstBuyIsProfileOptimistic, createOrUpdateCalculatorConfigurationRequest.firstBuyIsProfileOptimistic) &&
        Objects.equals(this.giftListTypes, createOrUpdateCalculatorConfigurationRequest.giftListTypes) &&
        Objects.equals(this.idCalculatorConfiguration, createOrUpdateCalculatorConfigurationRequest.idCalculatorConfiguration) &&
        Objects.equals(this.idSeller, createOrUpdateCalculatorConfigurationRequest.idSeller) &&
        Objects.equals(this.idSellerIsInclusive, createOrUpdateCalculatorConfigurationRequest.idSellerIsInclusive) &&
        Objects.equals(this.idsSalesChannel, createOrUpdateCalculatorConfigurationRequest.idsSalesChannel) &&
        Objects.equals(this.installment, createOrUpdateCalculatorConfigurationRequest.installment) &&
        Objects.equals(this.isActive, createOrUpdateCalculatorConfigurationRequest.isActive) &&
        Objects.equals(this.isArchived, createOrUpdateCalculatorConfigurationRequest.isArchived) &&
        Objects.equals(this.isDifferentListPriceAndPrice, createOrUpdateCalculatorConfigurationRequest.isDifferentListPriceAndPrice) &&
        Objects.equals(this.isFeatured, createOrUpdateCalculatorConfigurationRequest.isFeatured) &&
        Objects.equals(this.isFirstBuy, createOrUpdateCalculatorConfigurationRequest.isFirstBuy) &&
        Objects.equals(this.isMinMaxInstallments, createOrUpdateCalculatorConfigurationRequest.isMinMaxInstallments) &&
        Objects.equals(this.isSlaSelected, createOrUpdateCalculatorConfigurationRequest.isSlaSelected) &&
        Objects.equals(this.itemMaxPrice, createOrUpdateCalculatorConfigurationRequest.itemMaxPrice) &&
        Objects.equals(this.itemMinPrice, createOrUpdateCalculatorConfigurationRequest.itemMinPrice) &&
        Objects.equals(this.lastModified, createOrUpdateCalculatorConfigurationRequest.lastModified) &&
        Objects.equals(this.listSku1BuyTogether, createOrUpdateCalculatorConfigurationRequest.listSku1BuyTogether) &&
        Objects.equals(this.listSku2BuyTogether, createOrUpdateCalculatorConfigurationRequest.listSku2BuyTogether) &&
        Objects.equals(this.marketingTags, createOrUpdateCalculatorConfigurationRequest.marketingTags) &&
        Objects.equals(this.marketingTagsAreNotInclusive, createOrUpdateCalculatorConfigurationRequest.marketingTagsAreNotInclusive) &&
        Objects.equals(this.maxInstallment, createOrUpdateCalculatorConfigurationRequest.maxInstallment) &&
        Objects.equals(this.maxNumberOfAffectedItems, createOrUpdateCalculatorConfigurationRequest.maxNumberOfAffectedItems) &&
        Objects.equals(this.maxNumberOfAffectedItemsGroupKey, createOrUpdateCalculatorConfigurationRequest.maxNumberOfAffectedItemsGroupKey) &&
        Objects.equals(this.maxPricesPerItems, createOrUpdateCalculatorConfigurationRequest.maxPricesPerItems) &&
        Objects.equals(this.maxUsage, createOrUpdateCalculatorConfigurationRequest.maxUsage) &&
        Objects.equals(this.maxUsagePerClient, createOrUpdateCalculatorConfigurationRequest.maxUsagePerClient) &&
        Objects.equals(this.maximumUnitPriceDiscount, createOrUpdateCalculatorConfigurationRequest.maximumUnitPriceDiscount) &&
        Objects.equals(this.merchants, createOrUpdateCalculatorConfigurationRequest.merchants) &&
        Objects.equals(this.minInstallment, createOrUpdateCalculatorConfigurationRequest.minInstallment) &&
        Objects.equals(this.minimumQuantityBuyTogether, createOrUpdateCalculatorConfigurationRequest.minimumQuantityBuyTogether) &&
        Objects.equals(this.multipleUsePerClient, createOrUpdateCalculatorConfigurationRequest.multipleUsePerClient) &&
        Objects.equals(this.name, createOrUpdateCalculatorConfigurationRequest.name) &&
        Objects.equals(this.newOffset, createOrUpdateCalculatorConfigurationRequest.newOffset) &&
        Objects.equals(this.nominalDiscountValue, createOrUpdateCalculatorConfigurationRequest.nominalDiscountValue) &&
        Objects.equals(this.nominalRewardValue, createOrUpdateCalculatorConfigurationRequest.nominalRewardValue) &&
        Objects.equals(this.nominalShippingDiscountValue, createOrUpdateCalculatorConfigurationRequest.nominalShippingDiscountValue) &&
        Objects.equals(this.nominalTax, createOrUpdateCalculatorConfigurationRequest.nominalTax) &&
        Objects.equals(this.offset, createOrUpdateCalculatorConfigurationRequest.offset) &&
        Objects.equals(this.orderStatusRewardValue, createOrUpdateCalculatorConfigurationRequest.orderStatusRewardValue) &&
        Objects.equals(this.origin, createOrUpdateCalculatorConfigurationRequest.origin) &&
        Objects.equals(this.paymentsMethods, createOrUpdateCalculatorConfigurationRequest.paymentsMethods) &&
        Objects.equals(this.paymentsRules, createOrUpdateCalculatorConfigurationRequest.paymentsRules) &&
        Objects.equals(this.percentualDiscountValue, createOrUpdateCalculatorConfigurationRequest.percentualDiscountValue) &&
        Objects.equals(this.percentualDiscountValueList, createOrUpdateCalculatorConfigurationRequest.percentualDiscountValueList) &&
        Objects.equals(this.percentualDiscountValueList1, createOrUpdateCalculatorConfigurationRequest.percentualDiscountValueList1) &&
        Objects.equals(this.percentualDiscountValueList2, createOrUpdateCalculatorConfigurationRequest.percentualDiscountValueList2) &&
        Objects.equals(this.percentualRewardValue, createOrUpdateCalculatorConfigurationRequest.percentualRewardValue) &&
        Objects.equals(this.percentualShippingDiscountValue, createOrUpdateCalculatorConfigurationRequest.percentualShippingDiscountValue) &&
        Objects.equals(this.percentualTax, createOrUpdateCalculatorConfigurationRequest.percentualTax) &&
        Objects.equals(this.products, createOrUpdateCalculatorConfigurationRequest.products) &&
        Objects.equals(this.productsAreInclusive, createOrUpdateCalculatorConfigurationRequest.productsAreInclusive) &&
        Objects.equals(this.productsSpecifications, createOrUpdateCalculatorConfigurationRequest.productsSpecifications) &&
        Objects.equals(this.quantityToAffectBuyTogether, createOrUpdateCalculatorConfigurationRequest.quantityToAffectBuyTogether) &&
        Objects.equals(this.rebatePercentualDiscountValue, createOrUpdateCalculatorConfigurationRequest.rebatePercentualDiscountValue) &&
        Objects.equals(this.restrictionsBins, createOrUpdateCalculatorConfigurationRequest.restrictionsBins) &&
        Objects.equals(this.shippingPercentualTax, createOrUpdateCalculatorConfigurationRequest.shippingPercentualTax) &&
        Objects.equals(this.shouldDistributeDiscountAmongMatchedItems, createOrUpdateCalculatorConfigurationRequest.shouldDistributeDiscountAmongMatchedItems) &&
        Objects.equals(this.skus, createOrUpdateCalculatorConfigurationRequest.skus) &&
        Objects.equals(this.skusAreInclusive, createOrUpdateCalculatorConfigurationRequest.skusAreInclusive) &&
        Objects.equals(this.skusGift, createOrUpdateCalculatorConfigurationRequest.skusGift) &&
        Objects.equals(this.slasIds, createOrUpdateCalculatorConfigurationRequest.slasIds) &&
        Objects.equals(this.stores, createOrUpdateCalculatorConfigurationRequest.stores) &&
        Objects.equals(this.storesAreInclusive, createOrUpdateCalculatorConfigurationRequest.storesAreInclusive) &&
        Objects.equals(this.totalValueCeling, createOrUpdateCalculatorConfigurationRequest.totalValueCeling) &&
        Objects.equals(this.totalValueFloor, createOrUpdateCalculatorConfigurationRequest.totalValueFloor) &&
        Objects.equals(this.totalValueIncludeAllItems, createOrUpdateCalculatorConfigurationRequest.totalValueIncludeAllItems) &&
        Objects.equals(this.totalValueMode, createOrUpdateCalculatorConfigurationRequest.totalValueMode) &&
        Objects.equals(this.totalValuePurchase, createOrUpdateCalculatorConfigurationRequest.totalValuePurchase) &&
        Objects.equals(this.type, createOrUpdateCalculatorConfigurationRequest.type) &&
        Objects.equals(this.useNewProgressiveAlgorithm, createOrUpdateCalculatorConfigurationRequest.useNewProgressiveAlgorithm) &&
        Objects.equals(this.utmCampaign, createOrUpdateCalculatorConfigurationRequest.utmCampaign) &&
        Objects.equals(this.utmSource, createOrUpdateCalculatorConfigurationRequest.utmSource) &&
        Objects.equals(this.zipCodeRanges, createOrUpdateCalculatorConfigurationRequest.zipCodeRanges);
  }

  @Override
  public int hashCode() {
    return Objects.hash(absoluteShippingDiscountValue, accumulateWithManualPrice, activateGiftsMultiplier, activeDaysOfWeek, affiliates, applyToAllShippings, areSalesChannelIdsExclusive, beginDateUtc, brands, brandsAreInclusive, campaigns, cardIssuers, categories, categoriesAreInclusive, clusterExpressions, collections, collections1BuyTogether, collections2BuyTogether, collectionsIsInclusive, compareListPriceAndPrice, conditionsIds, coupon, cumulative, daysAgoOfPurchases, description, disableDeal, discountType, enableBuyTogetherPerSku, endDateUtc, firstBuyIsProfileOptimistic, giftListTypes, idCalculatorConfiguration, idSeller, idSellerIsInclusive, idsSalesChannel, installment, isActive, isArchived, isDifferentListPriceAndPrice, isFeatured, isFirstBuy, isMinMaxInstallments, isSlaSelected, itemMaxPrice, itemMinPrice, lastModified, listSku1BuyTogether, listSku2BuyTogether, marketingTags, marketingTagsAreNotInclusive, maxInstallment, maxNumberOfAffectedItems, maxNumberOfAffectedItemsGroupKey, maxPricesPerItems, maxUsage, maxUsagePerClient, maximumUnitPriceDiscount, merchants, minInstallment, minimumQuantityBuyTogether, multipleUsePerClient, name, newOffset, nominalDiscountValue, nominalRewardValue, nominalShippingDiscountValue, nominalTax, offset, orderStatusRewardValue, origin, paymentsMethods, paymentsRules, percentualDiscountValue, percentualDiscountValueList, percentualDiscountValueList1, percentualDiscountValueList2, percentualRewardValue, percentualShippingDiscountValue, percentualTax, products, productsAreInclusive, productsSpecifications, quantityToAffectBuyTogether, rebatePercentualDiscountValue, restrictionsBins, shippingPercentualTax, shouldDistributeDiscountAmongMatchedItems, skus, skusAreInclusive, skusGift, slasIds, stores, storesAreInclusive, totalValueCeling, totalValueFloor, totalValueIncludeAllItems, totalValueMode, totalValuePurchase, type, useNewProgressiveAlgorithm, utmCampaign, utmSource, zipCodeRanges);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateOrUpdateCalculatorConfigurationRequest {\n");
    sb.append("    absoluteShippingDiscountValue: ").append(toIndentedString(absoluteShippingDiscountValue)).append("\n");
    sb.append("    accumulateWithManualPrice: ").append(toIndentedString(accumulateWithManualPrice)).append("\n");
    sb.append("    activateGiftsMultiplier: ").append(toIndentedString(activateGiftsMultiplier)).append("\n");
    sb.append("    activeDaysOfWeek: ").append(toIndentedString(activeDaysOfWeek)).append("\n");
    sb.append("    affiliates: ").append(toIndentedString(affiliates)).append("\n");
    sb.append("    applyToAllShippings: ").append(toIndentedString(applyToAllShippings)).append("\n");
    sb.append("    areSalesChannelIdsExclusive: ").append(toIndentedString(areSalesChannelIdsExclusive)).append("\n");
    sb.append("    beginDateUtc: ").append(toIndentedString(beginDateUtc)).append("\n");
    sb.append("    brands: ").append(toIndentedString(brands)).append("\n");
    sb.append("    brandsAreInclusive: ").append(toIndentedString(brandsAreInclusive)).append("\n");
    sb.append("    campaigns: ").append(toIndentedString(campaigns)).append("\n");
    sb.append("    cardIssuers: ").append(toIndentedString(cardIssuers)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    categoriesAreInclusive: ").append(toIndentedString(categoriesAreInclusive)).append("\n");
    sb.append("    clusterExpressions: ").append(toIndentedString(clusterExpressions)).append("\n");
    sb.append("    collections: ").append(toIndentedString(collections)).append("\n");
    sb.append("    collections1BuyTogether: ").append(toIndentedString(collections1BuyTogether)).append("\n");
    sb.append("    collections2BuyTogether: ").append(toIndentedString(collections2BuyTogether)).append("\n");
    sb.append("    collectionsIsInclusive: ").append(toIndentedString(collectionsIsInclusive)).append("\n");
    sb.append("    compareListPriceAndPrice: ").append(toIndentedString(compareListPriceAndPrice)).append("\n");
    sb.append("    conditionsIds: ").append(toIndentedString(conditionsIds)).append("\n");
    sb.append("    coupon: ").append(toIndentedString(coupon)).append("\n");
    sb.append("    cumulative: ").append(toIndentedString(cumulative)).append("\n");
    sb.append("    daysAgoOfPurchases: ").append(toIndentedString(daysAgoOfPurchases)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    disableDeal: ").append(toIndentedString(disableDeal)).append("\n");
    sb.append("    discountType: ").append(toIndentedString(discountType)).append("\n");
    sb.append("    enableBuyTogetherPerSku: ").append(toIndentedString(enableBuyTogetherPerSku)).append("\n");
    sb.append("    endDateUtc: ").append(toIndentedString(endDateUtc)).append("\n");
    sb.append("    firstBuyIsProfileOptimistic: ").append(toIndentedString(firstBuyIsProfileOptimistic)).append("\n");
    sb.append("    giftListTypes: ").append(toIndentedString(giftListTypes)).append("\n");
    sb.append("    idCalculatorConfiguration: ").append(toIndentedString(idCalculatorConfiguration)).append("\n");
    sb.append("    idSeller: ").append(toIndentedString(idSeller)).append("\n");
    sb.append("    idSellerIsInclusive: ").append(toIndentedString(idSellerIsInclusive)).append("\n");
    sb.append("    idsSalesChannel: ").append(toIndentedString(idsSalesChannel)).append("\n");
    sb.append("    installment: ").append(toIndentedString(installment)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    isArchived: ").append(toIndentedString(isArchived)).append("\n");
    sb.append("    isDifferentListPriceAndPrice: ").append(toIndentedString(isDifferentListPriceAndPrice)).append("\n");
    sb.append("    isFeatured: ").append(toIndentedString(isFeatured)).append("\n");
    sb.append("    isFirstBuy: ").append(toIndentedString(isFirstBuy)).append("\n");
    sb.append("    isMinMaxInstallments: ").append(toIndentedString(isMinMaxInstallments)).append("\n");
    sb.append("    isSlaSelected: ").append(toIndentedString(isSlaSelected)).append("\n");
    sb.append("    itemMaxPrice: ").append(toIndentedString(itemMaxPrice)).append("\n");
    sb.append("    itemMinPrice: ").append(toIndentedString(itemMinPrice)).append("\n");
    sb.append("    lastModified: ").append(toIndentedString(lastModified)).append("\n");
    sb.append("    listSku1BuyTogether: ").append(toIndentedString(listSku1BuyTogether)).append("\n");
    sb.append("    listSku2BuyTogether: ").append(toIndentedString(listSku2BuyTogether)).append("\n");
    sb.append("    marketingTags: ").append(toIndentedString(marketingTags)).append("\n");
    sb.append("    marketingTagsAreNotInclusive: ").append(toIndentedString(marketingTagsAreNotInclusive)).append("\n");
    sb.append("    maxInstallment: ").append(toIndentedString(maxInstallment)).append("\n");
    sb.append("    maxNumberOfAffectedItems: ").append(toIndentedString(maxNumberOfAffectedItems)).append("\n");
    sb.append("    maxNumberOfAffectedItemsGroupKey: ").append(toIndentedString(maxNumberOfAffectedItemsGroupKey)).append("\n");
    sb.append("    maxPricesPerItems: ").append(toIndentedString(maxPricesPerItems)).append("\n");
    sb.append("    maxUsage: ").append(toIndentedString(maxUsage)).append("\n");
    sb.append("    maxUsagePerClient: ").append(toIndentedString(maxUsagePerClient)).append("\n");
    sb.append("    maximumUnitPriceDiscount: ").append(toIndentedString(maximumUnitPriceDiscount)).append("\n");
    sb.append("    merchants: ").append(toIndentedString(merchants)).append("\n");
    sb.append("    minInstallment: ").append(toIndentedString(minInstallment)).append("\n");
    sb.append("    minimumQuantityBuyTogether: ").append(toIndentedString(minimumQuantityBuyTogether)).append("\n");
    sb.append("    multipleUsePerClient: ").append(toIndentedString(multipleUsePerClient)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    newOffset: ").append(toIndentedString(newOffset)).append("\n");
    sb.append("    nominalDiscountValue: ").append(toIndentedString(nominalDiscountValue)).append("\n");
    sb.append("    nominalRewardValue: ").append(toIndentedString(nominalRewardValue)).append("\n");
    sb.append("    nominalShippingDiscountValue: ").append(toIndentedString(nominalShippingDiscountValue)).append("\n");
    sb.append("    nominalTax: ").append(toIndentedString(nominalTax)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    orderStatusRewardValue: ").append(toIndentedString(orderStatusRewardValue)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    paymentsMethods: ").append(toIndentedString(paymentsMethods)).append("\n");
    sb.append("    paymentsRules: ").append(toIndentedString(paymentsRules)).append("\n");
    sb.append("    percentualDiscountValue: ").append(toIndentedString(percentualDiscountValue)).append("\n");
    sb.append("    percentualDiscountValueList: ").append(toIndentedString(percentualDiscountValueList)).append("\n");
    sb.append("    percentualDiscountValueList1: ").append(toIndentedString(percentualDiscountValueList1)).append("\n");
    sb.append("    percentualDiscountValueList2: ").append(toIndentedString(percentualDiscountValueList2)).append("\n");
    sb.append("    percentualRewardValue: ").append(toIndentedString(percentualRewardValue)).append("\n");
    sb.append("    percentualShippingDiscountValue: ").append(toIndentedString(percentualShippingDiscountValue)).append("\n");
    sb.append("    percentualTax: ").append(toIndentedString(percentualTax)).append("\n");
    sb.append("    products: ").append(toIndentedString(products)).append("\n");
    sb.append("    productsAreInclusive: ").append(toIndentedString(productsAreInclusive)).append("\n");
    sb.append("    productsSpecifications: ").append(toIndentedString(productsSpecifications)).append("\n");
    sb.append("    quantityToAffectBuyTogether: ").append(toIndentedString(quantityToAffectBuyTogether)).append("\n");
    sb.append("    rebatePercentualDiscountValue: ").append(toIndentedString(rebatePercentualDiscountValue)).append("\n");
    sb.append("    restrictionsBins: ").append(toIndentedString(restrictionsBins)).append("\n");
    sb.append("    shippingPercentualTax: ").append(toIndentedString(shippingPercentualTax)).append("\n");
    sb.append("    shouldDistributeDiscountAmongMatchedItems: ").append(toIndentedString(shouldDistributeDiscountAmongMatchedItems)).append("\n");
    sb.append("    skus: ").append(toIndentedString(skus)).append("\n");
    sb.append("    skusAreInclusive: ").append(toIndentedString(skusAreInclusive)).append("\n");
    sb.append("    skusGift: ").append(toIndentedString(skusGift)).append("\n");
    sb.append("    slasIds: ").append(toIndentedString(slasIds)).append("\n");
    sb.append("    stores: ").append(toIndentedString(stores)).append("\n");
    sb.append("    storesAreInclusive: ").append(toIndentedString(storesAreInclusive)).append("\n");
    sb.append("    totalValueCeling: ").append(toIndentedString(totalValueCeling)).append("\n");
    sb.append("    totalValueFloor: ").append(toIndentedString(totalValueFloor)).append("\n");
    sb.append("    totalValueIncludeAllItems: ").append(toIndentedString(totalValueIncludeAllItems)).append("\n");
    sb.append("    totalValueMode: ").append(toIndentedString(totalValueMode)).append("\n");
    sb.append("    totalValuePurchase: ").append(toIndentedString(totalValuePurchase)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    useNewProgressiveAlgorithm: ").append(toIndentedString(useNewProgressiveAlgorithm)).append("\n");
    sb.append("    utmCampaign: ").append(toIndentedString(utmCampaign)).append("\n");
    sb.append("    utmSource: ").append(toIndentedString(utmSource)).append("\n");
    sb.append("    zipCodeRanges: ").append(toIndentedString(zipCodeRanges)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("absoluteShippingDiscountValue");
    openapiFields.add("accumulateWithManualPrice");
    openapiFields.add("activateGiftsMultiplier");
    openapiFields.add("activeDaysOfWeek");
    openapiFields.add("affiliates");
    openapiFields.add("applyToAllShippings");
    openapiFields.add("areSalesChannelIdsExclusive");
    openapiFields.add("beginDateUtc");
    openapiFields.add("brands");
    openapiFields.add("brandsAreInclusive");
    openapiFields.add("campaigns");
    openapiFields.add("cardIssuers");
    openapiFields.add("categories");
    openapiFields.add("categoriesAreInclusive");
    openapiFields.add("clusterExpressions");
    openapiFields.add("collections");
    openapiFields.add("collections1BuyTogether");
    openapiFields.add("collections2BuyTogether");
    openapiFields.add("collectionsIsInclusive");
    openapiFields.add("compareListPriceAndPrice");
    openapiFields.add("conditionsIds");
    openapiFields.add("coupon");
    openapiFields.add("cumulative");
    openapiFields.add("daysAgoOfPurchases");
    openapiFields.add("description");
    openapiFields.add("disableDeal");
    openapiFields.add("discountType");
    openapiFields.add("enableBuyTogetherPerSku");
    openapiFields.add("endDateUtc");
    openapiFields.add("firstBuyIsProfileOptimistic");
    openapiFields.add("giftListTypes");
    openapiFields.add("idCalculatorConfiguration");
    openapiFields.add("idSeller");
    openapiFields.add("idSellerIsInclusive");
    openapiFields.add("idsSalesChannel");
    openapiFields.add("installment");
    openapiFields.add("isActive");
    openapiFields.add("isArchived");
    openapiFields.add("isDifferentListPriceAndPrice");
    openapiFields.add("isFeatured");
    openapiFields.add("isFirstBuy");
    openapiFields.add("isMinMaxInstallments");
    openapiFields.add("isSlaSelected");
    openapiFields.add("itemMaxPrice");
    openapiFields.add("itemMinPrice");
    openapiFields.add("lastModified");
    openapiFields.add("listSku1BuyTogether");
    openapiFields.add("listSku2BuyTogether");
    openapiFields.add("marketingTags");
    openapiFields.add("marketingTagsAreNotInclusive");
    openapiFields.add("maxInstallment");
    openapiFields.add("maxNumberOfAffectedItems");
    openapiFields.add("maxNumberOfAffectedItemsGroupKey");
    openapiFields.add("maxPricesPerItems");
    openapiFields.add("maxUsage");
    openapiFields.add("maxUsagePerClient");
    openapiFields.add("maximumUnitPriceDiscount");
    openapiFields.add("merchants");
    openapiFields.add("minInstallment");
    openapiFields.add("minimumQuantityBuyTogether");
    openapiFields.add("multipleUsePerClient");
    openapiFields.add("name");
    openapiFields.add("newOffset");
    openapiFields.add("nominalDiscountValue");
    openapiFields.add("nominalRewardValue");
    openapiFields.add("nominalShippingDiscountValue");
    openapiFields.add("nominalTax");
    openapiFields.add("offset");
    openapiFields.add("orderStatusRewardValue");
    openapiFields.add("origin");
    openapiFields.add("paymentsMethods");
    openapiFields.add("paymentsRules");
    openapiFields.add("percentualDiscountValue");
    openapiFields.add("percentualDiscountValueList");
    openapiFields.add("percentualDiscountValueList1");
    openapiFields.add("percentualDiscountValueList2");
    openapiFields.add("percentualRewardValue");
    openapiFields.add("percentualShippingDiscountValue");
    openapiFields.add("percentualTax");
    openapiFields.add("products");
    openapiFields.add("productsAreInclusive");
    openapiFields.add("productsSpecifications");
    openapiFields.add("quantityToAffectBuyTogether");
    openapiFields.add("rebatePercentualDiscountValue");
    openapiFields.add("restrictionsBins");
    openapiFields.add("shippingPercentualTax");
    openapiFields.add("shouldDistributeDiscountAmongMatchedItems");
    openapiFields.add("skus");
    openapiFields.add("skusAreInclusive");
    openapiFields.add("skusGift");
    openapiFields.add("slasIds");
    openapiFields.add("stores");
    openapiFields.add("storesAreInclusive");
    openapiFields.add("totalValueCeling");
    openapiFields.add("totalValueFloor");
    openapiFields.add("totalValueIncludeAllItems");
    openapiFields.add("totalValueMode");
    openapiFields.add("totalValuePurchase");
    openapiFields.add("type");
    openapiFields.add("useNewProgressiveAlgorithm");
    openapiFields.add("utmCampaign");
    openapiFields.add("utmSource");
    openapiFields.add("zipCodeRanges");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateOrUpdateCalculatorConfigurationRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateOrUpdateCalculatorConfigurationRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateOrUpdateCalculatorConfigurationRequest is not found in the empty JSON string", CreateOrUpdateCalculatorConfigurationRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateOrUpdateCalculatorConfigurationRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateOrUpdateCalculatorConfigurationRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("activeDaysOfWeek") != null && !jsonObj.get("activeDaysOfWeek").isJsonNull() && !jsonObj.get("activeDaysOfWeek").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `activeDaysOfWeek` to be an array in the JSON string but got `%s`", jsonObj.get("activeDaysOfWeek").toString()));
      }
      if (jsonObj.get("affiliates") != null && !jsonObj.get("affiliates").isJsonNull()) {
        JsonArray jsonArrayaffiliates = jsonObj.getAsJsonArray("affiliates");
        if (jsonArrayaffiliates != null) {
          // ensure the json data is an array
          if (!jsonObj.get("affiliates").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `affiliates` to be an array in the JSON string but got `%s`", jsonObj.get("affiliates").toString()));
          }

          // validate the optional field `affiliates` (array)
          for (int i = 0; i < jsonArrayaffiliates.size(); i++) {
            CreateOrUpdateCalculatorConfigurationRequestAffiliatesInner.validateJsonElement(jsonArrayaffiliates.get(i));
          };
        }
      }
      if ((jsonObj.get("beginDateUtc") != null && !jsonObj.get("beginDateUtc").isJsonNull()) && !jsonObj.get("beginDateUtc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `beginDateUtc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("beginDateUtc").toString()));
      }
      if (jsonObj.get("brands") != null && !jsonObj.get("brands").isJsonNull()) {
        JsonArray jsonArraybrands = jsonObj.getAsJsonArray("brands");
        if (jsonArraybrands != null) {
          // ensure the json data is an array
          if (!jsonObj.get("brands").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `brands` to be an array in the JSON string but got `%s`", jsonObj.get("brands").toString()));
          }

          // validate the optional field `brands` (array)
          for (int i = 0; i < jsonArraybrands.size(); i++) {
            CreateOrUpdateCalculatorConfigurationRequestBrandsInner.validateJsonElement(jsonArraybrands.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("campaigns") != null && !jsonObj.get("campaigns").isJsonNull() && !jsonObj.get("campaigns").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `campaigns` to be an array in the JSON string but got `%s`", jsonObj.get("campaigns").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("cardIssuers") != null && !jsonObj.get("cardIssuers").isJsonNull() && !jsonObj.get("cardIssuers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `cardIssuers` to be an array in the JSON string but got `%s`", jsonObj.get("cardIssuers").toString()));
      }
      if (jsonObj.get("categories") != null && !jsonObj.get("categories").isJsonNull()) {
        JsonArray jsonArraycategories = jsonObj.getAsJsonArray("categories");
        if (jsonArraycategories != null) {
          // ensure the json data is an array
          if (!jsonObj.get("categories").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `categories` to be an array in the JSON string but got `%s`", jsonObj.get("categories").toString()));
          }

          // validate the optional field `categories` (array)
          for (int i = 0; i < jsonArraycategories.size(); i++) {
            CreateOrUpdateCalculatorConfigurationRequestCategoriesInner.validateJsonElement(jsonArraycategories.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("clusterExpressions") != null && !jsonObj.get("clusterExpressions").isJsonNull() && !jsonObj.get("clusterExpressions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `clusterExpressions` to be an array in the JSON string but got `%s`", jsonObj.get("clusterExpressions").toString()));
      }
      if (jsonObj.get("collections") != null && !jsonObj.get("collections").isJsonNull()) {
        JsonArray jsonArraycollections = jsonObj.getAsJsonArray("collections");
        if (jsonArraycollections != null) {
          // ensure the json data is an array
          if (!jsonObj.get("collections").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `collections` to be an array in the JSON string but got `%s`", jsonObj.get("collections").toString()));
          }

          // validate the optional field `collections` (array)
          for (int i = 0; i < jsonArraycollections.size(); i++) {
            CreateOrUpdateCalculatorConfigurationRequestCollectionsInner.validateJsonElement(jsonArraycollections.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("collections1BuyTogether") != null && !jsonObj.get("collections1BuyTogether").isJsonNull() && !jsonObj.get("collections1BuyTogether").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `collections1BuyTogether` to be an array in the JSON string but got `%s`", jsonObj.get("collections1BuyTogether").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("collections2BuyTogether") != null && !jsonObj.get("collections2BuyTogether").isJsonNull() && !jsonObj.get("collections2BuyTogether").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `collections2BuyTogether` to be an array in the JSON string but got `%s`", jsonObj.get("collections2BuyTogether").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("conditionsIds") != null && !jsonObj.get("conditionsIds").isJsonNull() && !jsonObj.get("conditionsIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `conditionsIds` to be an array in the JSON string but got `%s`", jsonObj.get("conditionsIds").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("coupon") != null && !jsonObj.get("coupon").isJsonNull() && !jsonObj.get("coupon").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `coupon` to be an array in the JSON string but got `%s`", jsonObj.get("coupon").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("discountType") != null && !jsonObj.get("discountType").isJsonNull()) && !jsonObj.get("discountType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `discountType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("discountType").toString()));
      }
      if ((jsonObj.get("endDateUtc") != null && !jsonObj.get("endDateUtc").isJsonNull()) && !jsonObj.get("endDateUtc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endDateUtc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endDateUtc").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("giftListTypes") != null && !jsonObj.get("giftListTypes").isJsonNull() && !jsonObj.get("giftListTypes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `giftListTypes` to be an array in the JSON string but got `%s`", jsonObj.get("giftListTypes").toString()));
      }
      if ((jsonObj.get("idCalculatorConfiguration") != null && !jsonObj.get("idCalculatorConfiguration").isJsonNull()) && !jsonObj.get("idCalculatorConfiguration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `idCalculatorConfiguration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("idCalculatorConfiguration").toString()));
      }
      if ((jsonObj.get("idSeller") != null && !jsonObj.get("idSeller").isJsonNull()) && !jsonObj.get("idSeller").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `idSeller` to be a primitive type in the JSON string but got `%s`", jsonObj.get("idSeller").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("idsSalesChannel") != null && !jsonObj.get("idsSalesChannel").isJsonNull() && !jsonObj.get("idsSalesChannel").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `idsSalesChannel` to be an array in the JSON string but got `%s`", jsonObj.get("idsSalesChannel").toString()));
      }
      if ((jsonObj.get("lastModified") != null && !jsonObj.get("lastModified").isJsonNull()) && !jsonObj.get("lastModified").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastModified` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastModified").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("listSku1BuyTogether") != null && !jsonObj.get("listSku1BuyTogether").isJsonNull() && !jsonObj.get("listSku1BuyTogether").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `listSku1BuyTogether` to be an array in the JSON string but got `%s`", jsonObj.get("listSku1BuyTogether").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("listSku2BuyTogether") != null && !jsonObj.get("listSku2BuyTogether").isJsonNull() && !jsonObj.get("listSku2BuyTogether").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `listSku2BuyTogether` to be an array in the JSON string but got `%s`", jsonObj.get("listSku2BuyTogether").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("marketingTags") != null && !jsonObj.get("marketingTags").isJsonNull() && !jsonObj.get("marketingTags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `marketingTags` to be an array in the JSON string but got `%s`", jsonObj.get("marketingTags").toString()));
      }
      if ((jsonObj.get("maxNumberOfAffectedItemsGroupKey") != null && !jsonObj.get("maxNumberOfAffectedItemsGroupKey").isJsonNull()) && !jsonObj.get("maxNumberOfAffectedItemsGroupKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maxNumberOfAffectedItemsGroupKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maxNumberOfAffectedItemsGroupKey").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("maxPricesPerItems") != null && !jsonObj.get("maxPricesPerItems").isJsonNull() && !jsonObj.get("maxPricesPerItems").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `maxPricesPerItems` to be an array in the JSON string but got `%s`", jsonObj.get("maxPricesPerItems").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("merchants") != null && !jsonObj.get("merchants").isJsonNull() && !jsonObj.get("merchants").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchants` to be an array in the JSON string but got `%s`", jsonObj.get("merchants").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("orderStatusRewardValue") != null && !jsonObj.get("orderStatusRewardValue").isJsonNull()) && !jsonObj.get("orderStatusRewardValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderStatusRewardValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderStatusRewardValue").toString()));
      }
      if ((jsonObj.get("origin") != null && !jsonObj.get("origin").isJsonNull()) && !jsonObj.get("origin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `origin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("origin").toString()));
      }
      if (jsonObj.get("paymentsMethods") != null && !jsonObj.get("paymentsMethods").isJsonNull()) {
        JsonArray jsonArraypaymentsMethods = jsonObj.getAsJsonArray("paymentsMethods");
        if (jsonArraypaymentsMethods != null) {
          // ensure the json data is an array
          if (!jsonObj.get("paymentsMethods").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `paymentsMethods` to be an array in the JSON string but got `%s`", jsonObj.get("paymentsMethods").toString()));
          }

          // validate the optional field `paymentsMethods` (array)
          for (int i = 0; i < jsonArraypaymentsMethods.size(); i++) {
            CreateOrUpdateCalculatorConfigurationRequestPaymentsMethodsInner.validateJsonElement(jsonArraypaymentsMethods.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("paymentsRules") != null && !jsonObj.get("paymentsRules").isJsonNull() && !jsonObj.get("paymentsRules").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `paymentsRules` to be an array in the JSON string but got `%s`", jsonObj.get("paymentsRules").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("percentualDiscountValueList") != null && !jsonObj.get("percentualDiscountValueList").isJsonNull() && !jsonObj.get("percentualDiscountValueList").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `percentualDiscountValueList` to be an array in the JSON string but got `%s`", jsonObj.get("percentualDiscountValueList").toString()));
      }
      if (jsonObj.get("products") != null && !jsonObj.get("products").isJsonNull()) {
        JsonArray jsonArrayproducts = jsonObj.getAsJsonArray("products");
        if (jsonArrayproducts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("products").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `products` to be an array in the JSON string but got `%s`", jsonObj.get("products").toString()));
          }

          // validate the optional field `products` (array)
          for (int i = 0; i < jsonArrayproducts.size(); i++) {
            CreateOrUpdateCalculatorConfigurationRequestProductsInner.validateJsonElement(jsonArrayproducts.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("productsSpecifications") != null && !jsonObj.get("productsSpecifications").isJsonNull() && !jsonObj.get("productsSpecifications").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `productsSpecifications` to be an array in the JSON string but got `%s`", jsonObj.get("productsSpecifications").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("restrictionsBins") != null && !jsonObj.get("restrictionsBins").isJsonNull() && !jsonObj.get("restrictionsBins").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `restrictionsBins` to be an array in the JSON string but got `%s`", jsonObj.get("restrictionsBins").toString()));
      }
      if (jsonObj.get("skus") != null && !jsonObj.get("skus").isJsonNull()) {
        JsonArray jsonArrayskus = jsonObj.getAsJsonArray("skus");
        if (jsonArrayskus != null) {
          // ensure the json data is an array
          if (!jsonObj.get("skus").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `skus` to be an array in the JSON string but got `%s`", jsonObj.get("skus").toString()));
          }

          // validate the optional field `skus` (array)
          for (int i = 0; i < jsonArrayskus.size(); i++) {
            CreateOrUpdateCalculatorConfigurationRequestSkusInner.validateJsonElement(jsonArrayskus.get(i));
          };
        }
      }
      // validate the optional field `skusGift`
      if (jsonObj.get("skusGift") != null && !jsonObj.get("skusGift").isJsonNull()) {
        CreateOrUpdateCalculatorConfigurationRequestSkusGift.validateJsonElement(jsonObj.get("skusGift"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("slasIds") != null && !jsonObj.get("slasIds").isJsonNull() && !jsonObj.get("slasIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `slasIds` to be an array in the JSON string but got `%s`", jsonObj.get("slasIds").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("stores") != null && !jsonObj.get("stores").isJsonNull() && !jsonObj.get("stores").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `stores` to be an array in the JSON string but got `%s`", jsonObj.get("stores").toString()));
      }
      if ((jsonObj.get("totalValueMode") != null && !jsonObj.get("totalValueMode").isJsonNull()) && !jsonObj.get("totalValueMode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `totalValueMode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("totalValueMode").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if ((jsonObj.get("utmCampaign") != null && !jsonObj.get("utmCampaign").isJsonNull()) && !jsonObj.get("utmCampaign").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `utmCampaign` to be a primitive type in the JSON string but got `%s`", jsonObj.get("utmCampaign").toString()));
      }
      if ((jsonObj.get("utmSource") != null && !jsonObj.get("utmSource").isJsonNull()) && !jsonObj.get("utmSource").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `utmSource` to be a primitive type in the JSON string but got `%s`", jsonObj.get("utmSource").toString()));
      }
      if (jsonObj.get("zipCodeRanges") != null && !jsonObj.get("zipCodeRanges").isJsonNull()) {
        JsonArray jsonArrayzipCodeRanges = jsonObj.getAsJsonArray("zipCodeRanges");
        if (jsonArrayzipCodeRanges != null) {
          // ensure the json data is an array
          if (!jsonObj.get("zipCodeRanges").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `zipCodeRanges` to be an array in the JSON string but got `%s`", jsonObj.get("zipCodeRanges").toString()));
          }

          // validate the optional field `zipCodeRanges` (array)
          for (int i = 0; i < jsonArrayzipCodeRanges.size(); i++) {
            CreateOrUpdateCalculatorConfigurationRequestZipCodeRangesInner.validateJsonElement(jsonArrayzipCodeRanges.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateOrUpdateCalculatorConfigurationRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateOrUpdateCalculatorConfigurationRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateOrUpdateCalculatorConfigurationRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateOrUpdateCalculatorConfigurationRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateOrUpdateCalculatorConfigurationRequest>() {
           @Override
           public void write(JsonWriter out, CreateOrUpdateCalculatorConfigurationRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateOrUpdateCalculatorConfigurationRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateOrUpdateCalculatorConfigurationRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateOrUpdateCalculatorConfigurationRequest
   * @throws IOException if the JSON string is invalid with respect to CreateOrUpdateCalculatorConfigurationRequest
   */
  public static CreateOrUpdateCalculatorConfigurationRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateOrUpdateCalculatorConfigurationRequest.class);
  }

  /**
   * Convert an instance of CreateOrUpdateCalculatorConfigurationRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

