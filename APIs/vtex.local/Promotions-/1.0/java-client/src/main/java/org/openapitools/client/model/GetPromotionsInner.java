/*
 * Promotions & Taxes API
 *   > Check the new [Promotions onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/promotions-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Promotions and is organized by focusing on the developer's journey.     The Promotions & Taxes API allows you to manage and retrieve all promotions, coupons and tax rules from your VTEX store.     ## Index     ### Coupons   `POST` [Create multiple coupons](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-multiple-coupons)   `POST` [Create coupon](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-coupon)   `GET` [Get coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/getbycouponcode)   `GET` [Get archived coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/getarchivedbycouponcode)   `POST` [Archive coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/archivebycouponcode)   `POST` [Update coupon](https://developers.vtex.com/vtex-rest-api/reference/update)   `GET` [Get all coupons](https://developers.vtex.com/vtex-rest-api/reference/getall)   `POST` [Coupon Massive Generation](https://developers.vtex.com/vtex-rest-api/reference/massivegeneration)   `GET` [Get coupon usage](https://developers.vtex.com/vtex-rest-api/reference/getusage)   `POST` [Unarchive coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/unarchivebycouponcode)     ### Promotions and Taxes   `GET` [Get All Promotions](https://developers.vtex.com/vtex-rest-api/reference/getallbenefits)   `GET` [Get All Taxes](https://developers.vtex.com/vtex-rest-api/reference/getalltaxes)   `GET` [Get Promotion or Tax By ID](https://developers.vtex.com/vtex-rest-api/reference/getcalculatorconfigurationbyid)   `POST` [Create or Update Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/createorupdatecalculatorconfiguration)   `POST` [Create Multiple SKU Promotion](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-import-calculatorconfiguration)   `PUT` [Update Multiple SKU Promotion](https://developers.vtex.com/vtex-rest-api/reference/put_api-rnb-pvt-import-calculatorconfiguration-promotionid)   `POST` [Archive Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/archivepromotion-1)   `POST` [Unarchive Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/unarchivepromotion-1)   `GET` [List archived Promotions](https://developers.vtex.com/vtex-rest-api/reference/getarchivedpromotions)   `GET` [List archived Taxes](https://developers.vtex.com/vtex-rest-api/reference/getarchivedtaxes)       ### Campaign Audiences   `GET` [Get campaign audience configuration](https://developers.vtex.com/vtex-rest-api/reference/getcampaignconfiguration)   `POST` [Create campaign audience](https://developers.vtex.com/vtex-rest-api/reference/setcampaignconfiguration)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GetPromotionsInnerScope;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Object with information about a promotion.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:56:03.993078-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetPromotionsInner {
  public static final String SERIALIZED_NAME_CAMPAIGNS = "Campaigns";
  @SerializedName(SERIALIZED_NAME_CAMPAIGNS)
  private List<String> campaigns = new ArrayList<>();

  public static final String SERIALIZED_NAME_ACTIVATE_GIFTS_MULTIPLIER = "activateGiftsMultiplier";
  @SerializedName(SERIALIZED_NAME_ACTIVATE_GIFTS_MULTIPLIER)
  private Boolean activateGiftsMultiplier;

  public static final String SERIALIZED_NAME_ARE_SALES_CHANNEL_IDS_EXCLUSIVE = "areSalesChannelIdsExclusive";
  @SerializedName(SERIALIZED_NAME_ARE_SALES_CHANNEL_IDS_EXCLUSIVE)
  private Boolean areSalesChannelIdsExclusive;

  public static final String SERIALIZED_NAME_BEGIN_DATE = "beginDate";
  @SerializedName(SERIALIZED_NAME_BEGIN_DATE)
  private String beginDate;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private String endDate;

  public static final String SERIALIZED_NAME_HAS_MAX_PRICE_PER_ITEM = "hasMaxPricePerItem";
  @SerializedName(SERIALIZED_NAME_HAS_MAX_PRICE_PER_ITEM)
  private Boolean hasMaxPricePerItem;

  public static final String SERIALIZED_NAME_ID_CALCULATOR_CONFIGURATION = "idCalculatorConfiguration";
  @SerializedName(SERIALIZED_NAME_ID_CALCULATOR_CONFIGURATION)
  private String idCalculatorConfiguration;

  public static final String SERIALIZED_NAME_IDS_SALES_CHANNEL = "idsSalesChannel";
  @SerializedName(SERIALIZED_NAME_IDS_SALES_CHANNEL)
  private List<String> idsSalesChannel = new ArrayList<>();

  public static final String SERIALIZED_NAME_IS_ACTIVE = "isActive";
  @SerializedName(SERIALIZED_NAME_IS_ACTIVE)
  private Boolean isActive;

  public static final String SERIALIZED_NAME_IS_ARCHIVED = "isArchived";
  @SerializedName(SERIALIZED_NAME_IS_ARCHIVED)
  private Boolean isArchived;

  public static final String SERIALIZED_NAME_IS_TAX = "isTax";
  @SerializedName(SERIALIZED_NAME_IS_TAX)
  private Boolean isTax;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_UTC = "lastModifiedUtc";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_UTC)
  private String lastModifiedUtc;

  public static final String SERIALIZED_NAME_MAX_USAGE = "maxUsage";
  @SerializedName(SERIALIZED_NAME_MAX_USAGE)
  private BigDecimal maxUsage;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PERCENTUAL_TAX = "percentualTax";
  @SerializedName(SERIALIZED_NAME_PERCENTUAL_TAX)
  private BigDecimal percentualTax;

  public static final String SERIALIZED_NAME_SCOPE = "scope";
  @SerializedName(SERIALIZED_NAME_SCOPE)
  private GetPromotionsInnerScope scope;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_UTM_CAMPAIN = "utmCampain";
  @SerializedName(SERIALIZED_NAME_UTM_CAMPAIN)
  private String utmCampain;

  public static final String SERIALIZED_NAME_UTM_SOURCE = "utmSource";
  @SerializedName(SERIALIZED_NAME_UTM_SOURCE)
  private String utmSource;

  public static final String SERIALIZED_NAME_UTMI_CAMPAIGN = "utmiCampaign";
  @SerializedName(SERIALIZED_NAME_UTMI_CAMPAIGN)
  private String utmiCampaign;

  public GetPromotionsInner() {
  }

  public GetPromotionsInner campaigns(List<String> campaigns) {
    this.campaigns = campaigns;
    return this;
  }

  public GetPromotionsInner addCampaignsItem(String campaignsItem) {
    if (this.campaigns == null) {
      this.campaigns = new ArrayList<>();
    }
    this.campaigns.add(campaignsItem);
    return this;
  }

  /**
   * Array with campaign audiences that activate this promotion.
   * @return campaigns
   */
  @javax.annotation.Nullable
  public List<String> getCampaigns() {
    return campaigns;
  }

  public void setCampaigns(List<String> campaigns) {
    this.campaigns = campaigns;
  }


  public GetPromotionsInner activateGiftsMultiplier(Boolean activateGiftsMultiplier) {
    this.activateGiftsMultiplier = activateGiftsMultiplier;
    return this;
  }

  /**
   * If set as &#x60;true&#x60;, it activates gifts Multiplier.
   * @return activateGiftsMultiplier
   */
  @javax.annotation.Nullable
  public Boolean getActivateGiftsMultiplier() {
    return activateGiftsMultiplier;
  }

  public void setActivateGiftsMultiplier(Boolean activateGiftsMultiplier) {
    this.activateGiftsMultiplier = activateGiftsMultiplier;
  }


  public GetPromotionsInner areSalesChannelIdsExclusive(Boolean areSalesChannelIdsExclusive) {
    this.areSalesChannelIdsExclusive = areSalesChannelIdsExclusive;
    return this;
  }

  /**
   * If set to &#x60;false&#x60;, this promotion will be applied to any trade policies present on the &#x60;idsSalesChannel&#x60; field. If set to &#x60;true&#x60;, trade policies present on that field will make this promotion not to be applied.
   * @return areSalesChannelIdsExclusive
   */
  @javax.annotation.Nullable
  public Boolean getAreSalesChannelIdsExclusive() {
    return areSalesChannelIdsExclusive;
  }

  public void setAreSalesChannelIdsExclusive(Boolean areSalesChannelIdsExclusive) {
    this.areSalesChannelIdsExclusive = areSalesChannelIdsExclusive;
  }


  public GetPromotionsInner beginDate(String beginDate) {
    this.beginDate = beginDate;
    return this;
  }

  /**
   * Promotion Begin Date (UTC).
   * @return beginDate
   */
  @javax.annotation.Nullable
  public String getBeginDate() {
    return beginDate;
  }

  public void setBeginDate(String beginDate) {
    this.beginDate = beginDate;
  }


  public GetPromotionsInner description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Promotion internal description.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GetPromotionsInner endDate(String endDate) {
    this.endDate = endDate;
    return this;
  }

  /**
   * Promotion End Date (UTC).
   * @return endDate
   */
  @javax.annotation.Nullable
  public String getEndDate() {
    return endDate;
  }

  public void setEndDate(String endDate) {
    this.endDate = endDate;
  }


  public GetPromotionsInner hasMaxPricePerItem(Boolean hasMaxPricePerItem) {
    this.hasMaxPricePerItem = hasMaxPricePerItem;
    return this;
  }

  /**
   * Defines if there is a maximum price per item.
   * @return hasMaxPricePerItem
   */
  @javax.annotation.Nullable
  public Boolean getHasMaxPricePerItem() {
    return hasMaxPricePerItem;
  }

  public void setHasMaxPricePerItem(Boolean hasMaxPricePerItem) {
    this.hasMaxPricePerItem = hasMaxPricePerItem;
  }


  public GetPromotionsInner idCalculatorConfiguration(String idCalculatorConfiguration) {
    this.idCalculatorConfiguration = idCalculatorConfiguration;
    return this;
  }

  /**
   * Promotion ID.
   * @return idCalculatorConfiguration
   */
  @javax.annotation.Nullable
  public String getIdCalculatorConfiguration() {
    return idCalculatorConfiguration;
  }

  public void setIdCalculatorConfiguration(String idCalculatorConfiguration) {
    this.idCalculatorConfiguration = idCalculatorConfiguration;
  }


  public GetPromotionsInner idsSalesChannel(List<String> idsSalesChannel) {
    this.idsSalesChannel = idsSalesChannel;
    return this;
  }

  public GetPromotionsInner addIdsSalesChannelItem(String idsSalesChannelItem) {
    if (this.idsSalesChannel == null) {
      this.idsSalesChannel = new ArrayList<>();
    }
    this.idsSalesChannel.add(idsSalesChannelItem);
    return this;
  }

  /**
   * List of Trade Policies that activate this promotion.
   * @return idsSalesChannel
   */
  @javax.annotation.Nullable
  public List<String> getIdsSalesChannel() {
    return idsSalesChannel;
  }

  public void setIdsSalesChannel(List<String> idsSalesChannel) {
    this.idsSalesChannel = idsSalesChannel;
  }


  public GetPromotionsInner isActive(Boolean isActive) {
    this.isActive = isActive;
    return this;
  }

  /**
   * If set as &#x60;true&#x60; the promotion is activated. If set as &#x60;false&#x60; the promotion is deactivated.
   * @return isActive
   */
  @javax.annotation.Nullable
  public Boolean getIsActive() {
    return isActive;
  }

  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }


  public GetPromotionsInner isArchived(Boolean isArchived) {
    this.isArchived = isArchived;
    return this;
  }

  /**
   * If set as &#x60;true&#x60; the Promotion is archived. If set as &#x60;false&#x60; the Promotion is not archived.
   * @return isArchived
   */
  @javax.annotation.Nullable
  public Boolean getIsArchived() {
    return isArchived;
  }

  public void setIsArchived(Boolean isArchived) {
    this.isArchived = isArchived;
  }


  public GetPromotionsInner isTax(Boolean isTax) {
    this.isTax = isTax;
    return this;
  }

  /**
   * Defines if it is a tax.
   * @return isTax
   */
  @javax.annotation.Nullable
  public Boolean getIsTax() {
    return isTax;
  }

  public void setIsTax(Boolean isTax) {
    this.isTax = isTax;
  }


  public GetPromotionsInner lastModifiedUtc(String lastModifiedUtc) {
    this.lastModifiedUtc = lastModifiedUtc;
    return this;
  }

  /**
   * Date and time when the promotion was last modified (UTC).
   * @return lastModifiedUtc
   */
  @javax.annotation.Nullable
  public String getLastModifiedUtc() {
    return lastModifiedUtc;
  }

  public void setLastModifiedUtc(String lastModifiedUtc) {
    this.lastModifiedUtc = lastModifiedUtc;
  }


  public GetPromotionsInner maxUsage(BigDecimal maxUsage) {
    this.maxUsage = maxUsage;
    return this;
  }

  /**
   * Defines how many times the promotion can be used.
   * @return maxUsage
   */
  @javax.annotation.Nullable
  public BigDecimal getMaxUsage() {
    return maxUsage;
  }

  public void setMaxUsage(BigDecimal maxUsage) {
    this.maxUsage = maxUsage;
  }


  public GetPromotionsInner name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Promotion Name.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GetPromotionsInner percentualTax(BigDecimal percentualTax) {
    this.percentualTax = percentualTax;
    return this;
  }

  /**
   * Percentual tax applied.
   * @return percentualTax
   */
  @javax.annotation.Nullable
  public BigDecimal getPercentualTax() {
    return percentualTax;
  }

  public void setPercentualTax(BigDecimal percentualTax) {
    this.percentualTax = percentualTax;
  }


  public GetPromotionsInner scope(GetPromotionsInnerScope scope) {
    this.scope = scope;
    return this;
  }

  /**
   * Get scope
   * @return scope
   */
  @javax.annotation.Nullable
  public GetPromotionsInnerScope getScope() {
    return scope;
  }

  public void setScope(GetPromotionsInnerScope scope) {
    this.scope = scope;
  }


  public GetPromotionsInner status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Status of the promotion.
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public GetPromotionsInner type(String type) {
    this.type = type;
    return this;
  }

  /**
   * Defines the type of promotion.
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  public GetPromotionsInner utmCampain(String utmCampain) {
    this.utmCampain = utmCampain;
    return this;
  }

  /**
   * utmCampaign code.
   * @return utmCampain
   */
  @javax.annotation.Nullable
  public String getUtmCampain() {
    return utmCampain;
  }

  public void setUtmCampain(String utmCampain) {
    this.utmCampain = utmCampain;
  }


  public GetPromotionsInner utmSource(String utmSource) {
    this.utmSource = utmSource;
    return this;
  }

  /**
   * utmSource code.
   * @return utmSource
   */
  @javax.annotation.Nullable
  public String getUtmSource() {
    return utmSource;
  }

  public void setUtmSource(String utmSource) {
    this.utmSource = utmSource;
  }


  public GetPromotionsInner utmiCampaign(String utmiCampaign) {
    this.utmiCampaign = utmiCampaign;
    return this;
  }

  /**
   * utmiCampaign code.
   * @return utmiCampaign
   */
  @javax.annotation.Nullable
  public String getUtmiCampaign() {
    return utmiCampaign;
  }

  public void setUtmiCampaign(String utmiCampaign) {
    this.utmiCampaign = utmiCampaign;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetPromotionsInner getPromotionsInner = (GetPromotionsInner) o;
    return Objects.equals(this.campaigns, getPromotionsInner.campaigns) &&
        Objects.equals(this.activateGiftsMultiplier, getPromotionsInner.activateGiftsMultiplier) &&
        Objects.equals(this.areSalesChannelIdsExclusive, getPromotionsInner.areSalesChannelIdsExclusive) &&
        Objects.equals(this.beginDate, getPromotionsInner.beginDate) &&
        Objects.equals(this.description, getPromotionsInner.description) &&
        Objects.equals(this.endDate, getPromotionsInner.endDate) &&
        Objects.equals(this.hasMaxPricePerItem, getPromotionsInner.hasMaxPricePerItem) &&
        Objects.equals(this.idCalculatorConfiguration, getPromotionsInner.idCalculatorConfiguration) &&
        Objects.equals(this.idsSalesChannel, getPromotionsInner.idsSalesChannel) &&
        Objects.equals(this.isActive, getPromotionsInner.isActive) &&
        Objects.equals(this.isArchived, getPromotionsInner.isArchived) &&
        Objects.equals(this.isTax, getPromotionsInner.isTax) &&
        Objects.equals(this.lastModifiedUtc, getPromotionsInner.lastModifiedUtc) &&
        Objects.equals(this.maxUsage, getPromotionsInner.maxUsage) &&
        Objects.equals(this.name, getPromotionsInner.name) &&
        Objects.equals(this.percentualTax, getPromotionsInner.percentualTax) &&
        Objects.equals(this.scope, getPromotionsInner.scope) &&
        Objects.equals(this.status, getPromotionsInner.status) &&
        Objects.equals(this.type, getPromotionsInner.type) &&
        Objects.equals(this.utmCampain, getPromotionsInner.utmCampain) &&
        Objects.equals(this.utmSource, getPromotionsInner.utmSource) &&
        Objects.equals(this.utmiCampaign, getPromotionsInner.utmiCampaign);
  }

  @Override
  public int hashCode() {
    return Objects.hash(campaigns, activateGiftsMultiplier, areSalesChannelIdsExclusive, beginDate, description, endDate, hasMaxPricePerItem, idCalculatorConfiguration, idsSalesChannel, isActive, isArchived, isTax, lastModifiedUtc, maxUsage, name, percentualTax, scope, status, type, utmCampain, utmSource, utmiCampaign);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetPromotionsInner {\n");
    sb.append("    campaigns: ").append(toIndentedString(campaigns)).append("\n");
    sb.append("    activateGiftsMultiplier: ").append(toIndentedString(activateGiftsMultiplier)).append("\n");
    sb.append("    areSalesChannelIdsExclusive: ").append(toIndentedString(areSalesChannelIdsExclusive)).append("\n");
    sb.append("    beginDate: ").append(toIndentedString(beginDate)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    hasMaxPricePerItem: ").append(toIndentedString(hasMaxPricePerItem)).append("\n");
    sb.append("    idCalculatorConfiguration: ").append(toIndentedString(idCalculatorConfiguration)).append("\n");
    sb.append("    idsSalesChannel: ").append(toIndentedString(idsSalesChannel)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    isArchived: ").append(toIndentedString(isArchived)).append("\n");
    sb.append("    isTax: ").append(toIndentedString(isTax)).append("\n");
    sb.append("    lastModifiedUtc: ").append(toIndentedString(lastModifiedUtc)).append("\n");
    sb.append("    maxUsage: ").append(toIndentedString(maxUsage)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    percentualTax: ").append(toIndentedString(percentualTax)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    utmCampain: ").append(toIndentedString(utmCampain)).append("\n");
    sb.append("    utmSource: ").append(toIndentedString(utmSource)).append("\n");
    sb.append("    utmiCampaign: ").append(toIndentedString(utmiCampaign)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Campaigns");
    openapiFields.add("activateGiftsMultiplier");
    openapiFields.add("areSalesChannelIdsExclusive");
    openapiFields.add("beginDate");
    openapiFields.add("description");
    openapiFields.add("endDate");
    openapiFields.add("hasMaxPricePerItem");
    openapiFields.add("idCalculatorConfiguration");
    openapiFields.add("idsSalesChannel");
    openapiFields.add("isActive");
    openapiFields.add("isArchived");
    openapiFields.add("isTax");
    openapiFields.add("lastModifiedUtc");
    openapiFields.add("maxUsage");
    openapiFields.add("name");
    openapiFields.add("percentualTax");
    openapiFields.add("scope");
    openapiFields.add("status");
    openapiFields.add("type");
    openapiFields.add("utmCampain");
    openapiFields.add("utmSource");
    openapiFields.add("utmiCampaign");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetPromotionsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetPromotionsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetPromotionsInner is not found in the empty JSON string", GetPromotionsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetPromotionsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetPromotionsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("Campaigns") != null && !jsonObj.get("Campaigns").isJsonNull() && !jsonObj.get("Campaigns").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `Campaigns` to be an array in the JSON string but got `%s`", jsonObj.get("Campaigns").toString()));
      }
      if ((jsonObj.get("beginDate") != null && !jsonObj.get("beginDate").isJsonNull()) && !jsonObj.get("beginDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `beginDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("beginDate").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("endDate") != null && !jsonObj.get("endDate").isJsonNull()) && !jsonObj.get("endDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endDate").toString()));
      }
      if ((jsonObj.get("idCalculatorConfiguration") != null && !jsonObj.get("idCalculatorConfiguration").isJsonNull()) && !jsonObj.get("idCalculatorConfiguration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `idCalculatorConfiguration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("idCalculatorConfiguration").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("idsSalesChannel") != null && !jsonObj.get("idsSalesChannel").isJsonNull() && !jsonObj.get("idsSalesChannel").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `idsSalesChannel` to be an array in the JSON string but got `%s`", jsonObj.get("idsSalesChannel").toString()));
      }
      if ((jsonObj.get("lastModifiedUtc") != null && !jsonObj.get("lastModifiedUtc").isJsonNull()) && !jsonObj.get("lastModifiedUtc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastModifiedUtc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastModifiedUtc").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `scope`
      if (jsonObj.get("scope") != null && !jsonObj.get("scope").isJsonNull()) {
        GetPromotionsInnerScope.validateJsonElement(jsonObj.get("scope"));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if ((jsonObj.get("utmCampain") != null && !jsonObj.get("utmCampain").isJsonNull()) && !jsonObj.get("utmCampain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `utmCampain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("utmCampain").toString()));
      }
      if ((jsonObj.get("utmSource") != null && !jsonObj.get("utmSource").isJsonNull()) && !jsonObj.get("utmSource").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `utmSource` to be a primitive type in the JSON string but got `%s`", jsonObj.get("utmSource").toString()));
      }
      if ((jsonObj.get("utmiCampaign") != null && !jsonObj.get("utmiCampaign").isJsonNull()) && !jsonObj.get("utmiCampaign").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `utmiCampaign` to be a primitive type in the JSON string but got `%s`", jsonObj.get("utmiCampaign").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetPromotionsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetPromotionsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetPromotionsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetPromotionsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<GetPromotionsInner>() {
           @Override
           public void write(JsonWriter out, GetPromotionsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetPromotionsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetPromotionsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetPromotionsInner
   * @throws IOException if the JSON string is invalid with respect to GetPromotionsInner
   */
  public static GetPromotionsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetPromotionsInner.class);
  }

  /**
   * Convert an instance of GetPromotionsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

