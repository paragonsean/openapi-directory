/*
 * Promotions & Taxes API
 *   > Check the new [Promotions onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/promotions-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Promotions and is organized by focusing on the developer's journey.     The Promotions & Taxes API allows you to manage and retrieve all promotions, coupons and tax rules from your VTEX store.     ## Index     ### Coupons   `POST` [Create multiple coupons](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-multiple-coupons)   `POST` [Create coupon](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-coupon)   `GET` [Get coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/getbycouponcode)   `GET` [Get archived coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/getarchivedbycouponcode)   `POST` [Archive coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/archivebycouponcode)   `POST` [Update coupon](https://developers.vtex.com/vtex-rest-api/reference/update)   `GET` [Get all coupons](https://developers.vtex.com/vtex-rest-api/reference/getall)   `POST` [Coupon Massive Generation](https://developers.vtex.com/vtex-rest-api/reference/massivegeneration)   `GET` [Get coupon usage](https://developers.vtex.com/vtex-rest-api/reference/getusage)   `POST` [Unarchive coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/unarchivebycouponcode)     ### Promotions and Taxes   `GET` [Get All Promotions](https://developers.vtex.com/vtex-rest-api/reference/getallbenefits)   `GET` [Get All Taxes](https://developers.vtex.com/vtex-rest-api/reference/getalltaxes)   `GET` [Get Promotion or Tax By ID](https://developers.vtex.com/vtex-rest-api/reference/getcalculatorconfigurationbyid)   `POST` [Create or Update Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/createorupdatecalculatorconfiguration)   `POST` [Create Multiple SKU Promotion](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-import-calculatorconfiguration)   `PUT` [Update Multiple SKU Promotion](https://developers.vtex.com/vtex-rest-api/reference/put_api-rnb-pvt-import-calculatorconfiguration-promotionid)   `POST` [Archive Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/archivepromotion-1)   `POST` [Unarchive Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/unarchivepromotion-1)   `GET` [List archived Promotions](https://developers.vtex.com/vtex-rest-api/reference/getarchivedpromotions)   `GET` [List archived Taxes](https://developers.vtex.com/vtex-rest-api/reference/getarchivedtaxes)       ### Campaign Audiences   `GET` [Get campaign audience configuration](https://developers.vtex.com/vtex-rest-api/reference/getcampaignconfiguration)   `POST` [Create campaign audience](https://developers.vtex.com/vtex-rest-api/reference/setcampaignconfiguration)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Getcampaignaudiences200ResponseInner;
import org.openapitools.client.model.Getcampaignconfiguration200Response;
import org.openapitools.client.model.Setcampaignconfiguration200Response;
import org.openapitools.client.model.SetcampaignconfigurationRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CampaignAudiencesApi
 */
@Disabled
public class CampaignAudiencesApiTest {

    private final CampaignAudiencesApi api = new CampaignAudiencesApi();

    /**
     * Get all campaign audiences
     *
     * Retrieves a list of all campaign audiences and their respective configurations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getcampaignaudiencesTest() throws ApiException {
        String contentType = null;
        String accept = null;
        List<Getcampaignaudiences200ResponseInner> response = api.getcampaignaudiences(contentType, accept);
        // TODO: test validations
    }

    /**
     * Get campaign audience configuration
     *
     * Retrieves a specific campaign audience configuration by its ID. This API uses the campaign ID, not the campaign name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getcampaignconfigurationTest() throws ApiException {
        String contentType = null;
        String accept = null;
        String campaignId = null;
        Getcampaignconfiguration200Response response = api.getcampaignconfiguration(contentType, accept, campaignId);
        // TODO: test validations
    }

    /**
     * Create campaign audience
     *
     * Creates a new campaign audience.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setcampaignconfigurationTest() throws ApiException {
        String contentType = null;
        String accept = null;
        SetcampaignconfigurationRequest setcampaignconfigurationRequest = null;
        Setcampaignconfiguration200Response response = api.setcampaignconfiguration(contentType, accept, setcampaignconfigurationRequest);
        // TODO: test validations
    }

}
