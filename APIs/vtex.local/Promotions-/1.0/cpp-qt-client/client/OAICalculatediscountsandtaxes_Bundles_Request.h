/**
 * Promotions & Taxes API
 *   > Check the new [Promotions onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/promotions-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Promotions and is organized by focusing on the developer's journey.     The Promotions & Taxes API allows you to manage and retrieve all promotions, coupons and tax rules from your VTEX store.     ## Index     ### Coupons   `POST` [Create multiple coupons](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-multiple-coupons)   `POST` [Create coupon](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-coupon)   `GET` [Get coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/getbycouponcode)   `GET` [Get archived coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/getarchivedbycouponcode)   `POST` [Archive coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/archivebycouponcode)   `POST` [Update coupon](https://developers.vtex.com/vtex-rest-api/reference/update)   `GET` [Get all coupons](https://developers.vtex.com/vtex-rest-api/reference/getall)   `POST` [Coupon Massive Generation](https://developers.vtex.com/vtex-rest-api/reference/massivegeneration)   `GET` [Get coupon usage](https://developers.vtex.com/vtex-rest-api/reference/getusage)   `POST` [Unarchive coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/unarchivebycouponcode)     ### Promotions and Taxes   `GET` [Get All Promotions](https://developers.vtex.com/vtex-rest-api/reference/getallbenefits)   `GET` [Get All Taxes](https://developers.vtex.com/vtex-rest-api/reference/getalltaxes)   `GET` [Get Promotion or Tax By ID](https://developers.vtex.com/vtex-rest-api/reference/getcalculatorconfigurationbyid)   `POST` [Create or Update Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/createorupdatecalculatorconfiguration)   `POST` [Create Multiple SKU Promotion](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-import-calculatorconfiguration)   `PUT` [Update Multiple SKU Promotion](https://developers.vtex.com/vtex-rest-api/reference/put_api-rnb-pvt-import-calculatorconfiguration-promotionid)   `POST` [Archive Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/archivepromotion-1)   `POST` [Unarchive Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/unarchivepromotion-1)   `GET` [List archived Promotions](https://developers.vtex.com/vtex-rest-api/reference/getarchivedpromotions)   `GET` [List archived Taxes](https://developers.vtex.com/vtex-rest-api/reference/getarchivedtaxes)       ### Campaign Audiences   `GET` [Get campaign audience configuration](https://developers.vtex.com/vtex-rest-api/reference/getcampaignconfiguration)   `POST` [Create campaign audience](https://developers.vtex.com/vtex-rest-api/reference/setcampaignconfiguration)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICalculatediscountsandtaxes_Bundles_Request.h
 *
 * 
 */

#ifndef OAICalculatediscountsandtaxes_Bundles_Request_H
#define OAICalculatediscountsandtaxes_Bundles_Request_H

#include <QJsonObject>

#include "OAIItem.h"
#include "OAIParam.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIItem;
class OAIParam;

class OAICalculatediscountsandtaxes_Bundles_Request : public OAIObject {
public:
    OAICalculatediscountsandtaxes_Bundles_Request();
    OAICalculatediscountsandtaxes_Bundles_Request(QString json);
    ~OAICalculatediscountsandtaxes_Bundles_Request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isIsShoppingCart() const;
    void setIsShoppingCart(const bool &is_shopping_cart);
    bool is_is_shopping_cart_Set() const;
    bool is_is_shopping_cart_Valid() const;

    QList<OAIItem> getItems() const;
    void setItems(const QList<OAIItem> &items);
    bool is_items_Set() const;
    bool is_items_Valid() const;

    QString getOrigin() const;
    void setOrigin(const QString &origin);
    bool is_origin_Set() const;
    bool is_origin_Valid() const;

    QList<OAIParam> getParams() const;
    void setParams(const QList<OAIParam> &params);
    bool is_params_Set() const;
    bool is_params_Valid() const;

    QString getProfileId() const;
    void setProfileId(const QString &profile_id);
    bool is_profile_id_Set() const;
    bool is_profile_id_Valid() const;

    QString getSalesChannel() const;
    void setSalesChannel(const QString &sales_channel);
    bool is_sales_channel_Set() const;
    bool is_sales_channel_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_is_shopping_cart;
    bool m_is_shopping_cart_isSet;
    bool m_is_shopping_cart_isValid;

    QList<OAIItem> m_items;
    bool m_items_isSet;
    bool m_items_isValid;

    QString m_origin;
    bool m_origin_isSet;
    bool m_origin_isValid;

    QList<OAIParam> m_params;
    bool m_params_isSet;
    bool m_params_isValid;

    QString m_profile_id;
    bool m_profile_id_isSet;
    bool m_profile_id_isValid;

    QString m_sales_channel;
    bool m_sales_channel_isSet;
    bool m_sales_channel_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICalculatediscountsandtaxes_Bundles_Request)

#endif // OAICalculatediscountsandtaxes_Bundles_Request_H
