/**
 * Promotions & Taxes API
 *   > Check the new [Promotions onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/promotions-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Promotions and is organized by focusing on the developer's journey.     The Promotions & Taxes API allows you to manage and retrieve all promotions, coupons and tax rules from your VTEX store.     ## Index     ### Coupons   `POST` [Create multiple coupons](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-multiple-coupons)   `POST` [Create coupon](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-coupon)   `GET` [Get coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/getbycouponcode)   `GET` [Get archived coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/getarchivedbycouponcode)   `POST` [Archive coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/archivebycouponcode)   `POST` [Update coupon](https://developers.vtex.com/vtex-rest-api/reference/update)   `GET` [Get all coupons](https://developers.vtex.com/vtex-rest-api/reference/getall)   `POST` [Coupon Massive Generation](https://developers.vtex.com/vtex-rest-api/reference/massivegeneration)   `GET` [Get coupon usage](https://developers.vtex.com/vtex-rest-api/reference/getusage)   `POST` [Unarchive coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/unarchivebycouponcode)     ### Promotions and Taxes   `GET` [Get All Promotions](https://developers.vtex.com/vtex-rest-api/reference/getallbenefits)   `GET` [Get All Taxes](https://developers.vtex.com/vtex-rest-api/reference/getalltaxes)   `GET` [Get Promotion or Tax By ID](https://developers.vtex.com/vtex-rest-api/reference/getcalculatorconfigurationbyid)   `POST` [Create or Update Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/createorupdatecalculatorconfiguration)   `POST` [Create Multiple SKU Promotion](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-import-calculatorconfiguration)   `PUT` [Update Multiple SKU Promotion](https://developers.vtex.com/vtex-rest-api/reference/put_api-rnb-pvt-import-calculatorconfiguration-promotionid)   `POST` [Archive Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/archivepromotion-1)   `POST` [Unarchive Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/unarchivepromotion-1)   `GET` [List archived Promotions](https://developers.vtex.com/vtex-rest-api/reference/getarchivedpromotions)   `GET` [List archived Taxes](https://developers.vtex.com/vtex-rest-api/reference/getarchivedtaxes)       ### Campaign Audiences   `GET` [Get campaign audience configuration](https://developers.vtex.com/vtex-rest-api/reference/getcampaignconfiguration)   `POST` [Create campaign audience](https://developers.vtex.com/vtex-rest-api/reference/setcampaignconfiguration)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAI_api_rnb_pvt_coupon__post_request.h
 *
 * 
 */

#ifndef OAI_api_rnb_pvt_coupon__post_request_H
#define OAI_api_rnb_pvt_coupon__post_request_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAI_api_rnb_pvt_coupon__post_request : public OAIObject {
public:
    OAI_api_rnb_pvt_coupon__post_request();
    OAI_api_rnb_pvt_coupon__post_request(QString json);
    ~OAI_api_rnb_pvt_coupon__post_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCouponCode() const;
    void setCouponCode(const QString &coupon_code);
    bool is_coupon_code_Set() const;
    bool is_coupon_code_Valid() const;

    QString getExpirationIntervalPerUse() const;
    void setExpirationIntervalPerUse(const QString &expiration_interval_per_use);
    bool is_expiration_interval_per_use_Set() const;
    bool is_expiration_interval_per_use_Valid() const;

    qint32 getMaxItemsPerClient() const;
    void setMaxItemsPerClient(const qint32 &max_items_per_client);
    bool is_max_items_per_client_Set() const;
    bool is_max_items_per_client_Valid() const;

    QString getUtmCampaign() const;
    void setUtmCampaign(const QString &utm_campaign);
    bool is_utm_campaign_Set() const;
    bool is_utm_campaign_Valid() const;

    QString getUtmSource() const;
    void setUtmSource(const QString &utm_source);
    bool is_utm_source_Set() const;
    bool is_utm_source_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_coupon_code;
    bool m_coupon_code_isSet;
    bool m_coupon_code_isValid;

    QString m_expiration_interval_per_use;
    bool m_expiration_interval_per_use_isSet;
    bool m_expiration_interval_per_use_isValid;

    qint32 m_max_items_per_client;
    bool m_max_items_per_client_isSet;
    bool m_max_items_per_client_isValid;

    QString m_utm_campaign;
    bool m_utm_campaign_isSet;
    bool m_utm_campaign_isValid;

    QString m_utm_source;
    bool m_utm_source_isSet;
    bool m_utm_source_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAI_api_rnb_pvt_coupon__post_request)

#endif // OAI_api_rnb_pvt_coupon__post_request_H
