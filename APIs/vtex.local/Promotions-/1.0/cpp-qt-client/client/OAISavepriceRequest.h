/**
 * Promotions & Taxes API
 *   > Check the new [Promotions onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/promotions-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Promotions and is organized by focusing on the developer's journey.     The Promotions & Taxes API allows you to manage and retrieve all promotions, coupons and tax rules from your VTEX store.     ## Index     ### Coupons   `POST` [Create multiple coupons](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-multiple-coupons)   `POST` [Create coupon](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-coupon)   `GET` [Get coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/getbycouponcode)   `GET` [Get archived coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/getarchivedbycouponcode)   `POST` [Archive coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/archivebycouponcode)   `POST` [Update coupon](https://developers.vtex.com/vtex-rest-api/reference/update)   `GET` [Get all coupons](https://developers.vtex.com/vtex-rest-api/reference/getall)   `POST` [Coupon Massive Generation](https://developers.vtex.com/vtex-rest-api/reference/massivegeneration)   `GET` [Get coupon usage](https://developers.vtex.com/vtex-rest-api/reference/getusage)   `POST` [Unarchive coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/unarchivebycouponcode)     ### Promotions and Taxes   `GET` [Get All Promotions](https://developers.vtex.com/vtex-rest-api/reference/getallbenefits)   `GET` [Get All Taxes](https://developers.vtex.com/vtex-rest-api/reference/getalltaxes)   `GET` [Get Promotion or Tax By ID](https://developers.vtex.com/vtex-rest-api/reference/getcalculatorconfigurationbyid)   `POST` [Create or Update Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/createorupdatecalculatorconfiguration)   `POST` [Create Multiple SKU Promotion](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-import-calculatorconfiguration)   `PUT` [Update Multiple SKU Promotion](https://developers.vtex.com/vtex-rest-api/reference/put_api-rnb-pvt-import-calculatorconfiguration-promotionid)   `POST` [Archive Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/archivepromotion-1)   `POST` [Unarchive Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/unarchivepromotion-1)   `GET` [List archived Promotions](https://developers.vtex.com/vtex-rest-api/reference/getarchivedpromotions)   `GET` [List archived Taxes](https://developers.vtex.com/vtex-rest-api/reference/getarchivedtaxes)       ### Campaign Audiences   `GET` [Get campaign audience configuration](https://developers.vtex.com/vtex-rest-api/reference/getcampaignconfiguration)   `POST` [Create campaign audience](https://developers.vtex.com/vtex-rest-api/reference/setcampaignconfiguration)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISavepriceRequest.h
 *
 * 
 */

#ifndef OAISavepriceRequest_H
#define OAISavepriceRequest_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISavepriceRequest : public OAIObject {
public:
    OAISavepriceRequest();
    OAISavepriceRequest(QString json);
    ~OAISavepriceRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getItemId() const;
    void setItemId(const qint32 &item_id);
    bool is_item_id_Set() const;
    bool is_item_id_Valid() const;

    qint32 getListPrice() const;
    void setListPrice(const qint32 &list_price);
    bool is_list_price_Set() const;
    bool is_list_price_Valid() const;

    qint32 getPrice() const;
    void setPrice(const qint32 &price);
    bool is_price_Set() const;
    bool is_price_Valid() const;

    qint32 getSalesChannel() const;
    void setSalesChannel(const qint32 &sales_channel);
    bool is_sales_channel_Set() const;
    bool is_sales_channel_Valid() const;

    qint32 getSellerId() const;
    void setSellerId(const qint32 &seller_id);
    bool is_seller_id_Set() const;
    bool is_seller_id_Valid() const;

    QString getValidFrom() const;
    void setValidFrom(const QString &valid_from);
    bool is_valid_from_Set() const;
    bool is_valid_from_Valid() const;

    QString getValidTo() const;
    void setValidTo(const QString &valid_to);
    bool is_valid_to_Set() const;
    bool is_valid_to_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_item_id;
    bool m_item_id_isSet;
    bool m_item_id_isValid;

    qint32 m_list_price;
    bool m_list_price_isSet;
    bool m_list_price_isValid;

    qint32 m_price;
    bool m_price_isSet;
    bool m_price_isValid;

    qint32 m_sales_channel;
    bool m_sales_channel_isSet;
    bool m_sales_channel_isValid;

    qint32 m_seller_id;
    bool m_seller_id_isSet;
    bool m_seller_id_isValid;

    QString m_valid_from;
    bool m_valid_from_isSet;
    bool m_valid_from_isValid;

    QString m_valid_to;
    bool m_valid_to_isSet;
    bool m_valid_to_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISavepriceRequest)

#endif // OAISavepriceRequest_H
