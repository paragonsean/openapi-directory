/**
 * Promotions & Taxes API
 *   > Check the new [Promotions onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/promotions-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Promotions and is organized by focusing on the developer's journey.     The Promotions & Taxes API allows you to manage and retrieve all promotions, coupons and tax rules from your VTEX store.     ## Index     ### Coupons   `POST` [Create multiple coupons](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-multiple-coupons)   `POST` [Create coupon](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-coupon)   `GET` [Get coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/getbycouponcode)   `GET` [Get archived coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/getarchivedbycouponcode)   `POST` [Archive coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/archivebycouponcode)   `POST` [Update coupon](https://developers.vtex.com/vtex-rest-api/reference/update)   `GET` [Get all coupons](https://developers.vtex.com/vtex-rest-api/reference/getall)   `POST` [Coupon Massive Generation](https://developers.vtex.com/vtex-rest-api/reference/massivegeneration)   `GET` [Get coupon usage](https://developers.vtex.com/vtex-rest-api/reference/getusage)   `POST` [Unarchive coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/unarchivebycouponcode)     ### Promotions and Taxes   `GET` [Get All Promotions](https://developers.vtex.com/vtex-rest-api/reference/getallbenefits)   `GET` [Get All Taxes](https://developers.vtex.com/vtex-rest-api/reference/getalltaxes)   `GET` [Get Promotion or Tax By ID](https://developers.vtex.com/vtex-rest-api/reference/getcalculatorconfigurationbyid)   `POST` [Create or Update Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/createorupdatecalculatorconfiguration)   `POST` [Create Multiple SKU Promotion](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-import-calculatorconfiguration)   `PUT` [Update Multiple SKU Promotion](https://developers.vtex.com/vtex-rest-api/reference/put_api-rnb-pvt-import-calculatorconfiguration-promotionid)   `POST` [Archive Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/archivepromotion-1)   `POST` [Unarchive Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/unarchivepromotion-1)   `GET` [List archived Promotions](https://developers.vtex.com/vtex-rest-api/reference/getarchivedpromotions)   `GET` [List archived Taxes](https://developers.vtex.com/vtex-rest-api/reference/getarchivedtaxes)       ### Campaign Audiences   `GET` [Get campaign audience configuration](https://developers.vtex.com/vtex-rest-api/reference/getcampaignconfiguration)   `POST` [Create campaign audience](https://developers.vtex.com/vtex-rest-api/reference/setcampaignconfiguration)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetCalculatorConfigurationById_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetCalculatorConfigurationById_200_response::OAIGetCalculatorConfigurationById_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetCalculatorConfigurationById_200_response::OAIGetCalculatorConfigurationById_200_response() {
    this->initializeModel();
}

OAIGetCalculatorConfigurationById_200_response::~OAIGetCalculatorConfigurationById_200_response() {}

void OAIGetCalculatorConfigurationById_200_response::initializeModel() {

    m_absolute_shipping_discount_value_isSet = false;
    m_absolute_shipping_discount_value_isValid = false;

    m_accumulate_with_manual_price_isSet = false;
    m_accumulate_with_manual_price_isValid = false;

    m_activate_gifts_multiplier_isSet = false;
    m_activate_gifts_multiplier_isValid = false;

    m_active_days_of_week_isSet = false;
    m_active_days_of_week_isValid = false;

    m_affiliates_isSet = false;
    m_affiliates_isValid = false;

    m_apply_to_all_shippings_isSet = false;
    m_apply_to_all_shippings_isValid = false;

    m_are_sales_channel_ids_exclusive_isSet = false;
    m_are_sales_channel_ids_exclusive_isValid = false;

    m_begin_date_utc_isSet = false;
    m_begin_date_utc_isValid = false;

    m_brands_isSet = false;
    m_brands_isValid = false;

    m_brands_are_inclusive_isSet = false;
    m_brands_are_inclusive_isValid = false;

    m_campaigns_isSet = false;
    m_campaigns_isValid = false;

    m_card_issuers_isSet = false;
    m_card_issuers_isValid = false;

    m_categories_isSet = false;
    m_categories_isValid = false;

    m_categories_are_inclusive_isSet = false;
    m_categories_are_inclusive_isValid = false;

    m_cluster_expressions_isSet = false;
    m_cluster_expressions_isValid = false;

    m_collections_isSet = false;
    m_collections_isValid = false;

    m_collections1_buy_together_isSet = false;
    m_collections1_buy_together_isValid = false;

    m_collections2_buy_together_isSet = false;
    m_collections2_buy_together_isValid = false;

    m_collections_is_inclusive_isSet = false;
    m_collections_is_inclusive_isValid = false;

    m_compare_list_price_and_price_isSet = false;
    m_compare_list_price_and_price_isValid = false;

    m_conditions_ids_isSet = false;
    m_conditions_ids_isValid = false;

    m_coupon_isSet = false;
    m_coupon_isValid = false;

    m_cumulative_isSet = false;
    m_cumulative_isValid = false;

    m_days_ago_of_purchases_isSet = false;
    m_days_ago_of_purchases_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_disable_deal_isSet = false;
    m_disable_deal_isValid = false;

    m_discount_type_isSet = false;
    m_discount_type_isValid = false;

    m_enable_buy_together_per_sku_isSet = false;
    m_enable_buy_together_per_sku_isValid = false;

    m_end_date_utc_isSet = false;
    m_end_date_utc_isValid = false;

    m_first_buy_is_profile_optimistic_isSet = false;
    m_first_buy_is_profile_optimistic_isValid = false;

    m_gift_list_types_isSet = false;
    m_gift_list_types_isValid = false;

    m_id_calculator_configuration_isSet = false;
    m_id_calculator_configuration_isValid = false;

    m_id_seller_isSet = false;
    m_id_seller_isValid = false;

    m_id_seller_is_inclusive_isSet = false;
    m_id_seller_is_inclusive_isValid = false;

    m_ids_sales_channel_isSet = false;
    m_ids_sales_channel_isValid = false;

    m_installment_isSet = false;
    m_installment_isValid = false;

    m_is_active_isSet = false;
    m_is_active_isValid = false;

    m_is_archived_isSet = false;
    m_is_archived_isValid = false;

    m_is_different_list_price_and_price_isSet = false;
    m_is_different_list_price_and_price_isValid = false;

    m_is_featured_isSet = false;
    m_is_featured_isValid = false;

    m_is_first_buy_isSet = false;
    m_is_first_buy_isValid = false;

    m_is_min_max_installments_isSet = false;
    m_is_min_max_installments_isValid = false;

    m_is_sla_selected_isSet = false;
    m_is_sla_selected_isValid = false;

    m_item_max_price_isSet = false;
    m_item_max_price_isValid = false;

    m_item_min_price_isSet = false;
    m_item_min_price_isValid = false;

    m_last_modified_isSet = false;
    m_last_modified_isValid = false;

    m_list_sku1_buy_together_isSet = false;
    m_list_sku1_buy_together_isValid = false;

    m_list_sku2_buy_together_isSet = false;
    m_list_sku2_buy_together_isValid = false;

    m_marketing_tags_isSet = false;
    m_marketing_tags_isValid = false;

    m_marketing_tags_are_not_inclusive_isSet = false;
    m_marketing_tags_are_not_inclusive_isValid = false;

    m_max_installment_isSet = false;
    m_max_installment_isValid = false;

    m_max_number_of_affected_items_isSet = false;
    m_max_number_of_affected_items_isValid = false;

    m_max_number_of_affected_items_group_key_isSet = false;
    m_max_number_of_affected_items_group_key_isValid = false;

    m_max_prices_per_items_isSet = false;
    m_max_prices_per_items_isValid = false;

    m_max_usage_isSet = false;
    m_max_usage_isValid = false;

    m_max_usage_per_client_isSet = false;
    m_max_usage_per_client_isValid = false;

    m_maximum_unit_price_discount_isSet = false;
    m_maximum_unit_price_discount_isValid = false;

    m_merchants_isSet = false;
    m_merchants_isValid = false;

    m_min_installment_isSet = false;
    m_min_installment_isValid = false;

    m_minimum_quantity_buy_together_isSet = false;
    m_minimum_quantity_buy_together_isValid = false;

    m_multiple_skus_cause_isSet = false;
    m_multiple_skus_cause_isValid = false;

    m_multiple_use_per_client_isSet = false;
    m_multiple_use_per_client_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_new_offset_isSet = false;
    m_new_offset_isValid = false;

    m_nominal_discount_value_isSet = false;
    m_nominal_discount_value_isValid = false;

    m_nominal_reward_value_isSet = false;
    m_nominal_reward_value_isValid = false;

    m_nominal_shipping_discount_value_isSet = false;
    m_nominal_shipping_discount_value_isValid = false;

    m_nominal_tax_isSet = false;
    m_nominal_tax_isValid = false;

    m_offset_isSet = false;
    m_offset_isValid = false;

    m_order_status_reward_value_isSet = false;
    m_order_status_reward_value_isValid = false;

    m_origin_isSet = false;
    m_origin_isValid = false;

    m_payments_methods_isSet = false;
    m_payments_methods_isValid = false;

    m_payments_rules_isSet = false;
    m_payments_rules_isValid = false;

    m_percentual_discount_value_isSet = false;
    m_percentual_discount_value_isValid = false;

    m_percentual_discount_value_list_isSet = false;
    m_percentual_discount_value_list_isValid = false;

    m_percentual_discount_value_list1_isSet = false;
    m_percentual_discount_value_list1_isValid = false;

    m_percentual_discount_value_list2_isSet = false;
    m_percentual_discount_value_list2_isValid = false;

    m_percentual_reward_value_isSet = false;
    m_percentual_reward_value_isValid = false;

    m_percentual_shipping_discount_value_isSet = false;
    m_percentual_shipping_discount_value_isValid = false;

    m_percentual_tax_isSet = false;
    m_percentual_tax_isValid = false;

    m_products_isSet = false;
    m_products_isValid = false;

    m_products_are_inclusive_isSet = false;
    m_products_are_inclusive_isValid = false;

    m_products_specifications_isSet = false;
    m_products_specifications_isValid = false;

    m_quantity_to_affect_buy_together_isSet = false;
    m_quantity_to_affect_buy_together_isValid = false;

    m_rebate_percentual_discount_value_isSet = false;
    m_rebate_percentual_discount_value_isValid = false;

    m_restrictions_bins_isSet = false;
    m_restrictions_bins_isValid = false;

    m_shipping_percentual_tax_isSet = false;
    m_shipping_percentual_tax_isValid = false;

    m_should_distribute_discount_among_matched_items_isSet = false;
    m_should_distribute_discount_among_matched_items_isValid = false;

    m_skus_isSet = false;
    m_skus_isValid = false;

    m_skus_are_inclusive_isSet = false;
    m_skus_are_inclusive_isValid = false;

    m_skus_gift_isSet = false;
    m_skus_gift_isValid = false;

    m_slas_ids_isSet = false;
    m_slas_ids_isValid = false;

    m_stores_isSet = false;
    m_stores_isValid = false;

    m_stores_are_inclusive_isSet = false;
    m_stores_are_inclusive_isValid = false;

    m_total_value_celing_isSet = false;
    m_total_value_celing_isValid = false;

    m_total_value_floor_isSet = false;
    m_total_value_floor_isValid = false;

    m_total_value_include_all_items_isSet = false;
    m_total_value_include_all_items_isValid = false;

    m_total_value_mode_isSet = false;
    m_total_value_mode_isValid = false;

    m_total_value_purchase_isSet = false;
    m_total_value_purchase_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_use_new_progressive_algorithm_isSet = false;
    m_use_new_progressive_algorithm_isValid = false;

    m_utm_campaign_isSet = false;
    m_utm_campaign_isValid = false;

    m_utm_source_isSet = false;
    m_utm_source_isValid = false;

    m_zip_code_ranges_isSet = false;
    m_zip_code_ranges_isValid = false;
}

void OAIGetCalculatorConfigurationById_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetCalculatorConfigurationById_200_response::fromJsonObject(QJsonObject json) {

    m_absolute_shipping_discount_value_isValid = ::OpenAPI::fromJsonValue(m_absolute_shipping_discount_value, json[QString("absoluteShippingDiscountValue")]);
    m_absolute_shipping_discount_value_isSet = !json[QString("absoluteShippingDiscountValue")].isNull() && m_absolute_shipping_discount_value_isValid;

    m_accumulate_with_manual_price_isValid = ::OpenAPI::fromJsonValue(m_accumulate_with_manual_price, json[QString("accumulateWithManualPrice")]);
    m_accumulate_with_manual_price_isSet = !json[QString("accumulateWithManualPrice")].isNull() && m_accumulate_with_manual_price_isValid;

    m_activate_gifts_multiplier_isValid = ::OpenAPI::fromJsonValue(m_activate_gifts_multiplier, json[QString("activateGiftsMultiplier")]);
    m_activate_gifts_multiplier_isSet = !json[QString("activateGiftsMultiplier")].isNull() && m_activate_gifts_multiplier_isValid;

    m_active_days_of_week_isValid = ::OpenAPI::fromJsonValue(m_active_days_of_week, json[QString("activeDaysOfWeek")]);
    m_active_days_of_week_isSet = !json[QString("activeDaysOfWeek")].isNull() && m_active_days_of_week_isValid;

    m_affiliates_isValid = ::OpenAPI::fromJsonValue(m_affiliates, json[QString("affiliates")]);
    m_affiliates_isSet = !json[QString("affiliates")].isNull() && m_affiliates_isValid;

    m_apply_to_all_shippings_isValid = ::OpenAPI::fromJsonValue(m_apply_to_all_shippings, json[QString("applyToAllShippings")]);
    m_apply_to_all_shippings_isSet = !json[QString("applyToAllShippings")].isNull() && m_apply_to_all_shippings_isValid;

    m_are_sales_channel_ids_exclusive_isValid = ::OpenAPI::fromJsonValue(m_are_sales_channel_ids_exclusive, json[QString("areSalesChannelIdsExclusive")]);
    m_are_sales_channel_ids_exclusive_isSet = !json[QString("areSalesChannelIdsExclusive")].isNull() && m_are_sales_channel_ids_exclusive_isValid;

    m_begin_date_utc_isValid = ::OpenAPI::fromJsonValue(m_begin_date_utc, json[QString("beginDateUtc")]);
    m_begin_date_utc_isSet = !json[QString("beginDateUtc")].isNull() && m_begin_date_utc_isValid;

    m_brands_isValid = ::OpenAPI::fromJsonValue(m_brands, json[QString("brands")]);
    m_brands_isSet = !json[QString("brands")].isNull() && m_brands_isValid;

    m_brands_are_inclusive_isValid = ::OpenAPI::fromJsonValue(m_brands_are_inclusive, json[QString("brandsAreInclusive")]);
    m_brands_are_inclusive_isSet = !json[QString("brandsAreInclusive")].isNull() && m_brands_are_inclusive_isValid;

    m_campaigns_isValid = ::OpenAPI::fromJsonValue(m_campaigns, json[QString("campaigns")]);
    m_campaigns_isSet = !json[QString("campaigns")].isNull() && m_campaigns_isValid;

    m_card_issuers_isValid = ::OpenAPI::fromJsonValue(m_card_issuers, json[QString("cardIssuers")]);
    m_card_issuers_isSet = !json[QString("cardIssuers")].isNull() && m_card_issuers_isValid;

    m_categories_isValid = ::OpenAPI::fromJsonValue(m_categories, json[QString("categories")]);
    m_categories_isSet = !json[QString("categories")].isNull() && m_categories_isValid;

    m_categories_are_inclusive_isValid = ::OpenAPI::fromJsonValue(m_categories_are_inclusive, json[QString("categoriesAreInclusive")]);
    m_categories_are_inclusive_isSet = !json[QString("categoriesAreInclusive")].isNull() && m_categories_are_inclusive_isValid;

    m_cluster_expressions_isValid = ::OpenAPI::fromJsonValue(m_cluster_expressions, json[QString("clusterExpressions")]);
    m_cluster_expressions_isSet = !json[QString("clusterExpressions")].isNull() && m_cluster_expressions_isValid;

    m_collections_isValid = ::OpenAPI::fromJsonValue(m_collections, json[QString("collections")]);
    m_collections_isSet = !json[QString("collections")].isNull() && m_collections_isValid;

    m_collections1_buy_together_isValid = ::OpenAPI::fromJsonValue(m_collections1_buy_together, json[QString("collections1BuyTogether")]);
    m_collections1_buy_together_isSet = !json[QString("collections1BuyTogether")].isNull() && m_collections1_buy_together_isValid;

    m_collections2_buy_together_isValid = ::OpenAPI::fromJsonValue(m_collections2_buy_together, json[QString("collections2BuyTogether")]);
    m_collections2_buy_together_isSet = !json[QString("collections2BuyTogether")].isNull() && m_collections2_buy_together_isValid;

    m_collections_is_inclusive_isValid = ::OpenAPI::fromJsonValue(m_collections_is_inclusive, json[QString("collectionsIsInclusive")]);
    m_collections_is_inclusive_isSet = !json[QString("collectionsIsInclusive")].isNull() && m_collections_is_inclusive_isValid;

    m_compare_list_price_and_price_isValid = ::OpenAPI::fromJsonValue(m_compare_list_price_and_price, json[QString("compareListPriceAndPrice")]);
    m_compare_list_price_and_price_isSet = !json[QString("compareListPriceAndPrice")].isNull() && m_compare_list_price_and_price_isValid;

    m_conditions_ids_isValid = ::OpenAPI::fromJsonValue(m_conditions_ids, json[QString("conditionsIds")]);
    m_conditions_ids_isSet = !json[QString("conditionsIds")].isNull() && m_conditions_ids_isValid;

    m_coupon_isValid = ::OpenAPI::fromJsonValue(m_coupon, json[QString("coupon")]);
    m_coupon_isSet = !json[QString("coupon")].isNull() && m_coupon_isValid;

    m_cumulative_isValid = ::OpenAPI::fromJsonValue(m_cumulative, json[QString("cumulative")]);
    m_cumulative_isSet = !json[QString("cumulative")].isNull() && m_cumulative_isValid;

    m_days_ago_of_purchases_isValid = ::OpenAPI::fromJsonValue(m_days_ago_of_purchases, json[QString("daysAgoOfPurchases")]);
    m_days_ago_of_purchases_isSet = !json[QString("daysAgoOfPurchases")].isNull() && m_days_ago_of_purchases_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_disable_deal_isValid = ::OpenAPI::fromJsonValue(m_disable_deal, json[QString("disableDeal")]);
    m_disable_deal_isSet = !json[QString("disableDeal")].isNull() && m_disable_deal_isValid;

    m_discount_type_isValid = ::OpenAPI::fromJsonValue(m_discount_type, json[QString("discountType")]);
    m_discount_type_isSet = !json[QString("discountType")].isNull() && m_discount_type_isValid;

    m_enable_buy_together_per_sku_isValid = ::OpenAPI::fromJsonValue(m_enable_buy_together_per_sku, json[QString("enableBuyTogetherPerSku")]);
    m_enable_buy_together_per_sku_isSet = !json[QString("enableBuyTogetherPerSku")].isNull() && m_enable_buy_together_per_sku_isValid;

    m_end_date_utc_isValid = ::OpenAPI::fromJsonValue(m_end_date_utc, json[QString("endDateUtc")]);
    m_end_date_utc_isSet = !json[QString("endDateUtc")].isNull() && m_end_date_utc_isValid;

    m_first_buy_is_profile_optimistic_isValid = ::OpenAPI::fromJsonValue(m_first_buy_is_profile_optimistic, json[QString("firstBuyIsProfileOptimistic")]);
    m_first_buy_is_profile_optimistic_isSet = !json[QString("firstBuyIsProfileOptimistic")].isNull() && m_first_buy_is_profile_optimistic_isValid;

    m_gift_list_types_isValid = ::OpenAPI::fromJsonValue(m_gift_list_types, json[QString("giftListTypes")]);
    m_gift_list_types_isSet = !json[QString("giftListTypes")].isNull() && m_gift_list_types_isValid;

    m_id_calculator_configuration_isValid = ::OpenAPI::fromJsonValue(m_id_calculator_configuration, json[QString("idCalculatorConfiguration")]);
    m_id_calculator_configuration_isSet = !json[QString("idCalculatorConfiguration")].isNull() && m_id_calculator_configuration_isValid;

    m_id_seller_isValid = ::OpenAPI::fromJsonValue(m_id_seller, json[QString("idSeller")]);
    m_id_seller_isSet = !json[QString("idSeller")].isNull() && m_id_seller_isValid;

    m_id_seller_is_inclusive_isValid = ::OpenAPI::fromJsonValue(m_id_seller_is_inclusive, json[QString("idSellerIsInclusive")]);
    m_id_seller_is_inclusive_isSet = !json[QString("idSellerIsInclusive")].isNull() && m_id_seller_is_inclusive_isValid;

    m_ids_sales_channel_isValid = ::OpenAPI::fromJsonValue(m_ids_sales_channel, json[QString("idsSalesChannel")]);
    m_ids_sales_channel_isSet = !json[QString("idsSalesChannel")].isNull() && m_ids_sales_channel_isValid;

    m_installment_isValid = ::OpenAPI::fromJsonValue(m_installment, json[QString("installment")]);
    m_installment_isSet = !json[QString("installment")].isNull() && m_installment_isValid;

    m_is_active_isValid = ::OpenAPI::fromJsonValue(m_is_active, json[QString("isActive")]);
    m_is_active_isSet = !json[QString("isActive")].isNull() && m_is_active_isValid;

    m_is_archived_isValid = ::OpenAPI::fromJsonValue(m_is_archived, json[QString("isArchived")]);
    m_is_archived_isSet = !json[QString("isArchived")].isNull() && m_is_archived_isValid;

    m_is_different_list_price_and_price_isValid = ::OpenAPI::fromJsonValue(m_is_different_list_price_and_price, json[QString("isDifferentListPriceAndPrice")]);
    m_is_different_list_price_and_price_isSet = !json[QString("isDifferentListPriceAndPrice")].isNull() && m_is_different_list_price_and_price_isValid;

    m_is_featured_isValid = ::OpenAPI::fromJsonValue(m_is_featured, json[QString("isFeatured")]);
    m_is_featured_isSet = !json[QString("isFeatured")].isNull() && m_is_featured_isValid;

    m_is_first_buy_isValid = ::OpenAPI::fromJsonValue(m_is_first_buy, json[QString("isFirstBuy")]);
    m_is_first_buy_isSet = !json[QString("isFirstBuy")].isNull() && m_is_first_buy_isValid;

    m_is_min_max_installments_isValid = ::OpenAPI::fromJsonValue(m_is_min_max_installments, json[QString("isMinMaxInstallments")]);
    m_is_min_max_installments_isSet = !json[QString("isMinMaxInstallments")].isNull() && m_is_min_max_installments_isValid;

    m_is_sla_selected_isValid = ::OpenAPI::fromJsonValue(m_is_sla_selected, json[QString("isSlaSelected")]);
    m_is_sla_selected_isSet = !json[QString("isSlaSelected")].isNull() && m_is_sla_selected_isValid;

    m_item_max_price_isValid = ::OpenAPI::fromJsonValue(m_item_max_price, json[QString("itemMaxPrice")]);
    m_item_max_price_isSet = !json[QString("itemMaxPrice")].isNull() && m_item_max_price_isValid;

    m_item_min_price_isValid = ::OpenAPI::fromJsonValue(m_item_min_price, json[QString("itemMinPrice")]);
    m_item_min_price_isSet = !json[QString("itemMinPrice")].isNull() && m_item_min_price_isValid;

    m_last_modified_isValid = ::OpenAPI::fromJsonValue(m_last_modified, json[QString("lastModified")]);
    m_last_modified_isSet = !json[QString("lastModified")].isNull() && m_last_modified_isValid;

    m_list_sku1_buy_together_isValid = ::OpenAPI::fromJsonValue(m_list_sku1_buy_together, json[QString("listSku1BuyTogether")]);
    m_list_sku1_buy_together_isSet = !json[QString("listSku1BuyTogether")].isNull() && m_list_sku1_buy_together_isValid;

    m_list_sku2_buy_together_isValid = ::OpenAPI::fromJsonValue(m_list_sku2_buy_together, json[QString("listSku2BuyTogether")]);
    m_list_sku2_buy_together_isSet = !json[QString("listSku2BuyTogether")].isNull() && m_list_sku2_buy_together_isValid;

    m_marketing_tags_isValid = ::OpenAPI::fromJsonValue(m_marketing_tags, json[QString("marketingTags")]);
    m_marketing_tags_isSet = !json[QString("marketingTags")].isNull() && m_marketing_tags_isValid;

    m_marketing_tags_are_not_inclusive_isValid = ::OpenAPI::fromJsonValue(m_marketing_tags_are_not_inclusive, json[QString("marketingTagsAreNotInclusive")]);
    m_marketing_tags_are_not_inclusive_isSet = !json[QString("marketingTagsAreNotInclusive")].isNull() && m_marketing_tags_are_not_inclusive_isValid;

    m_max_installment_isValid = ::OpenAPI::fromJsonValue(m_max_installment, json[QString("maxInstallment")]);
    m_max_installment_isSet = !json[QString("maxInstallment")].isNull() && m_max_installment_isValid;

    m_max_number_of_affected_items_isValid = ::OpenAPI::fromJsonValue(m_max_number_of_affected_items, json[QString("maxNumberOfAffectedItems")]);
    m_max_number_of_affected_items_isSet = !json[QString("maxNumberOfAffectedItems")].isNull() && m_max_number_of_affected_items_isValid;

    m_max_number_of_affected_items_group_key_isValid = ::OpenAPI::fromJsonValue(m_max_number_of_affected_items_group_key, json[QString("maxNumberOfAffectedItemsGroupKey")]);
    m_max_number_of_affected_items_group_key_isSet = !json[QString("maxNumberOfAffectedItemsGroupKey")].isNull() && m_max_number_of_affected_items_group_key_isValid;

    m_max_prices_per_items_isValid = ::OpenAPI::fromJsonValue(m_max_prices_per_items, json[QString("maxPricesPerItems")]);
    m_max_prices_per_items_isSet = !json[QString("maxPricesPerItems")].isNull() && m_max_prices_per_items_isValid;

    m_max_usage_isValid = ::OpenAPI::fromJsonValue(m_max_usage, json[QString("maxUsage")]);
    m_max_usage_isSet = !json[QString("maxUsage")].isNull() && m_max_usage_isValid;

    m_max_usage_per_client_isValid = ::OpenAPI::fromJsonValue(m_max_usage_per_client, json[QString("maxUsagePerClient")]);
    m_max_usage_per_client_isSet = !json[QString("maxUsagePerClient")].isNull() && m_max_usage_per_client_isValid;

    m_maximum_unit_price_discount_isValid = ::OpenAPI::fromJsonValue(m_maximum_unit_price_discount, json[QString("maximumUnitPriceDiscount")]);
    m_maximum_unit_price_discount_isSet = !json[QString("maximumUnitPriceDiscount")].isNull() && m_maximum_unit_price_discount_isValid;

    m_merchants_isValid = ::OpenAPI::fromJsonValue(m_merchants, json[QString("merchants")]);
    m_merchants_isSet = !json[QString("merchants")].isNull() && m_merchants_isValid;

    m_min_installment_isValid = ::OpenAPI::fromJsonValue(m_min_installment, json[QString("minInstallment")]);
    m_min_installment_isSet = !json[QString("minInstallment")].isNull() && m_min_installment_isValid;

    m_minimum_quantity_buy_together_isValid = ::OpenAPI::fromJsonValue(m_minimum_quantity_buy_together, json[QString("minimumQuantityBuyTogether")]);
    m_minimum_quantity_buy_together_isSet = !json[QString("minimumQuantityBuyTogether")].isNull() && m_minimum_quantity_buy_together_isValid;

    m_multiple_skus_cause_isValid = ::OpenAPI::fromJsonValue(m_multiple_skus_cause, json[QString("multipleSkusCause")]);
    m_multiple_skus_cause_isSet = !json[QString("multipleSkusCause")].isNull() && m_multiple_skus_cause_isValid;

    m_multiple_use_per_client_isValid = ::OpenAPI::fromJsonValue(m_multiple_use_per_client, json[QString("multipleUsePerClient")]);
    m_multiple_use_per_client_isSet = !json[QString("multipleUsePerClient")].isNull() && m_multiple_use_per_client_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_new_offset_isValid = ::OpenAPI::fromJsonValue(m_new_offset, json[QString("newOffset")]);
    m_new_offset_isSet = !json[QString("newOffset")].isNull() && m_new_offset_isValid;

    m_nominal_discount_value_isValid = ::OpenAPI::fromJsonValue(m_nominal_discount_value, json[QString("nominalDiscountValue")]);
    m_nominal_discount_value_isSet = !json[QString("nominalDiscountValue")].isNull() && m_nominal_discount_value_isValid;

    m_nominal_reward_value_isValid = ::OpenAPI::fromJsonValue(m_nominal_reward_value, json[QString("nominalRewardValue")]);
    m_nominal_reward_value_isSet = !json[QString("nominalRewardValue")].isNull() && m_nominal_reward_value_isValid;

    m_nominal_shipping_discount_value_isValid = ::OpenAPI::fromJsonValue(m_nominal_shipping_discount_value, json[QString("nominalShippingDiscountValue")]);
    m_nominal_shipping_discount_value_isSet = !json[QString("nominalShippingDiscountValue")].isNull() && m_nominal_shipping_discount_value_isValid;

    m_nominal_tax_isValid = ::OpenAPI::fromJsonValue(m_nominal_tax, json[QString("nominalTax")]);
    m_nominal_tax_isSet = !json[QString("nominalTax")].isNull() && m_nominal_tax_isValid;

    m_offset_isValid = ::OpenAPI::fromJsonValue(m_offset, json[QString("offset")]);
    m_offset_isSet = !json[QString("offset")].isNull() && m_offset_isValid;

    m_order_status_reward_value_isValid = ::OpenAPI::fromJsonValue(m_order_status_reward_value, json[QString("orderStatusRewardValue")]);
    m_order_status_reward_value_isSet = !json[QString("orderStatusRewardValue")].isNull() && m_order_status_reward_value_isValid;

    m_origin_isValid = ::OpenAPI::fromJsonValue(m_origin, json[QString("origin")]);
    m_origin_isSet = !json[QString("origin")].isNull() && m_origin_isValid;

    m_payments_methods_isValid = ::OpenAPI::fromJsonValue(m_payments_methods, json[QString("paymentsMethods")]);
    m_payments_methods_isSet = !json[QString("paymentsMethods")].isNull() && m_payments_methods_isValid;

    m_payments_rules_isValid = ::OpenAPI::fromJsonValue(m_payments_rules, json[QString("paymentsRules")]);
    m_payments_rules_isSet = !json[QString("paymentsRules")].isNull() && m_payments_rules_isValid;

    m_percentual_discount_value_isValid = ::OpenAPI::fromJsonValue(m_percentual_discount_value, json[QString("percentualDiscountValue")]);
    m_percentual_discount_value_isSet = !json[QString("percentualDiscountValue")].isNull() && m_percentual_discount_value_isValid;

    m_percentual_discount_value_list_isValid = ::OpenAPI::fromJsonValue(m_percentual_discount_value_list, json[QString("percentualDiscountValueList")]);
    m_percentual_discount_value_list_isSet = !json[QString("percentualDiscountValueList")].isNull() && m_percentual_discount_value_list_isValid;

    m_percentual_discount_value_list1_isValid = ::OpenAPI::fromJsonValue(m_percentual_discount_value_list1, json[QString("percentualDiscountValueList1")]);
    m_percentual_discount_value_list1_isSet = !json[QString("percentualDiscountValueList1")].isNull() && m_percentual_discount_value_list1_isValid;

    m_percentual_discount_value_list2_isValid = ::OpenAPI::fromJsonValue(m_percentual_discount_value_list2, json[QString("percentualDiscountValueList2")]);
    m_percentual_discount_value_list2_isSet = !json[QString("percentualDiscountValueList2")].isNull() && m_percentual_discount_value_list2_isValid;

    m_percentual_reward_value_isValid = ::OpenAPI::fromJsonValue(m_percentual_reward_value, json[QString("percentualRewardValue")]);
    m_percentual_reward_value_isSet = !json[QString("percentualRewardValue")].isNull() && m_percentual_reward_value_isValid;

    m_percentual_shipping_discount_value_isValid = ::OpenAPI::fromJsonValue(m_percentual_shipping_discount_value, json[QString("percentualShippingDiscountValue")]);
    m_percentual_shipping_discount_value_isSet = !json[QString("percentualShippingDiscountValue")].isNull() && m_percentual_shipping_discount_value_isValid;

    m_percentual_tax_isValid = ::OpenAPI::fromJsonValue(m_percentual_tax, json[QString("percentualTax")]);
    m_percentual_tax_isSet = !json[QString("percentualTax")].isNull() && m_percentual_tax_isValid;

    m_products_isValid = ::OpenAPI::fromJsonValue(m_products, json[QString("products")]);
    m_products_isSet = !json[QString("products")].isNull() && m_products_isValid;

    m_products_are_inclusive_isValid = ::OpenAPI::fromJsonValue(m_products_are_inclusive, json[QString("productsAreInclusive")]);
    m_products_are_inclusive_isSet = !json[QString("productsAreInclusive")].isNull() && m_products_are_inclusive_isValid;

    m_products_specifications_isValid = ::OpenAPI::fromJsonValue(m_products_specifications, json[QString("productsSpecifications")]);
    m_products_specifications_isSet = !json[QString("productsSpecifications")].isNull() && m_products_specifications_isValid;

    m_quantity_to_affect_buy_together_isValid = ::OpenAPI::fromJsonValue(m_quantity_to_affect_buy_together, json[QString("quantityToAffectBuyTogether")]);
    m_quantity_to_affect_buy_together_isSet = !json[QString("quantityToAffectBuyTogether")].isNull() && m_quantity_to_affect_buy_together_isValid;

    m_rebate_percentual_discount_value_isValid = ::OpenAPI::fromJsonValue(m_rebate_percentual_discount_value, json[QString("rebatePercentualDiscountValue")]);
    m_rebate_percentual_discount_value_isSet = !json[QString("rebatePercentualDiscountValue")].isNull() && m_rebate_percentual_discount_value_isValid;

    m_restrictions_bins_isValid = ::OpenAPI::fromJsonValue(m_restrictions_bins, json[QString("restrictionsBins")]);
    m_restrictions_bins_isSet = !json[QString("restrictionsBins")].isNull() && m_restrictions_bins_isValid;

    m_shipping_percentual_tax_isValid = ::OpenAPI::fromJsonValue(m_shipping_percentual_tax, json[QString("shippingPercentualTax")]);
    m_shipping_percentual_tax_isSet = !json[QString("shippingPercentualTax")].isNull() && m_shipping_percentual_tax_isValid;

    m_should_distribute_discount_among_matched_items_isValid = ::OpenAPI::fromJsonValue(m_should_distribute_discount_among_matched_items, json[QString("shouldDistributeDiscountAmongMatchedItems")]);
    m_should_distribute_discount_among_matched_items_isSet = !json[QString("shouldDistributeDiscountAmongMatchedItems")].isNull() && m_should_distribute_discount_among_matched_items_isValid;

    m_skus_isValid = ::OpenAPI::fromJsonValue(m_skus, json[QString("skus")]);
    m_skus_isSet = !json[QString("skus")].isNull() && m_skus_isValid;

    m_skus_are_inclusive_isValid = ::OpenAPI::fromJsonValue(m_skus_are_inclusive, json[QString("skusAreInclusive")]);
    m_skus_are_inclusive_isSet = !json[QString("skusAreInclusive")].isNull() && m_skus_are_inclusive_isValid;

    m_skus_gift_isValid = ::OpenAPI::fromJsonValue(m_skus_gift, json[QString("skusGift")]);
    m_skus_gift_isSet = !json[QString("skusGift")].isNull() && m_skus_gift_isValid;

    m_slas_ids_isValid = ::OpenAPI::fromJsonValue(m_slas_ids, json[QString("slasIds")]);
    m_slas_ids_isSet = !json[QString("slasIds")].isNull() && m_slas_ids_isValid;

    m_stores_isValid = ::OpenAPI::fromJsonValue(m_stores, json[QString("stores")]);
    m_stores_isSet = !json[QString("stores")].isNull() && m_stores_isValid;

    m_stores_are_inclusive_isValid = ::OpenAPI::fromJsonValue(m_stores_are_inclusive, json[QString("storesAreInclusive")]);
    m_stores_are_inclusive_isSet = !json[QString("storesAreInclusive")].isNull() && m_stores_are_inclusive_isValid;

    m_total_value_celing_isValid = ::OpenAPI::fromJsonValue(m_total_value_celing, json[QString("totalValueCeling")]);
    m_total_value_celing_isSet = !json[QString("totalValueCeling")].isNull() && m_total_value_celing_isValid;

    m_total_value_floor_isValid = ::OpenAPI::fromJsonValue(m_total_value_floor, json[QString("totalValueFloor")]);
    m_total_value_floor_isSet = !json[QString("totalValueFloor")].isNull() && m_total_value_floor_isValid;

    m_total_value_include_all_items_isValid = ::OpenAPI::fromJsonValue(m_total_value_include_all_items, json[QString("totalValueIncludeAllItems")]);
    m_total_value_include_all_items_isSet = !json[QString("totalValueIncludeAllItems")].isNull() && m_total_value_include_all_items_isValid;

    m_total_value_mode_isValid = ::OpenAPI::fromJsonValue(m_total_value_mode, json[QString("totalValueMode")]);
    m_total_value_mode_isSet = !json[QString("totalValueMode")].isNull() && m_total_value_mode_isValid;

    m_total_value_purchase_isValid = ::OpenAPI::fromJsonValue(m_total_value_purchase, json[QString("totalValuePurchase")]);
    m_total_value_purchase_isSet = !json[QString("totalValuePurchase")].isNull() && m_total_value_purchase_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_use_new_progressive_algorithm_isValid = ::OpenAPI::fromJsonValue(m_use_new_progressive_algorithm, json[QString("useNewProgressiveAlgorithm")]);
    m_use_new_progressive_algorithm_isSet = !json[QString("useNewProgressiveAlgorithm")].isNull() && m_use_new_progressive_algorithm_isValid;

    m_utm_campaign_isValid = ::OpenAPI::fromJsonValue(m_utm_campaign, json[QString("utmCampaign")]);
    m_utm_campaign_isSet = !json[QString("utmCampaign")].isNull() && m_utm_campaign_isValid;

    m_utm_source_isValid = ::OpenAPI::fromJsonValue(m_utm_source, json[QString("utmSource")]);
    m_utm_source_isSet = !json[QString("utmSource")].isNull() && m_utm_source_isValid;

    m_zip_code_ranges_isValid = ::OpenAPI::fromJsonValue(m_zip_code_ranges, json[QString("zipCodeRanges")]);
    m_zip_code_ranges_isSet = !json[QString("zipCodeRanges")].isNull() && m_zip_code_ranges_isValid;
}

QString OAIGetCalculatorConfigurationById_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetCalculatorConfigurationById_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_absolute_shipping_discount_value_isSet) {
        obj.insert(QString("absoluteShippingDiscountValue"), ::OpenAPI::toJsonValue(m_absolute_shipping_discount_value));
    }
    if (m_accumulate_with_manual_price_isSet) {
        obj.insert(QString("accumulateWithManualPrice"), ::OpenAPI::toJsonValue(m_accumulate_with_manual_price));
    }
    if (m_activate_gifts_multiplier_isSet) {
        obj.insert(QString("activateGiftsMultiplier"), ::OpenAPI::toJsonValue(m_activate_gifts_multiplier));
    }
    if (m_active_days_of_week.size() > 0) {
        obj.insert(QString("activeDaysOfWeek"), ::OpenAPI::toJsonValue(m_active_days_of_week));
    }
    if (m_affiliates.size() > 0) {
        obj.insert(QString("affiliates"), ::OpenAPI::toJsonValue(m_affiliates));
    }
    if (m_apply_to_all_shippings_isSet) {
        obj.insert(QString("applyToAllShippings"), ::OpenAPI::toJsonValue(m_apply_to_all_shippings));
    }
    if (m_are_sales_channel_ids_exclusive_isSet) {
        obj.insert(QString("areSalesChannelIdsExclusive"), ::OpenAPI::toJsonValue(m_are_sales_channel_ids_exclusive));
    }
    if (m_begin_date_utc_isSet) {
        obj.insert(QString("beginDateUtc"), ::OpenAPI::toJsonValue(m_begin_date_utc));
    }
    if (m_brands.size() > 0) {
        obj.insert(QString("brands"), ::OpenAPI::toJsonValue(m_brands));
    }
    if (m_brands_are_inclusive_isSet) {
        obj.insert(QString("brandsAreInclusive"), ::OpenAPI::toJsonValue(m_brands_are_inclusive));
    }
    if (m_campaigns.size() > 0) {
        obj.insert(QString("campaigns"), ::OpenAPI::toJsonValue(m_campaigns));
    }
    if (m_card_issuers.size() > 0) {
        obj.insert(QString("cardIssuers"), ::OpenAPI::toJsonValue(m_card_issuers));
    }
    if (m_categories.size() > 0) {
        obj.insert(QString("categories"), ::OpenAPI::toJsonValue(m_categories));
    }
    if (m_categories_are_inclusive_isSet) {
        obj.insert(QString("categoriesAreInclusive"), ::OpenAPI::toJsonValue(m_categories_are_inclusive));
    }
    if (m_cluster_expressions.size() > 0) {
        obj.insert(QString("clusterExpressions"), ::OpenAPI::toJsonValue(m_cluster_expressions));
    }
    if (m_collections.size() > 0) {
        obj.insert(QString("collections"), ::OpenAPI::toJsonValue(m_collections));
    }
    if (m_collections1_buy_together.size() > 0) {
        obj.insert(QString("collections1BuyTogether"), ::OpenAPI::toJsonValue(m_collections1_buy_together));
    }
    if (m_collections2_buy_together.size() > 0) {
        obj.insert(QString("collections2BuyTogether"), ::OpenAPI::toJsonValue(m_collections2_buy_together));
    }
    if (m_collections_is_inclusive_isSet) {
        obj.insert(QString("collectionsIsInclusive"), ::OpenAPI::toJsonValue(m_collections_is_inclusive));
    }
    if (m_compare_list_price_and_price_isSet) {
        obj.insert(QString("compareListPriceAndPrice"), ::OpenAPI::toJsonValue(m_compare_list_price_and_price));
    }
    if (m_conditions_ids.size() > 0) {
        obj.insert(QString("conditionsIds"), ::OpenAPI::toJsonValue(m_conditions_ids));
    }
    if (m_coupon.size() > 0) {
        obj.insert(QString("coupon"), ::OpenAPI::toJsonValue(m_coupon));
    }
    if (m_cumulative_isSet) {
        obj.insert(QString("cumulative"), ::OpenAPI::toJsonValue(m_cumulative));
    }
    if (m_days_ago_of_purchases_isSet) {
        obj.insert(QString("daysAgoOfPurchases"), ::OpenAPI::toJsonValue(m_days_ago_of_purchases));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_disable_deal_isSet) {
        obj.insert(QString("disableDeal"), ::OpenAPI::toJsonValue(m_disable_deal));
    }
    if (m_discount_type_isSet) {
        obj.insert(QString("discountType"), ::OpenAPI::toJsonValue(m_discount_type));
    }
    if (m_enable_buy_together_per_sku_isSet) {
        obj.insert(QString("enableBuyTogetherPerSku"), ::OpenAPI::toJsonValue(m_enable_buy_together_per_sku));
    }
    if (m_end_date_utc_isSet) {
        obj.insert(QString("endDateUtc"), ::OpenAPI::toJsonValue(m_end_date_utc));
    }
    if (m_first_buy_is_profile_optimistic_isSet) {
        obj.insert(QString("firstBuyIsProfileOptimistic"), ::OpenAPI::toJsonValue(m_first_buy_is_profile_optimistic));
    }
    if (m_gift_list_types.size() > 0) {
        obj.insert(QString("giftListTypes"), ::OpenAPI::toJsonValue(m_gift_list_types));
    }
    if (m_id_calculator_configuration_isSet) {
        obj.insert(QString("idCalculatorConfiguration"), ::OpenAPI::toJsonValue(m_id_calculator_configuration));
    }
    if (m_id_seller_isSet) {
        obj.insert(QString("idSeller"), ::OpenAPI::toJsonValue(m_id_seller));
    }
    if (m_id_seller_is_inclusive_isSet) {
        obj.insert(QString("idSellerIsInclusive"), ::OpenAPI::toJsonValue(m_id_seller_is_inclusive));
    }
    if (m_ids_sales_channel.size() > 0) {
        obj.insert(QString("idsSalesChannel"), ::OpenAPI::toJsonValue(m_ids_sales_channel));
    }
    if (m_installment_isSet) {
        obj.insert(QString("installment"), ::OpenAPI::toJsonValue(m_installment));
    }
    if (m_is_active_isSet) {
        obj.insert(QString("isActive"), ::OpenAPI::toJsonValue(m_is_active));
    }
    if (m_is_archived_isSet) {
        obj.insert(QString("isArchived"), ::OpenAPI::toJsonValue(m_is_archived));
    }
    if (m_is_different_list_price_and_price_isSet) {
        obj.insert(QString("isDifferentListPriceAndPrice"), ::OpenAPI::toJsonValue(m_is_different_list_price_and_price));
    }
    if (m_is_featured_isSet) {
        obj.insert(QString("isFeatured"), ::OpenAPI::toJsonValue(m_is_featured));
    }
    if (m_is_first_buy_isSet) {
        obj.insert(QString("isFirstBuy"), ::OpenAPI::toJsonValue(m_is_first_buy));
    }
    if (m_is_min_max_installments_isSet) {
        obj.insert(QString("isMinMaxInstallments"), ::OpenAPI::toJsonValue(m_is_min_max_installments));
    }
    if (m_is_sla_selected_isSet) {
        obj.insert(QString("isSlaSelected"), ::OpenAPI::toJsonValue(m_is_sla_selected));
    }
    if (m_item_max_price_isSet) {
        obj.insert(QString("itemMaxPrice"), ::OpenAPI::toJsonValue(m_item_max_price));
    }
    if (m_item_min_price_isSet) {
        obj.insert(QString("itemMinPrice"), ::OpenAPI::toJsonValue(m_item_min_price));
    }
    if (m_last_modified_isSet) {
        obj.insert(QString("lastModified"), ::OpenAPI::toJsonValue(m_last_modified));
    }
    if (m_list_sku1_buy_together.size() > 0) {
        obj.insert(QString("listSku1BuyTogether"), ::OpenAPI::toJsonValue(m_list_sku1_buy_together));
    }
    if (m_list_sku2_buy_together.size() > 0) {
        obj.insert(QString("listSku2BuyTogether"), ::OpenAPI::toJsonValue(m_list_sku2_buy_together));
    }
    if (m_marketing_tags.size() > 0) {
        obj.insert(QString("marketingTags"), ::OpenAPI::toJsonValue(m_marketing_tags));
    }
    if (m_marketing_tags_are_not_inclusive_isSet) {
        obj.insert(QString("marketingTagsAreNotInclusive"), ::OpenAPI::toJsonValue(m_marketing_tags_are_not_inclusive));
    }
    if (m_max_installment_isSet) {
        obj.insert(QString("maxInstallment"), ::OpenAPI::toJsonValue(m_max_installment));
    }
    if (m_max_number_of_affected_items_isSet) {
        obj.insert(QString("maxNumberOfAffectedItems"), ::OpenAPI::toJsonValue(m_max_number_of_affected_items));
    }
    if (m_max_number_of_affected_items_group_key_isSet) {
        obj.insert(QString("maxNumberOfAffectedItemsGroupKey"), ::OpenAPI::toJsonValue(m_max_number_of_affected_items_group_key));
    }
    if (m_max_prices_per_items.size() > 0) {
        obj.insert(QString("maxPricesPerItems"), ::OpenAPI::toJsonValue(m_max_prices_per_items));
    }
    if (m_max_usage_isSet) {
        obj.insert(QString("maxUsage"), ::OpenAPI::toJsonValue(m_max_usage));
    }
    if (m_max_usage_per_client_isSet) {
        obj.insert(QString("maxUsagePerClient"), ::OpenAPI::toJsonValue(m_max_usage_per_client));
    }
    if (m_maximum_unit_price_discount_isSet) {
        obj.insert(QString("maximumUnitPriceDiscount"), ::OpenAPI::toJsonValue(m_maximum_unit_price_discount));
    }
    if (m_merchants.size() > 0) {
        obj.insert(QString("merchants"), ::OpenAPI::toJsonValue(m_merchants));
    }
    if (m_min_installment_isSet) {
        obj.insert(QString("minInstallment"), ::OpenAPI::toJsonValue(m_min_installment));
    }
    if (m_minimum_quantity_buy_together_isSet) {
        obj.insert(QString("minimumQuantityBuyTogether"), ::OpenAPI::toJsonValue(m_minimum_quantity_buy_together));
    }
    if (m_multiple_skus_cause.size() > 0) {
        obj.insert(QString("multipleSkusCause"), ::OpenAPI::toJsonValue(m_multiple_skus_cause));
    }
    if (m_multiple_use_per_client_isSet) {
        obj.insert(QString("multipleUsePerClient"), ::OpenAPI::toJsonValue(m_multiple_use_per_client));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_new_offset_isSet) {
        obj.insert(QString("newOffset"), ::OpenAPI::toJsonValue(m_new_offset));
    }
    if (m_nominal_discount_value_isSet) {
        obj.insert(QString("nominalDiscountValue"), ::OpenAPI::toJsonValue(m_nominal_discount_value));
    }
    if (m_nominal_reward_value_isSet) {
        obj.insert(QString("nominalRewardValue"), ::OpenAPI::toJsonValue(m_nominal_reward_value));
    }
    if (m_nominal_shipping_discount_value_isSet) {
        obj.insert(QString("nominalShippingDiscountValue"), ::OpenAPI::toJsonValue(m_nominal_shipping_discount_value));
    }
    if (m_nominal_tax_isSet) {
        obj.insert(QString("nominalTax"), ::OpenAPI::toJsonValue(m_nominal_tax));
    }
    if (m_offset_isSet) {
        obj.insert(QString("offset"), ::OpenAPI::toJsonValue(m_offset));
    }
    if (m_order_status_reward_value_isSet) {
        obj.insert(QString("orderStatusRewardValue"), ::OpenAPI::toJsonValue(m_order_status_reward_value));
    }
    if (m_origin_isSet) {
        obj.insert(QString("origin"), ::OpenAPI::toJsonValue(m_origin));
    }
    if (m_payments_methods.size() > 0) {
        obj.insert(QString("paymentsMethods"), ::OpenAPI::toJsonValue(m_payments_methods));
    }
    if (m_payments_rules.size() > 0) {
        obj.insert(QString("paymentsRules"), ::OpenAPI::toJsonValue(m_payments_rules));
    }
    if (m_percentual_discount_value_isSet) {
        obj.insert(QString("percentualDiscountValue"), ::OpenAPI::toJsonValue(m_percentual_discount_value));
    }
    if (m_percentual_discount_value_list.size() > 0) {
        obj.insert(QString("percentualDiscountValueList"), ::OpenAPI::toJsonValue(m_percentual_discount_value_list));
    }
    if (m_percentual_discount_value_list1_isSet) {
        obj.insert(QString("percentualDiscountValueList1"), ::OpenAPI::toJsonValue(m_percentual_discount_value_list1));
    }
    if (m_percentual_discount_value_list2_isSet) {
        obj.insert(QString("percentualDiscountValueList2"), ::OpenAPI::toJsonValue(m_percentual_discount_value_list2));
    }
    if (m_percentual_reward_value_isSet) {
        obj.insert(QString("percentualRewardValue"), ::OpenAPI::toJsonValue(m_percentual_reward_value));
    }
    if (m_percentual_shipping_discount_value_isSet) {
        obj.insert(QString("percentualShippingDiscountValue"), ::OpenAPI::toJsonValue(m_percentual_shipping_discount_value));
    }
    if (m_percentual_tax_isSet) {
        obj.insert(QString("percentualTax"), ::OpenAPI::toJsonValue(m_percentual_tax));
    }
    if (m_products.size() > 0) {
        obj.insert(QString("products"), ::OpenAPI::toJsonValue(m_products));
    }
    if (m_products_are_inclusive_isSet) {
        obj.insert(QString("productsAreInclusive"), ::OpenAPI::toJsonValue(m_products_are_inclusive));
    }
    if (m_products_specifications.size() > 0) {
        obj.insert(QString("productsSpecifications"), ::OpenAPI::toJsonValue(m_products_specifications));
    }
    if (m_quantity_to_affect_buy_together_isSet) {
        obj.insert(QString("quantityToAffectBuyTogether"), ::OpenAPI::toJsonValue(m_quantity_to_affect_buy_together));
    }
    if (m_rebate_percentual_discount_value_isSet) {
        obj.insert(QString("rebatePercentualDiscountValue"), ::OpenAPI::toJsonValue(m_rebate_percentual_discount_value));
    }
    if (m_restrictions_bins.size() > 0) {
        obj.insert(QString("restrictionsBins"), ::OpenAPI::toJsonValue(m_restrictions_bins));
    }
    if (m_shipping_percentual_tax_isSet) {
        obj.insert(QString("shippingPercentualTax"), ::OpenAPI::toJsonValue(m_shipping_percentual_tax));
    }
    if (m_should_distribute_discount_among_matched_items_isSet) {
        obj.insert(QString("shouldDistributeDiscountAmongMatchedItems"), ::OpenAPI::toJsonValue(m_should_distribute_discount_among_matched_items));
    }
    if (m_skus.size() > 0) {
        obj.insert(QString("skus"), ::OpenAPI::toJsonValue(m_skus));
    }
    if (m_skus_are_inclusive_isSet) {
        obj.insert(QString("skusAreInclusive"), ::OpenAPI::toJsonValue(m_skus_are_inclusive));
    }
    if (m_skus_gift.isSet()) {
        obj.insert(QString("skusGift"), ::OpenAPI::toJsonValue(m_skus_gift));
    }
    if (m_slas_ids.size() > 0) {
        obj.insert(QString("slasIds"), ::OpenAPI::toJsonValue(m_slas_ids));
    }
    if (m_stores.size() > 0) {
        obj.insert(QString("stores"), ::OpenAPI::toJsonValue(m_stores));
    }
    if (m_stores_are_inclusive_isSet) {
        obj.insert(QString("storesAreInclusive"), ::OpenAPI::toJsonValue(m_stores_are_inclusive));
    }
    if (m_total_value_celing_isSet) {
        obj.insert(QString("totalValueCeling"), ::OpenAPI::toJsonValue(m_total_value_celing));
    }
    if (m_total_value_floor_isSet) {
        obj.insert(QString("totalValueFloor"), ::OpenAPI::toJsonValue(m_total_value_floor));
    }
    if (m_total_value_include_all_items_isSet) {
        obj.insert(QString("totalValueIncludeAllItems"), ::OpenAPI::toJsonValue(m_total_value_include_all_items));
    }
    if (m_total_value_mode_isSet) {
        obj.insert(QString("totalValueMode"), ::OpenAPI::toJsonValue(m_total_value_mode));
    }
    if (m_total_value_purchase_isSet) {
        obj.insert(QString("totalValuePurchase"), ::OpenAPI::toJsonValue(m_total_value_purchase));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_use_new_progressive_algorithm_isSet) {
        obj.insert(QString("useNewProgressiveAlgorithm"), ::OpenAPI::toJsonValue(m_use_new_progressive_algorithm));
    }
    if (m_utm_campaign_isSet) {
        obj.insert(QString("utmCampaign"), ::OpenAPI::toJsonValue(m_utm_campaign));
    }
    if (m_utm_source_isSet) {
        obj.insert(QString("utmSource"), ::OpenAPI::toJsonValue(m_utm_source));
    }
    if (m_zip_code_ranges.size() > 0) {
        obj.insert(QString("zipCodeRanges"), ::OpenAPI::toJsonValue(m_zip_code_ranges));
    }
    return obj;
}

double OAIGetCalculatorConfigurationById_200_response::getAbsoluteShippingDiscountValue() const {
    return m_absolute_shipping_discount_value;
}
void OAIGetCalculatorConfigurationById_200_response::setAbsoluteShippingDiscountValue(const double &absolute_shipping_discount_value) {
    m_absolute_shipping_discount_value = absolute_shipping_discount_value;
    m_absolute_shipping_discount_value_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_absolute_shipping_discount_value_Set() const{
    return m_absolute_shipping_discount_value_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_absolute_shipping_discount_value_Valid() const{
    return m_absolute_shipping_discount_value_isValid;
}

bool OAIGetCalculatorConfigurationById_200_response::isAccumulateWithManualPrice() const {
    return m_accumulate_with_manual_price;
}
void OAIGetCalculatorConfigurationById_200_response::setAccumulateWithManualPrice(const bool &accumulate_with_manual_price) {
    m_accumulate_with_manual_price = accumulate_with_manual_price;
    m_accumulate_with_manual_price_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_accumulate_with_manual_price_Set() const{
    return m_accumulate_with_manual_price_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_accumulate_with_manual_price_Valid() const{
    return m_accumulate_with_manual_price_isValid;
}

bool OAIGetCalculatorConfigurationById_200_response::isActivateGiftsMultiplier() const {
    return m_activate_gifts_multiplier;
}
void OAIGetCalculatorConfigurationById_200_response::setActivateGiftsMultiplier(const bool &activate_gifts_multiplier) {
    m_activate_gifts_multiplier = activate_gifts_multiplier;
    m_activate_gifts_multiplier_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_activate_gifts_multiplier_Set() const{
    return m_activate_gifts_multiplier_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_activate_gifts_multiplier_Valid() const{
    return m_activate_gifts_multiplier_isValid;
}

QList<QString> OAIGetCalculatorConfigurationById_200_response::getActiveDaysOfWeek() const {
    return m_active_days_of_week;
}
void OAIGetCalculatorConfigurationById_200_response::setActiveDaysOfWeek(const QList<QString> &active_days_of_week) {
    m_active_days_of_week = active_days_of_week;
    m_active_days_of_week_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_active_days_of_week_Set() const{
    return m_active_days_of_week_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_active_days_of_week_Valid() const{
    return m_active_days_of_week_isValid;
}

QList<OAICreateOrUpdateCalculatorConfiguration_200_response_affiliates_inner> OAIGetCalculatorConfigurationById_200_response::getAffiliates() const {
    return m_affiliates;
}
void OAIGetCalculatorConfigurationById_200_response::setAffiliates(const QList<OAICreateOrUpdateCalculatorConfiguration_200_response_affiliates_inner> &affiliates) {
    m_affiliates = affiliates;
    m_affiliates_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_affiliates_Set() const{
    return m_affiliates_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_affiliates_Valid() const{
    return m_affiliates_isValid;
}

bool OAIGetCalculatorConfigurationById_200_response::isApplyToAllShippings() const {
    return m_apply_to_all_shippings;
}
void OAIGetCalculatorConfigurationById_200_response::setApplyToAllShippings(const bool &apply_to_all_shippings) {
    m_apply_to_all_shippings = apply_to_all_shippings;
    m_apply_to_all_shippings_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_apply_to_all_shippings_Set() const{
    return m_apply_to_all_shippings_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_apply_to_all_shippings_Valid() const{
    return m_apply_to_all_shippings_isValid;
}

bool OAIGetCalculatorConfigurationById_200_response::isAreSalesChannelIdsExclusive() const {
    return m_are_sales_channel_ids_exclusive;
}
void OAIGetCalculatorConfigurationById_200_response::setAreSalesChannelIdsExclusive(const bool &are_sales_channel_ids_exclusive) {
    m_are_sales_channel_ids_exclusive = are_sales_channel_ids_exclusive;
    m_are_sales_channel_ids_exclusive_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_are_sales_channel_ids_exclusive_Set() const{
    return m_are_sales_channel_ids_exclusive_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_are_sales_channel_ids_exclusive_Valid() const{
    return m_are_sales_channel_ids_exclusive_isValid;
}

QString OAIGetCalculatorConfigurationById_200_response::getBeginDateUtc() const {
    return m_begin_date_utc;
}
void OAIGetCalculatorConfigurationById_200_response::setBeginDateUtc(const QString &begin_date_utc) {
    m_begin_date_utc = begin_date_utc;
    m_begin_date_utc_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_begin_date_utc_Set() const{
    return m_begin_date_utc_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_begin_date_utc_Valid() const{
    return m_begin_date_utc_isValid;
}

QList<OAICreateOrUpdateCalculatorConfiguration_200_response_brands_inner> OAIGetCalculatorConfigurationById_200_response::getBrands() const {
    return m_brands;
}
void OAIGetCalculatorConfigurationById_200_response::setBrands(const QList<OAICreateOrUpdateCalculatorConfiguration_200_response_brands_inner> &brands) {
    m_brands = brands;
    m_brands_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_brands_Set() const{
    return m_brands_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_brands_Valid() const{
    return m_brands_isValid;
}

bool OAIGetCalculatorConfigurationById_200_response::isBrandsAreInclusive() const {
    return m_brands_are_inclusive;
}
void OAIGetCalculatorConfigurationById_200_response::setBrandsAreInclusive(const bool &brands_are_inclusive) {
    m_brands_are_inclusive = brands_are_inclusive;
    m_brands_are_inclusive_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_brands_are_inclusive_Set() const{
    return m_brands_are_inclusive_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_brands_are_inclusive_Valid() const{
    return m_brands_are_inclusive_isValid;
}

QList<QJsonValue> OAIGetCalculatorConfigurationById_200_response::getCampaigns() const {
    return m_campaigns;
}
void OAIGetCalculatorConfigurationById_200_response::setCampaigns(const QList<QJsonValue> &campaigns) {
    m_campaigns = campaigns;
    m_campaigns_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_campaigns_Set() const{
    return m_campaigns_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_campaigns_Valid() const{
    return m_campaigns_isValid;
}

QList<QJsonValue> OAIGetCalculatorConfigurationById_200_response::getCardIssuers() const {
    return m_card_issuers;
}
void OAIGetCalculatorConfigurationById_200_response::setCardIssuers(const QList<QJsonValue> &card_issuers) {
    m_card_issuers = card_issuers;
    m_card_issuers_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_card_issuers_Set() const{
    return m_card_issuers_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_card_issuers_Valid() const{
    return m_card_issuers_isValid;
}

QList<OAICreateOrUpdateCalculatorConfiguration_200_response_categories_inner> OAIGetCalculatorConfigurationById_200_response::getCategories() const {
    return m_categories;
}
void OAIGetCalculatorConfigurationById_200_response::setCategories(const QList<OAICreateOrUpdateCalculatorConfiguration_200_response_categories_inner> &categories) {
    m_categories = categories;
    m_categories_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_categories_Set() const{
    return m_categories_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_categories_Valid() const{
    return m_categories_isValid;
}

bool OAIGetCalculatorConfigurationById_200_response::isCategoriesAreInclusive() const {
    return m_categories_are_inclusive;
}
void OAIGetCalculatorConfigurationById_200_response::setCategoriesAreInclusive(const bool &categories_are_inclusive) {
    m_categories_are_inclusive = categories_are_inclusive;
    m_categories_are_inclusive_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_categories_are_inclusive_Set() const{
    return m_categories_are_inclusive_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_categories_are_inclusive_Valid() const{
    return m_categories_are_inclusive_isValid;
}

QList<QString> OAIGetCalculatorConfigurationById_200_response::getClusterExpressions() const {
    return m_cluster_expressions;
}
void OAIGetCalculatorConfigurationById_200_response::setClusterExpressions(const QList<QString> &cluster_expressions) {
    m_cluster_expressions = cluster_expressions;
    m_cluster_expressions_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_cluster_expressions_Set() const{
    return m_cluster_expressions_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_cluster_expressions_Valid() const{
    return m_cluster_expressions_isValid;
}

QList<OAICreateOrUpdateCalculatorConfiguration_200_response_collections_inner> OAIGetCalculatorConfigurationById_200_response::getCollections() const {
    return m_collections;
}
void OAIGetCalculatorConfigurationById_200_response::setCollections(const QList<OAICreateOrUpdateCalculatorConfiguration_200_response_collections_inner> &collections) {
    m_collections = collections;
    m_collections_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_collections_Set() const{
    return m_collections_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_collections_Valid() const{
    return m_collections_isValid;
}

QList<QString> OAIGetCalculatorConfigurationById_200_response::getCollections1BuyTogether() const {
    return m_collections1_buy_together;
}
void OAIGetCalculatorConfigurationById_200_response::setCollections1BuyTogether(const QList<QString> &collections1_buy_together) {
    m_collections1_buy_together = collections1_buy_together;
    m_collections1_buy_together_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_collections1_buy_together_Set() const{
    return m_collections1_buy_together_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_collections1_buy_together_Valid() const{
    return m_collections1_buy_together_isValid;
}

QList<QJsonValue> OAIGetCalculatorConfigurationById_200_response::getCollections2BuyTogether() const {
    return m_collections2_buy_together;
}
void OAIGetCalculatorConfigurationById_200_response::setCollections2BuyTogether(const QList<QJsonValue> &collections2_buy_together) {
    m_collections2_buy_together = collections2_buy_together;
    m_collections2_buy_together_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_collections2_buy_together_Set() const{
    return m_collections2_buy_together_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_collections2_buy_together_Valid() const{
    return m_collections2_buy_together_isValid;
}

bool OAIGetCalculatorConfigurationById_200_response::isCollectionsIsInclusive() const {
    return m_collections_is_inclusive;
}
void OAIGetCalculatorConfigurationById_200_response::setCollectionsIsInclusive(const bool &collections_is_inclusive) {
    m_collections_is_inclusive = collections_is_inclusive;
    m_collections_is_inclusive_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_collections_is_inclusive_Set() const{
    return m_collections_is_inclusive_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_collections_is_inclusive_Valid() const{
    return m_collections_is_inclusive_isValid;
}

bool OAIGetCalculatorConfigurationById_200_response::isCompareListPriceAndPrice() const {
    return m_compare_list_price_and_price;
}
void OAIGetCalculatorConfigurationById_200_response::setCompareListPriceAndPrice(const bool &compare_list_price_and_price) {
    m_compare_list_price_and_price = compare_list_price_and_price;
    m_compare_list_price_and_price_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_compare_list_price_and_price_Set() const{
    return m_compare_list_price_and_price_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_compare_list_price_and_price_Valid() const{
    return m_compare_list_price_and_price_isValid;
}

QList<QString> OAIGetCalculatorConfigurationById_200_response::getConditionsIds() const {
    return m_conditions_ids;
}
void OAIGetCalculatorConfigurationById_200_response::setConditionsIds(const QList<QString> &conditions_ids) {
    m_conditions_ids = conditions_ids;
    m_conditions_ids_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_conditions_ids_Set() const{
    return m_conditions_ids_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_conditions_ids_Valid() const{
    return m_conditions_ids_isValid;
}

QList<QJsonValue> OAIGetCalculatorConfigurationById_200_response::getCoupon() const {
    return m_coupon;
}
void OAIGetCalculatorConfigurationById_200_response::setCoupon(const QList<QJsonValue> &coupon) {
    m_coupon = coupon;
    m_coupon_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_coupon_Set() const{
    return m_coupon_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_coupon_Valid() const{
    return m_coupon_isValid;
}

bool OAIGetCalculatorConfigurationById_200_response::isCumulative() const {
    return m_cumulative;
}
void OAIGetCalculatorConfigurationById_200_response::setCumulative(const bool &cumulative) {
    m_cumulative = cumulative;
    m_cumulative_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_cumulative_Set() const{
    return m_cumulative_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_cumulative_Valid() const{
    return m_cumulative_isValid;
}

qint32 OAIGetCalculatorConfigurationById_200_response::getDaysAgoOfPurchases() const {
    return m_days_ago_of_purchases;
}
void OAIGetCalculatorConfigurationById_200_response::setDaysAgoOfPurchases(const qint32 &days_ago_of_purchases) {
    m_days_ago_of_purchases = days_ago_of_purchases;
    m_days_ago_of_purchases_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_days_ago_of_purchases_Set() const{
    return m_days_ago_of_purchases_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_days_ago_of_purchases_Valid() const{
    return m_days_ago_of_purchases_isValid;
}

QString OAIGetCalculatorConfigurationById_200_response::getDescription() const {
    return m_description;
}
void OAIGetCalculatorConfigurationById_200_response::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_description_Valid() const{
    return m_description_isValid;
}

bool OAIGetCalculatorConfigurationById_200_response::isDisableDeal() const {
    return m_disable_deal;
}
void OAIGetCalculatorConfigurationById_200_response::setDisableDeal(const bool &disable_deal) {
    m_disable_deal = disable_deal;
    m_disable_deal_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_disable_deal_Set() const{
    return m_disable_deal_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_disable_deal_Valid() const{
    return m_disable_deal_isValid;
}

QString OAIGetCalculatorConfigurationById_200_response::getDiscountType() const {
    return m_discount_type;
}
void OAIGetCalculatorConfigurationById_200_response::setDiscountType(const QString &discount_type) {
    m_discount_type = discount_type;
    m_discount_type_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_discount_type_Set() const{
    return m_discount_type_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_discount_type_Valid() const{
    return m_discount_type_isValid;
}

bool OAIGetCalculatorConfigurationById_200_response::isEnableBuyTogetherPerSku() const {
    return m_enable_buy_together_per_sku;
}
void OAIGetCalculatorConfigurationById_200_response::setEnableBuyTogetherPerSku(const bool &enable_buy_together_per_sku) {
    m_enable_buy_together_per_sku = enable_buy_together_per_sku;
    m_enable_buy_together_per_sku_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_enable_buy_together_per_sku_Set() const{
    return m_enable_buy_together_per_sku_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_enable_buy_together_per_sku_Valid() const{
    return m_enable_buy_together_per_sku_isValid;
}

QString OAIGetCalculatorConfigurationById_200_response::getEndDateUtc() const {
    return m_end_date_utc;
}
void OAIGetCalculatorConfigurationById_200_response::setEndDateUtc(const QString &end_date_utc) {
    m_end_date_utc = end_date_utc;
    m_end_date_utc_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_end_date_utc_Set() const{
    return m_end_date_utc_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_end_date_utc_Valid() const{
    return m_end_date_utc_isValid;
}

bool OAIGetCalculatorConfigurationById_200_response::isFirstBuyIsProfileOptimistic() const {
    return m_first_buy_is_profile_optimistic;
}
void OAIGetCalculatorConfigurationById_200_response::setFirstBuyIsProfileOptimistic(const bool &first_buy_is_profile_optimistic) {
    m_first_buy_is_profile_optimistic = first_buy_is_profile_optimistic;
    m_first_buy_is_profile_optimistic_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_first_buy_is_profile_optimistic_Set() const{
    return m_first_buy_is_profile_optimistic_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_first_buy_is_profile_optimistic_Valid() const{
    return m_first_buy_is_profile_optimistic_isValid;
}

QList<QString> OAIGetCalculatorConfigurationById_200_response::getGiftListTypes() const {
    return m_gift_list_types;
}
void OAIGetCalculatorConfigurationById_200_response::setGiftListTypes(const QList<QString> &gift_list_types) {
    m_gift_list_types = gift_list_types;
    m_gift_list_types_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_gift_list_types_Set() const{
    return m_gift_list_types_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_gift_list_types_Valid() const{
    return m_gift_list_types_isValid;
}

QString OAIGetCalculatorConfigurationById_200_response::getIdCalculatorConfiguration() const {
    return m_id_calculator_configuration;
}
void OAIGetCalculatorConfigurationById_200_response::setIdCalculatorConfiguration(const QString &id_calculator_configuration) {
    m_id_calculator_configuration = id_calculator_configuration;
    m_id_calculator_configuration_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_id_calculator_configuration_Set() const{
    return m_id_calculator_configuration_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_id_calculator_configuration_Valid() const{
    return m_id_calculator_configuration_isValid;
}

QString OAIGetCalculatorConfigurationById_200_response::getIdSeller() const {
    return m_id_seller;
}
void OAIGetCalculatorConfigurationById_200_response::setIdSeller(const QString &id_seller) {
    m_id_seller = id_seller;
    m_id_seller_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_id_seller_Set() const{
    return m_id_seller_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_id_seller_Valid() const{
    return m_id_seller_isValid;
}

bool OAIGetCalculatorConfigurationById_200_response::isIdSellerIsInclusive() const {
    return m_id_seller_is_inclusive;
}
void OAIGetCalculatorConfigurationById_200_response::setIdSellerIsInclusive(const bool &id_seller_is_inclusive) {
    m_id_seller_is_inclusive = id_seller_is_inclusive;
    m_id_seller_is_inclusive_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_id_seller_is_inclusive_Set() const{
    return m_id_seller_is_inclusive_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_id_seller_is_inclusive_Valid() const{
    return m_id_seller_is_inclusive_isValid;
}

QList<QString> OAIGetCalculatorConfigurationById_200_response::getIdsSalesChannel() const {
    return m_ids_sales_channel;
}
void OAIGetCalculatorConfigurationById_200_response::setIdsSalesChannel(const QList<QString> &ids_sales_channel) {
    m_ids_sales_channel = ids_sales_channel;
    m_ids_sales_channel_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_ids_sales_channel_Set() const{
    return m_ids_sales_channel_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_ids_sales_channel_Valid() const{
    return m_ids_sales_channel_isValid;
}

qint32 OAIGetCalculatorConfigurationById_200_response::getInstallment() const {
    return m_installment;
}
void OAIGetCalculatorConfigurationById_200_response::setInstallment(const qint32 &installment) {
    m_installment = installment;
    m_installment_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_installment_Set() const{
    return m_installment_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_installment_Valid() const{
    return m_installment_isValid;
}

bool OAIGetCalculatorConfigurationById_200_response::isIsActive() const {
    return m_is_active;
}
void OAIGetCalculatorConfigurationById_200_response::setIsActive(const bool &is_active) {
    m_is_active = is_active;
    m_is_active_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_is_active_Set() const{
    return m_is_active_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_is_active_Valid() const{
    return m_is_active_isValid;
}

bool OAIGetCalculatorConfigurationById_200_response::isIsArchived() const {
    return m_is_archived;
}
void OAIGetCalculatorConfigurationById_200_response::setIsArchived(const bool &is_archived) {
    m_is_archived = is_archived;
    m_is_archived_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_is_archived_Set() const{
    return m_is_archived_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_is_archived_Valid() const{
    return m_is_archived_isValid;
}

bool OAIGetCalculatorConfigurationById_200_response::isIsDifferentListPriceAndPrice() const {
    return m_is_different_list_price_and_price;
}
void OAIGetCalculatorConfigurationById_200_response::setIsDifferentListPriceAndPrice(const bool &is_different_list_price_and_price) {
    m_is_different_list_price_and_price = is_different_list_price_and_price;
    m_is_different_list_price_and_price_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_is_different_list_price_and_price_Set() const{
    return m_is_different_list_price_and_price_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_is_different_list_price_and_price_Valid() const{
    return m_is_different_list_price_and_price_isValid;
}

bool OAIGetCalculatorConfigurationById_200_response::isIsFeatured() const {
    return m_is_featured;
}
void OAIGetCalculatorConfigurationById_200_response::setIsFeatured(const bool &is_featured) {
    m_is_featured = is_featured;
    m_is_featured_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_is_featured_Set() const{
    return m_is_featured_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_is_featured_Valid() const{
    return m_is_featured_isValid;
}

bool OAIGetCalculatorConfigurationById_200_response::isIsFirstBuy() const {
    return m_is_first_buy;
}
void OAIGetCalculatorConfigurationById_200_response::setIsFirstBuy(const bool &is_first_buy) {
    m_is_first_buy = is_first_buy;
    m_is_first_buy_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_is_first_buy_Set() const{
    return m_is_first_buy_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_is_first_buy_Valid() const{
    return m_is_first_buy_isValid;
}

bool OAIGetCalculatorConfigurationById_200_response::isIsMinMaxInstallments() const {
    return m_is_min_max_installments;
}
void OAIGetCalculatorConfigurationById_200_response::setIsMinMaxInstallments(const bool &is_min_max_installments) {
    m_is_min_max_installments = is_min_max_installments;
    m_is_min_max_installments_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_is_min_max_installments_Set() const{
    return m_is_min_max_installments_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_is_min_max_installments_Valid() const{
    return m_is_min_max_installments_isValid;
}

bool OAIGetCalculatorConfigurationById_200_response::isIsSlaSelected() const {
    return m_is_sla_selected;
}
void OAIGetCalculatorConfigurationById_200_response::setIsSlaSelected(const bool &is_sla_selected) {
    m_is_sla_selected = is_sla_selected;
    m_is_sla_selected_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_is_sla_selected_Set() const{
    return m_is_sla_selected_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_is_sla_selected_Valid() const{
    return m_is_sla_selected_isValid;
}

double OAIGetCalculatorConfigurationById_200_response::getItemMaxPrice() const {
    return m_item_max_price;
}
void OAIGetCalculatorConfigurationById_200_response::setItemMaxPrice(const double &item_max_price) {
    m_item_max_price = item_max_price;
    m_item_max_price_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_item_max_price_Set() const{
    return m_item_max_price_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_item_max_price_Valid() const{
    return m_item_max_price_isValid;
}

double OAIGetCalculatorConfigurationById_200_response::getItemMinPrice() const {
    return m_item_min_price;
}
void OAIGetCalculatorConfigurationById_200_response::setItemMinPrice(const double &item_min_price) {
    m_item_min_price = item_min_price;
    m_item_min_price_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_item_min_price_Set() const{
    return m_item_min_price_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_item_min_price_Valid() const{
    return m_item_min_price_isValid;
}

QString OAIGetCalculatorConfigurationById_200_response::getLastModified() const {
    return m_last_modified;
}
void OAIGetCalculatorConfigurationById_200_response::setLastModified(const QString &last_modified) {
    m_last_modified = last_modified;
    m_last_modified_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_last_modified_Set() const{
    return m_last_modified_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_last_modified_Valid() const{
    return m_last_modified_isValid;
}

QList<QJsonValue> OAIGetCalculatorConfigurationById_200_response::getListSku1BuyTogether() const {
    return m_list_sku1_buy_together;
}
void OAIGetCalculatorConfigurationById_200_response::setListSku1BuyTogether(const QList<QJsonValue> &list_sku1_buy_together) {
    m_list_sku1_buy_together = list_sku1_buy_together;
    m_list_sku1_buy_together_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_list_sku1_buy_together_Set() const{
    return m_list_sku1_buy_together_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_list_sku1_buy_together_Valid() const{
    return m_list_sku1_buy_together_isValid;
}

QList<QJsonValue> OAIGetCalculatorConfigurationById_200_response::getListSku2BuyTogether() const {
    return m_list_sku2_buy_together;
}
void OAIGetCalculatorConfigurationById_200_response::setListSku2BuyTogether(const QList<QJsonValue> &list_sku2_buy_together) {
    m_list_sku2_buy_together = list_sku2_buy_together;
    m_list_sku2_buy_together_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_list_sku2_buy_together_Set() const{
    return m_list_sku2_buy_together_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_list_sku2_buy_together_Valid() const{
    return m_list_sku2_buy_together_isValid;
}

QList<QString> OAIGetCalculatorConfigurationById_200_response::getMarketingTags() const {
    return m_marketing_tags;
}
void OAIGetCalculatorConfigurationById_200_response::setMarketingTags(const QList<QString> &marketing_tags) {
    m_marketing_tags = marketing_tags;
    m_marketing_tags_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_marketing_tags_Set() const{
    return m_marketing_tags_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_marketing_tags_Valid() const{
    return m_marketing_tags_isValid;
}

bool OAIGetCalculatorConfigurationById_200_response::isMarketingTagsAreNotInclusive() const {
    return m_marketing_tags_are_not_inclusive;
}
void OAIGetCalculatorConfigurationById_200_response::setMarketingTagsAreNotInclusive(const bool &marketing_tags_are_not_inclusive) {
    m_marketing_tags_are_not_inclusive = marketing_tags_are_not_inclusive;
    m_marketing_tags_are_not_inclusive_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_marketing_tags_are_not_inclusive_Set() const{
    return m_marketing_tags_are_not_inclusive_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_marketing_tags_are_not_inclusive_Valid() const{
    return m_marketing_tags_are_not_inclusive_isValid;
}

qint32 OAIGetCalculatorConfigurationById_200_response::getMaxInstallment() const {
    return m_max_installment;
}
void OAIGetCalculatorConfigurationById_200_response::setMaxInstallment(const qint32 &max_installment) {
    m_max_installment = max_installment;
    m_max_installment_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_max_installment_Set() const{
    return m_max_installment_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_max_installment_Valid() const{
    return m_max_installment_isValid;
}

qint32 OAIGetCalculatorConfigurationById_200_response::getMaxNumberOfAffectedItems() const {
    return m_max_number_of_affected_items;
}
void OAIGetCalculatorConfigurationById_200_response::setMaxNumberOfAffectedItems(const qint32 &max_number_of_affected_items) {
    m_max_number_of_affected_items = max_number_of_affected_items;
    m_max_number_of_affected_items_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_max_number_of_affected_items_Set() const{
    return m_max_number_of_affected_items_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_max_number_of_affected_items_Valid() const{
    return m_max_number_of_affected_items_isValid;
}

QString OAIGetCalculatorConfigurationById_200_response::getMaxNumberOfAffectedItemsGroupKey() const {
    return m_max_number_of_affected_items_group_key;
}
void OAIGetCalculatorConfigurationById_200_response::setMaxNumberOfAffectedItemsGroupKey(const QString &max_number_of_affected_items_group_key) {
    m_max_number_of_affected_items_group_key = max_number_of_affected_items_group_key;
    m_max_number_of_affected_items_group_key_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_max_number_of_affected_items_group_key_Set() const{
    return m_max_number_of_affected_items_group_key_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_max_number_of_affected_items_group_key_Valid() const{
    return m_max_number_of_affected_items_group_key_isValid;
}

QList<QJsonValue> OAIGetCalculatorConfigurationById_200_response::getMaxPricesPerItems() const {
    return m_max_prices_per_items;
}
void OAIGetCalculatorConfigurationById_200_response::setMaxPricesPerItems(const QList<QJsonValue> &max_prices_per_items) {
    m_max_prices_per_items = max_prices_per_items;
    m_max_prices_per_items_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_max_prices_per_items_Set() const{
    return m_max_prices_per_items_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_max_prices_per_items_Valid() const{
    return m_max_prices_per_items_isValid;
}

qint32 OAIGetCalculatorConfigurationById_200_response::getMaxUsage() const {
    return m_max_usage;
}
void OAIGetCalculatorConfigurationById_200_response::setMaxUsage(const qint32 &max_usage) {
    m_max_usage = max_usage;
    m_max_usage_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_max_usage_Set() const{
    return m_max_usage_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_max_usage_Valid() const{
    return m_max_usage_isValid;
}

qint32 OAIGetCalculatorConfigurationById_200_response::getMaxUsagePerClient() const {
    return m_max_usage_per_client;
}
void OAIGetCalculatorConfigurationById_200_response::setMaxUsagePerClient(const qint32 &max_usage_per_client) {
    m_max_usage_per_client = max_usage_per_client;
    m_max_usage_per_client_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_max_usage_per_client_Set() const{
    return m_max_usage_per_client_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_max_usage_per_client_Valid() const{
    return m_max_usage_per_client_isValid;
}

double OAIGetCalculatorConfigurationById_200_response::getMaximumUnitPriceDiscount() const {
    return m_maximum_unit_price_discount;
}
void OAIGetCalculatorConfigurationById_200_response::setMaximumUnitPriceDiscount(const double &maximum_unit_price_discount) {
    m_maximum_unit_price_discount = maximum_unit_price_discount;
    m_maximum_unit_price_discount_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_maximum_unit_price_discount_Set() const{
    return m_maximum_unit_price_discount_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_maximum_unit_price_discount_Valid() const{
    return m_maximum_unit_price_discount_isValid;
}

QList<QJsonValue> OAIGetCalculatorConfigurationById_200_response::getMerchants() const {
    return m_merchants;
}
void OAIGetCalculatorConfigurationById_200_response::setMerchants(const QList<QJsonValue> &merchants) {
    m_merchants = merchants;
    m_merchants_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_merchants_Set() const{
    return m_merchants_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_merchants_Valid() const{
    return m_merchants_isValid;
}

qint32 OAIGetCalculatorConfigurationById_200_response::getMinInstallment() const {
    return m_min_installment;
}
void OAIGetCalculatorConfigurationById_200_response::setMinInstallment(const qint32 &min_installment) {
    m_min_installment = min_installment;
    m_min_installment_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_min_installment_Set() const{
    return m_min_installment_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_min_installment_Valid() const{
    return m_min_installment_isValid;
}

qint32 OAIGetCalculatorConfigurationById_200_response::getMinimumQuantityBuyTogether() const {
    return m_minimum_quantity_buy_together;
}
void OAIGetCalculatorConfigurationById_200_response::setMinimumQuantityBuyTogether(const qint32 &minimum_quantity_buy_together) {
    m_minimum_quantity_buy_together = minimum_quantity_buy_together;
    m_minimum_quantity_buy_together_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_minimum_quantity_buy_together_Set() const{
    return m_minimum_quantity_buy_together_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_minimum_quantity_buy_together_Valid() const{
    return m_minimum_quantity_buy_together_isValid;
}

QMap<QString, QString> OAIGetCalculatorConfigurationById_200_response::getMultipleSkusCause() const {
    return m_multiple_skus_cause;
}
void OAIGetCalculatorConfigurationById_200_response::setMultipleSkusCause(const QMap<QString, QString> &multiple_skus_cause) {
    m_multiple_skus_cause = multiple_skus_cause;
    m_multiple_skus_cause_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_multiple_skus_cause_Set() const{
    return m_multiple_skus_cause_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_multiple_skus_cause_Valid() const{
    return m_multiple_skus_cause_isValid;
}

bool OAIGetCalculatorConfigurationById_200_response::isMultipleUsePerClient() const {
    return m_multiple_use_per_client;
}
void OAIGetCalculatorConfigurationById_200_response::setMultipleUsePerClient(const bool &multiple_use_per_client) {
    m_multiple_use_per_client = multiple_use_per_client;
    m_multiple_use_per_client_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_multiple_use_per_client_Set() const{
    return m_multiple_use_per_client_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_multiple_use_per_client_Valid() const{
    return m_multiple_use_per_client_isValid;
}

QString OAIGetCalculatorConfigurationById_200_response::getName() const {
    return m_name;
}
void OAIGetCalculatorConfigurationById_200_response::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_name_Valid() const{
    return m_name_isValid;
}

double OAIGetCalculatorConfigurationById_200_response::getNewOffset() const {
    return m_new_offset;
}
void OAIGetCalculatorConfigurationById_200_response::setNewOffset(const double &new_offset) {
    m_new_offset = new_offset;
    m_new_offset_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_new_offset_Set() const{
    return m_new_offset_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_new_offset_Valid() const{
    return m_new_offset_isValid;
}

double OAIGetCalculatorConfigurationById_200_response::getNominalDiscountValue() const {
    return m_nominal_discount_value;
}
void OAIGetCalculatorConfigurationById_200_response::setNominalDiscountValue(const double &nominal_discount_value) {
    m_nominal_discount_value = nominal_discount_value;
    m_nominal_discount_value_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_nominal_discount_value_Set() const{
    return m_nominal_discount_value_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_nominal_discount_value_Valid() const{
    return m_nominal_discount_value_isValid;
}

double OAIGetCalculatorConfigurationById_200_response::getNominalRewardValue() const {
    return m_nominal_reward_value;
}
void OAIGetCalculatorConfigurationById_200_response::setNominalRewardValue(const double &nominal_reward_value) {
    m_nominal_reward_value = nominal_reward_value;
    m_nominal_reward_value_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_nominal_reward_value_Set() const{
    return m_nominal_reward_value_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_nominal_reward_value_Valid() const{
    return m_nominal_reward_value_isValid;
}

double OAIGetCalculatorConfigurationById_200_response::getNominalShippingDiscountValue() const {
    return m_nominal_shipping_discount_value;
}
void OAIGetCalculatorConfigurationById_200_response::setNominalShippingDiscountValue(const double &nominal_shipping_discount_value) {
    m_nominal_shipping_discount_value = nominal_shipping_discount_value;
    m_nominal_shipping_discount_value_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_nominal_shipping_discount_value_Set() const{
    return m_nominal_shipping_discount_value_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_nominal_shipping_discount_value_Valid() const{
    return m_nominal_shipping_discount_value_isValid;
}

double OAIGetCalculatorConfigurationById_200_response::getNominalTax() const {
    return m_nominal_tax;
}
void OAIGetCalculatorConfigurationById_200_response::setNominalTax(const double &nominal_tax) {
    m_nominal_tax = nominal_tax;
    m_nominal_tax_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_nominal_tax_Set() const{
    return m_nominal_tax_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_nominal_tax_Valid() const{
    return m_nominal_tax_isValid;
}

qint32 OAIGetCalculatorConfigurationById_200_response::getOffset() const {
    return m_offset;
}
void OAIGetCalculatorConfigurationById_200_response::setOffset(const qint32 &offset) {
    m_offset = offset;
    m_offset_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_offset_Set() const{
    return m_offset_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_offset_Valid() const{
    return m_offset_isValid;
}

QString OAIGetCalculatorConfigurationById_200_response::getOrderStatusRewardValue() const {
    return m_order_status_reward_value;
}
void OAIGetCalculatorConfigurationById_200_response::setOrderStatusRewardValue(const QString &order_status_reward_value) {
    m_order_status_reward_value = order_status_reward_value;
    m_order_status_reward_value_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_order_status_reward_value_Set() const{
    return m_order_status_reward_value_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_order_status_reward_value_Valid() const{
    return m_order_status_reward_value_isValid;
}

QString OAIGetCalculatorConfigurationById_200_response::getOrigin() const {
    return m_origin;
}
void OAIGetCalculatorConfigurationById_200_response::setOrigin(const QString &origin) {
    m_origin = origin;
    m_origin_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_origin_Set() const{
    return m_origin_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_origin_Valid() const{
    return m_origin_isValid;
}

QList<OAICreateOrUpdateCalculatorConfiguration_200_response_paymentsMethods_inner> OAIGetCalculatorConfigurationById_200_response::getPaymentsMethods() const {
    return m_payments_methods;
}
void OAIGetCalculatorConfigurationById_200_response::setPaymentsMethods(const QList<OAICreateOrUpdateCalculatorConfiguration_200_response_paymentsMethods_inner> &payments_methods) {
    m_payments_methods = payments_methods;
    m_payments_methods_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_payments_methods_Set() const{
    return m_payments_methods_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_payments_methods_Valid() const{
    return m_payments_methods_isValid;
}

QList<QJsonValue> OAIGetCalculatorConfigurationById_200_response::getPaymentsRules() const {
    return m_payments_rules;
}
void OAIGetCalculatorConfigurationById_200_response::setPaymentsRules(const QList<QJsonValue> &payments_rules) {
    m_payments_rules = payments_rules;
    m_payments_rules_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_payments_rules_Set() const{
    return m_payments_rules_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_payments_rules_Valid() const{
    return m_payments_rules_isValid;
}

double OAIGetCalculatorConfigurationById_200_response::getPercentualDiscountValue() const {
    return m_percentual_discount_value;
}
void OAIGetCalculatorConfigurationById_200_response::setPercentualDiscountValue(const double &percentual_discount_value) {
    m_percentual_discount_value = percentual_discount_value;
    m_percentual_discount_value_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_percentual_discount_value_Set() const{
    return m_percentual_discount_value_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_percentual_discount_value_Valid() const{
    return m_percentual_discount_value_isValid;
}

QList<double> OAIGetCalculatorConfigurationById_200_response::getPercentualDiscountValueList() const {
    return m_percentual_discount_value_list;
}
void OAIGetCalculatorConfigurationById_200_response::setPercentualDiscountValueList(const QList<double> &percentual_discount_value_list) {
    m_percentual_discount_value_list = percentual_discount_value_list;
    m_percentual_discount_value_list_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_percentual_discount_value_list_Set() const{
    return m_percentual_discount_value_list_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_percentual_discount_value_list_Valid() const{
    return m_percentual_discount_value_list_isValid;
}

double OAIGetCalculatorConfigurationById_200_response::getPercentualDiscountValueList1() const {
    return m_percentual_discount_value_list1;
}
void OAIGetCalculatorConfigurationById_200_response::setPercentualDiscountValueList1(const double &percentual_discount_value_list1) {
    m_percentual_discount_value_list1 = percentual_discount_value_list1;
    m_percentual_discount_value_list1_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_percentual_discount_value_list1_Set() const{
    return m_percentual_discount_value_list1_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_percentual_discount_value_list1_Valid() const{
    return m_percentual_discount_value_list1_isValid;
}

double OAIGetCalculatorConfigurationById_200_response::getPercentualDiscountValueList2() const {
    return m_percentual_discount_value_list2;
}
void OAIGetCalculatorConfigurationById_200_response::setPercentualDiscountValueList2(const double &percentual_discount_value_list2) {
    m_percentual_discount_value_list2 = percentual_discount_value_list2;
    m_percentual_discount_value_list2_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_percentual_discount_value_list2_Set() const{
    return m_percentual_discount_value_list2_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_percentual_discount_value_list2_Valid() const{
    return m_percentual_discount_value_list2_isValid;
}

double OAIGetCalculatorConfigurationById_200_response::getPercentualRewardValue() const {
    return m_percentual_reward_value;
}
void OAIGetCalculatorConfigurationById_200_response::setPercentualRewardValue(const double &percentual_reward_value) {
    m_percentual_reward_value = percentual_reward_value;
    m_percentual_reward_value_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_percentual_reward_value_Set() const{
    return m_percentual_reward_value_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_percentual_reward_value_Valid() const{
    return m_percentual_reward_value_isValid;
}

double OAIGetCalculatorConfigurationById_200_response::getPercentualShippingDiscountValue() const {
    return m_percentual_shipping_discount_value;
}
void OAIGetCalculatorConfigurationById_200_response::setPercentualShippingDiscountValue(const double &percentual_shipping_discount_value) {
    m_percentual_shipping_discount_value = percentual_shipping_discount_value;
    m_percentual_shipping_discount_value_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_percentual_shipping_discount_value_Set() const{
    return m_percentual_shipping_discount_value_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_percentual_shipping_discount_value_Valid() const{
    return m_percentual_shipping_discount_value_isValid;
}

double OAIGetCalculatorConfigurationById_200_response::getPercentualTax() const {
    return m_percentual_tax;
}
void OAIGetCalculatorConfigurationById_200_response::setPercentualTax(const double &percentual_tax) {
    m_percentual_tax = percentual_tax;
    m_percentual_tax_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_percentual_tax_Set() const{
    return m_percentual_tax_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_percentual_tax_Valid() const{
    return m_percentual_tax_isValid;
}

QList<OAICreateOrUpdateCalculatorConfiguration_200_response_products_inner> OAIGetCalculatorConfigurationById_200_response::getProducts() const {
    return m_products;
}
void OAIGetCalculatorConfigurationById_200_response::setProducts(const QList<OAICreateOrUpdateCalculatorConfiguration_200_response_products_inner> &products) {
    m_products = products;
    m_products_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_products_Set() const{
    return m_products_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_products_Valid() const{
    return m_products_isValid;
}

bool OAIGetCalculatorConfigurationById_200_response::isProductsAreInclusive() const {
    return m_products_are_inclusive;
}
void OAIGetCalculatorConfigurationById_200_response::setProductsAreInclusive(const bool &products_are_inclusive) {
    m_products_are_inclusive = products_are_inclusive;
    m_products_are_inclusive_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_products_are_inclusive_Set() const{
    return m_products_are_inclusive_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_products_are_inclusive_Valid() const{
    return m_products_are_inclusive_isValid;
}

QList<QJsonValue> OAIGetCalculatorConfigurationById_200_response::getProductsSpecifications() const {
    return m_products_specifications;
}
void OAIGetCalculatorConfigurationById_200_response::setProductsSpecifications(const QList<QJsonValue> &products_specifications) {
    m_products_specifications = products_specifications;
    m_products_specifications_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_products_specifications_Set() const{
    return m_products_specifications_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_products_specifications_Valid() const{
    return m_products_specifications_isValid;
}

qint32 OAIGetCalculatorConfigurationById_200_response::getQuantityToAffectBuyTogether() const {
    return m_quantity_to_affect_buy_together;
}
void OAIGetCalculatorConfigurationById_200_response::setQuantityToAffectBuyTogether(const qint32 &quantity_to_affect_buy_together) {
    m_quantity_to_affect_buy_together = quantity_to_affect_buy_together;
    m_quantity_to_affect_buy_together_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_quantity_to_affect_buy_together_Set() const{
    return m_quantity_to_affect_buy_together_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_quantity_to_affect_buy_together_Valid() const{
    return m_quantity_to_affect_buy_together_isValid;
}

double OAIGetCalculatorConfigurationById_200_response::getRebatePercentualDiscountValue() const {
    return m_rebate_percentual_discount_value;
}
void OAIGetCalculatorConfigurationById_200_response::setRebatePercentualDiscountValue(const double &rebate_percentual_discount_value) {
    m_rebate_percentual_discount_value = rebate_percentual_discount_value;
    m_rebate_percentual_discount_value_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_rebate_percentual_discount_value_Set() const{
    return m_rebate_percentual_discount_value_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_rebate_percentual_discount_value_Valid() const{
    return m_rebate_percentual_discount_value_isValid;
}

QList<QString> OAIGetCalculatorConfigurationById_200_response::getRestrictionsBins() const {
    return m_restrictions_bins;
}
void OAIGetCalculatorConfigurationById_200_response::setRestrictionsBins(const QList<QString> &restrictions_bins) {
    m_restrictions_bins = restrictions_bins;
    m_restrictions_bins_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_restrictions_bins_Set() const{
    return m_restrictions_bins_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_restrictions_bins_Valid() const{
    return m_restrictions_bins_isValid;
}

double OAIGetCalculatorConfigurationById_200_response::getShippingPercentualTax() const {
    return m_shipping_percentual_tax;
}
void OAIGetCalculatorConfigurationById_200_response::setShippingPercentualTax(const double &shipping_percentual_tax) {
    m_shipping_percentual_tax = shipping_percentual_tax;
    m_shipping_percentual_tax_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_shipping_percentual_tax_Set() const{
    return m_shipping_percentual_tax_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_shipping_percentual_tax_Valid() const{
    return m_shipping_percentual_tax_isValid;
}

bool OAIGetCalculatorConfigurationById_200_response::isShouldDistributeDiscountAmongMatchedItems() const {
    return m_should_distribute_discount_among_matched_items;
}
void OAIGetCalculatorConfigurationById_200_response::setShouldDistributeDiscountAmongMatchedItems(const bool &should_distribute_discount_among_matched_items) {
    m_should_distribute_discount_among_matched_items = should_distribute_discount_among_matched_items;
    m_should_distribute_discount_among_matched_items_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_should_distribute_discount_among_matched_items_Set() const{
    return m_should_distribute_discount_among_matched_items_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_should_distribute_discount_among_matched_items_Valid() const{
    return m_should_distribute_discount_among_matched_items_isValid;
}

QList<OAICreateOrUpdateCalculatorConfiguration_200_response_skus_inner> OAIGetCalculatorConfigurationById_200_response::getSkus() const {
    return m_skus;
}
void OAIGetCalculatorConfigurationById_200_response::setSkus(const QList<OAICreateOrUpdateCalculatorConfiguration_200_response_skus_inner> &skus) {
    m_skus = skus;
    m_skus_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_skus_Set() const{
    return m_skus_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_skus_Valid() const{
    return m_skus_isValid;
}

bool OAIGetCalculatorConfigurationById_200_response::isSkusAreInclusive() const {
    return m_skus_are_inclusive;
}
void OAIGetCalculatorConfigurationById_200_response::setSkusAreInclusive(const bool &skus_are_inclusive) {
    m_skus_are_inclusive = skus_are_inclusive;
    m_skus_are_inclusive_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_skus_are_inclusive_Set() const{
    return m_skus_are_inclusive_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_skus_are_inclusive_Valid() const{
    return m_skus_are_inclusive_isValid;
}

OAICreateOrUpdateCalculatorConfiguration_200_response_skusGift OAIGetCalculatorConfigurationById_200_response::getSkusGift() const {
    return m_skus_gift;
}
void OAIGetCalculatorConfigurationById_200_response::setSkusGift(const OAICreateOrUpdateCalculatorConfiguration_200_response_skusGift &skus_gift) {
    m_skus_gift = skus_gift;
    m_skus_gift_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_skus_gift_Set() const{
    return m_skus_gift_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_skus_gift_Valid() const{
    return m_skus_gift_isValid;
}

QList<QString> OAIGetCalculatorConfigurationById_200_response::getSlasIds() const {
    return m_slas_ids;
}
void OAIGetCalculatorConfigurationById_200_response::setSlasIds(const QList<QString> &slas_ids) {
    m_slas_ids = slas_ids;
    m_slas_ids_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_slas_ids_Set() const{
    return m_slas_ids_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_slas_ids_Valid() const{
    return m_slas_ids_isValid;
}

QList<QJsonValue> OAIGetCalculatorConfigurationById_200_response::getStores() const {
    return m_stores;
}
void OAIGetCalculatorConfigurationById_200_response::setStores(const QList<QJsonValue> &stores) {
    m_stores = stores;
    m_stores_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_stores_Set() const{
    return m_stores_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_stores_Valid() const{
    return m_stores_isValid;
}

bool OAIGetCalculatorConfigurationById_200_response::isStoresAreInclusive() const {
    return m_stores_are_inclusive;
}
void OAIGetCalculatorConfigurationById_200_response::setStoresAreInclusive(const bool &stores_are_inclusive) {
    m_stores_are_inclusive = stores_are_inclusive;
    m_stores_are_inclusive_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_stores_are_inclusive_Set() const{
    return m_stores_are_inclusive_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_stores_are_inclusive_Valid() const{
    return m_stores_are_inclusive_isValid;
}

double OAIGetCalculatorConfigurationById_200_response::getTotalValueCeling() const {
    return m_total_value_celing;
}
void OAIGetCalculatorConfigurationById_200_response::setTotalValueCeling(const double &total_value_celing) {
    m_total_value_celing = total_value_celing;
    m_total_value_celing_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_total_value_celing_Set() const{
    return m_total_value_celing_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_total_value_celing_Valid() const{
    return m_total_value_celing_isValid;
}

double OAIGetCalculatorConfigurationById_200_response::getTotalValueFloor() const {
    return m_total_value_floor;
}
void OAIGetCalculatorConfigurationById_200_response::setTotalValueFloor(const double &total_value_floor) {
    m_total_value_floor = total_value_floor;
    m_total_value_floor_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_total_value_floor_Set() const{
    return m_total_value_floor_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_total_value_floor_Valid() const{
    return m_total_value_floor_isValid;
}

bool OAIGetCalculatorConfigurationById_200_response::isTotalValueIncludeAllItems() const {
    return m_total_value_include_all_items;
}
void OAIGetCalculatorConfigurationById_200_response::setTotalValueIncludeAllItems(const bool &total_value_include_all_items) {
    m_total_value_include_all_items = total_value_include_all_items;
    m_total_value_include_all_items_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_total_value_include_all_items_Set() const{
    return m_total_value_include_all_items_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_total_value_include_all_items_Valid() const{
    return m_total_value_include_all_items_isValid;
}

QString OAIGetCalculatorConfigurationById_200_response::getTotalValueMode() const {
    return m_total_value_mode;
}
void OAIGetCalculatorConfigurationById_200_response::setTotalValueMode(const QString &total_value_mode) {
    m_total_value_mode = total_value_mode;
    m_total_value_mode_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_total_value_mode_Set() const{
    return m_total_value_mode_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_total_value_mode_Valid() const{
    return m_total_value_mode_isValid;
}

double OAIGetCalculatorConfigurationById_200_response::getTotalValuePurchase() const {
    return m_total_value_purchase;
}
void OAIGetCalculatorConfigurationById_200_response::setTotalValuePurchase(const double &total_value_purchase) {
    m_total_value_purchase = total_value_purchase;
    m_total_value_purchase_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_total_value_purchase_Set() const{
    return m_total_value_purchase_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_total_value_purchase_Valid() const{
    return m_total_value_purchase_isValid;
}

QString OAIGetCalculatorConfigurationById_200_response::getType() const {
    return m_type;
}
void OAIGetCalculatorConfigurationById_200_response::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_type_Set() const{
    return m_type_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIGetCalculatorConfigurationById_200_response::isUseNewProgressiveAlgorithm() const {
    return m_use_new_progressive_algorithm;
}
void OAIGetCalculatorConfigurationById_200_response::setUseNewProgressiveAlgorithm(const bool &use_new_progressive_algorithm) {
    m_use_new_progressive_algorithm = use_new_progressive_algorithm;
    m_use_new_progressive_algorithm_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_use_new_progressive_algorithm_Set() const{
    return m_use_new_progressive_algorithm_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_use_new_progressive_algorithm_Valid() const{
    return m_use_new_progressive_algorithm_isValid;
}

QString OAIGetCalculatorConfigurationById_200_response::getUtmCampaign() const {
    return m_utm_campaign;
}
void OAIGetCalculatorConfigurationById_200_response::setUtmCampaign(const QString &utm_campaign) {
    m_utm_campaign = utm_campaign;
    m_utm_campaign_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_utm_campaign_Set() const{
    return m_utm_campaign_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_utm_campaign_Valid() const{
    return m_utm_campaign_isValid;
}

QString OAIGetCalculatorConfigurationById_200_response::getUtmSource() const {
    return m_utm_source;
}
void OAIGetCalculatorConfigurationById_200_response::setUtmSource(const QString &utm_source) {
    m_utm_source = utm_source;
    m_utm_source_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_utm_source_Set() const{
    return m_utm_source_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_utm_source_Valid() const{
    return m_utm_source_isValid;
}

QList<OAIGetCalculatorConfigurationById_200_response_zipCodeRanges_inner> OAIGetCalculatorConfigurationById_200_response::getZipCodeRanges() const {
    return m_zip_code_ranges;
}
void OAIGetCalculatorConfigurationById_200_response::setZipCodeRanges(const QList<OAIGetCalculatorConfigurationById_200_response_zipCodeRanges_inner> &zip_code_ranges) {
    m_zip_code_ranges = zip_code_ranges;
    m_zip_code_ranges_isSet = true;
}

bool OAIGetCalculatorConfigurationById_200_response::is_zip_code_ranges_Set() const{
    return m_zip_code_ranges_isSet;
}

bool OAIGetCalculatorConfigurationById_200_response::is_zip_code_ranges_Valid() const{
    return m_zip_code_ranges_isValid;
}

bool OAIGetCalculatorConfigurationById_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_absolute_shipping_discount_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_accumulate_with_manual_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_activate_gifts_multiplier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_active_days_of_week.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_affiliates.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_apply_to_all_shippings_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_are_sales_channel_ids_exclusive_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_begin_date_utc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_brands.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_brands_are_inclusive_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_campaigns.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_card_issuers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_categories.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_categories_are_inclusive_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cluster_expressions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_collections.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_collections1_buy_together.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_collections2_buy_together.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_collections_is_inclusive_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_compare_list_price_and_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_conditions_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_coupon.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_cumulative_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_days_ago_of_purchases_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_disable_deal_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_discount_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_buy_together_per_sku_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_date_utc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_buy_is_profile_optimistic_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gift_list_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_calculator_configuration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_seller_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_seller_is_inclusive_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ids_sales_channel.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_installment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_archived_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_different_list_price_and_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_featured_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_first_buy_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_min_max_installments_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_sla_selected_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_max_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_min_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_list_sku1_buy_together.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_list_sku2_buy_together.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_marketing_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_marketing_tags_are_not_inclusive_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_installment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_number_of_affected_items_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_number_of_affected_items_group_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_prices_per_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_usage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_usage_per_client_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_maximum_unit_price_discount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_merchants.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_min_installment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_minimum_quantity_buy_together_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_multiple_skus_cause.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_multiple_use_per_client_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_new_offset_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_nominal_discount_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_nominal_reward_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_nominal_shipping_discount_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_nominal_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_offset_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_status_reward_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_origin_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payments_methods.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_payments_rules.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_percentual_discount_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_percentual_discount_value_list.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_percentual_discount_value_list1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_percentual_discount_value_list2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_percentual_reward_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_percentual_shipping_discount_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_percentual_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_products.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_products_are_inclusive_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_products_specifications.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_to_affect_buy_together_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rebate_percentual_discount_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_restrictions_bins.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_percentual_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_should_distribute_discount_among_matched_items_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_skus.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_skus_are_inclusive_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_skus_gift.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_slas_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_stores.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_stores_are_inclusive_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_value_celing_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_value_floor_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_value_include_all_items_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_value_mode_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_value_purchase_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_use_new_progressive_algorithm_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_utm_campaign_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_utm_source_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_zip_code_ranges.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetCalculatorConfigurationById_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
