/**
 * Promotions & Taxes API
 *   > Check the new [Promotions onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/promotions-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Promotions and is organized by focusing on the developer's journey.     The Promotions & Taxes API allows you to manage and retrieve all promotions, coupons and tax rules from your VTEX store.     ## Index     ### Coupons   `POST` [Create multiple coupons](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-multiple-coupons)   `POST` [Create coupon](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-coupon)   `GET` [Get coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/getbycouponcode)   `GET` [Get archived coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/getarchivedbycouponcode)   `POST` [Archive coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/archivebycouponcode)   `POST` [Update coupon](https://developers.vtex.com/vtex-rest-api/reference/update)   `GET` [Get all coupons](https://developers.vtex.com/vtex-rest-api/reference/getall)   `POST` [Coupon Massive Generation](https://developers.vtex.com/vtex-rest-api/reference/massivegeneration)   `GET` [Get coupon usage](https://developers.vtex.com/vtex-rest-api/reference/getusage)   `POST` [Unarchive coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/unarchivebycouponcode)     ### Promotions and Taxes   `GET` [Get All Promotions](https://developers.vtex.com/vtex-rest-api/reference/getallbenefits)   `GET` [Get All Taxes](https://developers.vtex.com/vtex-rest-api/reference/getalltaxes)   `GET` [Get Promotion or Tax By ID](https://developers.vtex.com/vtex-rest-api/reference/getcalculatorconfigurationbyid)   `POST` [Create or Update Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/createorupdatecalculatorconfiguration)   `POST` [Create Multiple SKU Promotion](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-import-calculatorconfiguration)   `PUT` [Update Multiple SKU Promotion](https://developers.vtex.com/vtex-rest-api/reference/put_api-rnb-pvt-import-calculatorconfiguration-promotionid)   `POST` [Archive Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/archivepromotion-1)   `POST` [Unarchive Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/unarchivepromotion-1)   `GET` [List archived Promotions](https://developers.vtex.com/vtex-rest-api/reference/getarchivedpromotions)   `GET` [List archived Taxes](https://developers.vtex.com/vtex-rest-api/reference/getarchivedtaxes)       ### Campaign Audiences   `GET` [Get campaign audience configuration](https://developers.vtex.com/vtex-rest-api/reference/getcampaignconfiguration)   `POST` [Create campaign audience](https://developers.vtex.com/vtex-rest-api/reference/setcampaignconfiguration)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISetcampaignconfiguration_200_response_targetConfigurations_inner.h
 *
 * Object with information about the target audience.
 */

#ifndef OAISetcampaignconfiguration_200_response_targetConfigurations_inner_H
#define OAISetcampaignconfiguration_200_response_targetConfigurations_inner_H

#include <QJsonObject>

#include "OAICreateOrUpdateCalculatorConfiguration_200_response_affiliates_inner.h"
#include "OAICreateOrUpdateCalculatorConfiguration_200_response_brands_inner.h"
#include "OAICreateOrUpdateCalculatorConfiguration_200_response_categories_inner.h"
#include "OAICreateOrUpdateCalculatorConfiguration_200_response_collections_inner.h"
#include "OAICreateOrUpdateCalculatorConfiguration_200_response_paymentsMethods_inner.h"
#include "OAICreateOrUpdateCalculatorConfiguration_200_response_products_inner.h"
#include "OAICreateOrUpdateCalculatorConfiguration_200_response_skus_inner.h"
#include "OAIGetcampaignaudiences_200_response_inner_targetConfigurations_inner_zipCodeRanges_inner.h"
#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateOrUpdateCalculatorConfiguration_200_response_affiliates_inner;
class OAICreateOrUpdateCalculatorConfiguration_200_response_brands_inner;
class OAICreateOrUpdateCalculatorConfiguration_200_response_categories_inner;
class OAICreateOrUpdateCalculatorConfiguration_200_response_collections_inner;
class OAICreateOrUpdateCalculatorConfiguration_200_response_paymentsMethods_inner;
class OAICreateOrUpdateCalculatorConfiguration_200_response_products_inner;
class OAICreateOrUpdateCalculatorConfiguration_200_response_skus_inner;
class OAIGetcampaignaudiences_200_response_inner_targetConfigurations_inner_zipCodeRanges_inner;

class OAISetcampaignconfiguration_200_response_targetConfigurations_inner : public OAIObject {
public:
    OAISetcampaignconfiguration_200_response_targetConfigurations_inner();
    OAISetcampaignconfiguration_200_response_targetConfigurations_inner(QString json);
    ~OAISetcampaignconfiguration_200_response_targetConfigurations_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAICreateOrUpdateCalculatorConfiguration_200_response_affiliates_inner> getAffiliates() const;
    void setAffiliates(const QList<OAICreateOrUpdateCalculatorConfiguration_200_response_affiliates_inner> &affiliates);
    bool is_affiliates_Set() const;
    bool is_affiliates_Valid() const;

    bool isAreSalesChannelIdsExclusive() const;
    void setAreSalesChannelIdsExclusive(const bool &are_sales_channel_ids_exclusive);
    bool is_are_sales_channel_ids_exclusive_Set() const;
    bool is_are_sales_channel_ids_exclusive_Valid() const;

    QList<OAICreateOrUpdateCalculatorConfiguration_200_response_brands_inner> getBrands() const;
    void setBrands(const QList<OAICreateOrUpdateCalculatorConfiguration_200_response_brands_inner> &brands);
    bool is_brands_Set() const;
    bool is_brands_Valid() const;

    bool isBrandsAreInclusive() const;
    void setBrandsAreInclusive(const bool &brands_are_inclusive);
    bool is_brands_are_inclusive_Set() const;
    bool is_brands_are_inclusive_Valid() const;

    QList<QJsonValue> getCampaigns() const;
    void setCampaigns(const QList<QJsonValue> &campaigns);
    bool is_campaigns_Set() const;
    bool is_campaigns_Valid() const;

    Q_DECL_DEPRECATED QList<QJsonValue> getCardIssuers() const;
    Q_DECL_DEPRECATED void setCardIssuers(const QList<QJsonValue> &card_issuers);
    Q_DECL_DEPRECATED bool is_card_issuers_Set() const;
    Q_DECL_DEPRECATED bool is_card_issuers_Valid() const;

    QList<OAICreateOrUpdateCalculatorConfiguration_200_response_categories_inner> getCategories() const;
    void setCategories(const QList<OAICreateOrUpdateCalculatorConfiguration_200_response_categories_inner> &categories);
    bool is_categories_Set() const;
    bool is_categories_Valid() const;

    bool isCategoriesAreInclusive() const;
    void setCategoriesAreInclusive(const bool &categories_are_inclusive);
    bool is_categories_are_inclusive_Set() const;
    bool is_categories_are_inclusive_Valid() const;

    QList<QString> getClusterExpressions() const;
    void setClusterExpressions(const QList<QString> &cluster_expressions);
    bool is_cluster_expressions_Set() const;
    bool is_cluster_expressions_Valid() const;

    Q_DECL_DEPRECATED QString getClusterOperator() const;
    Q_DECL_DEPRECATED void setClusterOperator(const QString &cluster_operator);
    Q_DECL_DEPRECATED bool is_cluster_operator_Set() const;
    Q_DECL_DEPRECATED bool is_cluster_operator_Valid() const;

    QList<OAICreateOrUpdateCalculatorConfiguration_200_response_collections_inner> getCollections() const;
    void setCollections(const QList<OAICreateOrUpdateCalculatorConfiguration_200_response_collections_inner> &collections);
    bool is_collections_Set() const;
    bool is_collections_Valid() const;

    QList<QString> getCollections1BuyTogether() const;
    void setCollections1BuyTogether(const QList<QString> &collections1_buy_together);
    bool is_collections1_buy_together_Set() const;
    bool is_collections1_buy_together_Valid() const;

    Q_DECL_DEPRECATED QList<QJsonValue> getCollections2BuyTogether() const;
    Q_DECL_DEPRECATED void setCollections2BuyTogether(const QList<QJsonValue> &collections2_buy_together);
    Q_DECL_DEPRECATED bool is_collections2_buy_together_Set() const;
    Q_DECL_DEPRECATED bool is_collections2_buy_together_Valid() const;

    bool isCollectionsIsInclusive() const;
    void setCollectionsIsInclusive(const bool &collections_is_inclusive);
    bool is_collections_is_inclusive_Set() const;
    bool is_collections_is_inclusive_Valid() const;

    bool isCompareListPriceAndPrice() const;
    void setCompareListPriceAndPrice(const bool &compare_list_price_and_price);
    bool is_compare_list_price_and_price_Set() const;
    bool is_compare_list_price_and_price_Valid() const;

    Q_DECL_DEPRECATED QList<QJsonValue> getCoupon() const;
    Q_DECL_DEPRECATED void setCoupon(const QList<QJsonValue> &coupon);
    Q_DECL_DEPRECATED bool is_coupon_Set() const;
    Q_DECL_DEPRECATED bool is_coupon_Valid() const;

    qint32 getDaysAgoOfPurchases() const;
    void setDaysAgoOfPurchases(const qint32 &days_ago_of_purchases);
    bool is_days_ago_of_purchases_Set() const;
    bool is_days_ago_of_purchases_Valid() const;

    bool isEnableBuyTogetherPerSku() const;
    void setEnableBuyTogetherPerSku(const bool &enable_buy_together_per_sku);
    bool is_enable_buy_together_per_sku_Set() const;
    bool is_enable_buy_together_per_sku_Valid() const;

    bool isFeatured() const;
    void setFeatured(const bool &featured);
    bool is_featured_Set() const;
    bool is_featured_Valid() const;

    bool isFirstBuyIsProfileOptimistic() const;
    void setFirstBuyIsProfileOptimistic(const bool &first_buy_is_profile_optimistic);
    bool is_first_buy_is_profile_optimistic_Set() const;
    bool is_first_buy_is_profile_optimistic_Valid() const;

    QList<QString> getGiftListTypes() const;
    void setGiftListTypes(const QList<QString> &gift_list_types);
    bool is_gift_list_types_Set() const;
    bool is_gift_list_types_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIdSellerIsInclusive() const;
    void setIdSellerIsInclusive(const bool &id_seller_is_inclusive);
    bool is_id_seller_is_inclusive_Set() const;
    bool is_id_seller_is_inclusive_Valid() const;

    QList<QString> getIdsSalesChannel() const;
    void setIdsSalesChannel(const QList<QString> &ids_sales_channel);
    bool is_ids_sales_channel_Set() const;
    bool is_ids_sales_channel_Valid() const;

    Q_DECL_DEPRECATED qint32 getInstallment() const;
    Q_DECL_DEPRECATED void setInstallment(const qint32 &installment);
    Q_DECL_DEPRECATED bool is_installment_Set() const;
    Q_DECL_DEPRECATED bool is_installment_Valid() const;

    bool isIsDifferentListPriceAndPrice() const;
    void setIsDifferentListPriceAndPrice(const bool &is_different_list_price_and_price);
    bool is_is_different_list_price_and_price_Set() const;
    bool is_is_different_list_price_and_price_Valid() const;

    bool isIsFirstBuy() const;
    void setIsFirstBuy(const bool &is_first_buy);
    bool is_is_first_buy_Set() const;
    bool is_is_first_buy_Valid() const;

    bool isIsMinMaxInstallments() const;
    void setIsMinMaxInstallments(const bool &is_min_max_installments);
    bool is_is_min_max_installments_Set() const;
    bool is_is_min_max_installments_Valid() const;

    bool isIsSlaSelected() const;
    void setIsSlaSelected(const bool &is_sla_selected);
    bool is_is_sla_selected_Set() const;
    bool is_is_sla_selected_Valid() const;

    double getItemMaxPrice() const;
    void setItemMaxPrice(const double &item_max_price);
    bool is_item_max_price_Set() const;
    bool is_item_max_price_Valid() const;

    double getItemMinPrice() const;
    void setItemMinPrice(const double &item_min_price);
    bool is_item_min_price_Set() const;
    bool is_item_min_price_Valid() const;

    QList<QJsonValue> getListBrand1BuyTogether() const;
    void setListBrand1BuyTogether(const QList<QJsonValue> &list_brand1_buy_together);
    bool is_list_brand1_buy_together_Set() const;
    bool is_list_brand1_buy_together_Valid() const;

    QList<QJsonValue> getListCategory1BuyTogether() const;
    void setListCategory1BuyTogether(const QList<QJsonValue> &list_category1_buy_together);
    bool is_list_category1_buy_together_Set() const;
    bool is_list_category1_buy_together_Valid() const;

    QList<QJsonValue> getListSku1BuyTogether() const;
    void setListSku1BuyTogether(const QList<QJsonValue> &list_sku1_buy_together);
    bool is_list_sku1_buy_together_Set() const;
    bool is_list_sku1_buy_together_Valid() const;

    QList<QJsonValue> getListSku2BuyTogether() const;
    void setListSku2BuyTogether(const QList<QJsonValue> &list_sku2_buy_together);
    bool is_list_sku2_buy_together_Set() const;
    bool is_list_sku2_buy_together_Valid() const;

    QList<QString> getMarketingTags() const;
    void setMarketingTags(const QList<QString> &marketing_tags);
    bool is_marketing_tags_Set() const;
    bool is_marketing_tags_Valid() const;

    bool isMarketingTagsAreNotInclusive() const;
    void setMarketingTagsAreNotInclusive(const bool &marketing_tags_are_not_inclusive);
    bool is_marketing_tags_are_not_inclusive_Set() const;
    bool is_marketing_tags_are_not_inclusive_Valid() const;

    qint32 getMaxInstallment() const;
    void setMaxInstallment(const qint32 &max_installment);
    bool is_max_installment_Set() const;
    bool is_max_installment_Valid() const;

    qint32 getMaxUsage() const;
    void setMaxUsage(const qint32 &max_usage);
    bool is_max_usage_Set() const;
    bool is_max_usage_Valid() const;

    qint32 getMaxUsagePerClient() const;
    void setMaxUsagePerClient(const qint32 &max_usage_per_client);
    bool is_max_usage_per_client_Set() const;
    bool is_max_usage_per_client_Valid() const;

    Q_DECL_DEPRECATED QList<QJsonValue> getMerchants() const;
    Q_DECL_DEPRECATED void setMerchants(const QList<QJsonValue> &merchants);
    Q_DECL_DEPRECATED bool is_merchants_Set() const;
    Q_DECL_DEPRECATED bool is_merchants_Valid() const;

    qint32 getMinInstallment() const;
    void setMinInstallment(const qint32 &min_installment);
    bool is_min_installment_Set() const;
    bool is_min_installment_Valid() const;

    qint32 getMinimumQuantityBuyTogether() const;
    void setMinimumQuantityBuyTogether(const qint32 &minimum_quantity_buy_together);
    bool is_minimum_quantity_buy_together_Set() const;
    bool is_minimum_quantity_buy_together_Valid() const;

    bool isMultipleUsePerClient() const;
    void setMultipleUsePerClient(const bool &multiple_use_per_client);
    bool is_multiple_use_per_client_Set() const;
    bool is_multiple_use_per_client_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOrigin() const;
    void setOrigin(const QString &origin);
    bool is_origin_Set() const;
    bool is_origin_Valid() const;

    QList<OAICreateOrUpdateCalculatorConfiguration_200_response_paymentsMethods_inner> getPaymentsMethods() const;
    void setPaymentsMethods(const QList<OAICreateOrUpdateCalculatorConfiguration_200_response_paymentsMethods_inner> &payments_methods);
    bool is_payments_methods_Set() const;
    bool is_payments_methods_Valid() const;

    Q_DECL_DEPRECATED QList<QJsonValue> getPaymentsRules() const;
    Q_DECL_DEPRECATED void setPaymentsRules(const QList<QJsonValue> &payments_rules);
    Q_DECL_DEPRECATED bool is_payments_rules_Set() const;
    Q_DECL_DEPRECATED bool is_payments_rules_Valid() const;

    QList<double> getPercentualDiscountValueList() const;
    void setPercentualDiscountValueList(const QList<double> &percentual_discount_value_list);
    bool is_percentual_discount_value_list_Set() const;
    bool is_percentual_discount_value_list_Valid() const;

    QList<OAICreateOrUpdateCalculatorConfiguration_200_response_products_inner> getProducts() const;
    void setProducts(const QList<OAICreateOrUpdateCalculatorConfiguration_200_response_products_inner> &products);
    bool is_products_Set() const;
    bool is_products_Valid() const;

    bool isProductsAreInclusive() const;
    void setProductsAreInclusive(const bool &products_are_inclusive);
    bool is_products_are_inclusive_Set() const;
    bool is_products_are_inclusive_Valid() const;

    Q_DECL_DEPRECATED QList<QJsonValue> getProductsSpecifications() const;
    Q_DECL_DEPRECATED void setProductsSpecifications(const QList<QJsonValue> &products_specifications);
    Q_DECL_DEPRECATED bool is_products_specifications_Set() const;
    Q_DECL_DEPRECATED bool is_products_specifications_Valid() const;

    qint32 getQuantityToAffectBuyTogether() const;
    void setQuantityToAffectBuyTogether(const qint32 &quantity_to_affect_buy_together);
    bool is_quantity_to_affect_buy_together_Set() const;
    bool is_quantity_to_affect_buy_together_Valid() const;

    QList<QString> getRestrictionsBins() const;
    void setRestrictionsBins(const QList<QString> &restrictions_bins);
    bool is_restrictions_bins_Set() const;
    bool is_restrictions_bins_Valid() const;

    bool isShouldDistributeDiscountAmongMatchedItems() const;
    void setShouldDistributeDiscountAmongMatchedItems(const bool &should_distribute_discount_among_matched_items);
    bool is_should_distribute_discount_among_matched_items_Set() const;
    bool is_should_distribute_discount_among_matched_items_Valid() const;

    QList<OAICreateOrUpdateCalculatorConfiguration_200_response_skus_inner> getSkus() const;
    void setSkus(const QList<OAICreateOrUpdateCalculatorConfiguration_200_response_skus_inner> &skus);
    bool is_skus_Set() const;
    bool is_skus_Valid() const;

    bool isSkusAreInclusive() const;
    void setSkusAreInclusive(const bool &skus_are_inclusive);
    bool is_skus_are_inclusive_Set() const;
    bool is_skus_are_inclusive_Valid() const;

    QList<QString> getSlasIds() const;
    void setSlasIds(const QList<QString> &slas_ids);
    bool is_slas_ids_Set() const;
    bool is_slas_ids_Valid() const;

    Q_DECL_DEPRECATED QList<QJsonValue> getStores() const;
    Q_DECL_DEPRECATED void setStores(const QList<QJsonValue> &stores);
    Q_DECL_DEPRECATED bool is_stores_Set() const;
    Q_DECL_DEPRECATED bool is_stores_Valid() const;

    Q_DECL_DEPRECATED bool isStoresAreInclusive() const;
    Q_DECL_DEPRECATED void setStoresAreInclusive(const bool &stores_are_inclusive);
    Q_DECL_DEPRECATED bool is_stores_are_inclusive_Set() const;
    Q_DECL_DEPRECATED bool is_stores_are_inclusive_Valid() const;

    double getTotalValueCeling() const;
    void setTotalValueCeling(const double &total_value_celing);
    bool is_total_value_celing_Set() const;
    bool is_total_value_celing_Valid() const;

    double getTotalValueFloor() const;
    void setTotalValueFloor(const double &total_value_floor);
    bool is_total_value_floor_Set() const;
    bool is_total_value_floor_Valid() const;

    Q_DECL_DEPRECATED bool isTotalValueIncludeAllItems() const;
    Q_DECL_DEPRECATED void setTotalValueIncludeAllItems(const bool &total_value_include_all_items);
    Q_DECL_DEPRECATED bool is_total_value_include_all_items_Set() const;
    Q_DECL_DEPRECATED bool is_total_value_include_all_items_Valid() const;

    QString getTotalValueMode() const;
    void setTotalValueMode(const QString &total_value_mode);
    bool is_total_value_mode_Set() const;
    bool is_total_value_mode_Valid() const;

    double getTotalValuePurchase() const;
    void setTotalValuePurchase(const double &total_value_purchase);
    bool is_total_value_purchase_Set() const;
    bool is_total_value_purchase_Valid() const;

    bool isUseNewProgressiveAlgorithm() const;
    void setUseNewProgressiveAlgorithm(const bool &use_new_progressive_algorithm);
    bool is_use_new_progressive_algorithm_Set() const;
    bool is_use_new_progressive_algorithm_Valid() const;

    QList<OAIGetcampaignaudiences_200_response_inner_targetConfigurations_inner_zipCodeRanges_inner> getZipCodeRanges() const;
    void setZipCodeRanges(const QList<OAIGetcampaignaudiences_200_response_inner_targetConfigurations_inner_zipCodeRanges_inner> &zip_code_ranges);
    bool is_zip_code_ranges_Set() const;
    bool is_zip_code_ranges_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAICreateOrUpdateCalculatorConfiguration_200_response_affiliates_inner> m_affiliates;
    bool m_affiliates_isSet;
    bool m_affiliates_isValid;

    bool m_are_sales_channel_ids_exclusive;
    bool m_are_sales_channel_ids_exclusive_isSet;
    bool m_are_sales_channel_ids_exclusive_isValid;

    QList<OAICreateOrUpdateCalculatorConfiguration_200_response_brands_inner> m_brands;
    bool m_brands_isSet;
    bool m_brands_isValid;

    bool m_brands_are_inclusive;
    bool m_brands_are_inclusive_isSet;
    bool m_brands_are_inclusive_isValid;

    QList<QJsonValue> m_campaigns;
    bool m_campaigns_isSet;
    bool m_campaigns_isValid;

    QList<QJsonValue> m_card_issuers;
    bool m_card_issuers_isSet;
    bool m_card_issuers_isValid;

    QList<OAICreateOrUpdateCalculatorConfiguration_200_response_categories_inner> m_categories;
    bool m_categories_isSet;
    bool m_categories_isValid;

    bool m_categories_are_inclusive;
    bool m_categories_are_inclusive_isSet;
    bool m_categories_are_inclusive_isValid;

    QList<QString> m_cluster_expressions;
    bool m_cluster_expressions_isSet;
    bool m_cluster_expressions_isValid;

    QString m_cluster_operator;
    bool m_cluster_operator_isSet;
    bool m_cluster_operator_isValid;

    QList<OAICreateOrUpdateCalculatorConfiguration_200_response_collections_inner> m_collections;
    bool m_collections_isSet;
    bool m_collections_isValid;

    QList<QString> m_collections1_buy_together;
    bool m_collections1_buy_together_isSet;
    bool m_collections1_buy_together_isValid;

    QList<QJsonValue> m_collections2_buy_together;
    bool m_collections2_buy_together_isSet;
    bool m_collections2_buy_together_isValid;

    bool m_collections_is_inclusive;
    bool m_collections_is_inclusive_isSet;
    bool m_collections_is_inclusive_isValid;

    bool m_compare_list_price_and_price;
    bool m_compare_list_price_and_price_isSet;
    bool m_compare_list_price_and_price_isValid;

    QList<QJsonValue> m_coupon;
    bool m_coupon_isSet;
    bool m_coupon_isValid;

    qint32 m_days_ago_of_purchases;
    bool m_days_ago_of_purchases_isSet;
    bool m_days_ago_of_purchases_isValid;

    bool m_enable_buy_together_per_sku;
    bool m_enable_buy_together_per_sku_isSet;
    bool m_enable_buy_together_per_sku_isValid;

    bool m_featured;
    bool m_featured_isSet;
    bool m_featured_isValid;

    bool m_first_buy_is_profile_optimistic;
    bool m_first_buy_is_profile_optimistic_isSet;
    bool m_first_buy_is_profile_optimistic_isValid;

    QList<QString> m_gift_list_types;
    bool m_gift_list_types_isSet;
    bool m_gift_list_types_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_id_seller_is_inclusive;
    bool m_id_seller_is_inclusive_isSet;
    bool m_id_seller_is_inclusive_isValid;

    QList<QString> m_ids_sales_channel;
    bool m_ids_sales_channel_isSet;
    bool m_ids_sales_channel_isValid;

    qint32 m_installment;
    bool m_installment_isSet;
    bool m_installment_isValid;

    bool m_is_different_list_price_and_price;
    bool m_is_different_list_price_and_price_isSet;
    bool m_is_different_list_price_and_price_isValid;

    bool m_is_first_buy;
    bool m_is_first_buy_isSet;
    bool m_is_first_buy_isValid;

    bool m_is_min_max_installments;
    bool m_is_min_max_installments_isSet;
    bool m_is_min_max_installments_isValid;

    bool m_is_sla_selected;
    bool m_is_sla_selected_isSet;
    bool m_is_sla_selected_isValid;

    double m_item_max_price;
    bool m_item_max_price_isSet;
    bool m_item_max_price_isValid;

    double m_item_min_price;
    bool m_item_min_price_isSet;
    bool m_item_min_price_isValid;

    QList<QJsonValue> m_list_brand1_buy_together;
    bool m_list_brand1_buy_together_isSet;
    bool m_list_brand1_buy_together_isValid;

    QList<QJsonValue> m_list_category1_buy_together;
    bool m_list_category1_buy_together_isSet;
    bool m_list_category1_buy_together_isValid;

    QList<QJsonValue> m_list_sku1_buy_together;
    bool m_list_sku1_buy_together_isSet;
    bool m_list_sku1_buy_together_isValid;

    QList<QJsonValue> m_list_sku2_buy_together;
    bool m_list_sku2_buy_together_isSet;
    bool m_list_sku2_buy_together_isValid;

    QList<QString> m_marketing_tags;
    bool m_marketing_tags_isSet;
    bool m_marketing_tags_isValid;

    bool m_marketing_tags_are_not_inclusive;
    bool m_marketing_tags_are_not_inclusive_isSet;
    bool m_marketing_tags_are_not_inclusive_isValid;

    qint32 m_max_installment;
    bool m_max_installment_isSet;
    bool m_max_installment_isValid;

    qint32 m_max_usage;
    bool m_max_usage_isSet;
    bool m_max_usage_isValid;

    qint32 m_max_usage_per_client;
    bool m_max_usage_per_client_isSet;
    bool m_max_usage_per_client_isValid;

    QList<QJsonValue> m_merchants;
    bool m_merchants_isSet;
    bool m_merchants_isValid;

    qint32 m_min_installment;
    bool m_min_installment_isSet;
    bool m_min_installment_isValid;

    qint32 m_minimum_quantity_buy_together;
    bool m_minimum_quantity_buy_together_isSet;
    bool m_minimum_quantity_buy_together_isValid;

    bool m_multiple_use_per_client;
    bool m_multiple_use_per_client_isSet;
    bool m_multiple_use_per_client_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_origin;
    bool m_origin_isSet;
    bool m_origin_isValid;

    QList<OAICreateOrUpdateCalculatorConfiguration_200_response_paymentsMethods_inner> m_payments_methods;
    bool m_payments_methods_isSet;
    bool m_payments_methods_isValid;

    QList<QJsonValue> m_payments_rules;
    bool m_payments_rules_isSet;
    bool m_payments_rules_isValid;

    QList<double> m_percentual_discount_value_list;
    bool m_percentual_discount_value_list_isSet;
    bool m_percentual_discount_value_list_isValid;

    QList<OAICreateOrUpdateCalculatorConfiguration_200_response_products_inner> m_products;
    bool m_products_isSet;
    bool m_products_isValid;

    bool m_products_are_inclusive;
    bool m_products_are_inclusive_isSet;
    bool m_products_are_inclusive_isValid;

    QList<QJsonValue> m_products_specifications;
    bool m_products_specifications_isSet;
    bool m_products_specifications_isValid;

    qint32 m_quantity_to_affect_buy_together;
    bool m_quantity_to_affect_buy_together_isSet;
    bool m_quantity_to_affect_buy_together_isValid;

    QList<QString> m_restrictions_bins;
    bool m_restrictions_bins_isSet;
    bool m_restrictions_bins_isValid;

    bool m_should_distribute_discount_among_matched_items;
    bool m_should_distribute_discount_among_matched_items_isSet;
    bool m_should_distribute_discount_among_matched_items_isValid;

    QList<OAICreateOrUpdateCalculatorConfiguration_200_response_skus_inner> m_skus;
    bool m_skus_isSet;
    bool m_skus_isValid;

    bool m_skus_are_inclusive;
    bool m_skus_are_inclusive_isSet;
    bool m_skus_are_inclusive_isValid;

    QList<QString> m_slas_ids;
    bool m_slas_ids_isSet;
    bool m_slas_ids_isValid;

    QList<QJsonValue> m_stores;
    bool m_stores_isSet;
    bool m_stores_isValid;

    bool m_stores_are_inclusive;
    bool m_stores_are_inclusive_isSet;
    bool m_stores_are_inclusive_isValid;

    double m_total_value_celing;
    bool m_total_value_celing_isSet;
    bool m_total_value_celing_isValid;

    double m_total_value_floor;
    bool m_total_value_floor_isSet;
    bool m_total_value_floor_isValid;

    bool m_total_value_include_all_items;
    bool m_total_value_include_all_items_isSet;
    bool m_total_value_include_all_items_isValid;

    QString m_total_value_mode;
    bool m_total_value_mode_isSet;
    bool m_total_value_mode_isValid;

    double m_total_value_purchase;
    bool m_total_value_purchase_isSet;
    bool m_total_value_purchase_isValid;

    bool m_use_new_progressive_algorithm;
    bool m_use_new_progressive_algorithm_isSet;
    bool m_use_new_progressive_algorithm_isValid;

    QList<OAIGetcampaignaudiences_200_response_inner_targetConfigurations_inner_zipCodeRanges_inner> m_zip_code_ranges;
    bool m_zip_code_ranges_isSet;
    bool m_zip_code_ranges_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISetcampaignconfiguration_200_response_targetConfigurations_inner)

#endif // OAISetcampaignconfiguration_200_response_targetConfigurations_inner_H
