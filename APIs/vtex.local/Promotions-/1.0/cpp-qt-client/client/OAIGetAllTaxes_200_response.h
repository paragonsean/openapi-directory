/**
 * Promotions & Taxes API
 *   > Check the new [Promotions onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/promotions-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Promotions and is organized by focusing on the developer's journey.     The Promotions & Taxes API allows you to manage and retrieve all promotions, coupons and tax rules from your VTEX store.     ## Index     ### Coupons   `POST` [Create multiple coupons](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-multiple-coupons)   `POST` [Create coupon](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-coupon)   `GET` [Get coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/getbycouponcode)   `GET` [Get archived coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/getarchivedbycouponcode)   `POST` [Archive coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/archivebycouponcode)   `POST` [Update coupon](https://developers.vtex.com/vtex-rest-api/reference/update)   `GET` [Get all coupons](https://developers.vtex.com/vtex-rest-api/reference/getall)   `POST` [Coupon Massive Generation](https://developers.vtex.com/vtex-rest-api/reference/massivegeneration)   `GET` [Get coupon usage](https://developers.vtex.com/vtex-rest-api/reference/getusage)   `POST` [Unarchive coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/unarchivebycouponcode)     ### Promotions and Taxes   `GET` [Get All Promotions](https://developers.vtex.com/vtex-rest-api/reference/getallbenefits)   `GET` [Get All Taxes](https://developers.vtex.com/vtex-rest-api/reference/getalltaxes)   `GET` [Get Promotion or Tax By ID](https://developers.vtex.com/vtex-rest-api/reference/getcalculatorconfigurationbyid)   `POST` [Create or Update Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/createorupdatecalculatorconfiguration)   `POST` [Create Multiple SKU Promotion](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-import-calculatorconfiguration)   `PUT` [Update Multiple SKU Promotion](https://developers.vtex.com/vtex-rest-api/reference/put_api-rnb-pvt-import-calculatorconfiguration-promotionid)   `POST` [Archive Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/archivepromotion-1)   `POST` [Unarchive Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/unarchivepromotion-1)   `GET` [List archived Promotions](https://developers.vtex.com/vtex-rest-api/reference/getarchivedpromotions)   `GET` [List archived Taxes](https://developers.vtex.com/vtex-rest-api/reference/getarchivedtaxes)       ### Campaign Audiences   `GET` [Get campaign audience configuration](https://developers.vtex.com/vtex-rest-api/reference/getcampaignconfiguration)   `POST` [Create campaign audience](https://developers.vtex.com/vtex-rest-api/reference/setcampaignconfiguration)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetAllTaxes_200_response.h
 *
 * 
 */

#ifndef OAIGetAllTaxes_200_response_H
#define OAIGetAllTaxes_200_response_H

#include <QJsonObject>

#include "OAIGetAllBenefits_200_response_limitConfiguration.h"
#include "OAIGetTaxes_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetTaxes_inner;
class OAIGetAllBenefits_200_response_limitConfiguration;

class OAIGetAllTaxes_200_response : public OAIObject {
public:
    OAIGetAllTaxes_200_response();
    OAIGetAllTaxes_200_response(QString json);
    ~OAIGetAllTaxes_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getArchivedItems() const;
    void setArchivedItems(const QList<QString> &archived_items);
    bool is_archived_items_Set() const;
    bool is_archived_items_Valid() const;

    QList<QString> getDisabledItems() const;
    void setDisabledItems(const QList<QString> &disabled_items);
    bool is_disabled_items_Set() const;
    bool is_disabled_items_Valid() const;

    QList<OAIGetTaxes_inner> getItems() const;
    void setItems(const QList<OAIGetTaxes_inner> &items);
    bool is_items_Set() const;
    bool is_items_Valid() const;

    OAIGetAllBenefits_200_response_limitConfiguration getLimitConfiguration() const;
    void setLimitConfiguration(const OAIGetAllBenefits_200_response_limitConfiguration &limit_configuration);
    bool is_limit_configuration_Set() const;
    bool is_limit_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_archived_items;
    bool m_archived_items_isSet;
    bool m_archived_items_isValid;

    QList<QString> m_disabled_items;
    bool m_disabled_items_isSet;
    bool m_disabled_items_isValid;

    QList<OAIGetTaxes_inner> m_items;
    bool m_items_isSet;
    bool m_items_isValid;

    OAIGetAllBenefits_200_response_limitConfiguration m_limit_configuration;
    bool m_limit_configuration_isSet;
    bool m_limit_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetAllTaxes_200_response)

#endif // OAIGetAllTaxes_200_response_H
