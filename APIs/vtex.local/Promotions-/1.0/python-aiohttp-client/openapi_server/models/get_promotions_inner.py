# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_promotions_inner_scope import GetPromotionsInnerScope
from openapi_server import util


class GetPromotionsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, campaigns: List[str]=None, activate_gifts_multiplier: bool=None, are_sales_channel_ids_exclusive: bool=None, begin_date: str=None, description: str=None, end_date: str=None, has_max_price_per_item: bool=None, id_calculator_configuration: str=None, ids_sales_channel: List[str]=None, is_active: bool=None, is_archived: bool=None, is_tax: bool=None, last_modified_utc: str=None, max_usage: float=None, name: str=None, percentual_tax: float=None, scope: GetPromotionsInnerScope=None, status: str=None, type: str=None, utm_campain: str=None, utm_source: str=None, utmi_campaign: str=None):
        """GetPromotionsInner - a model defined in OpenAPI

        :param campaigns: The campaigns of this GetPromotionsInner.
        :param activate_gifts_multiplier: The activate_gifts_multiplier of this GetPromotionsInner.
        :param are_sales_channel_ids_exclusive: The are_sales_channel_ids_exclusive of this GetPromotionsInner.
        :param begin_date: The begin_date of this GetPromotionsInner.
        :param description: The description of this GetPromotionsInner.
        :param end_date: The end_date of this GetPromotionsInner.
        :param has_max_price_per_item: The has_max_price_per_item of this GetPromotionsInner.
        :param id_calculator_configuration: The id_calculator_configuration of this GetPromotionsInner.
        :param ids_sales_channel: The ids_sales_channel of this GetPromotionsInner.
        :param is_active: The is_active of this GetPromotionsInner.
        :param is_archived: The is_archived of this GetPromotionsInner.
        :param is_tax: The is_tax of this GetPromotionsInner.
        :param last_modified_utc: The last_modified_utc of this GetPromotionsInner.
        :param max_usage: The max_usage of this GetPromotionsInner.
        :param name: The name of this GetPromotionsInner.
        :param percentual_tax: The percentual_tax of this GetPromotionsInner.
        :param scope: The scope of this GetPromotionsInner.
        :param status: The status of this GetPromotionsInner.
        :param type: The type of this GetPromotionsInner.
        :param utm_campain: The utm_campain of this GetPromotionsInner.
        :param utm_source: The utm_source of this GetPromotionsInner.
        :param utmi_campaign: The utmi_campaign of this GetPromotionsInner.
        """
        self.openapi_types = {
            'campaigns': List[str],
            'activate_gifts_multiplier': bool,
            'are_sales_channel_ids_exclusive': bool,
            'begin_date': str,
            'description': str,
            'end_date': str,
            'has_max_price_per_item': bool,
            'id_calculator_configuration': str,
            'ids_sales_channel': List[str],
            'is_active': bool,
            'is_archived': bool,
            'is_tax': bool,
            'last_modified_utc': str,
            'max_usage': float,
            'name': str,
            'percentual_tax': float,
            'scope': GetPromotionsInnerScope,
            'status': str,
            'type': str,
            'utm_campain': str,
            'utm_source': str,
            'utmi_campaign': str
        }

        self.attribute_map = {
            'campaigns': 'Campaigns',
            'activate_gifts_multiplier': 'activateGiftsMultiplier',
            'are_sales_channel_ids_exclusive': 'areSalesChannelIdsExclusive',
            'begin_date': 'beginDate',
            'description': 'description',
            'end_date': 'endDate',
            'has_max_price_per_item': 'hasMaxPricePerItem',
            'id_calculator_configuration': 'idCalculatorConfiguration',
            'ids_sales_channel': 'idsSalesChannel',
            'is_active': 'isActive',
            'is_archived': 'isArchived',
            'is_tax': 'isTax',
            'last_modified_utc': 'lastModifiedUtc',
            'max_usage': 'maxUsage',
            'name': 'name',
            'percentual_tax': 'percentualTax',
            'scope': 'scope',
            'status': 'status',
            'type': 'type',
            'utm_campain': 'utmCampain',
            'utm_source': 'utmSource',
            'utmi_campaign': 'utmiCampaign'
        }

        self._campaigns = campaigns
        self._activate_gifts_multiplier = activate_gifts_multiplier
        self._are_sales_channel_ids_exclusive = are_sales_channel_ids_exclusive
        self._begin_date = begin_date
        self._description = description
        self._end_date = end_date
        self._has_max_price_per_item = has_max_price_per_item
        self._id_calculator_configuration = id_calculator_configuration
        self._ids_sales_channel = ids_sales_channel
        self._is_active = is_active
        self._is_archived = is_archived
        self._is_tax = is_tax
        self._last_modified_utc = last_modified_utc
        self._max_usage = max_usage
        self._name = name
        self._percentual_tax = percentual_tax
        self._scope = scope
        self._status = status
        self._type = type
        self._utm_campain = utm_campain
        self._utm_source = utm_source
        self._utmi_campaign = utmi_campaign

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetPromotionsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetPromotions_inner of this GetPromotionsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def campaigns(self):
        """Gets the campaigns of this GetPromotionsInner.

        Array with campaign audiences that activate this promotion.

        :return: The campaigns of this GetPromotionsInner.
        :rtype: List[str]
        """
        return self._campaigns

    @campaigns.setter
    def campaigns(self, campaigns):
        """Sets the campaigns of this GetPromotionsInner.

        Array with campaign audiences that activate this promotion.

        :param campaigns: The campaigns of this GetPromotionsInner.
        :type campaigns: List[str]
        """

        self._campaigns = campaigns

    @property
    def activate_gifts_multiplier(self):
        """Gets the activate_gifts_multiplier of this GetPromotionsInner.

        If set as `true`, it activates gifts Multiplier.

        :return: The activate_gifts_multiplier of this GetPromotionsInner.
        :rtype: bool
        """
        return self._activate_gifts_multiplier

    @activate_gifts_multiplier.setter
    def activate_gifts_multiplier(self, activate_gifts_multiplier):
        """Sets the activate_gifts_multiplier of this GetPromotionsInner.

        If set as `true`, it activates gifts Multiplier.

        :param activate_gifts_multiplier: The activate_gifts_multiplier of this GetPromotionsInner.
        :type activate_gifts_multiplier: bool
        """

        self._activate_gifts_multiplier = activate_gifts_multiplier

    @property
    def are_sales_channel_ids_exclusive(self):
        """Gets the are_sales_channel_ids_exclusive of this GetPromotionsInner.

        If set to `false`, this promotion will be applied to any trade policies present on the `idsSalesChannel` field. If set to `true`, trade policies present on that field will make this promotion not to be applied.

        :return: The are_sales_channel_ids_exclusive of this GetPromotionsInner.
        :rtype: bool
        """
        return self._are_sales_channel_ids_exclusive

    @are_sales_channel_ids_exclusive.setter
    def are_sales_channel_ids_exclusive(self, are_sales_channel_ids_exclusive):
        """Sets the are_sales_channel_ids_exclusive of this GetPromotionsInner.

        If set to `false`, this promotion will be applied to any trade policies present on the `idsSalesChannel` field. If set to `true`, trade policies present on that field will make this promotion not to be applied.

        :param are_sales_channel_ids_exclusive: The are_sales_channel_ids_exclusive of this GetPromotionsInner.
        :type are_sales_channel_ids_exclusive: bool
        """

        self._are_sales_channel_ids_exclusive = are_sales_channel_ids_exclusive

    @property
    def begin_date(self):
        """Gets the begin_date of this GetPromotionsInner.

        Promotion Begin Date (UTC).

        :return: The begin_date of this GetPromotionsInner.
        :rtype: str
        """
        return self._begin_date

    @begin_date.setter
    def begin_date(self, begin_date):
        """Sets the begin_date of this GetPromotionsInner.

        Promotion Begin Date (UTC).

        :param begin_date: The begin_date of this GetPromotionsInner.
        :type begin_date: str
        """

        self._begin_date = begin_date

    @property
    def description(self):
        """Gets the description of this GetPromotionsInner.

        Promotion internal description.

        :return: The description of this GetPromotionsInner.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GetPromotionsInner.

        Promotion internal description.

        :param description: The description of this GetPromotionsInner.
        :type description: str
        """

        self._description = description

    @property
    def end_date(self):
        """Gets the end_date of this GetPromotionsInner.

        Promotion End Date (UTC).

        :return: The end_date of this GetPromotionsInner.
        :rtype: str
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this GetPromotionsInner.

        Promotion End Date (UTC).

        :param end_date: The end_date of this GetPromotionsInner.
        :type end_date: str
        """

        self._end_date = end_date

    @property
    def has_max_price_per_item(self):
        """Gets the has_max_price_per_item of this GetPromotionsInner.

        Defines if there is a maximum price per item.

        :return: The has_max_price_per_item of this GetPromotionsInner.
        :rtype: bool
        """
        return self._has_max_price_per_item

    @has_max_price_per_item.setter
    def has_max_price_per_item(self, has_max_price_per_item):
        """Sets the has_max_price_per_item of this GetPromotionsInner.

        Defines if there is a maximum price per item.

        :param has_max_price_per_item: The has_max_price_per_item of this GetPromotionsInner.
        :type has_max_price_per_item: bool
        """

        self._has_max_price_per_item = has_max_price_per_item

    @property
    def id_calculator_configuration(self):
        """Gets the id_calculator_configuration of this GetPromotionsInner.

        Promotion ID.

        :return: The id_calculator_configuration of this GetPromotionsInner.
        :rtype: str
        """
        return self._id_calculator_configuration

    @id_calculator_configuration.setter
    def id_calculator_configuration(self, id_calculator_configuration):
        """Sets the id_calculator_configuration of this GetPromotionsInner.

        Promotion ID.

        :param id_calculator_configuration: The id_calculator_configuration of this GetPromotionsInner.
        :type id_calculator_configuration: str
        """

        self._id_calculator_configuration = id_calculator_configuration

    @property
    def ids_sales_channel(self):
        """Gets the ids_sales_channel of this GetPromotionsInner.

        List of Trade Policies that activate this promotion.

        :return: The ids_sales_channel of this GetPromotionsInner.
        :rtype: List[str]
        """
        return self._ids_sales_channel

    @ids_sales_channel.setter
    def ids_sales_channel(self, ids_sales_channel):
        """Sets the ids_sales_channel of this GetPromotionsInner.

        List of Trade Policies that activate this promotion.

        :param ids_sales_channel: The ids_sales_channel of this GetPromotionsInner.
        :type ids_sales_channel: List[str]
        """

        self._ids_sales_channel = ids_sales_channel

    @property
    def is_active(self):
        """Gets the is_active of this GetPromotionsInner.

        If set as `true` the promotion is activated. If set as `false` the promotion is deactivated.

        :return: The is_active of this GetPromotionsInner.
        :rtype: bool
        """
        return self._is_active

    @is_active.setter
    def is_active(self, is_active):
        """Sets the is_active of this GetPromotionsInner.

        If set as `true` the promotion is activated. If set as `false` the promotion is deactivated.

        :param is_active: The is_active of this GetPromotionsInner.
        :type is_active: bool
        """

        self._is_active = is_active

    @property
    def is_archived(self):
        """Gets the is_archived of this GetPromotionsInner.

        If set as `true` the Promotion is archived. If set as `false` the Promotion is not archived.

        :return: The is_archived of this GetPromotionsInner.
        :rtype: bool
        """
        return self._is_archived

    @is_archived.setter
    def is_archived(self, is_archived):
        """Sets the is_archived of this GetPromotionsInner.

        If set as `true` the Promotion is archived. If set as `false` the Promotion is not archived.

        :param is_archived: The is_archived of this GetPromotionsInner.
        :type is_archived: bool
        """

        self._is_archived = is_archived

    @property
    def is_tax(self):
        """Gets the is_tax of this GetPromotionsInner.

        Defines if it is a tax.

        :return: The is_tax of this GetPromotionsInner.
        :rtype: bool
        """
        return self._is_tax

    @is_tax.setter
    def is_tax(self, is_tax):
        """Sets the is_tax of this GetPromotionsInner.

        Defines if it is a tax.

        :param is_tax: The is_tax of this GetPromotionsInner.
        :type is_tax: bool
        """

        self._is_tax = is_tax

    @property
    def last_modified_utc(self):
        """Gets the last_modified_utc of this GetPromotionsInner.

        Date and time when the promotion was last modified (UTC).

        :return: The last_modified_utc of this GetPromotionsInner.
        :rtype: str
        """
        return self._last_modified_utc

    @last_modified_utc.setter
    def last_modified_utc(self, last_modified_utc):
        """Sets the last_modified_utc of this GetPromotionsInner.

        Date and time when the promotion was last modified (UTC).

        :param last_modified_utc: The last_modified_utc of this GetPromotionsInner.
        :type last_modified_utc: str
        """

        self._last_modified_utc = last_modified_utc

    @property
    def max_usage(self):
        """Gets the max_usage of this GetPromotionsInner.

        Defines how many times the promotion can be used.

        :return: The max_usage of this GetPromotionsInner.
        :rtype: float
        """
        return self._max_usage

    @max_usage.setter
    def max_usage(self, max_usage):
        """Sets the max_usage of this GetPromotionsInner.

        Defines how many times the promotion can be used.

        :param max_usage: The max_usage of this GetPromotionsInner.
        :type max_usage: float
        """

        self._max_usage = max_usage

    @property
    def name(self):
        """Gets the name of this GetPromotionsInner.

        Promotion Name.

        :return: The name of this GetPromotionsInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetPromotionsInner.

        Promotion Name.

        :param name: The name of this GetPromotionsInner.
        :type name: str
        """

        self._name = name

    @property
    def percentual_tax(self):
        """Gets the percentual_tax of this GetPromotionsInner.

        Percentual tax applied.

        :return: The percentual_tax of this GetPromotionsInner.
        :rtype: float
        """
        return self._percentual_tax

    @percentual_tax.setter
    def percentual_tax(self, percentual_tax):
        """Sets the percentual_tax of this GetPromotionsInner.

        Percentual tax applied.

        :param percentual_tax: The percentual_tax of this GetPromotionsInner.
        :type percentual_tax: float
        """

        self._percentual_tax = percentual_tax

    @property
    def scope(self):
        """Gets the scope of this GetPromotionsInner.


        :return: The scope of this GetPromotionsInner.
        :rtype: GetPromotionsInnerScope
        """
        return self._scope

    @scope.setter
    def scope(self, scope):
        """Sets the scope of this GetPromotionsInner.


        :param scope: The scope of this GetPromotionsInner.
        :type scope: GetPromotionsInnerScope
        """

        self._scope = scope

    @property
    def status(self):
        """Gets the status of this GetPromotionsInner.

        Status of the promotion.

        :return: The status of this GetPromotionsInner.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GetPromotionsInner.

        Status of the promotion.

        :param status: The status of this GetPromotionsInner.
        :type status: str
        """

        self._status = status

    @property
    def type(self):
        """Gets the type of this GetPromotionsInner.

        Defines the type of promotion.

        :return: The type of this GetPromotionsInner.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GetPromotionsInner.

        Defines the type of promotion.

        :param type: The type of this GetPromotionsInner.
        :type type: str
        """

        self._type = type

    @property
    def utm_campain(self):
        """Gets the utm_campain of this GetPromotionsInner.

        utmCampaign code.

        :return: The utm_campain of this GetPromotionsInner.
        :rtype: str
        """
        return self._utm_campain

    @utm_campain.setter
    def utm_campain(self, utm_campain):
        """Sets the utm_campain of this GetPromotionsInner.

        utmCampaign code.

        :param utm_campain: The utm_campain of this GetPromotionsInner.
        :type utm_campain: str
        """

        self._utm_campain = utm_campain

    @property
    def utm_source(self):
        """Gets the utm_source of this GetPromotionsInner.

        utmSource code.

        :return: The utm_source of this GetPromotionsInner.
        :rtype: str
        """
        return self._utm_source

    @utm_source.setter
    def utm_source(self, utm_source):
        """Sets the utm_source of this GetPromotionsInner.

        utmSource code.

        :param utm_source: The utm_source of this GetPromotionsInner.
        :type utm_source: str
        """

        self._utm_source = utm_source

    @property
    def utmi_campaign(self):
        """Gets the utmi_campaign of this GetPromotionsInner.

        utmiCampaign code.

        :return: The utmi_campaign of this GetPromotionsInner.
        :rtype: str
        """
        return self._utmi_campaign

    @utmi_campaign.setter
    def utmi_campaign(self, utmi_campaign):
        """Sets the utmi_campaign of this GetPromotionsInner.

        utmiCampaign code.

        :param utmi_campaign: The utmi_campaign of this GetPromotionsInner.
        :type utmi_campaign: str
        """

        self._utmi_campaign = utmi_campaign
