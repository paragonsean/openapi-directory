# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetAllBenefits200ResponseLimitConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, actives_count: int=None, limit: int=None):
        """GetAllBenefits200ResponseLimitConfiguration - a model defined in OpenAPI

        :param actives_count: The actives_count of this GetAllBenefits200ResponseLimitConfiguration.
        :param limit: The limit of this GetAllBenefits200ResponseLimitConfiguration.
        """
        self.openapi_types = {
            'actives_count': int,
            'limit': int
        }

        self.attribute_map = {
            'actives_count': 'activesCount',
            'limit': 'limit'
        }

        self._actives_count = actives_count
        self._limit = limit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetAllBenefits200ResponseLimitConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetAllBenefits_200_response_limitConfiguration of this GetAllBenefits200ResponseLimitConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def actives_count(self):
        """Gets the actives_count of this GetAllBenefits200ResponseLimitConfiguration.

        Actives count.

        :return: The actives_count of this GetAllBenefits200ResponseLimitConfiguration.
        :rtype: int
        """
        return self._actives_count

    @actives_count.setter
    def actives_count(self, actives_count):
        """Sets the actives_count of this GetAllBenefits200ResponseLimitConfiguration.

        Actives count.

        :param actives_count: The actives_count of this GetAllBenefits200ResponseLimitConfiguration.
        :type actives_count: int
        """

        self._actives_count = actives_count

    @property
    def limit(self):
        """Gets the limit of this GetAllBenefits200ResponseLimitConfiguration.

        Limit.

        :return: The limit of this GetAllBenefits200ResponseLimitConfiguration.
        :rtype: int
        """
        return self._limit

    @limit.setter
    def limit(self, limit):
        """Sets the limit of this GetAllBenefits200ResponseLimitConfiguration.

        Limit.

        :param limit: The limit of this GetAllBenefits200ResponseLimitConfiguration.
        :type limit: int
        """

        self._limit = limit
