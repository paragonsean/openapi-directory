# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_all_benefits200_response_limit_configuration import GetAllBenefits200ResponseLimitConfiguration
from openapi_server.models.get_all_benefits200_response_limit_configuration_max_price import GetAllBenefits200ResponseLimitConfigurationMaxPrice
from openapi_server.models.get_promotions_inner import GetPromotionsInner
from openapi_server import util


class GetAllBenefits200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, archived_items: List[str]=None, disabled_items: List[object]=None, items: List[GetPromotionsInner]=None, limit_configuration: GetAllBenefits200ResponseLimitConfiguration=None, limit_configuration_max_price: GetAllBenefits200ResponseLimitConfigurationMaxPrice=None):
        """GetAllBenefits200Response - a model defined in OpenAPI

        :param archived_items: The archived_items of this GetAllBenefits200Response.
        :param disabled_items: The disabled_items of this GetAllBenefits200Response.
        :param items: The items of this GetAllBenefits200Response.
        :param limit_configuration: The limit_configuration of this GetAllBenefits200Response.
        :param limit_configuration_max_price: The limit_configuration_max_price of this GetAllBenefits200Response.
        """
        self.openapi_types = {
            'archived_items': List[str],
            'disabled_items': List[object],
            'items': List[GetPromotionsInner],
            'limit_configuration': GetAllBenefits200ResponseLimitConfiguration,
            'limit_configuration_max_price': GetAllBenefits200ResponseLimitConfigurationMaxPrice
        }

        self.attribute_map = {
            'archived_items': 'archivedItems',
            'disabled_items': 'disabledItems',
            'items': 'items',
            'limit_configuration': 'limitConfiguration',
            'limit_configuration_max_price': 'limitConfigurationMaxPrice'
        }

        self._archived_items = archived_items
        self._disabled_items = disabled_items
        self._items = items
        self._limit_configuration = limit_configuration
        self._limit_configuration_max_price = limit_configuration_max_price

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetAllBenefits200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetAllBenefits_200_response of this GetAllBenefits200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def archived_items(self):
        """Gets the archived_items of this GetAllBenefits200Response.

        Archived items.

        :return: The archived_items of this GetAllBenefits200Response.
        :rtype: List[str]
        """
        return self._archived_items

    @archived_items.setter
    def archived_items(self, archived_items):
        """Sets the archived_items of this GetAllBenefits200Response.

        Archived items.

        :param archived_items: The archived_items of this GetAllBenefits200Response.
        :type archived_items: List[str]
        """

        self._archived_items = archived_items

    @property
    def disabled_items(self):
        """Gets the disabled_items of this GetAllBenefits200Response.

        Disabled items.

        :return: The disabled_items of this GetAllBenefits200Response.
        :rtype: List[object]
        """
        return self._disabled_items

    @disabled_items.setter
    def disabled_items(self, disabled_items):
        """Sets the disabled_items of this GetAllBenefits200Response.

        Disabled items.

        :param disabled_items: The disabled_items of this GetAllBenefits200Response.
        :type disabled_items: List[object]
        """

        self._disabled_items = disabled_items

    @property
    def items(self):
        """Gets the items of this GetAllBenefits200Response.

        Array with promotions.

        :return: The items of this GetAllBenefits200Response.
        :rtype: List[GetPromotionsInner]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this GetAllBenefits200Response.

        Array with promotions.

        :param items: The items of this GetAllBenefits200Response.
        :type items: List[GetPromotionsInner]
        """

        self._items = items

    @property
    def limit_configuration(self):
        """Gets the limit_configuration of this GetAllBenefits200Response.


        :return: The limit_configuration of this GetAllBenefits200Response.
        :rtype: GetAllBenefits200ResponseLimitConfiguration
        """
        return self._limit_configuration

    @limit_configuration.setter
    def limit_configuration(self, limit_configuration):
        """Sets the limit_configuration of this GetAllBenefits200Response.


        :param limit_configuration: The limit_configuration of this GetAllBenefits200Response.
        :type limit_configuration: GetAllBenefits200ResponseLimitConfiguration
        """

        self._limit_configuration = limit_configuration

    @property
    def limit_configuration_max_price(self):
        """Gets the limit_configuration_max_price of this GetAllBenefits200Response.


        :return: The limit_configuration_max_price of this GetAllBenefits200Response.
        :rtype: GetAllBenefits200ResponseLimitConfigurationMaxPrice
        """
        return self._limit_configuration_max_price

    @limit_configuration_max_price.setter
    def limit_configuration_max_price(self, limit_configuration_max_price):
        """Sets the limit_configuration_max_price of this GetAllBenefits200Response.


        :param limit_configuration_max_price: The limit_configuration_max_price of this GetAllBenefits200Response.
        :type limit_configuration_max_price: GetAllBenefits200ResponseLimitConfigurationMaxPrice
        """

        self._limit_configuration_max_price = limit_configuration_max_price
