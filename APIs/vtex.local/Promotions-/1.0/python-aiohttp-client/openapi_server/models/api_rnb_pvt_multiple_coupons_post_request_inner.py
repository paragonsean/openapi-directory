# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.coupon_configuration import CouponConfiguration
from openapi_server import util


class ApiRnbPvtMultipleCouponsPostRequestInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, coupon_configuration: CouponConfiguration=None, quantity: int=None):
        """ApiRnbPvtMultipleCouponsPostRequestInner - a model defined in OpenAPI

        :param coupon_configuration: The coupon_configuration of this ApiRnbPvtMultipleCouponsPostRequestInner.
        :param quantity: The quantity of this ApiRnbPvtMultipleCouponsPostRequestInner.
        """
        self.openapi_types = {
            'coupon_configuration': CouponConfiguration,
            'quantity': int
        }

        self.attribute_map = {
            'coupon_configuration': 'couponConfiguration',
            'quantity': 'quantity'
        }

        self._coupon_configuration = coupon_configuration
        self._quantity = quantity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiRnbPvtMultipleCouponsPostRequestInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _api_rnb_pvt_multiple_coupons_post_request_inner of this ApiRnbPvtMultipleCouponsPostRequestInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def coupon_configuration(self):
        """Gets the coupon_configuration of this ApiRnbPvtMultipleCouponsPostRequestInner.


        :return: The coupon_configuration of this ApiRnbPvtMultipleCouponsPostRequestInner.
        :rtype: CouponConfiguration
        """
        return self._coupon_configuration

    @coupon_configuration.setter
    def coupon_configuration(self, coupon_configuration):
        """Sets the coupon_configuration of this ApiRnbPvtMultipleCouponsPostRequestInner.


        :param coupon_configuration: The coupon_configuration of this ApiRnbPvtMultipleCouponsPostRequestInner.
        :type coupon_configuration: CouponConfiguration
        """
        if coupon_configuration is None:
            raise ValueError("Invalid value for `coupon_configuration`, must not be `None`")

        self._coupon_configuration = coupon_configuration

    @property
    def quantity(self):
        """Gets the quantity of this ApiRnbPvtMultipleCouponsPostRequestInner.

        Quantity of coupons created. The value must be a minimum of `1` and at maximum `1000`. If the amount is `1`, the coupon code will be the value of the `couponCode` parameter. If the value is greater than `1`, the coupon code will receive a random suffix.

        :return: The quantity of this ApiRnbPvtMultipleCouponsPostRequestInner.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this ApiRnbPvtMultipleCouponsPostRequestInner.

        Quantity of coupons created. The value must be a minimum of `1` and at maximum `1000`. If the amount is `1`, the coupon code will be the value of the `couponCode` parameter. If the value is greater than `1`, the coupon code will receive a random suffix.

        :param quantity: The quantity of this ApiRnbPvtMultipleCouponsPostRequestInner.
        :type quantity: int
        """
        if quantity is None:
            raise ValueError("Invalid value for `quantity`, must not be `None`")

        self._quantity = quantity
