# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.getcampaignaudiences200_response_inner_last_modified import Getcampaignaudiences200ResponseInnerLastModified
from openapi_server.models.setcampaignconfiguration200_response_target_configurations_inner import Setcampaignconfiguration200ResponseTargetConfigurationsInner
from openapi_server import util


class Setcampaignconfiguration200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, begin_date_utc: str=None, end_date_utc: str=None, id: str=None, is_active: bool=None, is_and_operator: bool=None, is_archived: bool=None, last_modified: Getcampaignaudiences200ResponseInnerLastModified=None, name: str=None, target_configurations: List[Setcampaignconfiguration200ResponseTargetConfigurationsInner]=None):
        """Setcampaignconfiguration200Response - a model defined in OpenAPI

        :param begin_date_utc: The begin_date_utc of this Setcampaignconfiguration200Response.
        :param end_date_utc: The end_date_utc of this Setcampaignconfiguration200Response.
        :param id: The id of this Setcampaignconfiguration200Response.
        :param is_active: The is_active of this Setcampaignconfiguration200Response.
        :param is_and_operator: The is_and_operator of this Setcampaignconfiguration200Response.
        :param is_archived: The is_archived of this Setcampaignconfiguration200Response.
        :param last_modified: The last_modified of this Setcampaignconfiguration200Response.
        :param name: The name of this Setcampaignconfiguration200Response.
        :param target_configurations: The target_configurations of this Setcampaignconfiguration200Response.
        """
        self.openapi_types = {
            'begin_date_utc': str,
            'end_date_utc': str,
            'id': str,
            'is_active': bool,
            'is_and_operator': bool,
            'is_archived': bool,
            'last_modified': Getcampaignaudiences200ResponseInnerLastModified,
            'name': str,
            'target_configurations': List[Setcampaignconfiguration200ResponseTargetConfigurationsInner]
        }

        self.attribute_map = {
            'begin_date_utc': 'beginDateUtc',
            'end_date_utc': 'endDateUtc',
            'id': 'id',
            'is_active': 'isActive',
            'is_and_operator': 'isAndOperator',
            'is_archived': 'isArchived',
            'last_modified': 'lastModified',
            'name': 'name',
            'target_configurations': 'targetConfigurations'
        }

        self._begin_date_utc = begin_date_utc
        self._end_date_utc = end_date_utc
        self._id = id
        self._is_active = is_active
        self._is_and_operator = is_and_operator
        self._is_archived = is_archived
        self._last_modified = last_modified
        self._name = name
        self._target_configurations = target_configurations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Setcampaignconfiguration200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Setcampaignconfiguration_200_response of this Setcampaignconfiguration200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def begin_date_utc(self):
        """Gets the begin_date_utc of this Setcampaignconfiguration200Response.

        Start date of the campaign audience in UTC format.

        :return: The begin_date_utc of this Setcampaignconfiguration200Response.
        :rtype: str
        """
        return self._begin_date_utc

    @begin_date_utc.setter
    def begin_date_utc(self, begin_date_utc):
        """Sets the begin_date_utc of this Setcampaignconfiguration200Response.

        Start date of the campaign audience in UTC format.

        :param begin_date_utc: The begin_date_utc of this Setcampaignconfiguration200Response.
        :type begin_date_utc: str
        """

        self._begin_date_utc = begin_date_utc

    @property
    def end_date_utc(self):
        """Gets the end_date_utc of this Setcampaignconfiguration200Response.

        End date of the campaign audience in UTC format.

        :return: The end_date_utc of this Setcampaignconfiguration200Response.
        :rtype: str
        """
        return self._end_date_utc

    @end_date_utc.setter
    def end_date_utc(self, end_date_utc):
        """Sets the end_date_utc of this Setcampaignconfiguration200Response.

        End date of the campaign audience in UTC format.

        :param end_date_utc: The end_date_utc of this Setcampaignconfiguration200Response.
        :type end_date_utc: str
        """

        self._end_date_utc = end_date_utc

    @property
    def id(self):
        """Gets the id of this Setcampaignconfiguration200Response.

        Campaign audience ID.

        :return: The id of this Setcampaignconfiguration200Response.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Setcampaignconfiguration200Response.

        Campaign audience ID.

        :param id: The id of this Setcampaignconfiguration200Response.
        :type id: str
        """

        self._id = id

    @property
    def is_active(self):
        """Gets the is_active of this Setcampaignconfiguration200Response.

        Defines if the campaign audience is active (`true`) or not (`false`).

        :return: The is_active of this Setcampaignconfiguration200Response.
        :rtype: bool
        """
        return self._is_active

    @is_active.setter
    def is_active(self, is_active):
        """Sets the is_active of this Setcampaignconfiguration200Response.

        Defines if the campaign audience is active (`true`) or not (`false`).

        :param is_active: The is_active of this Setcampaignconfiguration200Response.
        :type is_active: bool
        """

        self._is_active = is_active

    @property
    def is_and_operator(self):
        """Gets the is_and_operator of this Setcampaignconfiguration200Response.

        When `true`, determines that all the `targetConfigurations` need to be valid for the campaign audience to be active. When `false`, determines that if at least one of the `targetConfigurations` is valid, the campaign audience will be active.

        :return: The is_and_operator of this Setcampaignconfiguration200Response.
        :rtype: bool
        """
        return self._is_and_operator

    @is_and_operator.setter
    def is_and_operator(self, is_and_operator):
        """Sets the is_and_operator of this Setcampaignconfiguration200Response.

        When `true`, determines that all the `targetConfigurations` need to be valid for the campaign audience to be active. When `false`, determines that if at least one of the `targetConfigurations` is valid, the campaign audience will be active.

        :param is_and_operator: The is_and_operator of this Setcampaignconfiguration200Response.
        :type is_and_operator: bool
        """

        self._is_and_operator = is_and_operator

    @property
    def is_archived(self):
        """Gets the is_archived of this Setcampaignconfiguration200Response.

        Defines if the campaign audience is archived (`true`) or not (`false`).

        :return: The is_archived of this Setcampaignconfiguration200Response.
        :rtype: bool
        """
        return self._is_archived

    @is_archived.setter
    def is_archived(self, is_archived):
        """Sets the is_archived of this Setcampaignconfiguration200Response.

        Defines if the campaign audience is archived (`true`) or not (`false`).

        :param is_archived: The is_archived of this Setcampaignconfiguration200Response.
        :type is_archived: bool
        """

        self._is_archived = is_archived

    @property
    def last_modified(self):
        """Gets the last_modified of this Setcampaignconfiguration200Response.


        :return: The last_modified of this Setcampaignconfiguration200Response.
        :rtype: Getcampaignaudiences200ResponseInnerLastModified
        """
        return self._last_modified

    @last_modified.setter
    def last_modified(self, last_modified):
        """Sets the last_modified of this Setcampaignconfiguration200Response.


        :param last_modified: The last_modified of this Setcampaignconfiguration200Response.
        :type last_modified: Getcampaignaudiences200ResponseInnerLastModified
        """

        self._last_modified = last_modified

    @property
    def name(self):
        """Gets the name of this Setcampaignconfiguration200Response.

        Campaign audience name.

        :return: The name of this Setcampaignconfiguration200Response.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Setcampaignconfiguration200Response.

        Campaign audience name.

        :param name: The name of this Setcampaignconfiguration200Response.
        :type name: str
        """

        self._name = name

    @property
    def target_configurations(self):
        """Gets the target_configurations of this Setcampaignconfiguration200Response.

        Array that contains all target audience that the campaign audience will be valid.

        :return: The target_configurations of this Setcampaignconfiguration200Response.
        :rtype: List[Setcampaignconfiguration200ResponseTargetConfigurationsInner]
        """
        return self._target_configurations

    @target_configurations.setter
    def target_configurations(self, target_configurations):
        """Sets the target_configurations of this Setcampaignconfiguration200Response.

        Array that contains all target audience that the campaign audience will be valid.

        :param target_configurations: The target_configurations of this Setcampaignconfiguration200Response.
        :type target_configurations: List[Setcampaignconfiguration200ResponseTargetConfigurationsInner]
        """

        self._target_configurations = target_configurations
