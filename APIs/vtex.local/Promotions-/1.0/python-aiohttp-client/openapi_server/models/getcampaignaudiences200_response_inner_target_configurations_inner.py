# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_or_update_calculator_configuration200_response_affiliates_inner import CreateOrUpdateCalculatorConfiguration200ResponseAffiliatesInner
from openapi_server.models.create_or_update_calculator_configuration200_response_brands_inner import CreateOrUpdateCalculatorConfiguration200ResponseBrandsInner
from openapi_server.models.create_or_update_calculator_configuration200_response_categories_inner import CreateOrUpdateCalculatorConfiguration200ResponseCategoriesInner
from openapi_server.models.create_or_update_calculator_configuration200_response_collections_inner import CreateOrUpdateCalculatorConfiguration200ResponseCollectionsInner
from openapi_server.models.create_or_update_calculator_configuration200_response_payments_methods_inner import CreateOrUpdateCalculatorConfiguration200ResponsePaymentsMethodsInner
from openapi_server.models.create_or_update_calculator_configuration200_response_products_inner import CreateOrUpdateCalculatorConfiguration200ResponseProductsInner
from openapi_server.models.create_or_update_calculator_configuration200_response_skus_inner import CreateOrUpdateCalculatorConfiguration200ResponseSkusInner
from openapi_server.models.getcampaignaudiences200_response_inner_target_configurations_inner_zip_code_ranges_inner import Getcampaignaudiences200ResponseInnerTargetConfigurationsInnerZipCodeRangesInner
from openapi_server import util


class Getcampaignaudiences200ResponseInnerTargetConfigurationsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, affiliates: List[CreateOrUpdateCalculatorConfiguration200ResponseAffiliatesInner]=None, are_sales_channel_ids_exclusive: bool=None, brands: List[CreateOrUpdateCalculatorConfiguration200ResponseBrandsInner]=None, brands_are_inclusive: bool=None, campaigns: List[object]=None, card_issuers: List[object]=None, categories: List[CreateOrUpdateCalculatorConfiguration200ResponseCategoriesInner]=None, categories_are_inclusive: bool=None, cluster_expressions: List[str]=None, cluster_operator: str=None, collections: List[CreateOrUpdateCalculatorConfiguration200ResponseCollectionsInner]=None, collections1_buy_together: List[str]=None, collections2_buy_together: List[object]=None, collections_is_inclusive: bool=None, compare_list_price_and_price: bool=None, coupon: List[object]=None, days_ago_of_purchases: int=None, enable_buy_together_per_sku: bool=None, featured: bool=None, first_buy_is_profile_optimistic: bool=None, gift_list_types: List[str]=None, id: str=None, id_seller_is_inclusive: bool=None, ids_sales_channel: List[str]=None, installment: int=None, is_different_list_price_and_price: bool=None, is_first_buy: bool=None, is_min_max_installments: bool=None, is_sla_selected: bool=None, item_max_price: float=None, item_min_price: float=None, list_brand1_buy_together: List[object]=None, list_category1_buy_together: List[object]=None, list_sku1_buy_together: List[object]=None, list_sku2_buy_together: List[object]=None, marketing_tags: List[str]=None, marketing_tags_are_not_inclusive: bool=None, max_installment: int=None, max_usage: int=None, max_usage_per_client: int=None, merchants: List[object]=None, min_installment: int=None, minimum_quantity_buy_together: int=None, multiple_use_per_client: bool=None, name: str=None, origin: str=None, payments_methods: List[CreateOrUpdateCalculatorConfiguration200ResponsePaymentsMethodsInner]=None, payments_rules: List[object]=None, percentual_discount_value_list: List[float]=None, products: List[CreateOrUpdateCalculatorConfiguration200ResponseProductsInner]=None, products_are_inclusive: bool=None, products_specifications: List[object]=None, quantity_to_affect_buy_together: int=None, restrictions_bins: List[str]=None, should_distribute_discount_among_matched_items: bool=None, skus: List[CreateOrUpdateCalculatorConfiguration200ResponseSkusInner]=None, skus_are_inclusive: bool=None, slas_ids: List[str]=None, stores: List[object]=None, stores_are_inclusive: bool=None, total_value_celing: float=None, total_value_floor: float=None, total_value_include_all_items: bool=None, total_value_mode: str=None, total_value_purchase: float=None, use_new_progressive_algorithm: bool=None, zip_code_ranges: List[Getcampaignaudiences200ResponseInnerTargetConfigurationsInnerZipCodeRangesInner]=None):
        """Getcampaignaudiences200ResponseInnerTargetConfigurationsInner - a model defined in OpenAPI

        :param affiliates: The affiliates of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param are_sales_channel_ids_exclusive: The are_sales_channel_ids_exclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param brands: The brands of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param brands_are_inclusive: The brands_are_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param campaigns: The campaigns of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param card_issuers: The card_issuers of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param categories: The categories of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param categories_are_inclusive: The categories_are_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param cluster_expressions: The cluster_expressions of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param cluster_operator: The cluster_operator of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param collections: The collections of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param collections1_buy_together: The collections1_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param collections2_buy_together: The collections2_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param collections_is_inclusive: The collections_is_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param compare_list_price_and_price: The compare_list_price_and_price of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param coupon: The coupon of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param days_ago_of_purchases: The days_ago_of_purchases of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param enable_buy_together_per_sku: The enable_buy_together_per_sku of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param featured: The featured of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param first_buy_is_profile_optimistic: The first_buy_is_profile_optimistic of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param gift_list_types: The gift_list_types of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param id: The id of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param id_seller_is_inclusive: The id_seller_is_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param ids_sales_channel: The ids_sales_channel of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param installment: The installment of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param is_different_list_price_and_price: The is_different_list_price_and_price of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param is_first_buy: The is_first_buy of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param is_min_max_installments: The is_min_max_installments of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param is_sla_selected: The is_sla_selected of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param item_max_price: The item_max_price of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param item_min_price: The item_min_price of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param list_brand1_buy_together: The list_brand1_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param list_category1_buy_together: The list_category1_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param list_sku1_buy_together: The list_sku1_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param list_sku2_buy_together: The list_sku2_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param marketing_tags: The marketing_tags of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param marketing_tags_are_not_inclusive: The marketing_tags_are_not_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param max_installment: The max_installment of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param max_usage: The max_usage of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param max_usage_per_client: The max_usage_per_client of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param merchants: The merchants of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param min_installment: The min_installment of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param minimum_quantity_buy_together: The minimum_quantity_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param multiple_use_per_client: The multiple_use_per_client of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param name: The name of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param origin: The origin of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param payments_methods: The payments_methods of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param payments_rules: The payments_rules of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param percentual_discount_value_list: The percentual_discount_value_list of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param products: The products of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param products_are_inclusive: The products_are_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param products_specifications: The products_specifications of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param quantity_to_affect_buy_together: The quantity_to_affect_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param restrictions_bins: The restrictions_bins of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param should_distribute_discount_among_matched_items: The should_distribute_discount_among_matched_items of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param skus: The skus of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param skus_are_inclusive: The skus_are_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param slas_ids: The slas_ids of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param stores: The stores of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param stores_are_inclusive: The stores_are_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param total_value_celing: The total_value_celing of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param total_value_floor: The total_value_floor of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param total_value_include_all_items: The total_value_include_all_items of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param total_value_mode: The total_value_mode of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param total_value_purchase: The total_value_purchase of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param use_new_progressive_algorithm: The use_new_progressive_algorithm of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :param zip_code_ranges: The zip_code_ranges of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        """
        self.openapi_types = {
            'affiliates': List[CreateOrUpdateCalculatorConfiguration200ResponseAffiliatesInner],
            'are_sales_channel_ids_exclusive': bool,
            'brands': List[CreateOrUpdateCalculatorConfiguration200ResponseBrandsInner],
            'brands_are_inclusive': bool,
            'campaigns': List[object],
            'card_issuers': List[object],
            'categories': List[CreateOrUpdateCalculatorConfiguration200ResponseCategoriesInner],
            'categories_are_inclusive': bool,
            'cluster_expressions': List[str],
            'cluster_operator': str,
            'collections': List[CreateOrUpdateCalculatorConfiguration200ResponseCollectionsInner],
            'collections1_buy_together': List[str],
            'collections2_buy_together': List[object],
            'collections_is_inclusive': bool,
            'compare_list_price_and_price': bool,
            'coupon': List[object],
            'days_ago_of_purchases': int,
            'enable_buy_together_per_sku': bool,
            'featured': bool,
            'first_buy_is_profile_optimistic': bool,
            'gift_list_types': List[str],
            'id': str,
            'id_seller_is_inclusive': bool,
            'ids_sales_channel': List[str],
            'installment': int,
            'is_different_list_price_and_price': bool,
            'is_first_buy': bool,
            'is_min_max_installments': bool,
            'is_sla_selected': bool,
            'item_max_price': float,
            'item_min_price': float,
            'list_brand1_buy_together': List[object],
            'list_category1_buy_together': List[object],
            'list_sku1_buy_together': List[object],
            'list_sku2_buy_together': List[object],
            'marketing_tags': List[str],
            'marketing_tags_are_not_inclusive': bool,
            'max_installment': int,
            'max_usage': int,
            'max_usage_per_client': int,
            'merchants': List[object],
            'min_installment': int,
            'minimum_quantity_buy_together': int,
            'multiple_use_per_client': bool,
            'name': str,
            'origin': str,
            'payments_methods': List[CreateOrUpdateCalculatorConfiguration200ResponsePaymentsMethodsInner],
            'payments_rules': List[object],
            'percentual_discount_value_list': List[float],
            'products': List[CreateOrUpdateCalculatorConfiguration200ResponseProductsInner],
            'products_are_inclusive': bool,
            'products_specifications': List[object],
            'quantity_to_affect_buy_together': int,
            'restrictions_bins': List[str],
            'should_distribute_discount_among_matched_items': bool,
            'skus': List[CreateOrUpdateCalculatorConfiguration200ResponseSkusInner],
            'skus_are_inclusive': bool,
            'slas_ids': List[str],
            'stores': List[object],
            'stores_are_inclusive': bool,
            'total_value_celing': float,
            'total_value_floor': float,
            'total_value_include_all_items': bool,
            'total_value_mode': str,
            'total_value_purchase': float,
            'use_new_progressive_algorithm': bool,
            'zip_code_ranges': List[Getcampaignaudiences200ResponseInnerTargetConfigurationsInnerZipCodeRangesInner]
        }

        self.attribute_map = {
            'affiliates': 'affiliates',
            'are_sales_channel_ids_exclusive': 'areSalesChannelIdsExclusive',
            'brands': 'brands',
            'brands_are_inclusive': 'brandsAreInclusive',
            'campaigns': 'campaigns',
            'card_issuers': 'cardIssuers',
            'categories': 'categories',
            'categories_are_inclusive': 'categoriesAreInclusive',
            'cluster_expressions': 'clusterExpressions',
            'cluster_operator': 'clusterOperator',
            'collections': 'collections',
            'collections1_buy_together': 'collections1BuyTogether',
            'collections2_buy_together': 'collections2BuyTogether',
            'collections_is_inclusive': 'collectionsIsInclusive',
            'compare_list_price_and_price': 'compareListPriceAndPrice',
            'coupon': 'coupon',
            'days_ago_of_purchases': 'daysAgoOfPurchases',
            'enable_buy_together_per_sku': 'enableBuyTogetherPerSku',
            'featured': 'featured',
            'first_buy_is_profile_optimistic': 'firstBuyIsProfileOptimistic',
            'gift_list_types': 'giftListTypes',
            'id': 'id',
            'id_seller_is_inclusive': 'idSellerIsInclusive',
            'ids_sales_channel': 'idsSalesChannel',
            'installment': 'installment',
            'is_different_list_price_and_price': 'isDifferentListPriceAndPrice',
            'is_first_buy': 'isFirstBuy',
            'is_min_max_installments': 'isMinMaxInstallments',
            'is_sla_selected': 'isSlaSelected',
            'item_max_price': 'itemMaxPrice',
            'item_min_price': 'itemMinPrice',
            'list_brand1_buy_together': 'listBrand1BuyTogether',
            'list_category1_buy_together': 'listCategory1BuyTogether',
            'list_sku1_buy_together': 'listSku1BuyTogether',
            'list_sku2_buy_together': 'listSku2BuyTogether',
            'marketing_tags': 'marketingTags',
            'marketing_tags_are_not_inclusive': 'marketingTagsAreNotInclusive',
            'max_installment': 'maxInstallment',
            'max_usage': 'maxUsage',
            'max_usage_per_client': 'maxUsagePerClient',
            'merchants': 'merchants',
            'min_installment': 'minInstallment',
            'minimum_quantity_buy_together': 'minimumQuantityBuyTogether',
            'multiple_use_per_client': 'multipleUsePerClient',
            'name': 'name',
            'origin': 'origin',
            'payments_methods': 'paymentsMethods',
            'payments_rules': 'paymentsRules',
            'percentual_discount_value_list': 'percentualDiscountValueList',
            'products': 'products',
            'products_are_inclusive': 'productsAreInclusive',
            'products_specifications': 'productsSpecifications',
            'quantity_to_affect_buy_together': 'quantityToAffectBuyTogether',
            'restrictions_bins': 'restrictionsBins',
            'should_distribute_discount_among_matched_items': 'shouldDistributeDiscountAmongMatchedItems',
            'skus': 'skus',
            'skus_are_inclusive': 'skusAreInclusive',
            'slas_ids': 'slasIds',
            'stores': 'stores',
            'stores_are_inclusive': 'storesAreInclusive',
            'total_value_celing': 'totalValueCeling',
            'total_value_floor': 'totalValueFloor',
            'total_value_include_all_items': 'totalValueIncludeAllItems',
            'total_value_mode': 'totalValueMode',
            'total_value_purchase': 'totalValuePurchase',
            'use_new_progressive_algorithm': 'useNewProgressiveAlgorithm',
            'zip_code_ranges': 'zipCodeRanges'
        }

        self._affiliates = affiliates
        self._are_sales_channel_ids_exclusive = are_sales_channel_ids_exclusive
        self._brands = brands
        self._brands_are_inclusive = brands_are_inclusive
        self._campaigns = campaigns
        self._card_issuers = card_issuers
        self._categories = categories
        self._categories_are_inclusive = categories_are_inclusive
        self._cluster_expressions = cluster_expressions
        self._cluster_operator = cluster_operator
        self._collections = collections
        self._collections1_buy_together = collections1_buy_together
        self._collections2_buy_together = collections2_buy_together
        self._collections_is_inclusive = collections_is_inclusive
        self._compare_list_price_and_price = compare_list_price_and_price
        self._coupon = coupon
        self._days_ago_of_purchases = days_ago_of_purchases
        self._enable_buy_together_per_sku = enable_buy_together_per_sku
        self._featured = featured
        self._first_buy_is_profile_optimistic = first_buy_is_profile_optimistic
        self._gift_list_types = gift_list_types
        self._id = id
        self._id_seller_is_inclusive = id_seller_is_inclusive
        self._ids_sales_channel = ids_sales_channel
        self._installment = installment
        self._is_different_list_price_and_price = is_different_list_price_and_price
        self._is_first_buy = is_first_buy
        self._is_min_max_installments = is_min_max_installments
        self._is_sla_selected = is_sla_selected
        self._item_max_price = item_max_price
        self._item_min_price = item_min_price
        self._list_brand1_buy_together = list_brand1_buy_together
        self._list_category1_buy_together = list_category1_buy_together
        self._list_sku1_buy_together = list_sku1_buy_together
        self._list_sku2_buy_together = list_sku2_buy_together
        self._marketing_tags = marketing_tags
        self._marketing_tags_are_not_inclusive = marketing_tags_are_not_inclusive
        self._max_installment = max_installment
        self._max_usage = max_usage
        self._max_usage_per_client = max_usage_per_client
        self._merchants = merchants
        self._min_installment = min_installment
        self._minimum_quantity_buy_together = minimum_quantity_buy_together
        self._multiple_use_per_client = multiple_use_per_client
        self._name = name
        self._origin = origin
        self._payments_methods = payments_methods
        self._payments_rules = payments_rules
        self._percentual_discount_value_list = percentual_discount_value_list
        self._products = products
        self._products_are_inclusive = products_are_inclusive
        self._products_specifications = products_specifications
        self._quantity_to_affect_buy_together = quantity_to_affect_buy_together
        self._restrictions_bins = restrictions_bins
        self._should_distribute_discount_among_matched_items = should_distribute_discount_among_matched_items
        self._skus = skus
        self._skus_are_inclusive = skus_are_inclusive
        self._slas_ids = slas_ids
        self._stores = stores
        self._stores_are_inclusive = stores_are_inclusive
        self._total_value_celing = total_value_celing
        self._total_value_floor = total_value_floor
        self._total_value_include_all_items = total_value_include_all_items
        self._total_value_mode = total_value_mode
        self._total_value_purchase = total_value_purchase
        self._use_new_progressive_algorithm = use_new_progressive_algorithm
        self._zip_code_ranges = zip_code_ranges

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Getcampaignaudiences200ResponseInnerTargetConfigurationsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Getcampaignaudiences_200_response_inner_targetConfigurations_inner of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def affiliates(self):
        """Gets the affiliates of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Marketplace order identifier. The discount will apply to selected affiliates.

        :return: The affiliates of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: List[CreateOrUpdateCalculatorConfiguration200ResponseAffiliatesInner]
        """
        return self._affiliates

    @affiliates.setter
    def affiliates(self, affiliates):
        """Sets the affiliates of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Marketplace order identifier. The discount will apply to selected affiliates.

        :param affiliates: The affiliates of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type affiliates: List[CreateOrUpdateCalculatorConfiguration200ResponseAffiliatesInner]
        """

        self._affiliates = affiliates

    @property
    def are_sales_channel_ids_exclusive(self):
        """Gets the are_sales_channel_ids_exclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Defines if the trade policy IDs are exclusive.

        :return: The are_sales_channel_ids_exclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: bool
        """
        return self._are_sales_channel_ids_exclusive

    @are_sales_channel_ids_exclusive.setter
    def are_sales_channel_ids_exclusive(self, are_sales_channel_ids_exclusive):
        """Sets the are_sales_channel_ids_exclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Defines if the trade policy IDs are exclusive.

        :param are_sales_channel_ids_exclusive: The are_sales_channel_ids_exclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type are_sales_channel_ids_exclusive: bool
        """

        self._are_sales_channel_ids_exclusive = are_sales_channel_ids_exclusive

    @property
    def brands(self):
        """Gets the brands of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Object composed by the brands that will activate or deactivate the campaign audience.

        :return: The brands of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: List[CreateOrUpdateCalculatorConfiguration200ResponseBrandsInner]
        """
        return self._brands

    @brands.setter
    def brands(self, brands):
        """Sets the brands of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Object composed by the brands that will activate or deactivate the campaign audience.

        :param brands: The brands of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type brands: List[CreateOrUpdateCalculatorConfiguration200ResponseBrandsInner]
        """

        self._brands = brands

    @property
    def brands_are_inclusive(self):
        """Gets the brands_are_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        If set to `true`, this campaign audience will be applied to any brand present on the `brands` field. If set to `false`, brands present on that field will make this campaign audience not to be applied.

        :return: The brands_are_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: bool
        """
        return self._brands_are_inclusive

    @brands_are_inclusive.setter
    def brands_are_inclusive(self, brands_are_inclusive):
        """Sets the brands_are_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        If set to `true`, this campaign audience will be applied to any brand present on the `brands` field. If set to `false`, brands present on that field will make this campaign audience not to be applied.

        :param brands_are_inclusive: The brands_are_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type brands_are_inclusive: bool
        """

        self._brands_are_inclusive = brands_are_inclusive

    @property
    def campaigns(self):
        """Gets the campaigns of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Campaign Audiences that activate this promotion.

        :return: The campaigns of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: List[object]
        """
        return self._campaigns

    @campaigns.setter
    def campaigns(self, campaigns):
        """Sets the campaigns of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Campaign Audiences that activate this promotion.

        :param campaigns: The campaigns of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type campaigns: List[object]
        """

        self._campaigns = campaigns

    @property
    def card_issuers(self):
        """Gets the card_issuers of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.


        :return: The card_issuers of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: List[object]
        """
        return self._card_issuers

    @card_issuers.setter
    def card_issuers(self, card_issuers):
        """Sets the card_issuers of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.


        :param card_issuers: The card_issuers of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type card_issuers: List[object]
        """

        self._card_issuers = card_issuers

    @property
    def categories(self):
        """Gets the categories of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Object composed by the categories that will activate or deactivate the campaign audience.

        :return: The categories of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: List[CreateOrUpdateCalculatorConfiguration200ResponseCategoriesInner]
        """
        return self._categories

    @categories.setter
    def categories(self, categories):
        """Sets the categories of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Object composed by the categories that will activate or deactivate the campaign audience.

        :param categories: The categories of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type categories: List[CreateOrUpdateCalculatorConfiguration200ResponseCategoriesInner]
        """

        self._categories = categories

    @property
    def categories_are_inclusive(self):
        """Gets the categories_are_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        If set to `true`, this campaign audience will be applied to any category present on the `categories` field. If set to `false`, categories present on that field will make this campaign audience not to be applied.

        :return: The categories_are_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: bool
        """
        return self._categories_are_inclusive

    @categories_are_inclusive.setter
    def categories_are_inclusive(self, categories_are_inclusive):
        """Sets the categories_are_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        If set to `true`, this campaign audience will be applied to any category present on the `categories` field. If set to `false`, categories present on that field will make this campaign audience not to be applied.

        :param categories_are_inclusive: The categories_are_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type categories_are_inclusive: bool
        """

        self._categories_are_inclusive = categories_are_inclusive

    @property
    def cluster_expressions(self):
        """Gets the cluster_expressions of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        An expression to use with clusters.

        :return: The cluster_expressions of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: List[str]
        """
        return self._cluster_expressions

    @cluster_expressions.setter
    def cluster_expressions(self, cluster_expressions):
        """Sets the cluster_expressions of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        An expression to use with clusters.

        :param cluster_expressions: The cluster_expressions of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type cluster_expressions: List[str]
        """

        self._cluster_expressions = cluster_expressions

    @property
    def cluster_operator(self):
        """Gets the cluster_operator of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.


        :return: The cluster_operator of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: str
        """
        return self._cluster_operator

    @cluster_operator.setter
    def cluster_operator(self, cluster_operator):
        """Sets the cluster_operator of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.


        :param cluster_operator: The cluster_operator of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type cluster_operator: str
        """

        self._cluster_operator = cluster_operator

    @property
    def collections(self):
        """Gets the collections of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Object composed by the collections that will activate or deactivate the campaign audience.

        :return: The collections of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: List[CreateOrUpdateCalculatorConfiguration200ResponseCollectionsInner]
        """
        return self._collections

    @collections.setter
    def collections(self, collections):
        """Sets the collections of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Object composed by the collections that will activate or deactivate the campaign audience.

        :param collections: The collections of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type collections: List[CreateOrUpdateCalculatorConfiguration200ResponseCollectionsInner]
        """

        self._collections = collections

    @property
    def collections1_buy_together(self):
        """Gets the collections1_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Collections that will generate the promotion, type **Buy Together**, **More for less**, **Progressive Discount**, **Buy One Get One**.

        :return: The collections1_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: List[str]
        """
        return self._collections1_buy_together

    @collections1_buy_together.setter
    def collections1_buy_together(self, collections1_buy_together):
        """Sets the collections1_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Collections that will generate the promotion, type **Buy Together**, **More for less**, **Progressive Discount**, **Buy One Get One**.

        :param collections1_buy_together: The collections1_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type collections1_buy_together: List[str]
        """

        self._collections1_buy_together = collections1_buy_together

    @property
    def collections2_buy_together(self):
        """Gets the collections2_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.


        :return: The collections2_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: List[object]
        """
        return self._collections2_buy_together

    @collections2_buy_together.setter
    def collections2_buy_together(self, collections2_buy_together):
        """Sets the collections2_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.


        :param collections2_buy_together: The collections2_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type collections2_buy_together: List[object]
        """

        self._collections2_buy_together = collections2_buy_together

    @property
    def collections_is_inclusive(self):
        """Gets the collections_is_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        If set to `true`, this campaign audience will be applied to any collection present on the `collections` field. If set to `false`, collections present on that field will make this campaign audience not to be applied.

        :return: The collections_is_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: bool
        """
        return self._collections_is_inclusive

    @collections_is_inclusive.setter
    def collections_is_inclusive(self, collections_is_inclusive):
        """Sets the collections_is_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        If set to `true`, this campaign audience will be applied to any collection present on the `collections` field. If set to `false`, collections present on that field will make this campaign audience not to be applied.

        :param collections_is_inclusive: The collections_is_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type collections_is_inclusive: bool
        """

        self._collections_is_inclusive = collections_is_inclusive

    @property
    def compare_list_price_and_price(self):
        """Gets the compare_list_price_and_price of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        If the **List Price** and **Price** are the same.

        :return: The compare_list_price_and_price of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: bool
        """
        return self._compare_list_price_and_price

    @compare_list_price_and_price.setter
    def compare_list_price_and_price(self, compare_list_price_and_price):
        """Sets the compare_list_price_and_price of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        If the **List Price** and **Price** are the same.

        :param compare_list_price_and_price: The compare_list_price_and_price of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type compare_list_price_and_price: bool
        """

        self._compare_list_price_and_price = compare_list_price_and_price

    @property
    def coupon(self):
        """Gets the coupon of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.


        :return: The coupon of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: List[object]
        """
        return self._coupon

    @coupon.setter
    def coupon(self, coupon):
        """Sets the coupon of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.


        :param coupon: The coupon of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type coupon: List[object]
        """

        self._coupon = coupon

    @property
    def days_ago_of_purchases(self):
        """Gets the days_ago_of_purchases of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Number of days that are considered to add the purchase history.

        :return: The days_ago_of_purchases of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: int
        """
        return self._days_ago_of_purchases

    @days_ago_of_purchases.setter
    def days_ago_of_purchases(self, days_ago_of_purchases):
        """Sets the days_ago_of_purchases of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Number of days that are considered to add the purchase history.

        :param days_ago_of_purchases: The days_ago_of_purchases of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type days_ago_of_purchases: int
        """

        self._days_ago_of_purchases = days_ago_of_purchases

    @property
    def enable_buy_together_per_sku(self):
        """Gets the enable_buy_together_per_sku of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Enable **Buy Together** per SKU.

        :return: The enable_buy_together_per_sku of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: bool
        """
        return self._enable_buy_together_per_sku

    @enable_buy_together_per_sku.setter
    def enable_buy_together_per_sku(self, enable_buy_together_per_sku):
        """Sets the enable_buy_together_per_sku of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Enable **Buy Together** per SKU.

        :param enable_buy_together_per_sku: The enable_buy_together_per_sku of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type enable_buy_together_per_sku: bool
        """

        self._enable_buy_together_per_sku = enable_buy_together_per_sku

    @property
    def featured(self):
        """Gets the featured of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Defines if the target audience is featured (`true`) or not (`false`).

        :return: The featured of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: bool
        """
        return self._featured

    @featured.setter
    def featured(self, featured):
        """Sets the featured of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Defines if the target audience is featured (`true`) or not (`false`).

        :param featured: The featured of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type featured: bool
        """

        self._featured = featured

    @property
    def first_buy_is_profile_optimistic(self):
        """Gets the first_buy_is_profile_optimistic of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Applies the discount even if the user is not logged.

        :return: The first_buy_is_profile_optimistic of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: bool
        """
        return self._first_buy_is_profile_optimistic

    @first_buy_is_profile_optimistic.setter
    def first_buy_is_profile_optimistic(self, first_buy_is_profile_optimistic):
        """Sets the first_buy_is_profile_optimistic of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Applies the discount even if the user is not logged.

        :param first_buy_is_profile_optimistic: The first_buy_is_profile_optimistic of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type first_buy_is_profile_optimistic: bool
        """

        self._first_buy_is_profile_optimistic = first_buy_is_profile_optimistic

    @property
    def gift_list_types(self):
        """Gets the gift_list_types of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Gifts List Type.

        :return: The gift_list_types of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: List[str]
        """
        return self._gift_list_types

    @gift_list_types.setter
    def gift_list_types(self, gift_list_types):
        """Sets the gift_list_types of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Gifts List Type.

        :param gift_list_types: The gift_list_types of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type gift_list_types: List[str]
        """

        self._gift_list_types = gift_list_types

    @property
    def id(self):
        """Gets the id of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Target audience ID.

        :return: The id of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Target audience ID.

        :param id: The id of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type id: str
        """

        self._id = id

    @property
    def id_seller_is_inclusive(self):
        """Gets the id_seller_is_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Defines if at least one of the sellers must be valid to active the campaign audience.

        :return: The id_seller_is_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: bool
        """
        return self._id_seller_is_inclusive

    @id_seller_is_inclusive.setter
    def id_seller_is_inclusive(self, id_seller_is_inclusive):
        """Sets the id_seller_is_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Defines if at least one of the sellers must be valid to active the campaign audience.

        :param id_seller_is_inclusive: The id_seller_is_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type id_seller_is_inclusive: bool
        """

        self._id_seller_is_inclusive = id_seller_is_inclusive

    @property
    def ids_sales_channel(self):
        """Gets the ids_sales_channel of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Array with all the trade policies that activate the campaign audience.

        :return: The ids_sales_channel of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: List[str]
        """
        return self._ids_sales_channel

    @ids_sales_channel.setter
    def ids_sales_channel(self, ids_sales_channel):
        """Sets the ids_sales_channel of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Array with all the trade policies that activate the campaign audience.

        :param ids_sales_channel: The ids_sales_channel of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type ids_sales_channel: List[str]
        """

        self._ids_sales_channel = ids_sales_channel

    @property
    def installment(self):
        """Gets the installment of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.


        :return: The installment of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: int
        """
        return self._installment

    @installment.setter
    def installment(self, installment):
        """Sets the installment of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.


        :param installment: The installment of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type installment: int
        """

        self._installment = installment

    @property
    def is_different_list_price_and_price(self):
        """Gets the is_different_list_price_and_price of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Applies the campaign audience only if the list price and price is different.

        :return: The is_different_list_price_and_price of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: bool
        """
        return self._is_different_list_price_and_price

    @is_different_list_price_and_price.setter
    def is_different_list_price_and_price(self, is_different_list_price_and_price):
        """Sets the is_different_list_price_and_price of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Applies the campaign audience only if the list price and price is different.

        :param is_different_list_price_and_price: The is_different_list_price_and_price of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type is_different_list_price_and_price: bool
        """

        self._is_different_list_price_and_price = is_different_list_price_and_price

    @property
    def is_first_buy(self):
        """Gets the is_first_buy of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Applies the discount only if it's a first buy.

        :return: The is_first_buy of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: bool
        """
        return self._is_first_buy

    @is_first_buy.setter
    def is_first_buy(self, is_first_buy):
        """Sets the is_first_buy of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Applies the discount only if it's a first buy.

        :param is_first_buy: The is_first_buy of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type is_first_buy: bool
        """

        self._is_first_buy = is_first_buy

    @property
    def is_min_max_installments(self):
        """Gets the is_min_max_installments of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Set if the campaign audience will be applied considering a minimum and maximum values for installments.

        :return: The is_min_max_installments of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: bool
        """
        return self._is_min_max_installments

    @is_min_max_installments.setter
    def is_min_max_installments(self, is_min_max_installments):
        """Sets the is_min_max_installments of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Set if the campaign audience will be applied considering a minimum and maximum values for installments.

        :param is_min_max_installments: The is_min_max_installments of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type is_min_max_installments: bool
        """

        self._is_min_max_installments = is_min_max_installments

    @property
    def is_sla_selected(self):
        """Gets the is_sla_selected of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Applies selected discount only when one of the defined shipping method is selected by the customer.

        :return: The is_sla_selected of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: bool
        """
        return self._is_sla_selected

    @is_sla_selected.setter
    def is_sla_selected(self, is_sla_selected):
        """Sets the is_sla_selected of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Applies selected discount only when one of the defined shipping method is selected by the customer.

        :param is_sla_selected: The is_sla_selected of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type is_sla_selected: bool
        """

        self._is_sla_selected = is_sla_selected

    @property
    def item_max_price(self):
        """Gets the item_max_price of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Maximum price of the item.

        :return: The item_max_price of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: float
        """
        return self._item_max_price

    @item_max_price.setter
    def item_max_price(self, item_max_price):
        """Sets the item_max_price of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Maximum price of the item.

        :param item_max_price: The item_max_price of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type item_max_price: float
        """

        self._item_max_price = item_max_price

    @property
    def item_min_price(self):
        """Gets the item_min_price of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Minimum price of the item.

        :return: The item_min_price of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: float
        """
        return self._item_min_price

    @item_min_price.setter
    def item_min_price(self, item_min_price):
        """Sets the item_min_price of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Minimum price of the item.

        :param item_min_price: The item_min_price of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type item_min_price: float
        """

        self._item_min_price = item_min_price

    @property
    def list_brand1_buy_together(self):
        """Gets the list_brand1_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Brand first list for the promotion **Buy Together.

        :return: The list_brand1_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: List[object]
        """
        return self._list_brand1_buy_together

    @list_brand1_buy_together.setter
    def list_brand1_buy_together(self, list_brand1_buy_together):
        """Sets the list_brand1_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Brand first list for the promotion **Buy Together.

        :param list_brand1_buy_together: The list_brand1_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type list_brand1_buy_together: List[object]
        """

        self._list_brand1_buy_together = list_brand1_buy_together

    @property
    def list_category1_buy_together(self):
        """Gets the list_category1_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Category first list for the promotion **Buy Together**.

        :return: The list_category1_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: List[object]
        """
        return self._list_category1_buy_together

    @list_category1_buy_together.setter
    def list_category1_buy_together(self, list_category1_buy_together):
        """Sets the list_category1_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Category first list for the promotion **Buy Together**.

        :param list_category1_buy_together: The list_category1_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type list_category1_buy_together: List[object]
        """

        self._list_category1_buy_together = list_category1_buy_together

    @property
    def list_sku1_buy_together(self):
        """Gets the list_sku1_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        SKU first list for the promotion **Buy Together**.

        :return: The list_sku1_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: List[object]
        """
        return self._list_sku1_buy_together

    @list_sku1_buy_together.setter
    def list_sku1_buy_together(self, list_sku1_buy_together):
        """Sets the list_sku1_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        SKU first list for the promotion **Buy Together**.

        :param list_sku1_buy_together: The list_sku1_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type list_sku1_buy_together: List[object]
        """

        self._list_sku1_buy_together = list_sku1_buy_together

    @property
    def list_sku2_buy_together(self):
        """Gets the list_sku2_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        SKU second list for the promotion **Buy Together**.

        :return: The list_sku2_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: List[object]
        """
        return self._list_sku2_buy_together

    @list_sku2_buy_together.setter
    def list_sku2_buy_together(self, list_sku2_buy_together):
        """Sets the list_sku2_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        SKU second list for the promotion **Buy Together**.

        :param list_sku2_buy_together: The list_sku2_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type list_sku2_buy_together: List[object]
        """

        self._list_sku2_buy_together = list_sku2_buy_together

    @property
    def marketing_tags(self):
        """Gets the marketing_tags of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Array with all the campaign audience's marketing tags.

        :return: The marketing_tags of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: List[str]
        """
        return self._marketing_tags

    @marketing_tags.setter
    def marketing_tags(self, marketing_tags):
        """Sets the marketing_tags of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Array with all the campaign audience's marketing tags.

        :param marketing_tags: The marketing_tags of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type marketing_tags: List[str]
        """

        self._marketing_tags = marketing_tags

    @property
    def marketing_tags_are_not_inclusive(self):
        """Gets the marketing_tags_are_not_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Defines if marketing tags are not inclusive.

        :return: The marketing_tags_are_not_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: bool
        """
        return self._marketing_tags_are_not_inclusive

    @marketing_tags_are_not_inclusive.setter
    def marketing_tags_are_not_inclusive(self, marketing_tags_are_not_inclusive):
        """Sets the marketing_tags_are_not_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Defines if marketing tags are not inclusive.

        :param marketing_tags_are_not_inclusive: The marketing_tags_are_not_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type marketing_tags_are_not_inclusive: bool
        """

        self._marketing_tags_are_not_inclusive = marketing_tags_are_not_inclusive

    @property
    def max_installment(self):
        """Gets the max_installment of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Maximum value for installment.

        :return: The max_installment of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: int
        """
        return self._max_installment

    @max_installment.setter
    def max_installment(self, max_installment):
        """Sets the max_installment of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Maximum value for installment.

        :param max_installment: The max_installment of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type max_installment: int
        """

        self._max_installment = max_installment

    @property
    def max_usage(self):
        """Gets the max_usage of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Defines how many times the campaign audience can be used.

        :return: The max_usage of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: int
        """
        return self._max_usage

    @max_usage.setter
    def max_usage(self, max_usage):
        """Sets the max_usage of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Defines how many times the campaign audience can be used.

        :param max_usage: The max_usage of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type max_usage: int
        """

        self._max_usage = max_usage

    @property
    def max_usage_per_client(self):
        """Gets the max_usage_per_client of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Defines if the campaign audience can be used multiple times per client.

        :return: The max_usage_per_client of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: int
        """
        return self._max_usage_per_client

    @max_usage_per_client.setter
    def max_usage_per_client(self, max_usage_per_client):
        """Sets the max_usage_per_client of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Defines if the campaign audience can be used multiple times per client.

        :param max_usage_per_client: The max_usage_per_client of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type max_usage_per_client: int
        """

        self._max_usage_per_client = max_usage_per_client

    @property
    def merchants(self):
        """Gets the merchants of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.


        :return: The merchants of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: List[object]
        """
        return self._merchants

    @merchants.setter
    def merchants(self, merchants):
        """Sets the merchants of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.


        :param merchants: The merchants of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type merchants: List[object]
        """

        self._merchants = merchants

    @property
    def min_installment(self):
        """Gets the min_installment of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Minimum value for installment.

        :return: The min_installment of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: int
        """
        return self._min_installment

    @min_installment.setter
    def min_installment(self, min_installment):
        """Sets the min_installment of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Minimum value for installment.

        :param min_installment: The min_installment of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type min_installment: int
        """

        self._min_installment = min_installment

    @property
    def minimum_quantity_buy_together(self):
        """Gets the minimum_quantity_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Minimum quantity for **Buy Together** promotion.

        :return: The minimum_quantity_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: int
        """
        return self._minimum_quantity_buy_together

    @minimum_quantity_buy_together.setter
    def minimum_quantity_buy_together(self, minimum_quantity_buy_together):
        """Sets the minimum_quantity_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Minimum quantity for **Buy Together** promotion.

        :param minimum_quantity_buy_together: The minimum_quantity_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type minimum_quantity_buy_together: int
        """

        self._minimum_quantity_buy_together = minimum_quantity_buy_together

    @property
    def multiple_use_per_client(self):
        """Gets the multiple_use_per_client of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Defines if the campaign audience can be used multiple times per client.

        :return: The multiple_use_per_client of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: bool
        """
        return self._multiple_use_per_client

    @multiple_use_per_client.setter
    def multiple_use_per_client(self, multiple_use_per_client):
        """Sets the multiple_use_per_client of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Defines if the campaign audience can be used multiple times per client.

        :param multiple_use_per_client: The multiple_use_per_client of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type multiple_use_per_client: bool
        """

        self._multiple_use_per_client = multiple_use_per_client

    @property
    def name(self):
        """Gets the name of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Target audience name.

        :return: The name of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Target audience name.

        :param name: The name of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type name: str
        """

        self._name = name

    @property
    def origin(self):
        """Gets the origin of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Shows the campaign audience origin, `Marketplace` or `Fulfillment`.  Read [Difference between orders with marketplace and fulfillment sources](https://help.vtex.com/en/tutorial/what-are-orders-with-marketplace-source-and-orders-with-fulfillment-source--6eVYrmUAwMOeKICU2KuG06) for more information.

        :return: The origin of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: str
        """
        return self._origin

    @origin.setter
    def origin(self, origin):
        """Sets the origin of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Shows the campaign audience origin, `Marketplace` or `Fulfillment`.  Read [Difference between orders with marketplace and fulfillment sources](https://help.vtex.com/en/tutorial/what-are-orders-with-marketplace-source-and-orders-with-fulfillment-source--6eVYrmUAwMOeKICU2KuG06) for more information.

        :param origin: The origin of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type origin: str
        """

        self._origin = origin

    @property
    def payments_methods(self):
        """Gets the payments_methods of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Array composed by all the Payments Methods.

        :return: The payments_methods of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: List[CreateOrUpdateCalculatorConfiguration200ResponsePaymentsMethodsInner]
        """
        return self._payments_methods

    @payments_methods.setter
    def payments_methods(self, payments_methods):
        """Sets the payments_methods of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Array composed by all the Payments Methods.

        :param payments_methods: The payments_methods of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type payments_methods: List[CreateOrUpdateCalculatorConfiguration200ResponsePaymentsMethodsInner]
        """

        self._payments_methods = payments_methods

    @property
    def payments_rules(self):
        """Gets the payments_rules of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.


        :return: The payments_rules of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: List[object]
        """
        return self._payments_rules

    @payments_rules.setter
    def payments_rules(self, payments_rules):
        """Sets the payments_rules of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.


        :param payments_rules: The payments_rules of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type payments_rules: List[object]
        """

        self._payments_rules = payments_rules

    @property
    def percentual_discount_value_list(self):
        """Gets the percentual_discount_value_list of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Percentual discount value list.

        :return: The percentual_discount_value_list of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: List[float]
        """
        return self._percentual_discount_value_list

    @percentual_discount_value_list.setter
    def percentual_discount_value_list(self, percentual_discount_value_list):
        """Sets the percentual_discount_value_list of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Percentual discount value list.

        :param percentual_discount_value_list: The percentual_discount_value_list of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type percentual_discount_value_list: List[float]
        """

        self._percentual_discount_value_list = percentual_discount_value_list

    @property
    def products(self):
        """Gets the products of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Object composed by the products that will activate or deactivate the campaign audience.

        :return: The products of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: List[CreateOrUpdateCalculatorConfiguration200ResponseProductsInner]
        """
        return self._products

    @products.setter
    def products(self, products):
        """Sets the products of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Object composed by the products that will activate or deactivate the campaign audience.

        :param products: The products of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type products: List[CreateOrUpdateCalculatorConfiguration200ResponseProductsInner]
        """

        self._products = products

    @property
    def products_are_inclusive(self):
        """Gets the products_are_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        If set to `true`, this campaign audience will be applied to any product present on the `products` field. If set to `false`, products present on that field will make this campaign audience not to be applied.

        :return: The products_are_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: bool
        """
        return self._products_are_inclusive

    @products_are_inclusive.setter
    def products_are_inclusive(self, products_are_inclusive):
        """Sets the products_are_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        If set to `true`, this campaign audience will be applied to any product present on the `products` field. If set to `false`, products present on that field will make this campaign audience not to be applied.

        :param products_are_inclusive: The products_are_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type products_are_inclusive: bool
        """

        self._products_are_inclusive = products_are_inclusive

    @property
    def products_specifications(self):
        """Gets the products_specifications of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.


        :return: The products_specifications of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: List[object]
        """
        return self._products_specifications

    @products_specifications.setter
    def products_specifications(self, products_specifications):
        """Sets the products_specifications of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.


        :param products_specifications: The products_specifications of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type products_specifications: List[object]
        """

        self._products_specifications = products_specifications

    @property
    def quantity_to_affect_buy_together(self):
        """Gets the quantity_to_affect_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Quantity to affect **Buy Together** promotion.

        :return: The quantity_to_affect_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: int
        """
        return self._quantity_to_affect_buy_together

    @quantity_to_affect_buy_together.setter
    def quantity_to_affect_buy_together(self, quantity_to_affect_buy_together):
        """Sets the quantity_to_affect_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Quantity to affect **Buy Together** promotion.

        :param quantity_to_affect_buy_together: The quantity_to_affect_buy_together of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type quantity_to_affect_buy_together: int
        """

        self._quantity_to_affect_buy_together = quantity_to_affect_buy_together

    @property
    def restrictions_bins(self):
        """Gets the restrictions_bins of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        The discount will be granted if the card's BIN is given.

        :return: The restrictions_bins of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: List[str]
        """
        return self._restrictions_bins

    @restrictions_bins.setter
    def restrictions_bins(self, restrictions_bins):
        """Sets the restrictions_bins of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        The discount will be granted if the card's BIN is given.

        :param restrictions_bins: The restrictions_bins of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type restrictions_bins: List[str]
        """

        self._restrictions_bins = restrictions_bins

    @property
    def should_distribute_discount_among_matched_items(self):
        """Gets the should_distribute_discount_among_matched_items of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Should distribute discount among matched items.

        :return: The should_distribute_discount_among_matched_items of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: bool
        """
        return self._should_distribute_discount_among_matched_items

    @should_distribute_discount_among_matched_items.setter
    def should_distribute_discount_among_matched_items(self, should_distribute_discount_among_matched_items):
        """Sets the should_distribute_discount_among_matched_items of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Should distribute discount among matched items.

        :param should_distribute_discount_among_matched_items: The should_distribute_discount_among_matched_items of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type should_distribute_discount_among_matched_items: bool
        """

        self._should_distribute_discount_among_matched_items = should_distribute_discount_among_matched_items

    @property
    def skus(self):
        """Gets the skus of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Object composed by the SKUs that will activate or deactivate the campaign audience.

        :return: The skus of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: List[CreateOrUpdateCalculatorConfiguration200ResponseSkusInner]
        """
        return self._skus

    @skus.setter
    def skus(self, skus):
        """Sets the skus of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Object composed by the SKUs that will activate or deactivate the campaign audience.

        :param skus: The skus of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type skus: List[CreateOrUpdateCalculatorConfiguration200ResponseSkusInner]
        """

        self._skus = skus

    @property
    def skus_are_inclusive(self):
        """Gets the skus_are_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        If set to `true`, this campaign audience will be applied to any SKU present on the `skus` field. If set to `false`, SKUs present on that field will make this campaign audience not to be applied.

        :return: The skus_are_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: bool
        """
        return self._skus_are_inclusive

    @skus_are_inclusive.setter
    def skus_are_inclusive(self, skus_are_inclusive):
        """Sets the skus_are_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        If set to `true`, this campaign audience will be applied to any SKU present on the `skus` field. If set to `false`, SKUs present on that field will make this campaign audience not to be applied.

        :param skus_are_inclusive: The skus_are_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type skus_are_inclusive: bool
        """

        self._skus_are_inclusive = skus_are_inclusive

    @property
    def slas_ids(self):
        """Gets the slas_ids of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        The discount will be granted if the shipping method is the same as the one given.

        :return: The slas_ids of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: List[str]
        """
        return self._slas_ids

    @slas_ids.setter
    def slas_ids(self, slas_ids):
        """Sets the slas_ids of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        The discount will be granted if the shipping method is the same as the one given.

        :param slas_ids: The slas_ids of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type slas_ids: List[str]
        """

        self._slas_ids = slas_ids

    @property
    def stores(self):
        """Gets the stores of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.


        :return: The stores of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: List[object]
        """
        return self._stores

    @stores.setter
    def stores(self, stores):
        """Sets the stores of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.


        :param stores: The stores of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type stores: List[object]
        """

        self._stores = stores

    @property
    def stores_are_inclusive(self):
        """Gets the stores_are_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.


        :return: The stores_are_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: bool
        """
        return self._stores_are_inclusive

    @stores_are_inclusive.setter
    def stores_are_inclusive(self, stores_are_inclusive):
        """Sets the stores_are_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.


        :param stores_are_inclusive: The stores_are_inclusive of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type stores_are_inclusive: bool
        """

        self._stores_are_inclusive = stores_are_inclusive

    @property
    def total_value_celing(self):
        """Gets the total_value_celing of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Maximum chart value to active the campaign audience.

        :return: The total_value_celing of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: float
        """
        return self._total_value_celing

    @total_value_celing.setter
    def total_value_celing(self, total_value_celing):
        """Sets the total_value_celing of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Maximum chart value to active the campaign audience.

        :param total_value_celing: The total_value_celing of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type total_value_celing: float
        """

        self._total_value_celing = total_value_celing

    @property
    def total_value_floor(self):
        """Gets the total_value_floor of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Minimum chart value to active the campaign audience.

        :return: The total_value_floor of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: float
        """
        return self._total_value_floor

    @total_value_floor.setter
    def total_value_floor(self, total_value_floor):
        """Sets the total_value_floor of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Minimum chart value to active the campaign audience.

        :param total_value_floor: The total_value_floor of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type total_value_floor: float
        """

        self._total_value_floor = total_value_floor

    @property
    def total_value_include_all_items(self):
        """Gets the total_value_include_all_items of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.


        :return: The total_value_include_all_items of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: bool
        """
        return self._total_value_include_all_items

    @total_value_include_all_items.setter
    def total_value_include_all_items(self, total_value_include_all_items):
        """Sets the total_value_include_all_items of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.


        :param total_value_include_all_items: The total_value_include_all_items of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type total_value_include_all_items: bool
        """

        self._total_value_include_all_items = total_value_include_all_items

    @property
    def total_value_mode(self):
        """Gets the total_value_mode of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Total chart value to active the campaign audience.

        :return: The total_value_mode of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: str
        """
        return self._total_value_mode

    @total_value_mode.setter
    def total_value_mode(self, total_value_mode):
        """Sets the total_value_mode of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Total chart value to active the campaign audience.

        :param total_value_mode: The total_value_mode of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type total_value_mode: str
        """

        self._total_value_mode = total_value_mode

    @property
    def total_value_purchase(self):
        """Gets the total_value_purchase of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Total value a client must have in past orders to active the campaign audience.

        :return: The total_value_purchase of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: float
        """
        return self._total_value_purchase

    @total_value_purchase.setter
    def total_value_purchase(self, total_value_purchase):
        """Sets the total_value_purchase of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Total value a client must have in past orders to active the campaign audience.

        :param total_value_purchase: The total_value_purchase of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type total_value_purchase: float
        """

        self._total_value_purchase = total_value_purchase

    @property
    def use_new_progressive_algorithm(self):
        """Gets the use_new_progressive_algorithm of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Use new progressive algorithm.

        :return: The use_new_progressive_algorithm of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: bool
        """
        return self._use_new_progressive_algorithm

    @use_new_progressive_algorithm.setter
    def use_new_progressive_algorithm(self, use_new_progressive_algorithm):
        """Sets the use_new_progressive_algorithm of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Use new progressive algorithm.

        :param use_new_progressive_algorithm: The use_new_progressive_algorithm of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type use_new_progressive_algorithm: bool
        """

        self._use_new_progressive_algorithm = use_new_progressive_algorithm

    @property
    def zip_code_ranges(self):
        """Gets the zip_code_ranges of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Range of the zip code that applies the campaign audience.

        :return: The zip_code_ranges of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :rtype: List[Getcampaignaudiences200ResponseInnerTargetConfigurationsInnerZipCodeRangesInner]
        """
        return self._zip_code_ranges

    @zip_code_ranges.setter
    def zip_code_ranges(self, zip_code_ranges):
        """Sets the zip_code_ranges of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.

        Range of the zip code that applies the campaign audience.

        :param zip_code_ranges: The zip_code_ranges of this Getcampaignaudiences200ResponseInnerTargetConfigurationsInner.
        :type zip_code_ranges: List[Getcampaignaudiences200ResponseInnerTargetConfigurationsInnerZipCodeRangesInner]
        """

        self._zip_code_ranges = zip_code_ranges
