/**
 * Promotions & Taxes API
 *   > Check the new [Promotions onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/promotions-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Promotions and is organized by focusing on the developer's journey.     The Promotions & Taxes API allows you to manage and retrieve all promotions, coupons and tax rules from your VTEX store.     ## Index     ### Coupons   `POST` [Create multiple coupons](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-multiple-coupons)   `POST` [Create coupon](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-coupon)   `GET` [Get coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/getbycouponcode)   `GET` [Get archived coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/getarchivedbycouponcode)   `POST` [Archive coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/archivebycouponcode)   `POST` [Update coupon](https://developers.vtex.com/vtex-rest-api/reference/update)   `GET` [Get all coupons](https://developers.vtex.com/vtex-rest-api/reference/getall)   `POST` [Coupon Massive Generation](https://developers.vtex.com/vtex-rest-api/reference/massivegeneration)   `GET` [Get coupon usage](https://developers.vtex.com/vtex-rest-api/reference/getusage)   `POST` [Unarchive coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/unarchivebycouponcode)     ### Promotions and Taxes   `GET` [Get All Promotions](https://developers.vtex.com/vtex-rest-api/reference/getallbenefits)   `GET` [Get All Taxes](https://developers.vtex.com/vtex-rest-api/reference/getalltaxes)   `GET` [Get Promotion or Tax By ID](https://developers.vtex.com/vtex-rest-api/reference/getcalculatorconfigurationbyid)   `POST` [Create or Update Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/createorupdatecalculatorconfiguration)   `POST` [Create Multiple SKU Promotion](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-import-calculatorconfiguration)   `PUT` [Update Multiple SKU Promotion](https://developers.vtex.com/vtex-rest-api/reference/put_api-rnb-pvt-import-calculatorconfiguration-promotionid)   `POST` [Archive Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/archivepromotion-1)   `POST` [Unarchive Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/unarchivepromotion-1)   `GET` [List archived Promotions](https://developers.vtex.com/vtex-rest-api/reference/getarchivedpromotions)   `GET` [List archived Taxes](https://developers.vtex.com/vtex-rest-api/reference/getarchivedtaxes)       ### Campaign Audiences   `GET` [Get campaign audience configuration](https://developers.vtex.com/vtex-rest-api/reference/getcampaignconfiguration)   `POST` [Create campaign audience](https://developers.vtex.com/vtex-rest-api/reference/setcampaignconfiguration)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PromotionsTaxesApi);
  }
}(this, function(expect, PromotionsTaxesApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Getcampaignaudiences200ResponseInnerTargetConfigurationsInner', function() {
    it('should create an instance of Getcampaignaudiences200ResponseInnerTargetConfigurationsInner', function() {
      // uncomment below and update the code to test Getcampaignaudiences200ResponseInnerTargetConfigurationsInner
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be.a(PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner);
    });

    it('should have the property affiliates (base name: "affiliates")', function() {
      // uncomment below and update the code to test the property affiliates
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property areSalesChannelIdsExclusive (base name: "areSalesChannelIdsExclusive")', function() {
      // uncomment below and update the code to test the property areSalesChannelIdsExclusive
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property brands (base name: "brands")', function() {
      // uncomment below and update the code to test the property brands
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property brandsAreInclusive (base name: "brandsAreInclusive")', function() {
      // uncomment below and update the code to test the property brandsAreInclusive
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property campaigns (base name: "campaigns")', function() {
      // uncomment below and update the code to test the property campaigns
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property cardIssuers (base name: "cardIssuers")', function() {
      // uncomment below and update the code to test the property cardIssuers
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property categories (base name: "categories")', function() {
      // uncomment below and update the code to test the property categories
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property categoriesAreInclusive (base name: "categoriesAreInclusive")', function() {
      // uncomment below and update the code to test the property categoriesAreInclusive
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property clusterExpressions (base name: "clusterExpressions")', function() {
      // uncomment below and update the code to test the property clusterExpressions
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property clusterOperator (base name: "clusterOperator")', function() {
      // uncomment below and update the code to test the property clusterOperator
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property collections (base name: "collections")', function() {
      // uncomment below and update the code to test the property collections
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property collections1BuyTogether (base name: "collections1BuyTogether")', function() {
      // uncomment below and update the code to test the property collections1BuyTogether
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property collections2BuyTogether (base name: "collections2BuyTogether")', function() {
      // uncomment below and update the code to test the property collections2BuyTogether
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property collectionsIsInclusive (base name: "collectionsIsInclusive")', function() {
      // uncomment below and update the code to test the property collectionsIsInclusive
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property compareListPriceAndPrice (base name: "compareListPriceAndPrice")', function() {
      // uncomment below and update the code to test the property compareListPriceAndPrice
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property coupon (base name: "coupon")', function() {
      // uncomment below and update the code to test the property coupon
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property daysAgoOfPurchases (base name: "daysAgoOfPurchases")', function() {
      // uncomment below and update the code to test the property daysAgoOfPurchases
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property enableBuyTogetherPerSku (base name: "enableBuyTogetherPerSku")', function() {
      // uncomment below and update the code to test the property enableBuyTogetherPerSku
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property featured (base name: "featured")', function() {
      // uncomment below and update the code to test the property featured
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property firstBuyIsProfileOptimistic (base name: "firstBuyIsProfileOptimistic")', function() {
      // uncomment below and update the code to test the property firstBuyIsProfileOptimistic
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property giftListTypes (base name: "giftListTypes")', function() {
      // uncomment below and update the code to test the property giftListTypes
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property idSellerIsInclusive (base name: "idSellerIsInclusive")', function() {
      // uncomment below and update the code to test the property idSellerIsInclusive
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property idsSalesChannel (base name: "idsSalesChannel")', function() {
      // uncomment below and update the code to test the property idsSalesChannel
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property installment (base name: "installment")', function() {
      // uncomment below and update the code to test the property installment
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property isDifferentListPriceAndPrice (base name: "isDifferentListPriceAndPrice")', function() {
      // uncomment below and update the code to test the property isDifferentListPriceAndPrice
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property isFirstBuy (base name: "isFirstBuy")', function() {
      // uncomment below and update the code to test the property isFirstBuy
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property isMinMaxInstallments (base name: "isMinMaxInstallments")', function() {
      // uncomment below and update the code to test the property isMinMaxInstallments
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property isSlaSelected (base name: "isSlaSelected")', function() {
      // uncomment below and update the code to test the property isSlaSelected
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property itemMaxPrice (base name: "itemMaxPrice")', function() {
      // uncomment below and update the code to test the property itemMaxPrice
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property itemMinPrice (base name: "itemMinPrice")', function() {
      // uncomment below and update the code to test the property itemMinPrice
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property listBrand1BuyTogether (base name: "listBrand1BuyTogether")', function() {
      // uncomment below and update the code to test the property listBrand1BuyTogether
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property listCategory1BuyTogether (base name: "listCategory1BuyTogether")', function() {
      // uncomment below and update the code to test the property listCategory1BuyTogether
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property listSku1BuyTogether (base name: "listSku1BuyTogether")', function() {
      // uncomment below and update the code to test the property listSku1BuyTogether
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property listSku2BuyTogether (base name: "listSku2BuyTogether")', function() {
      // uncomment below and update the code to test the property listSku2BuyTogether
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property marketingTags (base name: "marketingTags")', function() {
      // uncomment below and update the code to test the property marketingTags
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property marketingTagsAreNotInclusive (base name: "marketingTagsAreNotInclusive")', function() {
      // uncomment below and update the code to test the property marketingTagsAreNotInclusive
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property maxInstallment (base name: "maxInstallment")', function() {
      // uncomment below and update the code to test the property maxInstallment
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property maxUsage (base name: "maxUsage")', function() {
      // uncomment below and update the code to test the property maxUsage
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property maxUsagePerClient (base name: "maxUsagePerClient")', function() {
      // uncomment below and update the code to test the property maxUsagePerClient
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property merchants (base name: "merchants")', function() {
      // uncomment below and update the code to test the property merchants
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property minInstallment (base name: "minInstallment")', function() {
      // uncomment below and update the code to test the property minInstallment
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property minimumQuantityBuyTogether (base name: "minimumQuantityBuyTogether")', function() {
      // uncomment below and update the code to test the property minimumQuantityBuyTogether
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property multipleUsePerClient (base name: "multipleUsePerClient")', function() {
      // uncomment below and update the code to test the property multipleUsePerClient
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property origin (base name: "origin")', function() {
      // uncomment below and update the code to test the property origin
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property paymentsMethods (base name: "paymentsMethods")', function() {
      // uncomment below and update the code to test the property paymentsMethods
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property paymentsRules (base name: "paymentsRules")', function() {
      // uncomment below and update the code to test the property paymentsRules
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property percentualDiscountValueList (base name: "percentualDiscountValueList")', function() {
      // uncomment below and update the code to test the property percentualDiscountValueList
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property products (base name: "products")', function() {
      // uncomment below and update the code to test the property products
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property productsAreInclusive (base name: "productsAreInclusive")', function() {
      // uncomment below and update the code to test the property productsAreInclusive
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property productsSpecifications (base name: "productsSpecifications")', function() {
      // uncomment below and update the code to test the property productsSpecifications
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property quantityToAffectBuyTogether (base name: "quantityToAffectBuyTogether")', function() {
      // uncomment below and update the code to test the property quantityToAffectBuyTogether
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property restrictionsBins (base name: "restrictionsBins")', function() {
      // uncomment below and update the code to test the property restrictionsBins
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property shouldDistributeDiscountAmongMatchedItems (base name: "shouldDistributeDiscountAmongMatchedItems")', function() {
      // uncomment below and update the code to test the property shouldDistributeDiscountAmongMatchedItems
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property skus (base name: "skus")', function() {
      // uncomment below and update the code to test the property skus
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property skusAreInclusive (base name: "skusAreInclusive")', function() {
      // uncomment below and update the code to test the property skusAreInclusive
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property slasIds (base name: "slasIds")', function() {
      // uncomment below and update the code to test the property slasIds
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property stores (base name: "stores")', function() {
      // uncomment below and update the code to test the property stores
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property storesAreInclusive (base name: "storesAreInclusive")', function() {
      // uncomment below and update the code to test the property storesAreInclusive
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property totalValueCeling (base name: "totalValueCeling")', function() {
      // uncomment below and update the code to test the property totalValueCeling
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property totalValueFloor (base name: "totalValueFloor")', function() {
      // uncomment below and update the code to test the property totalValueFloor
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property totalValueIncludeAllItems (base name: "totalValueIncludeAllItems")', function() {
      // uncomment below and update the code to test the property totalValueIncludeAllItems
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property totalValueMode (base name: "totalValueMode")', function() {
      // uncomment below and update the code to test the property totalValueMode
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property totalValuePurchase (base name: "totalValuePurchase")', function() {
      // uncomment below and update the code to test the property totalValuePurchase
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property useNewProgressiveAlgorithm (base name: "useNewProgressiveAlgorithm")', function() {
      // uncomment below and update the code to test the property useNewProgressiveAlgorithm
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

    it('should have the property zipCodeRanges (base name: "zipCodeRanges")', function() {
      // uncomment below and update the code to test the property zipCodeRanges
      //var instance = new PromotionsTaxesApi.Getcampaignaudiences200ResponseInnerTargetConfigurationsInner();
      //expect(instance).to.be();
    });

  });

}));
