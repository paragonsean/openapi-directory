/**
 * Promotions & Taxes API
 *   > Check the new [Promotions onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/promotions-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Promotions and is organized by focusing on the developer's journey.     The Promotions & Taxes API allows you to manage and retrieve all promotions, coupons and tax rules from your VTEX store.     ## Index     ### Coupons   `POST` [Create multiple coupons](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-multiple-coupons)   `POST` [Create coupon](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-coupon)   `GET` [Get coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/getbycouponcode)   `GET` [Get archived coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/getarchivedbycouponcode)   `POST` [Archive coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/archivebycouponcode)   `POST` [Update coupon](https://developers.vtex.com/vtex-rest-api/reference/update)   `GET` [Get all coupons](https://developers.vtex.com/vtex-rest-api/reference/getall)   `POST` [Coupon Massive Generation](https://developers.vtex.com/vtex-rest-api/reference/massivegeneration)   `GET` [Get coupon usage](https://developers.vtex.com/vtex-rest-api/reference/getusage)   `POST` [Unarchive coupon by coupon code](https://developers.vtex.com/vtex-rest-api/reference/unarchivebycouponcode)     ### Promotions and Taxes   `GET` [Get All Promotions](https://developers.vtex.com/vtex-rest-api/reference/getallbenefits)   `GET` [Get All Taxes](https://developers.vtex.com/vtex-rest-api/reference/getalltaxes)   `GET` [Get Promotion or Tax By ID](https://developers.vtex.com/vtex-rest-api/reference/getcalculatorconfigurationbyid)   `POST` [Create or Update Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/createorupdatecalculatorconfiguration)   `POST` [Create Multiple SKU Promotion](https://developers.vtex.com/vtex-rest-api/reference/post_api-rnb-pvt-import-calculatorconfiguration)   `PUT` [Update Multiple SKU Promotion](https://developers.vtex.com/vtex-rest-api/reference/put_api-rnb-pvt-import-calculatorconfiguration-promotionid)   `POST` [Archive Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/archivepromotion-1)   `POST` [Unarchive Promotion or Tax](https://developers.vtex.com/vtex-rest-api/reference/unarchivepromotion-1)   `GET` [List archived Promotions](https://developers.vtex.com/vtex-rest-api/reference/getarchivedpromotions)   `GET` [List archived Taxes](https://developers.vtex.com/vtex-rest-api/reference/getarchivedtaxes)       ### Campaign Audiences   `GET` [Get campaign audience configuration](https://developers.vtex.com/vtex-rest-api/reference/getcampaignconfiguration)   `POST` [Create campaign audience](https://developers.vtex.com/vtex-rest-api/reference/setcampaignconfiguration)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Getcampaignaudiences200ResponseInnerLastModified from './Getcampaignaudiences200ResponseInnerLastModified';
import Getcampaignconfiguration200ResponseTargetConfigurationsInner from './Getcampaignconfiguration200ResponseTargetConfigurationsInner';

/**
 * The Getcampaignconfiguration200Response model module.
 * @module model/Getcampaignconfiguration200Response
 * @version 1.0
 */
class Getcampaignconfiguration200Response {
    /**
     * Constructs a new <code>Getcampaignconfiguration200Response</code>.
     * @alias module:model/Getcampaignconfiguration200Response
     */
    constructor() { 
        
        Getcampaignconfiguration200Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Getcampaignconfiguration200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Getcampaignconfiguration200Response} obj Optional instance to populate.
     * @return {module:model/Getcampaignconfiguration200Response} The populated <code>Getcampaignconfiguration200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Getcampaignconfiguration200Response();

            if (data.hasOwnProperty('beginDateUtc')) {
                obj['beginDateUtc'] = ApiClient.convertToType(data['beginDateUtc'], 'String');
            }
            if (data.hasOwnProperty('endDateUtc')) {
                obj['endDateUtc'] = ApiClient.convertToType(data['endDateUtc'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('isActive')) {
                obj['isActive'] = ApiClient.convertToType(data['isActive'], 'Boolean');
            }
            if (data.hasOwnProperty('isAndOperator')) {
                obj['isAndOperator'] = ApiClient.convertToType(data['isAndOperator'], 'Boolean');
            }
            if (data.hasOwnProperty('isArchived')) {
                obj['isArchived'] = ApiClient.convertToType(data['isArchived'], 'Boolean');
            }
            if (data.hasOwnProperty('lastModified')) {
                obj['lastModified'] = Getcampaignaudiences200ResponseInnerLastModified.constructFromObject(data['lastModified']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('targetConfigurations')) {
                obj['targetConfigurations'] = ApiClient.convertToType(data['targetConfigurations'], [Getcampaignconfiguration200ResponseTargetConfigurationsInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Getcampaignconfiguration200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Getcampaignconfiguration200Response</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['beginDateUtc'] && !(typeof data['beginDateUtc'] === 'string' || data['beginDateUtc'] instanceof String)) {
            throw new Error("Expected the field `beginDateUtc` to be a primitive type in the JSON string but got " + data['beginDateUtc']);
        }
        // ensure the json data is a string
        if (data['endDateUtc'] && !(typeof data['endDateUtc'] === 'string' || data['endDateUtc'] instanceof String)) {
            throw new Error("Expected the field `endDateUtc` to be a primitive type in the JSON string but got " + data['endDateUtc']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `lastModified`
        if (data['lastModified']) { // data not null
          Getcampaignaudiences200ResponseInnerLastModified.validateJSON(data['lastModified']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['targetConfigurations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['targetConfigurations'])) {
                throw new Error("Expected the field `targetConfigurations` to be an array in the JSON data but got " + data['targetConfigurations']);
            }
            // validate the optional field `targetConfigurations` (array)
            for (const item of data['targetConfigurations']) {
                Getcampaignconfiguration200ResponseTargetConfigurationsInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Start date of the campaign audience in UTC format.
 * @member {String} beginDateUtc
 */
Getcampaignconfiguration200Response.prototype['beginDateUtc'] = undefined;

/**
 * End date of the campaign audience in UTC format.
 * @member {String} endDateUtc
 */
Getcampaignconfiguration200Response.prototype['endDateUtc'] = undefined;

/**
 * Campaign audience ID.
 * @member {String} id
 */
Getcampaignconfiguration200Response.prototype['id'] = undefined;

/**
 * Defines if the campaign audience is active (`true`) or not (`false`).
 * @member {Boolean} isActive
 */
Getcampaignconfiguration200Response.prototype['isActive'] = undefined;

/**
 * When `true`, determines that all the `targetConfigurations` need to be valid for the campaign audience to be active. When `false`, determines that if at least one of the `targetConfigurations` is valid, the campaign audience will be active.
 * @member {Boolean} isAndOperator
 */
Getcampaignconfiguration200Response.prototype['isAndOperator'] = undefined;

/**
 * Defines if the campaign audience is archived (`true`) or not (`false`).
 * @member {Boolean} isArchived
 */
Getcampaignconfiguration200Response.prototype['isArchived'] = undefined;

/**
 * @member {module:model/Getcampaignaudiences200ResponseInnerLastModified} lastModified
 */
Getcampaignconfiguration200Response.prototype['lastModified'] = undefined;

/**
 * Campaign audience name.
 * @member {String} name
 */
Getcampaignconfiguration200Response.prototype['name'] = undefined;

/**
 * Array that contains all target audience that the campaign audience will be valid.
 * @member {Array.<module:model/Getcampaignconfiguration200ResponseTargetConfigurationsInner>} targetConfigurations
 */
Getcampaignconfiguration200Response.prototype['targetConfigurations'] = undefined;






export default Getcampaignconfiguration200Response;

