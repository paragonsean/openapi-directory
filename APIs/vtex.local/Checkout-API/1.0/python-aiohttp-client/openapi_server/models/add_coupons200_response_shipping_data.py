# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.add_coupons200_response_shipping_data_address import AddCoupons200ResponseShippingDataAddress
from openapi_server.models.add_coupons200_response_shipping_data_available_addresses_inner import AddCoupons200ResponseShippingDataAvailableAddressesInner
from openapi_server.models.add_coupons200_response_shipping_data_logistics_info_inner import AddCoupons200ResponseShippingDataLogisticsInfoInner
from openapi_server import util


class AddCoupons200ResponseShippingData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: AddCoupons200ResponseShippingDataAddress=None, available_addresses: List[AddCoupons200ResponseShippingDataAvailableAddressesInner]=None, logistics_info: List[AddCoupons200ResponseShippingDataLogisticsInfoInner]=None, selected_addresses: List[AddCoupons200ResponseShippingDataAvailableAddressesInner]=None):
        """AddCoupons200ResponseShippingData - a model defined in OpenAPI

        :param address: The address of this AddCoupons200ResponseShippingData.
        :param available_addresses: The available_addresses of this AddCoupons200ResponseShippingData.
        :param logistics_info: The logistics_info of this AddCoupons200ResponseShippingData.
        :param selected_addresses: The selected_addresses of this AddCoupons200ResponseShippingData.
        """
        self.openapi_types = {
            'address': AddCoupons200ResponseShippingDataAddress,
            'available_addresses': List[AddCoupons200ResponseShippingDataAvailableAddressesInner],
            'logistics_info': List[AddCoupons200ResponseShippingDataLogisticsInfoInner],
            'selected_addresses': List[AddCoupons200ResponseShippingDataAvailableAddressesInner]
        }

        self.attribute_map = {
            'address': 'address',
            'available_addresses': 'availableAddresses',
            'logistics_info': 'logisticsInfo',
            'selected_addresses': 'selectedAddresses'
        }

        self._address = address
        self._available_addresses = available_addresses
        self._logistics_info = logistics_info
        self._selected_addresses = selected_addresses

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddCoupons200ResponseShippingData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddCoupons_200_response_shippingData of this AddCoupons200ResponseShippingData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this AddCoupons200ResponseShippingData.


        :return: The address of this AddCoupons200ResponseShippingData.
        :rtype: AddCoupons200ResponseShippingDataAddress
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this AddCoupons200ResponseShippingData.


        :param address: The address of this AddCoupons200ResponseShippingData.
        :type address: AddCoupons200ResponseShippingDataAddress
        """

        self._address = address

    @property
    def available_addresses(self):
        """Gets the available_addresses of this AddCoupons200ResponseShippingData.

        Array with information on the available addresses for the order.

        :return: The available_addresses of this AddCoupons200ResponseShippingData.
        :rtype: List[AddCoupons200ResponseShippingDataAvailableAddressesInner]
        """
        return self._available_addresses

    @available_addresses.setter
    def available_addresses(self, available_addresses):
        """Sets the available_addresses of this AddCoupons200ResponseShippingData.

        Array with information on the available addresses for the order.

        :param available_addresses: The available_addresses of this AddCoupons200ResponseShippingData.
        :type available_addresses: List[AddCoupons200ResponseShippingDataAvailableAddressesInner]
        """

        self._available_addresses = available_addresses

    @property
    def logistics_info(self):
        """Gets the logistics_info of this AddCoupons200ResponseShippingData.

        Array with logistics information. Each object in this array corresponds to an object in the `items` array, based on the respective `itemIndex`.

        :return: The logistics_info of this AddCoupons200ResponseShippingData.
        :rtype: List[AddCoupons200ResponseShippingDataLogisticsInfoInner]
        """
        return self._logistics_info

    @logistics_info.setter
    def logistics_info(self, logistics_info):
        """Sets the logistics_info of this AddCoupons200ResponseShippingData.

        Array with logistics information. Each object in this array corresponds to an object in the `items` array, based on the respective `itemIndex`.

        :param logistics_info: The logistics_info of this AddCoupons200ResponseShippingData.
        :type logistics_info: List[AddCoupons200ResponseShippingDataLogisticsInfoInner]
        """

        self._logistics_info = logistics_info

    @property
    def selected_addresses(self):
        """Gets the selected_addresses of this AddCoupons200ResponseShippingData.

        Array with information on the selected addresses for the order.

        :return: The selected_addresses of this AddCoupons200ResponseShippingData.
        :rtype: List[AddCoupons200ResponseShippingDataAvailableAddressesInner]
        """
        return self._selected_addresses

    @selected_addresses.setter
    def selected_addresses(self, selected_addresses):
        """Sets the selected_addresses of this AddCoupons200ResponseShippingData.

        Array with information on the selected addresses for the order.

        :param selected_addresses: The selected_addresses of this AddCoupons200ResponseShippingData.
        :type selected_addresses: List[AddCoupons200ResponseShippingDataAvailableAddressesInner]
        """

        self._selected_addresses = selected_addresses
