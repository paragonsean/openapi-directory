# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AddClientPreferencesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, locale: str='EN', optin_news_letter: bool=False):
        """AddClientPreferencesRequest - a model defined in OpenAPI

        :param locale: The locale of this AddClientPreferencesRequest.
        :param optin_news_letter: The optin_news_letter of this AddClientPreferencesRequest.
        """
        self.openapi_types = {
            'locale': str,
            'optin_news_letter': bool
        }

        self.attribute_map = {
            'locale': 'locale',
            'optin_news_letter': 'optinNewsLetter'
        }

        self._locale = locale
        self._optin_news_letter = optin_news_letter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddClientPreferencesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddClientPreferences_request of this AddClientPreferencesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def locale(self):
        """Gets the locale of this AddClientPreferencesRequest.

        Locale chosen by the shopper. Determines website language.

        :return: The locale of this AddClientPreferencesRequest.
        :rtype: str
        """
        return self._locale

    @locale.setter
    def locale(self, locale):
        """Sets the locale of this AddClientPreferencesRequest.

        Locale chosen by the shopper. Determines website language.

        :param locale: The locale of this AddClientPreferencesRequest.
        :type locale: str
        """

        self._locale = locale

    @property
    def optin_news_letter(self):
        """Gets the optin_news_letter of this AddClientPreferencesRequest.

        Indicates whether the shopper opted in to receive the store's news letter.

        :return: The optin_news_letter of this AddClientPreferencesRequest.
        :rtype: bool
        """
        return self._optin_news_letter

    @optin_news_letter.setter
    def optin_news_letter(self, optin_news_letter):
        """Sets the optin_news_letter of this AddClientPreferencesRequest.

        Indicates whether the shopper opted in to receive the store's news letter.

        :param optin_news_letter: The optin_news_letter of this AddClientPreferencesRequest.
        :type optin_news_letter: bool
        """

        self._optin_news_letter = optin_news_letter
