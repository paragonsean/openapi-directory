# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WaitingTime(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, waiting_time: int=None):
        """WaitingTime - a model defined in OpenAPI

        :param waiting_time: The waiting_time of this WaitingTime.
        """
        self.openapi_types = {
            'waiting_time': int
        }

        self.attribute_map = {
            'waiting_time': 'waitingTime'
        }

        self._waiting_time = waiting_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WaitingTime':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WaitingTime of this WaitingTime.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def waiting_time(self):
        """Gets the waiting_time of this WaitingTime.

        Number of days after order cancelation by a seller, during which another seller may be assigned to fulfill the order.

        :return: The waiting_time of this WaitingTime.
        :rtype: int
        """
        return self._waiting_time

    @waiting_time.setter
    def waiting_time(self, waiting_time):
        """Sets the waiting_time of this WaitingTime.

        Number of days after order cancelation by a seller, during which another seller may be assigned to fulfill the order.

        :param waiting_time: The waiting_time of this WaitingTime.
        :type waiting_time: int
        """
        if waiting_time is None:
            raise ValueError("Invalid value for `waiting_time`, must not be `None`")

        self._waiting_time = waiting_time
