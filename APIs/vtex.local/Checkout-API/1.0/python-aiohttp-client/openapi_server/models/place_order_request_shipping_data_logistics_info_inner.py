# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.place_order_request_shipping_data_logistics_info_inner_delivery_window import PlaceOrderRequestShippingDataLogisticsInfoInnerDeliveryWindow
from openapi_server import util


class PlaceOrderRequestShippingDataLogisticsInfoInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, delivery_window: PlaceOrderRequestShippingDataLogisticsInfoInnerDeliveryWindow=None, item_index: int=0, lock_ttl: str='8d', price: int=1099, selected_sla: str='Express', shipping_estimate: str='7d'):
        """PlaceOrderRequestShippingDataLogisticsInfoInner - a model defined in OpenAPI

        :param delivery_window: The delivery_window of this PlaceOrderRequestShippingDataLogisticsInfoInner.
        :param item_index: The item_index of this PlaceOrderRequestShippingDataLogisticsInfoInner.
        :param lock_ttl: The lock_ttl of this PlaceOrderRequestShippingDataLogisticsInfoInner.
        :param price: The price of this PlaceOrderRequestShippingDataLogisticsInfoInner.
        :param selected_sla: The selected_sla of this PlaceOrderRequestShippingDataLogisticsInfoInner.
        :param shipping_estimate: The shipping_estimate of this PlaceOrderRequestShippingDataLogisticsInfoInner.
        """
        self.openapi_types = {
            'delivery_window': PlaceOrderRequestShippingDataLogisticsInfoInnerDeliveryWindow,
            'item_index': int,
            'lock_ttl': str,
            'price': int,
            'selected_sla': str,
            'shipping_estimate': str
        }

        self.attribute_map = {
            'delivery_window': 'deliveryWindow',
            'item_index': 'itemIndex',
            'lock_ttl': 'lockTTL',
            'price': 'price',
            'selected_sla': 'selectedSla',
            'shipping_estimate': 'shippingEstimate'
        }

        self._delivery_window = delivery_window
        self._item_index = item_index
        self._lock_ttl = lock_ttl
        self._price = price
        self._selected_sla = selected_sla
        self._shipping_estimate = shipping_estimate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlaceOrderRequestShippingDataLogisticsInfoInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlaceOrder_request_shippingData_logisticsInfo_inner of this PlaceOrderRequestShippingDataLogisticsInfoInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def delivery_window(self):
        """Gets the delivery_window of this PlaceOrderRequestShippingDataLogisticsInfoInner.


        :return: The delivery_window of this PlaceOrderRequestShippingDataLogisticsInfoInner.
        :rtype: PlaceOrderRequestShippingDataLogisticsInfoInnerDeliveryWindow
        """
        return self._delivery_window

    @delivery_window.setter
    def delivery_window(self, delivery_window):
        """Sets the delivery_window of this PlaceOrderRequestShippingDataLogisticsInfoInner.


        :param delivery_window: The delivery_window of this PlaceOrderRequestShippingDataLogisticsInfoInner.
        :type delivery_window: PlaceOrderRequestShippingDataLogisticsInfoInnerDeliveryWindow
        """

        self._delivery_window = delivery_window

    @property
    def item_index(self):
        """Gets the item_index of this PlaceOrderRequestShippingDataLogisticsInfoInner.

        Index of the item in the `items` array, starting from 0.

        :return: The item_index of this PlaceOrderRequestShippingDataLogisticsInfoInner.
        :rtype: int
        """
        return self._item_index

    @item_index.setter
    def item_index(self, item_index):
        """Sets the item_index of this PlaceOrderRequestShippingDataLogisticsInfoInner.

        Index of the item in the `items` array, starting from 0.

        :param item_index: The item_index of this PlaceOrderRequestShippingDataLogisticsInfoInner.
        :type item_index: int
        """
        if item_index is None:
            raise ValueError("Invalid value for `item_index`, must not be `None`")

        self._item_index = item_index

    @property
    def lock_ttl(self):
        """Gets the lock_ttl of this PlaceOrderRequestShippingDataLogisticsInfoInner.

        Logistics reservation waiting time.

        :return: The lock_ttl of this PlaceOrderRequestShippingDataLogisticsInfoInner.
        :rtype: str
        """
        return self._lock_ttl

    @lock_ttl.setter
    def lock_ttl(self, lock_ttl):
        """Sets the lock_ttl of this PlaceOrderRequestShippingDataLogisticsInfoInner.

        Logistics reservation waiting time.

        :param lock_ttl: The lock_ttl of this PlaceOrderRequestShippingDataLogisticsInfoInner.
        :type lock_ttl: str
        """

        self._lock_ttl = lock_ttl

    @property
    def price(self):
        """Gets the price of this PlaceOrderRequestShippingDataLogisticsInfoInner.

        Shipping price for the item. Does not account for the whole order's shipping price.

        :return: The price of this PlaceOrderRequestShippingDataLogisticsInfoInner.
        :rtype: int
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this PlaceOrderRequestShippingDataLogisticsInfoInner.

        Shipping price for the item. Does not account for the whole order's shipping price.

        :param price: The price of this PlaceOrderRequestShippingDataLogisticsInfoInner.
        :type price: int
        """
        if price is None:
            raise ValueError("Invalid value for `price`, must not be `None`")

        self._price = price

    @property
    def selected_sla(self):
        """Gets the selected_sla of this PlaceOrderRequestShippingDataLogisticsInfoInner.

        Selected shipping option

        :return: The selected_sla of this PlaceOrderRequestShippingDataLogisticsInfoInner.
        :rtype: str
        """
        return self._selected_sla

    @selected_sla.setter
    def selected_sla(self, selected_sla):
        """Sets the selected_sla of this PlaceOrderRequestShippingDataLogisticsInfoInner.

        Selected shipping option

        :param selected_sla: The selected_sla of this PlaceOrderRequestShippingDataLogisticsInfoInner.
        :type selected_sla: str
        """
        if selected_sla is None:
            raise ValueError("Invalid value for `selected_sla`, must not be `None`")

        self._selected_sla = selected_sla

    @property
    def shipping_estimate(self):
        """Gets the shipping_estimate of this PlaceOrderRequestShippingDataLogisticsInfoInner.

        Estimated time until delivery for the item.

        :return: The shipping_estimate of this PlaceOrderRequestShippingDataLogisticsInfoInner.
        :rtype: str
        """
        return self._shipping_estimate

    @shipping_estimate.setter
    def shipping_estimate(self, shipping_estimate):
        """Sets the shipping_estimate of this PlaceOrderRequestShippingDataLogisticsInfoInner.

        Estimated time until delivery for the item.

        :param shipping_estimate: The shipping_estimate of this PlaceOrderRequestShippingDataLogisticsInfoInner.
        :type shipping_estimate: str
        """

        self._shipping_estimate = shipping_estimate
