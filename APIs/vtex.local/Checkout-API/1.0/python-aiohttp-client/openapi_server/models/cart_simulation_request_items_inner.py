# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CartSimulationRequestItemsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, quantity: int=None, seller: str=None):
        """CartSimulationRequestItemsInner - a model defined in OpenAPI

        :param id: The id of this CartSimulationRequestItemsInner.
        :param quantity: The quantity of this CartSimulationRequestItemsInner.
        :param seller: The seller of this CartSimulationRequestItemsInner.
        """
        self.openapi_types = {
            'id': str,
            'quantity': int,
            'seller': str
        }

        self.attribute_map = {
            'id': 'id',
            'quantity': 'quantity',
            'seller': 'seller'
        }

        self._id = id
        self._quantity = quantity
        self._seller = seller

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CartSimulationRequestItemsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CartSimulation_request_items_inner of this CartSimulationRequestItemsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this CartSimulationRequestItemsInner.

        The SKU ID.

        :return: The id of this CartSimulationRequestItemsInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CartSimulationRequestItemsInner.

        The SKU ID.

        :param id: The id of this CartSimulationRequestItemsInner.
        :type id: str
        """

        self._id = id

    @property
    def quantity(self):
        """Gets the quantity of this CartSimulationRequestItemsInner.

        The quantity of items of this specific SKU in the cart to be simulated.

        :return: The quantity of this CartSimulationRequestItemsInner.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this CartSimulationRequestItemsInner.

        The quantity of items of this specific SKU in the cart to be simulated.

        :param quantity: The quantity of this CartSimulationRequestItemsInner.
        :type quantity: int
        """

        self._quantity = quantity

    @property
    def seller(self):
        """Gets the seller of this CartSimulationRequestItemsInner.

        The ID of the seller responsible for this SKU. This ID can be found in your VTEX Admin.

        :return: The seller of this CartSimulationRequestItemsInner.
        :rtype: str
        """
        return self._seller

    @seller.setter
    def seller(self, seller):
        """Sets the seller of this CartSimulationRequestItemsInner.

        The ID of the seller responsible for this SKU. This ID can be found in your VTEX Admin.

        :param seller: The seller of this CartSimulationRequestItemsInner.
        :type seller: str
        """

        self._seller = seller
