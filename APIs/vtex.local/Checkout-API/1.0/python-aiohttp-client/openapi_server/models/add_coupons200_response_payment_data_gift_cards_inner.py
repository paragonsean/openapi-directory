# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AddCoupons200ResponsePaymentDataGiftCardsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, balance: int=None, id: str=None, in_use: bool=None, is_special_card: bool=None, name: str=None, redemption_code: str=None, value: int=None):
        """AddCoupons200ResponsePaymentDataGiftCardsInner - a model defined in OpenAPI

        :param balance: The balance of this AddCoupons200ResponsePaymentDataGiftCardsInner.
        :param id: The id of this AddCoupons200ResponsePaymentDataGiftCardsInner.
        :param in_use: The in_use of this AddCoupons200ResponsePaymentDataGiftCardsInner.
        :param is_special_card: The is_special_card of this AddCoupons200ResponsePaymentDataGiftCardsInner.
        :param name: The name of this AddCoupons200ResponsePaymentDataGiftCardsInner.
        :param redemption_code: The redemption_code of this AddCoupons200ResponsePaymentDataGiftCardsInner.
        :param value: The value of this AddCoupons200ResponsePaymentDataGiftCardsInner.
        """
        self.openapi_types = {
            'balance': int,
            'id': str,
            'in_use': bool,
            'is_special_card': bool,
            'name': str,
            'redemption_code': str,
            'value': int
        }

        self.attribute_map = {
            'balance': 'balance',
            'id': 'id',
            'in_use': 'inUse',
            'is_special_card': 'isSpecialCard',
            'name': 'name',
            'redemption_code': 'redemptionCode',
            'value': 'value'
        }

        self._balance = balance
        self._id = id
        self._in_use = in_use
        self._is_special_card = is_special_card
        self._name = name
        self._redemption_code = redemption_code
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddCoupons200ResponsePaymentDataGiftCardsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddCoupons_200_response_paymentData_giftCards_inner of this AddCoupons200ResponsePaymentDataGiftCardsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def balance(self):
        """Gets the balance of this AddCoupons200ResponsePaymentDataGiftCardsInner.

        Gift card balance in cents.

        :return: The balance of this AddCoupons200ResponsePaymentDataGiftCardsInner.
        :rtype: int
        """
        return self._balance

    @balance.setter
    def balance(self, balance):
        """Sets the balance of this AddCoupons200ResponsePaymentDataGiftCardsInner.

        Gift card balance in cents.

        :param balance: The balance of this AddCoupons200ResponsePaymentDataGiftCardsInner.
        :type balance: int
        """

        self._balance = balance

    @property
    def id(self):
        """Gets the id of this AddCoupons200ResponsePaymentDataGiftCardsInner.

        Gift card ID.

        :return: The id of this AddCoupons200ResponsePaymentDataGiftCardsInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AddCoupons200ResponsePaymentDataGiftCardsInner.

        Gift card ID.

        :param id: The id of this AddCoupons200ResponsePaymentDataGiftCardsInner.
        :type id: str
        """

        self._id = id

    @property
    def in_use(self):
        """Gets the in_use of this AddCoupons200ResponsePaymentDataGiftCardsInner.

        Indicates whether gift card is in use.

        :return: The in_use of this AddCoupons200ResponsePaymentDataGiftCardsInner.
        :rtype: bool
        """
        return self._in_use

    @in_use.setter
    def in_use(self, in_use):
        """Sets the in_use of this AddCoupons200ResponsePaymentDataGiftCardsInner.

        Indicates whether gift card is in use.

        :param in_use: The in_use of this AddCoupons200ResponsePaymentDataGiftCardsInner.
        :type in_use: bool
        """

        self._in_use = in_use

    @property
    def is_special_card(self):
        """Gets the is_special_card of this AddCoupons200ResponsePaymentDataGiftCardsInner.

        Indicates whether gift card is special.

        :return: The is_special_card of this AddCoupons200ResponsePaymentDataGiftCardsInner.
        :rtype: bool
        """
        return self._is_special_card

    @is_special_card.setter
    def is_special_card(self, is_special_card):
        """Sets the is_special_card of this AddCoupons200ResponsePaymentDataGiftCardsInner.

        Indicates whether gift card is special.

        :param is_special_card: The is_special_card of this AddCoupons200ResponsePaymentDataGiftCardsInner.
        :type is_special_card: bool
        """

        self._is_special_card = is_special_card

    @property
    def name(self):
        """Gets the name of this AddCoupons200ResponsePaymentDataGiftCardsInner.

        Gift card name.

        :return: The name of this AddCoupons200ResponsePaymentDataGiftCardsInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AddCoupons200ResponsePaymentDataGiftCardsInner.

        Gift card name.

        :param name: The name of this AddCoupons200ResponsePaymentDataGiftCardsInner.
        :type name: str
        """

        self._name = name

    @property
    def redemption_code(self):
        """Gets the redemption_code of this AddCoupons200ResponsePaymentDataGiftCardsInner.

        Gift card redemption code.

        :return: The redemption_code of this AddCoupons200ResponsePaymentDataGiftCardsInner.
        :rtype: str
        """
        return self._redemption_code

    @redemption_code.setter
    def redemption_code(self, redemption_code):
        """Sets the redemption_code of this AddCoupons200ResponsePaymentDataGiftCardsInner.

        Gift card redemption code.

        :param redemption_code: The redemption_code of this AddCoupons200ResponsePaymentDataGiftCardsInner.
        :type redemption_code: str
        """

        self._redemption_code = redemption_code

    @property
    def value(self):
        """Gets the value of this AddCoupons200ResponsePaymentDataGiftCardsInner.

        Gift card value in cents.

        :return: The value of this AddCoupons200ResponsePaymentDataGiftCardsInner.
        :rtype: int
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this AddCoupons200ResponsePaymentDataGiftCardsInner.

        Gift card value in cents.

        :param value: The value of this AddCoupons200ResponsePaymentDataGiftCardsInner.
        :type value: int
        """

        self._value = value
