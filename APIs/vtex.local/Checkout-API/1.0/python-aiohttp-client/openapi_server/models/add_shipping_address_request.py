# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.add_shipping_address_request_logistics_info_inner import AddShippingAddressRequestLogisticsInfoInner
from openapi_server.models.add_shipping_address_request_selected_addresses_inner import AddShippingAddressRequestSelectedAddressesInner
from openapi_server import util


class AddShippingAddressRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, clear_address_if_postal_code_not_found: bool=None, logistics_info: List[AddShippingAddressRequestLogisticsInfoInner]=None, selected_addresses: List[AddShippingAddressRequestSelectedAddressesInner]=None):
        """AddShippingAddressRequest - a model defined in OpenAPI

        :param clear_address_if_postal_code_not_found: The clear_address_if_postal_code_not_found of this AddShippingAddressRequest.
        :param logistics_info: The logistics_info of this AddShippingAddressRequest.
        :param selected_addresses: The selected_addresses of this AddShippingAddressRequest.
        """
        self.openapi_types = {
            'clear_address_if_postal_code_not_found': bool,
            'logistics_info': List[AddShippingAddressRequestLogisticsInfoInner],
            'selected_addresses': List[AddShippingAddressRequestSelectedAddressesInner]
        }

        self.attribute_map = {
            'clear_address_if_postal_code_not_found': 'clearAddressIfPostalCodeNotFound',
            'logistics_info': 'logisticsInfo',
            'selected_addresses': 'selectedAddresses'
        }

        self._clear_address_if_postal_code_not_found = clear_address_if_postal_code_not_found
        self._logistics_info = logistics_info
        self._selected_addresses = selected_addresses

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddShippingAddressRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddShippingAddress_request of this AddShippingAddressRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def clear_address_if_postal_code_not_found(self):
        """Gets the clear_address_if_postal_code_not_found of this AddShippingAddressRequest.

        This field should be sent as `false` to prevent the address information from being filled in automatically based on the `postalCode` information.

        :return: The clear_address_if_postal_code_not_found of this AddShippingAddressRequest.
        :rtype: bool
        """
        return self._clear_address_if_postal_code_not_found

    @clear_address_if_postal_code_not_found.setter
    def clear_address_if_postal_code_not_found(self, clear_address_if_postal_code_not_found):
        """Sets the clear_address_if_postal_code_not_found of this AddShippingAddressRequest.

        This field should be sent as `false` to prevent the address information from being filled in automatically based on the `postalCode` information.

        :param clear_address_if_postal_code_not_found: The clear_address_if_postal_code_not_found of this AddShippingAddressRequest.
        :type clear_address_if_postal_code_not_found: bool
        """

        self._clear_address_if_postal_code_not_found = clear_address_if_postal_code_not_found

    @property
    def logistics_info(self):
        """Gets the logistics_info of this AddShippingAddressRequest.

        Array with logistics information on each item of the `items` array in the `orderForm`.

        :return: The logistics_info of this AddShippingAddressRequest.
        :rtype: List[AddShippingAddressRequestLogisticsInfoInner]
        """
        return self._logistics_info

    @logistics_info.setter
    def logistics_info(self, logistics_info):
        """Sets the logistics_info of this AddShippingAddressRequest.

        Array with logistics information on each item of the `items` array in the `orderForm`.

        :param logistics_info: The logistics_info of this AddShippingAddressRequest.
        :type logistics_info: List[AddShippingAddressRequestLogisticsInfoInner]
        """

        self._logistics_info = logistics_info

    @property
    def selected_addresses(self):
        """Gets the selected_addresses of this AddShippingAddressRequest.

        List of objects with addresses information.

        :return: The selected_addresses of this AddShippingAddressRequest.
        :rtype: List[AddShippingAddressRequestSelectedAddressesInner]
        """
        return self._selected_addresses

    @selected_addresses.setter
    def selected_addresses(self, selected_addresses):
        """Sets the selected_addresses of this AddShippingAddressRequest.

        List of objects with addresses information.

        :param selected_addresses: The selected_addresses of this AddShippingAddressRequest.
        :type selected_addresses: List[AddShippingAddressRequestSelectedAddressesInner]
        """

        self._selected_addresses = selected_addresses
