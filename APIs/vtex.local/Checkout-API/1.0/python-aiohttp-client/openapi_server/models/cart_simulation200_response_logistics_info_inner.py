# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.add_coupons200_response_shipping_data_logistics_info_inner_delivery_channels_inner import AddCoupons200ResponseShippingDataLogisticsInfoInnerDeliveryChannelsInner
from openapi_server.models.cart_simulation200_response_logistics_info_inner_item_metadata import CartSimulation200ResponseLogisticsInfoInnerItemMetadata
from openapi_server.models.cart_simulation200_response_logistics_info_inner_purchase_conditions import CartSimulation200ResponseLogisticsInfoInnerPurchaseConditions
from openapi_server.models.cart_simulation200_response_logistics_info_inner_purchase_conditions_item_purchase_conditions_inner_slas_inner import CartSimulation200ResponseLogisticsInfoInnerPurchaseConditionsItemPurchaseConditionsInnerSlasInner
from openapi_server.models.cart_simulation200_response_logistics_info_inner_totals_inner import CartSimulation200ResponseLogisticsInfoInnerTotalsInner
from openapi_server import util


class CartSimulation200ResponseLogisticsInfoInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address_id: str=None, delivery_channels: List[AddCoupons200ResponseShippingDataLogisticsInfoInnerDeliveryChannelsInner]=None, item_index: int=None, item_metadata: CartSimulation200ResponseLogisticsInfoInnerItemMetadata=None, messages: List[object]=None, pickup_points: List[object]=None, purchase_conditions: CartSimulation200ResponseLogisticsInfoInnerPurchaseConditions=None, quantity: int=None, selected_delivery_channel: str=None, selected_sla: str=None, ships_to: List[object]=None, slas: List[CartSimulation200ResponseLogisticsInfoInnerPurchaseConditionsItemPurchaseConditionsInnerSlasInner]=None, subscription_data: object=None, totals: List[CartSimulation200ResponseLogisticsInfoInnerTotalsInner]=None):
        """CartSimulation200ResponseLogisticsInfoInner - a model defined in OpenAPI

        :param address_id: The address_id of this CartSimulation200ResponseLogisticsInfoInner.
        :param delivery_channels: The delivery_channels of this CartSimulation200ResponseLogisticsInfoInner.
        :param item_index: The item_index of this CartSimulation200ResponseLogisticsInfoInner.
        :param item_metadata: The item_metadata of this CartSimulation200ResponseLogisticsInfoInner.
        :param messages: The messages of this CartSimulation200ResponseLogisticsInfoInner.
        :param pickup_points: The pickup_points of this CartSimulation200ResponseLogisticsInfoInner.
        :param purchase_conditions: The purchase_conditions of this CartSimulation200ResponseLogisticsInfoInner.
        :param quantity: The quantity of this CartSimulation200ResponseLogisticsInfoInner.
        :param selected_delivery_channel: The selected_delivery_channel of this CartSimulation200ResponseLogisticsInfoInner.
        :param selected_sla: The selected_sla of this CartSimulation200ResponseLogisticsInfoInner.
        :param ships_to: The ships_to of this CartSimulation200ResponseLogisticsInfoInner.
        :param slas: The slas of this CartSimulation200ResponseLogisticsInfoInner.
        :param subscription_data: The subscription_data of this CartSimulation200ResponseLogisticsInfoInner.
        :param totals: The totals of this CartSimulation200ResponseLogisticsInfoInner.
        """
        self.openapi_types = {
            'address_id': str,
            'delivery_channels': List[AddCoupons200ResponseShippingDataLogisticsInfoInnerDeliveryChannelsInner],
            'item_index': int,
            'item_metadata': CartSimulation200ResponseLogisticsInfoInnerItemMetadata,
            'messages': List[object],
            'pickup_points': List[object],
            'purchase_conditions': CartSimulation200ResponseLogisticsInfoInnerPurchaseConditions,
            'quantity': int,
            'selected_delivery_channel': str,
            'selected_sla': str,
            'ships_to': List[object],
            'slas': List[CartSimulation200ResponseLogisticsInfoInnerPurchaseConditionsItemPurchaseConditionsInnerSlasInner],
            'subscription_data': object,
            'totals': List[CartSimulation200ResponseLogisticsInfoInnerTotalsInner]
        }

        self.attribute_map = {
            'address_id': 'addressId',
            'delivery_channels': 'deliveryChannels',
            'item_index': 'itemIndex',
            'item_metadata': 'itemMetadata',
            'messages': 'messages',
            'pickup_points': 'pickupPoints',
            'purchase_conditions': 'purchaseConditions',
            'quantity': 'quantity',
            'selected_delivery_channel': 'selectedDeliveryChannel',
            'selected_sla': 'selectedSla',
            'ships_to': 'shipsTo',
            'slas': 'slas',
            'subscription_data': 'subscriptionData',
            'totals': 'totals'
        }

        self._address_id = address_id
        self._delivery_channels = delivery_channels
        self._item_index = item_index
        self._item_metadata = item_metadata
        self._messages = messages
        self._pickup_points = pickup_points
        self._purchase_conditions = purchase_conditions
        self._quantity = quantity
        self._selected_delivery_channel = selected_delivery_channel
        self._selected_sla = selected_sla
        self._ships_to = ships_to
        self._slas = slas
        self._subscription_data = subscription_data
        self._totals = totals

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CartSimulation200ResponseLogisticsInfoInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CartSimulation_200_response_logisticsInfo_inner of this CartSimulation200ResponseLogisticsInfoInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address_id(self):
        """Gets the address_id of this CartSimulation200ResponseLogisticsInfoInner.

        Address ID.

        :return: The address_id of this CartSimulation200ResponseLogisticsInfoInner.
        :rtype: str
        """
        return self._address_id

    @address_id.setter
    def address_id(self, address_id):
        """Sets the address_id of this CartSimulation200ResponseLogisticsInfoInner.

        Address ID.

        :param address_id: The address_id of this CartSimulation200ResponseLogisticsInfoInner.
        :type address_id: str
        """

        self._address_id = address_id

    @property
    def delivery_channels(self):
        """Gets the delivery_channels of this CartSimulation200ResponseLogisticsInfoInner.

        List of available delivery channels.

        :return: The delivery_channels of this CartSimulation200ResponseLogisticsInfoInner.
        :rtype: List[AddCoupons200ResponseShippingDataLogisticsInfoInnerDeliveryChannelsInner]
        """
        return self._delivery_channels

    @delivery_channels.setter
    def delivery_channels(self, delivery_channels):
        """Sets the delivery_channels of this CartSimulation200ResponseLogisticsInfoInner.

        List of available delivery channels.

        :param delivery_channels: The delivery_channels of this CartSimulation200ResponseLogisticsInfoInner.
        :type delivery_channels: List[AddCoupons200ResponseShippingDataLogisticsInfoInnerDeliveryChannelsInner]
        """

        self._delivery_channels = delivery_channels

    @property
    def item_index(self):
        """Gets the item_index of this CartSimulation200ResponseLogisticsInfoInner.

        Index of item in items array.

        :return: The item_index of this CartSimulation200ResponseLogisticsInfoInner.
        :rtype: int
        """
        return self._item_index

    @item_index.setter
    def item_index(self, item_index):
        """Sets the item_index of this CartSimulation200ResponseLogisticsInfoInner.

        Index of item in items array.

        :param item_index: The item_index of this CartSimulation200ResponseLogisticsInfoInner.
        :type item_index: int
        """

        self._item_index = item_index

    @property
    def item_metadata(self):
        """Gets the item_metadata of this CartSimulation200ResponseLogisticsInfoInner.


        :return: The item_metadata of this CartSimulation200ResponseLogisticsInfoInner.
        :rtype: CartSimulation200ResponseLogisticsInfoInnerItemMetadata
        """
        return self._item_metadata

    @item_metadata.setter
    def item_metadata(self, item_metadata):
        """Sets the item_metadata of this CartSimulation200ResponseLogisticsInfoInner.


        :param item_metadata: The item_metadata of this CartSimulation200ResponseLogisticsInfoInner.
        :type item_metadata: CartSimulation200ResponseLogisticsInfoInnerItemMetadata
        """

        self._item_metadata = item_metadata

    @property
    def messages(self):
        """Gets the messages of this CartSimulation200ResponseLogisticsInfoInner.

        Array containing an object for each message generated by our servers while processing the request.

        :return: The messages of this CartSimulation200ResponseLogisticsInfoInner.
        :rtype: List[object]
        """
        return self._messages

    @messages.setter
    def messages(self, messages):
        """Sets the messages of this CartSimulation200ResponseLogisticsInfoInner.

        Array containing an object for each message generated by our servers while processing the request.

        :param messages: The messages of this CartSimulation200ResponseLogisticsInfoInner.
        :type messages: List[object]
        """

        self._messages = messages

    @property
    def pickup_points(self):
        """Gets the pickup_points of this CartSimulation200ResponseLogisticsInfoInner.

        Array containing pickup points information.

        :return: The pickup_points of this CartSimulation200ResponseLogisticsInfoInner.
        :rtype: List[object]
        """
        return self._pickup_points

    @pickup_points.setter
    def pickup_points(self, pickup_points):
        """Sets the pickup_points of this CartSimulation200ResponseLogisticsInfoInner.

        Array containing pickup points information.

        :param pickup_points: The pickup_points of this CartSimulation200ResponseLogisticsInfoInner.
        :type pickup_points: List[object]
        """

        self._pickup_points = pickup_points

    @property
    def purchase_conditions(self):
        """Gets the purchase_conditions of this CartSimulation200ResponseLogisticsInfoInner.


        :return: The purchase_conditions of this CartSimulation200ResponseLogisticsInfoInner.
        :rtype: CartSimulation200ResponseLogisticsInfoInnerPurchaseConditions
        """
        return self._purchase_conditions

    @purchase_conditions.setter
    def purchase_conditions(self, purchase_conditions):
        """Sets the purchase_conditions of this CartSimulation200ResponseLogisticsInfoInner.


        :param purchase_conditions: The purchase_conditions of this CartSimulation200ResponseLogisticsInfoInner.
        :type purchase_conditions: CartSimulation200ResponseLogisticsInfoInnerPurchaseConditions
        """

        self._purchase_conditions = purchase_conditions

    @property
    def quantity(self):
        """Gets the quantity of this CartSimulation200ResponseLogisticsInfoInner.

        Quantity.

        :return: The quantity of this CartSimulation200ResponseLogisticsInfoInner.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this CartSimulation200ResponseLogisticsInfoInner.

        Quantity.

        :param quantity: The quantity of this CartSimulation200ResponseLogisticsInfoInner.
        :type quantity: int
        """

        self._quantity = quantity

    @property
    def selected_delivery_channel(self):
        """Gets the selected_delivery_channel of this CartSimulation200ResponseLogisticsInfoInner.

        Delivery channel selected by the customer. For example, `\"delivery\"` or `\"pickup-in-point\"`.

        :return: The selected_delivery_channel of this CartSimulation200ResponseLogisticsInfoInner.
        :rtype: str
        """
        return self._selected_delivery_channel

    @selected_delivery_channel.setter
    def selected_delivery_channel(self, selected_delivery_channel):
        """Sets the selected_delivery_channel of this CartSimulation200ResponseLogisticsInfoInner.

        Delivery channel selected by the customer. For example, `\"delivery\"` or `\"pickup-in-point\"`.

        :param selected_delivery_channel: The selected_delivery_channel of this CartSimulation200ResponseLogisticsInfoInner.
        :type selected_delivery_channel: str
        """

        self._selected_delivery_channel = selected_delivery_channel

    @property
    def selected_sla(self):
        """Gets the selected_sla of this CartSimulation200ResponseLogisticsInfoInner.

        Selected SLA. For example, `\"normal\"` or `\"express\"`.

        :return: The selected_sla of this CartSimulation200ResponseLogisticsInfoInner.
        :rtype: str
        """
        return self._selected_sla

    @selected_sla.setter
    def selected_sla(self, selected_sla):
        """Sets the selected_sla of this CartSimulation200ResponseLogisticsInfoInner.

        Selected SLA. For example, `\"normal\"` or `\"express\"`.

        :param selected_sla: The selected_sla of this CartSimulation200ResponseLogisticsInfoInner.
        :type selected_sla: str
        """

        self._selected_sla = selected_sla

    @property
    def ships_to(self):
        """Gets the ships_to of this CartSimulation200ResponseLogisticsInfoInner.

        List of countries that the item may be shipped to.

        :return: The ships_to of this CartSimulation200ResponseLogisticsInfoInner.
        :rtype: List[object]
        """
        return self._ships_to

    @ships_to.setter
    def ships_to(self, ships_to):
        """Sets the ships_to of this CartSimulation200ResponseLogisticsInfoInner.

        List of countries that the item may be shipped to.

        :param ships_to: The ships_to of this CartSimulation200ResponseLogisticsInfoInner.
        :type ships_to: List[object]
        """

        self._ships_to = ships_to

    @property
    def slas(self):
        """Gets the slas of this CartSimulation200ResponseLogisticsInfoInner.

        Information on available SLAs.

        :return: The slas of this CartSimulation200ResponseLogisticsInfoInner.
        :rtype: List[CartSimulation200ResponseLogisticsInfoInnerPurchaseConditionsItemPurchaseConditionsInnerSlasInner]
        """
        return self._slas

    @slas.setter
    def slas(self, slas):
        """Sets the slas of this CartSimulation200ResponseLogisticsInfoInner.

        Information on available SLAs.

        :param slas: The slas of this CartSimulation200ResponseLogisticsInfoInner.
        :type slas: List[CartSimulation200ResponseLogisticsInfoInnerPurchaseConditionsItemPurchaseConditionsInnerSlasInner]
        """

        self._slas = slas

    @property
    def subscription_data(self):
        """Gets the subscription_data of this CartSimulation200ResponseLogisticsInfoInner.

        Subscription information.

        :return: The subscription_data of this CartSimulation200ResponseLogisticsInfoInner.
        :rtype: object
        """
        return self._subscription_data

    @subscription_data.setter
    def subscription_data(self, subscription_data):
        """Sets the subscription_data of this CartSimulation200ResponseLogisticsInfoInner.

        Subscription information.

        :param subscription_data: The subscription_data of this CartSimulation200ResponseLogisticsInfoInner.
        :type subscription_data: object
        """

        self._subscription_data = subscription_data

    @property
    def totals(self):
        """Gets the totals of this CartSimulation200ResponseLogisticsInfoInner.

        Information on order totals.

        :return: The totals of this CartSimulation200ResponseLogisticsInfoInner.
        :rtype: List[CartSimulation200ResponseLogisticsInfoInnerTotalsInner]
        """
        return self._totals

    @totals.setter
    def totals(self, totals):
        """Sets the totals of this CartSimulation200ResponseLogisticsInfoInner.

        Information on order totals.

        :param totals: The totals of this CartSimulation200ResponseLogisticsInfoInner.
        :type totals: List[CartSimulation200ResponseLogisticsInfoInnerTotalsInner]
        """

        self._totals = totals
