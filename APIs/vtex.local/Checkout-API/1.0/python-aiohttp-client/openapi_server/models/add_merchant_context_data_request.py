# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.add_merchant_context_data_request_sales_associate_data import AddMerchantContextDataRequestSalesAssociateData
from openapi_server import util


class AddMerchantContextDataRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sales_associate_data: AddMerchantContextDataRequestSalesAssociateData=None):
        """AddMerchantContextDataRequest - a model defined in OpenAPI

        :param sales_associate_data: The sales_associate_data of this AddMerchantContextDataRequest.
        """
        self.openapi_types = {
            'sales_associate_data': AddMerchantContextDataRequestSalesAssociateData
        }

        self.attribute_map = {
            'sales_associate_data': 'salesAssociateData'
        }

        self._sales_associate_data = sales_associate_data

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddMerchantContextDataRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddMerchantContextData_request of this AddMerchantContextDataRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sales_associate_data(self):
        """Gets the sales_associate_data of this AddMerchantContextDataRequest.


        :return: The sales_associate_data of this AddMerchantContextDataRequest.
        :rtype: AddMerchantContextDataRequestSalesAssociateData
        """
        return self._sales_associate_data

    @sales_associate_data.setter
    def sales_associate_data(self, sales_associate_data):
        """Sets the sales_associate_data of this AddMerchantContextDataRequest.


        :param sales_associate_data: The sales_associate_data of this AddMerchantContextDataRequest.
        :type sales_associate_data: AddMerchantContextDataRequestSalesAssociateData
        """
        if sales_associate_data is None:
            raise ValueError("Invalid value for `sales_associate_data`, must not be `None`")

        self._sales_associate_data = sales_associate_data
