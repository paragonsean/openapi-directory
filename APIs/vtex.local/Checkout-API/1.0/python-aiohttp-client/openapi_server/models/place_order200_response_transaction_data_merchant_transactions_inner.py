# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.place_order200_response_transaction_data_merchant_transactions_inner_payments_inner import PlaceOrder200ResponseTransactionDataMerchantTransactionsInnerPaymentsInner
from openapi_server import util


class PlaceOrder200ResponseTransactionDataMerchantTransactionsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, merchant_name: str=None, payments: List[PlaceOrder200ResponseTransactionDataMerchantTransactionsInnerPaymentsInner]=None, transaction_id: str=None):
        """PlaceOrder200ResponseTransactionDataMerchantTransactionsInner - a model defined in OpenAPI

        :param id: The id of this PlaceOrder200ResponseTransactionDataMerchantTransactionsInner.
        :param merchant_name: The merchant_name of this PlaceOrder200ResponseTransactionDataMerchantTransactionsInner.
        :param payments: The payments of this PlaceOrder200ResponseTransactionDataMerchantTransactionsInner.
        :param transaction_id: The transaction_id of this PlaceOrder200ResponseTransactionDataMerchantTransactionsInner.
        """
        self.openapi_types = {
            'id': str,
            'merchant_name': str,
            'payments': List[PlaceOrder200ResponseTransactionDataMerchantTransactionsInnerPaymentsInner],
            'transaction_id': str
        }

        self.attribute_map = {
            'id': 'id',
            'merchant_name': 'merchantName',
            'payments': 'payments',
            'transaction_id': 'transactionId'
        }

        self._id = id
        self._merchant_name = merchant_name
        self._payments = payments
        self._transaction_id = transaction_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlaceOrder200ResponseTransactionDataMerchantTransactionsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlaceOrder_200_response_transactionData_merchantTransactions_inner of this PlaceOrder200ResponseTransactionDataMerchantTransactionsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this PlaceOrder200ResponseTransactionDataMerchantTransactionsInner.

        ID of the seller.

        :return: The id of this PlaceOrder200ResponseTransactionDataMerchantTransactionsInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PlaceOrder200ResponseTransactionDataMerchantTransactionsInner.

        ID of the seller.

        :param id: The id of this PlaceOrder200ResponseTransactionDataMerchantTransactionsInner.
        :type id: str
        """

        self._id = id

    @property
    def merchant_name(self):
        """Gets the merchant_name of this PlaceOrder200ResponseTransactionDataMerchantTransactionsInner.

        Name of the merchant responsible for the sale.

        :return: The merchant_name of this PlaceOrder200ResponseTransactionDataMerchantTransactionsInner.
        :rtype: str
        """
        return self._merchant_name

    @merchant_name.setter
    def merchant_name(self, merchant_name):
        """Sets the merchant_name of this PlaceOrder200ResponseTransactionDataMerchantTransactionsInner.

        Name of the merchant responsible for the sale.

        :param merchant_name: The merchant_name of this PlaceOrder200ResponseTransactionDataMerchantTransactionsInner.
        :type merchant_name: str
        """

        self._merchant_name = merchant_name

    @property
    def payments(self):
        """Gets the payments of this PlaceOrder200ResponseTransactionDataMerchantTransactionsInner.

        Information on each payment pertinent to the transaction.

        :return: The payments of this PlaceOrder200ResponseTransactionDataMerchantTransactionsInner.
        :rtype: List[PlaceOrder200ResponseTransactionDataMerchantTransactionsInnerPaymentsInner]
        """
        return self._payments

    @payments.setter
    def payments(self, payments):
        """Sets the payments of this PlaceOrder200ResponseTransactionDataMerchantTransactionsInner.

        Information on each payment pertinent to the transaction.

        :param payments: The payments of this PlaceOrder200ResponseTransactionDataMerchantTransactionsInner.
        :type payments: List[PlaceOrder200ResponseTransactionDataMerchantTransactionsInnerPaymentsInner]
        """

        self._payments = payments

    @property
    def transaction_id(self):
        """Gets the transaction_id of this PlaceOrder200ResponseTransactionDataMerchantTransactionsInner.

        ID of the transaction in the platform.

        :return: The transaction_id of this PlaceOrder200ResponseTransactionDataMerchantTransactionsInner.
        :rtype: str
        """
        return self._transaction_id

    @transaction_id.setter
    def transaction_id(self, transaction_id):
        """Sets the transaction_id of this PlaceOrder200ResponseTransactionDataMerchantTransactionsInner.

        ID of the transaction in the platform.

        :param transaction_id: The transaction_id of this PlaceOrder200ResponseTransactionDataMerchantTransactionsInner.
        :type transaction_id: str
        """

        self._transaction_id = transaction_id
