# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.add_coupons200_response_items_inner_price_definition import AddCoupons200ResponseItemsInnerPriceDefinition
from openapi_server.models.cart_simulation200_response_items_inner_price_tags_inner import CartSimulation200ResponseItemsInnerPriceTagsInner
from openapi_server import util


class CartSimulation200ResponseItemsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, availability: str=None, id: str=None, list_price: int=None, measurement_unit: str=None, offerings: List[object]=None, parent_assembly_binding: str=None, parent_item_index: int=None, price: int=None, price_definition: AddCoupons200ResponseItemsInnerPriceDefinition=None, price_tags: List[CartSimulation200ResponseItemsInnerPriceTagsInner]=None, price_valid_until: str=None, quantity: int=None, request_index: int=None, reward_value: int=None, seller: str=None, seller_chain: List[str]=None, selling_price: int=None, tax: int=None, unit_multiplier: int=None):
        """CartSimulation200ResponseItemsInner - a model defined in OpenAPI

        :param availability: The availability of this CartSimulation200ResponseItemsInner.
        :param id: The id of this CartSimulation200ResponseItemsInner.
        :param list_price: The list_price of this CartSimulation200ResponseItemsInner.
        :param measurement_unit: The measurement_unit of this CartSimulation200ResponseItemsInner.
        :param offerings: The offerings of this CartSimulation200ResponseItemsInner.
        :param parent_assembly_binding: The parent_assembly_binding of this CartSimulation200ResponseItemsInner.
        :param parent_item_index: The parent_item_index of this CartSimulation200ResponseItemsInner.
        :param price: The price of this CartSimulation200ResponseItemsInner.
        :param price_definition: The price_definition of this CartSimulation200ResponseItemsInner.
        :param price_tags: The price_tags of this CartSimulation200ResponseItemsInner.
        :param price_valid_until: The price_valid_until of this CartSimulation200ResponseItemsInner.
        :param quantity: The quantity of this CartSimulation200ResponseItemsInner.
        :param request_index: The request_index of this CartSimulation200ResponseItemsInner.
        :param reward_value: The reward_value of this CartSimulation200ResponseItemsInner.
        :param seller: The seller of this CartSimulation200ResponseItemsInner.
        :param seller_chain: The seller_chain of this CartSimulation200ResponseItemsInner.
        :param selling_price: The selling_price of this CartSimulation200ResponseItemsInner.
        :param tax: The tax of this CartSimulation200ResponseItemsInner.
        :param unit_multiplier: The unit_multiplier of this CartSimulation200ResponseItemsInner.
        """
        self.openapi_types = {
            'availability': str,
            'id': str,
            'list_price': int,
            'measurement_unit': str,
            'offerings': List[object],
            'parent_assembly_binding': str,
            'parent_item_index': int,
            'price': int,
            'price_definition': AddCoupons200ResponseItemsInnerPriceDefinition,
            'price_tags': List[CartSimulation200ResponseItemsInnerPriceTagsInner],
            'price_valid_until': str,
            'quantity': int,
            'request_index': int,
            'reward_value': int,
            'seller': str,
            'seller_chain': List[str],
            'selling_price': int,
            'tax': int,
            'unit_multiplier': int
        }

        self.attribute_map = {
            'availability': 'availability',
            'id': 'id',
            'list_price': 'listPrice',
            'measurement_unit': 'measurementUnit',
            'offerings': 'offerings',
            'parent_assembly_binding': 'parentAssemblyBinding',
            'parent_item_index': 'parentItemIndex',
            'price': 'price',
            'price_definition': 'priceDefinition',
            'price_tags': 'priceTags',
            'price_valid_until': 'priceValidUntil',
            'quantity': 'quantity',
            'request_index': 'requestIndex',
            'reward_value': 'rewardValue',
            'seller': 'seller',
            'seller_chain': 'sellerChain',
            'selling_price': 'sellingPrice',
            'tax': 'tax',
            'unit_multiplier': 'unitMultiplier'
        }

        self._availability = availability
        self._id = id
        self._list_price = list_price
        self._measurement_unit = measurement_unit
        self._offerings = offerings
        self._parent_assembly_binding = parent_assembly_binding
        self._parent_item_index = parent_item_index
        self._price = price
        self._price_definition = price_definition
        self._price_tags = price_tags
        self._price_valid_until = price_valid_until
        self._quantity = quantity
        self._request_index = request_index
        self._reward_value = reward_value
        self._seller = seller
        self._seller_chain = seller_chain
        self._selling_price = selling_price
        self._tax = tax
        self._unit_multiplier = unit_multiplier

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CartSimulation200ResponseItemsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CartSimulation_200_response_items_inner of this CartSimulation200ResponseItemsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def availability(self):
        """Gets the availability of this CartSimulation200ResponseItemsInner.

        Availability.

        :return: The availability of this CartSimulation200ResponseItemsInner.
        :rtype: str
        """
        return self._availability

    @availability.setter
    def availability(self, availability):
        """Sets the availability of this CartSimulation200ResponseItemsInner.

        Availability.

        :param availability: The availability of this CartSimulation200ResponseItemsInner.
        :type availability: str
        """

        self._availability = availability

    @property
    def id(self):
        """Gets the id of this CartSimulation200ResponseItemsInner.

        ID of the item.

        :return: The id of this CartSimulation200ResponseItemsInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CartSimulation200ResponseItemsInner.

        ID of the item.

        :param id: The id of this CartSimulation200ResponseItemsInner.
        :type id: str
        """

        self._id = id

    @property
    def list_price(self):
        """Gets the list_price of this CartSimulation200ResponseItemsInner.

        List price in cents.

        :return: The list_price of this CartSimulation200ResponseItemsInner.
        :rtype: int
        """
        return self._list_price

    @list_price.setter
    def list_price(self, list_price):
        """Sets the list_price of this CartSimulation200ResponseItemsInner.

        List price in cents.

        :param list_price: The list_price of this CartSimulation200ResponseItemsInner.
        :type list_price: int
        """

        self._list_price = list_price

    @property
    def measurement_unit(self):
        """Gets the measurement_unit of this CartSimulation200ResponseItemsInner.

        Measurement unit.

        :return: The measurement_unit of this CartSimulation200ResponseItemsInner.
        :rtype: str
        """
        return self._measurement_unit

    @measurement_unit.setter
    def measurement_unit(self, measurement_unit):
        """Sets the measurement_unit of this CartSimulation200ResponseItemsInner.

        Measurement unit.

        :param measurement_unit: The measurement_unit of this CartSimulation200ResponseItemsInner.
        :type measurement_unit: str
        """

        self._measurement_unit = measurement_unit

    @property
    def offerings(self):
        """Gets the offerings of this CartSimulation200ResponseItemsInner.

        Array containing offering information.

        :return: The offerings of this CartSimulation200ResponseItemsInner.
        :rtype: List[object]
        """
        return self._offerings

    @offerings.setter
    def offerings(self, offerings):
        """Sets the offerings of this CartSimulation200ResponseItemsInner.

        Array containing offering information.

        :param offerings: The offerings of this CartSimulation200ResponseItemsInner.
        :type offerings: List[object]
        """

        self._offerings = offerings

    @property
    def parent_assembly_binding(self):
        """Gets the parent_assembly_binding of this CartSimulation200ResponseItemsInner.

        Parent assembly binding.

        :return: The parent_assembly_binding of this CartSimulation200ResponseItemsInner.
        :rtype: str
        """
        return self._parent_assembly_binding

    @parent_assembly_binding.setter
    def parent_assembly_binding(self, parent_assembly_binding):
        """Sets the parent_assembly_binding of this CartSimulation200ResponseItemsInner.

        Parent assembly binding.

        :param parent_assembly_binding: The parent_assembly_binding of this CartSimulation200ResponseItemsInner.
        :type parent_assembly_binding: str
        """

        self._parent_assembly_binding = parent_assembly_binding

    @property
    def parent_item_index(self):
        """Gets the parent_item_index of this CartSimulation200ResponseItemsInner.

        Parent item index.

        :return: The parent_item_index of this CartSimulation200ResponseItemsInner.
        :rtype: int
        """
        return self._parent_item_index

    @parent_item_index.setter
    def parent_item_index(self, parent_item_index):
        """Sets the parent_item_index of this CartSimulation200ResponseItemsInner.

        Parent item index.

        :param parent_item_index: The parent_item_index of this CartSimulation200ResponseItemsInner.
        :type parent_item_index: int
        """

        self._parent_item_index = parent_item_index

    @property
    def price(self):
        """Gets the price of this CartSimulation200ResponseItemsInner.

        Price in cents.

        :return: The price of this CartSimulation200ResponseItemsInner.
        :rtype: int
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this CartSimulation200ResponseItemsInner.

        Price in cents.

        :param price: The price of this CartSimulation200ResponseItemsInner.
        :type price: int
        """

        self._price = price

    @property
    def price_definition(self):
        """Gets the price_definition of this CartSimulation200ResponseItemsInner.


        :return: The price_definition of this CartSimulation200ResponseItemsInner.
        :rtype: AddCoupons200ResponseItemsInnerPriceDefinition
        """
        return self._price_definition

    @price_definition.setter
    def price_definition(self, price_definition):
        """Sets the price_definition of this CartSimulation200ResponseItemsInner.


        :param price_definition: The price_definition of this CartSimulation200ResponseItemsInner.
        :type price_definition: AddCoupons200ResponseItemsInnerPriceDefinition
        """

        self._price_definition = price_definition

    @property
    def price_tags(self):
        """Gets the price_tags of this CartSimulation200ResponseItemsInner.

        Array of price tags, each of which, modifies the price in some way, like discounts or rates that apply to the item in the context of the order.

        :return: The price_tags of this CartSimulation200ResponseItemsInner.
        :rtype: List[CartSimulation200ResponseItemsInnerPriceTagsInner]
        """
        return self._price_tags

    @price_tags.setter
    def price_tags(self, price_tags):
        """Sets the price_tags of this CartSimulation200ResponseItemsInner.

        Array of price tags, each of which, modifies the price in some way, like discounts or rates that apply to the item in the context of the order.

        :param price_tags: The price_tags of this CartSimulation200ResponseItemsInner.
        :type price_tags: List[CartSimulation200ResponseItemsInnerPriceTagsInner]
        """

        self._price_tags = price_tags

    @property
    def price_valid_until(self):
        """Gets the price_valid_until of this CartSimulation200ResponseItemsInner.

        Price expiration date and time.

        :return: The price_valid_until of this CartSimulation200ResponseItemsInner.
        :rtype: str
        """
        return self._price_valid_until

    @price_valid_until.setter
    def price_valid_until(self, price_valid_until):
        """Sets the price_valid_until of this CartSimulation200ResponseItemsInner.

        Price expiration date and time.

        :param price_valid_until: The price_valid_until of this CartSimulation200ResponseItemsInner.
        :type price_valid_until: str
        """

        self._price_valid_until = price_valid_until

    @property
    def quantity(self):
        """Gets the quantity of this CartSimulation200ResponseItemsInner.

        The quantity of the item the cart.

        :return: The quantity of this CartSimulation200ResponseItemsInner.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this CartSimulation200ResponseItemsInner.

        The quantity of the item the cart.

        :param quantity: The quantity of this CartSimulation200ResponseItemsInner.
        :type quantity: int
        """

        self._quantity = quantity

    @property
    def request_index(self):
        """Gets the request_index of this CartSimulation200ResponseItemsInner.

        Request index information.

        :return: The request_index of this CartSimulation200ResponseItemsInner.
        :rtype: int
        """
        return self._request_index

    @request_index.setter
    def request_index(self, request_index):
        """Sets the request_index of this CartSimulation200ResponseItemsInner.

        Request index information.

        :param request_index: The request_index of this CartSimulation200ResponseItemsInner.
        :type request_index: int
        """

        self._request_index = request_index

    @property
    def reward_value(self):
        """Gets the reward_value of this CartSimulation200ResponseItemsInner.

        Reward value in cents.

        :return: The reward_value of this CartSimulation200ResponseItemsInner.
        :rtype: int
        """
        return self._reward_value

    @reward_value.setter
    def reward_value(self, reward_value):
        """Sets the reward_value of this CartSimulation200ResponseItemsInner.

        Reward value in cents.

        :param reward_value: The reward_value of this CartSimulation200ResponseItemsInner.
        :type reward_value: int
        """

        self._reward_value = reward_value

    @property
    def seller(self):
        """Gets the seller of this CartSimulation200ResponseItemsInner.

        The seller responsible for the SKU.

        :return: The seller of this CartSimulation200ResponseItemsInner.
        :rtype: str
        """
        return self._seller

    @seller.setter
    def seller(self, seller):
        """Sets the seller of this CartSimulation200ResponseItemsInner.

        The seller responsible for the SKU.

        :param seller: The seller of this CartSimulation200ResponseItemsInner.
        :type seller: str
        """

        self._seller = seller

    @property
    def seller_chain(self):
        """Gets the seller_chain of this CartSimulation200ResponseItemsInner.

        Sellers involved in the chain. The list should contain only one seller, unless it is a [Multilevel Omnichannel Inventory](https://help.vtex.com/en/tutorial/multilevel-omnichannel-inventory--7M1xyCZWUyCB7PcjNtOyw4) order.

        :return: The seller_chain of this CartSimulation200ResponseItemsInner.
        :rtype: List[str]
        """
        return self._seller_chain

    @seller_chain.setter
    def seller_chain(self, seller_chain):
        """Sets the seller_chain of this CartSimulation200ResponseItemsInner.

        Sellers involved in the chain. The list should contain only one seller, unless it is a [Multilevel Omnichannel Inventory](https://help.vtex.com/en/tutorial/multilevel-omnichannel-inventory--7M1xyCZWUyCB7PcjNtOyw4) order.

        :param seller_chain: The seller_chain of this CartSimulation200ResponseItemsInner.
        :type seller_chain: List[str]
        """

        self._seller_chain = seller_chain

    @property
    def selling_price(self):
        """Gets the selling_price of this CartSimulation200ResponseItemsInner.

        Selling price in cents. Note that this field may be subject to rounding discrepancies. We recommend retrieving data from the `priceDefinition` data structure instead.

        :return: The selling_price of this CartSimulation200ResponseItemsInner.
        :rtype: int
        """
        return self._selling_price

    @selling_price.setter
    def selling_price(self, selling_price):
        """Sets the selling_price of this CartSimulation200ResponseItemsInner.

        Selling price in cents. Note that this field may be subject to rounding discrepancies. We recommend retrieving data from the `priceDefinition` data structure instead.

        :param selling_price: The selling_price of this CartSimulation200ResponseItemsInner.
        :type selling_price: int
        """

        self._selling_price = selling_price

    @property
    def tax(self):
        """Gets the tax of this CartSimulation200ResponseItemsInner.

        Tax value in cents.

        :return: The tax of this CartSimulation200ResponseItemsInner.
        :rtype: int
        """
        return self._tax

    @tax.setter
    def tax(self, tax):
        """Sets the tax of this CartSimulation200ResponseItemsInner.

        Tax value in cents.

        :param tax: The tax of this CartSimulation200ResponseItemsInner.
        :type tax: int
        """

        self._tax = tax

    @property
    def unit_multiplier(self):
        """Gets the unit_multiplier of this CartSimulation200ResponseItemsInner.

        Unit multiplier.

        :return: The unit_multiplier of this CartSimulation200ResponseItemsInner.
        :rtype: int
        """
        return self._unit_multiplier

    @unit_multiplier.setter
    def unit_multiplier(self, unit_multiplier):
        """Sets the unit_multiplier of this CartSimulation200ResponseItemsInner.

        Unit multiplier.

        :param unit_multiplier: The unit_multiplier of this CartSimulation200ResponseItemsInner.
        :type unit_multiplier: int
        """

        self._unit_multiplier = unit_multiplier
