# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.add_coupons200_response_payment_data_gift_cards_inner import AddCoupons200ResponsePaymentDataGiftCardsInner
from openapi_server.models.add_coupons200_response_payment_data_transactions_inner import AddCoupons200ResponsePaymentDataTransactionsInner
from openapi_server import util


class AddCoupons200ResponsePaymentData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gift_cards: List[AddCoupons200ResponsePaymentDataGiftCardsInner]=None, transactions: List[AddCoupons200ResponsePaymentDataTransactionsInner]=None):
        """AddCoupons200ResponsePaymentData - a model defined in OpenAPI

        :param gift_cards: The gift_cards of this AddCoupons200ResponsePaymentData.
        :param transactions: The transactions of this AddCoupons200ResponsePaymentData.
        """
        self.openapi_types = {
            'gift_cards': List[AddCoupons200ResponsePaymentDataGiftCardsInner],
            'transactions': List[AddCoupons200ResponsePaymentDataTransactionsInner]
        }

        self.attribute_map = {
            'gift_cards': 'giftCards',
            'transactions': 'transactions'
        }

        self._gift_cards = gift_cards
        self._transactions = transactions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddCoupons200ResponsePaymentData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddCoupons_200_response_paymentData of this AddCoupons200ResponsePaymentData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gift_cards(self):
        """Gets the gift_cards of this AddCoupons200ResponsePaymentData.

        Gift card information, if it applies to the order.

        :return: The gift_cards of this AddCoupons200ResponsePaymentData.
        :rtype: List[AddCoupons200ResponsePaymentDataGiftCardsInner]
        """
        return self._gift_cards

    @gift_cards.setter
    def gift_cards(self, gift_cards):
        """Sets the gift_cards of this AddCoupons200ResponsePaymentData.

        Gift card information, if it applies to the order.

        :param gift_cards: The gift_cards of this AddCoupons200ResponsePaymentData.
        :type gift_cards: List[AddCoupons200ResponsePaymentDataGiftCardsInner]
        """

        self._gift_cards = gift_cards

    @property
    def transactions(self):
        """Gets the transactions of this AddCoupons200ResponsePaymentData.

        Information on each transaction pertinent to the order.

        :return: The transactions of this AddCoupons200ResponsePaymentData.
        :rtype: List[AddCoupons200ResponsePaymentDataTransactionsInner]
        """
        return self._transactions

    @transactions.setter
    def transactions(self, transactions):
        """Sets the transactions of this AddCoupons200ResponsePaymentData.

        Information on each transaction pertinent to the order.

        :param transactions: The transactions of this AddCoupons200ResponsePaymentData.
        :type transactions: List[AddCoupons200ResponsePaymentDataTransactionsInner]
        """

        self._transactions = transactions
