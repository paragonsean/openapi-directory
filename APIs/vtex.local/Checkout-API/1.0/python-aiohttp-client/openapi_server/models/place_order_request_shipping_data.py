# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.place_order_request_shipping_data_address import PlaceOrderRequestShippingDataAddress
from openapi_server.models.place_order_request_shipping_data_logistics_info_inner import PlaceOrderRequestShippingDataLogisticsInfoInner
from openapi_server import util


class PlaceOrderRequestShippingData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: PlaceOrderRequestShippingDataAddress=None, logistics_info: List[PlaceOrderRequestShippingDataLogisticsInfoInner]=None, update_status: str='updated'):
        """PlaceOrderRequestShippingData - a model defined in OpenAPI

        :param address: The address of this PlaceOrderRequestShippingData.
        :param logistics_info: The logistics_info of this PlaceOrderRequestShippingData.
        :param update_status: The update_status of this PlaceOrderRequestShippingData.
        """
        self.openapi_types = {
            'address': PlaceOrderRequestShippingDataAddress,
            'logistics_info': List[PlaceOrderRequestShippingDataLogisticsInfoInner],
            'update_status': str
        }

        self.attribute_map = {
            'address': 'address',
            'logistics_info': 'logisticsInfo',
            'update_status': 'updateStatus'
        }

        self._address = address
        self._logistics_info = logistics_info
        self._update_status = update_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlaceOrderRequestShippingData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlaceOrder_request_shippingData of this PlaceOrderRequestShippingData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this PlaceOrderRequestShippingData.


        :return: The address of this PlaceOrderRequestShippingData.
        :rtype: PlaceOrderRequestShippingDataAddress
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this PlaceOrderRequestShippingData.


        :param address: The address of this PlaceOrderRequestShippingData.
        :type address: PlaceOrderRequestShippingDataAddress
        """

        self._address = address

    @property
    def logistics_info(self):
        """Gets the logistics_info of this PlaceOrderRequestShippingData.

        Array of objects containing logistics information of each item.

        :return: The logistics_info of this PlaceOrderRequestShippingData.
        :rtype: List[PlaceOrderRequestShippingDataLogisticsInfoInner]
        """
        return self._logistics_info

    @logistics_info.setter
    def logistics_info(self, logistics_info):
        """Sets the logistics_info of this PlaceOrderRequestShippingData.

        Array of objects containing logistics information of each item.

        :param logistics_info: The logistics_info of this PlaceOrderRequestShippingData.
        :type logistics_info: List[PlaceOrderRequestShippingDataLogisticsInfoInner]
        """

        self._logistics_info = logistics_info

    @property
    def update_status(self):
        """Gets the update_status of this PlaceOrderRequestShippingData.

        Indicate whether this object's information is up to date according to the order's items. An order can not be placed if `\"outdated\"`

        :return: The update_status of this PlaceOrderRequestShippingData.
        :rtype: str
        """
        return self._update_status

    @update_status.setter
    def update_status(self, update_status):
        """Sets the update_status of this PlaceOrderRequestShippingData.

        Indicate whether this object's information is up to date according to the order's items. An order can not be placed if `\"outdated\"`

        :param update_status: The update_status of this PlaceOrderRequestShippingData.
        :type update_status: str
        """

        self._update_status = update_status
