# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.process_order500_response_error import ProcessOrder500ResponseError
from openapi_server import util


class ProcessOrder500Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error: ProcessOrder500ResponseError=None, operation_id: str=None):
        """ProcessOrder500Response - a model defined in OpenAPI

        :param error: The error of this ProcessOrder500Response.
        :param operation_id: The operation_id of this ProcessOrder500Response.
        """
        self.openapi_types = {
            'error': ProcessOrder500ResponseError,
            'operation_id': str
        }

        self.attribute_map = {
            'error': 'error',
            'operation_id': 'operationId'
        }

        self._error = error
        self._operation_id = operation_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProcessOrder500Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProcessOrder_500_response of this ProcessOrder500Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error(self):
        """Gets the error of this ProcessOrder500Response.


        :return: The error of this ProcessOrder500Response.
        :rtype: ProcessOrder500ResponseError
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this ProcessOrder500Response.


        :param error: The error of this ProcessOrder500Response.
        :type error: ProcessOrder500ResponseError
        """

        self._error = error

    @property
    def operation_id(self):
        """Gets the operation_id of this ProcessOrder500Response.

        Operation ID.

        :return: The operation_id of this ProcessOrder500Response.
        :rtype: str
        """
        return self._operation_id

    @operation_id.setter
    def operation_id(self, operation_id):
        """Sets the operation_id of this ProcessOrder500Response.

        Operation ID.

        :param operation_id: The operation_id of this ProcessOrder500Response.
        :type operation_id: str
        """

        self._operation_id = operation_id
