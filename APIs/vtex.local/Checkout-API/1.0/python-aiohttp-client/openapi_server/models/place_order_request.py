# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.add_merchant_context_data_request_sales_associate_data import AddMerchantContextDataRequestSalesAssociateData
from openapi_server.models.place_order_request_client_profile_data import PlaceOrderRequestClientProfileData
from openapi_server.models.place_order_request_items_inner import PlaceOrderRequestItemsInner
from openapi_server.models.place_order_request_marketing_data import PlaceOrderRequestMarketingData
from openapi_server.models.place_order_request_payment_data import PlaceOrderRequestPaymentData
from openapi_server.models.place_order_request_shipping_data import PlaceOrderRequestShippingData
from openapi_server import util


class PlaceOrderRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_profile_data: PlaceOrderRequestClientProfileData=None, items: List[PlaceOrderRequestItemsInner]=None, marketing_data: PlaceOrderRequestMarketingData=None, open_text_field: str='open-text-example', payment_data: PlaceOrderRequestPaymentData=None, sales_associate_data: AddMerchantContextDataRequestSalesAssociateData=None, shipping_data: PlaceOrderRequestShippingData=None):
        """PlaceOrderRequest - a model defined in OpenAPI

        :param client_profile_data: The client_profile_data of this PlaceOrderRequest.
        :param items: The items of this PlaceOrderRequest.
        :param marketing_data: The marketing_data of this PlaceOrderRequest.
        :param open_text_field: The open_text_field of this PlaceOrderRequest.
        :param payment_data: The payment_data of this PlaceOrderRequest.
        :param sales_associate_data: The sales_associate_data of this PlaceOrderRequest.
        :param shipping_data: The shipping_data of this PlaceOrderRequest.
        """
        self.openapi_types = {
            'client_profile_data': PlaceOrderRequestClientProfileData,
            'items': List[PlaceOrderRequestItemsInner],
            'marketing_data': PlaceOrderRequestMarketingData,
            'open_text_field': str,
            'payment_data': PlaceOrderRequestPaymentData,
            'sales_associate_data': AddMerchantContextDataRequestSalesAssociateData,
            'shipping_data': PlaceOrderRequestShippingData
        }

        self.attribute_map = {
            'client_profile_data': 'clientProfileData',
            'items': 'items',
            'marketing_data': 'marketingData',
            'open_text_field': 'openTextField',
            'payment_data': 'paymentData',
            'sales_associate_data': 'salesAssociateData',
            'shipping_data': 'shippingData'
        }

        self._client_profile_data = client_profile_data
        self._items = items
        self._marketing_data = marketing_data
        self._open_text_field = open_text_field
        self._payment_data = payment_data
        self._sales_associate_data = sales_associate_data
        self._shipping_data = shipping_data

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlaceOrderRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlaceOrder_request of this PlaceOrderRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_profile_data(self):
        """Gets the client_profile_data of this PlaceOrderRequest.


        :return: The client_profile_data of this PlaceOrderRequest.
        :rtype: PlaceOrderRequestClientProfileData
        """
        return self._client_profile_data

    @client_profile_data.setter
    def client_profile_data(self, client_profile_data):
        """Sets the client_profile_data of this PlaceOrderRequest.


        :param client_profile_data: The client_profile_data of this PlaceOrderRequest.
        :type client_profile_data: PlaceOrderRequestClientProfileData
        """
        if client_profile_data is None:
            raise ValueError("Invalid value for `client_profile_data`, must not be `None`")

        self._client_profile_data = client_profile_data

    @property
    def items(self):
        """Gets the items of this PlaceOrderRequest.

        Array of objects containing information on each of the order's items.

        :return: The items of this PlaceOrderRequest.
        :rtype: List[PlaceOrderRequestItemsInner]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this PlaceOrderRequest.

        Array of objects containing information on each of the order's items.

        :param items: The items of this PlaceOrderRequest.
        :type items: List[PlaceOrderRequestItemsInner]
        """
        if items is None:
            raise ValueError("Invalid value for `items`, must not be `None`")

        self._items = items

    @property
    def marketing_data(self):
        """Gets the marketing_data of this PlaceOrderRequest.


        :return: The marketing_data of this PlaceOrderRequest.
        :rtype: PlaceOrderRequestMarketingData
        """
        return self._marketing_data

    @marketing_data.setter
    def marketing_data(self, marketing_data):
        """Sets the marketing_data of this PlaceOrderRequest.


        :param marketing_data: The marketing_data of this PlaceOrderRequest.
        :type marketing_data: PlaceOrderRequestMarketingData
        """

        self._marketing_data = marketing_data

    @property
    def open_text_field(self):
        """Gets the open_text_field of this PlaceOrderRequest.

        Optional field meant to hold additional information about the order. We recommend using this field for text, not data formats such as `JSON` even if escaped. For that purpose, see [Creating customizable fields](https://developers.vtex.com/vtex-rest-api/docs/creating-customizable-fields-in-the-cart-with-checkout-api-1)

        :return: The open_text_field of this PlaceOrderRequest.
        :rtype: str
        """
        return self._open_text_field

    @open_text_field.setter
    def open_text_field(self, open_text_field):
        """Sets the open_text_field of this PlaceOrderRequest.

        Optional field meant to hold additional information about the order. We recommend using this field for text, not data formats such as `JSON` even if escaped. For that purpose, see [Creating customizable fields](https://developers.vtex.com/vtex-rest-api/docs/creating-customizable-fields-in-the-cart-with-checkout-api-1)

        :param open_text_field: The open_text_field of this PlaceOrderRequest.
        :type open_text_field: str
        """

        self._open_text_field = open_text_field

    @property
    def payment_data(self):
        """Gets the payment_data of this PlaceOrderRequest.


        :return: The payment_data of this PlaceOrderRequest.
        :rtype: PlaceOrderRequestPaymentData
        """
        return self._payment_data

    @payment_data.setter
    def payment_data(self, payment_data):
        """Sets the payment_data of this PlaceOrderRequest.


        :param payment_data: The payment_data of this PlaceOrderRequest.
        :type payment_data: PlaceOrderRequestPaymentData
        """
        if payment_data is None:
            raise ValueError("Invalid value for `payment_data`, must not be `None`")

        self._payment_data = payment_data

    @property
    def sales_associate_data(self):
        """Gets the sales_associate_data of this PlaceOrderRequest.


        :return: The sales_associate_data of this PlaceOrderRequest.
        :rtype: AddMerchantContextDataRequestSalesAssociateData
        """
        return self._sales_associate_data

    @sales_associate_data.setter
    def sales_associate_data(self, sales_associate_data):
        """Sets the sales_associate_data of this PlaceOrderRequest.


        :param sales_associate_data: The sales_associate_data of this PlaceOrderRequest.
        :type sales_associate_data: AddMerchantContextDataRequestSalesAssociateData
        """

        self._sales_associate_data = sales_associate_data

    @property
    def shipping_data(self):
        """Gets the shipping_data of this PlaceOrderRequest.


        :return: The shipping_data of this PlaceOrderRequest.
        :rtype: PlaceOrderRequestShippingData
        """
        return self._shipping_data

    @shipping_data.setter
    def shipping_data(self, shipping_data):
        """Sets the shipping_data of this PlaceOrderRequest.


        :param shipping_data: The shipping_data of this PlaceOrderRequest.
        :type shipping_data: PlaceOrderRequestShippingData
        """
        if shipping_data is None:
            raise ValueError("Invalid value for `shipping_data`, must not be `None`")

        self._shipping_data = shipping_data
