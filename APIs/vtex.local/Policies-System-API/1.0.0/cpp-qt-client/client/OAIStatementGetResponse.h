/**
 * Policies System API
 *    This API will create promotion alarms when selling products with undesired prices and promotions. It will create conditions that will check if the prices and the promotions are correct. If not, the system will alarm the store with information about the product sold at unexpected prices.     ## Index     `GET` [Get Policy List](https://developers.vtex.com/docs/api-reference/policies-system-api#get-/api/policy-engine/policies)   `POST` [Evaluate Policies](https://developers.vtex.com/docs/api-reference/policies-system-api#post-/api/policy-engine/evaluate)   `GET` [Get Policy by ID](https://developers.vtex.com/docs/api-reference/policies-system-api#get-/api/policy-engine/policies/-id-)   `POST` [Create Policy](https://developers.vtex.com/docs/api-reference/policies-system-api#post-/api/policy-engine/policies/-id-)   `PUT` [Update Policy](https://developers.vtex.com/docs/api-reference/policies-system-api#put-/api/policy-engine/policies/-id-)   `DELETE` [Delete Policy by ID](https://developers.vtex.com/docs/api-reference/policies-system-api#delete-/api/policy-engine/policies/-id-)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStatementGetResponse.h
 *
 * 
 */

#ifndef OAIStatementGetResponse_H
#define OAIStatementGetResponse_H

#include <QJsonObject>

#include "OAICondition.h"
#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICondition;

class OAIStatementGetResponse : public OAIObject {
public:
    OAIStatementGetResponse();
    OAIStatementGetResponse(QString json);
    ~OAIStatementGetResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QJsonValue> getActions() const;
    void setActions(const QList<QJsonValue> &actions);
    bool is_actions_Set() const;
    bool is_actions_Valid() const;

    OAICondition getCondition() const;
    void setCondition(const OAICondition &condition);
    bool is_condition_Set() const;
    bool is_condition_Valid() const;

    QString getEffect() const;
    void setEffect(const QString &effect);
    bool is_effect_Set() const;
    bool is_effect_Valid() const;

    QString getOperation() const;
    void setOperation(const QString &operation);
    bool is_operation_Set() const;
    bool is_operation_Valid() const;

    QString getResource() const;
    void setResource(const QString &resource);
    bool is_resource_Set() const;
    bool is_resource_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QJsonValue> m_actions;
    bool m_actions_isSet;
    bool m_actions_isValid;

    OAICondition m_condition;
    bool m_condition_isSet;
    bool m_condition_isValid;

    QString m_effect;
    bool m_effect_isSet;
    bool m_effect_isValid;

    QString m_operation;
    bool m_operation_isSet;
    bool m_operation_isValid;

    QString m_resource;
    bool m_resource_isSet;
    bool m_resource_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStatementGetResponse)

#endif // OAIStatementGetResponse_H
