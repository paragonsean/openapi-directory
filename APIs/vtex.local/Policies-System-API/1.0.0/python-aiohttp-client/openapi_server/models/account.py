# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_type import AccountType
from openapi_server import util


class Account(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_type: AccountType=None, id: str=None, is_active: bool=None, is_operating: bool=None, main_account_name: str=None, name: str=None, operation_date: datetime=None):
        """Account - a model defined in OpenAPI

        :param account_type: The account_type of this Account.
        :param id: The id of this Account.
        :param is_active: The is_active of this Account.
        :param is_operating: The is_operating of this Account.
        :param main_account_name: The main_account_name of this Account.
        :param name: The name of this Account.
        :param operation_date: The operation_date of this Account.
        """
        self.openapi_types = {
            'account_type': AccountType,
            'id': str,
            'is_active': bool,
            'is_operating': bool,
            'main_account_name': str,
            'name': str,
            'operation_date': datetime
        }

        self.attribute_map = {
            'account_type': 'accountType',
            'id': 'id',
            'is_active': 'isActive',
            'is_operating': 'isOperating',
            'main_account_name': 'mainAccountName',
            'name': 'name',
            'operation_date': 'operationDate'
        }

        self._account_type = account_type
        self._id = id
        self._is_active = is_active
        self._is_operating = is_operating
        self._main_account_name = main_account_name
        self._name = name
        self._operation_date = operation_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Account':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Account of this Account.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_type(self):
        """Gets the account_type of this Account.


        :return: The account_type of this Account.
        :rtype: AccountType
        """
        return self._account_type

    @account_type.setter
    def account_type(self, account_type):
        """Sets the account_type of this Account.


        :param account_type: The account_type of this Account.
        :type account_type: AccountType
        """

        self._account_type = account_type

    @property
    def id(self):
        """Gets the id of this Account.


        :return: The id of this Account.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Account.


        :param id: The id of this Account.
        :type id: str
        """

        self._id = id

    @property
    def is_active(self):
        """Gets the is_active of this Account.


        :return: The is_active of this Account.
        :rtype: bool
        """
        return self._is_active

    @is_active.setter
    def is_active(self, is_active):
        """Sets the is_active of this Account.


        :param is_active: The is_active of this Account.
        :type is_active: bool
        """

        self._is_active = is_active

    @property
    def is_operating(self):
        """Gets the is_operating of this Account.


        :return: The is_operating of this Account.
        :rtype: bool
        """
        return self._is_operating

    @is_operating.setter
    def is_operating(self, is_operating):
        """Sets the is_operating of this Account.


        :param is_operating: The is_operating of this Account.
        :type is_operating: bool
        """

        self._is_operating = is_operating

    @property
    def main_account_name(self):
        """Gets the main_account_name of this Account.


        :return: The main_account_name of this Account.
        :rtype: str
        """
        return self._main_account_name

    @main_account_name.setter
    def main_account_name(self, main_account_name):
        """Sets the main_account_name of this Account.


        :param main_account_name: The main_account_name of this Account.
        :type main_account_name: str
        """

        self._main_account_name = main_account_name

    @property
    def name(self):
        """Gets the name of this Account.


        :return: The name of this Account.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Account.


        :param name: The name of this Account.
        :type name: str
        """

        self._name = name

    @property
    def operation_date(self):
        """Gets the operation_date of this Account.


        :return: The operation_date of this Account.
        :rtype: datetime
        """
        return self._operation_date

    @operation_date.setter
    def operation_date(self, operation_date):
        """Sets the operation_date of this Account.


        :param operation_date: The operation_date of this Account.
        :type operation_date: datetime
        """

        self._operation_date = operation_date
