/**
 * License Manager API
 * ## Welcome!    The License Manager API allows you to create users, modify their names and emails, as well as add and remove roles from users.    ### ATTRIBUTES    |Attribute name | Description |  |:------------|--------------|  |accountName | Account name in VTEX License Manager |  |environment | Environment on which you want to run the query e.g. vtexcommercestable |  |userId      | Unique user identification string |  |roleId      | Integer that represents a role, can be looked up on the License Manager UI |
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AccountResponse from './model/AccountResponse';
import AccountResponseAppKey from './model/AccountResponseAppKey';
import AccountResponseContact from './model/AccountResponseContact';
import AccountResponseSponsor from './model/AccountResponseSponsor';
import AppKeyItems from './model/AppKeyItems';
import CreateUser200Response from './model/CreateUser200Response';
import CreateUser400Response from './model/CreateUser400Response';
import CreateUserRequest from './model/CreateUserRequest';
import CreatenewappkeyRequest from './model/CreatenewappkeyRequest';
import CreatenewappkeyResponse from './model/CreatenewappkeyResponse';
import GetRolesbyUser200ResponseInner from './model/GetRolesbyUser200ResponseInner';
import GetUser400Response from './model/GetUser400Response';
import Getappkeysfromaccount from './model/Getappkeysfromaccount';
import LicenseItems from './model/LicenseItems';
import LicenseItemsProductsInner from './model/LicenseItemsProductsInner';
import LicenseItemsProductsInnerEndpoints from './model/LicenseItemsProductsInnerEndpoints';
import ListRolesResponse from './model/ListRolesResponse';
import ListUsersResponse from './model/ListUsersResponse';
import Paging from './model/Paging';
import ProductItems from './model/ProductItems';
import RoleItems from './model/RoleItems';
import SiteItems from './model/SiteItems';
import StoreItems from './model/StoreItems';
import UpdateappkeyRequest from './model/UpdateappkeyRequest';
import UserItems from './model/UserItems';
import VLMError from './model/VLMError';
import AccountApi from './api/AccountApi';
import AppKeysApi from './api/AppKeysApi';
import RolesApi from './api/RolesApi';
import StoreApi from './api/StoreApi';
import UserApi from './api/UserApi';


/**
* ## Welcome!    The License Manager API allows you to create users, modify their names and emails, as well as add and remove roles from users.    ### ATTRIBUTES    |Attribute name | Description |  |:------------|--------------|  |accountName | Account name in VTEX License Manager |  |environment | Environment on which you want to run the query e.g. vtexcommercestable |  |userId      | Unique user identification string |  |roleId      | Integer that represents a role, can be looked up on the License Manager UI |.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var LicenseManagerApi = require('index'); // See note below*.
* var xxxSvc = new LicenseManagerApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new LicenseManagerApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new LicenseManagerApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new LicenseManagerApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AccountResponse model constructor.
     * @property {module:model/AccountResponse}
     */
    AccountResponse,

    /**
     * The AccountResponseAppKey model constructor.
     * @property {module:model/AccountResponseAppKey}
     */
    AccountResponseAppKey,

    /**
     * The AccountResponseContact model constructor.
     * @property {module:model/AccountResponseContact}
     */
    AccountResponseContact,

    /**
     * The AccountResponseSponsor model constructor.
     * @property {module:model/AccountResponseSponsor}
     */
    AccountResponseSponsor,

    /**
     * The AppKeyItems model constructor.
     * @property {module:model/AppKeyItems}
     */
    AppKeyItems,

    /**
     * The CreateUser200Response model constructor.
     * @property {module:model/CreateUser200Response}
     */
    CreateUser200Response,

    /**
     * The CreateUser400Response model constructor.
     * @property {module:model/CreateUser400Response}
     */
    CreateUser400Response,

    /**
     * The CreateUserRequest model constructor.
     * @property {module:model/CreateUserRequest}
     */
    CreateUserRequest,

    /**
     * The CreatenewappkeyRequest model constructor.
     * @property {module:model/CreatenewappkeyRequest}
     */
    CreatenewappkeyRequest,

    /**
     * The CreatenewappkeyResponse model constructor.
     * @property {module:model/CreatenewappkeyResponse}
     */
    CreatenewappkeyResponse,

    /**
     * The GetRolesbyUser200ResponseInner model constructor.
     * @property {module:model/GetRolesbyUser200ResponseInner}
     */
    GetRolesbyUser200ResponseInner,

    /**
     * The GetUser400Response model constructor.
     * @property {module:model/GetUser400Response}
     */
    GetUser400Response,

    /**
     * The Getappkeysfromaccount model constructor.
     * @property {module:model/Getappkeysfromaccount}
     */
    Getappkeysfromaccount,

    /**
     * The LicenseItems model constructor.
     * @property {module:model/LicenseItems}
     */
    LicenseItems,

    /**
     * The LicenseItemsProductsInner model constructor.
     * @property {module:model/LicenseItemsProductsInner}
     */
    LicenseItemsProductsInner,

    /**
     * The LicenseItemsProductsInnerEndpoints model constructor.
     * @property {module:model/LicenseItemsProductsInnerEndpoints}
     */
    LicenseItemsProductsInnerEndpoints,

    /**
     * The ListRolesResponse model constructor.
     * @property {module:model/ListRolesResponse}
     */
    ListRolesResponse,

    /**
     * The ListUsersResponse model constructor.
     * @property {module:model/ListUsersResponse}
     */
    ListUsersResponse,

    /**
     * The Paging model constructor.
     * @property {module:model/Paging}
     */
    Paging,

    /**
     * The ProductItems model constructor.
     * @property {module:model/ProductItems}
     */
    ProductItems,

    /**
     * The RoleItems model constructor.
     * @property {module:model/RoleItems}
     */
    RoleItems,

    /**
     * The SiteItems model constructor.
     * @property {module:model/SiteItems}
     */
    SiteItems,

    /**
     * The StoreItems model constructor.
     * @property {module:model/StoreItems}
     */
    StoreItems,

    /**
     * The UpdateappkeyRequest model constructor.
     * @property {module:model/UpdateappkeyRequest}
     */
    UpdateappkeyRequest,

    /**
     * The UserItems model constructor.
     * @property {module:model/UserItems}
     */
    UserItems,

    /**
     * The VLMError model constructor.
     * @property {module:model/VLMError}
     */
    VLMError,

    /**
    * The AccountApi service constructor.
    * @property {module:api/AccountApi}
    */
    AccountApi,

    /**
    * The AppKeysApi service constructor.
    * @property {module:api/AppKeysApi}
    */
    AppKeysApi,

    /**
    * The RolesApi service constructor.
    * @property {module:api/RolesApi}
    */
    RolesApi,

    /**
    * The StoreApi service constructor.
    * @property {module:api/StoreApi}
    */
    StoreApi,

    /**
    * The UserApi service constructor.
    * @property {module:api/UserApi}
    */
    UserApi
};
