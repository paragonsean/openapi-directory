/**
 * License Manager API
 * ## Welcome!    The License Manager API allows you to create users, modify their names and emails, as well as add and remove roles from users.    ### ATTRIBUTES    |Attribute name | Description |  |:------------|--------------|  |accountName | Account name in VTEX License Manager |  |environment | Environment on which you want to run the query e.g. vtexcommercestable |  |userId      | Unique user identification string |  |roleId      | Integer that represents a role, can be looked up on the License Manager UI |
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LicenseItemsProductsInnerEndpoints model module.
 * @module model/LicenseItemsProductsInnerEndpoints
 * @version 1.0
 */
class LicenseItemsProductsInnerEndpoints {
    /**
     * Constructs a new <code>LicenseItemsProductsInnerEndpoints</code>.
     * @alias module:model/LicenseItemsProductsInnerEndpoints
     */
    constructor() { 
        
        LicenseItemsProductsInnerEndpoints.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LicenseItemsProductsInnerEndpoints</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LicenseItemsProductsInnerEndpoints} obj Optional instance to populate.
     * @return {module:model/LicenseItemsProductsInnerEndpoints} The populated <code>LicenseItemsProductsInnerEndpoints</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LicenseItemsProductsInnerEndpoints();

            if (data.hasOwnProperty('consoleUrl')) {
                obj['consoleUrl'] = ApiClient.convertToType(data['consoleUrl'], 'String');
            }
            if (data.hasOwnProperty('webApiUrl')) {
                obj['webApiUrl'] = ApiClient.convertToType(data['webApiUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LicenseItemsProductsInnerEndpoints</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LicenseItemsProductsInnerEndpoints</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['consoleUrl'] && !(typeof data['consoleUrl'] === 'string' || data['consoleUrl'] instanceof String)) {
            throw new Error("Expected the field `consoleUrl` to be a primitive type in the JSON string but got " + data['consoleUrl']);
        }
        // ensure the json data is a string
        if (data['webApiUrl'] && !(typeof data['webApiUrl'] === 'string' || data['webApiUrl'] instanceof String)) {
            throw new Error("Expected the field `webApiUrl` to be a primitive type in the JSON string but got " + data['webApiUrl']);
        }

        return true;
    }


}



/**
 * @member {String} consoleUrl
 */
LicenseItemsProductsInnerEndpoints.prototype['consoleUrl'] = undefined;

/**
 * @member {String} webApiUrl
 */
LicenseItemsProductsInnerEndpoints.prototype['webApiUrl'] = undefined;






export default LicenseItemsProductsInnerEndpoints;

