/**
 * License Manager API
 * ## Welcome!    The License Manager API allows you to create users, modify their names and emails, as well as add and remove roles from users.    ### ATTRIBUTES    |Attribute name | Description |  |:------------|--------------|  |accountName | Account name in VTEX License Manager |  |environment | Environment on which you want to run the query e.g. vtexcommercestable |  |userId      | Unique user identification string |  |roleId      | Integer that represents a role, can be looked up on the License Manager UI |
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreatenewappkeyRequest from '../model/CreatenewappkeyRequest';
import CreatenewappkeyResponse from '../model/CreatenewappkeyResponse';
import Getappkeysfromaccount from '../model/Getappkeysfromaccount';
import UpdateappkeyRequest from '../model/UpdateappkeyRequest';
import VLMError from '../model/VLMError';

/**
* AppKeys service.
* @module api/AppKeysApi
* @version 1.0
*/
export default class AppKeysApi {

    /**
    * Constructs a new AppKeysApi. 
    * @alias module:api/AppKeysApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createnewappkey operation.
     * @callback module:api/AppKeysApi~createnewappkeyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreatenewappkeyResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create new appkey
     * Creates a new pair of `appKey` and `appToken`.
     * @param {module:model/CreatenewappkeyRequest} createnewappkeyRequest 
     * @param {module:api/AppKeysApi~createnewappkeyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreatenewappkeyResponse}
     */
    createnewappkey(createnewappkeyRequest, callback) {
      let postBody = createnewappkeyRequest;
      // verify the required parameter 'createnewappkeyRequest' is set
      if (createnewappkeyRequest === undefined || createnewappkeyRequest === null) {
        throw new Error("Missing the required parameter 'createnewappkeyRequest' when calling createnewappkey");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['appToken', 'appKey'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreatenewappkeyResponse;
      return this.apiClient.callApi(
        '/api/vlm/appkeys', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getappkeysfromaccount operation.
     * @callback module:api/AppKeysApi~getappkeysfromaccountCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Getappkeysfromaccount>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get appKeys from account
     * Gets all application keys from an account.
     * @param {String} contentType The media type of the body of the request. Default value for license manager protocol is application/json
     * @param {module:api/AppKeysApi~getappkeysfromaccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Getappkeysfromaccount>}
     */
    getappkeysfromaccount(contentType, callback) {
      let postBody = null;
      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling getappkeysfromaccount");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Content-Type': contentType
      };
      let formParams = {
      };

      let authNames = ['appToken', 'appKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Getappkeysfromaccount];
      return this.apiClient.callApi(
        '/api/vlm/appkeys', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateappkey operation.
     * @callback module:api/AppKeysApi~updateappkeyCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update appkey
     * Activates or deactivates an `appKey` by its ID.
     * @param {String} id ID from the appKey which will be updated
     * @param {module:model/UpdateappkeyRequest} updateappkeyRequest Request body for updating AppKeys
     * @param {module:api/AppKeysApi~updateappkeyCallback} callback The callback function, accepting three arguments: error, data, response
     */
    updateappkey(id, updateappkeyRequest, callback) {
      let postBody = updateappkeyRequest;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling updateappkey");
      }
      // verify the required parameter 'updateappkeyRequest' is set
      if (updateappkeyRequest === undefined || updateappkeyRequest === null) {
        throw new Error("Missing the required parameter 'updateappkeyRequest' when calling updateappkey");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['appToken', 'appKey'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/vlm/appkeys/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
