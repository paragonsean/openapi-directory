/**
 * License Manager API
 * ## Welcome!    The License Manager API allows you to create users, modify their names and emails, as well as add and remove roles from users.    ### ATTRIBUTES    |Attribute name | Description |  |:------------|--------------|  |accountName | Account name in VTEX License Manager |  |environment | Environment on which you want to run the query e.g. vtexcommercestable |  |userId      | Unique user identification string |  |roleId      | Integer that represents a role, can be looked up on the License Manager UI |
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.LicenseManagerApi);
  }
}(this, function(expect, LicenseManagerApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new LicenseManagerApi.AccountResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AccountResponse', function() {
    it('should create an instance of AccountResponse', function() {
      // uncomment below and update the code to test AccountResponse
      //var instance = new LicenseManagerApi.AccountResponse();
      //expect(instance).to.be.a(LicenseManagerApi.AccountResponse);
    });

    it('should have the property accountName (base name: "accountName")', function() {
      // uncomment below and update the code to test the property accountName
      //var instance = new LicenseManagerApi.AccountResponse();
      //expect(instance).to.be();
    });

    it('should have the property address (base name: "address")', function() {
      // uncomment below and update the code to test the property address
      //var instance = new LicenseManagerApi.AccountResponse();
      //expect(instance).to.be();
    });

    it('should have the property appKey (base name: "appKey")', function() {
      // uncomment below and update the code to test the property appKey
      //var instance = new LicenseManagerApi.AccountResponse();
      //expect(instance).to.be();
    });

    it('should have the property appKeys (base name: "appKeys")', function() {
      // uncomment below and update the code to test the property appKeys
      //var instance = new LicenseManagerApi.AccountResponse();
      //expect(instance).to.be();
    });

    it('should have the property city (base name: "city")', function() {
      // uncomment below and update the code to test the property city
      //var instance = new LicenseManagerApi.AccountResponse();
      //expect(instance).to.be();
    });

    it('should have the property cnpj (base name: "cnpj")', function() {
      // uncomment below and update the code to test the property cnpj
      //var instance = new LicenseManagerApi.AccountResponse();
      //expect(instance).to.be();
    });

    it('should have the property companyName (base name: "companyName")', function() {
      // uncomment below and update the code to test the property companyName
      //var instance = new LicenseManagerApi.AccountResponse();
      //expect(instance).to.be();
    });

    it('should have the property complement (base name: "complement")', function() {
      // uncomment below and update the code to test the property complement
      //var instance = new LicenseManagerApi.AccountResponse();
      //expect(instance).to.be();
    });

    it('should have the property contact (base name: "contact")', function() {
      // uncomment below and update the code to test the property contact
      //var instance = new LicenseManagerApi.AccountResponse();
      //expect(instance).to.be();
    });

    it('should have the property country (base name: "country")', function() {
      // uncomment below and update the code to test the property country
      //var instance = new LicenseManagerApi.AccountResponse();
      //expect(instance).to.be();
    });

    it('should have the property creationDate (base name: "creationDate")', function() {
      // uncomment below and update the code to test the property creationDate
      //var instance = new LicenseManagerApi.AccountResponse();
      //expect(instance).to.be();
    });

    it('should have the property defaultUrl (base name: "defaultUrl")', function() {
      // uncomment below and update the code to test the property defaultUrl
      //var instance = new LicenseManagerApi.AccountResponse();
      //expect(instance).to.be();
    });

    it('should have the property district (base name: "district")', function() {
      // uncomment below and update the code to test the property district
      //var instance = new LicenseManagerApi.AccountResponse();
      //expect(instance).to.be();
    });

    it('should have the property hasLogo (base name: "hasLogo")', function() {
      // uncomment below and update the code to test the property hasLogo
      //var instance = new LicenseManagerApi.AccountResponse();
      //expect(instance).to.be();
    });

    it('should have the property haveParentAccount (base name: "haveParentAccount")', function() {
      // uncomment below and update the code to test the property haveParentAccount
      //var instance = new LicenseManagerApi.AccountResponse();
      //expect(instance).to.be();
    });

    it('should have the property hosts (base name: "hosts")', function() {
      // uncomment below and update the code to test the property hosts
      //var instance = new LicenseManagerApi.AccountResponse();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new LicenseManagerApi.AccountResponse();
      //expect(instance).to.be();
    });

    it('should have the property inactivationDate (base name: "inactivationDate")', function() {
      // uncomment below and update the code to test the property inactivationDate
      //var instance = new LicenseManagerApi.AccountResponse();
      //expect(instance).to.be();
    });

    it('should have the property isActive (base name: "isActive")', function() {
      // uncomment below and update the code to test the property isActive
      //var instance = new LicenseManagerApi.AccountResponse();
      //expect(instance).to.be();
    });

    it('should have the property isOperating (base name: "isOperating")', function() {
      // uncomment below and update the code to test the property isOperating
      //var instance = new LicenseManagerApi.AccountResponse();
      //expect(instance).to.be();
    });

    it('should have the property licenses (base name: "licenses")', function() {
      // uncomment below and update the code to test the property licenses
      //var instance = new LicenseManagerApi.AccountResponse();
      //expect(instance).to.be();
    });

    it('should have the property logo (base name: "logo")', function() {
      // uncomment below and update the code to test the property logo
      //var instance = new LicenseManagerApi.AccountResponse();
      //expect(instance).to.be();
    });

    it('should have the property lv (base name: "lv")', function() {
      // uncomment below and update the code to test the property lv
      //var instance = new LicenseManagerApi.AccountResponse();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new LicenseManagerApi.AccountResponse();
      //expect(instance).to.be();
    });

    it('should have the property number (base name: "number")', function() {
      // uncomment below and update the code to test the property number
      //var instance = new LicenseManagerApi.AccountResponse();
      //expect(instance).to.be();
    });

    it('should have the property operationDate (base name: "operationDate")', function() {
      // uncomment below and update the code to test the property operationDate
      //var instance = new LicenseManagerApi.AccountResponse();
      //expect(instance).to.be();
    });

    it('should have the property parentAccountId (base name: "parentAccountId")', function() {
      // uncomment below and update the code to test the property parentAccountId
      //var instance = new LicenseManagerApi.AccountResponse();
      //expect(instance).to.be();
    });

    it('should have the property parentAccountName (base name: "parentAccountName")', function() {
      // uncomment below and update the code to test the property parentAccountName
      //var instance = new LicenseManagerApi.AccountResponse();
      //expect(instance).to.be();
    });

    it('should have the property postalCode (base name: "postalCode")', function() {
      // uncomment below and update the code to test the property postalCode
      //var instance = new LicenseManagerApi.AccountResponse();
      //expect(instance).to.be();
    });

    it('should have the property sites (base name: "sites")', function() {
      // uncomment below and update the code to test the property sites
      //var instance = new LicenseManagerApi.AccountResponse();
      //expect(instance).to.be();
    });

    it('should have the property sponsor (base name: "sponsor")', function() {
      // uncomment below and update the code to test the property sponsor
      //var instance = new LicenseManagerApi.AccountResponse();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new LicenseManagerApi.AccountResponse();
      //expect(instance).to.be();
    });

    it('should have the property telephone (base name: "telephone")', function() {
      // uncomment below and update the code to test the property telephone
      //var instance = new LicenseManagerApi.AccountResponse();
      //expect(instance).to.be();
    });

    it('should have the property tradingName (base name: "tradingName")', function() {
      // uncomment below and update the code to test the property tradingName
      //var instance = new LicenseManagerApi.AccountResponse();
      //expect(instance).to.be();
    });

  });

}));
