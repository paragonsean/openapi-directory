# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.product_items import ProductItems
from openapi_server import util


class RoleItems(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, is_admin: bool=None, logins: str=None, name: str=None, products: List[ProductItems]=None, resources: str=None, role_type: int=None):
        """RoleItems - a model defined in OpenAPI

        :param id: The id of this RoleItems.
        :param is_admin: The is_admin of this RoleItems.
        :param logins: The logins of this RoleItems.
        :param name: The name of this RoleItems.
        :param products: The products of this RoleItems.
        :param resources: The resources of this RoleItems.
        :param role_type: The role_type of this RoleItems.
        """
        self.openapi_types = {
            'id': int,
            'is_admin': bool,
            'logins': str,
            'name': str,
            'products': List[ProductItems],
            'resources': str,
            'role_type': int
        }

        self.attribute_map = {
            'id': 'id',
            'is_admin': 'isAdmin',
            'logins': 'logins',
            'name': 'name',
            'products': 'products',
            'resources': 'resources',
            'role_type': 'roleType'
        }

        self._id = id
        self._is_admin = is_admin
        self._logins = logins
        self._name = name
        self._products = products
        self._resources = resources
        self._role_type = role_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RoleItems':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RoleItems of this RoleItems.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this RoleItems.

        ID of the role

        :return: The id of this RoleItems.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this RoleItems.

        ID of the role

        :param id: The id of this RoleItems.
        :type id: int
        """

        self._id = id

    @property
    def is_admin(self):
        """Gets the is_admin of this RoleItems.

        If the role is admin

        :return: The is_admin of this RoleItems.
        :rtype: bool
        """
        return self._is_admin

    @is_admin.setter
    def is_admin(self, is_admin):
        """Sets the is_admin of this RoleItems.

        If the role is admin

        :param is_admin: The is_admin of this RoleItems.
        :type is_admin: bool
        """

        self._is_admin = is_admin

    @property
    def logins(self):
        """Gets the logins of this RoleItems.


        :return: The logins of this RoleItems.
        :rtype: str
        """
        return self._logins

    @logins.setter
    def logins(self, logins):
        """Sets the logins of this RoleItems.


        :param logins: The logins of this RoleItems.
        :type logins: str
        """

        self._logins = logins

    @property
    def name(self):
        """Gets the name of this RoleItems.

        Name of the role

        :return: The name of this RoleItems.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this RoleItems.

        Name of the role

        :param name: The name of this RoleItems.
        :type name: str
        """

        self._name = name

    @property
    def products(self):
        """Gets the products of this RoleItems.

        Array of product objects

        :return: The products of this RoleItems.
        :rtype: List[ProductItems]
        """
        return self._products

    @products.setter
    def products(self, products):
        """Sets the products of this RoleItems.

        Array of product objects

        :param products: The products of this RoleItems.
        :type products: List[ProductItems]
        """

        self._products = products

    @property
    def resources(self):
        """Gets the resources of this RoleItems.


        :return: The resources of this RoleItems.
        :rtype: str
        """
        return self._resources

    @resources.setter
    def resources(self, resources):
        """Sets the resources of this RoleItems.


        :param resources: The resources of this RoleItems.
        :type resources: str
        """

        self._resources = resources

    @property
    def role_type(self):
        """Gets the role_type of this RoleItems.

        Returns 1 for custom roles, and 0 otherwise

        :return: The role_type of this RoleItems.
        :rtype: int
        """
        return self._role_type

    @role_type.setter
    def role_type(self, role_type):
        """Sets the role_type of this RoleItems.

        Returns 1 for custom roles, and 0 otherwise

        :param role_type: The role_type of this RoleItems.
        :type role_type: int
        """

        self._role_type = role_type
