# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SiteItems(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, lv: str=None, aliases: List[str]=None, domains: List[str]=None, hosts: List[str]=None, id: float=None, logo: str=None, monetary_unit_id: float=None, name: str=None, trading_name: str=None):
        """SiteItems - a model defined in OpenAPI

        :param lv: The lv of this SiteItems.
        :param aliases: The aliases of this SiteItems.
        :param domains: The domains of this SiteItems.
        :param hosts: The hosts of this SiteItems.
        :param id: The id of this SiteItems.
        :param logo: The logo of this SiteItems.
        :param monetary_unit_id: The monetary_unit_id of this SiteItems.
        :param name: The name of this SiteItems.
        :param trading_name: The trading_name of this SiteItems.
        """
        self.openapi_types = {
            'lv': str,
            'aliases': List[str],
            'domains': List[str],
            'hosts': List[str],
            'id': float,
            'logo': str,
            'monetary_unit_id': float,
            'name': str,
            'trading_name': str
        }

        self.attribute_map = {
            'lv': 'LV',
            'aliases': 'aliases',
            'domains': 'domains',
            'hosts': 'hosts',
            'id': 'id',
            'logo': 'logo',
            'monetary_unit_id': 'monetaryUnitId',
            'name': 'name',
            'trading_name': 'tradingName'
        }

        self._lv = lv
        self._aliases = aliases
        self._domains = domains
        self._hosts = hosts
        self._id = id
        self._logo = logo
        self._monetary_unit_id = monetary_unit_id
        self._name = name
        self._trading_name = trading_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SiteItems':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SiteItems of this SiteItems.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def lv(self):
        """Gets the lv of this SiteItems.


        :return: The lv of this SiteItems.
        :rtype: str
        """
        return self._lv

    @lv.setter
    def lv(self, lv):
        """Sets the lv of this SiteItems.


        :param lv: The lv of this SiteItems.
        :type lv: str
        """

        self._lv = lv

    @property
    def aliases(self):
        """Gets the aliases of this SiteItems.


        :return: The aliases of this SiteItems.
        :rtype: List[str]
        """
        return self._aliases

    @aliases.setter
    def aliases(self, aliases):
        """Sets the aliases of this SiteItems.


        :param aliases: The aliases of this SiteItems.
        :type aliases: List[str]
        """

        self._aliases = aliases

    @property
    def domains(self):
        """Gets the domains of this SiteItems.


        :return: The domains of this SiteItems.
        :rtype: List[str]
        """
        return self._domains

    @domains.setter
    def domains(self, domains):
        """Sets the domains of this SiteItems.


        :param domains: The domains of this SiteItems.
        :type domains: List[str]
        """

        self._domains = domains

    @property
    def hosts(self):
        """Gets the hosts of this SiteItems.

        Hosts associated to the store

        :return: The hosts of this SiteItems.
        :rtype: List[str]
        """
        return self._hosts

    @hosts.setter
    def hosts(self, hosts):
        """Sets the hosts of this SiteItems.

        Hosts associated to the store

        :param hosts: The hosts of this SiteItems.
        :type hosts: List[str]
        """

        self._hosts = hosts

    @property
    def id(self):
        """Gets the id of this SiteItems.

        ID of the store

        :return: The id of this SiteItems.
        :rtype: float
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SiteItems.

        ID of the store

        :param id: The id of this SiteItems.
        :type id: float
        """

        self._id = id

    @property
    def logo(self):
        """Gets the logo of this SiteItems.


        :return: The logo of this SiteItems.
        :rtype: str
        """
        return self._logo

    @logo.setter
    def logo(self, logo):
        """Sets the logo of this SiteItems.


        :param logo: The logo of this SiteItems.
        :type logo: str
        """

        self._logo = logo

    @property
    def monetary_unit_id(self):
        """Gets the monetary_unit_id of this SiteItems.


        :return: The monetary_unit_id of this SiteItems.
        :rtype: float
        """
        return self._monetary_unit_id

    @monetary_unit_id.setter
    def monetary_unit_id(self, monetary_unit_id):
        """Sets the monetary_unit_id of this SiteItems.


        :param monetary_unit_id: The monetary_unit_id of this SiteItems.
        :type monetary_unit_id: float
        """

        self._monetary_unit_id = monetary_unit_id

    @property
    def name(self):
        """Gets the name of this SiteItems.

        Store name

        :return: The name of this SiteItems.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SiteItems.

        Store name

        :param name: The name of this SiteItems.
        :type name: str
        """

        self._name = name

    @property
    def trading_name(self):
        """Gets the trading_name of this SiteItems.

        Trading name of the store

        :return: The trading_name of this SiteItems.
        :rtype: str
        """
        return self._trading_name

    @trading_name.setter
    def trading_name(self, trading_name):
        """Sets the trading_name of this SiteItems.

        Trading name of the store

        :param trading_name: The trading_name of this SiteItems.
        :type trading_name: str
        """

        self._trading_name = trading_name
