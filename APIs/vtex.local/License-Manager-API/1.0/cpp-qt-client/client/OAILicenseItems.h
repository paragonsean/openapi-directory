/**
 * License Manager API
 * ## Welcome!    The License Manager API allows you to create users, modify their names and emails, as well as add and remove roles from users.    ### ATTRIBUTES    |Attribute name | Description |  |:------------|--------------|  |accountName | Account name in VTEX License Manager |  |environment | Environment on which you want to run the query e.g. vtexcommercestable |  |userId      | Unique user identification string |  |roleId      | Integer that represents a role, can be looked up on the License Manager UI |
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILicenseItems.h
 *
 * Object representing licenses
 */

#ifndef OAILicenseItems_H
#define OAILicenseItems_H

#include <QJsonObject>

#include "OAILicenseItems_products_inner.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILicenseItems_products_inner;

class OAILicenseItems : public OAIObject {
public:
    OAILicenseItems();
    OAILicenseItems(QString json);
    ~OAILicenseItems() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    Q_DECL_DEPRECATED QDateTime getExpiration() const;
    Q_DECL_DEPRECATED void setExpiration(const QDateTime &expiration);
    Q_DECL_DEPRECATED bool is_expiration_Set() const;
    Q_DECL_DEPRECATED bool is_expiration_Valid() const;

    double getId() const;
    void setId(const double &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsPurchased() const;
    void setIsPurchased(const bool &is_purchased);
    bool is_is_purchased_Set() const;
    bool is_is_purchased_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAILicenseItems_products_inner> getProducts() const;
    void setProducts(const QList<OAILicenseItems_products_inner> &products);
    bool is_products_Set() const;
    bool is_products_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_expiration;
    bool m_expiration_isSet;
    bool m_expiration_isValid;

    double m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_purchased;
    bool m_is_purchased_isSet;
    bool m_is_purchased_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAILicenseItems_products_inner> m_products;
    bool m_products_isSet;
    bool m_products_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILicenseItems)

#endif // OAILicenseItems_H
