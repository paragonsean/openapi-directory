/**
 * License Manager API
 * ## Welcome!    The License Manager API allows you to create users, modify their names and emails, as well as add and remove roles from users.    ### ATTRIBUTES    |Attribute name | Description |  |:------------|--------------|  |accountName | Account name in VTEX License Manager |  |environment | Environment on which you want to run the query e.g. vtexcommercestable |  |userId      | Unique user identification string |  |roleId      | Integer that represents a role, can be looked up on the License Manager UI |
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILicenseItems_products_inner_endpoints.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILicenseItems_products_inner_endpoints::OAILicenseItems_products_inner_endpoints(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILicenseItems_products_inner_endpoints::OAILicenseItems_products_inner_endpoints() {
    this->initializeModel();
}

OAILicenseItems_products_inner_endpoints::~OAILicenseItems_products_inner_endpoints() {}

void OAILicenseItems_products_inner_endpoints::initializeModel() {

    m_console_url_isSet = false;
    m_console_url_isValid = false;

    m_web_api_url_isSet = false;
    m_web_api_url_isValid = false;
}

void OAILicenseItems_products_inner_endpoints::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILicenseItems_products_inner_endpoints::fromJsonObject(QJsonObject json) {

    m_console_url_isValid = ::OpenAPI::fromJsonValue(m_console_url, json[QString("consoleUrl")]);
    m_console_url_isSet = !json[QString("consoleUrl")].isNull() && m_console_url_isValid;

    m_web_api_url_isValid = ::OpenAPI::fromJsonValue(m_web_api_url, json[QString("webApiUrl")]);
    m_web_api_url_isSet = !json[QString("webApiUrl")].isNull() && m_web_api_url_isValid;
}

QString OAILicenseItems_products_inner_endpoints::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILicenseItems_products_inner_endpoints::asJsonObject() const {
    QJsonObject obj;
    if (m_console_url_isSet) {
        obj.insert(QString("consoleUrl"), ::OpenAPI::toJsonValue(m_console_url));
    }
    if (m_web_api_url_isSet) {
        obj.insert(QString("webApiUrl"), ::OpenAPI::toJsonValue(m_web_api_url));
    }
    return obj;
}

QString OAILicenseItems_products_inner_endpoints::getConsoleUrl() const {
    return m_console_url;
}
void OAILicenseItems_products_inner_endpoints::setConsoleUrl(const QString &console_url) {
    m_console_url = console_url;
    m_console_url_isSet = true;
}

bool OAILicenseItems_products_inner_endpoints::is_console_url_Set() const{
    return m_console_url_isSet;
}

bool OAILicenseItems_products_inner_endpoints::is_console_url_Valid() const{
    return m_console_url_isValid;
}

QString OAILicenseItems_products_inner_endpoints::getWebApiUrl() const {
    return m_web_api_url;
}
void OAILicenseItems_products_inner_endpoints::setWebApiUrl(const QString &web_api_url) {
    m_web_api_url = web_api_url;
    m_web_api_url_isSet = true;
}

bool OAILicenseItems_products_inner_endpoints::is_web_api_url_Set() const{
    return m_web_api_url_isSet;
}

bool OAILicenseItems_products_inner_endpoints::is_web_api_url_Valid() const{
    return m_web_api_url_isValid;
}

bool OAILicenseItems_products_inner_endpoints::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_console_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_web_api_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILicenseItems_products_inner_endpoints::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
