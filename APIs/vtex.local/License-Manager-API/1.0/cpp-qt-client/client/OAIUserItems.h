/**
 * License Manager API
 * ## Welcome!    The License Manager API allows you to create users, modify their names and emails, as well as add and remove roles from users.    ### ATTRIBUTES    |Attribute name | Description |  |:------------|--------------|  |accountName | Account name in VTEX License Manager |  |environment | Environment on which you want to run the query e.g. vtexcommercestable |  |userId      | Unique user identification string |  |roleId      | Integer that represents a role, can be looked up on the License Manager UI |
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserItems.h
 *
 * Object representing users
 */

#ifndef OAIUserItems_H
#define OAIUserItems_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUserItems : public OAIObject {
public:
    OAIUserItems();
    OAIUserItems(QString json);
    ~OAIUserItems() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAccountNames() const;
    void setAccountNames(const QList<QString> &account_names);
    bool is_account_names_Set() const;
    bool is_account_names_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsAdmin() const;
    void setIsAdmin(const bool &is_admin);
    bool is_is_admin_Set() const;
    bool is_is_admin_Valid() const;

    bool isIsBlocked() const;
    void setIsBlocked(const bool &is_blocked);
    bool is_is_blocked_Set() const;
    bool is_is_blocked_Valid() const;

    bool isIsReliable() const;
    void setIsReliable(const bool &is_reliable);
    bool is_is_reliable_Set() const;
    bool is_is_reliable_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<QString> getRoles() const;
    void setRoles(const QList<QString> &roles);
    bool is_roles_Set() const;
    bool is_roles_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_account_names;
    bool m_account_names_isSet;
    bool m_account_names_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_admin;
    bool m_is_admin_isSet;
    bool m_is_admin_isValid;

    bool m_is_blocked;
    bool m_is_blocked_isSet;
    bool m_is_blocked_isValid;

    bool m_is_reliable;
    bool m_is_reliable_isSet;
    bool m_is_reliable_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<QString> m_roles;
    bool m_roles_isSet;
    bool m_roles_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserItems)

#endif // OAIUserItems_H
