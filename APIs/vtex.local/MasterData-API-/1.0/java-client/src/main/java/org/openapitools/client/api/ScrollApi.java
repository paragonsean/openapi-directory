/*
 * MasterData API - v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;



import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ScrollApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ScrollApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ScrollApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for scrolldocuments
     * @param contentType Type of the content being sent (required)
     * @param accept HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand  (required)
     * @param acronym Identifies the kind of data (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call scrolldocumentsCall(String contentType, String accept, String acronym, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/dataentities/{acronym}/scroll"
            .replace("{" + "acronym" + "}", localVarApiClient.escapeString(acronym.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (contentType != null) {
            localVarHeaderParams.put("Content-Type", localVarApiClient.parameterToString(contentType));
        }

        if (accept != null) {
            localVarHeaderParams.put("Accept", localVarApiClient.parameterToString(accept));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "appToken", "appKey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call scrolldocumentsValidateBeforeCall(String contentType, String accept, String acronym, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'contentType' is set
        if (contentType == null) {
            throw new ApiException("Missing the required parameter 'contentType' when calling scrolldocuments(Async)");
        }

        // verify the required parameter 'accept' is set
        if (accept == null) {
            throw new ApiException("Missing the required parameter 'accept' when calling scrolldocuments(Async)");
        }

        // verify the required parameter 'acronym' is set
        if (acronym == null) {
            throw new ApiException("Missing the required parameter 'acronym' when calling scrolldocuments(Async)");
        }

        return scrolldocumentsCall(contentType, accept, acronym, _callback);

    }

    /**
     * Scroll documents
     * Scrolls through documents according to the query parameter filters.    &gt; Avoid sending too many requests with wildcards (&#x60;*&#x60;) in the search parameters or that use the &#x60;keyword&#x60; parameter. This may lead to this endpoint being temporarily blocked for your account. If this happens you will receive an error with status code &#x60;429&#x60;.    Use all the features of &#x60;search&#x60; API to perform filters.    In the first request, the &#x60;X-VTEX-MD-TOKEN&#x60; token will be obtained in the header. This token must be passed to the next request in the query string &#x60;_token&#x60; parameter. The token has a timeout of 10 minutes, which refreshes after each request.    **ATTENTION:** To inform the number of documents per request, use the query string parameter &#x60;_size&#x60;, which has the maximum value of 1000.    After the token is obtained it is no longer necessary to send the filter or document size per page parameters. You only need to resend the token until the document collection is empty.    ### First request example:  &#x60;&#x60;&#x60;  /dataentities/CL/scroll?isCluster&#x3D;true&amp;_size&#x3D;250&amp;_fields&#x3D;email,firstName  &#x60;&#x60;&#x60;    After the first request, retrieve the token in the header &#x60;X-VTEX-MD-TOKEN&#x60; and make the next requests.    ### Example of subsequent requests:  &#x60;&#x60;&#x60;  /dataentities/CL/scroll?_token&#x3D;tokenvalueexample  &#x60;&#x60;&#x60;
     * @param contentType Type of the content being sent (required)
     * @param accept HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand  (required)
     * @param acronym Identifies the kind of data (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests </td><td>  -  </td></tr>
     </table>
     */
    public void scrolldocuments(String contentType, String accept, String acronym) throws ApiException {
        scrolldocumentsWithHttpInfo(contentType, accept, acronym);
    }

    /**
     * Scroll documents
     * Scrolls through documents according to the query parameter filters.    &gt; Avoid sending too many requests with wildcards (&#x60;*&#x60;) in the search parameters or that use the &#x60;keyword&#x60; parameter. This may lead to this endpoint being temporarily blocked for your account. If this happens you will receive an error with status code &#x60;429&#x60;.    Use all the features of &#x60;search&#x60; API to perform filters.    In the first request, the &#x60;X-VTEX-MD-TOKEN&#x60; token will be obtained in the header. This token must be passed to the next request in the query string &#x60;_token&#x60; parameter. The token has a timeout of 10 minutes, which refreshes after each request.    **ATTENTION:** To inform the number of documents per request, use the query string parameter &#x60;_size&#x60;, which has the maximum value of 1000.    After the token is obtained it is no longer necessary to send the filter or document size per page parameters. You only need to resend the token until the document collection is empty.    ### First request example:  &#x60;&#x60;&#x60;  /dataentities/CL/scroll?isCluster&#x3D;true&amp;_size&#x3D;250&amp;_fields&#x3D;email,firstName  &#x60;&#x60;&#x60;    After the first request, retrieve the token in the header &#x60;X-VTEX-MD-TOKEN&#x60; and make the next requests.    ### Example of subsequent requests:  &#x60;&#x60;&#x60;  /dataentities/CL/scroll?_token&#x3D;tokenvalueexample  &#x60;&#x60;&#x60;
     * @param contentType Type of the content being sent (required)
     * @param accept HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand  (required)
     * @param acronym Identifies the kind of data (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> scrolldocumentsWithHttpInfo(String contentType, String accept, String acronym) throws ApiException {
        okhttp3.Call localVarCall = scrolldocumentsValidateBeforeCall(contentType, accept, acronym, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Scroll documents (asynchronously)
     * Scrolls through documents according to the query parameter filters.    &gt; Avoid sending too many requests with wildcards (&#x60;*&#x60;) in the search parameters or that use the &#x60;keyword&#x60; parameter. This may lead to this endpoint being temporarily blocked for your account. If this happens you will receive an error with status code &#x60;429&#x60;.    Use all the features of &#x60;search&#x60; API to perform filters.    In the first request, the &#x60;X-VTEX-MD-TOKEN&#x60; token will be obtained in the header. This token must be passed to the next request in the query string &#x60;_token&#x60; parameter. The token has a timeout of 10 minutes, which refreshes after each request.    **ATTENTION:** To inform the number of documents per request, use the query string parameter &#x60;_size&#x60;, which has the maximum value of 1000.    After the token is obtained it is no longer necessary to send the filter or document size per page parameters. You only need to resend the token until the document collection is empty.    ### First request example:  &#x60;&#x60;&#x60;  /dataentities/CL/scroll?isCluster&#x3D;true&amp;_size&#x3D;250&amp;_fields&#x3D;email,firstName  &#x60;&#x60;&#x60;    After the first request, retrieve the token in the header &#x60;X-VTEX-MD-TOKEN&#x60; and make the next requests.    ### Example of subsequent requests:  &#x60;&#x60;&#x60;  /dataentities/CL/scroll?_token&#x3D;tokenvalueexample  &#x60;&#x60;&#x60;
     * @param contentType Type of the content being sent (required)
     * @param accept HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand  (required)
     * @param acronym Identifies the kind of data (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call scrolldocumentsAsync(String contentType, String accept, String acronym, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = scrolldocumentsValidateBeforeCall(contentType, accept, acronym, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
