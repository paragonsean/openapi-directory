# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ar_e_ventila_o import ArEVentilaO
from openapi_server import util


class Scores(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ar_e_ventilao: List[ArEVentilaO]=None):
        """Scores - a model defined in OpenAPI

        :param ar_e_ventilao: The ar_e_ventilao of this Scores.
        """
        self.openapi_types = {
            'ar_e_ventilao': List[ArEVentilaO]
        }

        self.attribute_map = {
            'ar_e_ventilao': 'Ar e Ventilação'
        }

        self._ar_e_ventilao = ar_e_ventilao

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Scores':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Scores of this Scores.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ar_e_ventilao(self):
        """Gets the ar_e_ventilao of this Scores.

        

        :return: The ar_e_ventilao of this Scores.
        :rtype: List[ArEVentilaO]
        """
        return self._ar_e_ventilao

    @ar_e_ventilao.setter
    def ar_e_ventilao(self, ar_e_ventilao):
        """Sets the ar_e_ventilao of this Scores.

        

        :param ar_e_ventilao: The ar_e_ventilao of this Scores.
        :type ar_e_ventilao: List[ArEVentilaO]
        """
        if ar_e_ventilao is None:
            raise ValueError("Invalid value for `ar_e_ventilao`, must not be `None`")

        self._ar_e_ventilao = ar_e_ventilao
