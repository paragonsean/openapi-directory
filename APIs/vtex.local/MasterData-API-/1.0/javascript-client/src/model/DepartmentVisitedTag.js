/**
 * MasterData API - v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Scores from './Scores';

/**
 * The DepartmentVisitedTag model module.
 * @module model/DepartmentVisitedTag
 * @version 1.0
 */
class DepartmentVisitedTag {
    /**
     * Constructs a new <code>DepartmentVisitedTag</code>.
     * @alias module:model/DepartmentVisitedTag
     * @param displayValue {String} 
     * @param scores {module:model/Scores} 
     */
    constructor(displayValue, scores) { 
        
        DepartmentVisitedTag.initialize(this, displayValue, scores);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, displayValue, scores) { 
        obj['DisplayValue'] = displayValue;
        obj['Scores'] = scores;
    }

    /**
     * Constructs a <code>DepartmentVisitedTag</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DepartmentVisitedTag} obj Optional instance to populate.
     * @return {module:model/DepartmentVisitedTag} The populated <code>DepartmentVisitedTag</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DepartmentVisitedTag();

            if (data.hasOwnProperty('DisplayValue')) {
                obj['DisplayValue'] = ApiClient.convertToType(data['DisplayValue'], 'String');
            }
            if (data.hasOwnProperty('Scores')) {
                obj['Scores'] = Scores.constructFromObject(data['Scores']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DepartmentVisitedTag</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DepartmentVisitedTag</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DepartmentVisitedTag.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['DisplayValue'] && !(typeof data['DisplayValue'] === 'string' || data['DisplayValue'] instanceof String)) {
            throw new Error("Expected the field `DisplayValue` to be a primitive type in the JSON string but got " + data['DisplayValue']);
        }
        // validate the optional field `Scores`
        if (data['Scores']) { // data not null
          Scores.validateJSON(data['Scores']);
        }

        return true;
    }


}

DepartmentVisitedTag.RequiredProperties = ["DisplayValue", "Scores"];

/**
 * @member {String} DisplayValue
 */
DepartmentVisitedTag.prototype['DisplayValue'] = undefined;

/**
 * @member {module:model/Scores} Scores
 */
DepartmentVisitedTag.prototype['Scores'] = undefined;






export default DepartmentVisitedTag;

