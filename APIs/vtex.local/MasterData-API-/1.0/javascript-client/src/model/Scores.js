/**
 * MasterData API - v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ArEVentilaO from './ArEVentilaO';

/**
 * The Scores model module.
 * @module model/Scores
 * @version 1.0
 */
class Scores {
    /**
     * Constructs a new <code>Scores</code>.
     * @alias module:model/Scores
     * @param arEVentilao {Array.<module:model/ArEVentilaO>} 
     */
    constructor(arEVentilao) { 
        
        Scores.initialize(this, arEVentilao);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, arEVentilao) { 
        obj['Ar e Ventilação'] = arEVentilao;
    }

    /**
     * Constructs a <code>Scores</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Scores} obj Optional instance to populate.
     * @return {module:model/Scores} The populated <code>Scores</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Scores();

            if (data.hasOwnProperty('Ar e Ventilação')) {
                obj['Ar e Ventilação'] = ApiClient.convertToType(data['Ar e Ventilação'], [ArEVentilaO]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Scores</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Scores</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Scores.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['Ar e Ventilação']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Ar e Ventilação'])) {
                throw new Error("Expected the field `Ar e Ventilação` to be an array in the JSON data but got " + data['Ar e Ventilação']);
            }
            // validate the optional field `Ar e Ventilação` (array)
            for (const item of data['Ar e Ventilação']) {
                ArEVentilaO.validateJSON(item);
            };
        }

        return true;
    }


}

Scores.RequiredProperties = ["Ar e Ventilação"];

/**
 * 
 * @member {Array.<module:model/ArEVentilaO>} Ar e Ventilação
 */
Scores.prototype['Ar e Ventilação'] = undefined;






export default Scores;

