/**
 * MasterData API - v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateorupdateentiredocumentRequest model module.
 * @module model/CreateorupdateentiredocumentRequest
 * @version 1.0
 */
class CreateorupdateentiredocumentRequest {
    /**
     * Constructs a new <code>CreateorupdateentiredocumentRequest</code>.
     * @alias module:model/CreateorupdateentiredocumentRequest
     * @param _boolean {Boolean} 
     * @param currency {Number} 
     * @param date {String} 
     * @param dateTime {String} 
     * @param decimal {Number} 
     * @param email {String} 
     * @param integer {Number} 
     * @param _long {Number} 
     * @param percent {Number} 
     * @param relationship {String} 
     * @param text {String} 
     * @param time {String} 
     * @param URL {String} 
     * @param varchar10 {String} 
     * @param varchar100 {String} 
     * @param varchar50 {String} 
     * @param varchar750 {String} 
     * @param id {String} 
     */
    constructor(_boolean, currency, date, dateTime, decimal, email, integer, _long, percent, relationship, text, time, URL, varchar10, varchar100, varchar50, varchar750, id) { 
        
        CreateorupdateentiredocumentRequest.initialize(this, _boolean, currency, date, dateTime, decimal, email, integer, _long, percent, relationship, text, time, URL, varchar10, varchar100, varchar50, varchar750, id);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, _boolean, currency, date, dateTime, decimal, email, integer, _long, percent, relationship, text, time, URL, varchar10, varchar100, varchar50, varchar750, id) { 
        obj['Boolean'] = _boolean;
        obj['Currency'] = currency;
        obj['Date'] = date;
        obj['Date_Time'] = dateTime;
        obj['Decimal'] = decimal;
        obj['Email'] = email;
        obj['Integer'] = integer;
        obj['Long'] = _long;
        obj['Percent'] = percent;
        obj['Relationship'] = relationship;
        obj['Text'] = text;
        obj['Time'] = time;
        obj['URL'] = URL;
        obj['Varchar10'] = varchar10;
        obj['Varchar100'] = varchar100;
        obj['Varchar50'] = varchar50;
        obj['Varchar750'] = varchar750;
        obj['id'] = id;
    }

    /**
     * Constructs a <code>CreateorupdateentiredocumentRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateorupdateentiredocumentRequest} obj Optional instance to populate.
     * @return {module:model/CreateorupdateentiredocumentRequest} The populated <code>CreateorupdateentiredocumentRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateorupdateentiredocumentRequest();

            if (data.hasOwnProperty('Boolean')) {
                obj['Boolean'] = ApiClient.convertToType(data['Boolean'], 'Boolean');
            }
            if (data.hasOwnProperty('Currency')) {
                obj['Currency'] = ApiClient.convertToType(data['Currency'], 'Number');
            }
            if (data.hasOwnProperty('Date')) {
                obj['Date'] = ApiClient.convertToType(data['Date'], 'String');
            }
            if (data.hasOwnProperty('Date_Time')) {
                obj['Date_Time'] = ApiClient.convertToType(data['Date_Time'], 'String');
            }
            if (data.hasOwnProperty('Decimal')) {
                obj['Decimal'] = ApiClient.convertToType(data['Decimal'], 'Number');
            }
            if (data.hasOwnProperty('Email')) {
                obj['Email'] = ApiClient.convertToType(data['Email'], 'String');
            }
            if (data.hasOwnProperty('Integer')) {
                obj['Integer'] = ApiClient.convertToType(data['Integer'], 'Number');
            }
            if (data.hasOwnProperty('Long')) {
                obj['Long'] = ApiClient.convertToType(data['Long'], 'Number');
            }
            if (data.hasOwnProperty('Percent')) {
                obj['Percent'] = ApiClient.convertToType(data['Percent'], 'Number');
            }
            if (data.hasOwnProperty('Relationship')) {
                obj['Relationship'] = ApiClient.convertToType(data['Relationship'], 'String');
            }
            if (data.hasOwnProperty('Text')) {
                obj['Text'] = ApiClient.convertToType(data['Text'], 'String');
            }
            if (data.hasOwnProperty('Time')) {
                obj['Time'] = ApiClient.convertToType(data['Time'], 'String');
            }
            if (data.hasOwnProperty('URL')) {
                obj['URL'] = ApiClient.convertToType(data['URL'], 'String');
            }
            if (data.hasOwnProperty('Varchar10')) {
                obj['Varchar10'] = ApiClient.convertToType(data['Varchar10'], 'String');
            }
            if (data.hasOwnProperty('Varchar100')) {
                obj['Varchar100'] = ApiClient.convertToType(data['Varchar100'], 'String');
            }
            if (data.hasOwnProperty('Varchar50')) {
                obj['Varchar50'] = ApiClient.convertToType(data['Varchar50'], 'String');
            }
            if (data.hasOwnProperty('Varchar750')) {
                obj['Varchar750'] = ApiClient.convertToType(data['Varchar750'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateorupdateentiredocumentRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateorupdateentiredocumentRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateorupdateentiredocumentRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['Date'] && !(typeof data['Date'] === 'string' || data['Date'] instanceof String)) {
            throw new Error("Expected the field `Date` to be a primitive type in the JSON string but got " + data['Date']);
        }
        // ensure the json data is a string
        if (data['Date_Time'] && !(typeof data['Date_Time'] === 'string' || data['Date_Time'] instanceof String)) {
            throw new Error("Expected the field `Date_Time` to be a primitive type in the JSON string but got " + data['Date_Time']);
        }
        // ensure the json data is a string
        if (data['Email'] && !(typeof data['Email'] === 'string' || data['Email'] instanceof String)) {
            throw new Error("Expected the field `Email` to be a primitive type in the JSON string but got " + data['Email']);
        }
        // ensure the json data is a string
        if (data['Relationship'] && !(typeof data['Relationship'] === 'string' || data['Relationship'] instanceof String)) {
            throw new Error("Expected the field `Relationship` to be a primitive type in the JSON string but got " + data['Relationship']);
        }
        // ensure the json data is a string
        if (data['Text'] && !(typeof data['Text'] === 'string' || data['Text'] instanceof String)) {
            throw new Error("Expected the field `Text` to be a primitive type in the JSON string but got " + data['Text']);
        }
        // ensure the json data is a string
        if (data['Time'] && !(typeof data['Time'] === 'string' || data['Time'] instanceof String)) {
            throw new Error("Expected the field `Time` to be a primitive type in the JSON string but got " + data['Time']);
        }
        // ensure the json data is a string
        if (data['URL'] && !(typeof data['URL'] === 'string' || data['URL'] instanceof String)) {
            throw new Error("Expected the field `URL` to be a primitive type in the JSON string but got " + data['URL']);
        }
        // ensure the json data is a string
        if (data['Varchar10'] && !(typeof data['Varchar10'] === 'string' || data['Varchar10'] instanceof String)) {
            throw new Error("Expected the field `Varchar10` to be a primitive type in the JSON string but got " + data['Varchar10']);
        }
        // ensure the json data is a string
        if (data['Varchar100'] && !(typeof data['Varchar100'] === 'string' || data['Varchar100'] instanceof String)) {
            throw new Error("Expected the field `Varchar100` to be a primitive type in the JSON string but got " + data['Varchar100']);
        }
        // ensure the json data is a string
        if (data['Varchar50'] && !(typeof data['Varchar50'] === 'string' || data['Varchar50'] instanceof String)) {
            throw new Error("Expected the field `Varchar50` to be a primitive type in the JSON string but got " + data['Varchar50']);
        }
        // ensure the json data is a string
        if (data['Varchar750'] && !(typeof data['Varchar750'] === 'string' || data['Varchar750'] instanceof String)) {
            throw new Error("Expected the field `Varchar750` to be a primitive type in the JSON string but got " + data['Varchar750']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }

        return true;
    }


}

CreateorupdateentiredocumentRequest.RequiredProperties = ["Boolean", "Currency", "Date", "Date_Time", "Decimal", "Email", "Integer", "Long", "Percent", "Relationship", "Text", "Time", "URL", "Varchar10", "Varchar100", "Varchar50", "Varchar750", "id"];

/**
 * @member {Boolean} Boolean
 */
CreateorupdateentiredocumentRequest.prototype['Boolean'] = undefined;

/**
 * @member {Number} Currency
 */
CreateorupdateentiredocumentRequest.prototype['Currency'] = undefined;

/**
 * @member {String} Date
 */
CreateorupdateentiredocumentRequest.prototype['Date'] = undefined;

/**
 * @member {String} Date_Time
 */
CreateorupdateentiredocumentRequest.prototype['Date_Time'] = undefined;

/**
 * @member {Number} Decimal
 */
CreateorupdateentiredocumentRequest.prototype['Decimal'] = undefined;

/**
 * @member {String} Email
 */
CreateorupdateentiredocumentRequest.prototype['Email'] = undefined;

/**
 * @member {Number} Integer
 */
CreateorupdateentiredocumentRequest.prototype['Integer'] = undefined;

/**
 * @member {Number} Long
 */
CreateorupdateentiredocumentRequest.prototype['Long'] = undefined;

/**
 * @member {Number} Percent
 */
CreateorupdateentiredocumentRequest.prototype['Percent'] = undefined;

/**
 * @member {String} Relationship
 */
CreateorupdateentiredocumentRequest.prototype['Relationship'] = undefined;

/**
 * @member {String} Text
 */
CreateorupdateentiredocumentRequest.prototype['Text'] = undefined;

/**
 * @member {String} Time
 */
CreateorupdateentiredocumentRequest.prototype['Time'] = undefined;

/**
 * @member {String} URL
 */
CreateorupdateentiredocumentRequest.prototype['URL'] = undefined;

/**
 * @member {String} Varchar10
 */
CreateorupdateentiredocumentRequest.prototype['Varchar10'] = undefined;

/**
 * @member {String} Varchar100
 */
CreateorupdateentiredocumentRequest.prototype['Varchar100'] = undefined;

/**
 * @member {String} Varchar50
 */
CreateorupdateentiredocumentRequest.prototype['Varchar50'] = undefined;

/**
 * @member {String} Varchar750
 */
CreateorupdateentiredocumentRequest.prototype['Varchar750'] = undefined;

/**
 * @member {String} id
 */
CreateorupdateentiredocumentRequest.prototype['id'] = undefined;






export default CreateorupdateentiredocumentRequest;

