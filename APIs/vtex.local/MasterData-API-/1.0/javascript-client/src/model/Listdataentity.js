/**
 * MasterData API - v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Listdataentity model module.
 * @module model/Listdataentity
 * @version 1.0
 */
class Listdataentity {
    /**
     * Constructs a new <code>Listdataentity</code>.
     * @alias module:model/Listdataentity
     * @param acronym {String} 
     * @param allowGetAll {Boolean} 
     * @param name {String} 
     * @param primaryKeyType {String} 
     */
    constructor(acronym, allowGetAll, name, primaryKeyType) { 
        
        Listdataentity.initialize(this, acronym, allowGetAll, name, primaryKeyType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, acronym, allowGetAll, name, primaryKeyType) { 
        obj['acronym'] = acronym;
        obj['allowGetAll'] = allowGetAll;
        obj['name'] = name;
        obj['primaryKeyType'] = primaryKeyType;
    }

    /**
     * Constructs a <code>Listdataentity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Listdataentity} obj Optional instance to populate.
     * @return {module:model/Listdataentity} The populated <code>Listdataentity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Listdataentity();

            if (data.hasOwnProperty('acronym')) {
                obj['acronym'] = ApiClient.convertToType(data['acronym'], 'String');
            }
            if (data.hasOwnProperty('allowGetAll')) {
                obj['allowGetAll'] = ApiClient.convertToType(data['allowGetAll'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('primaryKeyType')) {
                obj['primaryKeyType'] = ApiClient.convertToType(data['primaryKeyType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Listdataentity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Listdataentity</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Listdataentity.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['acronym'] && !(typeof data['acronym'] === 'string' || data['acronym'] instanceof String)) {
            throw new Error("Expected the field `acronym` to be a primitive type in the JSON string but got " + data['acronym']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['primaryKeyType'] && !(typeof data['primaryKeyType'] === 'string' || data['primaryKeyType'] instanceof String)) {
            throw new Error("Expected the field `primaryKeyType` to be a primitive type in the JSON string but got " + data['primaryKeyType']);
        }

        return true;
    }


}

Listdataentity.RequiredProperties = ["acronym", "allowGetAll", "name", "primaryKeyType"];

/**
 * @member {String} acronym
 */
Listdataentity.prototype['acronym'] = undefined;

/**
 * @member {Boolean} allowGetAll
 */
Listdataentity.prototype['allowGetAll'] = undefined;

/**
 * @member {String} name
 */
Listdataentity.prototype['name'] = undefined;

/**
 * @member {String} primaryKeyType
 */
Listdataentity.prototype['primaryKeyType'] = undefined;






export default Listdataentity;

