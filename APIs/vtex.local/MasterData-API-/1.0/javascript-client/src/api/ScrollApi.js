/**
 * MasterData API - v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Scroll service.
* @module api/ScrollApi
* @version 1.0
*/
export default class ScrollApi {

    /**
    * Constructs a new ScrollApi. 
    * @alias module:api/ScrollApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the scrolldocuments operation.
     * @callback module:api/ScrollApi~scrolldocumentsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Scroll documents
     * Scrolls through documents according to the query parameter filters.    > Avoid sending too many requests with wildcards (`*`) in the search parameters or that use the `keyword` parameter. This may lead to this endpoint being temporarily blocked for your account. If this happens you will receive an error with status code `429`.    Use all the features of `search` API to perform filters.    In the first request, the `X-VTEX-MD-TOKEN` token will be obtained in the header. This token must be passed to the next request in the query string `_token` parameter. The token has a timeout of 10 minutes, which refreshes after each request.    **ATTENTION:** To inform the number of documents per request, use the query string parameter `_size`, which has the maximum value of 1000.    After the token is obtained it is no longer necessary to send the filter or document size per page parameters. You only need to resend the token until the document collection is empty.    ### First request example:  ```  /dataentities/CL/scroll?isCluster=true&_size=250&_fields=email,firstName  ```    After the first request, retrieve the token in the header `X-VTEX-MD-TOKEN` and make the next requests.    ### Example of subsequent requests:  ```  /dataentities/CL/scroll?_token=tokenvalueexample  ```
     * @param {String} contentType Type of the content being sent
     * @param {String} accept HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand 
     * @param {String} acronym Identifies the kind of data
     * @param {module:api/ScrollApi~scrolldocumentsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    scrolldocuments(contentType, accept, acronym, callback) {
      let postBody = null;
      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling scrolldocuments");
      }
      // verify the required parameter 'accept' is set
      if (accept === undefined || accept === null) {
        throw new Error("Missing the required parameter 'accept' when calling scrolldocuments");
      }
      // verify the required parameter 'acronym' is set
      if (acronym === undefined || acronym === null) {
        throw new Error("Missing the required parameter 'acronym' when calling scrolldocuments");
      }

      let pathParams = {
        'acronym': acronym
      };
      let queryParams = {
      };
      let headerParams = {
        'Content-Type': contentType,
        'Accept': accept
      };
      let formParams = {
      };

      let authNames = ['appToken', 'appKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/dataentities/{acronym}/scroll', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
