/**
 * MasterData API - v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIScores.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIScores::OAIScores(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIScores::OAIScores() {
    this->initializeModel();
}

OAIScores::~OAIScores() {}

void OAIScores::initializeModel() {

    m_ar_e_ventilao_isSet = false;
    m_ar_e_ventilao_isValid = false;
}

void OAIScores::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIScores::fromJsonObject(QJsonObject json) {

    m_ar_e_ventilao_isValid = ::OpenAPI::fromJsonValue(m_ar_e_ventilao, json[QString("Ar e Ventilação")]);
    m_ar_e_ventilao_isSet = !json[QString("Ar e Ventilação")].isNull() && m_ar_e_ventilao_isValid;
}

QString OAIScores::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIScores::asJsonObject() const {
    QJsonObject obj;
    if (m_ar_e_ventilao.size() > 0) {
        obj.insert(QString("Ar e Ventilação"), ::OpenAPI::toJsonValue(m_ar_e_ventilao));
    }
    return obj;
}

QList<OAIArEVentilaO> OAIScores::getArEVentilao() const {
    return m_ar_e_ventilao;
}
void OAIScores::setArEVentilao(const QList<OAIArEVentilaO> &ar_e_ventilao) {
    m_ar_e_ventilao = ar_e_ventilao;
    m_ar_e_ventilao_isSet = true;
}

bool OAIScores::is_ar_e_ventilao_Set() const{
    return m_ar_e_ventilao_isSet;
}

bool OAIScores::is_ar_e_ventilao_Valid() const{
    return m_ar_e_ventilao_isValid;
}

bool OAIScores::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ar_e_ventilao.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIScores::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_ar_e_ventilao_isValid && true;
}

} // namespace OpenAPI
