/**
 * MasterData API - v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateentiredocumentRequest.h
 *
 * 
 */

#ifndef OAIUpdateentiredocumentRequest_H
#define OAIUpdateentiredocumentRequest_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateentiredocumentRequest : public OAIObject {
public:
    OAIUpdateentiredocumentRequest();
    OAIUpdateentiredocumentRequest(QString json);
    ~OAIUpdateentiredocumentRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isBoolean() const;
    void setBoolean(const bool &boolean);
    bool is_boolean_Set() const;
    bool is_boolean_Valid() const;

    double getCurrency() const;
    void setCurrency(const double &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QString getDate() const;
    void setDate(const QString &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    QString getDateTime() const;
    void setDateTime(const QString &date_time);
    bool is_date_time_Set() const;
    bool is_date_time_Valid() const;

    double getDecimal() const;
    void setDecimal(const double &decimal);
    bool is_decimal_Set() const;
    bool is_decimal_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    qint32 getInteger() const;
    void setInteger(const qint32 &integer);
    bool is_integer_Set() const;
    bool is_integer_Valid() const;

    qint32 getRLong() const;
    void setRLong(const qint32 &r_long);
    bool is_r_long_Set() const;
    bool is_r_long_Valid() const;

    double getPercent() const;
    void setPercent(const double &percent);
    bool is_percent_Set() const;
    bool is_percent_Valid() const;

    QString getRelationship() const;
    void setRelationship(const QString &relationship);
    bool is_relationship_Set() const;
    bool is_relationship_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    QString getTime() const;
    void setTime(const QString &time);
    bool is_time_Set() const;
    bool is_time_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QString getVarchar10() const;
    void setVarchar10(const QString &varchar10);
    bool is_varchar10_Set() const;
    bool is_varchar10_Valid() const;

    QString getVarchar100() const;
    void setVarchar100(const QString &varchar100);
    bool is_varchar100_Set() const;
    bool is_varchar100_Valid() const;

    QString getVarchar50() const;
    void setVarchar50(const QString &varchar50);
    bool is_varchar50_Set() const;
    bool is_varchar50_Valid() const;

    QString getVarchar750() const;
    void setVarchar750(const QString &varchar750);
    bool is_varchar750_Set() const;
    bool is_varchar750_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_boolean;
    bool m_boolean_isSet;
    bool m_boolean_isValid;

    double m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QString m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    QString m_date_time;
    bool m_date_time_isSet;
    bool m_date_time_isValid;

    double m_decimal;
    bool m_decimal_isSet;
    bool m_decimal_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    qint32 m_integer;
    bool m_integer_isSet;
    bool m_integer_isValid;

    qint32 m_r_long;
    bool m_r_long_isSet;
    bool m_r_long_isValid;

    double m_percent;
    bool m_percent_isSet;
    bool m_percent_isValid;

    QString m_relationship;
    bool m_relationship_isSet;
    bool m_relationship_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    QString m_time;
    bool m_time_isSet;
    bool m_time_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QString m_varchar10;
    bool m_varchar10_isSet;
    bool m_varchar10_isValid;

    QString m_varchar100;
    bool m_varchar100_isSet;
    bool m_varchar100_isValid;

    QString m_varchar50;
    bool m_varchar50_isSet;
    bool m_varchar50_isValid;

    QString m_varchar750;
    bool m_varchar750_isSet;
    bool m_varchar750_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateentiredocumentRequest)

#endif // OAIUpdateentiredocumentRequest_H
