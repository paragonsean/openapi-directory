/**
 * MasterData API - v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDepartmentVisitedTag.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDepartmentVisitedTag::OAIDepartmentVisitedTag(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDepartmentVisitedTag::OAIDepartmentVisitedTag() {
    this->initializeModel();
}

OAIDepartmentVisitedTag::~OAIDepartmentVisitedTag() {}

void OAIDepartmentVisitedTag::initializeModel() {

    m_display_value_isSet = false;
    m_display_value_isValid = false;

    m_scores_isSet = false;
    m_scores_isValid = false;
}

void OAIDepartmentVisitedTag::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDepartmentVisitedTag::fromJsonObject(QJsonObject json) {

    m_display_value_isValid = ::OpenAPI::fromJsonValue(m_display_value, json[QString("DisplayValue")]);
    m_display_value_isSet = !json[QString("DisplayValue")].isNull() && m_display_value_isValid;

    m_scores_isValid = ::OpenAPI::fromJsonValue(m_scores, json[QString("Scores")]);
    m_scores_isSet = !json[QString("Scores")].isNull() && m_scores_isValid;
}

QString OAIDepartmentVisitedTag::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDepartmentVisitedTag::asJsonObject() const {
    QJsonObject obj;
    if (m_display_value_isSet) {
        obj.insert(QString("DisplayValue"), ::OpenAPI::toJsonValue(m_display_value));
    }
    if (m_scores.isSet()) {
        obj.insert(QString("Scores"), ::OpenAPI::toJsonValue(m_scores));
    }
    return obj;
}

QString OAIDepartmentVisitedTag::getDisplayValue() const {
    return m_display_value;
}
void OAIDepartmentVisitedTag::setDisplayValue(const QString &display_value) {
    m_display_value = display_value;
    m_display_value_isSet = true;
}

bool OAIDepartmentVisitedTag::is_display_value_Set() const{
    return m_display_value_isSet;
}

bool OAIDepartmentVisitedTag::is_display_value_Valid() const{
    return m_display_value_isValid;
}

OAIScores OAIDepartmentVisitedTag::getScores() const {
    return m_scores;
}
void OAIDepartmentVisitedTag::setScores(const OAIScores &scores) {
    m_scores = scores;
    m_scores_isSet = true;
}

bool OAIDepartmentVisitedTag::is_scores_Set() const{
    return m_scores_isSet;
}

bool OAIDepartmentVisitedTag::is_scores_Valid() const{
    return m_scores_isValid;
}

bool OAIDepartmentVisitedTag::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_scores.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDepartmentVisitedTag::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_display_value_isValid && m_scores_isValid && true;
}

} // namespace OpenAPI
