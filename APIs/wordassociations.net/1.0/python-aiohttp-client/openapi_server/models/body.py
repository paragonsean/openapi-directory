# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.request import Request
from openapi_server.models.response import Response
from openapi_server import util


class Body(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: int=None, request: Request=None, response: List[Response]=None, version: str=None):
        """Body - a model defined in OpenAPI

        :param code: The code of this Body.
        :param request: The request of this Body.
        :param response: The response of this Body.
        :param version: The version of this Body.
        """
        self.openapi_types = {
            'code': int,
            'request': Request,
            'response': List[Response],
            'version': str
        }

        self.attribute_map = {
            'code': 'code',
            'request': 'request',
            'response': 'response',
            'version': 'version'
        }

        self._code = code
        self._request = request
        self._response = response
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Body':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Body of this Body.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this Body.


        :return: The code of this Body.
        :rtype: int
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this Body.


        :param code: The code of this Body.
        :type code: int
        """

        self._code = code

    @property
    def request(self):
        """Gets the request of this Body.


        :return: The request of this Body.
        :rtype: Request
        """
        return self._request

    @request.setter
    def request(self, request):
        """Sets the request of this Body.


        :param request: The request of this Body.
        :type request: Request
        """

        self._request = request

    @property
    def response(self):
        """Gets the response of this Body.


        :return: The response of this Body.
        :rtype: List[Response]
        """
        return self._response

    @response.setter
    def response(self, response):
        """Sets the response of this Body.


        :param response: The response of this Body.
        :type response: List[Response]
        """

        self._response = response

    @property
    def version(self):
        """Gets the version of this Body.


        :return: The version of this Body.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this Body.


        :param version: The version of this Body.
        :type version: str
        """

        self._version = version
