/**
 * Word Associations API
 * The Word Associations Network API allows developers to embed the ability to find associations for a word or phrase into their mobile apps or web services. Words are grouped by semantics, meaning, and psychological perception. The Word Associations Network API currently supports English, French, Spanish, German, Italian, Portuguese, and Russian vocabulary. Please [register and subscribe](https://api.wordassociations.net/subscriptions/) to one of available tariff plans to get a valid API key.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: contact@wordassociations.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRequest.h
 *
 * 
 */

#ifndef OAIRequest_H
#define OAIRequest_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRequest : public OAIObject {
public:
    OAIRequest();
    OAIRequest(QString json);
    ~OAIRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getIndent() const;
    void setIndent(const QString &indent);
    bool is_indent_Set() const;
    bool is_indent_Valid() const;

    QString getLang() const;
    void setLang(const QString &lang);
    bool is_lang_Set() const;
    bool is_lang_Valid() const;

    qint32 getLimit() const;
    void setLimit(const qint32 &limit);
    bool is_limit_Set() const;
    bool is_limit_Valid() const;

    QString getPos() const;
    void setPos(const QString &pos);
    bool is_pos_Set() const;
    bool is_pos_Valid() const;

    QList<QString> getText() const;
    void setText(const QList<QString> &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_indent;
    bool m_indent_isSet;
    bool m_indent_isValid;

    QString m_lang;
    bool m_lang_isSet;
    bool m_lang_isValid;

    qint32 m_limit;
    bool m_limit_isSet;
    bool m_limit_isValid;

    QString m_pos;
    bool m_pos_isSet;
    bool m_pos_isValid;

    QList<QString> m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRequest)

#endif // OAIRequest_H
