# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ResponseInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, copyrights: List[str]=None, took: float=None):
        """ResponseInfo - a model defined in OpenAPI

        :param copyrights: The copyrights of this ResponseInfo.
        :param took: The took of this ResponseInfo.
        """
        self.openapi_types = {
            'copyrights': List[str],
            'took': float
        }

        self.attribute_map = {
            'copyrights': 'copyrights',
            'took': 'took'
        }

        self._copyrights = copyrights
        self._took = took

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResponseInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResponseInfo of this ResponseInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def copyrights(self):
        """Gets the copyrights of this ResponseInfo.

        Attribution according to our documentation is necessary if no white-label option included.

        :return: The copyrights of this ResponseInfo.
        :rtype: List[str]
        """
        return self._copyrights

    @copyrights.setter
    def copyrights(self, copyrights):
        """Sets the copyrights of this ResponseInfo.

        Attribution according to our documentation is necessary if no white-label option included.

        :param copyrights: The copyrights of this ResponseInfo.
        :type copyrights: List[str]
        """

        self._copyrights = copyrights

    @property
    def took(self):
        """Gets the took of this ResponseInfo.


        :return: The took of this ResponseInfo.
        :rtype: float
        """
        return self._took

    @took.setter
    def took(self, took):
        """Sets the took of this ResponseInfo.


        :param took: The took of this ResponseInfo.
        :type took: float
        """

        self._took = took
