# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Detail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: int=None, id: str=None, reason: str=None):
        """Detail - a model defined in OpenAPI

        :param code: The code of this Detail.
        :param id: The id of this Detail.
        :param reason: The reason of this Detail.
        """
        self.openapi_types = {
            'code': int,
            'id': str,
            'reason': str
        }

        self.attribute_map = {
            'code': 'code',
            'id': 'id',
            'reason': 'reason'
        }

        self._code = code
        self._id = id
        self._reason = reason

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Detail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Detail of this Detail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this Detail.

        Reason code  Code   |  Reason :------|:--------- 1 | cannot serve required skill 2 | cannot be visited within time window 3 | does not fit into any vehicle due to capacity 4 | cannot be assigned due to max distance constraint of vehicles 21 | could not be assigned due to relation constraint 22 | could not be assigned due to allowed vehicle constraint 23 | could not be assigned due to max-time-in-vehicle constraint 24 | driver does not need a break 25 | could not be assigned due to disallowed vehicle constraint 26 | could not be assigned due to max drive time constraint 27 | could not be assigned due to max job constraint 28 | could not be assigned due to max activity constraint 50 | underlying location cannot be accessed over road network by at least one vehicle 

        :return: The code of this Detail.
        :rtype: int
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this Detail.

        Reason code  Code   |  Reason :------|:--------- 1 | cannot serve required skill 2 | cannot be visited within time window 3 | does not fit into any vehicle due to capacity 4 | cannot be assigned due to max distance constraint of vehicles 21 | could not be assigned due to relation constraint 22 | could not be assigned due to allowed vehicle constraint 23 | could not be assigned due to max-time-in-vehicle constraint 24 | driver does not need a break 25 | could not be assigned due to disallowed vehicle constraint 26 | could not be assigned due to max drive time constraint 27 | could not be assigned due to max job constraint 28 | could not be assigned due to max activity constraint 50 | underlying location cannot be accessed over road network by at least one vehicle 

        :param code: The code of this Detail.
        :type code: int
        """

        self._code = code

    @property
    def id(self):
        """Gets the id of this Detail.

        Id of unassigned service/shipment

        :return: The id of this Detail.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Detail.

        Id of unassigned service/shipment

        :param id: The id of this Detail.
        :type id: str
        """

        self._id = id

    @property
    def reason(self):
        """Gets the reason of this Detail.

        Human readable reason as listed above

        :return: The reason of this Detail.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this Detail.

        Human readable reason as listed above

        :param reason: The reason of this Detail.
        :type reason: str
        """

        self._reason = reason
