# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.detail import Detail
from openapi_server import util


class SolutionUnassigned(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, breaks: List[str]=None, details: List[Detail]=None, services: List[str]=None, shipments: List[str]=None):
        """SolutionUnassigned - a model defined in OpenAPI

        :param breaks: The breaks of this SolutionUnassigned.
        :param details: The details of this SolutionUnassigned.
        :param services: The services of this SolutionUnassigned.
        :param shipments: The shipments of this SolutionUnassigned.
        """
        self.openapi_types = {
            'breaks': List[str],
            'details': List[Detail],
            'services': List[str],
            'shipments': List[str]
        }

        self.attribute_map = {
            'breaks': 'breaks',
            'details': 'details',
            'services': 'services',
            'shipments': 'shipments'
        }

        self._breaks = breaks
        self._details = details
        self._services = services
        self._shipments = shipments

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SolutionUnassigned':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Solution_unassigned of this SolutionUnassigned.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def breaks(self):
        """Gets the breaks of this SolutionUnassigned.

        An array of ids of unassigned breaks

        :return: The breaks of this SolutionUnassigned.
        :rtype: List[str]
        """
        return self._breaks

    @breaks.setter
    def breaks(self, breaks):
        """Sets the breaks of this SolutionUnassigned.

        An array of ids of unassigned breaks

        :param breaks: The breaks of this SolutionUnassigned.
        :type breaks: List[str]
        """

        self._breaks = breaks

    @property
    def details(self):
        """Gets the details of this SolutionUnassigned.

        An array of details, i.e. reason for unassigned services or shipments

        :return: The details of this SolutionUnassigned.
        :rtype: List[Detail]
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this SolutionUnassigned.

        An array of details, i.e. reason for unassigned services or shipments

        :param details: The details of this SolutionUnassigned.
        :type details: List[Detail]
        """

        self._details = details

    @property
    def services(self):
        """Gets the services of this SolutionUnassigned.

        An array of ids of unassigned services

        :return: The services of this SolutionUnassigned.
        :rtype: List[str]
        """
        return self._services

    @services.setter
    def services(self, services):
        """Sets the services of this SolutionUnassigned.

        An array of ids of unassigned services

        :param services: The services of this SolutionUnassigned.
        :type services: List[str]
        """

        self._services = services

    @property
    def shipments(self):
        """Gets the shipments of this SolutionUnassigned.

        An array of ids of unassigned shipments

        :return: The shipments of this SolutionUnassigned.
        :rtype: List[str]
        """
        return self._shipments

    @shipments.setter
    def shipments(self, shipments):
        """Sets the shipments of this SolutionUnassigned.

        An array of ids of unassigned shipments

        :param shipments: The shipments of this SolutionUnassigned.
        :type shipments: List[str]
        """

        self._shipments = shipments
