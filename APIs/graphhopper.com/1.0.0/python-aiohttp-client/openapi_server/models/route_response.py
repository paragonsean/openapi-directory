# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.response_info import ResponseInfo
from openapi_server.models.route_response_path import RouteResponsePath
from openapi_server import util


class RouteResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, info: ResponseInfo=None, paths: List[RouteResponsePath]=None):
        """RouteResponse - a model defined in OpenAPI

        :param info: The info of this RouteResponse.
        :param paths: The paths of this RouteResponse.
        """
        self.openapi_types = {
            'info': ResponseInfo,
            'paths': List[RouteResponsePath]
        }

        self.attribute_map = {
            'info': 'info',
            'paths': 'paths'
        }

        self._info = info
        self._paths = paths

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RouteResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RouteResponse of this RouteResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def info(self):
        """Gets the info of this RouteResponse.


        :return: The info of this RouteResponse.
        :rtype: ResponseInfo
        """
        return self._info

    @info.setter
    def info(self, info):
        """Sets the info of this RouteResponse.


        :param info: The info of this RouteResponse.
        :type info: ResponseInfo
        """

        self._info = info

    @property
    def paths(self):
        """Gets the paths of this RouteResponse.


        :return: The paths of this RouteResponse.
        :rtype: List[RouteResponsePath]
        """
        return self._paths

    @paths.setter
    def paths(self, paths):
        """Sets the paths of this RouteResponse.


        :param paths: The paths of this RouteResponse.
        :type paths: List[RouteResponsePath]
        """

        self._paths = paths
