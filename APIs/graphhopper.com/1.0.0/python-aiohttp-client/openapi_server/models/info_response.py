# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InfoResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bbox: str=None, features: object=None, version: str=None):
        """InfoResponse - a model defined in OpenAPI

        :param bbox: The bbox of this InfoResponse.
        :param features: The features of this InfoResponse.
        :param version: The version of this InfoResponse.
        """
        self.openapi_types = {
            'bbox': str,
            'features': object,
            'version': str
        }

        self.attribute_map = {
            'bbox': 'bbox',
            'features': 'features',
            'version': 'version'
        }

        self._bbox = bbox
        self._features = features
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InfoResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InfoResponse of this InfoResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bbox(self):
        """Gets the bbox of this InfoResponse.

        The bounding box of the geographical area covered by this GraphHopper instance. Format: `\"minLon,minLat,maxLon,maxLat\" 

        :return: The bbox of this InfoResponse.
        :rtype: str
        """
        return self._bbox

    @bbox.setter
    def bbox(self, bbox):
        """Sets the bbox of this InfoResponse.

        The bounding box of the geographical area covered by this GraphHopper instance. Format: `\"minLon,minLat,maxLon,maxLat\" 

        :param bbox: The bbox of this InfoResponse.
        :type bbox: str
        """

        self._bbox = bbox

    @property
    def features(self):
        """Gets the features of this InfoResponse.

        The supported features, such as elevation, per vehicle profile. 

        :return: The features of this InfoResponse.
        :rtype: object
        """
        return self._features

    @features.setter
    def features(self, features):
        """Sets the features of this InfoResponse.

        The supported features, such as elevation, per vehicle profile. 

        :param features: The features of this InfoResponse.
        :type features: object
        """

        self._features = features

    @property
    def version(self):
        """Gets the version of this InfoResponse.

        The version of the GraphHopper server that provided this response. This is not related to the API version. 

        :return: The version of this InfoResponse.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this InfoResponse.

        The version of the GraphHopper server that provided this response. This is not related to the API version. 

        :param version: The version of this InfoResponse.
        :type version: str
        """

        self._version = version
