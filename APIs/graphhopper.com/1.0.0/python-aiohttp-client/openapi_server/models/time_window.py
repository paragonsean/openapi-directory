# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TimeWindow(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, earliest: int=0, latest: int=None):
        """TimeWindow - a model defined in OpenAPI

        :param earliest: The earliest of this TimeWindow.
        :param latest: The latest of this TimeWindow.
        """
        self.openapi_types = {
            'earliest': int,
            'latest': int
        }

        self.attribute_map = {
            'earliest': 'earliest',
            'latest': 'latest'
        }

        self._earliest = earliest
        self._latest = latest

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TimeWindow':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TimeWindow of this TimeWindow.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def earliest(self):
        """Gets the earliest of this TimeWindow.

        Specifies the opening time of the time window in seconds, i.e. the earliest time the service can start.

        :return: The earliest of this TimeWindow.
        :rtype: int
        """
        return self._earliest

    @earliest.setter
    def earliest(self, earliest):
        """Sets the earliest of this TimeWindow.

        Specifies the opening time of the time window in seconds, i.e. the earliest time the service can start.

        :param earliest: The earliest of this TimeWindow.
        :type earliest: int
        """

        self._earliest = earliest

    @property
    def latest(self):
        """Gets the latest of this TimeWindow.

        Specifies the closing time of the time window in seconds, i.e. the latest time the service can start.

        :return: The latest of this TimeWindow.
        :rtype: int
        """
        return self._latest

    @latest.setter
    def latest(self, latest):
        """Sets the latest of this TimeWindow.

        Specifies the closing time of the time window in seconds, i.e. the latest time the service can start.

        :param latest: The latest of this TimeWindow.
        :type latest: int
        """

        self._latest = latest
