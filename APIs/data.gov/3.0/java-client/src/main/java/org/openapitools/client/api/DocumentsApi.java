/*
 * Regulations.gov
 * Provides public users access to federal regulatory content.
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import java.time.LocalDate;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DocumentsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public DocumentsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public DocumentsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for document
     * @param responseFormat Format (required)
     * @param documentId FDMS Document ID (optional, default to EPA-HQ-OAR-2011-0028-0108)
     * @param federalRegisterNumber Federal Register Document Number (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> No response was specified </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request. The document is only available for comment via Regulations.gov. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> File not found. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call documentCall(String responseFormat, String documentId, String federalRegisterNumber, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/document.{response_format}"
            .replace("{" + "response_format" + "}", localVarApiClient.escapeString(responseFormat.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (documentId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("documentId", documentId));
        }

        if (federalRegisterNumber != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("federalRegisterNumber", federalRegisterNumber));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call documentValidateBeforeCall(String responseFormat, String documentId, String federalRegisterNumber, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'responseFormat' is set
        if (responseFormat == null) {
            throw new ApiException("Missing the required parameter 'responseFormat' when calling document(Async)");
        }

        return documentCall(responseFormat, documentId, federalRegisterNumber, _callback);

    }

    /**
     * Returns Document information
     * 
     * @param responseFormat Format (required)
     * @param documentId FDMS Document ID (optional, default to EPA-HQ-OAR-2011-0028-0108)
     * @param federalRegisterNumber Federal Register Document Number (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> No response was specified </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request. The document is only available for comment via Regulations.gov. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> File not found. </td><td>  -  </td></tr>
     </table>
     */
    public void document(String responseFormat, String documentId, String federalRegisterNumber) throws ApiException {
        documentWithHttpInfo(responseFormat, documentId, federalRegisterNumber);
    }

    /**
     * Returns Document information
     * 
     * @param responseFormat Format (required)
     * @param documentId FDMS Document ID (optional, default to EPA-HQ-OAR-2011-0028-0108)
     * @param federalRegisterNumber Federal Register Document Number (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> No response was specified </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request. The document is only available for comment via Regulations.gov. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> File not found. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> documentWithHttpInfo(String responseFormat, String documentId, String federalRegisterNumber) throws ApiException {
        okhttp3.Call localVarCall = documentValidateBeforeCall(responseFormat, documentId, federalRegisterNumber, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Returns Document information (asynchronously)
     * 
     * @param responseFormat Format (required)
     * @param documentId FDMS Document ID (optional, default to EPA-HQ-OAR-2011-0028-0108)
     * @param federalRegisterNumber Federal Register Document Number (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> No response was specified </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request. The document is only available for comment via Regulations.gov. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> File not found. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call documentAsync(String responseFormat, String documentId, String federalRegisterNumber, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = documentValidateBeforeCall(responseFormat, documentId, federalRegisterNumber, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for documents
     * @param responseFormat Format (required)
     * @param countsOnly Counts Only: &lt;ul&gt;&lt;li&gt;1 (will return only the document count for a search query)&lt;/li&gt;&lt;li&gt;0 (will return documents as well)&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param encoded Encoded: &lt;ul&gt;&lt;li&gt;1 (will accept Regulations.gov style encoded parameters)&lt;/li&gt;&lt;li&gt;0 (will not accept such encoded parameters)&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param s Keyword(s) (optional)
     * @param dct Document Type: &lt;ul&gt;&lt;li&gt;N: Notice&lt;/li&gt;&lt;li&gt;PR: Proposed Rule&lt;/li&gt;&lt;li&gt;FR: Rule&lt;/li&gt;&lt;li&gt;O: Other&lt;/li&gt;&lt;li&gt;SR: Supporting &amp; Related Material&lt;/li&gt;&lt;li&gt;PS: Public Submission&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param dktid Valid Docket ID (ex. SEC-2012-0044) (optional)
     * @param dkt Docket Type: &lt;ul&gt;&lt;li&gt;R: Rulemaking&lt;/li&gt;&lt;li&gt;N: Nonrulemaking&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;A Docket Type is either Rulemaking or Nonrulemaking. A Rulemaking docket includes the type of regulation that establishes a rule. While a Non-Rulemaking docket does not include a rule.&lt;/p&gt; (optional)
     * @param cp Comment Period: &lt;ul&gt;&lt;li&gt;O: Open&lt;/li&gt;&lt;li&gt;C: Closed&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param a Federal Agency: List of accepted Federal Agency values. This field allows multiple values. Ex. a&#x3D;FMCSA%252BEPA%252BFDA (optional)
     * @param rpp Results Per Page 10, 25, 100, 500, 1,000.  Results per page may not exceed 1,000. (optional)
     * @param po Enter the page offset (always starts with 0). This is used in conjunction with results per page to provide large data sets. For example, if a search produces 82 results and the result per page is set to 25, this will generate 4 pages. 3 pages will have 25 results and the last page will have 7 results. Page offset values for each page will be: &lt;pre&gt;Page 1: po&#x3D;0 Page 2: po&#x3D;25 Page 3: po&#x3D;50 Page 4: po&#x3D;75&lt;/pre&gt; The total number of pages is [total results/results per page] and page offset for page X is [X-1 * results per page] (optional)
     * @param cs Comment Period Closing Soon: &lt;ul&gt;&lt;li&gt;0 (closing today)&lt;/li&gt;&lt;li&gt;3 (closing within 3 days)&lt;/li&gt;&lt;li&gt;15 (closing within 15 days)&lt;/li&gt;&lt;li&gt;30 (closing within 30 days)&lt;/li&gt;&lt;li&gt;90 (closing within 90 days)&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param np Newly Posted: &lt;ul&gt;&lt;li&gt;0 (posted today)&lt;/li&gt;&lt;li&gt;3 (posted within last 3 days)&lt;/li&gt;&lt;li&gt;15 (posted within last 15 days)&lt;/li&gt;&lt;li&gt;30 (posted within last 30 days)&lt;/li&gt;&lt;li&gt;90 (posted within last 90 days)&lt;/li&gt;&lt;/ul&gt;  For periods of time beyond 90-days, please use a date range with the Posted Date parameter. (optional)
     * @param cmsd Comment Period Start Date: Enter a date in the form of MM/DD/YY. Note: If the Comment Period End Date is also provided, then ensure the Comment Period Start date is earlier. (optional)
     * @param cmd Comment Period End Date: Enter a date in the form of MM/DD/YY. Note: If the Comment Period Start Date is also provided, then ensure the Comment Period End date is after.&lt;br/&gt;* Comment Period Start and End Dates are mutually exclusive with the &#39;closing soon&#39; parameter. If both are provided, &#39;closing soon&#39; will be ignored. (optional)
     * @param crd Creation Date: Enter a date in the form of MM/DD/YY. Accepts a single date or a date range. Ex. &lt;code&gt;crd&#x3D;11/06/13-03/06/14&lt;/code&gt; (optional)
     * @param rd Received Date: Enter a date in the form of MM/DD/YY. Accepts a single date or a date range. Ex. &lt;code&gt;rd&#x3D;11/06/13-03/06/14&lt;/code&gt; (optional)
     * @param pd Posted Date: Enter a date in the form of MM/DD/YY. Accepts a single date or a date range. Ex. &lt;code&gt;pd&#x3D;11/06/13-03/06/14&lt;/code&gt; (optional)
     * @param cat Document Category: &lt;ul&gt;&lt;li&gt;AD (Aerospace and Transportation)&lt;/li&gt; &lt;li&gt;AEP (Agriculture, Environment, and Public Lands)&lt;/li&gt; &lt;li&gt;BFS (Banking and Financial)&lt;/li&gt; &lt;li&gt;CT (Commerce and International)&lt;/li&gt; &lt;li&gt;LES (Defense, Law Enforcement, and Security)&lt;/li&gt; &lt;li&gt;EELS (Education, Labor, Presidential, and Government Services)&lt;/li&gt; &lt;li&gt;EUMM (Energy, Natural Resources, and Utilities)&lt;/li&gt; &lt;li&gt;HCFP (Food Safety, Health, and Pharmaceutical)&lt;/li&gt; &lt;li&gt;PRE (Housing, Development, and Real Estate)&lt;/li&gt; &lt;li&gt;ITT (Technology and Telecommunications)&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param sb Sort By: &lt;ul&gt;&lt;li&gt;docketId (Docket ID)&lt;/li&gt;&lt;li&gt;docId (Document ID)&lt;/li&gt;&lt;li&gt;title (Title)&lt;/li&gt;&lt;li&gt;postedDate (Posted Date)&lt;/li&gt;&lt;li&gt;agency (Agency)&lt;/li&gt;&lt;li&gt;documentType (Document Type)&lt;/li&gt;&lt;li&gt;submitterName (Submitter Name)&lt;/li&gt;&lt;li&gt;organization (Organization)&lt;/li&gt;&lt;/ul&gt; Sort Order is REQUIRED if this parameter is included. (optional)
     * @param so Sort Order: &lt;ul&gt;&lt;li&gt;ASC: Ascending&lt;/li&gt;&lt;li&gt;DESC: Descending&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param dktst Docket Subtype: Only one docket subtype at a time may be selected. One or more agency values must be part of the request. Only values valid for the selected agency will be returned. (optional)
     * @param dktst2 Docket Sub-subtype: Only one docket sub-subtype at a time may be selected. One or more agency values must be part of the request. Only values valid for the selected agency will be returned. (optional)
     * @param docst Document Subtype: Single or multiple document subtypes may be included.  Multiple values should be passed as follows: &lt;code&gt;docst&#x3D;%20Certificate+of+Service%252BCorrespondence&lt;/code&gt; (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> No response was specified </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request. The document is only available for comment via Regulations.gov. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> File not found. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call documentsCall(String responseFormat, Integer countsOnly, Integer encoded, String s, String dct, String dktid, String dkt, String cp, String a, String rpp, Integer po, Integer cs, Integer np, LocalDate cmsd, LocalDate cmd, LocalDate crd, LocalDate rd, LocalDate pd, String cat, String sb, String so, String dktst, String dktst2, String docst, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/documents.{response_format}"
            .replace("{" + "response_format" + "}", localVarApiClient.escapeString(responseFormat.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (countsOnly != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("countsOnly", countsOnly));
        }

        if (encoded != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("encoded", encoded));
        }

        if (s != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("s", s));
        }

        if (dct != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("dct", dct));
        }

        if (dktid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("dktid", dktid));
        }

        if (dkt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("dkt", dkt));
        }

        if (cp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cp", cp));
        }

        if (a != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("a", a));
        }

        if (rpp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rpp", rpp));
        }

        if (po != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("po", po));
        }

        if (cs != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cs", cs));
        }

        if (np != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("np", np));
        }

        if (cmsd != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cmsd", cmsd));
        }

        if (cmd != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cmd", cmd));
        }

        if (crd != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("crd", crd));
        }

        if (rd != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rd", rd));
        }

        if (pd != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pd", pd));
        }

        if (cat != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cat", cat));
        }

        if (sb != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sb", sb));
        }

        if (so != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("so", so));
        }

        if (dktst != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("dktst", dktst));
        }

        if (dktst2 != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("dktst2", dktst2));
        }

        if (docst != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("docst", docst));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call documentsValidateBeforeCall(String responseFormat, Integer countsOnly, Integer encoded, String s, String dct, String dktid, String dkt, String cp, String a, String rpp, Integer po, Integer cs, Integer np, LocalDate cmsd, LocalDate cmd, LocalDate crd, LocalDate rd, LocalDate pd, String cat, String sb, String so, String dktst, String dktst2, String docst, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'responseFormat' is set
        if (responseFormat == null) {
            throw new ApiException("Missing the required parameter 'responseFormat' when calling documents(Async)");
        }

        return documentsCall(responseFormat, countsOnly, encoded, s, dct, dktid, dkt, cp, a, rpp, po, cs, np, cmsd, cmd, crd, rd, pd, cat, sb, so, dktst, dktst2, docst, _callback);

    }

    /**
     * Search for Documents
     * This API allows users to build a query based on any of the parameters below.  If you have trouble building queries, you may wish to try them through the &lt;a href&#x3D;\&quot;http://www.regulations.gov/#!advancedSearch\&quot;&gt;Advanced Search&lt;/a&gt; page on the Regulations.gov website.
     * @param responseFormat Format (required)
     * @param countsOnly Counts Only: &lt;ul&gt;&lt;li&gt;1 (will return only the document count for a search query)&lt;/li&gt;&lt;li&gt;0 (will return documents as well)&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param encoded Encoded: &lt;ul&gt;&lt;li&gt;1 (will accept Regulations.gov style encoded parameters)&lt;/li&gt;&lt;li&gt;0 (will not accept such encoded parameters)&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param s Keyword(s) (optional)
     * @param dct Document Type: &lt;ul&gt;&lt;li&gt;N: Notice&lt;/li&gt;&lt;li&gt;PR: Proposed Rule&lt;/li&gt;&lt;li&gt;FR: Rule&lt;/li&gt;&lt;li&gt;O: Other&lt;/li&gt;&lt;li&gt;SR: Supporting &amp; Related Material&lt;/li&gt;&lt;li&gt;PS: Public Submission&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param dktid Valid Docket ID (ex. SEC-2012-0044) (optional)
     * @param dkt Docket Type: &lt;ul&gt;&lt;li&gt;R: Rulemaking&lt;/li&gt;&lt;li&gt;N: Nonrulemaking&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;A Docket Type is either Rulemaking or Nonrulemaking. A Rulemaking docket includes the type of regulation that establishes a rule. While a Non-Rulemaking docket does not include a rule.&lt;/p&gt; (optional)
     * @param cp Comment Period: &lt;ul&gt;&lt;li&gt;O: Open&lt;/li&gt;&lt;li&gt;C: Closed&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param a Federal Agency: List of accepted Federal Agency values. This field allows multiple values. Ex. a&#x3D;FMCSA%252BEPA%252BFDA (optional)
     * @param rpp Results Per Page 10, 25, 100, 500, 1,000.  Results per page may not exceed 1,000. (optional)
     * @param po Enter the page offset (always starts with 0). This is used in conjunction with results per page to provide large data sets. For example, if a search produces 82 results and the result per page is set to 25, this will generate 4 pages. 3 pages will have 25 results and the last page will have 7 results. Page offset values for each page will be: &lt;pre&gt;Page 1: po&#x3D;0 Page 2: po&#x3D;25 Page 3: po&#x3D;50 Page 4: po&#x3D;75&lt;/pre&gt; The total number of pages is [total results/results per page] and page offset for page X is [X-1 * results per page] (optional)
     * @param cs Comment Period Closing Soon: &lt;ul&gt;&lt;li&gt;0 (closing today)&lt;/li&gt;&lt;li&gt;3 (closing within 3 days)&lt;/li&gt;&lt;li&gt;15 (closing within 15 days)&lt;/li&gt;&lt;li&gt;30 (closing within 30 days)&lt;/li&gt;&lt;li&gt;90 (closing within 90 days)&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param np Newly Posted: &lt;ul&gt;&lt;li&gt;0 (posted today)&lt;/li&gt;&lt;li&gt;3 (posted within last 3 days)&lt;/li&gt;&lt;li&gt;15 (posted within last 15 days)&lt;/li&gt;&lt;li&gt;30 (posted within last 30 days)&lt;/li&gt;&lt;li&gt;90 (posted within last 90 days)&lt;/li&gt;&lt;/ul&gt;  For periods of time beyond 90-days, please use a date range with the Posted Date parameter. (optional)
     * @param cmsd Comment Period Start Date: Enter a date in the form of MM/DD/YY. Note: If the Comment Period End Date is also provided, then ensure the Comment Period Start date is earlier. (optional)
     * @param cmd Comment Period End Date: Enter a date in the form of MM/DD/YY. Note: If the Comment Period Start Date is also provided, then ensure the Comment Period End date is after.&lt;br/&gt;* Comment Period Start and End Dates are mutually exclusive with the &#39;closing soon&#39; parameter. If both are provided, &#39;closing soon&#39; will be ignored. (optional)
     * @param crd Creation Date: Enter a date in the form of MM/DD/YY. Accepts a single date or a date range. Ex. &lt;code&gt;crd&#x3D;11/06/13-03/06/14&lt;/code&gt; (optional)
     * @param rd Received Date: Enter a date in the form of MM/DD/YY. Accepts a single date or a date range. Ex. &lt;code&gt;rd&#x3D;11/06/13-03/06/14&lt;/code&gt; (optional)
     * @param pd Posted Date: Enter a date in the form of MM/DD/YY. Accepts a single date or a date range. Ex. &lt;code&gt;pd&#x3D;11/06/13-03/06/14&lt;/code&gt; (optional)
     * @param cat Document Category: &lt;ul&gt;&lt;li&gt;AD (Aerospace and Transportation)&lt;/li&gt; &lt;li&gt;AEP (Agriculture, Environment, and Public Lands)&lt;/li&gt; &lt;li&gt;BFS (Banking and Financial)&lt;/li&gt; &lt;li&gt;CT (Commerce and International)&lt;/li&gt; &lt;li&gt;LES (Defense, Law Enforcement, and Security)&lt;/li&gt; &lt;li&gt;EELS (Education, Labor, Presidential, and Government Services)&lt;/li&gt; &lt;li&gt;EUMM (Energy, Natural Resources, and Utilities)&lt;/li&gt; &lt;li&gt;HCFP (Food Safety, Health, and Pharmaceutical)&lt;/li&gt; &lt;li&gt;PRE (Housing, Development, and Real Estate)&lt;/li&gt; &lt;li&gt;ITT (Technology and Telecommunications)&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param sb Sort By: &lt;ul&gt;&lt;li&gt;docketId (Docket ID)&lt;/li&gt;&lt;li&gt;docId (Document ID)&lt;/li&gt;&lt;li&gt;title (Title)&lt;/li&gt;&lt;li&gt;postedDate (Posted Date)&lt;/li&gt;&lt;li&gt;agency (Agency)&lt;/li&gt;&lt;li&gt;documentType (Document Type)&lt;/li&gt;&lt;li&gt;submitterName (Submitter Name)&lt;/li&gt;&lt;li&gt;organization (Organization)&lt;/li&gt;&lt;/ul&gt; Sort Order is REQUIRED if this parameter is included. (optional)
     * @param so Sort Order: &lt;ul&gt;&lt;li&gt;ASC: Ascending&lt;/li&gt;&lt;li&gt;DESC: Descending&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param dktst Docket Subtype: Only one docket subtype at a time may be selected. One or more agency values must be part of the request. Only values valid for the selected agency will be returned. (optional)
     * @param dktst2 Docket Sub-subtype: Only one docket sub-subtype at a time may be selected. One or more agency values must be part of the request. Only values valid for the selected agency will be returned. (optional)
     * @param docst Document Subtype: Single or multiple document subtypes may be included.  Multiple values should be passed as follows: &lt;code&gt;docst&#x3D;%20Certificate+of+Service%252BCorrespondence&lt;/code&gt; (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> No response was specified </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request. The document is only available for comment via Regulations.gov. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> File not found. </td><td>  -  </td></tr>
     </table>
     */
    public void documents(String responseFormat, Integer countsOnly, Integer encoded, String s, String dct, String dktid, String dkt, String cp, String a, String rpp, Integer po, Integer cs, Integer np, LocalDate cmsd, LocalDate cmd, LocalDate crd, LocalDate rd, LocalDate pd, String cat, String sb, String so, String dktst, String dktst2, String docst) throws ApiException {
        documentsWithHttpInfo(responseFormat, countsOnly, encoded, s, dct, dktid, dkt, cp, a, rpp, po, cs, np, cmsd, cmd, crd, rd, pd, cat, sb, so, dktst, dktst2, docst);
    }

    /**
     * Search for Documents
     * This API allows users to build a query based on any of the parameters below.  If you have trouble building queries, you may wish to try them through the &lt;a href&#x3D;\&quot;http://www.regulations.gov/#!advancedSearch\&quot;&gt;Advanced Search&lt;/a&gt; page on the Regulations.gov website.
     * @param responseFormat Format (required)
     * @param countsOnly Counts Only: &lt;ul&gt;&lt;li&gt;1 (will return only the document count for a search query)&lt;/li&gt;&lt;li&gt;0 (will return documents as well)&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param encoded Encoded: &lt;ul&gt;&lt;li&gt;1 (will accept Regulations.gov style encoded parameters)&lt;/li&gt;&lt;li&gt;0 (will not accept such encoded parameters)&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param s Keyword(s) (optional)
     * @param dct Document Type: &lt;ul&gt;&lt;li&gt;N: Notice&lt;/li&gt;&lt;li&gt;PR: Proposed Rule&lt;/li&gt;&lt;li&gt;FR: Rule&lt;/li&gt;&lt;li&gt;O: Other&lt;/li&gt;&lt;li&gt;SR: Supporting &amp; Related Material&lt;/li&gt;&lt;li&gt;PS: Public Submission&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param dktid Valid Docket ID (ex. SEC-2012-0044) (optional)
     * @param dkt Docket Type: &lt;ul&gt;&lt;li&gt;R: Rulemaking&lt;/li&gt;&lt;li&gt;N: Nonrulemaking&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;A Docket Type is either Rulemaking or Nonrulemaking. A Rulemaking docket includes the type of regulation that establishes a rule. While a Non-Rulemaking docket does not include a rule.&lt;/p&gt; (optional)
     * @param cp Comment Period: &lt;ul&gt;&lt;li&gt;O: Open&lt;/li&gt;&lt;li&gt;C: Closed&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param a Federal Agency: List of accepted Federal Agency values. This field allows multiple values. Ex. a&#x3D;FMCSA%252BEPA%252BFDA (optional)
     * @param rpp Results Per Page 10, 25, 100, 500, 1,000.  Results per page may not exceed 1,000. (optional)
     * @param po Enter the page offset (always starts with 0). This is used in conjunction with results per page to provide large data sets. For example, if a search produces 82 results and the result per page is set to 25, this will generate 4 pages. 3 pages will have 25 results and the last page will have 7 results. Page offset values for each page will be: &lt;pre&gt;Page 1: po&#x3D;0 Page 2: po&#x3D;25 Page 3: po&#x3D;50 Page 4: po&#x3D;75&lt;/pre&gt; The total number of pages is [total results/results per page] and page offset for page X is [X-1 * results per page] (optional)
     * @param cs Comment Period Closing Soon: &lt;ul&gt;&lt;li&gt;0 (closing today)&lt;/li&gt;&lt;li&gt;3 (closing within 3 days)&lt;/li&gt;&lt;li&gt;15 (closing within 15 days)&lt;/li&gt;&lt;li&gt;30 (closing within 30 days)&lt;/li&gt;&lt;li&gt;90 (closing within 90 days)&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param np Newly Posted: &lt;ul&gt;&lt;li&gt;0 (posted today)&lt;/li&gt;&lt;li&gt;3 (posted within last 3 days)&lt;/li&gt;&lt;li&gt;15 (posted within last 15 days)&lt;/li&gt;&lt;li&gt;30 (posted within last 30 days)&lt;/li&gt;&lt;li&gt;90 (posted within last 90 days)&lt;/li&gt;&lt;/ul&gt;  For periods of time beyond 90-days, please use a date range with the Posted Date parameter. (optional)
     * @param cmsd Comment Period Start Date: Enter a date in the form of MM/DD/YY. Note: If the Comment Period End Date is also provided, then ensure the Comment Period Start date is earlier. (optional)
     * @param cmd Comment Period End Date: Enter a date in the form of MM/DD/YY. Note: If the Comment Period Start Date is also provided, then ensure the Comment Period End date is after.&lt;br/&gt;* Comment Period Start and End Dates are mutually exclusive with the &#39;closing soon&#39; parameter. If both are provided, &#39;closing soon&#39; will be ignored. (optional)
     * @param crd Creation Date: Enter a date in the form of MM/DD/YY. Accepts a single date or a date range. Ex. &lt;code&gt;crd&#x3D;11/06/13-03/06/14&lt;/code&gt; (optional)
     * @param rd Received Date: Enter a date in the form of MM/DD/YY. Accepts a single date or a date range. Ex. &lt;code&gt;rd&#x3D;11/06/13-03/06/14&lt;/code&gt; (optional)
     * @param pd Posted Date: Enter a date in the form of MM/DD/YY. Accepts a single date or a date range. Ex. &lt;code&gt;pd&#x3D;11/06/13-03/06/14&lt;/code&gt; (optional)
     * @param cat Document Category: &lt;ul&gt;&lt;li&gt;AD (Aerospace and Transportation)&lt;/li&gt; &lt;li&gt;AEP (Agriculture, Environment, and Public Lands)&lt;/li&gt; &lt;li&gt;BFS (Banking and Financial)&lt;/li&gt; &lt;li&gt;CT (Commerce and International)&lt;/li&gt; &lt;li&gt;LES (Defense, Law Enforcement, and Security)&lt;/li&gt; &lt;li&gt;EELS (Education, Labor, Presidential, and Government Services)&lt;/li&gt; &lt;li&gt;EUMM (Energy, Natural Resources, and Utilities)&lt;/li&gt; &lt;li&gt;HCFP (Food Safety, Health, and Pharmaceutical)&lt;/li&gt; &lt;li&gt;PRE (Housing, Development, and Real Estate)&lt;/li&gt; &lt;li&gt;ITT (Technology and Telecommunications)&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param sb Sort By: &lt;ul&gt;&lt;li&gt;docketId (Docket ID)&lt;/li&gt;&lt;li&gt;docId (Document ID)&lt;/li&gt;&lt;li&gt;title (Title)&lt;/li&gt;&lt;li&gt;postedDate (Posted Date)&lt;/li&gt;&lt;li&gt;agency (Agency)&lt;/li&gt;&lt;li&gt;documentType (Document Type)&lt;/li&gt;&lt;li&gt;submitterName (Submitter Name)&lt;/li&gt;&lt;li&gt;organization (Organization)&lt;/li&gt;&lt;/ul&gt; Sort Order is REQUIRED if this parameter is included. (optional)
     * @param so Sort Order: &lt;ul&gt;&lt;li&gt;ASC: Ascending&lt;/li&gt;&lt;li&gt;DESC: Descending&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param dktst Docket Subtype: Only one docket subtype at a time may be selected. One or more agency values must be part of the request. Only values valid for the selected agency will be returned. (optional)
     * @param dktst2 Docket Sub-subtype: Only one docket sub-subtype at a time may be selected. One or more agency values must be part of the request. Only values valid for the selected agency will be returned. (optional)
     * @param docst Document Subtype: Single or multiple document subtypes may be included.  Multiple values should be passed as follows: &lt;code&gt;docst&#x3D;%20Certificate+of+Service%252BCorrespondence&lt;/code&gt; (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> No response was specified </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request. The document is only available for comment via Regulations.gov. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> File not found. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> documentsWithHttpInfo(String responseFormat, Integer countsOnly, Integer encoded, String s, String dct, String dktid, String dkt, String cp, String a, String rpp, Integer po, Integer cs, Integer np, LocalDate cmsd, LocalDate cmd, LocalDate crd, LocalDate rd, LocalDate pd, String cat, String sb, String so, String dktst, String dktst2, String docst) throws ApiException {
        okhttp3.Call localVarCall = documentsValidateBeforeCall(responseFormat, countsOnly, encoded, s, dct, dktid, dkt, cp, a, rpp, po, cs, np, cmsd, cmd, crd, rd, pd, cat, sb, so, dktst, dktst2, docst, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Search for Documents (asynchronously)
     * This API allows users to build a query based on any of the parameters below.  If you have trouble building queries, you may wish to try them through the &lt;a href&#x3D;\&quot;http://www.regulations.gov/#!advancedSearch\&quot;&gt;Advanced Search&lt;/a&gt; page on the Regulations.gov website.
     * @param responseFormat Format (required)
     * @param countsOnly Counts Only: &lt;ul&gt;&lt;li&gt;1 (will return only the document count for a search query)&lt;/li&gt;&lt;li&gt;0 (will return documents as well)&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param encoded Encoded: &lt;ul&gt;&lt;li&gt;1 (will accept Regulations.gov style encoded parameters)&lt;/li&gt;&lt;li&gt;0 (will not accept such encoded parameters)&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param s Keyword(s) (optional)
     * @param dct Document Type: &lt;ul&gt;&lt;li&gt;N: Notice&lt;/li&gt;&lt;li&gt;PR: Proposed Rule&lt;/li&gt;&lt;li&gt;FR: Rule&lt;/li&gt;&lt;li&gt;O: Other&lt;/li&gt;&lt;li&gt;SR: Supporting &amp; Related Material&lt;/li&gt;&lt;li&gt;PS: Public Submission&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param dktid Valid Docket ID (ex. SEC-2012-0044) (optional)
     * @param dkt Docket Type: &lt;ul&gt;&lt;li&gt;R: Rulemaking&lt;/li&gt;&lt;li&gt;N: Nonrulemaking&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;A Docket Type is either Rulemaking or Nonrulemaking. A Rulemaking docket includes the type of regulation that establishes a rule. While a Non-Rulemaking docket does not include a rule.&lt;/p&gt; (optional)
     * @param cp Comment Period: &lt;ul&gt;&lt;li&gt;O: Open&lt;/li&gt;&lt;li&gt;C: Closed&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param a Federal Agency: List of accepted Federal Agency values. This field allows multiple values. Ex. a&#x3D;FMCSA%252BEPA%252BFDA (optional)
     * @param rpp Results Per Page 10, 25, 100, 500, 1,000.  Results per page may not exceed 1,000. (optional)
     * @param po Enter the page offset (always starts with 0). This is used in conjunction with results per page to provide large data sets. For example, if a search produces 82 results and the result per page is set to 25, this will generate 4 pages. 3 pages will have 25 results and the last page will have 7 results. Page offset values for each page will be: &lt;pre&gt;Page 1: po&#x3D;0 Page 2: po&#x3D;25 Page 3: po&#x3D;50 Page 4: po&#x3D;75&lt;/pre&gt; The total number of pages is [total results/results per page] and page offset for page X is [X-1 * results per page] (optional)
     * @param cs Comment Period Closing Soon: &lt;ul&gt;&lt;li&gt;0 (closing today)&lt;/li&gt;&lt;li&gt;3 (closing within 3 days)&lt;/li&gt;&lt;li&gt;15 (closing within 15 days)&lt;/li&gt;&lt;li&gt;30 (closing within 30 days)&lt;/li&gt;&lt;li&gt;90 (closing within 90 days)&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param np Newly Posted: &lt;ul&gt;&lt;li&gt;0 (posted today)&lt;/li&gt;&lt;li&gt;3 (posted within last 3 days)&lt;/li&gt;&lt;li&gt;15 (posted within last 15 days)&lt;/li&gt;&lt;li&gt;30 (posted within last 30 days)&lt;/li&gt;&lt;li&gt;90 (posted within last 90 days)&lt;/li&gt;&lt;/ul&gt;  For periods of time beyond 90-days, please use a date range with the Posted Date parameter. (optional)
     * @param cmsd Comment Period Start Date: Enter a date in the form of MM/DD/YY. Note: If the Comment Period End Date is also provided, then ensure the Comment Period Start date is earlier. (optional)
     * @param cmd Comment Period End Date: Enter a date in the form of MM/DD/YY. Note: If the Comment Period Start Date is also provided, then ensure the Comment Period End date is after.&lt;br/&gt;* Comment Period Start and End Dates are mutually exclusive with the &#39;closing soon&#39; parameter. If both are provided, &#39;closing soon&#39; will be ignored. (optional)
     * @param crd Creation Date: Enter a date in the form of MM/DD/YY. Accepts a single date or a date range. Ex. &lt;code&gt;crd&#x3D;11/06/13-03/06/14&lt;/code&gt; (optional)
     * @param rd Received Date: Enter a date in the form of MM/DD/YY. Accepts a single date or a date range. Ex. &lt;code&gt;rd&#x3D;11/06/13-03/06/14&lt;/code&gt; (optional)
     * @param pd Posted Date: Enter a date in the form of MM/DD/YY. Accepts a single date or a date range. Ex. &lt;code&gt;pd&#x3D;11/06/13-03/06/14&lt;/code&gt; (optional)
     * @param cat Document Category: &lt;ul&gt;&lt;li&gt;AD (Aerospace and Transportation)&lt;/li&gt; &lt;li&gt;AEP (Agriculture, Environment, and Public Lands)&lt;/li&gt; &lt;li&gt;BFS (Banking and Financial)&lt;/li&gt; &lt;li&gt;CT (Commerce and International)&lt;/li&gt; &lt;li&gt;LES (Defense, Law Enforcement, and Security)&lt;/li&gt; &lt;li&gt;EELS (Education, Labor, Presidential, and Government Services)&lt;/li&gt; &lt;li&gt;EUMM (Energy, Natural Resources, and Utilities)&lt;/li&gt; &lt;li&gt;HCFP (Food Safety, Health, and Pharmaceutical)&lt;/li&gt; &lt;li&gt;PRE (Housing, Development, and Real Estate)&lt;/li&gt; &lt;li&gt;ITT (Technology and Telecommunications)&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param sb Sort By: &lt;ul&gt;&lt;li&gt;docketId (Docket ID)&lt;/li&gt;&lt;li&gt;docId (Document ID)&lt;/li&gt;&lt;li&gt;title (Title)&lt;/li&gt;&lt;li&gt;postedDate (Posted Date)&lt;/li&gt;&lt;li&gt;agency (Agency)&lt;/li&gt;&lt;li&gt;documentType (Document Type)&lt;/li&gt;&lt;li&gt;submitterName (Submitter Name)&lt;/li&gt;&lt;li&gt;organization (Organization)&lt;/li&gt;&lt;/ul&gt; Sort Order is REQUIRED if this parameter is included. (optional)
     * @param so Sort Order: &lt;ul&gt;&lt;li&gt;ASC: Ascending&lt;/li&gt;&lt;li&gt;DESC: Descending&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param dktst Docket Subtype: Only one docket subtype at a time may be selected. One or more agency values must be part of the request. Only values valid for the selected agency will be returned. (optional)
     * @param dktst2 Docket Sub-subtype: Only one docket sub-subtype at a time may be selected. One or more agency values must be part of the request. Only values valid for the selected agency will be returned. (optional)
     * @param docst Document Subtype: Single or multiple document subtypes may be included.  Multiple values should be passed as follows: &lt;code&gt;docst&#x3D;%20Certificate+of+Service%252BCorrespondence&lt;/code&gt; (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> No response was specified </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request. The document is only available for comment via Regulations.gov. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> File not found. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call documentsAsync(String responseFormat, Integer countsOnly, Integer encoded, String s, String dct, String dktid, String dkt, String cp, String a, String rpp, Integer po, Integer cs, Integer np, LocalDate cmsd, LocalDate cmd, LocalDate crd, LocalDate rd, LocalDate pd, String cat, String sb, String so, String dktst, String dktst2, String docst, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = documentsValidateBeforeCall(responseFormat, countsOnly, encoded, s, dct, dktid, dkt, cp, a, rpp, po, cs, np, cmsd, cmd, crd, rd, pd, cat, sb, so, dktst, dktst2, docst, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
