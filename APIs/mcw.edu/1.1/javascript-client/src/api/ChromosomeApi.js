/**
 * Rat Genome Database REST API
 * The RGD REST API provides programmatic access to information and annotation stored in the Rat Genome Database
 *
 * The version of the OpenAPI document: 1.1
 * Contact: RGD.Data2@mcw.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Chromosome from '../model/Chromosome';

/**
* Chromosome service.
* @module api/ChromosomeApi
* @version 1.1
*/
export default class ChromosomeApi {

    /**
    * Constructs a new ChromosomeApi. 
    * @alias module:api/ChromosomeApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getChromosomeByAssemblyUsingGET operation.
     * @callback module:api/ChromosomeApi~getChromosomeByAssemblyUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Chromosome} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a list of chromosomes
     * @param {String} chromosome chromosome
     * @param {Number} mapKey mapKey
     * @param {module:api/ChromosomeApi~getChromosomeByAssemblyUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Chromosome}
     */
    getChromosomeByAssemblyUsingGET(chromosome, mapKey, callback) {
      let postBody = null;
      // verify the required parameter 'chromosome' is set
      if (chromosome === undefined || chromosome === null) {
        throw new Error("Missing the required parameter 'chromosome' when calling getChromosomeByAssemblyUsingGET");
      }
      // verify the required parameter 'mapKey' is set
      if (mapKey === undefined || mapKey === null) {
        throw new Error("Missing the required parameter 'mapKey' when calling getChromosomeByAssemblyUsingGET");
      }

      let pathParams = {
        'chromosome': chromosome,
        'mapKey': mapKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = Chromosome;
      return this.apiClient.callApi(
        '/maps/chr/{chromosome}/{mapKey}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getChromosomesByAssemblyUsingGET operation.
     * @callback module:api/ChromosomeApi~getChromosomesByAssemblyUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {Array.<String>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a list of chromosomes
     * @param {Number} mapKey mapKey
     * @param {module:api/ChromosomeApi~getChromosomesByAssemblyUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<String>}
     */
    getChromosomesByAssemblyUsingGET(mapKey, callback) {
      let postBody = null;
      // verify the required parameter 'mapKey' is set
      if (mapKey === undefined || mapKey === null) {
        throw new Error("Missing the required parameter 'mapKey' when calling getChromosomesByAssemblyUsingGET");
      }

      let pathParams = {
        'mapKey': mapKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = ['String'];
      return this.apiClient.callApi(
        '/maps/chr/{mapKey}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
