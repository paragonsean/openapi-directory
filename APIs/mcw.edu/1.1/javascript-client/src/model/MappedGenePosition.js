/**
 * Rat Genome Database REST API
 * The RGD REST API provides programmatic access to information and annotation stored in the Rat Genome Database
 *
 * The version of the OpenAPI document: 1.1
 * Contact: RGD.Data2@mcw.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MappedGenePosition model module.
 * @module model/MappedGenePosition
 * @version 1.1
 */
class MappedGenePosition {
    /**
     * Constructs a new <code>MappedGenePosition</code>.
     * @alias module:model/MappedGenePosition
     */
    constructor() { 
        
        MappedGenePosition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MappedGenePosition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MappedGenePosition} obj Optional instance to populate.
     * @return {module:model/MappedGenePosition} The populated <code>MappedGenePosition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MappedGenePosition();

            if (data.hasOwnProperty('chromosome')) {
                obj['chromosome'] = ApiClient.convertToType(data['chromosome'], 'String');
            }
            if (data.hasOwnProperty('mapKey')) {
                obj['mapKey'] = ApiClient.convertToType(data['mapKey'], 'Number');
            }
            if (data.hasOwnProperty('rgdId')) {
                obj['rgdId'] = ApiClient.convertToType(data['rgdId'], 'Number');
            }
            if (data.hasOwnProperty('start')) {
                obj['start'] = ApiClient.convertToType(data['start'], 'Number');
            }
            if (data.hasOwnProperty('stop')) {
                obj['stop'] = ApiClient.convertToType(data['stop'], 'Number');
            }
            if (data.hasOwnProperty('strand')) {
                obj['strand'] = ApiClient.convertToType(data['strand'], 'String');
            }
            if (data.hasOwnProperty('symbol')) {
                obj['symbol'] = ApiClient.convertToType(data['symbol'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MappedGenePosition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MappedGenePosition</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['chromosome'] && !(typeof data['chromosome'] === 'string' || data['chromosome'] instanceof String)) {
            throw new Error("Expected the field `chromosome` to be a primitive type in the JSON string but got " + data['chromosome']);
        }
        // ensure the json data is a string
        if (data['strand'] && !(typeof data['strand'] === 'string' || data['strand'] instanceof String)) {
            throw new Error("Expected the field `strand` to be a primitive type in the JSON string but got " + data['strand']);
        }
        // ensure the json data is a string
        if (data['symbol'] && !(typeof data['symbol'] === 'string' || data['symbol'] instanceof String)) {
            throw new Error("Expected the field `symbol` to be a primitive type in the JSON string but got " + data['symbol']);
        }

        return true;
    }


}



/**
 * @member {String} chromosome
 */
MappedGenePosition.prototype['chromosome'] = undefined;

/**
 * @member {Number} mapKey
 */
MappedGenePosition.prototype['mapKey'] = undefined;

/**
 * @member {Number} rgdId
 */
MappedGenePosition.prototype['rgdId'] = undefined;

/**
 * @member {Number} start
 */
MappedGenePosition.prototype['start'] = undefined;

/**
 * @member {Number} stop
 */
MappedGenePosition.prototype['stop'] = undefined;

/**
 * @member {String} strand
 */
MappedGenePosition.prototype['strand'] = undefined;

/**
 * @member {String} symbol
 */
MappedGenePosition.prototype['symbol'] = undefined;






export default MappedGenePosition;

