/**
 * Rat Genome Database REST API
 * The RGD REST API provides programmatic access to information and annotation stored in the Rat Genome Database
 *
 * The version of the OpenAPI document: 1.1
 * Contact: RGD.Data2@mcw.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AnnotationRequest model module.
 * @module model/AnnotationRequest
 * @version 1.1
 */
class AnnotationRequest {
    /**
     * Constructs a new <code>AnnotationRequest</code>.
     * @alias module:model/AnnotationRequest
     */
    constructor() { 
        
        AnnotationRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AnnotationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AnnotationRequest} obj Optional instance to populate.
     * @return {module:model/AnnotationRequest} The populated <code>AnnotationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AnnotationRequest();

            if (data.hasOwnProperty('evidenceCodes')) {
                obj['evidenceCodes'] = ApiClient.convertToType(data['evidenceCodes'], ['String']);
            }
            if (data.hasOwnProperty('ids')) {
                obj['ids'] = ApiClient.convertToType(data['ids'], ['String']);
            }
            if (data.hasOwnProperty('speciesTypeKeys')) {
                obj['speciesTypeKeys'] = ApiClient.convertToType(data['speciesTypeKeys'], ['Number']);
            }
            if (data.hasOwnProperty('termAcc')) {
                obj['termAcc'] = ApiClient.convertToType(data['termAcc'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AnnotationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AnnotationRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['evidenceCodes'])) {
            throw new Error("Expected the field `evidenceCodes` to be an array in the JSON data but got " + data['evidenceCodes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['ids'])) {
            throw new Error("Expected the field `ids` to be an array in the JSON data but got " + data['ids']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['speciesTypeKeys'])) {
            throw new Error("Expected the field `speciesTypeKeys` to be an array in the JSON data but got " + data['speciesTypeKeys']);
        }
        // ensure the json data is a string
        if (data['termAcc'] && !(typeof data['termAcc'] === 'string' || data['termAcc'] instanceof String)) {
            throw new Error("Expected the field `termAcc` to be a primitive type in the JSON string but got " + data['termAcc']);
        }

        return true;
    }


}



/**
 * @member {Array.<String>} evidenceCodes
 */
AnnotationRequest.prototype['evidenceCodes'] = undefined;

/**
 * @member {Array.<String>} ids
 */
AnnotationRequest.prototype['ids'] = undefined;

/**
 * @member {Array.<Number>} speciesTypeKeys
 */
AnnotationRequest.prototype['speciesTypeKeys'] = undefined;

/**
 * @member {String} termAcc
 */
AnnotationRequest.prototype['termAcc'] = undefined;






export default AnnotationRequest;

