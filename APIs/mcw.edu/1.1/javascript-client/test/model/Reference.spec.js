/**
 * Rat Genome Database REST API
 * The RGD REST API provides programmatic access to information and annotation stored in the Rat Genome Database
 *
 * The version of the OpenAPI document: 1.1
 * Contact: RGD.Data2@mcw.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.RatGenomeDatabaseRestApi);
  }
}(this, function(expect, RatGenomeDatabaseRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new RatGenomeDatabaseRestApi.Reference();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Reference', function() {
    it('should create an instance of Reference', function() {
      // uncomment below and update the code to test Reference
      //var instance = new RatGenomeDatabaseRestApi.Reference();
      //expect(instance).to.be.a(RatGenomeDatabaseRestApi.Reference);
    });

    it('should have the property citation (base name: "citation")', function() {
      // uncomment below and update the code to test the property citation
      //var instance = new RatGenomeDatabaseRestApi.Reference();
      //expect(instance).to.be();
    });

    it('should have the property doi (base name: "doi")', function() {
      // uncomment below and update the code to test the property doi
      //var instance = new RatGenomeDatabaseRestApi.Reference();
      //expect(instance).to.be();
    });

    it('should have the property editors (base name: "editors")', function() {
      // uncomment below and update the code to test the property editors
      //var instance = new RatGenomeDatabaseRestApi.Reference();
      //expect(instance).to.be();
    });

    it('should have the property issue (base name: "issue")', function() {
      // uncomment below and update the code to test the property issue
      //var instance = new RatGenomeDatabaseRestApi.Reference();
      //expect(instance).to.be();
    });

    it('should have the property key (base name: "key")', function() {
      // uncomment below and update the code to test the property key
      //var instance = new RatGenomeDatabaseRestApi.Reference();
      //expect(instance).to.be();
    });

    it('should have the property notes (base name: "notes")', function() {
      // uncomment below and update the code to test the property notes
      //var instance = new RatGenomeDatabaseRestApi.Reference();
      //expect(instance).to.be();
    });

    it('should have the property pages (base name: "pages")', function() {
      // uncomment below and update the code to test the property pages
      //var instance = new RatGenomeDatabaseRestApi.Reference();
      //expect(instance).to.be();
    });

    it('should have the property pubDate (base name: "pubDate")', function() {
      // uncomment below and update the code to test the property pubDate
      //var instance = new RatGenomeDatabaseRestApi.Reference();
      //expect(instance).to.be();
    });

    it('should have the property pubStatus (base name: "pubStatus")', function() {
      // uncomment below and update the code to test the property pubStatus
      //var instance = new RatGenomeDatabaseRestApi.Reference();
      //expect(instance).to.be();
    });

    it('should have the property publication (base name: "publication")', function() {
      // uncomment below and update the code to test the property publication
      //var instance = new RatGenomeDatabaseRestApi.Reference();
      //expect(instance).to.be();
    });

    it('should have the property publisher (base name: "publisher")', function() {
      // uncomment below and update the code to test the property publisher
      //var instance = new RatGenomeDatabaseRestApi.Reference();
      //expect(instance).to.be();
    });

    it('should have the property publisherCity (base name: "publisherCity")', function() {
      // uncomment below and update the code to test the property publisherCity
      //var instance = new RatGenomeDatabaseRestApi.Reference();
      //expect(instance).to.be();
    });

    it('should have the property refAbstract (base name: "refAbstract")', function() {
      // uncomment below and update the code to test the property refAbstract
      //var instance = new RatGenomeDatabaseRestApi.Reference();
      //expect(instance).to.be();
    });

    it('should have the property referenceType (base name: "referenceType")', function() {
      // uncomment below and update the code to test the property referenceType
      //var instance = new RatGenomeDatabaseRestApi.Reference();
      //expect(instance).to.be();
    });

    it('should have the property rgdId (base name: "rgdId")', function() {
      // uncomment below and update the code to test the property rgdId
      //var instance = new RatGenomeDatabaseRestApi.Reference();
      //expect(instance).to.be();
    });

    it('should have the property speciesTypeKey (base name: "speciesTypeKey")', function() {
      // uncomment below and update the code to test the property speciesTypeKey
      //var instance = new RatGenomeDatabaseRestApi.Reference();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new RatGenomeDatabaseRestApi.Reference();
      //expect(instance).to.be();
    });

    it('should have the property urlWebReference (base name: "urlWebReference")', function() {
      // uncomment below and update the code to test the property urlWebReference
      //var instance = new RatGenomeDatabaseRestApi.Reference();
      //expect(instance).to.be();
    });

    it('should have the property volume (base name: "volume")', function() {
      // uncomment below and update the code to test the property volume
      //var instance = new RatGenomeDatabaseRestApi.Reference();
      //expect(instance).to.be();
    });

  });

}));
