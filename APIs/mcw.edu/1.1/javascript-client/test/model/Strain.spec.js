/**
 * Rat Genome Database REST API
 * The RGD REST API provides programmatic access to information and annotation stored in the Rat Genome Database
 *
 * The version of the OpenAPI document: 1.1
 * Contact: RGD.Data2@mcw.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.RatGenomeDatabaseRestApi);
  }
}(this, function(expect, RatGenomeDatabaseRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new RatGenomeDatabaseRestApi.Strain();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Strain', function() {
    it('should create an instance of Strain', function() {
      // uncomment below and update the code to test Strain
      //var instance = new RatGenomeDatabaseRestApi.Strain();
      //expect(instance).to.be.a(RatGenomeDatabaseRestApi.Strain);
    });

    it('should have the property backgroundStrainRgdId (base name: "backgroundStrainRgdId")', function() {
      // uncomment below and update the code to test the property backgroundStrainRgdId
      //var instance = new RatGenomeDatabaseRestApi.Strain();
      //expect(instance).to.be();
    });

    it('should have the property chrAltered (base name: "chrAltered")', function() {
      // uncomment below and update the code to test the property chrAltered
      //var instance = new RatGenomeDatabaseRestApi.Strain();
      //expect(instance).to.be();
    });

    it('should have the property color (base name: "color")', function() {
      // uncomment below and update the code to test the property color
      //var instance = new RatGenomeDatabaseRestApi.Strain();
      //expect(instance).to.be();
    });

    it('should have the property geneticStatus (base name: "geneticStatus")', function() {
      // uncomment below and update the code to test the property geneticStatus
      //var instance = new RatGenomeDatabaseRestApi.Strain();
      //expect(instance).to.be();
    });

    it('should have the property genetics (base name: "genetics")', function() {
      // uncomment below and update the code to test the property genetics
      //var instance = new RatGenomeDatabaseRestApi.Strain();
      //expect(instance).to.be();
    });

    it('should have the property imageUrl (base name: "imageUrl")', function() {
      // uncomment below and update the code to test the property imageUrl
      //var instance = new RatGenomeDatabaseRestApi.Strain();
      //expect(instance).to.be();
    });

    it('should have the property inbredGen (base name: "inbredGen")', function() {
      // uncomment below and update the code to test the property inbredGen
      //var instance = new RatGenomeDatabaseRestApi.Strain();
      //expect(instance).to.be();
    });

    it('should have the property key (base name: "key")', function() {
      // uncomment below and update the code to test the property key
      //var instance = new RatGenomeDatabaseRestApi.Strain();
      //expect(instance).to.be();
    });

    it('should have the property lastStatus (base name: "lastStatus")', function() {
      // uncomment below and update the code to test the property lastStatus
      //var instance = new RatGenomeDatabaseRestApi.Strain();
      //expect(instance).to.be();
    });

    it('should have the property lastStatusObject (base name: "lastStatusObject")', function() {
      // uncomment below and update the code to test the property lastStatusObject
      //var instance = new RatGenomeDatabaseRestApi.Strain();
      //expect(instance).to.be();
    });

    it('should have the property modificationMethod (base name: "modificationMethod")', function() {
      // uncomment below and update the code to test the property modificationMethod
      //var instance = new RatGenomeDatabaseRestApi.Strain();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new RatGenomeDatabaseRestApi.Strain();
      //expect(instance).to.be();
    });

    it('should have the property notes (base name: "notes")', function() {
      // uncomment below and update the code to test the property notes
      //var instance = new RatGenomeDatabaseRestApi.Strain();
      //expect(instance).to.be();
    });

    it('should have the property origin (base name: "origin")', function() {
      // uncomment below and update the code to test the property origin
      //var instance = new RatGenomeDatabaseRestApi.Strain();
      //expect(instance).to.be();
    });

    it('should have the property researchUse (base name: "researchUse")', function() {
      // uncomment below and update the code to test the property researchUse
      //var instance = new RatGenomeDatabaseRestApi.Strain();
      //expect(instance).to.be();
    });

    it('should have the property rgdId (base name: "rgdId")', function() {
      // uncomment below and update the code to test the property rgdId
      //var instance = new RatGenomeDatabaseRestApi.Strain();
      //expect(instance).to.be();
    });

    it('should have the property source (base name: "source")', function() {
      // uncomment below and update the code to test the property source
      //var instance = new RatGenomeDatabaseRestApi.Strain();
      //expect(instance).to.be();
    });

    it('should have the property speciesTypeKey (base name: "speciesTypeKey")', function() {
      // uncomment below and update the code to test the property speciesTypeKey
      //var instance = new RatGenomeDatabaseRestApi.Strain();
      //expect(instance).to.be();
    });

    it('should have the property statusLog (base name: "statusLog")', function() {
      // uncomment below and update the code to test the property statusLog
      //var instance = new RatGenomeDatabaseRestApi.Strain();
      //expect(instance).to.be();
    });

    it('should have the property strain (base name: "strain")', function() {
      // uncomment below and update the code to test the property strain
      //var instance = new RatGenomeDatabaseRestApi.Strain();
      //expect(instance).to.be();
    });

    it('should have the property strainTypeName (base name: "strainTypeName")', function() {
      // uncomment below and update the code to test the property strainTypeName
      //var instance = new RatGenomeDatabaseRestApi.Strain();
      //expect(instance).to.be();
    });

    it('should have the property substrain (base name: "substrain")', function() {
      // uncomment below and update the code to test the property substrain
      //var instance = new RatGenomeDatabaseRestApi.Strain();
      //expect(instance).to.be();
    });

    it('should have the property symbol (base name: "symbol")', function() {
      // uncomment below and update the code to test the property symbol
      //var instance = new RatGenomeDatabaseRestApi.Strain();
      //expect(instance).to.be();
    });

  });

}));
