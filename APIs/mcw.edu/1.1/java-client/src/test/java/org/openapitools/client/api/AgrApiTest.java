/*
 * Rat Genome Database REST API
 * The RGD REST API provides programmatic access to information and annotation stored in the Rat Genome Database
 *
 * The version of the OpenAPI document: 1.1
 * Contact: RGD.Data2@mcw.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AgrApi
 */
@Disabled
public class AgrApiTest {

    private final AgrApi api = new AgrApi();

    /**
     * Get affected genomic models (rat strains with gene alleles) submitted by RGD to AGR by taxonId
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAffectedGenomicModelsUsingGETTest() throws ApiException {
        String taxonId = null;
        Map<String, Object> response = api.getAffectedGenomicModelsUsingGET(taxonId);
        // TODO: test validations
    }

    /**
     * Get gene allele records submitted by RGD to AGR by taxonId
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllelesForTaxonUsingGETTest() throws ApiException {
        String taxonId = null;
        Map<String, Object> response = api.getAllelesForTaxonUsingGET(taxonId);
        // TODO: test validations
    }

    /**
     * Get expression annotations submitted by RGD to AGR by taxonId
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getExpressionForTaxonUsingGETTest() throws ApiException {
        String taxonId = null;
        Map<String, Object> response = api.getExpressionForTaxonUsingGET(taxonId);
        // TODO: test validations
    }

    /**
     * Get gene records submitted by RGD to AGR by taxonId
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGenesForLatestAssemblyUsingGETTest() throws ApiException {
        String taxonId = null;
        Map<String, Object> response = api.getGenesForLatestAssemblyUsingGET(taxonId);
        // TODO: test validations
    }

    /**
     * Get phenotype annotations submitted by RGD to AGR by taxonId
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPhenotypesForTaxonUsingGETTest() throws ApiException {
        String taxonId = null;
        Map<String, Object> response = api.getPhenotypesForTaxonUsingGET(taxonId);
        // TODO: test validations
    }

    /**
     * Get basic variant records submitted by RGD to AGR by taxonId
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getVariantsForTaxonUsingGETTest() throws ApiException {
        String taxonId = null;
        Map<String, Object> response = api.getVariantsForTaxonUsingGET(taxonId);
        // TODO: test validations
    }

}
