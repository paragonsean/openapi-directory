/*
 * Rat Genome Database REST API
 * The RGD REST API provides programmatic access to information and annotation stored in the Rat Genome Database
 *
 * The version of the OpenAPI document: 1.1
 * Contact: RGD.Data2@mcw.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.RGDIDListRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LookupApi
 */
@Disabled
public class LookupApiTest {

    private final LookupApi api = new LookupApi();

    /**
     * Translate an RGD ID to an Ensembl Gene  ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEnsemblGeneMappingUsingGETTest() throws ApiException {
        Integer rgdId = null;
        Map<String, String> response = api.getEnsemblGeneMappingUsingGET(rgdId);
        // TODO: test validations
    }

    /**
     * Translate RGD IDs to Ensembl Gene IDs
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEnsemblGeneMappingUsingPOSTTest() throws ApiException {
        RGDIDListRequest rgDIDListRequest = null;
        Map<String, String> response = api.getEnsemblGeneMappingUsingPOST(rgDIDListRequest);
        // TODO: test validations
    }

    /**
     * Translate an RGD ID to an Ensembl Protein ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEnsemblProteinMappingUsingGETTest() throws ApiException {
        Integer rgdId = null;
        Map<String, String> response = api.getEnsemblProteinMappingUsingGET(rgdId);
        // TODO: test validations
    }

    /**
     * Translate RGD IDs to Ensembl Protein IDs
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEnsemblProteinMappingUsingPOSTTest() throws ApiException {
        RGDIDListRequest rgDIDListRequest = null;
        Map<String, String> response = api.getEnsemblProteinMappingUsingPOST(rgDIDListRequest);
        // TODO: test validations
    }

    /**
     * Translate an RGD ID to an Ensembl Transcript ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEnsemblTranscriptMappingUsingGETTest() throws ApiException {
        Integer rgdId = null;
        Map<String, String> response = api.getEnsemblTranscriptMappingUsingGET(rgdId);
        // TODO: test validations
    }

    /**
     * Translate RGD IDs to Ensembl Transcript IDs
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEnsemblTranscriptMappingUsingPOSTTest() throws ApiException {
        RGDIDListRequest rgDIDListRequest = null;
        Map<String, String> response = api.getEnsemblTranscriptMappingUsingPOST(rgDIDListRequest);
        // TODO: test validations
    }

    /**
     * Translate an RGD ID to an GTEx ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGTEXMappingUsingGETTest() throws ApiException {
        Integer rgdId = null;
        Map<String, String> response = api.getGTEXMappingUsingGET(rgdId);
        // TODO: test validations
    }

    /**
     * Translate RGD IDs to GTEx IDs
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGTEXMappingUsingPOSTTest() throws ApiException {
        RGDIDListRequest rgDIDListRequest = null;
        Map<String, String> response = api.getGTEXMappingUsingPOST(rgDIDListRequest);
        // TODO: test validations
    }

    /**
     * Translate an RGD ID to a GenBank Nucleotide ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGenBankNucleotideMappingUsingGETTest() throws ApiException {
        Integer rgdId = null;
        Map<String, String> response = api.getGenBankNucleotideMappingUsingGET(rgdId);
        // TODO: test validations
    }

    /**
     * Translate RGD IDs to GenBank Nucleotide IDs
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGenBankNucleotideMappingUsingPOSTTest() throws ApiException {
        RGDIDListRequest rgDIDListRequest = null;
        Map<String, String> response = api.getGenBankNucleotideMappingUsingPOST(rgDIDListRequest);
        // TODO: test validations
    }

    /**
     * Translate an RGD ID to a GenBank Protein ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGenBankProteinMappingUsingGETTest() throws ApiException {
        Integer rgdId = null;
        Map<String, String> response = api.getGenBankProteinMappingUsingGET(rgdId);
        // TODO: test validations
    }

    /**
     * Translate RGD IDs to GenBank Protein IDs
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGenBankProteinMappingUsingPOSTTest() throws ApiException {
        RGDIDListRequest rgDIDListRequest = null;
        Map<String, String> response = api.getGenBankProteinMappingUsingPOST(rgDIDListRequest);
        // TODO: test validations
    }

    /**
     * Returns a list of gene types avialable in RGD
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGeneTypesUsingGETTest() throws ApiException {
        List<String> response = api.getGeneTypesUsingGET();
        // TODO: test validations
    }

    /**
     * Translate an RGD ID to an HGNC ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getHGNCMappingUsingGETTest() throws ApiException {
        Integer rgdId = null;
        Map<String, String> response = api.getHGNCMappingUsingGET(rgdId);
        // TODO: test validations
    }

    /**
     * Translate RGD IDs to HGNC IDs
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getHGNCMappingUsingPOSTTest() throws ApiException {
        RGDIDListRequest rgDIDListRequest = null;
        Map<String, String> response = api.getHGNCMappingUsingPOST(rgDIDListRequest);
        // TODO: test validations
    }

    /**
     * Translate an RGD ID to an MGI ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMGIMappingUsingGETTest() throws ApiException {
        Integer rgdId = null;
        Map<String, String> response = api.getMGIMappingUsingGET(rgdId);
        // TODO: test validations
    }

    /**
     * Translate RGD IDs to MGI IDs
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMGIMappingUsingPOSTTest() throws ApiException {
        RGDIDListRequest rgDIDListRequest = null;
        Map<String, String> response = api.getMGIMappingUsingPOST(rgDIDListRequest);
        // TODO: test validations
    }

    /**
     * Return a list assembly maps for a species
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMapsUsingGETTest() throws ApiException {
        Integer speciesTypeKey = null;
        List<Map> response = api.getMapsUsingGET(speciesTypeKey);
        // TODO: test validations
    }

    /**
     * Return a standardUnit for an ontology if it exists
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMapsUsingGET1Test() throws ApiException {
        String accId = null;
        String response = api.getMapsUsingGET1(accId);
        // TODO: test validations
    }

    /**
     * Translate an RGD ID to an NCBI Gene ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNCBIGeneMappingUsingGETTest() throws ApiException {
        Integer rgdId = null;
        Map<String, String> response = api.getNCBIGeneMappingUsingGET(rgdId);
        // TODO: test validations
    }

    /**
     * Translate RGD IDs to NCBI Gene IDs
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNCBIGeneMappingUsingPOSTTest() throws ApiException {
        RGDIDListRequest rgDIDListRequest = null;
        Map<String, String> response = api.getNCBIGeneMappingUsingPOST(rgDIDListRequest);
        // TODO: test validations
    }

    /**
     * Return a Map of species type keys available in RGD
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSpeciesTypesUsingGETTest() throws ApiException {
        Object response = api.getSpeciesTypesUsingGET();
        // TODO: test validations
    }

    /**
     * Translate an RGD ID to a UniProt ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUniProtMappingUsingGETTest() throws ApiException {
        Integer rgdId = null;
        Map<String, String> response = api.getUniProtMappingUsingGET(rgdId);
        // TODO: test validations
    }

    /**
     * Translate RGD IDs to UniProt IDs
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUniProtMappingUsingPOSTTest() throws ApiException {
        RGDIDListRequest rgDIDListRequest = null;
        Map<String, String> response = api.getUniProtMappingUsingPOST(rgDIDListRequest);
        // TODO: test validations
    }

}
