/*
 * Rat Genome Database REST API
 * The RGD REST API provides programmatic access to information and annotation stored in the Rat Genome Database
 *
 * The version of the OpenAPI document: 1.1
 * Contact: RGD.Data2@mcw.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.MappedQTL;
import org.openapitools.client.model.QTL;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for QtlApi
 */
@Disabled
public class QtlApiTest {

    private final QtlApi api = new QtlApi();

    /**
     * Returns a list QTL for given position and assembly map
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMappedQTLByPositionUsingGETTest() throws ApiException {
        String chr = null;
        Long start = null;
        Long stop = null;
        Integer mapKey = null;
        List<MappedQTL> response = api.getMappedQTLByPositionUsingGET(chr, start, stop, mapKey);
        // TODO: test validations
    }

    /**
     * Return a QTL for provided RGD ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getQTLByRgdIdUsingGETTest() throws ApiException {
        Integer rgdId = null;
        QTL response = api.getQTLByRgdIdUsingGET(rgdId);
        // TODO: test validations
    }

    /**
     * Returns a list QTL for given position and assembly map
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getQtlListByPositionUsingGETTest() throws ApiException {
        String chr = null;
        Long start = null;
        Long stop = null;
        Integer mapKey = null;
        List<QTL> response = api.getQtlListByPositionUsingGET(chr, start, stop, mapKey);
        // TODO: test validations
    }

}
