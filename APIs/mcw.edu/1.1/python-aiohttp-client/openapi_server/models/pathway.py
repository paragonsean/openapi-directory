# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.pathway_object import PathwayObject
from openapi_server.models.reference import Reference
from openapi_server import util


class Pathway(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, has_altered_path: str=None, id: str=None, name: str=None, object_list: List[PathwayObject]=None, pathway_categories: List[str]=None, reference_list: List[Reference]=None):
        """Pathway - a model defined in OpenAPI

        :param description: The description of this Pathway.
        :param has_altered_path: The has_altered_path of this Pathway.
        :param id: The id of this Pathway.
        :param name: The name of this Pathway.
        :param object_list: The object_list of this Pathway.
        :param pathway_categories: The pathway_categories of this Pathway.
        :param reference_list: The reference_list of this Pathway.
        """
        self.openapi_types = {
            'description': str,
            'has_altered_path': str,
            'id': str,
            'name': str,
            'object_list': List[PathwayObject],
            'pathway_categories': List[str],
            'reference_list': List[Reference]
        }

        self.attribute_map = {
            'description': 'description',
            'has_altered_path': 'hasAlteredPath',
            'id': 'id',
            'name': 'name',
            'object_list': 'objectList',
            'pathway_categories': 'pathwayCategories',
            'reference_list': 'referenceList'
        }

        self._description = description
        self._has_altered_path = has_altered_path
        self._id = id
        self._name = name
        self._object_list = object_list
        self._pathway_categories = pathway_categories
        self._reference_list = reference_list

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Pathway':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Pathway of this Pathway.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this Pathway.


        :return: The description of this Pathway.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Pathway.


        :param description: The description of this Pathway.
        :type description: str
        """

        self._description = description

    @property
    def has_altered_path(self):
        """Gets the has_altered_path of this Pathway.


        :return: The has_altered_path of this Pathway.
        :rtype: str
        """
        return self._has_altered_path

    @has_altered_path.setter
    def has_altered_path(self, has_altered_path):
        """Sets the has_altered_path of this Pathway.


        :param has_altered_path: The has_altered_path of this Pathway.
        :type has_altered_path: str
        """

        self._has_altered_path = has_altered_path

    @property
    def id(self):
        """Gets the id of this Pathway.


        :return: The id of this Pathway.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Pathway.


        :param id: The id of this Pathway.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this Pathway.


        :return: The name of this Pathway.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Pathway.


        :param name: The name of this Pathway.
        :type name: str
        """

        self._name = name

    @property
    def object_list(self):
        """Gets the object_list of this Pathway.


        :return: The object_list of this Pathway.
        :rtype: List[PathwayObject]
        """
        return self._object_list

    @object_list.setter
    def object_list(self, object_list):
        """Sets the object_list of this Pathway.


        :param object_list: The object_list of this Pathway.
        :type object_list: List[PathwayObject]
        """

        self._object_list = object_list

    @property
    def pathway_categories(self):
        """Gets the pathway_categories of this Pathway.


        :return: The pathway_categories of this Pathway.
        :rtype: List[str]
        """
        return self._pathway_categories

    @pathway_categories.setter
    def pathway_categories(self, pathway_categories):
        """Sets the pathway_categories of this Pathway.


        :param pathway_categories: The pathway_categories of this Pathway.
        :type pathway_categories: List[str]
        """

        self._pathway_categories = pathway_categories

    @property
    def reference_list(self):
        """Gets the reference_list of this Pathway.


        :return: The reference_list of this Pathway.
        :rtype: List[Reference]
        """
        return self._reference_list

    @reference_list.setter
    def reference_list(self, reference_list):
        """Sets the reference_list of this Pathway.


        :param reference_list: The reference_list of this Pathway.
        :type reference_list: List[Reference]
        """

        self._reference_list = reference_list
