# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.qtl import QTL
from openapi_server import util


class MappedQTL(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, chromosome: str=None, map_key: int=None, qtl: QTL=None, start: int=None, stop: int=None, strand: str=None):
        """MappedQTL - a model defined in OpenAPI

        :param chromosome: The chromosome of this MappedQTL.
        :param map_key: The map_key of this MappedQTL.
        :param qtl: The qtl of this MappedQTL.
        :param start: The start of this MappedQTL.
        :param stop: The stop of this MappedQTL.
        :param strand: The strand of this MappedQTL.
        """
        self.openapi_types = {
            'chromosome': str,
            'map_key': int,
            'qtl': QTL,
            'start': int,
            'stop': int,
            'strand': str
        }

        self.attribute_map = {
            'chromosome': 'chromosome',
            'map_key': 'mapKey',
            'qtl': 'qtl',
            'start': 'start',
            'stop': 'stop',
            'strand': 'strand'
        }

        self._chromosome = chromosome
        self._map_key = map_key
        self._qtl = qtl
        self._start = start
        self._stop = stop
        self._strand = strand

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MappedQTL':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MappedQTL of this MappedQTL.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def chromosome(self):
        """Gets the chromosome of this MappedQTL.


        :return: The chromosome of this MappedQTL.
        :rtype: str
        """
        return self._chromosome

    @chromosome.setter
    def chromosome(self, chromosome):
        """Sets the chromosome of this MappedQTL.


        :param chromosome: The chromosome of this MappedQTL.
        :type chromosome: str
        """

        self._chromosome = chromosome

    @property
    def map_key(self):
        """Gets the map_key of this MappedQTL.


        :return: The map_key of this MappedQTL.
        :rtype: int
        """
        return self._map_key

    @map_key.setter
    def map_key(self, map_key):
        """Sets the map_key of this MappedQTL.


        :param map_key: The map_key of this MappedQTL.
        :type map_key: int
        """

        self._map_key = map_key

    @property
    def qtl(self):
        """Gets the qtl of this MappedQTL.


        :return: The qtl of this MappedQTL.
        :rtype: QTL
        """
        return self._qtl

    @qtl.setter
    def qtl(self, qtl):
        """Sets the qtl of this MappedQTL.


        :param qtl: The qtl of this MappedQTL.
        :type qtl: QTL
        """

        self._qtl = qtl

    @property
    def start(self):
        """Gets the start of this MappedQTL.


        :return: The start of this MappedQTL.
        :rtype: int
        """
        return self._start

    @start.setter
    def start(self, start):
        """Sets the start of this MappedQTL.


        :param start: The start of this MappedQTL.
        :type start: int
        """

        self._start = start

    @property
    def stop(self):
        """Gets the stop of this MappedQTL.


        :return: The stop of this MappedQTL.
        :rtype: int
        """
        return self._stop

    @stop.setter
    def stop(self, stop):
        """Sets the stop of this MappedQTL.


        :param stop: The stop of this MappedQTL.
        :type stop: int
        """

        self._stop = stop

    @property
    def strand(self):
        """Gets the strand of this MappedQTL.


        :return: The strand of this MappedQTL.
        :rtype: str
        """
        return self._strand

    @strand.setter
    def strand(self, strand):
        """Sets the strand of this MappedQTL.


        :param strand: The strand of this MappedQTL.
        :type strand: str
        """

        self._strand = strand
