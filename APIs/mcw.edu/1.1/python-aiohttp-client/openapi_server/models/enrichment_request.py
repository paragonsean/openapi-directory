# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EnrichmentRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aspect: str=None, genes: List[str]=None, species: str=None):
        """EnrichmentRequest - a model defined in OpenAPI

        :param aspect: The aspect of this EnrichmentRequest.
        :param genes: The genes of this EnrichmentRequest.
        :param species: The species of this EnrichmentRequest.
        """
        self.openapi_types = {
            'aspect': str,
            'genes': List[str],
            'species': str
        }

        self.attribute_map = {
            'aspect': 'aspect',
            'genes': 'genes',
            'species': 'species'
        }

        self._aspect = aspect
        self._genes = genes
        self._species = species

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnrichmentRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EnrichmentRequest of this EnrichmentRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aspect(self):
        """Gets the aspect of this EnrichmentRequest.


        :return: The aspect of this EnrichmentRequest.
        :rtype: str
        """
        return self._aspect

    @aspect.setter
    def aspect(self, aspect):
        """Sets the aspect of this EnrichmentRequest.


        :param aspect: The aspect of this EnrichmentRequest.
        :type aspect: str
        """

        self._aspect = aspect

    @property
    def genes(self):
        """Gets the genes of this EnrichmentRequest.


        :return: The genes of this EnrichmentRequest.
        :rtype: List[str]
        """
        return self._genes

    @genes.setter
    def genes(self, genes):
        """Sets the genes of this EnrichmentRequest.


        :param genes: The genes of this EnrichmentRequest.
        :type genes: List[str]
        """

        self._genes = genes

    @property
    def species(self):
        """Gets the species of this EnrichmentRequest.


        :return: The species of this EnrichmentRequest.
        :rtype: str
        """
        return self._species

    @species.setter
    def species(self, species):
        """Sets the species of this EnrichmentRequest.


        :param species: The species of this EnrichmentRequest.
        :type species: str
        """

        self._species = species
