# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Annotation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annotated_object_rgd_id: int=None, annotation_extension: str=None, aspect: str=None, created_by: int=None, created_date: datetime=None, data_src: str=None, evidence: str=None, gene_product_form_id: str=None, key: int=None, last_modified_by: int=None, last_modified_date: datetime=None, notes: str=None, object_name: str=None, object_symbol: str=None, original_created_date: datetime=None, qualifier: str=None, ref_rgd_id: int=None, relative_to: str=None, rgd_object_key: int=None, species_type_key: int=None, term: str=None, term_acc: str=None, with_info: str=None, xref_source: str=None):
        """Annotation - a model defined in OpenAPI

        :param annotated_object_rgd_id: The annotated_object_rgd_id of this Annotation.
        :param annotation_extension: The annotation_extension of this Annotation.
        :param aspect: The aspect of this Annotation.
        :param created_by: The created_by of this Annotation.
        :param created_date: The created_date of this Annotation.
        :param data_src: The data_src of this Annotation.
        :param evidence: The evidence of this Annotation.
        :param gene_product_form_id: The gene_product_form_id of this Annotation.
        :param key: The key of this Annotation.
        :param last_modified_by: The last_modified_by of this Annotation.
        :param last_modified_date: The last_modified_date of this Annotation.
        :param notes: The notes of this Annotation.
        :param object_name: The object_name of this Annotation.
        :param object_symbol: The object_symbol of this Annotation.
        :param original_created_date: The original_created_date of this Annotation.
        :param qualifier: The qualifier of this Annotation.
        :param ref_rgd_id: The ref_rgd_id of this Annotation.
        :param relative_to: The relative_to of this Annotation.
        :param rgd_object_key: The rgd_object_key of this Annotation.
        :param species_type_key: The species_type_key of this Annotation.
        :param term: The term of this Annotation.
        :param term_acc: The term_acc of this Annotation.
        :param with_info: The with_info of this Annotation.
        :param xref_source: The xref_source of this Annotation.
        """
        self.openapi_types = {
            'annotated_object_rgd_id': int,
            'annotation_extension': str,
            'aspect': str,
            'created_by': int,
            'created_date': datetime,
            'data_src': str,
            'evidence': str,
            'gene_product_form_id': str,
            'key': int,
            'last_modified_by': int,
            'last_modified_date': datetime,
            'notes': str,
            'object_name': str,
            'object_symbol': str,
            'original_created_date': datetime,
            'qualifier': str,
            'ref_rgd_id': int,
            'relative_to': str,
            'rgd_object_key': int,
            'species_type_key': int,
            'term': str,
            'term_acc': str,
            'with_info': str,
            'xref_source': str
        }

        self.attribute_map = {
            'annotated_object_rgd_id': 'annotatedObjectRgdId',
            'annotation_extension': 'annotationExtension',
            'aspect': 'aspect',
            'created_by': 'createdBy',
            'created_date': 'createdDate',
            'data_src': 'dataSrc',
            'evidence': 'evidence',
            'gene_product_form_id': 'geneProductFormId',
            'key': 'key',
            'last_modified_by': 'lastModifiedBy',
            'last_modified_date': 'lastModifiedDate',
            'notes': 'notes',
            'object_name': 'objectName',
            'object_symbol': 'objectSymbol',
            'original_created_date': 'originalCreatedDate',
            'qualifier': 'qualifier',
            'ref_rgd_id': 'refRgdId',
            'relative_to': 'relativeTo',
            'rgd_object_key': 'rgdObjectKey',
            'species_type_key': 'speciesTypeKey',
            'term': 'term',
            'term_acc': 'termAcc',
            'with_info': 'withInfo',
            'xref_source': 'xrefSource'
        }

        self._annotated_object_rgd_id = annotated_object_rgd_id
        self._annotation_extension = annotation_extension
        self._aspect = aspect
        self._created_by = created_by
        self._created_date = created_date
        self._data_src = data_src
        self._evidence = evidence
        self._gene_product_form_id = gene_product_form_id
        self._key = key
        self._last_modified_by = last_modified_by
        self._last_modified_date = last_modified_date
        self._notes = notes
        self._object_name = object_name
        self._object_symbol = object_symbol
        self._original_created_date = original_created_date
        self._qualifier = qualifier
        self._ref_rgd_id = ref_rgd_id
        self._relative_to = relative_to
        self._rgd_object_key = rgd_object_key
        self._species_type_key = species_type_key
        self._term = term
        self._term_acc = term_acc
        self._with_info = with_info
        self._xref_source = xref_source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Annotation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Annotation of this Annotation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annotated_object_rgd_id(self):
        """Gets the annotated_object_rgd_id of this Annotation.


        :return: The annotated_object_rgd_id of this Annotation.
        :rtype: int
        """
        return self._annotated_object_rgd_id

    @annotated_object_rgd_id.setter
    def annotated_object_rgd_id(self, annotated_object_rgd_id):
        """Sets the annotated_object_rgd_id of this Annotation.


        :param annotated_object_rgd_id: The annotated_object_rgd_id of this Annotation.
        :type annotated_object_rgd_id: int
        """

        self._annotated_object_rgd_id = annotated_object_rgd_id

    @property
    def annotation_extension(self):
        """Gets the annotation_extension of this Annotation.


        :return: The annotation_extension of this Annotation.
        :rtype: str
        """
        return self._annotation_extension

    @annotation_extension.setter
    def annotation_extension(self, annotation_extension):
        """Sets the annotation_extension of this Annotation.


        :param annotation_extension: The annotation_extension of this Annotation.
        :type annotation_extension: str
        """

        self._annotation_extension = annotation_extension

    @property
    def aspect(self):
        """Gets the aspect of this Annotation.


        :return: The aspect of this Annotation.
        :rtype: str
        """
        return self._aspect

    @aspect.setter
    def aspect(self, aspect):
        """Sets the aspect of this Annotation.


        :param aspect: The aspect of this Annotation.
        :type aspect: str
        """

        self._aspect = aspect

    @property
    def created_by(self):
        """Gets the created_by of this Annotation.


        :return: The created_by of this Annotation.
        :rtype: int
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this Annotation.


        :param created_by: The created_by of this Annotation.
        :type created_by: int
        """

        self._created_by = created_by

    @property
    def created_date(self):
        """Gets the created_date of this Annotation.


        :return: The created_date of this Annotation.
        :rtype: datetime
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this Annotation.


        :param created_date: The created_date of this Annotation.
        :type created_date: datetime
        """

        self._created_date = created_date

    @property
    def data_src(self):
        """Gets the data_src of this Annotation.


        :return: The data_src of this Annotation.
        :rtype: str
        """
        return self._data_src

    @data_src.setter
    def data_src(self, data_src):
        """Sets the data_src of this Annotation.


        :param data_src: The data_src of this Annotation.
        :type data_src: str
        """

        self._data_src = data_src

    @property
    def evidence(self):
        """Gets the evidence of this Annotation.


        :return: The evidence of this Annotation.
        :rtype: str
        """
        return self._evidence

    @evidence.setter
    def evidence(self, evidence):
        """Sets the evidence of this Annotation.


        :param evidence: The evidence of this Annotation.
        :type evidence: str
        """

        self._evidence = evidence

    @property
    def gene_product_form_id(self):
        """Gets the gene_product_form_id of this Annotation.


        :return: The gene_product_form_id of this Annotation.
        :rtype: str
        """
        return self._gene_product_form_id

    @gene_product_form_id.setter
    def gene_product_form_id(self, gene_product_form_id):
        """Sets the gene_product_form_id of this Annotation.


        :param gene_product_form_id: The gene_product_form_id of this Annotation.
        :type gene_product_form_id: str
        """

        self._gene_product_form_id = gene_product_form_id

    @property
    def key(self):
        """Gets the key of this Annotation.


        :return: The key of this Annotation.
        :rtype: int
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this Annotation.


        :param key: The key of this Annotation.
        :type key: int
        """

        self._key = key

    @property
    def last_modified_by(self):
        """Gets the last_modified_by of this Annotation.


        :return: The last_modified_by of this Annotation.
        :rtype: int
        """
        return self._last_modified_by

    @last_modified_by.setter
    def last_modified_by(self, last_modified_by):
        """Sets the last_modified_by of this Annotation.


        :param last_modified_by: The last_modified_by of this Annotation.
        :type last_modified_by: int
        """

        self._last_modified_by = last_modified_by

    @property
    def last_modified_date(self):
        """Gets the last_modified_date of this Annotation.


        :return: The last_modified_date of this Annotation.
        :rtype: datetime
        """
        return self._last_modified_date

    @last_modified_date.setter
    def last_modified_date(self, last_modified_date):
        """Sets the last_modified_date of this Annotation.


        :param last_modified_date: The last_modified_date of this Annotation.
        :type last_modified_date: datetime
        """

        self._last_modified_date = last_modified_date

    @property
    def notes(self):
        """Gets the notes of this Annotation.


        :return: The notes of this Annotation.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this Annotation.


        :param notes: The notes of this Annotation.
        :type notes: str
        """

        self._notes = notes

    @property
    def object_name(self):
        """Gets the object_name of this Annotation.


        :return: The object_name of this Annotation.
        :rtype: str
        """
        return self._object_name

    @object_name.setter
    def object_name(self, object_name):
        """Sets the object_name of this Annotation.


        :param object_name: The object_name of this Annotation.
        :type object_name: str
        """

        self._object_name = object_name

    @property
    def object_symbol(self):
        """Gets the object_symbol of this Annotation.


        :return: The object_symbol of this Annotation.
        :rtype: str
        """
        return self._object_symbol

    @object_symbol.setter
    def object_symbol(self, object_symbol):
        """Sets the object_symbol of this Annotation.


        :param object_symbol: The object_symbol of this Annotation.
        :type object_symbol: str
        """

        self._object_symbol = object_symbol

    @property
    def original_created_date(self):
        """Gets the original_created_date of this Annotation.


        :return: The original_created_date of this Annotation.
        :rtype: datetime
        """
        return self._original_created_date

    @original_created_date.setter
    def original_created_date(self, original_created_date):
        """Sets the original_created_date of this Annotation.


        :param original_created_date: The original_created_date of this Annotation.
        :type original_created_date: datetime
        """

        self._original_created_date = original_created_date

    @property
    def qualifier(self):
        """Gets the qualifier of this Annotation.


        :return: The qualifier of this Annotation.
        :rtype: str
        """
        return self._qualifier

    @qualifier.setter
    def qualifier(self, qualifier):
        """Sets the qualifier of this Annotation.


        :param qualifier: The qualifier of this Annotation.
        :type qualifier: str
        """

        self._qualifier = qualifier

    @property
    def ref_rgd_id(self):
        """Gets the ref_rgd_id of this Annotation.


        :return: The ref_rgd_id of this Annotation.
        :rtype: int
        """
        return self._ref_rgd_id

    @ref_rgd_id.setter
    def ref_rgd_id(self, ref_rgd_id):
        """Sets the ref_rgd_id of this Annotation.


        :param ref_rgd_id: The ref_rgd_id of this Annotation.
        :type ref_rgd_id: int
        """

        self._ref_rgd_id = ref_rgd_id

    @property
    def relative_to(self):
        """Gets the relative_to of this Annotation.


        :return: The relative_to of this Annotation.
        :rtype: str
        """
        return self._relative_to

    @relative_to.setter
    def relative_to(self, relative_to):
        """Sets the relative_to of this Annotation.


        :param relative_to: The relative_to of this Annotation.
        :type relative_to: str
        """

        self._relative_to = relative_to

    @property
    def rgd_object_key(self):
        """Gets the rgd_object_key of this Annotation.


        :return: The rgd_object_key of this Annotation.
        :rtype: int
        """
        return self._rgd_object_key

    @rgd_object_key.setter
    def rgd_object_key(self, rgd_object_key):
        """Sets the rgd_object_key of this Annotation.


        :param rgd_object_key: The rgd_object_key of this Annotation.
        :type rgd_object_key: int
        """

        self._rgd_object_key = rgd_object_key

    @property
    def species_type_key(self):
        """Gets the species_type_key of this Annotation.


        :return: The species_type_key of this Annotation.
        :rtype: int
        """
        return self._species_type_key

    @species_type_key.setter
    def species_type_key(self, species_type_key):
        """Sets the species_type_key of this Annotation.


        :param species_type_key: The species_type_key of this Annotation.
        :type species_type_key: int
        """

        self._species_type_key = species_type_key

    @property
    def term(self):
        """Gets the term of this Annotation.


        :return: The term of this Annotation.
        :rtype: str
        """
        return self._term

    @term.setter
    def term(self, term):
        """Sets the term of this Annotation.


        :param term: The term of this Annotation.
        :type term: str
        """

        self._term = term

    @property
    def term_acc(self):
        """Gets the term_acc of this Annotation.


        :return: The term_acc of this Annotation.
        :rtype: str
        """
        return self._term_acc

    @term_acc.setter
    def term_acc(self, term_acc):
        """Sets the term_acc of this Annotation.


        :param term_acc: The term_acc of this Annotation.
        :type term_acc: str
        """

        self._term_acc = term_acc

    @property
    def with_info(self):
        """Gets the with_info of this Annotation.


        :return: The with_info of this Annotation.
        :rtype: str
        """
        return self._with_info

    @with_info.setter
    def with_info(self, with_info):
        """Sets the with_info of this Annotation.


        :param with_info: The with_info of this Annotation.
        :type with_info: str
        """

        self._with_info = with_info

    @property
    def xref_source(self):
        """Gets the xref_source of this Annotation.


        :return: The xref_source of this Annotation.
        :rtype: str
        """
        return self._xref_source

    @xref_source.setter
    def xref_source(self, xref_source):
        """Sets the xref_source of this Annotation.


        :param xref_source: The xref_source of this Annotation.
        :type xref_source: str
        """

        self._xref_source = xref_source
