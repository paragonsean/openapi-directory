# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PathwayObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, acc_id: str=None, id: str=None, obj_desc: str=None, obj_name: str=None, type_id: int=None, type_name: str=None, url: str=None, xdb_key: int=None):
        """PathwayObject - a model defined in OpenAPI

        :param acc_id: The acc_id of this PathwayObject.
        :param id: The id of this PathwayObject.
        :param obj_desc: The obj_desc of this PathwayObject.
        :param obj_name: The obj_name of this PathwayObject.
        :param type_id: The type_id of this PathwayObject.
        :param type_name: The type_name of this PathwayObject.
        :param url: The url of this PathwayObject.
        :param xdb_key: The xdb_key of this PathwayObject.
        """
        self.openapi_types = {
            'acc_id': str,
            'id': str,
            'obj_desc': str,
            'obj_name': str,
            'type_id': int,
            'type_name': str,
            'url': str,
            'xdb_key': int
        }

        self.attribute_map = {
            'acc_id': 'accId',
            'id': 'id',
            'obj_desc': 'objDesc',
            'obj_name': 'objName',
            'type_id': 'typeId',
            'type_name': 'typeName',
            'url': 'url',
            'xdb_key': 'xdb_key'
        }

        self._acc_id = acc_id
        self._id = id
        self._obj_desc = obj_desc
        self._obj_name = obj_name
        self._type_id = type_id
        self._type_name = type_name
        self._url = url
        self._xdb_key = xdb_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PathwayObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PathwayObject of this PathwayObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def acc_id(self):
        """Gets the acc_id of this PathwayObject.


        :return: The acc_id of this PathwayObject.
        :rtype: str
        """
        return self._acc_id

    @acc_id.setter
    def acc_id(self, acc_id):
        """Sets the acc_id of this PathwayObject.


        :param acc_id: The acc_id of this PathwayObject.
        :type acc_id: str
        """

        self._acc_id = acc_id

    @property
    def id(self):
        """Gets the id of this PathwayObject.


        :return: The id of this PathwayObject.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PathwayObject.


        :param id: The id of this PathwayObject.
        :type id: str
        """

        self._id = id

    @property
    def obj_desc(self):
        """Gets the obj_desc of this PathwayObject.


        :return: The obj_desc of this PathwayObject.
        :rtype: str
        """
        return self._obj_desc

    @obj_desc.setter
    def obj_desc(self, obj_desc):
        """Sets the obj_desc of this PathwayObject.


        :param obj_desc: The obj_desc of this PathwayObject.
        :type obj_desc: str
        """

        self._obj_desc = obj_desc

    @property
    def obj_name(self):
        """Gets the obj_name of this PathwayObject.


        :return: The obj_name of this PathwayObject.
        :rtype: str
        """
        return self._obj_name

    @obj_name.setter
    def obj_name(self, obj_name):
        """Sets the obj_name of this PathwayObject.


        :param obj_name: The obj_name of this PathwayObject.
        :type obj_name: str
        """

        self._obj_name = obj_name

    @property
    def type_id(self):
        """Gets the type_id of this PathwayObject.


        :return: The type_id of this PathwayObject.
        :rtype: int
        """
        return self._type_id

    @type_id.setter
    def type_id(self, type_id):
        """Sets the type_id of this PathwayObject.


        :param type_id: The type_id of this PathwayObject.
        :type type_id: int
        """

        self._type_id = type_id

    @property
    def type_name(self):
        """Gets the type_name of this PathwayObject.


        :return: The type_name of this PathwayObject.
        :rtype: str
        """
        return self._type_name

    @type_name.setter
    def type_name(self, type_name):
        """Sets the type_name of this PathwayObject.


        :param type_name: The type_name of this PathwayObject.
        :type type_name: str
        """

        self._type_name = type_name

    @property
    def url(self):
        """Gets the url of this PathwayObject.


        :return: The url of this PathwayObject.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this PathwayObject.


        :param url: The url of this PathwayObject.
        :type url: str
        """

        self._url = url

    @property
    def xdb_key(self):
        """Gets the xdb_key of this PathwayObject.


        :return: The xdb_key of this PathwayObject.
        :rtype: int
        """
        return self._xdb_key

    @xdb_key.setter
    def xdb_key(self, xdb_key):
        """Sets the xdb_key of this PathwayObject.


        :param xdb_key: The xdb_key of this PathwayObject.
        :type xdb_key: int
        """

        self._xdb_key = xdb_key
