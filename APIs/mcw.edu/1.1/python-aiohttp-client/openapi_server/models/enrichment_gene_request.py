# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EnrichmentGeneRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, acc_id: str=None, gene_symbols: List[str]=None, species: str=None):
        """EnrichmentGeneRequest - a model defined in OpenAPI

        :param acc_id: The acc_id of this EnrichmentGeneRequest.
        :param gene_symbols: The gene_symbols of this EnrichmentGeneRequest.
        :param species: The species of this EnrichmentGeneRequest.
        """
        self.openapi_types = {
            'acc_id': str,
            'gene_symbols': List[str],
            'species': str
        }

        self.attribute_map = {
            'acc_id': 'accId',
            'gene_symbols': 'geneSymbols',
            'species': 'species'
        }

        self._acc_id = acc_id
        self._gene_symbols = gene_symbols
        self._species = species

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnrichmentGeneRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EnrichmentGeneRequest of this EnrichmentGeneRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def acc_id(self):
        """Gets the acc_id of this EnrichmentGeneRequest.


        :return: The acc_id of this EnrichmentGeneRequest.
        :rtype: str
        """
        return self._acc_id

    @acc_id.setter
    def acc_id(self, acc_id):
        """Sets the acc_id of this EnrichmentGeneRequest.


        :param acc_id: The acc_id of this EnrichmentGeneRequest.
        :type acc_id: str
        """

        self._acc_id = acc_id

    @property
    def gene_symbols(self):
        """Gets the gene_symbols of this EnrichmentGeneRequest.


        :return: The gene_symbols of this EnrichmentGeneRequest.
        :rtype: List[str]
        """
        return self._gene_symbols

    @gene_symbols.setter
    def gene_symbols(self, gene_symbols):
        """Sets the gene_symbols of this EnrichmentGeneRequest.


        :param gene_symbols: The gene_symbols of this EnrichmentGeneRequest.
        :type gene_symbols: List[str]
        """

        self._gene_symbols = gene_symbols

    @property
    def species(self):
        """Gets the species of this EnrichmentGeneRequest.


        :return: The species of this EnrichmentGeneRequest.
        :rtype: str
        """
        return self._species

    @species.setter
    def species(self, species):
        """Sets the species of this EnrichmentGeneRequest.


        :param species: The species of this EnrichmentGeneRequest.
        :type species: str
        """

        self._species = species
