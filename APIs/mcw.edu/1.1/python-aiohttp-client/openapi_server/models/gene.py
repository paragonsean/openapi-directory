# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Gene(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agr_description: str=None, description: str=None, ensembl_full_name: str=None, ensembl_gene_symbol: str=None, ensembl_gene_type: str=None, gene_source: str=None, key: int=None, merged_description: str=None, name: str=None, ncbi_annot_status: str=None, nomen_review_date: datetime=None, nomen_source: str=None, notes: str=None, ref_seq_status: str=None, rgd_id: int=None, so_acc_id: str=None, species_type_key: int=None, symbol: str=None, type: str=None, variant: bool=None):
        """Gene - a model defined in OpenAPI

        :param agr_description: The agr_description of this Gene.
        :param description: The description of this Gene.
        :param ensembl_full_name: The ensembl_full_name of this Gene.
        :param ensembl_gene_symbol: The ensembl_gene_symbol of this Gene.
        :param ensembl_gene_type: The ensembl_gene_type of this Gene.
        :param gene_source: The gene_source of this Gene.
        :param key: The key of this Gene.
        :param merged_description: The merged_description of this Gene.
        :param name: The name of this Gene.
        :param ncbi_annot_status: The ncbi_annot_status of this Gene.
        :param nomen_review_date: The nomen_review_date of this Gene.
        :param nomen_source: The nomen_source of this Gene.
        :param notes: The notes of this Gene.
        :param ref_seq_status: The ref_seq_status of this Gene.
        :param rgd_id: The rgd_id of this Gene.
        :param so_acc_id: The so_acc_id of this Gene.
        :param species_type_key: The species_type_key of this Gene.
        :param symbol: The symbol of this Gene.
        :param type: The type of this Gene.
        :param variant: The variant of this Gene.
        """
        self.openapi_types = {
            'agr_description': str,
            'description': str,
            'ensembl_full_name': str,
            'ensembl_gene_symbol': str,
            'ensembl_gene_type': str,
            'gene_source': str,
            'key': int,
            'merged_description': str,
            'name': str,
            'ncbi_annot_status': str,
            'nomen_review_date': datetime,
            'nomen_source': str,
            'notes': str,
            'ref_seq_status': str,
            'rgd_id': int,
            'so_acc_id': str,
            'species_type_key': int,
            'symbol': str,
            'type': str,
            'variant': bool
        }

        self.attribute_map = {
            'agr_description': 'agrDescription',
            'description': 'description',
            'ensembl_full_name': 'ensemblFullName',
            'ensembl_gene_symbol': 'ensemblGeneSymbol',
            'ensembl_gene_type': 'ensemblGeneType',
            'gene_source': 'geneSource',
            'key': 'key',
            'merged_description': 'mergedDescription',
            'name': 'name',
            'ncbi_annot_status': 'ncbiAnnotStatus',
            'nomen_review_date': 'nomenReviewDate',
            'nomen_source': 'nomenSource',
            'notes': 'notes',
            'ref_seq_status': 'refSeqStatus',
            'rgd_id': 'rgdId',
            'so_acc_id': 'soAccId',
            'species_type_key': 'speciesTypeKey',
            'symbol': 'symbol',
            'type': 'type',
            'variant': 'variant'
        }

        self._agr_description = agr_description
        self._description = description
        self._ensembl_full_name = ensembl_full_name
        self._ensembl_gene_symbol = ensembl_gene_symbol
        self._ensembl_gene_type = ensembl_gene_type
        self._gene_source = gene_source
        self._key = key
        self._merged_description = merged_description
        self._name = name
        self._ncbi_annot_status = ncbi_annot_status
        self._nomen_review_date = nomen_review_date
        self._nomen_source = nomen_source
        self._notes = notes
        self._ref_seq_status = ref_seq_status
        self._rgd_id = rgd_id
        self._so_acc_id = so_acc_id
        self._species_type_key = species_type_key
        self._symbol = symbol
        self._type = type
        self._variant = variant

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Gene':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Gene of this Gene.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agr_description(self):
        """Gets the agr_description of this Gene.


        :return: The agr_description of this Gene.
        :rtype: str
        """
        return self._agr_description

    @agr_description.setter
    def agr_description(self, agr_description):
        """Sets the agr_description of this Gene.


        :param agr_description: The agr_description of this Gene.
        :type agr_description: str
        """

        self._agr_description = agr_description

    @property
    def description(self):
        """Gets the description of this Gene.


        :return: The description of this Gene.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Gene.


        :param description: The description of this Gene.
        :type description: str
        """

        self._description = description

    @property
    def ensembl_full_name(self):
        """Gets the ensembl_full_name of this Gene.


        :return: The ensembl_full_name of this Gene.
        :rtype: str
        """
        return self._ensembl_full_name

    @ensembl_full_name.setter
    def ensembl_full_name(self, ensembl_full_name):
        """Sets the ensembl_full_name of this Gene.


        :param ensembl_full_name: The ensembl_full_name of this Gene.
        :type ensembl_full_name: str
        """

        self._ensembl_full_name = ensembl_full_name

    @property
    def ensembl_gene_symbol(self):
        """Gets the ensembl_gene_symbol of this Gene.


        :return: The ensembl_gene_symbol of this Gene.
        :rtype: str
        """
        return self._ensembl_gene_symbol

    @ensembl_gene_symbol.setter
    def ensembl_gene_symbol(self, ensembl_gene_symbol):
        """Sets the ensembl_gene_symbol of this Gene.


        :param ensembl_gene_symbol: The ensembl_gene_symbol of this Gene.
        :type ensembl_gene_symbol: str
        """

        self._ensembl_gene_symbol = ensembl_gene_symbol

    @property
    def ensembl_gene_type(self):
        """Gets the ensembl_gene_type of this Gene.


        :return: The ensembl_gene_type of this Gene.
        :rtype: str
        """
        return self._ensembl_gene_type

    @ensembl_gene_type.setter
    def ensembl_gene_type(self, ensembl_gene_type):
        """Sets the ensembl_gene_type of this Gene.


        :param ensembl_gene_type: The ensembl_gene_type of this Gene.
        :type ensembl_gene_type: str
        """

        self._ensembl_gene_type = ensembl_gene_type

    @property
    def gene_source(self):
        """Gets the gene_source of this Gene.


        :return: The gene_source of this Gene.
        :rtype: str
        """
        return self._gene_source

    @gene_source.setter
    def gene_source(self, gene_source):
        """Sets the gene_source of this Gene.


        :param gene_source: The gene_source of this Gene.
        :type gene_source: str
        """

        self._gene_source = gene_source

    @property
    def key(self):
        """Gets the key of this Gene.


        :return: The key of this Gene.
        :rtype: int
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this Gene.


        :param key: The key of this Gene.
        :type key: int
        """

        self._key = key

    @property
    def merged_description(self):
        """Gets the merged_description of this Gene.


        :return: The merged_description of this Gene.
        :rtype: str
        """
        return self._merged_description

    @merged_description.setter
    def merged_description(self, merged_description):
        """Sets the merged_description of this Gene.


        :param merged_description: The merged_description of this Gene.
        :type merged_description: str
        """

        self._merged_description = merged_description

    @property
    def name(self):
        """Gets the name of this Gene.


        :return: The name of this Gene.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Gene.


        :param name: The name of this Gene.
        :type name: str
        """

        self._name = name

    @property
    def ncbi_annot_status(self):
        """Gets the ncbi_annot_status of this Gene.


        :return: The ncbi_annot_status of this Gene.
        :rtype: str
        """
        return self._ncbi_annot_status

    @ncbi_annot_status.setter
    def ncbi_annot_status(self, ncbi_annot_status):
        """Sets the ncbi_annot_status of this Gene.


        :param ncbi_annot_status: The ncbi_annot_status of this Gene.
        :type ncbi_annot_status: str
        """

        self._ncbi_annot_status = ncbi_annot_status

    @property
    def nomen_review_date(self):
        """Gets the nomen_review_date of this Gene.


        :return: The nomen_review_date of this Gene.
        :rtype: datetime
        """
        return self._nomen_review_date

    @nomen_review_date.setter
    def nomen_review_date(self, nomen_review_date):
        """Sets the nomen_review_date of this Gene.


        :param nomen_review_date: The nomen_review_date of this Gene.
        :type nomen_review_date: datetime
        """

        self._nomen_review_date = nomen_review_date

    @property
    def nomen_source(self):
        """Gets the nomen_source of this Gene.


        :return: The nomen_source of this Gene.
        :rtype: str
        """
        return self._nomen_source

    @nomen_source.setter
    def nomen_source(self, nomen_source):
        """Sets the nomen_source of this Gene.


        :param nomen_source: The nomen_source of this Gene.
        :type nomen_source: str
        """

        self._nomen_source = nomen_source

    @property
    def notes(self):
        """Gets the notes of this Gene.


        :return: The notes of this Gene.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this Gene.


        :param notes: The notes of this Gene.
        :type notes: str
        """

        self._notes = notes

    @property
    def ref_seq_status(self):
        """Gets the ref_seq_status of this Gene.


        :return: The ref_seq_status of this Gene.
        :rtype: str
        """
        return self._ref_seq_status

    @ref_seq_status.setter
    def ref_seq_status(self, ref_seq_status):
        """Sets the ref_seq_status of this Gene.


        :param ref_seq_status: The ref_seq_status of this Gene.
        :type ref_seq_status: str
        """

        self._ref_seq_status = ref_seq_status

    @property
    def rgd_id(self):
        """Gets the rgd_id of this Gene.


        :return: The rgd_id of this Gene.
        :rtype: int
        """
        return self._rgd_id

    @rgd_id.setter
    def rgd_id(self, rgd_id):
        """Sets the rgd_id of this Gene.


        :param rgd_id: The rgd_id of this Gene.
        :type rgd_id: int
        """

        self._rgd_id = rgd_id

    @property
    def so_acc_id(self):
        """Gets the so_acc_id of this Gene.


        :return: The so_acc_id of this Gene.
        :rtype: str
        """
        return self._so_acc_id

    @so_acc_id.setter
    def so_acc_id(self, so_acc_id):
        """Sets the so_acc_id of this Gene.


        :param so_acc_id: The so_acc_id of this Gene.
        :type so_acc_id: str
        """

        self._so_acc_id = so_acc_id

    @property
    def species_type_key(self):
        """Gets the species_type_key of this Gene.


        :return: The species_type_key of this Gene.
        :rtype: int
        """
        return self._species_type_key

    @species_type_key.setter
    def species_type_key(self, species_type_key):
        """Sets the species_type_key of this Gene.


        :param species_type_key: The species_type_key of this Gene.
        :type species_type_key: int
        """

        self._species_type_key = species_type_key

    @property
    def symbol(self):
        """Gets the symbol of this Gene.


        :return: The symbol of this Gene.
        :rtype: str
        """
        return self._symbol

    @symbol.setter
    def symbol(self, symbol):
        """Sets the symbol of this Gene.


        :param symbol: The symbol of this Gene.
        :type symbol: str
        """

        self._symbol = symbol

    @property
    def type(self):
        """Gets the type of this Gene.


        :return: The type of this Gene.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Gene.


        :param type: The type of this Gene.
        :type type: str
        """

        self._type = type

    @property
    def variant(self):
        """Gets the variant of this Gene.


        :return: The variant of this Gene.
        :rtype: bool
        """
        return self._variant

    @variant.setter
    def variant(self, variant):
        """Sets the variant of this Gene.


        :param variant: The variant of this Gene.
        :type variant: bool
        """

        self._variant = variant
