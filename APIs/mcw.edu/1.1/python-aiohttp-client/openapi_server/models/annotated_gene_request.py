# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AnnotatedGeneRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, acc_id: str=None, evidence_codes: List[str]=None, species_type_keys: List[int]=None):
        """AnnotatedGeneRequest - a model defined in OpenAPI

        :param acc_id: The acc_id of this AnnotatedGeneRequest.
        :param evidence_codes: The evidence_codes of this AnnotatedGeneRequest.
        :param species_type_keys: The species_type_keys of this AnnotatedGeneRequest.
        """
        self.openapi_types = {
            'acc_id': str,
            'evidence_codes': List[str],
            'species_type_keys': List[int]
        }

        self.attribute_map = {
            'acc_id': 'accId',
            'evidence_codes': 'evidenceCodes',
            'species_type_keys': 'speciesTypeKeys'
        }

        self._acc_id = acc_id
        self._evidence_codes = evidence_codes
        self._species_type_keys = species_type_keys

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnnotatedGeneRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AnnotatedGeneRequest of this AnnotatedGeneRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def acc_id(self):
        """Gets the acc_id of this AnnotatedGeneRequest.


        :return: The acc_id of this AnnotatedGeneRequest.
        :rtype: str
        """
        return self._acc_id

    @acc_id.setter
    def acc_id(self, acc_id):
        """Sets the acc_id of this AnnotatedGeneRequest.


        :param acc_id: The acc_id of this AnnotatedGeneRequest.
        :type acc_id: str
        """

        self._acc_id = acc_id

    @property
    def evidence_codes(self):
        """Gets the evidence_codes of this AnnotatedGeneRequest.


        :return: The evidence_codes of this AnnotatedGeneRequest.
        :rtype: List[str]
        """
        return self._evidence_codes

    @evidence_codes.setter
    def evidence_codes(self, evidence_codes):
        """Sets the evidence_codes of this AnnotatedGeneRequest.


        :param evidence_codes: The evidence_codes of this AnnotatedGeneRequest.
        :type evidence_codes: List[str]
        """

        self._evidence_codes = evidence_codes

    @property
    def species_type_keys(self):
        """Gets the species_type_keys of this AnnotatedGeneRequest.


        :return: The species_type_keys of this AnnotatedGeneRequest.
        :rtype: List[int]
        """
        return self._species_type_keys

    @species_type_keys.setter
    def species_type_keys(self, species_type_keys):
        """Sets the species_type_keys of this AnnotatedGeneRequest.


        :param species_type_keys: The species_type_keys of this AnnotatedGeneRequest.
        :type species_type_keys: List[int]
        """

        self._species_type_keys = species_type_keys
