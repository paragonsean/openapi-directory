# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TermXRef(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key: int=None, term_acc: str=None, xref_description: str=None, xref_value: str=None):
        """TermXRef - a model defined in OpenAPI

        :param key: The key of this TermXRef.
        :param term_acc: The term_acc of this TermXRef.
        :param xref_description: The xref_description of this TermXRef.
        :param xref_value: The xref_value of this TermXRef.
        """
        self.openapi_types = {
            'key': int,
            'term_acc': str,
            'xref_description': str,
            'xref_value': str
        }

        self.attribute_map = {
            'key': 'key',
            'term_acc': 'termAcc',
            'xref_description': 'xrefDescription',
            'xref_value': 'xrefValue'
        }

        self._key = key
        self._term_acc = term_acc
        self._xref_description = xref_description
        self._xref_value = xref_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TermXRef':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TermXRef of this TermXRef.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key(self):
        """Gets the key of this TermXRef.


        :return: The key of this TermXRef.
        :rtype: int
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this TermXRef.


        :param key: The key of this TermXRef.
        :type key: int
        """

        self._key = key

    @property
    def term_acc(self):
        """Gets the term_acc of this TermXRef.


        :return: The term_acc of this TermXRef.
        :rtype: str
        """
        return self._term_acc

    @term_acc.setter
    def term_acc(self, term_acc):
        """Sets the term_acc of this TermXRef.


        :param term_acc: The term_acc of this TermXRef.
        :type term_acc: str
        """

        self._term_acc = term_acc

    @property
    def xref_description(self):
        """Gets the xref_description of this TermXRef.


        :return: The xref_description of this TermXRef.
        :rtype: str
        """
        return self._xref_description

    @xref_description.setter
    def xref_description(self, xref_description):
        """Sets the xref_description of this TermXRef.


        :param xref_description: The xref_description of this TermXRef.
        :type xref_description: str
        """

        self._xref_description = xref_description

    @property
    def xref_value(self):
        """Gets the xref_value of this TermXRef.


        :return: The xref_value of this TermXRef.
        :rtype: str
        """
        return self._xref_value

    @xref_value.setter
    def xref_value(self, xref_value):
        """Sets the xref_value of this TermXRef.


        :param xref_value: The xref_value of this TermXRef.
        :type xref_value: str
        """

        self._xref_value = xref_value
