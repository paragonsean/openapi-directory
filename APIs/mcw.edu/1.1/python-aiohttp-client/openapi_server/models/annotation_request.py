# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AnnotationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, evidence_codes: List[str]=None, ids: List[str]=None, species_type_keys: List[int]=None, term_acc: str=None):
        """AnnotationRequest - a model defined in OpenAPI

        :param evidence_codes: The evidence_codes of this AnnotationRequest.
        :param ids: The ids of this AnnotationRequest.
        :param species_type_keys: The species_type_keys of this AnnotationRequest.
        :param term_acc: The term_acc of this AnnotationRequest.
        """
        self.openapi_types = {
            'evidence_codes': List[str],
            'ids': List[str],
            'species_type_keys': List[int],
            'term_acc': str
        }

        self.attribute_map = {
            'evidence_codes': 'evidenceCodes',
            'ids': 'ids',
            'species_type_keys': 'speciesTypeKeys',
            'term_acc': 'termAcc'
        }

        self._evidence_codes = evidence_codes
        self._ids = ids
        self._species_type_keys = species_type_keys
        self._term_acc = term_acc

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnnotationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AnnotationRequest of this AnnotationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def evidence_codes(self):
        """Gets the evidence_codes of this AnnotationRequest.


        :return: The evidence_codes of this AnnotationRequest.
        :rtype: List[str]
        """
        return self._evidence_codes

    @evidence_codes.setter
    def evidence_codes(self, evidence_codes):
        """Sets the evidence_codes of this AnnotationRequest.


        :param evidence_codes: The evidence_codes of this AnnotationRequest.
        :type evidence_codes: List[str]
        """

        self._evidence_codes = evidence_codes

    @property
    def ids(self):
        """Gets the ids of this AnnotationRequest.


        :return: The ids of this AnnotationRequest.
        :rtype: List[str]
        """
        return self._ids

    @ids.setter
    def ids(self, ids):
        """Sets the ids of this AnnotationRequest.


        :param ids: The ids of this AnnotationRequest.
        :type ids: List[str]
        """

        self._ids = ids

    @property
    def species_type_keys(self):
        """Gets the species_type_keys of this AnnotationRequest.


        :return: The species_type_keys of this AnnotationRequest.
        :rtype: List[int]
        """
        return self._species_type_keys

    @species_type_keys.setter
    def species_type_keys(self, species_type_keys):
        """Sets the species_type_keys of this AnnotationRequest.


        :param species_type_keys: The species_type_keys of this AnnotationRequest.
        :type species_type_keys: List[int]
        """

        self._species_type_keys = species_type_keys

    @property
    def term_acc(self):
        """Gets the term_acc of this AnnotationRequest.


        :return: The term_acc of this AnnotationRequest.
        :rtype: str
        """
        return self._term_acc

    @term_acc.setter
    def term_acc(self, term_acc):
        """Sets the term_acc of this AnnotationRequest.


        :param term_acc: The term_acc of this AnnotationRequest.
        :type term_acc: str
        """

        self._term_acc = term_acc
