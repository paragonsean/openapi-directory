# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.status import Status
from openapi_server import util


class Strain(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, background_strain_rgd_id: int=None, chr_altered: str=None, color: str=None, genetic_status: str=None, genetics: str=None, image_url: str=None, inbred_gen: str=None, key: int=None, last_status: str=None, last_status_object: Status=None, modification_method: str=None, name: str=None, notes: str=None, origin: str=None, research_use: str=None, rgd_id: int=None, source: str=None, species_type_key: int=None, status_log: List[Status]=None, strain: str=None, strain_type_name: str=None, substrain: str=None, symbol: str=None):
        """Strain - a model defined in OpenAPI

        :param background_strain_rgd_id: The background_strain_rgd_id of this Strain.
        :param chr_altered: The chr_altered of this Strain.
        :param color: The color of this Strain.
        :param genetic_status: The genetic_status of this Strain.
        :param genetics: The genetics of this Strain.
        :param image_url: The image_url of this Strain.
        :param inbred_gen: The inbred_gen of this Strain.
        :param key: The key of this Strain.
        :param last_status: The last_status of this Strain.
        :param last_status_object: The last_status_object of this Strain.
        :param modification_method: The modification_method of this Strain.
        :param name: The name of this Strain.
        :param notes: The notes of this Strain.
        :param origin: The origin of this Strain.
        :param research_use: The research_use of this Strain.
        :param rgd_id: The rgd_id of this Strain.
        :param source: The source of this Strain.
        :param species_type_key: The species_type_key of this Strain.
        :param status_log: The status_log of this Strain.
        :param strain: The strain of this Strain.
        :param strain_type_name: The strain_type_name of this Strain.
        :param substrain: The substrain of this Strain.
        :param symbol: The symbol of this Strain.
        """
        self.openapi_types = {
            'background_strain_rgd_id': int,
            'chr_altered': str,
            'color': str,
            'genetic_status': str,
            'genetics': str,
            'image_url': str,
            'inbred_gen': str,
            'key': int,
            'last_status': str,
            'last_status_object': Status,
            'modification_method': str,
            'name': str,
            'notes': str,
            'origin': str,
            'research_use': str,
            'rgd_id': int,
            'source': str,
            'species_type_key': int,
            'status_log': List[Status],
            'strain': str,
            'strain_type_name': str,
            'substrain': str,
            'symbol': str
        }

        self.attribute_map = {
            'background_strain_rgd_id': 'backgroundStrainRgdId',
            'chr_altered': 'chrAltered',
            'color': 'color',
            'genetic_status': 'geneticStatus',
            'genetics': 'genetics',
            'image_url': 'imageUrl',
            'inbred_gen': 'inbredGen',
            'key': 'key',
            'last_status': 'lastStatus',
            'last_status_object': 'lastStatusObject',
            'modification_method': 'modificationMethod',
            'name': 'name',
            'notes': 'notes',
            'origin': 'origin',
            'research_use': 'researchUse',
            'rgd_id': 'rgdId',
            'source': 'source',
            'species_type_key': 'speciesTypeKey',
            'status_log': 'statusLog',
            'strain': 'strain',
            'strain_type_name': 'strainTypeName',
            'substrain': 'substrain',
            'symbol': 'symbol'
        }

        self._background_strain_rgd_id = background_strain_rgd_id
        self._chr_altered = chr_altered
        self._color = color
        self._genetic_status = genetic_status
        self._genetics = genetics
        self._image_url = image_url
        self._inbred_gen = inbred_gen
        self._key = key
        self._last_status = last_status
        self._last_status_object = last_status_object
        self._modification_method = modification_method
        self._name = name
        self._notes = notes
        self._origin = origin
        self._research_use = research_use
        self._rgd_id = rgd_id
        self._source = source
        self._species_type_key = species_type_key
        self._status_log = status_log
        self._strain = strain
        self._strain_type_name = strain_type_name
        self._substrain = substrain
        self._symbol = symbol

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Strain':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Strain of this Strain.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def background_strain_rgd_id(self):
        """Gets the background_strain_rgd_id of this Strain.


        :return: The background_strain_rgd_id of this Strain.
        :rtype: int
        """
        return self._background_strain_rgd_id

    @background_strain_rgd_id.setter
    def background_strain_rgd_id(self, background_strain_rgd_id):
        """Sets the background_strain_rgd_id of this Strain.


        :param background_strain_rgd_id: The background_strain_rgd_id of this Strain.
        :type background_strain_rgd_id: int
        """

        self._background_strain_rgd_id = background_strain_rgd_id

    @property
    def chr_altered(self):
        """Gets the chr_altered of this Strain.


        :return: The chr_altered of this Strain.
        :rtype: str
        """
        return self._chr_altered

    @chr_altered.setter
    def chr_altered(self, chr_altered):
        """Sets the chr_altered of this Strain.


        :param chr_altered: The chr_altered of this Strain.
        :type chr_altered: str
        """

        self._chr_altered = chr_altered

    @property
    def color(self):
        """Gets the color of this Strain.


        :return: The color of this Strain.
        :rtype: str
        """
        return self._color

    @color.setter
    def color(self, color):
        """Sets the color of this Strain.


        :param color: The color of this Strain.
        :type color: str
        """

        self._color = color

    @property
    def genetic_status(self):
        """Gets the genetic_status of this Strain.


        :return: The genetic_status of this Strain.
        :rtype: str
        """
        return self._genetic_status

    @genetic_status.setter
    def genetic_status(self, genetic_status):
        """Sets the genetic_status of this Strain.


        :param genetic_status: The genetic_status of this Strain.
        :type genetic_status: str
        """

        self._genetic_status = genetic_status

    @property
    def genetics(self):
        """Gets the genetics of this Strain.


        :return: The genetics of this Strain.
        :rtype: str
        """
        return self._genetics

    @genetics.setter
    def genetics(self, genetics):
        """Sets the genetics of this Strain.


        :param genetics: The genetics of this Strain.
        :type genetics: str
        """

        self._genetics = genetics

    @property
    def image_url(self):
        """Gets the image_url of this Strain.


        :return: The image_url of this Strain.
        :rtype: str
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url):
        """Sets the image_url of this Strain.


        :param image_url: The image_url of this Strain.
        :type image_url: str
        """

        self._image_url = image_url

    @property
    def inbred_gen(self):
        """Gets the inbred_gen of this Strain.


        :return: The inbred_gen of this Strain.
        :rtype: str
        """
        return self._inbred_gen

    @inbred_gen.setter
    def inbred_gen(self, inbred_gen):
        """Sets the inbred_gen of this Strain.


        :param inbred_gen: The inbred_gen of this Strain.
        :type inbred_gen: str
        """

        self._inbred_gen = inbred_gen

    @property
    def key(self):
        """Gets the key of this Strain.


        :return: The key of this Strain.
        :rtype: int
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this Strain.


        :param key: The key of this Strain.
        :type key: int
        """

        self._key = key

    @property
    def last_status(self):
        """Gets the last_status of this Strain.


        :return: The last_status of this Strain.
        :rtype: str
        """
        return self._last_status

    @last_status.setter
    def last_status(self, last_status):
        """Sets the last_status of this Strain.


        :param last_status: The last_status of this Strain.
        :type last_status: str
        """

        self._last_status = last_status

    @property
    def last_status_object(self):
        """Gets the last_status_object of this Strain.


        :return: The last_status_object of this Strain.
        :rtype: Status
        """
        return self._last_status_object

    @last_status_object.setter
    def last_status_object(self, last_status_object):
        """Sets the last_status_object of this Strain.


        :param last_status_object: The last_status_object of this Strain.
        :type last_status_object: Status
        """

        self._last_status_object = last_status_object

    @property
    def modification_method(self):
        """Gets the modification_method of this Strain.


        :return: The modification_method of this Strain.
        :rtype: str
        """
        return self._modification_method

    @modification_method.setter
    def modification_method(self, modification_method):
        """Sets the modification_method of this Strain.


        :param modification_method: The modification_method of this Strain.
        :type modification_method: str
        """

        self._modification_method = modification_method

    @property
    def name(self):
        """Gets the name of this Strain.


        :return: The name of this Strain.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Strain.


        :param name: The name of this Strain.
        :type name: str
        """

        self._name = name

    @property
    def notes(self):
        """Gets the notes of this Strain.


        :return: The notes of this Strain.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this Strain.


        :param notes: The notes of this Strain.
        :type notes: str
        """

        self._notes = notes

    @property
    def origin(self):
        """Gets the origin of this Strain.


        :return: The origin of this Strain.
        :rtype: str
        """
        return self._origin

    @origin.setter
    def origin(self, origin):
        """Sets the origin of this Strain.


        :param origin: The origin of this Strain.
        :type origin: str
        """

        self._origin = origin

    @property
    def research_use(self):
        """Gets the research_use of this Strain.


        :return: The research_use of this Strain.
        :rtype: str
        """
        return self._research_use

    @research_use.setter
    def research_use(self, research_use):
        """Sets the research_use of this Strain.


        :param research_use: The research_use of this Strain.
        :type research_use: str
        """

        self._research_use = research_use

    @property
    def rgd_id(self):
        """Gets the rgd_id of this Strain.


        :return: The rgd_id of this Strain.
        :rtype: int
        """
        return self._rgd_id

    @rgd_id.setter
    def rgd_id(self, rgd_id):
        """Sets the rgd_id of this Strain.


        :param rgd_id: The rgd_id of this Strain.
        :type rgd_id: int
        """

        self._rgd_id = rgd_id

    @property
    def source(self):
        """Gets the source of this Strain.


        :return: The source of this Strain.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this Strain.


        :param source: The source of this Strain.
        :type source: str
        """

        self._source = source

    @property
    def species_type_key(self):
        """Gets the species_type_key of this Strain.


        :return: The species_type_key of this Strain.
        :rtype: int
        """
        return self._species_type_key

    @species_type_key.setter
    def species_type_key(self, species_type_key):
        """Sets the species_type_key of this Strain.


        :param species_type_key: The species_type_key of this Strain.
        :type species_type_key: int
        """

        self._species_type_key = species_type_key

    @property
    def status_log(self):
        """Gets the status_log of this Strain.


        :return: The status_log of this Strain.
        :rtype: List[Status]
        """
        return self._status_log

    @status_log.setter
    def status_log(self, status_log):
        """Sets the status_log of this Strain.


        :param status_log: The status_log of this Strain.
        :type status_log: List[Status]
        """

        self._status_log = status_log

    @property
    def strain(self):
        """Gets the strain of this Strain.


        :return: The strain of this Strain.
        :rtype: str
        """
        return self._strain

    @strain.setter
    def strain(self, strain):
        """Sets the strain of this Strain.


        :param strain: The strain of this Strain.
        :type strain: str
        """

        self._strain = strain

    @property
    def strain_type_name(self):
        """Gets the strain_type_name of this Strain.


        :return: The strain_type_name of this Strain.
        :rtype: str
        """
        return self._strain_type_name

    @strain_type_name.setter
    def strain_type_name(self, strain_type_name):
        """Sets the strain_type_name of this Strain.


        :param strain_type_name: The strain_type_name of this Strain.
        :type strain_type_name: str
        """

        self._strain_type_name = strain_type_name

    @property
    def substrain(self):
        """Gets the substrain of this Strain.


        :return: The substrain of this Strain.
        :rtype: str
        """
        return self._substrain

    @substrain.setter
    def substrain(self, substrain):
        """Sets the substrain of this Strain.


        :param substrain: The substrain of this Strain.
        :type substrain: str
        """

        self._substrain = substrain

    @property
    def symbol(self):
        """Gets the symbol of this Strain.


        :return: The symbol of this Strain.
        :rtype: str
        """
        return self._symbol

    @symbol.setter
    def symbol(self, symbol):
        """Sets the symbol of this Strain.


        :param symbol: The symbol of this Strain.
        :type symbol: str
        """

        self._symbol = symbol
