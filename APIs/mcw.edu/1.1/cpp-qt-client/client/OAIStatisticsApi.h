/**
 * Rat Genome Database REST API
 * The RGD REST API provides programmatic access to information and annotation stored in the Rat Genome Database
 *
 * The version of the OpenAPI document: 1.1
 * Contact: RGD.Data2@mcw.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAIStatisticsApi_H
#define OAI_OAIStatisticsApi_H

#include "OAIHelpers.h"
#include "OAIHttpRequest.h"
#include "OAIServerConfiguration.h"
#include "OAIOauth.h"

#include <QMap>
#include <QString>

#include <QObject>
#include <QByteArray>
#include <QStringList>
#include <QList>
#include <QNetworkAccessManager>

namespace OpenAPI {

class OAIStatisticsApi : public QObject {
    Q_OBJECT

public:
    OAIStatisticsApi(const int timeOut = 0);
    ~OAIStatisticsApi();

    void initializeServerConfigs();
    int setDefaultServerValue(int serverIndex,const QString &operation, const QString &variable,const QString &val);
    void setServerIndex(const QString &operation, int serverIndex);
    void setApiKey(const QString &apiKeyName, const QString &apiKey);
    void setBearerToken(const QString &token);
    void setUsername(const QString &username);
    void setPassword(const QString &password);
    void setTimeOut(const int timeOut);
    void setWorkingDirectory(const QString &path);
    void setNetworkAccessManager(QNetworkAccessManager* manager);
    int addServerConfiguration(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables = QMap<QString, OAIServerVariable>());
    void setNewServerForAllOperations(const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void setNewServer(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void addHeaders(const QString &key, const QString &value);
    void enableRequestCompression();
    void enableResponseCompression();
    void abortRequests();
    QString getParamStylePrefix(const QString &style);
    QString getParamStyleSuffix(const QString &style);
    QString getParamStyleDelimiter(const QString &style, const QString &name, bool isExplode);

    /**
    * @param[in]  species_type_key qint32 [required]
    * @param[in]  date_yyyymmdd QString [required]
    */
    virtual void getActiveObjectCountUsingGET(const qint32 &species_type_key, const QString &date_yyyymmdd);

    /**
    * @param[in]  species_type_key qint32 [required]
    * @param[in]  date_from_yyyymmdd QString [required]
    * @param[in]  date_to_yyyymmdd QString [required]
    */
    virtual void getActiveObjectDiffUsingGET(const qint32 &species_type_key, const QString &date_from_yyyymmdd, const QString &date_to_yyyymmdd);

    /**
    * @param[in]  species_type_key qint32 [required]
    * @param[in]  date_yyyymmdd QString [required]
    */
    virtual void getGeneTypeCountUsingGET(const qint32 &species_type_key, const QString &date_yyyymmdd);

    /**
    * @param[in]  species_type_key qint32 [required]
    * @param[in]  date_from_yyyymmdd QString [required]
    * @param[in]  date_to_yyyymmdd QString [required]
    */
    virtual void getGeneTypeDiffUsingGET(const qint32 &species_type_key, const QString &date_from_yyyymmdd, const QString &date_to_yyyymmdd);

    /**
    * @param[in]  species_type_key qint32 [required]
    * @param[in]  date_yyyymmdd QString [required]
    */
    virtual void getObjectStatusCountUsingGET(const qint32 &species_type_key, const QString &date_yyyymmdd);

    /**
    * @param[in]  species_type_key qint32 [required]
    * @param[in]  date_from_yyyymmdd QString [required]
    * @param[in]  date_to_yyyymmdd QString [required]
    */
    virtual void getObjectStatusDiffUsingGET(const qint32 &species_type_key, const QString &date_from_yyyymmdd, const QString &date_to_yyyymmdd);

    /**
    * @param[in]  species_type_key qint32 [required]
    * @param[in]  date_yyyymmdd QString [required]
    */
    virtual void getObjectsWithRefSeqCountUsingGET(const qint32 &species_type_key, const QString &date_yyyymmdd);

    /**
    * @param[in]  species_type_key qint32 [required]
    * @param[in]  date_from_yyyymmdd QString [required]
    * @param[in]  date_to_yyyymmdd QString [required]
    */
    virtual void getObjectsWithRefSeqDiffUsingGET(const qint32 &species_type_key, const QString &date_from_yyyymmdd, const QString &date_to_yyyymmdd);

    /**
    * @param[in]  species_type_key qint32 [required]
    * @param[in]  date_yyyymmdd QString [required]
    */
    virtual void getObjectsWithReferenceCountUsingGET(const qint32 &species_type_key, const QString &date_yyyymmdd);

    /**
    * @param[in]  species_type_key qint32 [required]
    * @param[in]  date_from_yyyymmdd QString [required]
    * @param[in]  date_to_yyyymmdd QString [required]
    */
    virtual void getObjectsWithReferenceDiffUsingGET(const qint32 &species_type_key, const QString &date_from_yyyymmdd, const QString &date_to_yyyymmdd);

    /**
    * @param[in]  species_type_key qint32 [required]
    * @param[in]  object_key qint32 [required]
    * @param[in]  date_yyyymmdd QString [required]
    */
    virtual void getObjectsWithXDBsCountUsingGET(const qint32 &species_type_key, const qint32 &object_key, const QString &date_yyyymmdd);

    /**
    * @param[in]  species_type_key qint32 [required]
    * @param[in]  object_key qint32 [required]
    * @param[in]  date_from_yyyymmdd QString [required]
    * @param[in]  date_to_yyyymmdd QString [required]
    */
    virtual void getObjectsWithXDBsDiffUsingGET(const qint32 &species_type_key, const qint32 &object_key, const QString &date_from_yyyymmdd, const QString &date_to_yyyymmdd);

    /**
    * @param[in]  species_type_key qint32 [required]
    * @param[in]  date_yyyymmdd QString [required]
    */
    virtual void getProteinInteractionCountUsingGET(const qint32 &species_type_key, const QString &date_yyyymmdd);

    /**
    * @param[in]  species_type_key qint32 [required]
    * @param[in]  date_from_yyyymmdd QString [required]
    * @param[in]  date_to_yyyymmdd QString [required]
    */
    virtual void getProteinInteractionDiffUsingGET(const qint32 &species_type_key, const QString &date_from_yyyymmdd, const QString &date_to_yyyymmdd);

    /**
    * @param[in]  species_type_key qint32 [required]
    * @param[in]  date_yyyymmdd QString [required]
    */
    virtual void getQtlInheritanceTypeCountUsingGET(const qint32 &species_type_key, const QString &date_yyyymmdd);

    /**
    * @param[in]  species_type_key qint32 [required]
    * @param[in]  date_from_yyyymmdd QString [required]
    * @param[in]  date_to_yyyymmdd QString [required]
    */
    virtual void getQtlInheritanceTypeDiffUsingGET(const qint32 &species_type_key, const QString &date_from_yyyymmdd, const QString &date_to_yyyymmdd);

    /**
    * @param[in]  species_type_key qint32 [required]
    * @param[in]  date_yyyymmdd QString [required]
    */
    virtual void getRetiredObjectCountUsingGET(const qint32 &species_type_key, const QString &date_yyyymmdd);

    /**
    * @param[in]  species_type_key qint32 [required]
    * @param[in]  date_from_yyyymmdd QString [required]
    * @param[in]  date_to_yyyymmdd QString [required]
    */
    virtual void getRetiredObjectDiffUsingGET(const qint32 &species_type_key, const QString &date_from_yyyymmdd, const QString &date_to_yyyymmdd);

    /**
    * @param[in]  species_type_key qint32 [required]
    * @param[in]  date_yyyymmdd QString [required]
    */
    virtual void getStrainTypeCountUsingGET(const qint32 &species_type_key, const QString &date_yyyymmdd);

    /**
    * @param[in]  species_type_key qint32 [required]
    * @param[in]  date_from_yyyymmdd QString [required]
    * @param[in]  date_to_yyyymmdd QString [required]
    */
    virtual void getStrainTypeDiffUsingGET(const qint32 &species_type_key, const QString &date_from_yyyymmdd, const QString &date_to_yyyymmdd);

    /**
    * @param[in]  acc_id QString [required]
    * @param[in]  filter_acc_id QString [required]
    */
    virtual void getTermStatsUsingGET(const QString &acc_id, const QString &filter_acc_id);

    /**
    * @param[in]  species_type_key qint32 [required]
    * @param[in]  date_yyyymmdd QString [required]
    */
    virtual void getWithdrawnObjectCountUsingGET(const qint32 &species_type_key, const QString &date_yyyymmdd);

    /**
    * @param[in]  species_type_key qint32 [required]
    * @param[in]  date_from_yyyymmdd QString [required]
    * @param[in]  date_to_yyyymmdd QString [required]
    */
    virtual void getWithdrawnObjectDiffUsingGET(const qint32 &species_type_key, const QString &date_from_yyyymmdd, const QString &date_to_yyyymmdd);

    /**
    * @param[in]  species_type_key qint32 [required]
    * @param[in]  date_yyyymmdd QString [required]
    */
    virtual void getXdbsCountUsingGET(const qint32 &species_type_key, const QString &date_yyyymmdd);

    /**
    * @param[in]  species_type_key qint32 [required]
    * @param[in]  date_from_yyyymmdd QString [required]
    * @param[in]  date_to_yyyymmdd QString [required]
    */
    virtual void getXdbsDiffUsingGET(const qint32 &species_type_key, const QString &date_from_yyyymmdd, const QString &date_to_yyyymmdd);


private:
    QMap<QString,int> _serverIndices;
    QMap<QString,QList<OAIServerConfiguration>> _serverConfigs;
    QMap<QString, QString> _apiKeys;
    QString _bearerToken;
    QString _username;
    QString _password;
    int _timeOut;
    QString _workingDirectory;
    QNetworkAccessManager* _manager;
    QMap<QString, QString> _defaultHeaders;
    bool _isResponseCompressionEnabled;
    bool _isRequestCompressionEnabled;
    OAIHttpRequestInput _latestInput;
    OAIHttpRequestWorker *_latestWorker;
    QStringList _latestScope;
    OauthCode _authFlow;
    OauthImplicit _implicitFlow;
    OauthCredentials _credentialFlow;
    OauthPassword _passwordFlow;
    int _OauthMethod = 0;

    void getActiveObjectCountUsingGETCallback(OAIHttpRequestWorker *worker);
    void getActiveObjectDiffUsingGETCallback(OAIHttpRequestWorker *worker);
    void getGeneTypeCountUsingGETCallback(OAIHttpRequestWorker *worker);
    void getGeneTypeDiffUsingGETCallback(OAIHttpRequestWorker *worker);
    void getObjectStatusCountUsingGETCallback(OAIHttpRequestWorker *worker);
    void getObjectStatusDiffUsingGETCallback(OAIHttpRequestWorker *worker);
    void getObjectsWithRefSeqCountUsingGETCallback(OAIHttpRequestWorker *worker);
    void getObjectsWithRefSeqDiffUsingGETCallback(OAIHttpRequestWorker *worker);
    void getObjectsWithReferenceCountUsingGETCallback(OAIHttpRequestWorker *worker);
    void getObjectsWithReferenceDiffUsingGETCallback(OAIHttpRequestWorker *worker);
    void getObjectsWithXDBsCountUsingGETCallback(OAIHttpRequestWorker *worker);
    void getObjectsWithXDBsDiffUsingGETCallback(OAIHttpRequestWorker *worker);
    void getProteinInteractionCountUsingGETCallback(OAIHttpRequestWorker *worker);
    void getProteinInteractionDiffUsingGETCallback(OAIHttpRequestWorker *worker);
    void getQtlInheritanceTypeCountUsingGETCallback(OAIHttpRequestWorker *worker);
    void getQtlInheritanceTypeDiffUsingGETCallback(OAIHttpRequestWorker *worker);
    void getRetiredObjectCountUsingGETCallback(OAIHttpRequestWorker *worker);
    void getRetiredObjectDiffUsingGETCallback(OAIHttpRequestWorker *worker);
    void getStrainTypeCountUsingGETCallback(OAIHttpRequestWorker *worker);
    void getStrainTypeDiffUsingGETCallback(OAIHttpRequestWorker *worker);
    void getTermStatsUsingGETCallback(OAIHttpRequestWorker *worker);
    void getWithdrawnObjectCountUsingGETCallback(OAIHttpRequestWorker *worker);
    void getWithdrawnObjectDiffUsingGETCallback(OAIHttpRequestWorker *worker);
    void getXdbsCountUsingGETCallback(OAIHttpRequestWorker *worker);
    void getXdbsDiffUsingGETCallback(OAIHttpRequestWorker *worker);

Q_SIGNALS:

    void getActiveObjectCountUsingGETSignal(QMap<QString, QString> summary);
    void getActiveObjectDiffUsingGETSignal(QMap<QString, QString> summary);
    void getGeneTypeCountUsingGETSignal(QMap<QString, QString> summary);
    void getGeneTypeDiffUsingGETSignal(QMap<QString, QString> summary);
    void getObjectStatusCountUsingGETSignal(QMap<QString, QString> summary);
    void getObjectStatusDiffUsingGETSignal(QMap<QString, QString> summary);
    void getObjectsWithRefSeqCountUsingGETSignal(QMap<QString, QString> summary);
    void getObjectsWithRefSeqDiffUsingGETSignal(QMap<QString, QString> summary);
    void getObjectsWithReferenceCountUsingGETSignal(QMap<QString, QString> summary);
    void getObjectsWithReferenceDiffUsingGETSignal(QMap<QString, QString> summary);
    void getObjectsWithXDBsCountUsingGETSignal(QMap<QString, QString> summary);
    void getObjectsWithXDBsDiffUsingGETSignal(QMap<QString, QString> summary);
    void getProteinInteractionCountUsingGETSignal(QMap<QString, QString> summary);
    void getProteinInteractionDiffUsingGETSignal(QMap<QString, QString> summary);
    void getQtlInheritanceTypeCountUsingGETSignal(QMap<QString, QString> summary);
    void getQtlInheritanceTypeDiffUsingGETSignal(QMap<QString, QString> summary);
    void getRetiredObjectCountUsingGETSignal(QMap<QString, QString> summary);
    void getRetiredObjectDiffUsingGETSignal(QMap<QString, QString> summary);
    void getStrainTypeCountUsingGETSignal(QMap<QString, QString> summary);
    void getStrainTypeDiffUsingGETSignal(QMap<QString, QString> summary);
    void getTermStatsUsingGETSignal(QMap<QString, qint32> summary);
    void getWithdrawnObjectCountUsingGETSignal(QMap<QString, QString> summary);
    void getWithdrawnObjectDiffUsingGETSignal(QMap<QString, QString> summary);
    void getXdbsCountUsingGETSignal(QMap<QString, QString> summary);
    void getXdbsDiffUsingGETSignal(QMap<QString, QString> summary);


    void getActiveObjectCountUsingGETSignalFull(OAIHttpRequestWorker *worker, QMap<QString, QString> summary);
    void getActiveObjectDiffUsingGETSignalFull(OAIHttpRequestWorker *worker, QMap<QString, QString> summary);
    void getGeneTypeCountUsingGETSignalFull(OAIHttpRequestWorker *worker, QMap<QString, QString> summary);
    void getGeneTypeDiffUsingGETSignalFull(OAIHttpRequestWorker *worker, QMap<QString, QString> summary);
    void getObjectStatusCountUsingGETSignalFull(OAIHttpRequestWorker *worker, QMap<QString, QString> summary);
    void getObjectStatusDiffUsingGETSignalFull(OAIHttpRequestWorker *worker, QMap<QString, QString> summary);
    void getObjectsWithRefSeqCountUsingGETSignalFull(OAIHttpRequestWorker *worker, QMap<QString, QString> summary);
    void getObjectsWithRefSeqDiffUsingGETSignalFull(OAIHttpRequestWorker *worker, QMap<QString, QString> summary);
    void getObjectsWithReferenceCountUsingGETSignalFull(OAIHttpRequestWorker *worker, QMap<QString, QString> summary);
    void getObjectsWithReferenceDiffUsingGETSignalFull(OAIHttpRequestWorker *worker, QMap<QString, QString> summary);
    void getObjectsWithXDBsCountUsingGETSignalFull(OAIHttpRequestWorker *worker, QMap<QString, QString> summary);
    void getObjectsWithXDBsDiffUsingGETSignalFull(OAIHttpRequestWorker *worker, QMap<QString, QString> summary);
    void getProteinInteractionCountUsingGETSignalFull(OAIHttpRequestWorker *worker, QMap<QString, QString> summary);
    void getProteinInteractionDiffUsingGETSignalFull(OAIHttpRequestWorker *worker, QMap<QString, QString> summary);
    void getQtlInheritanceTypeCountUsingGETSignalFull(OAIHttpRequestWorker *worker, QMap<QString, QString> summary);
    void getQtlInheritanceTypeDiffUsingGETSignalFull(OAIHttpRequestWorker *worker, QMap<QString, QString> summary);
    void getRetiredObjectCountUsingGETSignalFull(OAIHttpRequestWorker *worker, QMap<QString, QString> summary);
    void getRetiredObjectDiffUsingGETSignalFull(OAIHttpRequestWorker *worker, QMap<QString, QString> summary);
    void getStrainTypeCountUsingGETSignalFull(OAIHttpRequestWorker *worker, QMap<QString, QString> summary);
    void getStrainTypeDiffUsingGETSignalFull(OAIHttpRequestWorker *worker, QMap<QString, QString> summary);
    void getTermStatsUsingGETSignalFull(OAIHttpRequestWorker *worker, QMap<QString, qint32> summary);
    void getWithdrawnObjectCountUsingGETSignalFull(OAIHttpRequestWorker *worker, QMap<QString, QString> summary);
    void getWithdrawnObjectDiffUsingGETSignalFull(OAIHttpRequestWorker *worker, QMap<QString, QString> summary);
    void getXdbsCountUsingGETSignalFull(OAIHttpRequestWorker *worker, QMap<QString, QString> summary);
    void getXdbsDiffUsingGETSignalFull(OAIHttpRequestWorker *worker, QMap<QString, QString> summary);

    Q_DECL_DEPRECATED_X("Use getActiveObjectCountUsingGETSignalError() instead")
    void getActiveObjectCountUsingGETSignalE(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getActiveObjectCountUsingGETSignalError(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getActiveObjectDiffUsingGETSignalError() instead")
    void getActiveObjectDiffUsingGETSignalE(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getActiveObjectDiffUsingGETSignalError(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getGeneTypeCountUsingGETSignalError() instead")
    void getGeneTypeCountUsingGETSignalE(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getGeneTypeCountUsingGETSignalError(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getGeneTypeDiffUsingGETSignalError() instead")
    void getGeneTypeDiffUsingGETSignalE(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getGeneTypeDiffUsingGETSignalError(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getObjectStatusCountUsingGETSignalError() instead")
    void getObjectStatusCountUsingGETSignalE(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getObjectStatusCountUsingGETSignalError(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getObjectStatusDiffUsingGETSignalError() instead")
    void getObjectStatusDiffUsingGETSignalE(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getObjectStatusDiffUsingGETSignalError(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getObjectsWithRefSeqCountUsingGETSignalError() instead")
    void getObjectsWithRefSeqCountUsingGETSignalE(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getObjectsWithRefSeqCountUsingGETSignalError(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getObjectsWithRefSeqDiffUsingGETSignalError() instead")
    void getObjectsWithRefSeqDiffUsingGETSignalE(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getObjectsWithRefSeqDiffUsingGETSignalError(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getObjectsWithReferenceCountUsingGETSignalError() instead")
    void getObjectsWithReferenceCountUsingGETSignalE(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getObjectsWithReferenceCountUsingGETSignalError(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getObjectsWithReferenceDiffUsingGETSignalError() instead")
    void getObjectsWithReferenceDiffUsingGETSignalE(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getObjectsWithReferenceDiffUsingGETSignalError(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getObjectsWithXDBsCountUsingGETSignalError() instead")
    void getObjectsWithXDBsCountUsingGETSignalE(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getObjectsWithXDBsCountUsingGETSignalError(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getObjectsWithXDBsDiffUsingGETSignalError() instead")
    void getObjectsWithXDBsDiffUsingGETSignalE(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getObjectsWithXDBsDiffUsingGETSignalError(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getProteinInteractionCountUsingGETSignalError() instead")
    void getProteinInteractionCountUsingGETSignalE(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getProteinInteractionCountUsingGETSignalError(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getProteinInteractionDiffUsingGETSignalError() instead")
    void getProteinInteractionDiffUsingGETSignalE(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getProteinInteractionDiffUsingGETSignalError(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getQtlInheritanceTypeCountUsingGETSignalError() instead")
    void getQtlInheritanceTypeCountUsingGETSignalE(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getQtlInheritanceTypeCountUsingGETSignalError(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getQtlInheritanceTypeDiffUsingGETSignalError() instead")
    void getQtlInheritanceTypeDiffUsingGETSignalE(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getQtlInheritanceTypeDiffUsingGETSignalError(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getRetiredObjectCountUsingGETSignalError() instead")
    void getRetiredObjectCountUsingGETSignalE(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getRetiredObjectCountUsingGETSignalError(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getRetiredObjectDiffUsingGETSignalError() instead")
    void getRetiredObjectDiffUsingGETSignalE(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getRetiredObjectDiffUsingGETSignalError(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getStrainTypeCountUsingGETSignalError() instead")
    void getStrainTypeCountUsingGETSignalE(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getStrainTypeCountUsingGETSignalError(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getStrainTypeDiffUsingGETSignalError() instead")
    void getStrainTypeDiffUsingGETSignalE(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getStrainTypeDiffUsingGETSignalError(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTermStatsUsingGETSignalError() instead")
    void getTermStatsUsingGETSignalE(QMap<QString, qint32> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getTermStatsUsingGETSignalError(QMap<QString, qint32> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getWithdrawnObjectCountUsingGETSignalError() instead")
    void getWithdrawnObjectCountUsingGETSignalE(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getWithdrawnObjectCountUsingGETSignalError(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getWithdrawnObjectDiffUsingGETSignalError() instead")
    void getWithdrawnObjectDiffUsingGETSignalE(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getWithdrawnObjectDiffUsingGETSignalError(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getXdbsCountUsingGETSignalError() instead")
    void getXdbsCountUsingGETSignalE(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getXdbsCountUsingGETSignalError(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getXdbsDiffUsingGETSignalError() instead")
    void getXdbsDiffUsingGETSignalE(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getXdbsDiffUsingGETSignalError(QMap<QString, QString> summary, QNetworkReply::NetworkError error_type, const QString &error_str);

    Q_DECL_DEPRECATED_X("Use getActiveObjectCountUsingGETSignalErrorFull() instead")
    void getActiveObjectCountUsingGETSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getActiveObjectCountUsingGETSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getActiveObjectDiffUsingGETSignalErrorFull() instead")
    void getActiveObjectDiffUsingGETSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getActiveObjectDiffUsingGETSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getGeneTypeCountUsingGETSignalErrorFull() instead")
    void getGeneTypeCountUsingGETSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getGeneTypeCountUsingGETSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getGeneTypeDiffUsingGETSignalErrorFull() instead")
    void getGeneTypeDiffUsingGETSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getGeneTypeDiffUsingGETSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getObjectStatusCountUsingGETSignalErrorFull() instead")
    void getObjectStatusCountUsingGETSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getObjectStatusCountUsingGETSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getObjectStatusDiffUsingGETSignalErrorFull() instead")
    void getObjectStatusDiffUsingGETSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getObjectStatusDiffUsingGETSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getObjectsWithRefSeqCountUsingGETSignalErrorFull() instead")
    void getObjectsWithRefSeqCountUsingGETSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getObjectsWithRefSeqCountUsingGETSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getObjectsWithRefSeqDiffUsingGETSignalErrorFull() instead")
    void getObjectsWithRefSeqDiffUsingGETSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getObjectsWithRefSeqDiffUsingGETSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getObjectsWithReferenceCountUsingGETSignalErrorFull() instead")
    void getObjectsWithReferenceCountUsingGETSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getObjectsWithReferenceCountUsingGETSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getObjectsWithReferenceDiffUsingGETSignalErrorFull() instead")
    void getObjectsWithReferenceDiffUsingGETSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getObjectsWithReferenceDiffUsingGETSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getObjectsWithXDBsCountUsingGETSignalErrorFull() instead")
    void getObjectsWithXDBsCountUsingGETSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getObjectsWithXDBsCountUsingGETSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getObjectsWithXDBsDiffUsingGETSignalErrorFull() instead")
    void getObjectsWithXDBsDiffUsingGETSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getObjectsWithXDBsDiffUsingGETSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getProteinInteractionCountUsingGETSignalErrorFull() instead")
    void getProteinInteractionCountUsingGETSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getProteinInteractionCountUsingGETSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getProteinInteractionDiffUsingGETSignalErrorFull() instead")
    void getProteinInteractionDiffUsingGETSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getProteinInteractionDiffUsingGETSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getQtlInheritanceTypeCountUsingGETSignalErrorFull() instead")
    void getQtlInheritanceTypeCountUsingGETSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getQtlInheritanceTypeCountUsingGETSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getQtlInheritanceTypeDiffUsingGETSignalErrorFull() instead")
    void getQtlInheritanceTypeDiffUsingGETSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getQtlInheritanceTypeDiffUsingGETSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getRetiredObjectCountUsingGETSignalErrorFull() instead")
    void getRetiredObjectCountUsingGETSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getRetiredObjectCountUsingGETSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getRetiredObjectDiffUsingGETSignalErrorFull() instead")
    void getRetiredObjectDiffUsingGETSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getRetiredObjectDiffUsingGETSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getStrainTypeCountUsingGETSignalErrorFull() instead")
    void getStrainTypeCountUsingGETSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getStrainTypeCountUsingGETSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getStrainTypeDiffUsingGETSignalErrorFull() instead")
    void getStrainTypeDiffUsingGETSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getStrainTypeDiffUsingGETSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getTermStatsUsingGETSignalErrorFull() instead")
    void getTermStatsUsingGETSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getTermStatsUsingGETSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getWithdrawnObjectCountUsingGETSignalErrorFull() instead")
    void getWithdrawnObjectCountUsingGETSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getWithdrawnObjectCountUsingGETSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getWithdrawnObjectDiffUsingGETSignalErrorFull() instead")
    void getWithdrawnObjectDiffUsingGETSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getWithdrawnObjectDiffUsingGETSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getXdbsCountUsingGETSignalErrorFull() instead")
    void getXdbsCountUsingGETSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getXdbsCountUsingGETSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getXdbsDiffUsingGETSignalErrorFull() instead")
    void getXdbsDiffUsingGETSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getXdbsDiffUsingGETSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);

    void abortRequestsSignal();
    void allPendingRequestsCompleted();

public Q_SLOTS:
    void tokenAvailable();
};

} // namespace OpenAPI
#endif
