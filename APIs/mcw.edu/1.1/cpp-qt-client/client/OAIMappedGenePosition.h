/**
 * Rat Genome Database REST API
 * The RGD REST API provides programmatic access to information and annotation stored in the Rat Genome Database
 *
 * The version of the OpenAPI document: 1.1
 * Contact: RGD.Data2@mcw.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMappedGenePosition.h
 *
 * 
 */

#ifndef OAIMappedGenePosition_H
#define OAIMappedGenePosition_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMappedGenePosition : public OAIObject {
public:
    OAIMappedGenePosition();
    OAIMappedGenePosition(QString json);
    ~OAIMappedGenePosition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getChromosome() const;
    void setChromosome(const QString &chromosome);
    bool is_chromosome_Set() const;
    bool is_chromosome_Valid() const;

    qint32 getMapKey() const;
    void setMapKey(const qint32 &map_key);
    bool is_map_key_Set() const;
    bool is_map_key_Valid() const;

    qint32 getRgdId() const;
    void setRgdId(const qint32 &rgd_id);
    bool is_rgd_id_Set() const;
    bool is_rgd_id_Valid() const;

    qint64 getStart() const;
    void setStart(const qint64 &start);
    bool is_start_Set() const;
    bool is_start_Valid() const;

    qint64 getStop() const;
    void setStop(const qint64 &stop);
    bool is_stop_Set() const;
    bool is_stop_Valid() const;

    QString getStrand() const;
    void setStrand(const QString &strand);
    bool is_strand_Set() const;
    bool is_strand_Valid() const;

    QString getSymbol() const;
    void setSymbol(const QString &symbol);
    bool is_symbol_Set() const;
    bool is_symbol_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_chromosome;
    bool m_chromosome_isSet;
    bool m_chromosome_isValid;

    qint32 m_map_key;
    bool m_map_key_isSet;
    bool m_map_key_isValid;

    qint32 m_rgd_id;
    bool m_rgd_id_isSet;
    bool m_rgd_id_isValid;

    qint64 m_start;
    bool m_start_isSet;
    bool m_start_isValid;

    qint64 m_stop;
    bool m_stop_isSet;
    bool m_stop_isValid;

    QString m_strand;
    bool m_strand_isSet;
    bool m_strand_isValid;

    QString m_symbol;
    bool m_symbol_isSet;
    bool m_symbol_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMappedGenePosition)

#endif // OAIMappedGenePosition_H
