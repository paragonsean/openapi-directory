/**
 * Rat Genome Database REST API
 * The RGD REST API provides programmatic access to information and annotation stored in the Rat Genome Database
 *
 * The version of the OpenAPI document: 1.1
 * Contact: RGD.Data2@mcw.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITerm.h
 *
 * 
 */

#ifndef OAITerm_H
#define OAITerm_H

#include <QJsonObject>

#include "OAITermXRef.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITermXRef;

class OAITerm : public OAIObject {
public:
    OAITerm();
    OAITerm(QString json);
    ~OAITerm() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccId() const;
    void setAccId(const QString &acc_id);
    bool is_acc_id_Set() const;
    bool is_acc_id_Valid() const;

    QString getComment() const;
    void setComment(const QString &comment);
    bool is_comment_Set() const;
    bool is_comment_Valid() const;

    QString getCreatedBy() const;
    void setCreatedBy(const QString &created_by);
    bool is_created_by_Set() const;
    bool is_created_by_Valid() const;

    QDateTime getCreationDate() const;
    void setCreationDate(const QDateTime &creation_date);
    bool is_creation_date_Set() const;
    bool is_creation_date_Valid() const;

    QString getDefinition() const;
    void setDefinition(const QString &definition);
    bool is_definition_Set() const;
    bool is_definition_Valid() const;

    QDateTime getModificationDate() const;
    void setModificationDate(const QDateTime &modification_date);
    bool is_modification_date_Set() const;
    bool is_modification_date_Valid() const;

    qint32 getObsolete() const;
    void setObsolete(const qint32 &obsolete);
    bool is_obsolete_Set() const;
    bool is_obsolete_Valid() const;

    QString getOntologyId() const;
    void setOntologyId(const QString &ontology_id);
    bool is_ontology_id_Set() const;
    bool is_ontology_id_Valid() const;

    QString getTerm() const;
    void setTerm(const QString &term);
    bool is_term_Set() const;
    bool is_term_Valid() const;

    QList<OAITermXRef> getXrefs() const;
    void setXrefs(const QList<OAITermXRef> &xrefs);
    bool is_xrefs_Set() const;
    bool is_xrefs_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_acc_id;
    bool m_acc_id_isSet;
    bool m_acc_id_isValid;

    QString m_comment;
    bool m_comment_isSet;
    bool m_comment_isValid;

    QString m_created_by;
    bool m_created_by_isSet;
    bool m_created_by_isValid;

    QDateTime m_creation_date;
    bool m_creation_date_isSet;
    bool m_creation_date_isValid;

    QString m_definition;
    bool m_definition_isSet;
    bool m_definition_isValid;

    QDateTime m_modification_date;
    bool m_modification_date_isSet;
    bool m_modification_date_isValid;

    qint32 m_obsolete;
    bool m_obsolete_isSet;
    bool m_obsolete_isValid;

    QString m_ontology_id;
    bool m_ontology_id_isSet;
    bool m_ontology_id_isValid;

    QString m_term;
    bool m_term_isSet;
    bool m_term_isValid;

    QList<OAITermXRef> m_xrefs;
    bool m_xrefs_isSet;
    bool m_xrefs_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITerm)

#endif // OAITerm_H
