/**
 * Rat Genome Database REST API
 * The RGD REST API provides programmatic access to information and annotation stored in the Rat Genome Database
 *
 * The version of the OpenAPI document: 1.1
 * Contact: RGD.Data2@mcw.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReference.h
 *
 * 
 */

#ifndef OAIReference_H
#define OAIReference_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIReference : public OAIObject {
public:
    OAIReference();
    OAIReference(QString json);
    ~OAIReference() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCitation() const;
    void setCitation(const QString &citation);
    bool is_citation_Set() const;
    bool is_citation_Valid() const;

    QString getDoi() const;
    void setDoi(const QString &doi);
    bool is_doi_Set() const;
    bool is_doi_Valid() const;

    QString getEditors() const;
    void setEditors(const QString &editors);
    bool is_editors_Set() const;
    bool is_editors_Valid() const;

    QString getIssue() const;
    void setIssue(const QString &issue);
    bool is_issue_Set() const;
    bool is_issue_Valid() const;

    qint32 getKey() const;
    void setKey(const qint32 &key);
    bool is_key_Set() const;
    bool is_key_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    QString getPages() const;
    void setPages(const QString &pages);
    bool is_pages_Set() const;
    bool is_pages_Valid() const;

    QDateTime getPubDate() const;
    void setPubDate(const QDateTime &pub_date);
    bool is_pub_date_Set() const;
    bool is_pub_date_Valid() const;

    QString getPubStatus() const;
    void setPubStatus(const QString &pub_status);
    bool is_pub_status_Set() const;
    bool is_pub_status_Valid() const;

    QString getPublication() const;
    void setPublication(const QString &publication);
    bool is_publication_Set() const;
    bool is_publication_Valid() const;

    QString getPublisher() const;
    void setPublisher(const QString &publisher);
    bool is_publisher_Set() const;
    bool is_publisher_Valid() const;

    QString getPublisherCity() const;
    void setPublisherCity(const QString &publisher_city);
    bool is_publisher_city_Set() const;
    bool is_publisher_city_Valid() const;

    QString getRefAbstract() const;
    void setRefAbstract(const QString &ref_abstract);
    bool is_ref_abstract_Set() const;
    bool is_ref_abstract_Valid() const;

    QString getReferenceType() const;
    void setReferenceType(const QString &reference_type);
    bool is_reference_type_Set() const;
    bool is_reference_type_Valid() const;

    qint32 getRgdId() const;
    void setRgdId(const qint32 &rgd_id);
    bool is_rgd_id_Set() const;
    bool is_rgd_id_Valid() const;

    qint32 getSpeciesTypeKey() const;
    void setSpeciesTypeKey(const qint32 &species_type_key);
    bool is_species_type_key_Set() const;
    bool is_species_type_key_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getUrlWebReference() const;
    void setUrlWebReference(const QString &url_web_reference);
    bool is_url_web_reference_Set() const;
    bool is_url_web_reference_Valid() const;

    QString getVolume() const;
    void setVolume(const QString &volume);
    bool is_volume_Set() const;
    bool is_volume_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_citation;
    bool m_citation_isSet;
    bool m_citation_isValid;

    QString m_doi;
    bool m_doi_isSet;
    bool m_doi_isValid;

    QString m_editors;
    bool m_editors_isSet;
    bool m_editors_isValid;

    QString m_issue;
    bool m_issue_isSet;
    bool m_issue_isValid;

    qint32 m_key;
    bool m_key_isSet;
    bool m_key_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    QString m_pages;
    bool m_pages_isSet;
    bool m_pages_isValid;

    QDateTime m_pub_date;
    bool m_pub_date_isSet;
    bool m_pub_date_isValid;

    QString m_pub_status;
    bool m_pub_status_isSet;
    bool m_pub_status_isValid;

    QString m_publication;
    bool m_publication_isSet;
    bool m_publication_isValid;

    QString m_publisher;
    bool m_publisher_isSet;
    bool m_publisher_isValid;

    QString m_publisher_city;
    bool m_publisher_city_isSet;
    bool m_publisher_city_isValid;

    QString m_ref_abstract;
    bool m_ref_abstract_isSet;
    bool m_ref_abstract_isValid;

    QString m_reference_type;
    bool m_reference_type_isSet;
    bool m_reference_type_isValid;

    qint32 m_rgd_id;
    bool m_rgd_id_isSet;
    bool m_rgd_id_isValid;

    qint32 m_species_type_key;
    bool m_species_type_key_isSet;
    bool m_species_type_key_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_url_web_reference;
    bool m_url_web_reference_isSet;
    bool m_url_web_reference_isValid;

    QString m_volume;
    bool m_volume_isSet;
    bool m_volume_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReference)

#endif // OAIReference_H
