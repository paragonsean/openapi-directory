/**
 * Rat Genome Database REST API
 * The RGD REST API provides programmatic access to information and annotation stored in the Rat Genome Database
 *
 * The version of the OpenAPI document: 1.1
 * Contact: RGD.Data2@mcw.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISSLP.h
 *
 * 
 */

#ifndef OAISSLP_H
#define OAISSLP_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISSLP : public OAIObject {
public:
    OAISSLP();
    OAISSLP(QString json);
    ~OAISSLP() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getExpectedSize() const;
    void setExpectedSize(const qint32 &expected_size);
    bool is_expected_size_Set() const;
    bool is_expected_size_Valid() const;

    QString getForwardSeq() const;
    void setForwardSeq(const QString &forward_seq);
    bool is_forward_seq_Set() const;
    bool is_forward_seq_Valid() const;

    qint32 getKey() const;
    void setKey(const qint32 &key);
    bool is_key_Set() const;
    bool is_key_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    QString getReverseSeq() const;
    void setReverseSeq(const QString &reverse_seq);
    bool is_reverse_seq_Set() const;
    bool is_reverse_seq_Valid() const;

    qint32 getRgdId() const;
    void setRgdId(const qint32 &rgd_id);
    bool is_rgd_id_Set() const;
    bool is_rgd_id_Valid() const;

    qint32 getSpeciesTypeKey() const;
    void setSpeciesTypeKey(const qint32 &species_type_key);
    bool is_species_type_key_Set() const;
    bool is_species_type_key_Valid() const;

    QString getSslpType() const;
    void setSslpType(const QString &sslp_type);
    bool is_sslp_type_Set() const;
    bool is_sslp_type_Valid() const;

    QString getTemplateSeq() const;
    void setTemplateSeq(const QString &template_seq);
    bool is_template_seq_Set() const;
    bool is_template_seq_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_expected_size;
    bool m_expected_size_isSet;
    bool m_expected_size_isValid;

    QString m_forward_seq;
    bool m_forward_seq_isSet;
    bool m_forward_seq_isValid;

    qint32 m_key;
    bool m_key_isSet;
    bool m_key_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    QString m_reverse_seq;
    bool m_reverse_seq_isSet;
    bool m_reverse_seq_isValid;

    qint32 m_rgd_id;
    bool m_rgd_id_isSet;
    bool m_rgd_id_isValid;

    qint32 m_species_type_key;
    bool m_species_type_key_isSet;
    bool m_species_type_key_isValid;

    QString m_sslp_type;
    bool m_sslp_type_isSet;
    bool m_sslp_type_isValid;

    QString m_template_seq;
    bool m_template_seq_isSet;
    bool m_template_seq_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISSLP)

#endif // OAISSLP_H
