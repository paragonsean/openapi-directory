/**
 * Rat Genome Database REST API
 * The RGD REST API provides programmatic access to information and annotation stored in the Rat Genome Database
 *
 * The version of the OpenAPI document: 1.1
 * Contact: RGD.Data2@mcw.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAnnotation.h
 *
 * 
 */

#ifndef OAIAnnotation_H
#define OAIAnnotation_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAnnotation : public OAIObject {
public:
    OAIAnnotation();
    OAIAnnotation(QString json);
    ~OAIAnnotation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAnnotatedObjectRgdId() const;
    void setAnnotatedObjectRgdId(const qint32 &annotated_object_rgd_id);
    bool is_annotated_object_rgd_id_Set() const;
    bool is_annotated_object_rgd_id_Valid() const;

    QString getAnnotationExtension() const;
    void setAnnotationExtension(const QString &annotation_extension);
    bool is_annotation_extension_Set() const;
    bool is_annotation_extension_Valid() const;

    QString getAspect() const;
    void setAspect(const QString &aspect);
    bool is_aspect_Set() const;
    bool is_aspect_Valid() const;

    qint32 getCreatedBy() const;
    void setCreatedBy(const qint32 &created_by);
    bool is_created_by_Set() const;
    bool is_created_by_Valid() const;

    QDateTime getCreatedDate() const;
    void setCreatedDate(const QDateTime &created_date);
    bool is_created_date_Set() const;
    bool is_created_date_Valid() const;

    QString getDataSrc() const;
    void setDataSrc(const QString &data_src);
    bool is_data_src_Set() const;
    bool is_data_src_Valid() const;

    QString getEvidence() const;
    void setEvidence(const QString &evidence);
    bool is_evidence_Set() const;
    bool is_evidence_Valid() const;

    QString getGeneProductFormId() const;
    void setGeneProductFormId(const QString &gene_product_form_id);
    bool is_gene_product_form_id_Set() const;
    bool is_gene_product_form_id_Valid() const;

    qint32 getKey() const;
    void setKey(const qint32 &key);
    bool is_key_Set() const;
    bool is_key_Valid() const;

    qint32 getLastModifiedBy() const;
    void setLastModifiedBy(const qint32 &last_modified_by);
    bool is_last_modified_by_Set() const;
    bool is_last_modified_by_Valid() const;

    QDateTime getLastModifiedDate() const;
    void setLastModifiedDate(const QDateTime &last_modified_date);
    bool is_last_modified_date_Set() const;
    bool is_last_modified_date_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    QString getObjectName() const;
    void setObjectName(const QString &object_name);
    bool is_object_name_Set() const;
    bool is_object_name_Valid() const;

    QString getObjectSymbol() const;
    void setObjectSymbol(const QString &object_symbol);
    bool is_object_symbol_Set() const;
    bool is_object_symbol_Valid() const;

    QDateTime getOriginalCreatedDate() const;
    void setOriginalCreatedDate(const QDateTime &original_created_date);
    bool is_original_created_date_Set() const;
    bool is_original_created_date_Valid() const;

    QString getQualifier() const;
    void setQualifier(const QString &qualifier);
    bool is_qualifier_Set() const;
    bool is_qualifier_Valid() const;

    qint32 getRefRgdId() const;
    void setRefRgdId(const qint32 &ref_rgd_id);
    bool is_ref_rgd_id_Set() const;
    bool is_ref_rgd_id_Valid() const;

    QString getRelativeTo() const;
    void setRelativeTo(const QString &relative_to);
    bool is_relative_to_Set() const;
    bool is_relative_to_Valid() const;

    qint32 getRgdObjectKey() const;
    void setRgdObjectKey(const qint32 &rgd_object_key);
    bool is_rgd_object_key_Set() const;
    bool is_rgd_object_key_Valid() const;

    qint32 getSpeciesTypeKey() const;
    void setSpeciesTypeKey(const qint32 &species_type_key);
    bool is_species_type_key_Set() const;
    bool is_species_type_key_Valid() const;

    QString getTerm() const;
    void setTerm(const QString &term);
    bool is_term_Set() const;
    bool is_term_Valid() const;

    QString getTermAcc() const;
    void setTermAcc(const QString &term_acc);
    bool is_term_acc_Set() const;
    bool is_term_acc_Valid() const;

    QString getWithInfo() const;
    void setWithInfo(const QString &with_info);
    bool is_with_info_Set() const;
    bool is_with_info_Valid() const;

    QString getXrefSource() const;
    void setXrefSource(const QString &xref_source);
    bool is_xref_source_Set() const;
    bool is_xref_source_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_annotated_object_rgd_id;
    bool m_annotated_object_rgd_id_isSet;
    bool m_annotated_object_rgd_id_isValid;

    QString m_annotation_extension;
    bool m_annotation_extension_isSet;
    bool m_annotation_extension_isValid;

    QString m_aspect;
    bool m_aspect_isSet;
    bool m_aspect_isValid;

    qint32 m_created_by;
    bool m_created_by_isSet;
    bool m_created_by_isValid;

    QDateTime m_created_date;
    bool m_created_date_isSet;
    bool m_created_date_isValid;

    QString m_data_src;
    bool m_data_src_isSet;
    bool m_data_src_isValid;

    QString m_evidence;
    bool m_evidence_isSet;
    bool m_evidence_isValid;

    QString m_gene_product_form_id;
    bool m_gene_product_form_id_isSet;
    bool m_gene_product_form_id_isValid;

    qint32 m_key;
    bool m_key_isSet;
    bool m_key_isValid;

    qint32 m_last_modified_by;
    bool m_last_modified_by_isSet;
    bool m_last_modified_by_isValid;

    QDateTime m_last_modified_date;
    bool m_last_modified_date_isSet;
    bool m_last_modified_date_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    QString m_object_name;
    bool m_object_name_isSet;
    bool m_object_name_isValid;

    QString m_object_symbol;
    bool m_object_symbol_isSet;
    bool m_object_symbol_isValid;

    QDateTime m_original_created_date;
    bool m_original_created_date_isSet;
    bool m_original_created_date_isValid;

    QString m_qualifier;
    bool m_qualifier_isSet;
    bool m_qualifier_isValid;

    qint32 m_ref_rgd_id;
    bool m_ref_rgd_id_isSet;
    bool m_ref_rgd_id_isValid;

    QString m_relative_to;
    bool m_relative_to_isSet;
    bool m_relative_to_isValid;

    qint32 m_rgd_object_key;
    bool m_rgd_object_key_isSet;
    bool m_rgd_object_key_isValid;

    qint32 m_species_type_key;
    bool m_species_type_key_isSet;
    bool m_species_type_key_isValid;

    QString m_term;
    bool m_term_isSet;
    bool m_term_isValid;

    QString m_term_acc;
    bool m_term_acc_isSet;
    bool m_term_acc_isValid;

    QString m_with_info;
    bool m_with_info_isSet;
    bool m_with_info_isValid;

    QString m_xref_source;
    bool m_xref_source_isSet;
    bool m_xref_source_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAnnotation)

#endif // OAIAnnotation_H
