/**
 * WeGA API
 * ⚠️<b>DEPRECATION WARNING</b>⚠️<br/>This version of the WeGA API specification is outdated and superseded by [version 1.1.0](https://weber-gesamtausgabe.de/api/v1/openapi.json).  <br/> <br/> For feedback or requests about this API please contact stadler@weber-gesamtausgabe.de or start the discussion at https://github.com/Edirom/WeGA-WebApp
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApplicationNewIDGet200Response from '../model/ApplicationNewIDGet200Response';
import ApplicationNewIDGet403Response from '../model/ApplicationNewIDGet403Response';
import ApplicationStatusGet200Response from '../model/ApplicationStatusGet200Response';
import ApplicationStatusGet500Response from '../model/ApplicationStatusGet500Response';
import Error from '../model/Error';

/**
* Application service.
* @module api/ApplicationApi
* @version 1.0.0
*/
export default class ApplicationApi {

    /**
    * Constructs a new ApplicationApi. 
    * @alias module:api/ApplicationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the applicationNewIDGet operation.
     * @callback module:api/ApplicationApi~applicationNewIDGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationNewIDGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new WeGA ID
     * @param {Array.<module:model/String>} docType The WeGA document type
     * @param {module:api/ApplicationApi~applicationNewIDGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationNewIDGet200Response}
     */
    applicationNewIDGet(docType, callback) {
      let postBody = null;
      // verify the required parameter 'docType' is set
      if (docType === undefined || docType === null) {
        throw new Error("Missing the required parameter 'docType' when calling applicationNewIDGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'docType': this.apiClient.buildCollectionParam(docType, 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApplicationNewIDGet200Response;
      return this.apiClient.callApi(
        '/application/newID', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the applicationStatusGet operation.
     * @callback module:api/ApplicationApi~applicationStatusGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApplicationStatusGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get status information about the running WeGA-WebApp
     * @param {module:api/ApplicationApi~applicationStatusGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApplicationStatusGet200Response}
     */
    applicationStatusGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApplicationStatusGet200Response;
      return this.apiClient.callApi(
        '/application/status', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
