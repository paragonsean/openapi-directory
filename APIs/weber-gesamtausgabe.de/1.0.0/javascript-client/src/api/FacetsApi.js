/**
 * WeGA API
 * ⚠️<b>DEPRECATION WARNING</b>⚠️<br/>This version of the WeGA API specification is outdated and superseded by [version 1.1.0](https://weber-gesamtausgabe.de/api/v1/openapi.json).  <br/> <br/> For feedback or requests about this API please contact stadler@weber-gesamtausgabe.de or start the discussion at https://github.com/Edirom/WeGA-WebApp
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error from '../model/Error';
import Facet from '../model/Facet';

/**
* Facets service.
* @module api/FacetsApi
* @version 1.0.0
*/
export default class FacetsApi {

    /**
    * Constructs a new FacetsApi. 
    * @alias module:api/FacetsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the facetsFacetGet operation.
     * @callback module:api/FacetsApi~facetsFacetGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Facet>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns facets
     * @param {module:model/String} facet The facet to search for
     * @param {String} scope The scope of the result set, i.e. 'indices' or a WeGA ID
     * @param {Array.<module:model/String>} docType The WeGA document type
     * @param {Object} opts Optional parameters
     * @param {String} [term] The search term to be looked for in the facet's label
     * @param {Number} [offset = 1)] Position of first item to retrieve (starting from 1)
     * @param {Number} [limit = 10)] Number of items to retrieve (200 max)
     * @param {module:api/FacetsApi~facetsFacetGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Facet>}
     */
    facetsFacetGet(facet, scope, docType, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'facet' is set
      if (facet === undefined || facet === null) {
        throw new Error("Missing the required parameter 'facet' when calling facetsFacetGet");
      }
      // verify the required parameter 'scope' is set
      if (scope === undefined || scope === null) {
        throw new Error("Missing the required parameter 'scope' when calling facetsFacetGet");
      }
      // verify the required parameter 'docType' is set
      if (docType === undefined || docType === null) {
        throw new Error("Missing the required parameter 'docType' when calling facetsFacetGet");
      }

      let pathParams = {
        'facet': facet
      };
      let queryParams = {
        'scope': scope,
        'term': opts['term'],
        'docType': this.apiClient.buildCollectionParam(docType, 'csv'),
        'offset': opts['offset'],
        'limit': opts['limit']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Facet];
      return this.apiClient.callApi(
        '/facets/{facet}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
