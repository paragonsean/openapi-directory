/**
 * WeGA API
 * ⚠️<b>DEPRECATION WARNING</b>⚠️<br/>This version of the WeGA API specification is outdated and superseded by [version 1.1.0](https://weber-gesamtausgabe.de/api/v1/openapi.json).  <br/> <br/> For feedback or requests about this API please contact stadler@weber-gesamtausgabe.de or start the discussion at https://github.com/Edirom/WeGA-WebApp
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CodeSample model module.
 * @module model/CodeSample
 * @version 1.0.0
 */
class CodeSample {
    /**
     * Constructs a new <code>CodeSample</code>.
     * @alias module:model/CodeSample
     */
    constructor() { 
        
        CodeSample.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CodeSample</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CodeSample} obj Optional instance to populate.
     * @return {module:model/CodeSample} The populated <code>CodeSample</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CodeSample();

            if (data.hasOwnProperty('codeSample')) {
                obj['codeSample'] = ApiClient.convertToType(data['codeSample'], 'String');
            }
            if (data.hasOwnProperty('docID')) {
                obj['docID'] = ApiClient.convertToType(data['docID'], 'String');
            }
            if (data.hasOwnProperty('uri')) {
                obj['uri'] = ApiClient.convertToType(data['uri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CodeSample</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CodeSample</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['codeSample'] && !(typeof data['codeSample'] === 'string' || data['codeSample'] instanceof String)) {
            throw new Error("Expected the field `codeSample` to be a primitive type in the JSON string but got " + data['codeSample']);
        }
        // ensure the json data is a string
        if (data['docID'] && !(typeof data['docID'] === 'string' || data['docID'] instanceof String)) {
            throw new Error("Expected the field `docID` to be a primitive type in the JSON string but got " + data['docID']);
        }
        // ensure the json data is a string
        if (data['uri'] && !(typeof data['uri'] === 'string' || data['uri'] instanceof String)) {
            throw new Error("Expected the field `uri` to be a primitive type in the JSON string but got " + data['uri']);
        }

        return true;
    }


}



/**
 * The code snippet
 * @member {String} codeSample
 */
CodeSample.prototype['codeSample'] = undefined;

/**
 * The WeGA document identifier representing a specific document
 * @member {String} docID
 */
CodeSample.prototype['docID'] = undefined;

/**
 * Unique identifier representing a specific document
 * @member {String} uri
 */
CodeSample.prototype['uri'] = undefined;






export default CodeSample;

