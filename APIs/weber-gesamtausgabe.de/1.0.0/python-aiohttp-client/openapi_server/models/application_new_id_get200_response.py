# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class ApplicationNewIDGet200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, doc_id: str=None, doc_type: str=None):
        """ApplicationNewIDGet200Response - a model defined in OpenAPI

        :param doc_id: The doc_id of this ApplicationNewIDGet200Response.
        :param doc_type: The doc_type of this ApplicationNewIDGet200Response.
        """
        self.openapi_types = {
            'doc_id': str,
            'doc_type': str
        }

        self.attribute_map = {
            'doc_id': 'docID',
            'doc_type': 'docType'
        }

        self._doc_id = doc_id
        self._doc_type = doc_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationNewIDGet200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _application_newID_get_200_response of this ApplicationNewIDGet200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def doc_id(self):
        """Gets the doc_id of this ApplicationNewIDGet200Response.

        The WeGA ID

        :return: The doc_id of this ApplicationNewIDGet200Response.
        :rtype: str
        """
        return self._doc_id

    @doc_id.setter
    def doc_id(self, doc_id):
        """Sets the doc_id of this ApplicationNewIDGet200Response.

        The WeGA ID

        :param doc_id: The doc_id of this ApplicationNewIDGet200Response.
        :type doc_id: str
        """
        if doc_id is not None and not re.search(r'^A[A-F0-9]{6}$', doc_id):
            raise ValueError("Invalid value for `doc_id`, must be a follow pattern or equal to `/^A[A-F0-9]{6}$/`")

        self._doc_id = doc_id

    @property
    def doc_type(self):
        """Gets the doc_type of this ApplicationNewIDGet200Response.

        The WeGA document type

        :return: The doc_type of this ApplicationNewIDGet200Response.
        :rtype: str
        """
        return self._doc_type

    @doc_type.setter
    def doc_type(self, doc_type):
        """Sets the doc_type of this ApplicationNewIDGet200Response.

        The WeGA document type

        :param doc_type: The doc_type of this ApplicationNewIDGet200Response.
        :type doc_type: str
        """

        self._doc_type = doc_type
