# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class ApplicationStatusGet500Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deployment: datetime=None, status: str='unhealthy', svn_revision: int=None, version: str=None):
        """ApplicationStatusGet500Response - a model defined in OpenAPI

        :param deployment: The deployment of this ApplicationStatusGet500Response.
        :param status: The status of this ApplicationStatusGet500Response.
        :param svn_revision: The svn_revision of this ApplicationStatusGet500Response.
        :param version: The version of this ApplicationStatusGet500Response.
        """
        self.openapi_types = {
            'deployment': datetime,
            'status': str,
            'svn_revision': int,
            'version': str
        }

        self.attribute_map = {
            'deployment': 'deployment',
            'status': 'status',
            'svn_revision': 'svnRevision',
            'version': 'version'
        }

        self._deployment = deployment
        self._status = status
        self._svn_revision = svn_revision
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationStatusGet500Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _application_status_get_500_response of this ApplicationStatusGet500Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deployment(self):
        """Gets the deployment of this ApplicationStatusGet500Response.

        The datetime of the deployment of the WeGA-WebApp

        :return: The deployment of this ApplicationStatusGet500Response.
        :rtype: datetime
        """
        return self._deployment

    @deployment.setter
    def deployment(self, deployment):
        """Sets the deployment of this ApplicationStatusGet500Response.

        The datetime of the deployment of the WeGA-WebApp

        :param deployment: The deployment of this ApplicationStatusGet500Response.
        :type deployment: datetime
        """

        self._deployment = deployment

    @property
    def status(self):
        """Gets the status of this ApplicationStatusGet500Response.

        Status (healthy|unhealthy) of the currently running WeGA-WebApp

        :return: The status of this ApplicationStatusGet500Response.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ApplicationStatusGet500Response.

        Status (healthy|unhealthy) of the currently running WeGA-WebApp

        :param status: The status of this ApplicationStatusGet500Response.
        :type status: str
        """

        self._status = status

    @property
    def svn_revision(self):
        """Gets the svn_revision of this ApplicationStatusGet500Response.

        The Subversion revision of the currently installed WeGA-data

        :return: The svn_revision of this ApplicationStatusGet500Response.
        :rtype: int
        """
        return self._svn_revision

    @svn_revision.setter
    def svn_revision(self, svn_revision):
        """Sets the svn_revision of this ApplicationStatusGet500Response.

        The Subversion revision of the currently installed WeGA-data

        :param svn_revision: The svn_revision of this ApplicationStatusGet500Response.
        :type svn_revision: int
        """

        self._svn_revision = svn_revision

    @property
    def version(self):
        """Gets the version of this ApplicationStatusGet500Response.


        :return: The version of this ApplicationStatusGet500Response.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this ApplicationStatusGet500Response.


        :param version: The version of this ApplicationStatusGet500Response.
        :type version: str
        """
        if version is not None and not re.search(r'^\d+\.\d+\.\d+$', version):
            raise ValueError("Invalid value for `version`, must be a follow pattern or equal to `/^\d+\.\d+\.\d+$/`")

        self._version = version
