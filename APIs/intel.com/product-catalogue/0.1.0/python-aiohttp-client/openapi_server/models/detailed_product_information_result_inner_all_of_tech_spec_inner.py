# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DetailedProductInformationResultInnerAllOfTechSpecInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disclaimer: str=None, highlight_key: str=None, label: str=None, raw_value: str=None, tool_tip: str=None, value: str=None):
        """DetailedProductInformationResultInnerAllOfTechSpecInner - a model defined in OpenAPI

        :param disclaimer: The disclaimer of this DetailedProductInformationResultInnerAllOfTechSpecInner.
        :param highlight_key: The highlight_key of this DetailedProductInformationResultInnerAllOfTechSpecInner.
        :param label: The label of this DetailedProductInformationResultInnerAllOfTechSpecInner.
        :param raw_value: The raw_value of this DetailedProductInformationResultInnerAllOfTechSpecInner.
        :param tool_tip: The tool_tip of this DetailedProductInformationResultInnerAllOfTechSpecInner.
        :param value: The value of this DetailedProductInformationResultInnerAllOfTechSpecInner.
        """
        self.openapi_types = {
            'disclaimer': str,
            'highlight_key': str,
            'label': str,
            'raw_value': str,
            'tool_tip': str,
            'value': str
        }

        self.attribute_map = {
            'disclaimer': 'disclaimer',
            'highlight_key': 'highlight_key',
            'label': 'label',
            'raw_value': 'raw_value',
            'tool_tip': 'tool_tip',
            'value': 'value'
        }

        self._disclaimer = disclaimer
        self._highlight_key = highlight_key
        self._label = label
        self._raw_value = raw_value
        self._tool_tip = tool_tip
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DetailedProductInformationResultInnerAllOfTechSpecInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Detailed_product_information_result_inner_allOf_tech_spec_inner of this DetailedProductInformationResultInnerAllOfTechSpecInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disclaimer(self):
        """Gets the disclaimer of this DetailedProductInformationResultInnerAllOfTechSpecInner.


        :return: The disclaimer of this DetailedProductInformationResultInnerAllOfTechSpecInner.
        :rtype: str
        """
        return self._disclaimer

    @disclaimer.setter
    def disclaimer(self, disclaimer):
        """Sets the disclaimer of this DetailedProductInformationResultInnerAllOfTechSpecInner.


        :param disclaimer: The disclaimer of this DetailedProductInformationResultInnerAllOfTechSpecInner.
        :type disclaimer: str
        """

        self._disclaimer = disclaimer

    @property
    def highlight_key(self):
        """Gets the highlight_key of this DetailedProductInformationResultInnerAllOfTechSpecInner.


        :return: The highlight_key of this DetailedProductInformationResultInnerAllOfTechSpecInner.
        :rtype: str
        """
        return self._highlight_key

    @highlight_key.setter
    def highlight_key(self, highlight_key):
        """Sets the highlight_key of this DetailedProductInformationResultInnerAllOfTechSpecInner.


        :param highlight_key: The highlight_key of this DetailedProductInformationResultInnerAllOfTechSpecInner.
        :type highlight_key: str
        """

        self._highlight_key = highlight_key

    @property
    def label(self):
        """Gets the label of this DetailedProductInformationResultInnerAllOfTechSpecInner.


        :return: The label of this DetailedProductInformationResultInnerAllOfTechSpecInner.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this DetailedProductInformationResultInnerAllOfTechSpecInner.


        :param label: The label of this DetailedProductInformationResultInnerAllOfTechSpecInner.
        :type label: str
        """

        self._label = label

    @property
    def raw_value(self):
        """Gets the raw_value of this DetailedProductInformationResultInnerAllOfTechSpecInner.


        :return: The raw_value of this DetailedProductInformationResultInnerAllOfTechSpecInner.
        :rtype: str
        """
        return self._raw_value

    @raw_value.setter
    def raw_value(self, raw_value):
        """Sets the raw_value of this DetailedProductInformationResultInnerAllOfTechSpecInner.


        :param raw_value: The raw_value of this DetailedProductInformationResultInnerAllOfTechSpecInner.
        :type raw_value: str
        """

        self._raw_value = raw_value

    @property
    def tool_tip(self):
        """Gets the tool_tip of this DetailedProductInformationResultInnerAllOfTechSpecInner.


        :return: The tool_tip of this DetailedProductInformationResultInnerAllOfTechSpecInner.
        :rtype: str
        """
        return self._tool_tip

    @tool_tip.setter
    def tool_tip(self, tool_tip):
        """Sets the tool_tip of this DetailedProductInformationResultInnerAllOfTechSpecInner.


        :param tool_tip: The tool_tip of this DetailedProductInformationResultInnerAllOfTechSpecInner.
        :type tool_tip: str
        """

        self._tool_tip = tool_tip

    @property
    def value(self):
        """Gets the value of this DetailedProductInformationResultInnerAllOfTechSpecInner.


        :return: The value of this DetailedProductInformationResultInnerAllOfTechSpecInner.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this DetailedProductInformationResultInnerAllOfTechSpecInner.


        :param value: The value of this DetailedProductInformationResultInnerAllOfTechSpecInner.
        :type value: str
        """

        self._value = value
