/**
 * Intel Product Catalogue Service
 * This is the documentation for PIM Micro services. In order to use this tool you need to have Basic Auth credentials and a client id. If you dont have one, please make sure to request one by sending an email to the PIM MS team: [pim.360.team@intel.com](mailto:pim.360.team@intel.com?subject=PIMServices)
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: pim.360.team@intel.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProductListingLevelInfoResultInnerHighlightsInfoInner from './ProductListingLevelInfoResultInnerHighlightsInfoInner';

/**
 * The ProductListingLevelInfoResultInner model module.
 * @module model/ProductListingLevelInfoResultInner
 * @version 0.1.0
 */
class ProductListingLevelInfoResultInner {
    /**
     * Constructs a new <code>ProductListingLevelInfoResultInner</code>.
     * @alias module:model/ProductListingLevelInfoResultInner
     */
    constructor() { 
        
        ProductListingLevelInfoResultInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProductListingLevelInfoResultInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductListingLevelInfoResultInner} obj Optional instance to populate.
     * @return {module:model/ProductListingLevelInfoResultInner} The populated <code>ProductListingLevelInfoResultInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductListingLevelInfoResultInner();

            if (data.hasOwnProperty('created_date')) {
                obj['created_date'] = ApiClient.convertToType(data['created_date'], 'String');
            }
            if (data.hasOwnProperty('highlights_info')) {
                obj['highlights_info'] = ApiClient.convertToType(data['highlights_info'], [ProductListingLevelInfoResultInnerHighlightsInfoInner]);
            }
            if (data.hasOwnProperty('mktg_prd_type')) {
                obj['mktg_prd_type'] = ApiClient.convertToType(data['mktg_prd_type'], 'String');
            }
            if (data.hasOwnProperty('product_category')) {
                obj['product_category'] = ApiClient.convertToType(data['product_category'], ['String']);
            }
            if (data.hasOwnProperty('product_description')) {
                obj['product_description'] = ApiClient.convertToType(data['product_description'], 'String');
            }
            if (data.hasOwnProperty('product_id')) {
                obj['product_id'] = ApiClient.convertToType(data['product_id'], 'String');
            }
            if (data.hasOwnProperty('product_manufacturer')) {
                obj['product_manufacturer'] = ApiClient.convertToType(data['product_manufacturer'], 'String');
            }
            if (data.hasOwnProperty('product_name')) {
                obj['product_name'] = ApiClient.convertToType(data['product_name'], 'String');
            }
            if (data.hasOwnProperty('product_name_raw')) {
                obj['product_name_raw'] = ApiClient.convertToType(data['product_name_raw'], 'String');
            }
            if (data.hasOwnProperty('product_on_market_date')) {
                obj['product_on_market_date'] = ApiClient.convertToType(data['product_on_market_date'], 'String');
            }
            if (data.hasOwnProperty('updated_date')) {
                obj['updated_date'] = ApiClient.convertToType(data['updated_date'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductListingLevelInfoResultInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductListingLevelInfoResultInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['created_date'] && !(typeof data['created_date'] === 'string' || data['created_date'] instanceof String)) {
            throw new Error("Expected the field `created_date` to be a primitive type in the JSON string but got " + data['created_date']);
        }
        if (data['highlights_info']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['highlights_info'])) {
                throw new Error("Expected the field `highlights_info` to be an array in the JSON data but got " + data['highlights_info']);
            }
            // validate the optional field `highlights_info` (array)
            for (const item of data['highlights_info']) {
                ProductListingLevelInfoResultInnerHighlightsInfoInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['mktg_prd_type'] && !(typeof data['mktg_prd_type'] === 'string' || data['mktg_prd_type'] instanceof String)) {
            throw new Error("Expected the field `mktg_prd_type` to be a primitive type in the JSON string but got " + data['mktg_prd_type']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['product_category'])) {
            throw new Error("Expected the field `product_category` to be an array in the JSON data but got " + data['product_category']);
        }
        // ensure the json data is a string
        if (data['product_description'] && !(typeof data['product_description'] === 'string' || data['product_description'] instanceof String)) {
            throw new Error("Expected the field `product_description` to be a primitive type in the JSON string but got " + data['product_description']);
        }
        // ensure the json data is a string
        if (data['product_id'] && !(typeof data['product_id'] === 'string' || data['product_id'] instanceof String)) {
            throw new Error("Expected the field `product_id` to be a primitive type in the JSON string but got " + data['product_id']);
        }
        // ensure the json data is a string
        if (data['product_manufacturer'] && !(typeof data['product_manufacturer'] === 'string' || data['product_manufacturer'] instanceof String)) {
            throw new Error("Expected the field `product_manufacturer` to be a primitive type in the JSON string but got " + data['product_manufacturer']);
        }
        // ensure the json data is a string
        if (data['product_name'] && !(typeof data['product_name'] === 'string' || data['product_name'] instanceof String)) {
            throw new Error("Expected the field `product_name` to be a primitive type in the JSON string but got " + data['product_name']);
        }
        // ensure the json data is a string
        if (data['product_name_raw'] && !(typeof data['product_name_raw'] === 'string' || data['product_name_raw'] instanceof String)) {
            throw new Error("Expected the field `product_name_raw` to be a primitive type in the JSON string but got " + data['product_name_raw']);
        }
        // ensure the json data is a string
        if (data['product_on_market_date'] && !(typeof data['product_on_market_date'] === 'string' || data['product_on_market_date'] instanceof String)) {
            throw new Error("Expected the field `product_on_market_date` to be a primitive type in the JSON string but got " + data['product_on_market_date']);
        }
        // ensure the json data is a string
        if (data['updated_date'] && !(typeof data['updated_date'] === 'string' || data['updated_date'] instanceof String)) {
            throw new Error("Expected the field `updated_date` to be a primitive type in the JSON string but got " + data['updated_date']);
        }

        return true;
    }


}



/**
 * @member {String} created_date
 */
ProductListingLevelInfoResultInner.prototype['created_date'] = undefined;

/**
 * @member {Array.<module:model/ProductListingLevelInfoResultInnerHighlightsInfoInner>} highlights_info
 */
ProductListingLevelInfoResultInner.prototype['highlights_info'] = undefined;

/**
 * @member {String} mktg_prd_type
 */
ProductListingLevelInfoResultInner.prototype['mktg_prd_type'] = undefined;

/**
 * Multiple product category
 * @member {Array.<String>} product_category
 */
ProductListingLevelInfoResultInner.prototype['product_category'] = undefined;

/**
 * @member {String} product_description
 */
ProductListingLevelInfoResultInner.prototype['product_description'] = undefined;

/**
 * @member {String} product_id
 */
ProductListingLevelInfoResultInner.prototype['product_id'] = undefined;

/**
 * @member {String} product_manufacturer
 */
ProductListingLevelInfoResultInner.prototype['product_manufacturer'] = undefined;

/**
 * @member {String} product_name
 */
ProductListingLevelInfoResultInner.prototype['product_name'] = undefined;

/**
 * @member {String} product_name_raw
 */
ProductListingLevelInfoResultInner.prototype['product_name_raw'] = undefined;

/**
 * @member {String} product_on_market_date
 */
ProductListingLevelInfoResultInner.prototype['product_on_market_date'] = undefined;

/**
 * @member {String} updated_date
 */
ProductListingLevelInfoResultInner.prototype['updated_date'] = undefined;






export default ProductListingLevelInfoResultInner;

