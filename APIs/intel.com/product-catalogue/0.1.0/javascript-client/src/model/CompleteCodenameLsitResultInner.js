/**
 * Intel Product Catalogue Service
 * This is the documentation for PIM Micro services. In order to use this tool you need to have Basic Auth credentials and a client id. If you dont have one, please make sure to request one by sending an email to the PIM MS team: [pim.360.team@intel.com](mailto:pim.360.team@intel.com?subject=PIMServices)
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: pim.360.team@intel.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CompleteCodenameLsitResultInner model module.
 * @module model/CompleteCodenameLsitResultInner
 * @version 0.1.0
 */
class CompleteCodenameLsitResultInner {
    /**
     * Constructs a new <code>CompleteCodenameLsitResultInner</code>.
     * @alias module:model/CompleteCodenameLsitResultInner
     */
    constructor() { 
        
        CompleteCodenameLsitResultInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CompleteCodenameLsitResultInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CompleteCodenameLsitResultInner} obj Optional instance to populate.
     * @return {module:model/CompleteCodenameLsitResultInner} The populated <code>CompleteCodenameLsitResultInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CompleteCodenameLsitResultInner();

            if (data.hasOwnProperty('CodeNameId')) {
                obj['CodeNameId'] = ApiClient.convertToType(data['CodeNameId'], 'String');
            }
            if (data.hasOwnProperty('CodeNameText')) {
                obj['CodeNameText'] = ApiClient.convertToType(data['CodeNameText'], 'String');
            }
            if (data.hasOwnProperty('CodeNameType')) {
                obj['CodeNameType'] = ApiClient.convertToType(data['CodeNameType'], 'String');
            }
            if (data.hasOwnProperty('UrlText')) {
                obj['UrlText'] = ApiClient.convertToType(data['UrlText'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CompleteCodenameLsitResultInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CompleteCodenameLsitResultInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['CodeNameId'] && !(typeof data['CodeNameId'] === 'string' || data['CodeNameId'] instanceof String)) {
            throw new Error("Expected the field `CodeNameId` to be a primitive type in the JSON string but got " + data['CodeNameId']);
        }
        // ensure the json data is a string
        if (data['CodeNameText'] && !(typeof data['CodeNameText'] === 'string' || data['CodeNameText'] instanceof String)) {
            throw new Error("Expected the field `CodeNameText` to be a primitive type in the JSON string but got " + data['CodeNameText']);
        }
        // ensure the json data is a string
        if (data['CodeNameType'] && !(typeof data['CodeNameType'] === 'string' || data['CodeNameType'] instanceof String)) {
            throw new Error("Expected the field `CodeNameType` to be a primitive type in the JSON string but got " + data['CodeNameType']);
        }
        // ensure the json data is a string
        if (data['UrlText'] && !(typeof data['UrlText'] === 'string' || data['UrlText'] instanceof String)) {
            throw new Error("Expected the field `UrlText` to be a primitive type in the JSON string but got " + data['UrlText']);
        }

        return true;
    }


}



/**
 * @member {String} CodeNameId
 */
CompleteCodenameLsitResultInner.prototype['CodeNameId'] = undefined;

/**
 * @member {String} CodeNameText
 */
CompleteCodenameLsitResultInner.prototype['CodeNameText'] = undefined;

/**
 * @member {String} CodeNameType
 */
CompleteCodenameLsitResultInner.prototype['CodeNameType'] = undefined;

/**
 * @member {String} UrlText
 */
CompleteCodenameLsitResultInner.prototype['UrlText'] = undefined;






export default CompleteCodenameLsitResultInner;

