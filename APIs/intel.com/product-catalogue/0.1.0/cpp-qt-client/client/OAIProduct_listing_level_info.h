/**
 * Intel Product Catalogue Service
 * This is the documentation for PIM Micro services. In order to use this tool you need to have Basic Auth credentials and a client id. If you dont have one, please make sure to request one by sending an email to the PIM MS team: [pim.360.team@intel.com](mailto:pim.360.team@intel.com?subject=PIMServices)
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: pim.360.team@intel.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProduct_listing_level_info.h
 *
 * 
 */

#ifndef OAIProduct_listing_level_info_H
#define OAIProduct_listing_level_info_H

#include <QJsonObject>

#include "OAIProduct_listing_level_info_result_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIProduct_listing_level_info_result_inner;

class OAIProduct_listing_level_info : public OAIObject {
public:
    OAIProduct_listing_level_info();
    OAIProduct_listing_level_info(QString json);
    ~OAIProduct_listing_level_info() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPageNo() const;
    void setPageNo(const QString &page_no);
    bool is_page_no_Set() const;
    bool is_page_no_Valid() const;

    qint32 getPerPage() const;
    void setPerPage(const qint32 &per_page);
    bool is_per_page_Set() const;
    bool is_per_page_Valid() const;

    QList<OAIProduct_listing_level_info_result_inner> getResult() const;
    void setResult(const QList<OAIProduct_listing_level_info_result_inner> &result);
    bool is_result_Set() const;
    bool is_result_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    qint32 getTotalCount() const;
    void setTotalCount(const qint32 &total_count);
    bool is_total_count_Set() const;
    bool is_total_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_page_no;
    bool m_page_no_isSet;
    bool m_page_no_isValid;

    qint32 m_per_page;
    bool m_per_page_isSet;
    bool m_per_page_isValid;

    QList<OAIProduct_listing_level_info_result_inner> m_result;
    bool m_result_isSet;
    bool m_result_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    qint32 m_total_count;
    bool m_total_count_isSet;
    bool m_total_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProduct_listing_level_info)

#endif // OAIProduct_listing_level_info_H
