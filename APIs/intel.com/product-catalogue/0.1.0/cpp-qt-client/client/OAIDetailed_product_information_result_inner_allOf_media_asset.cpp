/**
 * Intel Product Catalogue Service
 * This is the documentation for PIM Micro services. In order to use this tool you need to have Basic Auth credentials and a client id. If you dont have one, please make sure to request one by sending an email to the PIM MS team: [pim.360.team@intel.com](mailto:pim.360.team@intel.com?subject=PIMServices)
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: pim.360.team@intel.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDetailed_product_information_result_inner_allOf_media_asset.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDetailed_product_information_result_inner_allOf_media_asset::OAIDetailed_product_information_result_inner_allOf_media_asset(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDetailed_product_information_result_inner_allOf_media_asset::OAIDetailed_product_information_result_inner_allOf_media_asset() {
    this->initializeModel();
}

OAIDetailed_product_information_result_inner_allOf_media_asset::~OAIDetailed_product_information_result_inner_allOf_media_asset() {}

void OAIDetailed_product_information_result_inner_allOf_media_asset::initializeModel() {

    m_picture_1_isSet = false;
    m_picture_1_isValid = false;

    m_picture_2_isSet = false;
    m_picture_2_isValid = false;

    m_picture_3_isSet = false;
    m_picture_3_isValid = false;

    m_picture_4_isSet = false;
    m_picture_4_isValid = false;

    m_picture_5_isSet = false;
    m_picture_5_isValid = false;
}

void OAIDetailed_product_information_result_inner_allOf_media_asset::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDetailed_product_information_result_inner_allOf_media_asset::fromJsonObject(QJsonObject json) {

    m_picture_1_isValid = ::OpenAPI::fromJsonValue(m_picture_1, json[QString("picture_1")]);
    m_picture_1_isSet = !json[QString("picture_1")].isNull() && m_picture_1_isValid;

    m_picture_2_isValid = ::OpenAPI::fromJsonValue(m_picture_2, json[QString("picture_2")]);
    m_picture_2_isSet = !json[QString("picture_2")].isNull() && m_picture_2_isValid;

    m_picture_3_isValid = ::OpenAPI::fromJsonValue(m_picture_3, json[QString("picture_3")]);
    m_picture_3_isSet = !json[QString("picture_3")].isNull() && m_picture_3_isValid;

    m_picture_4_isValid = ::OpenAPI::fromJsonValue(m_picture_4, json[QString("picture_4")]);
    m_picture_4_isSet = !json[QString("picture_4")].isNull() && m_picture_4_isValid;

    m_picture_5_isValid = ::OpenAPI::fromJsonValue(m_picture_5, json[QString("picture_5")]);
    m_picture_5_isSet = !json[QString("picture_5")].isNull() && m_picture_5_isValid;
}

QString OAIDetailed_product_information_result_inner_allOf_media_asset::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDetailed_product_information_result_inner_allOf_media_asset::asJsonObject() const {
    QJsonObject obj;
    if (m_picture_1_isSet) {
        obj.insert(QString("picture_1"), ::OpenAPI::toJsonValue(m_picture_1));
    }
    if (m_picture_2_isSet) {
        obj.insert(QString("picture_2"), ::OpenAPI::toJsonValue(m_picture_2));
    }
    if (m_picture_3_isSet) {
        obj.insert(QString("picture_3"), ::OpenAPI::toJsonValue(m_picture_3));
    }
    if (m_picture_4_isSet) {
        obj.insert(QString("picture_4"), ::OpenAPI::toJsonValue(m_picture_4));
    }
    if (m_picture_5_isSet) {
        obj.insert(QString("picture_5"), ::OpenAPI::toJsonValue(m_picture_5));
    }
    return obj;
}

QString OAIDetailed_product_information_result_inner_allOf_media_asset::getPicture1() const {
    return m_picture_1;
}
void OAIDetailed_product_information_result_inner_allOf_media_asset::setPicture1(const QString &picture_1) {
    m_picture_1 = picture_1;
    m_picture_1_isSet = true;
}

bool OAIDetailed_product_information_result_inner_allOf_media_asset::is_picture_1_Set() const{
    return m_picture_1_isSet;
}

bool OAIDetailed_product_information_result_inner_allOf_media_asset::is_picture_1_Valid() const{
    return m_picture_1_isValid;
}

QString OAIDetailed_product_information_result_inner_allOf_media_asset::getPicture2() const {
    return m_picture_2;
}
void OAIDetailed_product_information_result_inner_allOf_media_asset::setPicture2(const QString &picture_2) {
    m_picture_2 = picture_2;
    m_picture_2_isSet = true;
}

bool OAIDetailed_product_information_result_inner_allOf_media_asset::is_picture_2_Set() const{
    return m_picture_2_isSet;
}

bool OAIDetailed_product_information_result_inner_allOf_media_asset::is_picture_2_Valid() const{
    return m_picture_2_isValid;
}

QString OAIDetailed_product_information_result_inner_allOf_media_asset::getPicture3() const {
    return m_picture_3;
}
void OAIDetailed_product_information_result_inner_allOf_media_asset::setPicture3(const QString &picture_3) {
    m_picture_3 = picture_3;
    m_picture_3_isSet = true;
}

bool OAIDetailed_product_information_result_inner_allOf_media_asset::is_picture_3_Set() const{
    return m_picture_3_isSet;
}

bool OAIDetailed_product_information_result_inner_allOf_media_asset::is_picture_3_Valid() const{
    return m_picture_3_isValid;
}

QString OAIDetailed_product_information_result_inner_allOf_media_asset::getPicture4() const {
    return m_picture_4;
}
void OAIDetailed_product_information_result_inner_allOf_media_asset::setPicture4(const QString &picture_4) {
    m_picture_4 = picture_4;
    m_picture_4_isSet = true;
}

bool OAIDetailed_product_information_result_inner_allOf_media_asset::is_picture_4_Set() const{
    return m_picture_4_isSet;
}

bool OAIDetailed_product_information_result_inner_allOf_media_asset::is_picture_4_Valid() const{
    return m_picture_4_isValid;
}

QString OAIDetailed_product_information_result_inner_allOf_media_asset::getPicture5() const {
    return m_picture_5;
}
void OAIDetailed_product_information_result_inner_allOf_media_asset::setPicture5(const QString &picture_5) {
    m_picture_5 = picture_5;
    m_picture_5_isSet = true;
}

bool OAIDetailed_product_information_result_inner_allOf_media_asset::is_picture_5_Set() const{
    return m_picture_5_isSet;
}

bool OAIDetailed_product_information_result_inner_allOf_media_asset::is_picture_5_Valid() const{
    return m_picture_5_isValid;
}

bool OAIDetailed_product_information_result_inner_allOf_media_asset::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_picture_1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_picture_2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_picture_3_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_picture_4_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_picture_5_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDetailed_product_information_result_inner_allOf_media_asset::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
