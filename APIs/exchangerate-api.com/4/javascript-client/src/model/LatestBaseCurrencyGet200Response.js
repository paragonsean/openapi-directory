/**
 * ExchangeRate-API
 * Fetch the latest currency exchange rates via API. ExchangeRate-API is free and unlimited.
 *
 * The version of the OpenAPI document: 4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LatestBaseCurrencyGet200Response model module.
 * @module model/LatestBaseCurrencyGet200Response
 * @version 4
 */
class LatestBaseCurrencyGet200Response {
    /**
     * Constructs a new <code>LatestBaseCurrencyGet200Response</code>.
     * @alias module:model/LatestBaseCurrencyGet200Response
     */
    constructor() { 
        
        LatestBaseCurrencyGet200Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LatestBaseCurrencyGet200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LatestBaseCurrencyGet200Response} obj Optional instance to populate.
     * @return {module:model/LatestBaseCurrencyGet200Response} The populated <code>LatestBaseCurrencyGet200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LatestBaseCurrencyGet200Response();

            if (data.hasOwnProperty('base')) {
                obj['base'] = ApiClient.convertToType(data['base'], 'String');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'String');
            }
            if (data.hasOwnProperty('rates')) {
                obj['rates'] = ApiClient.convertToType(data['rates'], {'String': 'Number'});
            }
            if (data.hasOwnProperty('time_last_updated')) {
                obj['time_last_updated'] = ApiClient.convertToType(data['time_last_updated'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LatestBaseCurrencyGet200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LatestBaseCurrencyGet200Response</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['base'] && !(typeof data['base'] === 'string' || data['base'] instanceof String)) {
            throw new Error("Expected the field `base` to be a primitive type in the JSON string but got " + data['base']);
        }
        // ensure the json data is a string
        if (data['date'] && !(typeof data['date'] === 'string' || data['date'] instanceof String)) {
            throw new Error("Expected the field `date` to be a primitive type in the JSON string but got " + data['date']);
        }

        return true;
    }


}



/**
 * The currency code you supplied as base in your request
 * @member {String} base
 */
LatestBaseCurrencyGet200Response.prototype['base'] = undefined;

/**
 * The date these exchange rates are for
 * @member {String} date
 */
LatestBaseCurrencyGet200Response.prototype['date'] = undefined;

/**
 * Each supported currency code in terms of the base currency
 * @member {Object.<String, Number>} rates
 */
LatestBaseCurrencyGet200Response.prototype['rates'] = undefined;

/**
 * The epoch time this set of exchange rates was generated
 * @member {Number} time_last_updated
 */
LatestBaseCurrencyGet200Response.prototype['time_last_updated'] = undefined;






export default LatestBaseCurrencyGet200Response;

