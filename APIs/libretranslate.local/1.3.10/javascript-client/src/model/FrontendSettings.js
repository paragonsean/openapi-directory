/**
 * LibreTranslate
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.3.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FrontendSettingsLanguage from './FrontendSettingsLanguage';

/**
 * The FrontendSettings model module.
 * @module model/FrontendSettings
 * @version 1.3.10
 */
class FrontendSettings {
    /**
     * Constructs a new <code>FrontendSettings</code>.
     * @alias module:model/FrontendSettings
     */
    constructor() { 
        
        FrontendSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FrontendSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FrontendSettings} obj Optional instance to populate.
     * @return {module:model/FrontendSettings} The populated <code>FrontendSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FrontendSettings();

            if (data.hasOwnProperty('apiKeys')) {
                obj['apiKeys'] = ApiClient.convertToType(data['apiKeys'], 'Boolean');
            }
            if (data.hasOwnProperty('charLimit')) {
                obj['charLimit'] = ApiClient.convertToType(data['charLimit'], 'Number');
            }
            if (data.hasOwnProperty('frontendTimeout')) {
                obj['frontendTimeout'] = ApiClient.convertToType(data['frontendTimeout'], 'Number');
            }
            if (data.hasOwnProperty('keyRequired')) {
                obj['keyRequired'] = ApiClient.convertToType(data['keyRequired'], 'Boolean');
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = FrontendSettingsLanguage.constructFromObject(data['language']);
            }
            if (data.hasOwnProperty('suggestions')) {
                obj['suggestions'] = ApiClient.convertToType(data['suggestions'], 'Boolean');
            }
            if (data.hasOwnProperty('supportedFilesFormat')) {
                obj['supportedFilesFormat'] = ApiClient.convertToType(data['supportedFilesFormat'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FrontendSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FrontendSettings</code>.
     */
    static validateJSON(data) {
        // validate the optional field `language`
        if (data['language']) { // data not null
          FrontendSettingsLanguage.validateJSON(data['language']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['supportedFilesFormat'])) {
            throw new Error("Expected the field `supportedFilesFormat` to be an array in the JSON data but got " + data['supportedFilesFormat']);
        }

        return true;
    }


}



/**
 * Whether the API key database is enabled.
 * @member {Boolean} apiKeys
 */
FrontendSettings.prototype['apiKeys'] = undefined;

/**
 * Character input limit for this language (-1 indicates no limit)
 * @member {Number} charLimit
 */
FrontendSettings.prototype['charLimit'] = undefined;

/**
 * Frontend translation timeout
 * @member {Number} frontendTimeout
 */
FrontendSettings.prototype['frontendTimeout'] = undefined;

/**
 * Whether an API key is required.
 * @member {Boolean} keyRequired
 */
FrontendSettings.prototype['keyRequired'] = undefined;

/**
 * @member {module:model/FrontendSettingsLanguage} language
 */
FrontendSettings.prototype['language'] = undefined;

/**
 * Whether submitting suggestions is enabled.
 * @member {Boolean} suggestions
 */
FrontendSettings.prototype['suggestions'] = undefined;

/**
 * Supported files format
 * @member {Array.<String>} supportedFilesFormat
 */
FrontendSettings.prototype['supportedFilesFormat'] = undefined;






export default FrontendSettings;

