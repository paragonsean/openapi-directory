# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.frontend_settings_language_source import FrontendSettingsLanguageSource
from openapi_server import util


class FrontendSettingsLanguage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source: FrontendSettingsLanguageSource=None, target: FrontendSettingsLanguageSource=None):
        """FrontendSettingsLanguage - a model defined in OpenAPI

        :param source: The source of this FrontendSettingsLanguage.
        :param target: The target of this FrontendSettingsLanguage.
        """
        self.openapi_types = {
            'source': FrontendSettingsLanguageSource,
            'target': FrontendSettingsLanguageSource
        }

        self.attribute_map = {
            'source': 'source',
            'target': 'target'
        }

        self._source = source
        self._target = target

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FrontendSettingsLanguage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The frontend_settings_language of this FrontendSettingsLanguage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source(self):
        """Gets the source of this FrontendSettingsLanguage.


        :return: The source of this FrontendSettingsLanguage.
        :rtype: FrontendSettingsLanguageSource
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this FrontendSettingsLanguage.


        :param source: The source of this FrontendSettingsLanguage.
        :type source: FrontendSettingsLanguageSource
        """

        self._source = source

    @property
    def target(self):
        """Gets the target of this FrontendSettingsLanguage.


        :return: The target of this FrontendSettingsLanguage.
        :rtype: FrontendSettingsLanguageSource
        """
        return self._target

    @target.setter
    def target(self, target):
        """Sets the target of this FrontendSettingsLanguage.


        :param target: The target of this FrontendSettingsLanguage.
        :type target: FrontendSettingsLanguageSource
        """

        self._target = target
