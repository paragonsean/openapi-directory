/**
 * LibreTranslate
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.3.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFrontend_settings_language.h
 *
 * 
 */

#ifndef OAIFrontend_settings_language_H
#define OAIFrontend_settings_language_H

#include <QJsonObject>

#include "OAIFrontend_settings_language_source.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFrontend_settings_language_source;

class OAIFrontend_settings_language : public OAIObject {
public:
    OAIFrontend_settings_language();
    OAIFrontend_settings_language(QString json);
    ~OAIFrontend_settings_language() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIFrontend_settings_language_source getSource() const;
    void setSource(const OAIFrontend_settings_language_source &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    OAIFrontend_settings_language_source getTarget() const;
    void setTarget(const OAIFrontend_settings_language_source &target);
    bool is_target_Set() const;
    bool is_target_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIFrontend_settings_language_source m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    OAIFrontend_settings_language_source m_target;
    bool m_target_isSet;
    bool m_target_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFrontend_settings_language)

#endif // OAIFrontend_settings_language_H
