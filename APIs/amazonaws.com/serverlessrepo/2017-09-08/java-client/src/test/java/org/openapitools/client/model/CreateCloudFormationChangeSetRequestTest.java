/*
 * AWSServerlessApplicationRepository
 * <p>The AWS Serverless Application Repository makes it easy for developers and enterprises to quickly find  and deploy serverless applications in the AWS Cloud. For more information about serverless applications,  see Serverless Computing and Applications on the AWS website.</p><p>The AWS Serverless Application Repository is deeply integrated with the AWS Lambda console, so that developers of   all levels can get started with serverless computing without needing to learn anything new. You can use category   keywords to browse for applications such as web and mobile backends, data processing applications, or chatbots.   You can also search for applications by name, publisher, or event source. To use an application, you simply choose it,   configure any required fields, and deploy it with a few clicks. </p><p>You can also easily publish applications, sharing them publicly with the community at large, or privately  within your team or across your organization. To publish a serverless application (or app), you can use the  AWS Management Console, AWS Command Line Interface (AWS CLI), or AWS SDKs to upload the code. Along with the  code, you upload a simple manifest file, also known as the AWS Serverless Application Model (AWS SAM) template.  For more information about AWS SAM, see AWS Serverless Application Model (AWS SAM) on the AWS Labs  GitHub repository.</p><p>The AWS Serverless Application Repository Developer Guide contains more information about the two developer  experiences available:</p><ul>  <li>  <p>Consuming Applications – Browse for applications and view information about them, including  source code and readme files. Also install, configure, and deploy applications of your choosing. </p>  <p>Publishing Applications – Configure and upload applications to make them available to other  developers, and publish new versions of applications. </p>  </li>  </ul>
 *
 * The version of the OpenAPI document: 2017-09-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateCloudFormationChangeSetRequestRollbackConfiguration;
import org.openapitools.client.model.ParameterValue;
import org.openapitools.client.model.Tag;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CreateCloudFormationChangeSetRequest
 */
public class CreateCloudFormationChangeSetRequestTest {
    private final CreateCloudFormationChangeSetRequest model = new CreateCloudFormationChangeSetRequest();

    /**
     * Model tests for CreateCloudFormationChangeSetRequest
     */
    @Test
    public void testCreateCloudFormationChangeSetRequest() {
        // TODO: test CreateCloudFormationChangeSetRequest
    }

    /**
     * Test the property 'capabilities'
     */
    @Test
    public void capabilitiesTest() {
        // TODO: test capabilities
    }

    /**
     * Test the property 'changeSetName'
     */
    @Test
    public void changeSetNameTest() {
        // TODO: test changeSetName
    }

    /**
     * Test the property 'clientToken'
     */
    @Test
    public void clientTokenTest() {
        // TODO: test clientToken
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'notificationArns'
     */
    @Test
    public void notificationArnsTest() {
        // TODO: test notificationArns
    }

    /**
     * Test the property 'parameterOverrides'
     */
    @Test
    public void parameterOverridesTest() {
        // TODO: test parameterOverrides
    }

    /**
     * Test the property 'resourceTypes'
     */
    @Test
    public void resourceTypesTest() {
        // TODO: test resourceTypes
    }

    /**
     * Test the property 'rollbackConfiguration'
     */
    @Test
    public void rollbackConfigurationTest() {
        // TODO: test rollbackConfiguration
    }

    /**
     * Test the property 'semanticVersion'
     */
    @Test
    public void semanticVersionTest() {
        // TODO: test semanticVersion
    }

    /**
     * Test the property 'stackName'
     */
    @Test
    public void stackNameTest() {
        // TODO: test stackName
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'templateId'
     */
    @Test
    public void templateIdTest() {
        // TODO: test templateId
    }

}
