/*
 * AWSServerlessApplicationRepository
 * <p>The AWS Serverless Application Repository makes it easy for developers and enterprises to quickly find  and deploy serverless applications in the AWS Cloud. For more information about serverless applications,  see Serverless Computing and Applications on the AWS website.</p><p>The AWS Serverless Application Repository is deeply integrated with the AWS Lambda console, so that developers of   all levels can get started with serverless computing without needing to learn anything new. You can use category   keywords to browse for applications such as web and mobile backends, data processing applications, or chatbots.   You can also search for applications by name, publisher, or event source. To use an application, you simply choose it,   configure any required fields, and deploy it with a few clicks. </p><p>You can also easily publish applications, sharing them publicly with the community at large, or privately  within your team or across your organization. To publish a serverless application (or app), you can use the  AWS Management Console, AWS Command Line Interface (AWS CLI), or AWS SDKs to upload the code. Along with the  code, you upload a simple manifest file, also known as the AWS Serverless Application Model (AWS SAM) template.  For more information about AWS SAM, see AWS Serverless Application Model (AWS SAM) on the AWS Labs  GitHub repository.</p><p>The AWS Serverless Application Repository Developer Guide contains more information about the two developer  experiences available:</p><ul>  <li>  <p>Consuming Applications – Browse for applications and view information about them, including  source code and readme files. Also install, configure, and deploy applications of your choosing. </p>  <p>Publishing Applications – Configure and upload applications to make them available to other  developers, and publish new versions of applications. </p>  </li>  </ul>
 *
 * The version of the OpenAPI document: 2017-09-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateApplicationResponseVersion;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateApplicationResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:07:44.517434-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateApplicationResponse {
  public static final String SERIALIZED_NAME_APPLICATION_ID = "ApplicationId";
  @SerializedName(SERIALIZED_NAME_APPLICATION_ID)
  private String applicationId;

  public static final String SERIALIZED_NAME_AUTHOR = "Author";
  @SerializedName(SERIALIZED_NAME_AUTHOR)
  private String author;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private String creationTime;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_HOME_PAGE_URL = "HomePageUrl";
  @SerializedName(SERIALIZED_NAME_HOME_PAGE_URL)
  private String homePageUrl;

  public static final String SERIALIZED_NAME_IS_VERIFIED_AUTHOR = "IsVerifiedAuthor";
  @SerializedName(SERIALIZED_NAME_IS_VERIFIED_AUTHOR)
  private Boolean isVerifiedAuthor;

  public static final String SERIALIZED_NAME_LABELS = "Labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private List labels;

  public static final String SERIALIZED_NAME_LICENSE_URL = "LicenseUrl";
  @SerializedName(SERIALIZED_NAME_LICENSE_URL)
  private String licenseUrl;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_README_URL = "ReadmeUrl";
  @SerializedName(SERIALIZED_NAME_README_URL)
  private String readmeUrl;

  public static final String SERIALIZED_NAME_SPDX_LICENSE_ID = "SpdxLicenseId";
  @SerializedName(SERIALIZED_NAME_SPDX_LICENSE_ID)
  private String spdxLicenseId;

  public static final String SERIALIZED_NAME_VERIFIED_AUTHOR_URL = "VerifiedAuthorUrl";
  @SerializedName(SERIALIZED_NAME_VERIFIED_AUTHOR_URL)
  private String verifiedAuthorUrl;

  public static final String SERIALIZED_NAME_VERSION = "Version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private CreateApplicationResponseVersion version;

  public CreateApplicationResponse() {
  }

  public CreateApplicationResponse applicationId(String applicationId) {
    this.applicationId = applicationId;
    return this;
  }

  /**
   * Get applicationId
   * @return applicationId
   */
  @javax.annotation.Nullable
  public String getApplicationId() {
    return applicationId;
  }

  public void setApplicationId(String applicationId) {
    this.applicationId = applicationId;
  }


  public CreateApplicationResponse author(String author) {
    this.author = author;
    return this;
  }

  /**
   * Get author
   * @return author
   */
  @javax.annotation.Nullable
  public String getAuthor() {
    return author;
  }

  public void setAuthor(String author) {
    this.author = author;
  }


  public CreateApplicationResponse creationTime(String creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public String getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(String creationTime) {
    this.creationTime = creationTime;
  }


  public CreateApplicationResponse description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public CreateApplicationResponse homePageUrl(String homePageUrl) {
    this.homePageUrl = homePageUrl;
    return this;
  }

  /**
   * Get homePageUrl
   * @return homePageUrl
   */
  @javax.annotation.Nullable
  public String getHomePageUrl() {
    return homePageUrl;
  }

  public void setHomePageUrl(String homePageUrl) {
    this.homePageUrl = homePageUrl;
  }


  public CreateApplicationResponse isVerifiedAuthor(Boolean isVerifiedAuthor) {
    this.isVerifiedAuthor = isVerifiedAuthor;
    return this;
  }

  /**
   * Get isVerifiedAuthor
   * @return isVerifiedAuthor
   */
  @javax.annotation.Nullable
  public Boolean getIsVerifiedAuthor() {
    return isVerifiedAuthor;
  }

  public void setIsVerifiedAuthor(Boolean isVerifiedAuthor) {
    this.isVerifiedAuthor = isVerifiedAuthor;
  }


  public CreateApplicationResponse labels(List labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Get labels
   * @return labels
   */
  @javax.annotation.Nullable
  public List getLabels() {
    return labels;
  }

  public void setLabels(List labels) {
    this.labels = labels;
  }


  public CreateApplicationResponse licenseUrl(String licenseUrl) {
    this.licenseUrl = licenseUrl;
    return this;
  }

  /**
   * Get licenseUrl
   * @return licenseUrl
   */
  @javax.annotation.Nullable
  public String getLicenseUrl() {
    return licenseUrl;
  }

  public void setLicenseUrl(String licenseUrl) {
    this.licenseUrl = licenseUrl;
  }


  public CreateApplicationResponse name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CreateApplicationResponse readmeUrl(String readmeUrl) {
    this.readmeUrl = readmeUrl;
    return this;
  }

  /**
   * Get readmeUrl
   * @return readmeUrl
   */
  @javax.annotation.Nullable
  public String getReadmeUrl() {
    return readmeUrl;
  }

  public void setReadmeUrl(String readmeUrl) {
    this.readmeUrl = readmeUrl;
  }


  public CreateApplicationResponse spdxLicenseId(String spdxLicenseId) {
    this.spdxLicenseId = spdxLicenseId;
    return this;
  }

  /**
   * Get spdxLicenseId
   * @return spdxLicenseId
   */
  @javax.annotation.Nullable
  public String getSpdxLicenseId() {
    return spdxLicenseId;
  }

  public void setSpdxLicenseId(String spdxLicenseId) {
    this.spdxLicenseId = spdxLicenseId;
  }


  public CreateApplicationResponse verifiedAuthorUrl(String verifiedAuthorUrl) {
    this.verifiedAuthorUrl = verifiedAuthorUrl;
    return this;
  }

  /**
   * Get verifiedAuthorUrl
   * @return verifiedAuthorUrl
   */
  @javax.annotation.Nullable
  public String getVerifiedAuthorUrl() {
    return verifiedAuthorUrl;
  }

  public void setVerifiedAuthorUrl(String verifiedAuthorUrl) {
    this.verifiedAuthorUrl = verifiedAuthorUrl;
  }


  public CreateApplicationResponse version(CreateApplicationResponseVersion version) {
    this.version = version;
    return this;
  }

  /**
   * Get version
   * @return version
   */
  @javax.annotation.Nullable
  public CreateApplicationResponseVersion getVersion() {
    return version;
  }

  public void setVersion(CreateApplicationResponseVersion version) {
    this.version = version;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateApplicationResponse createApplicationResponse = (CreateApplicationResponse) o;
    return Objects.equals(this.applicationId, createApplicationResponse.applicationId) &&
        Objects.equals(this.author, createApplicationResponse.author) &&
        Objects.equals(this.creationTime, createApplicationResponse.creationTime) &&
        Objects.equals(this.description, createApplicationResponse.description) &&
        Objects.equals(this.homePageUrl, createApplicationResponse.homePageUrl) &&
        Objects.equals(this.isVerifiedAuthor, createApplicationResponse.isVerifiedAuthor) &&
        Objects.equals(this.labels, createApplicationResponse.labels) &&
        Objects.equals(this.licenseUrl, createApplicationResponse.licenseUrl) &&
        Objects.equals(this.name, createApplicationResponse.name) &&
        Objects.equals(this.readmeUrl, createApplicationResponse.readmeUrl) &&
        Objects.equals(this.spdxLicenseId, createApplicationResponse.spdxLicenseId) &&
        Objects.equals(this.verifiedAuthorUrl, createApplicationResponse.verifiedAuthorUrl) &&
        Objects.equals(this.version, createApplicationResponse.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicationId, author, creationTime, description, homePageUrl, isVerifiedAuthor, labels, licenseUrl, name, readmeUrl, spdxLicenseId, verifiedAuthorUrl, version);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateApplicationResponse {\n");
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    homePageUrl: ").append(toIndentedString(homePageUrl)).append("\n");
    sb.append("    isVerifiedAuthor: ").append(toIndentedString(isVerifiedAuthor)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    licenseUrl: ").append(toIndentedString(licenseUrl)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    readmeUrl: ").append(toIndentedString(readmeUrl)).append("\n");
    sb.append("    spdxLicenseId: ").append(toIndentedString(spdxLicenseId)).append("\n");
    sb.append("    verifiedAuthorUrl: ").append(toIndentedString(verifiedAuthorUrl)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ApplicationId");
    openapiFields.add("Author");
    openapiFields.add("CreationTime");
    openapiFields.add("Description");
    openapiFields.add("HomePageUrl");
    openapiFields.add("IsVerifiedAuthor");
    openapiFields.add("Labels");
    openapiFields.add("LicenseUrl");
    openapiFields.add("Name");
    openapiFields.add("ReadmeUrl");
    openapiFields.add("SpdxLicenseId");
    openapiFields.add("VerifiedAuthorUrl");
    openapiFields.add("Version");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateApplicationResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateApplicationResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateApplicationResponse is not found in the empty JSON string", CreateApplicationResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateApplicationResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateApplicationResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ApplicationId`
      if (jsonObj.get("ApplicationId") != null && !jsonObj.get("ApplicationId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ApplicationId"));
      }
      // validate the optional field `Author`
      if (jsonObj.get("Author") != null && !jsonObj.get("Author").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Author"));
      }
      // validate the optional field `CreationTime`
      if (jsonObj.get("CreationTime") != null && !jsonObj.get("CreationTime").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CreationTime"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the optional field `HomePageUrl`
      if (jsonObj.get("HomePageUrl") != null && !jsonObj.get("HomePageUrl").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("HomePageUrl"));
      }
      // validate the optional field `IsVerifiedAuthor`
      if (jsonObj.get("IsVerifiedAuthor") != null && !jsonObj.get("IsVerifiedAuthor").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("IsVerifiedAuthor"));
      }
      // validate the optional field `Labels`
      if (jsonObj.get("Labels") != null && !jsonObj.get("Labels").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Labels"));
      }
      // validate the optional field `LicenseUrl`
      if (jsonObj.get("LicenseUrl") != null && !jsonObj.get("LicenseUrl").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LicenseUrl"));
      }
      // validate the optional field `Name`
      if (jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Name"));
      }
      // validate the optional field `ReadmeUrl`
      if (jsonObj.get("ReadmeUrl") != null && !jsonObj.get("ReadmeUrl").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ReadmeUrl"));
      }
      // validate the optional field `SpdxLicenseId`
      if (jsonObj.get("SpdxLicenseId") != null && !jsonObj.get("SpdxLicenseId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SpdxLicenseId"));
      }
      // validate the optional field `VerifiedAuthorUrl`
      if (jsonObj.get("VerifiedAuthorUrl") != null && !jsonObj.get("VerifiedAuthorUrl").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("VerifiedAuthorUrl"));
      }
      // validate the optional field `Version`
      if (jsonObj.get("Version") != null && !jsonObj.get("Version").isJsonNull()) {
        CreateApplicationResponseVersion.validateJsonElement(jsonObj.get("Version"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateApplicationResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateApplicationResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateApplicationResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateApplicationResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateApplicationResponse>() {
           @Override
           public void write(JsonWriter out, CreateApplicationResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateApplicationResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateApplicationResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateApplicationResponse
   * @throws IOException if the JSON string is invalid with respect to CreateApplicationResponse
   */
  public static CreateApplicationResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateApplicationResponse.class);
  }

  /**
   * Convert an instance of CreateApplicationResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

