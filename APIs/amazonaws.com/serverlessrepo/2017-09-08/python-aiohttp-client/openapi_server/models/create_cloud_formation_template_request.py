# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateCloudFormationTemplateRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, semantic_version: str=None):
        """CreateCloudFormationTemplateRequest - a model defined in OpenAPI

        :param semantic_version: The semantic_version of this CreateCloudFormationTemplateRequest.
        """
        self.openapi_types = {
            'semantic_version': str
        }

        self.attribute_map = {
            'semantic_version': 'semanticVersion'
        }

        self._semantic_version = semantic_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateCloudFormationTemplateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateCloudFormationTemplate_request of this CreateCloudFormationTemplateRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def semantic_version(self):
        """Gets the semantic_version of this CreateCloudFormationTemplateRequest.

        <p>The semantic version of the application:</p><p>  <a href=\"https://semver.org/\">https://semver.org/</a>  </p>

        :return: The semantic_version of this CreateCloudFormationTemplateRequest.
        :rtype: str
        """
        return self._semantic_version

    @semantic_version.setter
    def semantic_version(self, semantic_version):
        """Sets the semantic_version of this CreateCloudFormationTemplateRequest.

        <p>The semantic version of the application:</p><p>  <a href=\"https://semver.org/\">https://semver.org/</a>  </p>

        :param semantic_version: The semantic_version of this CreateCloudFormationTemplateRequest.
        :type semantic_version: str
        """

        self._semantic_version = semantic_version
