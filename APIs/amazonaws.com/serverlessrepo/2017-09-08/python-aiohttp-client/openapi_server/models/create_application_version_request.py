# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateApplicationVersionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source_code_archive_url: str=None, source_code_url: str=None, template_body: str=None, template_url: str=None):
        """CreateApplicationVersionRequest - a model defined in OpenAPI

        :param source_code_archive_url: The source_code_archive_url of this CreateApplicationVersionRequest.
        :param source_code_url: The source_code_url of this CreateApplicationVersionRequest.
        :param template_body: The template_body of this CreateApplicationVersionRequest.
        :param template_url: The template_url of this CreateApplicationVersionRequest.
        """
        self.openapi_types = {
            'source_code_archive_url': str,
            'source_code_url': str,
            'template_body': str,
            'template_url': str
        }

        self.attribute_map = {
            'source_code_archive_url': 'sourceCodeArchiveUrl',
            'source_code_url': 'sourceCodeUrl',
            'template_body': 'templateBody',
            'template_url': 'templateUrl'
        }

        self._source_code_archive_url = source_code_archive_url
        self._source_code_url = source_code_url
        self._template_body = template_body
        self._template_url = template_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateApplicationVersionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateApplicationVersion_request of this CreateApplicationVersionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_code_archive_url(self):
        """Gets the source_code_archive_url of this CreateApplicationVersionRequest.

        <p>A link to the S3 object that contains the ZIP archive of the source code for this version of your application.</p><p>Maximum size 50 MB</p>

        :return: The source_code_archive_url of this CreateApplicationVersionRequest.
        :rtype: str
        """
        return self._source_code_archive_url

    @source_code_archive_url.setter
    def source_code_archive_url(self, source_code_archive_url):
        """Sets the source_code_archive_url of this CreateApplicationVersionRequest.

        <p>A link to the S3 object that contains the ZIP archive of the source code for this version of your application.</p><p>Maximum size 50 MB</p>

        :param source_code_archive_url: The source_code_archive_url of this CreateApplicationVersionRequest.
        :type source_code_archive_url: str
        """

        self._source_code_archive_url = source_code_archive_url

    @property
    def source_code_url(self):
        """Gets the source_code_url of this CreateApplicationVersionRequest.

        A link to a public repository for the source code of your application, for example the URL of a specific GitHub commit.

        :return: The source_code_url of this CreateApplicationVersionRequest.
        :rtype: str
        """
        return self._source_code_url

    @source_code_url.setter
    def source_code_url(self, source_code_url):
        """Sets the source_code_url of this CreateApplicationVersionRequest.

        A link to a public repository for the source code of your application, for example the URL of a specific GitHub commit.

        :param source_code_url: The source_code_url of this CreateApplicationVersionRequest.
        :type source_code_url: str
        """

        self._source_code_url = source_code_url

    @property
    def template_body(self):
        """Gets the template_body of this CreateApplicationVersionRequest.

        The raw packaged AWS SAM template of your application.

        :return: The template_body of this CreateApplicationVersionRequest.
        :rtype: str
        """
        return self._template_body

    @template_body.setter
    def template_body(self, template_body):
        """Sets the template_body of this CreateApplicationVersionRequest.

        The raw packaged AWS SAM template of your application.

        :param template_body: The template_body of this CreateApplicationVersionRequest.
        :type template_body: str
        """

        self._template_body = template_body

    @property
    def template_url(self):
        """Gets the template_url of this CreateApplicationVersionRequest.

        A link to the packaged AWS SAM template of your application.

        :return: The template_url of this CreateApplicationVersionRequest.
        :rtype: str
        """
        return self._template_url

    @template_url.setter
    def template_url(self, template_url):
        """Sets the template_url of this CreateApplicationVersionRequest.

        A link to the packaged AWS SAM template of your application.

        :param template_url: The template_url of this CreateApplicationVersionRequest.
        :type template_url: str
        """

        self._template_url = template_url
