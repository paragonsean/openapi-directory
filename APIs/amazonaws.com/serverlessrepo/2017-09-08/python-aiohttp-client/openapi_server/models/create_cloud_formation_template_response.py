# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.status import Status
from openapi_server import util


class CreateCloudFormationTemplateResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_id: str=None, creation_time: str=None, expiration_time: str=None, semantic_version: str=None, status: Status=None, template_id: str=None, template_url: str=None):
        """CreateCloudFormationTemplateResponse - a model defined in OpenAPI

        :param application_id: The application_id of this CreateCloudFormationTemplateResponse.
        :param creation_time: The creation_time of this CreateCloudFormationTemplateResponse.
        :param expiration_time: The expiration_time of this CreateCloudFormationTemplateResponse.
        :param semantic_version: The semantic_version of this CreateCloudFormationTemplateResponse.
        :param status: The status of this CreateCloudFormationTemplateResponse.
        :param template_id: The template_id of this CreateCloudFormationTemplateResponse.
        :param template_url: The template_url of this CreateCloudFormationTemplateResponse.
        """
        self.openapi_types = {
            'application_id': str,
            'creation_time': str,
            'expiration_time': str,
            'semantic_version': str,
            'status': Status,
            'template_id': str,
            'template_url': str
        }

        self.attribute_map = {
            'application_id': 'ApplicationId',
            'creation_time': 'CreationTime',
            'expiration_time': 'ExpirationTime',
            'semantic_version': 'SemanticVersion',
            'status': 'Status',
            'template_id': 'TemplateId',
            'template_url': 'TemplateUrl'
        }

        self._application_id = application_id
        self._creation_time = creation_time
        self._expiration_time = expiration_time
        self._semantic_version = semantic_version
        self._status = status
        self._template_id = template_id
        self._template_url = template_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateCloudFormationTemplateResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateCloudFormationTemplateResponse of this CreateCloudFormationTemplateResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_id(self):
        """Gets the application_id of this CreateCloudFormationTemplateResponse.


        :return: The application_id of this CreateCloudFormationTemplateResponse.
        :rtype: str
        """
        return self._application_id

    @application_id.setter
    def application_id(self, application_id):
        """Sets the application_id of this CreateCloudFormationTemplateResponse.


        :param application_id: The application_id of this CreateCloudFormationTemplateResponse.
        :type application_id: str
        """

        self._application_id = application_id

    @property
    def creation_time(self):
        """Gets the creation_time of this CreateCloudFormationTemplateResponse.


        :return: The creation_time of this CreateCloudFormationTemplateResponse.
        :rtype: str
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this CreateCloudFormationTemplateResponse.


        :param creation_time: The creation_time of this CreateCloudFormationTemplateResponse.
        :type creation_time: str
        """

        self._creation_time = creation_time

    @property
    def expiration_time(self):
        """Gets the expiration_time of this CreateCloudFormationTemplateResponse.


        :return: The expiration_time of this CreateCloudFormationTemplateResponse.
        :rtype: str
        """
        return self._expiration_time

    @expiration_time.setter
    def expiration_time(self, expiration_time):
        """Sets the expiration_time of this CreateCloudFormationTemplateResponse.


        :param expiration_time: The expiration_time of this CreateCloudFormationTemplateResponse.
        :type expiration_time: str
        """

        self._expiration_time = expiration_time

    @property
    def semantic_version(self):
        """Gets the semantic_version of this CreateCloudFormationTemplateResponse.


        :return: The semantic_version of this CreateCloudFormationTemplateResponse.
        :rtype: str
        """
        return self._semantic_version

    @semantic_version.setter
    def semantic_version(self, semantic_version):
        """Sets the semantic_version of this CreateCloudFormationTemplateResponse.


        :param semantic_version: The semantic_version of this CreateCloudFormationTemplateResponse.
        :type semantic_version: str
        """

        self._semantic_version = semantic_version

    @property
    def status(self):
        """Gets the status of this CreateCloudFormationTemplateResponse.


        :return: The status of this CreateCloudFormationTemplateResponse.
        :rtype: Status
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this CreateCloudFormationTemplateResponse.


        :param status: The status of this CreateCloudFormationTemplateResponse.
        :type status: Status
        """

        self._status = status

    @property
    def template_id(self):
        """Gets the template_id of this CreateCloudFormationTemplateResponse.


        :return: The template_id of this CreateCloudFormationTemplateResponse.
        :rtype: str
        """
        return self._template_id

    @template_id.setter
    def template_id(self, template_id):
        """Sets the template_id of this CreateCloudFormationTemplateResponse.


        :param template_id: The template_id of this CreateCloudFormationTemplateResponse.
        :type template_id: str
        """

        self._template_id = template_id

    @property
    def template_url(self):
        """Gets the template_url of this CreateCloudFormationTemplateResponse.


        :return: The template_url of this CreateCloudFormationTemplateResponse.
        :rtype: str
        """
        return self._template_url

    @template_url.setter
    def template_url(self, template_url):
        """Sets the template_url of this CreateCloudFormationTemplateResponse.


        :param template_url: The template_url of this CreateCloudFormationTemplateResponse.
        :type template_url: str
        """

        self._template_url = template_url
