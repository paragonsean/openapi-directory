/**
 * AWSServerlessApplicationRepository
 * <p>The AWS Serverless Application Repository makes it easy for developers and enterprises to quickly find  and deploy serverless applications in the AWS Cloud. For more information about serverless applications,  see Serverless Computing and Applications on the AWS website.</p><p>The AWS Serverless Application Repository is deeply integrated with the AWS Lambda console, so that developers of   all levels can get started with serverless computing without needing to learn anything new. You can use category   keywords to browse for applications such as web and mobile backends, data processing applications, or chatbots.   You can also search for applications by name, publisher, or event source. To use an application, you simply choose it,   configure any required fields, and deploy it with a few clicks. </p><p>You can also easily publish applications, sharing them publicly with the community at large, or privately  within your team or across your organization. To publish a serverless application (or app), you can use the  AWS Management Console, AWS Command Line Interface (AWS CLI), or AWS SDKs to upload the code. Along with the  code, you upload a simple manifest file, also known as the AWS Serverless Application Model (AWS SAM) template.  For more information about AWS SAM, see AWS Serverless Application Model (AWS SAM) on the AWS Labs  GitHub repository.</p><p>The AWS Serverless Application Repository Developer Guide contains more information about the two developer  experiences available:</p><ul>  <li>  <p>Consuming Applications – Browse for applications and view information about them, including  source code and readme files. Also install, configure, and deploy applications of your choosing. </p>  <p>Publishing Applications – Configure and upload applications to make them available to other  developers, and publish new versions of applications. </p>  </li>  </ul>
 *
 * The version of the OpenAPI document: 2017-09-08
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIParameterDefinition.h
 *
 * Parameters supported by the application.
 */

#ifndef OAIParameterDefinition_H
#define OAIParameterDefinition_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIParameterDefinition : public OAIObject {
public:
    OAIParameterDefinition();
    OAIParameterDefinition(QString json);
    ~OAIParameterDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAllowedPattern() const;
    void setAllowedPattern(const QString &allowed_pattern);
    bool is_allowed_pattern_Set() const;
    bool is_allowed_pattern_Valid() const;

    QList getAllowedValues() const;
    void setAllowedValues(const QList &allowed_values);
    bool is_allowed_values_Set() const;
    bool is_allowed_values_Valid() const;

    QString getConstraintDescription() const;
    void setConstraintDescription(const QString &constraint_description);
    bool is_constraint_description_Set() const;
    bool is_constraint_description_Valid() const;

    QString getDefaultValue() const;
    void setDefaultValue(const QString &default_value);
    bool is_default_value_Set() const;
    bool is_default_value_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getMaxLength() const;
    void setMaxLength(const qint32 &max_length);
    bool is_max_length_Set() const;
    bool is_max_length_Valid() const;

    qint32 getMaxValue() const;
    void setMaxValue(const qint32 &max_value);
    bool is_max_value_Set() const;
    bool is_max_value_Valid() const;

    qint32 getMinLength() const;
    void setMinLength(const qint32 &min_length);
    bool is_min_length_Set() const;
    bool is_min_length_Valid() const;

    qint32 getMinValue() const;
    void setMinValue(const qint32 &min_value);
    bool is_min_value_Set() const;
    bool is_min_value_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool getNoEcho() const;
    void setNoEcho(const bool &no_echo);
    bool is_no_echo_Set() const;
    bool is_no_echo_Valid() const;

    QList getReferencedByResources() const;
    void setReferencedByResources(const QList &referenced_by_resources);
    bool is_referenced_by_resources_Set() const;
    bool is_referenced_by_resources_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_allowed_pattern;
    bool m_allowed_pattern_isSet;
    bool m_allowed_pattern_isValid;

    QList m_allowed_values;
    bool m_allowed_values_isSet;
    bool m_allowed_values_isValid;

    QString m_constraint_description;
    bool m_constraint_description_isSet;
    bool m_constraint_description_isValid;

    QString m_default_value;
    bool m_default_value_isSet;
    bool m_default_value_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_max_length;
    bool m_max_length_isSet;
    bool m_max_length_isValid;

    qint32 m_max_value;
    bool m_max_value_isSet;
    bool m_max_value_isValid;

    qint32 m_min_length;
    bool m_min_length_isSet;
    bool m_min_length_isValid;

    qint32 m_min_value;
    bool m_min_value_isSet;
    bool m_min_value_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_no_echo;
    bool m_no_echo_isSet;
    bool m_no_echo_isValid;

    QList m_referenced_by_resources;
    bool m_referenced_by_resources_isSet;
    bool m_referenced_by_resources_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIParameterDefinition)

#endif // OAIParameterDefinition_H
