/**
 * Amazon Simple Systems Manager (SSM)
 * <p>Amazon Web Services Systems Manager is the operations hub for your Amazon Web Services applications and resources and a secure end-to-end management solution for hybrid cloud environments that enables safe and secure operations at scale.</p> <p>This reference is intended to be used with the <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/\">Amazon Web Services Systems Manager User Guide</a>. To get started, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html\">Setting up Amazon Web Services Systems Manager</a>.</p> <p class=\"title\"> <b>Related resources</b> </p> <ul> <li> <p>For information about each of the capabilities that comprise Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/systems-manager-capabilities.html\">Systems Manager capabilities</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </li> <li> <p>For details about predefined runbooks for Automation, a capability of Amazon Web Services Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-runbook-reference.html\">Systems Manager Automation runbook reference</a> </i>.</p> </li> <li> <p>For information about AppConfig, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/\">AppConfig User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/\">AppConfig API Reference</a> </i>.</p> </li> <li> <p>For information about Incident Manager, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/userguide/\">Systems Manager Incident Manager User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/APIReference/\">Systems Manager Incident Manager API Reference</a> </i>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2014-11-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonSimpleSystemsManagerSsm);
  }
}(this, function(expect, AmazonSimpleSystemsManagerSsm) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonSimpleSystemsManagerSsm.StartAutomationExecutionRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('StartAutomationExecutionRequest', function() {
    it('should create an instance of StartAutomationExecutionRequest', function() {
      // uncomment below and update the code to test StartAutomationExecutionRequest
      //var instance = new AmazonSimpleSystemsManagerSsm.StartAutomationExecutionRequest();
      //expect(instance).to.be.a(AmazonSimpleSystemsManagerSsm.StartAutomationExecutionRequest);
    });

    it('should have the property documentName (base name: "DocumentName")', function() {
      // uncomment below and update the code to test the property documentName
      //var instance = new AmazonSimpleSystemsManagerSsm.StartAutomationExecutionRequest();
      //expect(instance).to.be();
    });

    it('should have the property documentVersion (base name: "DocumentVersion")', function() {
      // uncomment below and update the code to test the property documentVersion
      //var instance = new AmazonSimpleSystemsManagerSsm.StartAutomationExecutionRequest();
      //expect(instance).to.be();
    });

    it('should have the property parameters (base name: "Parameters")', function() {
      // uncomment below and update the code to test the property parameters
      //var instance = new AmazonSimpleSystemsManagerSsm.StartAutomationExecutionRequest();
      //expect(instance).to.be();
    });

    it('should have the property clientToken (base name: "ClientToken")', function() {
      // uncomment below and update the code to test the property clientToken
      //var instance = new AmazonSimpleSystemsManagerSsm.StartAutomationExecutionRequest();
      //expect(instance).to.be();
    });

    it('should have the property mode (base name: "Mode")', function() {
      // uncomment below and update the code to test the property mode
      //var instance = new AmazonSimpleSystemsManagerSsm.StartAutomationExecutionRequest();
      //expect(instance).to.be();
    });

    it('should have the property targetParameterName (base name: "TargetParameterName")', function() {
      // uncomment below and update the code to test the property targetParameterName
      //var instance = new AmazonSimpleSystemsManagerSsm.StartAutomationExecutionRequest();
      //expect(instance).to.be();
    });

    it('should have the property targets (base name: "Targets")', function() {
      // uncomment below and update the code to test the property targets
      //var instance = new AmazonSimpleSystemsManagerSsm.StartAutomationExecutionRequest();
      //expect(instance).to.be();
    });

    it('should have the property targetMaps (base name: "TargetMaps")', function() {
      // uncomment below and update the code to test the property targetMaps
      //var instance = new AmazonSimpleSystemsManagerSsm.StartAutomationExecutionRequest();
      //expect(instance).to.be();
    });

    it('should have the property maxConcurrency (base name: "MaxConcurrency")', function() {
      // uncomment below and update the code to test the property maxConcurrency
      //var instance = new AmazonSimpleSystemsManagerSsm.StartAutomationExecutionRequest();
      //expect(instance).to.be();
    });

    it('should have the property maxErrors (base name: "MaxErrors")', function() {
      // uncomment below and update the code to test the property maxErrors
      //var instance = new AmazonSimpleSystemsManagerSsm.StartAutomationExecutionRequest();
      //expect(instance).to.be();
    });

    it('should have the property targetLocations (base name: "TargetLocations")', function() {
      // uncomment below and update the code to test the property targetLocations
      //var instance = new AmazonSimpleSystemsManagerSsm.StartAutomationExecutionRequest();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "Tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new AmazonSimpleSystemsManagerSsm.StartAutomationExecutionRequest();
      //expect(instance).to.be();
    });

    it('should have the property alarmConfiguration (base name: "AlarmConfiguration")', function() {
      // uncomment below and update the code to test the property alarmConfiguration
      //var instance = new AmazonSimpleSystemsManagerSsm.StartAutomationExecutionRequest();
      //expect(instance).to.be();
    });

  });

}));
