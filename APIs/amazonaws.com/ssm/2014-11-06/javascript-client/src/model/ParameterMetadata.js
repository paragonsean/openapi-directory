/**
 * Amazon Simple Systems Manager (SSM)
 * <p>Amazon Web Services Systems Manager is the operations hub for your Amazon Web Services applications and resources and a secure end-to-end management solution for hybrid cloud environments that enables safe and secure operations at scale.</p> <p>This reference is intended to be used with the <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/\">Amazon Web Services Systems Manager User Guide</a>. To get started, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html\">Setting up Amazon Web Services Systems Manager</a>.</p> <p class=\"title\"> <b>Related resources</b> </p> <ul> <li> <p>For information about each of the capabilities that comprise Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/systems-manager-capabilities.html\">Systems Manager capabilities</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </li> <li> <p>For details about predefined runbooks for Automation, a capability of Amazon Web Services Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-runbook-reference.html\">Systems Manager Automation runbook reference</a> </i>.</p> </li> <li> <p>For information about AppConfig, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/\">AppConfig User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/\">AppConfig API Reference</a> </i>.</p> </li> <li> <p>For information about Incident Manager, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/userguide/\">Systems Manager Incident Manager User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/APIReference/\">Systems Manager Incident Manager API Reference</a> </i>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2014-11-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ParameterTier from './ParameterTier';
import ParameterType from './ParameterType';

/**
 * The ParameterMetadata model module.
 * @module model/ParameterMetadata
 * @version 2014-11-06
 */
class ParameterMetadata {
    /**
     * Constructs a new <code>ParameterMetadata</code>.
     * Metadata includes information like the ARN of the last user and the date/time the parameter was last used.
     * @alias module:model/ParameterMetadata
     */
    constructor() { 
        
        ParameterMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ParameterMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ParameterMetadata} obj Optional instance to populate.
     * @return {module:model/ParameterMetadata} The populated <code>ParameterMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ParameterMetadata();

            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], ParameterType);
            }
            if (data.hasOwnProperty('KeyId')) {
                obj['KeyId'] = ApiClient.convertToType(data['KeyId'], 'String');
            }
            if (data.hasOwnProperty('LastModifiedDate')) {
                obj['LastModifiedDate'] = ApiClient.convertToType(data['LastModifiedDate'], 'Date');
            }
            if (data.hasOwnProperty('LastModifiedUser')) {
                obj['LastModifiedUser'] = ApiClient.convertToType(data['LastModifiedUser'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('AllowedPattern')) {
                obj['AllowedPattern'] = ApiClient.convertToType(data['AllowedPattern'], 'String');
            }
            if (data.hasOwnProperty('Version')) {
                obj['Version'] = ApiClient.convertToType(data['Version'], 'Number');
            }
            if (data.hasOwnProperty('Tier')) {
                obj['Tier'] = ApiClient.convertToType(data['Tier'], ParameterTier);
            }
            if (data.hasOwnProperty('Policies')) {
                obj['Policies'] = ApiClient.convertToType(data['Policies'], Array);
            }
            if (data.hasOwnProperty('DataType')) {
                obj['DataType'] = ApiClient.convertToType(data['DataType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ParameterMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ParameterMetadata</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `Type`
        if (data['Type']) { // data not null
          ParameterType.validateJSON(data['Type']);
        }
        // validate the optional field `KeyId`
        if (data['KeyId']) { // data not null
          String.validateJSON(data['KeyId']);
        }
        // validate the optional field `LastModifiedDate`
        if (data['LastModifiedDate']) { // data not null
          Date.validateJSON(data['LastModifiedDate']);
        }
        // validate the optional field `LastModifiedUser`
        if (data['LastModifiedUser']) { // data not null
          String.validateJSON(data['LastModifiedUser']);
        }
        // validate the optional field `Description`
        if (data['Description']) { // data not null
          String.validateJSON(data['Description']);
        }
        // validate the optional field `AllowedPattern`
        if (data['AllowedPattern']) { // data not null
          String.validateJSON(data['AllowedPattern']);
        }
        // validate the optional field `Version`
        if (data['Version']) { // data not null
          Number.validateJSON(data['Version']);
        }
        // validate the optional field `Tier`
        if (data['Tier']) { // data not null
          ParameterTier.validateJSON(data['Tier']);
        }
        // validate the optional field `Policies`
        if (data['Policies']) { // data not null
          Array.validateJSON(data['Policies']);
        }
        // validate the optional field `DataType`
        if (data['DataType']) { // data not null
          String.validateJSON(data['DataType']);
        }

        return true;
    }


}



/**
 * @member {String} Name
 */
ParameterMetadata.prototype['Name'] = undefined;

/**
 * @member {module:model/ParameterType} Type
 */
ParameterMetadata.prototype['Type'] = undefined;

/**
 * @member {String} KeyId
 */
ParameterMetadata.prototype['KeyId'] = undefined;

/**
 * @member {Date} LastModifiedDate
 */
ParameterMetadata.prototype['LastModifiedDate'] = undefined;

/**
 * @member {String} LastModifiedUser
 */
ParameterMetadata.prototype['LastModifiedUser'] = undefined;

/**
 * @member {String} Description
 */
ParameterMetadata.prototype['Description'] = undefined;

/**
 * @member {String} AllowedPattern
 */
ParameterMetadata.prototype['AllowedPattern'] = undefined;

/**
 * @member {Number} Version
 */
ParameterMetadata.prototype['Version'] = undefined;

/**
 * @member {module:model/ParameterTier} Tier
 */
ParameterMetadata.prototype['Tier'] = undefined;

/**
 * @member {Array} Policies
 */
ParameterMetadata.prototype['Policies'] = undefined;

/**
 * @member {String} DataType
 */
ParameterMetadata.prototype['DataType'] = undefined;






export default ParameterMetadata;

