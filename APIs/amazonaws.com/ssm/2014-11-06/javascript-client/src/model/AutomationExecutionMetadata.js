/**
 * Amazon Simple Systems Manager (SSM)
 * <p>Amazon Web Services Systems Manager is the operations hub for your Amazon Web Services applications and resources and a secure end-to-end management solution for hybrid cloud environments that enables safe and secure operations at scale.</p> <p>This reference is intended to be used with the <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/\">Amazon Web Services Systems Manager User Guide</a>. To get started, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html\">Setting up Amazon Web Services Systems Manager</a>.</p> <p class=\"title\"> <b>Related resources</b> </p> <ul> <li> <p>For information about each of the capabilities that comprise Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/systems-manager-capabilities.html\">Systems Manager capabilities</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </li> <li> <p>For details about predefined runbooks for Automation, a capability of Amazon Web Services Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-runbook-reference.html\">Systems Manager Automation runbook reference</a> </i>.</p> </li> <li> <p>For information about AppConfig, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/\">AppConfig User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/\">AppConfig API Reference</a> </i>.</p> </li> <li> <p>For information about Incident Manager, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/userguide/\">Systems Manager Incident Manager User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/APIReference/\">Systems Manager Incident Manager API Reference</a> </i>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2014-11-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AutomationExecutionAlarmConfiguration from './AutomationExecutionAlarmConfiguration';
import AutomationExecutionMetadataResolvedTargets from './AutomationExecutionMetadataResolvedTargets';
import AutomationExecutionStatus from './AutomationExecutionStatus';
import AutomationSubtype from './AutomationSubtype';
import AutomationType from './AutomationType';
import ExecutionMode from './ExecutionMode';

/**
 * The AutomationExecutionMetadata model module.
 * @module model/AutomationExecutionMetadata
 * @version 2014-11-06
 */
class AutomationExecutionMetadata {
    /**
     * Constructs a new <code>AutomationExecutionMetadata</code>.
     * Details about a specific Automation execution.
     * @alias module:model/AutomationExecutionMetadata
     */
    constructor() { 
        
        AutomationExecutionMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AutomationExecutionMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AutomationExecutionMetadata} obj Optional instance to populate.
     * @return {module:model/AutomationExecutionMetadata} The populated <code>AutomationExecutionMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AutomationExecutionMetadata();

            if (data.hasOwnProperty('AutomationExecutionId')) {
                obj['AutomationExecutionId'] = ApiClient.convertToType(data['AutomationExecutionId'], 'String');
            }
            if (data.hasOwnProperty('DocumentName')) {
                obj['DocumentName'] = ApiClient.convertToType(data['DocumentName'], 'String');
            }
            if (data.hasOwnProperty('DocumentVersion')) {
                obj['DocumentVersion'] = ApiClient.convertToType(data['DocumentVersion'], 'String');
            }
            if (data.hasOwnProperty('AutomationExecutionStatus')) {
                obj['AutomationExecutionStatus'] = ApiClient.convertToType(data['AutomationExecutionStatus'], AutomationExecutionStatus);
            }
            if (data.hasOwnProperty('ExecutionStartTime')) {
                obj['ExecutionStartTime'] = ApiClient.convertToType(data['ExecutionStartTime'], 'Date');
            }
            if (data.hasOwnProperty('ExecutionEndTime')) {
                obj['ExecutionEndTime'] = ApiClient.convertToType(data['ExecutionEndTime'], 'Date');
            }
            if (data.hasOwnProperty('ExecutedBy')) {
                obj['ExecutedBy'] = ApiClient.convertToType(data['ExecutedBy'], 'String');
            }
            if (data.hasOwnProperty('LogFile')) {
                obj['LogFile'] = ApiClient.convertToType(data['LogFile'], 'String');
            }
            if (data.hasOwnProperty('Outputs')) {
                obj['Outputs'] = ApiClient.convertToType(data['Outputs'], Object);
            }
            if (data.hasOwnProperty('Mode')) {
                obj['Mode'] = ApiClient.convertToType(data['Mode'], ExecutionMode);
            }
            if (data.hasOwnProperty('ParentAutomationExecutionId')) {
                obj['ParentAutomationExecutionId'] = ApiClient.convertToType(data['ParentAutomationExecutionId'], 'String');
            }
            if (data.hasOwnProperty('CurrentStepName')) {
                obj['CurrentStepName'] = ApiClient.convertToType(data['CurrentStepName'], 'String');
            }
            if (data.hasOwnProperty('CurrentAction')) {
                obj['CurrentAction'] = ApiClient.convertToType(data['CurrentAction'], 'String');
            }
            if (data.hasOwnProperty('FailureMessage')) {
                obj['FailureMessage'] = ApiClient.convertToType(data['FailureMessage'], 'String');
            }
            if (data.hasOwnProperty('TargetParameterName')) {
                obj['TargetParameterName'] = ApiClient.convertToType(data['TargetParameterName'], 'String');
            }
            if (data.hasOwnProperty('Targets')) {
                obj['Targets'] = ApiClient.convertToType(data['Targets'], Array);
            }
            if (data.hasOwnProperty('TargetMaps')) {
                obj['TargetMaps'] = ApiClient.convertToType(data['TargetMaps'], Array);
            }
            if (data.hasOwnProperty('ResolvedTargets')) {
                obj['ResolvedTargets'] = AutomationExecutionMetadataResolvedTargets.constructFromObject(data['ResolvedTargets']);
            }
            if (data.hasOwnProperty('MaxConcurrency')) {
                obj['MaxConcurrency'] = ApiClient.convertToType(data['MaxConcurrency'], 'String');
            }
            if (data.hasOwnProperty('MaxErrors')) {
                obj['MaxErrors'] = ApiClient.convertToType(data['MaxErrors'], 'String');
            }
            if (data.hasOwnProperty('Target')) {
                obj['Target'] = ApiClient.convertToType(data['Target'], 'String');
            }
            if (data.hasOwnProperty('AutomationType')) {
                obj['AutomationType'] = ApiClient.convertToType(data['AutomationType'], AutomationType);
            }
            if (data.hasOwnProperty('AlarmConfiguration')) {
                obj['AlarmConfiguration'] = AutomationExecutionAlarmConfiguration.constructFromObject(data['AlarmConfiguration']);
            }
            if (data.hasOwnProperty('TriggeredAlarms')) {
                obj['TriggeredAlarms'] = ApiClient.convertToType(data['TriggeredAlarms'], Array);
            }
            if (data.hasOwnProperty('AutomationSubtype')) {
                obj['AutomationSubtype'] = ApiClient.convertToType(data['AutomationSubtype'], AutomationSubtype);
            }
            if (data.hasOwnProperty('ScheduledTime')) {
                obj['ScheduledTime'] = ApiClient.convertToType(data['ScheduledTime'], 'Date');
            }
            if (data.hasOwnProperty('Runbooks')) {
                obj['Runbooks'] = ApiClient.convertToType(data['Runbooks'], Array);
            }
            if (data.hasOwnProperty('OpsItemId')) {
                obj['OpsItemId'] = ApiClient.convertToType(data['OpsItemId'], 'String');
            }
            if (data.hasOwnProperty('AssociationId')) {
                obj['AssociationId'] = ApiClient.convertToType(data['AssociationId'], 'String');
            }
            if (data.hasOwnProperty('ChangeRequestName')) {
                obj['ChangeRequestName'] = ApiClient.convertToType(data['ChangeRequestName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AutomationExecutionMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AutomationExecutionMetadata</code>.
     */
    static validateJSON(data) {
        // validate the optional field `AutomationExecutionId`
        if (data['AutomationExecutionId']) { // data not null
          String.validateJSON(data['AutomationExecutionId']);
        }
        // validate the optional field `DocumentName`
        if (data['DocumentName']) { // data not null
          String.validateJSON(data['DocumentName']);
        }
        // validate the optional field `DocumentVersion`
        if (data['DocumentVersion']) { // data not null
          String.validateJSON(data['DocumentVersion']);
        }
        // validate the optional field `AutomationExecutionStatus`
        if (data['AutomationExecutionStatus']) { // data not null
          AutomationExecutionStatus.validateJSON(data['AutomationExecutionStatus']);
        }
        // validate the optional field `ExecutionStartTime`
        if (data['ExecutionStartTime']) { // data not null
          Date.validateJSON(data['ExecutionStartTime']);
        }
        // validate the optional field `ExecutionEndTime`
        if (data['ExecutionEndTime']) { // data not null
          Date.validateJSON(data['ExecutionEndTime']);
        }
        // validate the optional field `ExecutedBy`
        if (data['ExecutedBy']) { // data not null
          String.validateJSON(data['ExecutedBy']);
        }
        // validate the optional field `LogFile`
        if (data['LogFile']) { // data not null
          String.validateJSON(data['LogFile']);
        }
        // validate the optional field `Outputs`
        if (data['Outputs']) { // data not null
          Object.validateJSON(data['Outputs']);
        }
        // validate the optional field `Mode`
        if (data['Mode']) { // data not null
          ExecutionMode.validateJSON(data['Mode']);
        }
        // validate the optional field `ParentAutomationExecutionId`
        if (data['ParentAutomationExecutionId']) { // data not null
          String.validateJSON(data['ParentAutomationExecutionId']);
        }
        // validate the optional field `CurrentStepName`
        if (data['CurrentStepName']) { // data not null
          String.validateJSON(data['CurrentStepName']);
        }
        // validate the optional field `CurrentAction`
        if (data['CurrentAction']) { // data not null
          String.validateJSON(data['CurrentAction']);
        }
        // validate the optional field `FailureMessage`
        if (data['FailureMessage']) { // data not null
          String.validateJSON(data['FailureMessage']);
        }
        // validate the optional field `TargetParameterName`
        if (data['TargetParameterName']) { // data not null
          String.validateJSON(data['TargetParameterName']);
        }
        // validate the optional field `Targets`
        if (data['Targets']) { // data not null
          Array.validateJSON(data['Targets']);
        }
        // validate the optional field `TargetMaps`
        if (data['TargetMaps']) { // data not null
          Array.validateJSON(data['TargetMaps']);
        }
        // validate the optional field `ResolvedTargets`
        if (data['ResolvedTargets']) { // data not null
          AutomationExecutionMetadataResolvedTargets.validateJSON(data['ResolvedTargets']);
        }
        // validate the optional field `MaxConcurrency`
        if (data['MaxConcurrency']) { // data not null
          String.validateJSON(data['MaxConcurrency']);
        }
        // validate the optional field `MaxErrors`
        if (data['MaxErrors']) { // data not null
          String.validateJSON(data['MaxErrors']);
        }
        // validate the optional field `Target`
        if (data['Target']) { // data not null
          String.validateJSON(data['Target']);
        }
        // validate the optional field `AutomationType`
        if (data['AutomationType']) { // data not null
          AutomationType.validateJSON(data['AutomationType']);
        }
        // validate the optional field `AlarmConfiguration`
        if (data['AlarmConfiguration']) { // data not null
          AutomationExecutionAlarmConfiguration.validateJSON(data['AlarmConfiguration']);
        }
        // validate the optional field `TriggeredAlarms`
        if (data['TriggeredAlarms']) { // data not null
          Array.validateJSON(data['TriggeredAlarms']);
        }
        // validate the optional field `AutomationSubtype`
        if (data['AutomationSubtype']) { // data not null
          AutomationSubtype.validateJSON(data['AutomationSubtype']);
        }
        // validate the optional field `ScheduledTime`
        if (data['ScheduledTime']) { // data not null
          Date.validateJSON(data['ScheduledTime']);
        }
        // validate the optional field `Runbooks`
        if (data['Runbooks']) { // data not null
          Array.validateJSON(data['Runbooks']);
        }
        // validate the optional field `OpsItemId`
        if (data['OpsItemId']) { // data not null
          String.validateJSON(data['OpsItemId']);
        }
        // validate the optional field `AssociationId`
        if (data['AssociationId']) { // data not null
          String.validateJSON(data['AssociationId']);
        }
        // validate the optional field `ChangeRequestName`
        if (data['ChangeRequestName']) { // data not null
          String.validateJSON(data['ChangeRequestName']);
        }

        return true;
    }


}



/**
 * @member {String} AutomationExecutionId
 */
AutomationExecutionMetadata.prototype['AutomationExecutionId'] = undefined;

/**
 * @member {String} DocumentName
 */
AutomationExecutionMetadata.prototype['DocumentName'] = undefined;

/**
 * @member {String} DocumentVersion
 */
AutomationExecutionMetadata.prototype['DocumentVersion'] = undefined;

/**
 * @member {module:model/AutomationExecutionStatus} AutomationExecutionStatus
 */
AutomationExecutionMetadata.prototype['AutomationExecutionStatus'] = undefined;

/**
 * @member {Date} ExecutionStartTime
 */
AutomationExecutionMetadata.prototype['ExecutionStartTime'] = undefined;

/**
 * @member {Date} ExecutionEndTime
 */
AutomationExecutionMetadata.prototype['ExecutionEndTime'] = undefined;

/**
 * @member {String} ExecutedBy
 */
AutomationExecutionMetadata.prototype['ExecutedBy'] = undefined;

/**
 * @member {String} LogFile
 */
AutomationExecutionMetadata.prototype['LogFile'] = undefined;

/**
 * @member {Object} Outputs
 */
AutomationExecutionMetadata.prototype['Outputs'] = undefined;

/**
 * @member {module:model/ExecutionMode} Mode
 */
AutomationExecutionMetadata.prototype['Mode'] = undefined;

/**
 * @member {String} ParentAutomationExecutionId
 */
AutomationExecutionMetadata.prototype['ParentAutomationExecutionId'] = undefined;

/**
 * @member {String} CurrentStepName
 */
AutomationExecutionMetadata.prototype['CurrentStepName'] = undefined;

/**
 * @member {String} CurrentAction
 */
AutomationExecutionMetadata.prototype['CurrentAction'] = undefined;

/**
 * @member {String} FailureMessage
 */
AutomationExecutionMetadata.prototype['FailureMessage'] = undefined;

/**
 * @member {String} TargetParameterName
 */
AutomationExecutionMetadata.prototype['TargetParameterName'] = undefined;

/**
 * @member {Array} Targets
 */
AutomationExecutionMetadata.prototype['Targets'] = undefined;

/**
 * @member {Array} TargetMaps
 */
AutomationExecutionMetadata.prototype['TargetMaps'] = undefined;

/**
 * @member {module:model/AutomationExecutionMetadataResolvedTargets} ResolvedTargets
 */
AutomationExecutionMetadata.prototype['ResolvedTargets'] = undefined;

/**
 * @member {String} MaxConcurrency
 */
AutomationExecutionMetadata.prototype['MaxConcurrency'] = undefined;

/**
 * @member {String} MaxErrors
 */
AutomationExecutionMetadata.prototype['MaxErrors'] = undefined;

/**
 * @member {String} Target
 */
AutomationExecutionMetadata.prototype['Target'] = undefined;

/**
 * @member {module:model/AutomationType} AutomationType
 */
AutomationExecutionMetadata.prototype['AutomationType'] = undefined;

/**
 * @member {module:model/AutomationExecutionAlarmConfiguration} AlarmConfiguration
 */
AutomationExecutionMetadata.prototype['AlarmConfiguration'] = undefined;

/**
 * @member {Array} TriggeredAlarms
 */
AutomationExecutionMetadata.prototype['TriggeredAlarms'] = undefined;

/**
 * @member {module:model/AutomationSubtype} AutomationSubtype
 */
AutomationExecutionMetadata.prototype['AutomationSubtype'] = undefined;

/**
 * @member {Date} ScheduledTime
 */
AutomationExecutionMetadata.prototype['ScheduledTime'] = undefined;

/**
 * @member {Array} Runbooks
 */
AutomationExecutionMetadata.prototype['Runbooks'] = undefined;

/**
 * @member {String} OpsItemId
 */
AutomationExecutionMetadata.prototype['OpsItemId'] = undefined;

/**
 * @member {String} AssociationId
 */
AutomationExecutionMetadata.prototype['AssociationId'] = undefined;

/**
 * @member {String} ChangeRequestName
 */
AutomationExecutionMetadata.prototype['ChangeRequestName'] = undefined;






export default AutomationExecutionMetadata;

