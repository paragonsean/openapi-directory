/**
 * Amazon Simple Systems Manager (SSM)
 * <p>Amazon Web Services Systems Manager is the operations hub for your Amazon Web Services applications and resources and a secure end-to-end management solution for hybrid cloud environments that enables safe and secure operations at scale.</p> <p>This reference is intended to be used with the <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/\">Amazon Web Services Systems Manager User Guide</a>. To get started, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html\">Setting up Amazon Web Services Systems Manager</a>.</p> <p class=\"title\"> <b>Related resources</b> </p> <ul> <li> <p>For information about each of the capabilities that comprise Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/systems-manager-capabilities.html\">Systems Manager capabilities</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </li> <li> <p>For details about predefined runbooks for Automation, a capability of Amazon Web Services Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-runbook-reference.html\">Systems Manager Automation runbook reference</a> </i>.</p> </li> <li> <p>For information about AppConfig, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/\">AppConfig User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/\">AppConfig API Reference</a> </i>.</p> </li> <li> <p>For information about Incident Manager, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/userguide/\">Systems Manager Incident Manager User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/APIReference/\">Systems Manager Incident Manager API Reference</a> </i>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2014-11-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InstanceInformationAssociationOverview from './InstanceInformationAssociationOverview';
import PingStatus from './PingStatus';
import PlatformType from './PlatformType';
import ResourceType from './ResourceType';
import SourceType from './SourceType';

/**
 * The InstanceInformation model module.
 * @module model/InstanceInformation
 * @version 2014-11-06
 */
class InstanceInformation {
    /**
     * Constructs a new <code>InstanceInformation</code>.
     * Describes a filter for a specific list of managed nodes. 
     * @alias module:model/InstanceInformation
     */
    constructor() { 
        
        InstanceInformation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InstanceInformation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InstanceInformation} obj Optional instance to populate.
     * @return {module:model/InstanceInformation} The populated <code>InstanceInformation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InstanceInformation();

            if (data.hasOwnProperty('InstanceId')) {
                obj['InstanceId'] = ApiClient.convertToType(data['InstanceId'], 'String');
            }
            if (data.hasOwnProperty('PingStatus')) {
                obj['PingStatus'] = ApiClient.convertToType(data['PingStatus'], PingStatus);
            }
            if (data.hasOwnProperty('LastPingDateTime')) {
                obj['LastPingDateTime'] = ApiClient.convertToType(data['LastPingDateTime'], 'Date');
            }
            if (data.hasOwnProperty('AgentVersion')) {
                obj['AgentVersion'] = ApiClient.convertToType(data['AgentVersion'], 'String');
            }
            if (data.hasOwnProperty('IsLatestVersion')) {
                obj['IsLatestVersion'] = ApiClient.convertToType(data['IsLatestVersion'], 'Boolean');
            }
            if (data.hasOwnProperty('PlatformType')) {
                obj['PlatformType'] = ApiClient.convertToType(data['PlatformType'], PlatformType);
            }
            if (data.hasOwnProperty('PlatformName')) {
                obj['PlatformName'] = ApiClient.convertToType(data['PlatformName'], 'String');
            }
            if (data.hasOwnProperty('PlatformVersion')) {
                obj['PlatformVersion'] = ApiClient.convertToType(data['PlatformVersion'], 'String');
            }
            if (data.hasOwnProperty('ActivationId')) {
                obj['ActivationId'] = ApiClient.convertToType(data['ActivationId'], 'String');
            }
            if (data.hasOwnProperty('IamRole')) {
                obj['IamRole'] = ApiClient.convertToType(data['IamRole'], 'String');
            }
            if (data.hasOwnProperty('RegistrationDate')) {
                obj['RegistrationDate'] = ApiClient.convertToType(data['RegistrationDate'], 'Date');
            }
            if (data.hasOwnProperty('ResourceType')) {
                obj['ResourceType'] = ApiClient.convertToType(data['ResourceType'], ResourceType);
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('IPAddress')) {
                obj['IPAddress'] = ApiClient.convertToType(data['IPAddress'], 'String');
            }
            if (data.hasOwnProperty('ComputerName')) {
                obj['ComputerName'] = ApiClient.convertToType(data['ComputerName'], 'String');
            }
            if (data.hasOwnProperty('AssociationStatus')) {
                obj['AssociationStatus'] = ApiClient.convertToType(data['AssociationStatus'], 'String');
            }
            if (data.hasOwnProperty('LastAssociationExecutionDate')) {
                obj['LastAssociationExecutionDate'] = ApiClient.convertToType(data['LastAssociationExecutionDate'], 'Date');
            }
            if (data.hasOwnProperty('LastSuccessfulAssociationExecutionDate')) {
                obj['LastSuccessfulAssociationExecutionDate'] = ApiClient.convertToType(data['LastSuccessfulAssociationExecutionDate'], 'Date');
            }
            if (data.hasOwnProperty('AssociationOverview')) {
                obj['AssociationOverview'] = InstanceInformationAssociationOverview.constructFromObject(data['AssociationOverview']);
            }
            if (data.hasOwnProperty('SourceId')) {
                obj['SourceId'] = ApiClient.convertToType(data['SourceId'], 'String');
            }
            if (data.hasOwnProperty('SourceType')) {
                obj['SourceType'] = ApiClient.convertToType(data['SourceType'], SourceType);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InstanceInformation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InstanceInformation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `InstanceId`
        if (data['InstanceId']) { // data not null
          String.validateJSON(data['InstanceId']);
        }
        // validate the optional field `PingStatus`
        if (data['PingStatus']) { // data not null
          PingStatus.validateJSON(data['PingStatus']);
        }
        // validate the optional field `LastPingDateTime`
        if (data['LastPingDateTime']) { // data not null
          Date.validateJSON(data['LastPingDateTime']);
        }
        // validate the optional field `AgentVersion`
        if (data['AgentVersion']) { // data not null
          String.validateJSON(data['AgentVersion']);
        }
        // validate the optional field `IsLatestVersion`
        if (data['IsLatestVersion']) { // data not null
          Boolean.validateJSON(data['IsLatestVersion']);
        }
        // validate the optional field `PlatformType`
        if (data['PlatformType']) { // data not null
          PlatformType.validateJSON(data['PlatformType']);
        }
        // validate the optional field `PlatformName`
        if (data['PlatformName']) { // data not null
          String.validateJSON(data['PlatformName']);
        }
        // validate the optional field `PlatformVersion`
        if (data['PlatformVersion']) { // data not null
          String.validateJSON(data['PlatformVersion']);
        }
        // validate the optional field `ActivationId`
        if (data['ActivationId']) { // data not null
          String.validateJSON(data['ActivationId']);
        }
        // validate the optional field `IamRole`
        if (data['IamRole']) { // data not null
          String.validateJSON(data['IamRole']);
        }
        // validate the optional field `RegistrationDate`
        if (data['RegistrationDate']) { // data not null
          Date.validateJSON(data['RegistrationDate']);
        }
        // validate the optional field `ResourceType`
        if (data['ResourceType']) { // data not null
          ResourceType.validateJSON(data['ResourceType']);
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `IPAddress`
        if (data['IPAddress']) { // data not null
          String.validateJSON(data['IPAddress']);
        }
        // validate the optional field `ComputerName`
        if (data['ComputerName']) { // data not null
          String.validateJSON(data['ComputerName']);
        }
        // validate the optional field `AssociationStatus`
        if (data['AssociationStatus']) { // data not null
          String.validateJSON(data['AssociationStatus']);
        }
        // validate the optional field `LastAssociationExecutionDate`
        if (data['LastAssociationExecutionDate']) { // data not null
          Date.validateJSON(data['LastAssociationExecutionDate']);
        }
        // validate the optional field `LastSuccessfulAssociationExecutionDate`
        if (data['LastSuccessfulAssociationExecutionDate']) { // data not null
          Date.validateJSON(data['LastSuccessfulAssociationExecutionDate']);
        }
        // validate the optional field `AssociationOverview`
        if (data['AssociationOverview']) { // data not null
          InstanceInformationAssociationOverview.validateJSON(data['AssociationOverview']);
        }
        // validate the optional field `SourceId`
        if (data['SourceId']) { // data not null
          String.validateJSON(data['SourceId']);
        }
        // validate the optional field `SourceType`
        if (data['SourceType']) { // data not null
          SourceType.validateJSON(data['SourceType']);
        }

        return true;
    }


}



/**
 * @member {String} InstanceId
 */
InstanceInformation.prototype['InstanceId'] = undefined;

/**
 * @member {module:model/PingStatus} PingStatus
 */
InstanceInformation.prototype['PingStatus'] = undefined;

/**
 * @member {Date} LastPingDateTime
 */
InstanceInformation.prototype['LastPingDateTime'] = undefined;

/**
 * @member {String} AgentVersion
 */
InstanceInformation.prototype['AgentVersion'] = undefined;

/**
 * @member {Boolean} IsLatestVersion
 */
InstanceInformation.prototype['IsLatestVersion'] = undefined;

/**
 * @member {module:model/PlatformType} PlatformType
 */
InstanceInformation.prototype['PlatformType'] = undefined;

/**
 * @member {String} PlatformName
 */
InstanceInformation.prototype['PlatformName'] = undefined;

/**
 * @member {String} PlatformVersion
 */
InstanceInformation.prototype['PlatformVersion'] = undefined;

/**
 * @member {String} ActivationId
 */
InstanceInformation.prototype['ActivationId'] = undefined;

/**
 * @member {String} IamRole
 */
InstanceInformation.prototype['IamRole'] = undefined;

/**
 * @member {Date} RegistrationDate
 */
InstanceInformation.prototype['RegistrationDate'] = undefined;

/**
 * @member {module:model/ResourceType} ResourceType
 */
InstanceInformation.prototype['ResourceType'] = undefined;

/**
 * @member {String} Name
 */
InstanceInformation.prototype['Name'] = undefined;

/**
 * @member {String} IPAddress
 */
InstanceInformation.prototype['IPAddress'] = undefined;

/**
 * @member {String} ComputerName
 */
InstanceInformation.prototype['ComputerName'] = undefined;

/**
 * @member {String} AssociationStatus
 */
InstanceInformation.prototype['AssociationStatus'] = undefined;

/**
 * @member {Date} LastAssociationExecutionDate
 */
InstanceInformation.prototype['LastAssociationExecutionDate'] = undefined;

/**
 * @member {Date} LastSuccessfulAssociationExecutionDate
 */
InstanceInformation.prototype['LastSuccessfulAssociationExecutionDate'] = undefined;

/**
 * @member {module:model/InstanceInformationAssociationOverview} AssociationOverview
 */
InstanceInformation.prototype['AssociationOverview'] = undefined;

/**
 * @member {String} SourceId
 */
InstanceInformation.prototype['SourceId'] = undefined;

/**
 * @member {module:model/SourceType} SourceType
 */
InstanceInformation.prototype['SourceType'] = undefined;






export default InstanceInformation;

