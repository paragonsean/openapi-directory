/**
 * Amazon Simple Systems Manager (SSM)
 * <p>Amazon Web Services Systems Manager is the operations hub for your Amazon Web Services applications and resources and a secure end-to-end management solution for hybrid cloud environments that enables safe and secure operations at scale.</p> <p>This reference is intended to be used with the <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/\">Amazon Web Services Systems Manager User Guide</a>. To get started, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html\">Setting up Amazon Web Services Systems Manager</a>.</p> <p class=\"title\"> <b>Related resources</b> </p> <ul> <li> <p>For information about each of the capabilities that comprise Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/systems-manager-capabilities.html\">Systems Manager capabilities</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </li> <li> <p>For details about predefined runbooks for Automation, a capability of Amazon Web Services Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-runbook-reference.html\">Systems Manager Automation runbook reference</a> </i>.</p> </li> <li> <p>For information about AppConfig, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/\">AppConfig User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/\">AppConfig API Reference</a> </i>.</p> </li> <li> <p>For information about Incident Manager, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/userguide/\">Systems Manager Incident Manager User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/APIReference/\">Systems Manager Incident Manager API Reference</a> </i>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2014-11-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DocumentHashType from './DocumentHashType';
import SendCommandRequestAlarmConfiguration from './SendCommandRequestAlarmConfiguration';
import SendCommandRequestCloudWatchOutputConfig from './SendCommandRequestCloudWatchOutputConfig';
import SendCommandRequestNotificationConfig from './SendCommandRequestNotificationConfig';

/**
 * The SendCommandRequest model module.
 * @module model/SendCommandRequest
 * @version 2014-11-06
 */
class SendCommandRequest {
    /**
     * Constructs a new <code>SendCommandRequest</code>.
     * @alias module:model/SendCommandRequest
     * @param documentName {String} 
     */
    constructor(documentName) { 
        
        SendCommandRequest.initialize(this, documentName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, documentName) { 
        obj['DocumentName'] = documentName;
    }

    /**
     * Constructs a <code>SendCommandRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SendCommandRequest} obj Optional instance to populate.
     * @return {module:model/SendCommandRequest} The populated <code>SendCommandRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SendCommandRequest();

            if (data.hasOwnProperty('InstanceIds')) {
                obj['InstanceIds'] = ApiClient.convertToType(data['InstanceIds'], Array);
            }
            if (data.hasOwnProperty('Targets')) {
                obj['Targets'] = ApiClient.convertToType(data['Targets'], Array);
            }
            if (data.hasOwnProperty('DocumentName')) {
                obj['DocumentName'] = ApiClient.convertToType(data['DocumentName'], 'String');
            }
            if (data.hasOwnProperty('DocumentVersion')) {
                obj['DocumentVersion'] = ApiClient.convertToType(data['DocumentVersion'], 'String');
            }
            if (data.hasOwnProperty('DocumentHash')) {
                obj['DocumentHash'] = ApiClient.convertToType(data['DocumentHash'], 'String');
            }
            if (data.hasOwnProperty('DocumentHashType')) {
                obj['DocumentHashType'] = ApiClient.convertToType(data['DocumentHashType'], DocumentHashType);
            }
            if (data.hasOwnProperty('TimeoutSeconds')) {
                obj['TimeoutSeconds'] = ApiClient.convertToType(data['TimeoutSeconds'], 'Number');
            }
            if (data.hasOwnProperty('Comment')) {
                obj['Comment'] = ApiClient.convertToType(data['Comment'], 'String');
            }
            if (data.hasOwnProperty('Parameters')) {
                obj['Parameters'] = ApiClient.convertToType(data['Parameters'], Object);
            }
            if (data.hasOwnProperty('OutputS3Region')) {
                obj['OutputS3Region'] = ApiClient.convertToType(data['OutputS3Region'], 'String');
            }
            if (data.hasOwnProperty('OutputS3BucketName')) {
                obj['OutputS3BucketName'] = ApiClient.convertToType(data['OutputS3BucketName'], 'String');
            }
            if (data.hasOwnProperty('OutputS3KeyPrefix')) {
                obj['OutputS3KeyPrefix'] = ApiClient.convertToType(data['OutputS3KeyPrefix'], 'String');
            }
            if (data.hasOwnProperty('MaxConcurrency')) {
                obj['MaxConcurrency'] = ApiClient.convertToType(data['MaxConcurrency'], 'String');
            }
            if (data.hasOwnProperty('MaxErrors')) {
                obj['MaxErrors'] = ApiClient.convertToType(data['MaxErrors'], 'String');
            }
            if (data.hasOwnProperty('ServiceRoleArn')) {
                obj['ServiceRoleArn'] = ApiClient.convertToType(data['ServiceRoleArn'], 'String');
            }
            if (data.hasOwnProperty('NotificationConfig')) {
                obj['NotificationConfig'] = SendCommandRequestNotificationConfig.constructFromObject(data['NotificationConfig']);
            }
            if (data.hasOwnProperty('CloudWatchOutputConfig')) {
                obj['CloudWatchOutputConfig'] = SendCommandRequestCloudWatchOutputConfig.constructFromObject(data['CloudWatchOutputConfig']);
            }
            if (data.hasOwnProperty('AlarmConfiguration')) {
                obj['AlarmConfiguration'] = SendCommandRequestAlarmConfiguration.constructFromObject(data['AlarmConfiguration']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SendCommandRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SendCommandRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SendCommandRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `InstanceIds`
        if (data['InstanceIds']) { // data not null
          Array.validateJSON(data['InstanceIds']);
        }
        // validate the optional field `Targets`
        if (data['Targets']) { // data not null
          Array.validateJSON(data['Targets']);
        }
        // validate the optional field `DocumentName`
        if (data['DocumentName']) { // data not null
          String.validateJSON(data['DocumentName']);
        }
        // validate the optional field `DocumentVersion`
        if (data['DocumentVersion']) { // data not null
          String.validateJSON(data['DocumentVersion']);
        }
        // validate the optional field `DocumentHash`
        if (data['DocumentHash']) { // data not null
          String.validateJSON(data['DocumentHash']);
        }
        // validate the optional field `DocumentHashType`
        if (data['DocumentHashType']) { // data not null
          DocumentHashType.validateJSON(data['DocumentHashType']);
        }
        // validate the optional field `TimeoutSeconds`
        if (data['TimeoutSeconds']) { // data not null
          Number.validateJSON(data['TimeoutSeconds']);
        }
        // validate the optional field `Comment`
        if (data['Comment']) { // data not null
          String.validateJSON(data['Comment']);
        }
        // validate the optional field `Parameters`
        if (data['Parameters']) { // data not null
          Object.validateJSON(data['Parameters']);
        }
        // validate the optional field `OutputS3Region`
        if (data['OutputS3Region']) { // data not null
          String.validateJSON(data['OutputS3Region']);
        }
        // validate the optional field `OutputS3BucketName`
        if (data['OutputS3BucketName']) { // data not null
          String.validateJSON(data['OutputS3BucketName']);
        }
        // validate the optional field `OutputS3KeyPrefix`
        if (data['OutputS3KeyPrefix']) { // data not null
          String.validateJSON(data['OutputS3KeyPrefix']);
        }
        // validate the optional field `MaxConcurrency`
        if (data['MaxConcurrency']) { // data not null
          String.validateJSON(data['MaxConcurrency']);
        }
        // validate the optional field `MaxErrors`
        if (data['MaxErrors']) { // data not null
          String.validateJSON(data['MaxErrors']);
        }
        // validate the optional field `ServiceRoleArn`
        if (data['ServiceRoleArn']) { // data not null
          String.validateJSON(data['ServiceRoleArn']);
        }
        // validate the optional field `NotificationConfig`
        if (data['NotificationConfig']) { // data not null
          SendCommandRequestNotificationConfig.validateJSON(data['NotificationConfig']);
        }
        // validate the optional field `CloudWatchOutputConfig`
        if (data['CloudWatchOutputConfig']) { // data not null
          SendCommandRequestCloudWatchOutputConfig.validateJSON(data['CloudWatchOutputConfig']);
        }
        // validate the optional field `AlarmConfiguration`
        if (data['AlarmConfiguration']) { // data not null
          SendCommandRequestAlarmConfiguration.validateJSON(data['AlarmConfiguration']);
        }

        return true;
    }


}

SendCommandRequest.RequiredProperties = ["DocumentName"];

/**
 * @member {Array} InstanceIds
 */
SendCommandRequest.prototype['InstanceIds'] = undefined;

/**
 * @member {Array} Targets
 */
SendCommandRequest.prototype['Targets'] = undefined;

/**
 * @member {String} DocumentName
 */
SendCommandRequest.prototype['DocumentName'] = undefined;

/**
 * @member {String} DocumentVersion
 */
SendCommandRequest.prototype['DocumentVersion'] = undefined;

/**
 * @member {String} DocumentHash
 */
SendCommandRequest.prototype['DocumentHash'] = undefined;

/**
 * @member {module:model/DocumentHashType} DocumentHashType
 */
SendCommandRequest.prototype['DocumentHashType'] = undefined;

/**
 * @member {Number} TimeoutSeconds
 */
SendCommandRequest.prototype['TimeoutSeconds'] = undefined;

/**
 * @member {String} Comment
 */
SendCommandRequest.prototype['Comment'] = undefined;

/**
 * @member {Object} Parameters
 */
SendCommandRequest.prototype['Parameters'] = undefined;

/**
 * @member {String} OutputS3Region
 */
SendCommandRequest.prototype['OutputS3Region'] = undefined;

/**
 * @member {String} OutputS3BucketName
 */
SendCommandRequest.prototype['OutputS3BucketName'] = undefined;

/**
 * @member {String} OutputS3KeyPrefix
 */
SendCommandRequest.prototype['OutputS3KeyPrefix'] = undefined;

/**
 * @member {String} MaxConcurrency
 */
SendCommandRequest.prototype['MaxConcurrency'] = undefined;

/**
 * @member {String} MaxErrors
 */
SendCommandRequest.prototype['MaxErrors'] = undefined;

/**
 * @member {String} ServiceRoleArn
 */
SendCommandRequest.prototype['ServiceRoleArn'] = undefined;

/**
 * @member {module:model/SendCommandRequestNotificationConfig} NotificationConfig
 */
SendCommandRequest.prototype['NotificationConfig'] = undefined;

/**
 * @member {module:model/SendCommandRequestCloudWatchOutputConfig} CloudWatchOutputConfig
 */
SendCommandRequest.prototype['CloudWatchOutputConfig'] = undefined;

/**
 * @member {module:model/SendCommandRequestAlarmConfiguration} AlarmConfiguration
 */
SendCommandRequest.prototype['AlarmConfiguration'] = undefined;






export default SendCommandRequest;

