/**
 * Amazon Simple Systems Manager (SSM)
 * <p>Amazon Web Services Systems Manager is the operations hub for your Amazon Web Services applications and resources and a secure end-to-end management solution for hybrid cloud environments that enables safe and secure operations at scale.</p> <p>This reference is intended to be used with the <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/\">Amazon Web Services Systems Manager User Guide</a>. To get started, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html\">Setting up Amazon Web Services Systems Manager</a>.</p> <p class=\"title\"> <b>Related resources</b> </p> <ul> <li> <p>For information about each of the capabilities that comprise Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/systems-manager-capabilities.html\">Systems Manager capabilities</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </li> <li> <p>For details about predefined runbooks for Automation, a capability of Amazon Web Services Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-runbook-reference.html\">Systems Manager Automation runbook reference</a> </i>.</p> </li> <li> <p>For information about AppConfig, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/\">AppConfig User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/\">AppConfig API Reference</a> </i>.</p> </li> <li> <p>For information about Incident Manager, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/userguide/\">Systems Manager Incident Manager User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/APIReference/\">Systems Manager Incident Manager API Reference</a> </i>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2014-11-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Command from './Command';
import CommandAlarmConfiguration from './CommandAlarmConfiguration';
import CommandCloudWatchOutputConfig from './CommandCloudWatchOutputConfig';
import CommandNotificationConfig from './CommandNotificationConfig';
import CommandStatus from './CommandStatus';

/**
 * The SendCommandResultCommand model module.
 * @module model/SendCommandResultCommand
 * @version 2014-11-06
 */
class SendCommandResultCommand {
    /**
     * Constructs a new <code>SendCommandResultCommand</code>.
     * @alias module:model/SendCommandResultCommand
     * @implements module:model/Command
     */
    constructor() { 
        Command.initialize(this);
        SendCommandResultCommand.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SendCommandResultCommand</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SendCommandResultCommand} obj Optional instance to populate.
     * @return {module:model/SendCommandResultCommand} The populated <code>SendCommandResultCommand</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SendCommandResultCommand();
            Command.constructFromObject(data, obj);

            if (data.hasOwnProperty('CommandId')) {
                obj['CommandId'] = ApiClient.convertToType(data['CommandId'], 'String');
            }
            if (data.hasOwnProperty('DocumentName')) {
                obj['DocumentName'] = ApiClient.convertToType(data['DocumentName'], 'String');
            }
            if (data.hasOwnProperty('DocumentVersion')) {
                obj['DocumentVersion'] = ApiClient.convertToType(data['DocumentVersion'], 'String');
            }
            if (data.hasOwnProperty('Comment')) {
                obj['Comment'] = ApiClient.convertToType(data['Comment'], 'String');
            }
            if (data.hasOwnProperty('ExpiresAfter')) {
                obj['ExpiresAfter'] = ApiClient.convertToType(data['ExpiresAfter'], 'Date');
            }
            if (data.hasOwnProperty('Parameters')) {
                obj['Parameters'] = ApiClient.convertToType(data['Parameters'], Object);
            }
            if (data.hasOwnProperty('InstanceIds')) {
                obj['InstanceIds'] = ApiClient.convertToType(data['InstanceIds'], Array);
            }
            if (data.hasOwnProperty('Targets')) {
                obj['Targets'] = ApiClient.convertToType(data['Targets'], Array);
            }
            if (data.hasOwnProperty('RequestedDateTime')) {
                obj['RequestedDateTime'] = ApiClient.convertToType(data['RequestedDateTime'], 'Date');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], CommandStatus);
            }
            if (data.hasOwnProperty('StatusDetails')) {
                obj['StatusDetails'] = ApiClient.convertToType(data['StatusDetails'], 'String');
            }
            if (data.hasOwnProperty('OutputS3Region')) {
                obj['OutputS3Region'] = ApiClient.convertToType(data['OutputS3Region'], 'String');
            }
            if (data.hasOwnProperty('OutputS3BucketName')) {
                obj['OutputS3BucketName'] = ApiClient.convertToType(data['OutputS3BucketName'], 'String');
            }
            if (data.hasOwnProperty('OutputS3KeyPrefix')) {
                obj['OutputS3KeyPrefix'] = ApiClient.convertToType(data['OutputS3KeyPrefix'], 'String');
            }
            if (data.hasOwnProperty('MaxConcurrency')) {
                obj['MaxConcurrency'] = ApiClient.convertToType(data['MaxConcurrency'], 'String');
            }
            if (data.hasOwnProperty('MaxErrors')) {
                obj['MaxErrors'] = ApiClient.convertToType(data['MaxErrors'], 'String');
            }
            if (data.hasOwnProperty('TargetCount')) {
                obj['TargetCount'] = ApiClient.convertToType(data['TargetCount'], 'Number');
            }
            if (data.hasOwnProperty('CompletedCount')) {
                obj['CompletedCount'] = ApiClient.convertToType(data['CompletedCount'], 'Number');
            }
            if (data.hasOwnProperty('ErrorCount')) {
                obj['ErrorCount'] = ApiClient.convertToType(data['ErrorCount'], 'Number');
            }
            if (data.hasOwnProperty('DeliveryTimedOutCount')) {
                obj['DeliveryTimedOutCount'] = ApiClient.convertToType(data['DeliveryTimedOutCount'], 'Number');
            }
            if (data.hasOwnProperty('ServiceRole')) {
                obj['ServiceRole'] = ApiClient.convertToType(data['ServiceRole'], 'String');
            }
            if (data.hasOwnProperty('NotificationConfig')) {
                obj['NotificationConfig'] = CommandNotificationConfig.constructFromObject(data['NotificationConfig']);
            }
            if (data.hasOwnProperty('CloudWatchOutputConfig')) {
                obj['CloudWatchOutputConfig'] = CommandCloudWatchOutputConfig.constructFromObject(data['CloudWatchOutputConfig']);
            }
            if (data.hasOwnProperty('TimeoutSeconds')) {
                obj['TimeoutSeconds'] = ApiClient.convertToType(data['TimeoutSeconds'], 'Number');
            }
            if (data.hasOwnProperty('AlarmConfiguration')) {
                obj['AlarmConfiguration'] = CommandAlarmConfiguration.constructFromObject(data['AlarmConfiguration']);
            }
            if (data.hasOwnProperty('TriggeredAlarms')) {
                obj['TriggeredAlarms'] = ApiClient.convertToType(data['TriggeredAlarms'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SendCommandResultCommand</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SendCommandResultCommand</code>.
     */
    static validateJSON(data) {
        // validate the optional field `CommandId`
        if (data['CommandId']) { // data not null
          String.validateJSON(data['CommandId']);
        }
        // validate the optional field `DocumentName`
        if (data['DocumentName']) { // data not null
          String.validateJSON(data['DocumentName']);
        }
        // validate the optional field `DocumentVersion`
        if (data['DocumentVersion']) { // data not null
          String.validateJSON(data['DocumentVersion']);
        }
        // validate the optional field `Comment`
        if (data['Comment']) { // data not null
          String.validateJSON(data['Comment']);
        }
        // validate the optional field `ExpiresAfter`
        if (data['ExpiresAfter']) { // data not null
          Date.validateJSON(data['ExpiresAfter']);
        }
        // validate the optional field `Parameters`
        if (data['Parameters']) { // data not null
          Object.validateJSON(data['Parameters']);
        }
        // validate the optional field `InstanceIds`
        if (data['InstanceIds']) { // data not null
          Array.validateJSON(data['InstanceIds']);
        }
        // validate the optional field `Targets`
        if (data['Targets']) { // data not null
          Array.validateJSON(data['Targets']);
        }
        // validate the optional field `RequestedDateTime`
        if (data['RequestedDateTime']) { // data not null
          Date.validateJSON(data['RequestedDateTime']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          CommandStatus.validateJSON(data['Status']);
        }
        // validate the optional field `StatusDetails`
        if (data['StatusDetails']) { // data not null
          String.validateJSON(data['StatusDetails']);
        }
        // validate the optional field `OutputS3Region`
        if (data['OutputS3Region']) { // data not null
          String.validateJSON(data['OutputS3Region']);
        }
        // validate the optional field `OutputS3BucketName`
        if (data['OutputS3BucketName']) { // data not null
          String.validateJSON(data['OutputS3BucketName']);
        }
        // validate the optional field `OutputS3KeyPrefix`
        if (data['OutputS3KeyPrefix']) { // data not null
          String.validateJSON(data['OutputS3KeyPrefix']);
        }
        // validate the optional field `MaxConcurrency`
        if (data['MaxConcurrency']) { // data not null
          String.validateJSON(data['MaxConcurrency']);
        }
        // validate the optional field `MaxErrors`
        if (data['MaxErrors']) { // data not null
          String.validateJSON(data['MaxErrors']);
        }
        // validate the optional field `TargetCount`
        if (data['TargetCount']) { // data not null
          Number.validateJSON(data['TargetCount']);
        }
        // validate the optional field `CompletedCount`
        if (data['CompletedCount']) { // data not null
          Number.validateJSON(data['CompletedCount']);
        }
        // validate the optional field `ErrorCount`
        if (data['ErrorCount']) { // data not null
          Number.validateJSON(data['ErrorCount']);
        }
        // validate the optional field `DeliveryTimedOutCount`
        if (data['DeliveryTimedOutCount']) { // data not null
          Number.validateJSON(data['DeliveryTimedOutCount']);
        }
        // validate the optional field `ServiceRole`
        if (data['ServiceRole']) { // data not null
          String.validateJSON(data['ServiceRole']);
        }
        // validate the optional field `NotificationConfig`
        if (data['NotificationConfig']) { // data not null
          CommandNotificationConfig.validateJSON(data['NotificationConfig']);
        }
        // validate the optional field `CloudWatchOutputConfig`
        if (data['CloudWatchOutputConfig']) { // data not null
          CommandCloudWatchOutputConfig.validateJSON(data['CloudWatchOutputConfig']);
        }
        // validate the optional field `TimeoutSeconds`
        if (data['TimeoutSeconds']) { // data not null
          Number.validateJSON(data['TimeoutSeconds']);
        }
        // validate the optional field `AlarmConfiguration`
        if (data['AlarmConfiguration']) { // data not null
          CommandAlarmConfiguration.validateJSON(data['AlarmConfiguration']);
        }
        // validate the optional field `TriggeredAlarms`
        if (data['TriggeredAlarms']) { // data not null
          Array.validateJSON(data['TriggeredAlarms']);
        }

        return true;
    }


}



/**
 * @member {String} CommandId
 */
SendCommandResultCommand.prototype['CommandId'] = undefined;

/**
 * @member {String} DocumentName
 */
SendCommandResultCommand.prototype['DocumentName'] = undefined;

/**
 * @member {String} DocumentVersion
 */
SendCommandResultCommand.prototype['DocumentVersion'] = undefined;

/**
 * @member {String} Comment
 */
SendCommandResultCommand.prototype['Comment'] = undefined;

/**
 * @member {Date} ExpiresAfter
 */
SendCommandResultCommand.prototype['ExpiresAfter'] = undefined;

/**
 * @member {Object} Parameters
 */
SendCommandResultCommand.prototype['Parameters'] = undefined;

/**
 * @member {Array} InstanceIds
 */
SendCommandResultCommand.prototype['InstanceIds'] = undefined;

/**
 * @member {Array} Targets
 */
SendCommandResultCommand.prototype['Targets'] = undefined;

/**
 * @member {Date} RequestedDateTime
 */
SendCommandResultCommand.prototype['RequestedDateTime'] = undefined;

/**
 * @member {module:model/CommandStatus} Status
 */
SendCommandResultCommand.prototype['Status'] = undefined;

/**
 * @member {String} StatusDetails
 */
SendCommandResultCommand.prototype['StatusDetails'] = undefined;

/**
 * @member {String} OutputS3Region
 */
SendCommandResultCommand.prototype['OutputS3Region'] = undefined;

/**
 * @member {String} OutputS3BucketName
 */
SendCommandResultCommand.prototype['OutputS3BucketName'] = undefined;

/**
 * @member {String} OutputS3KeyPrefix
 */
SendCommandResultCommand.prototype['OutputS3KeyPrefix'] = undefined;

/**
 * @member {String} MaxConcurrency
 */
SendCommandResultCommand.prototype['MaxConcurrency'] = undefined;

/**
 * @member {String} MaxErrors
 */
SendCommandResultCommand.prototype['MaxErrors'] = undefined;

/**
 * @member {Number} TargetCount
 */
SendCommandResultCommand.prototype['TargetCount'] = undefined;

/**
 * @member {Number} CompletedCount
 */
SendCommandResultCommand.prototype['CompletedCount'] = undefined;

/**
 * @member {Number} ErrorCount
 */
SendCommandResultCommand.prototype['ErrorCount'] = undefined;

/**
 * @member {Number} DeliveryTimedOutCount
 */
SendCommandResultCommand.prototype['DeliveryTimedOutCount'] = undefined;

/**
 * @member {String} ServiceRole
 */
SendCommandResultCommand.prototype['ServiceRole'] = undefined;

/**
 * @member {module:model/CommandNotificationConfig} NotificationConfig
 */
SendCommandResultCommand.prototype['NotificationConfig'] = undefined;

/**
 * @member {module:model/CommandCloudWatchOutputConfig} CloudWatchOutputConfig
 */
SendCommandResultCommand.prototype['CloudWatchOutputConfig'] = undefined;

/**
 * @member {Number} TimeoutSeconds
 */
SendCommandResultCommand.prototype['TimeoutSeconds'] = undefined;

/**
 * @member {module:model/CommandAlarmConfiguration} AlarmConfiguration
 */
SendCommandResultCommand.prototype['AlarmConfiguration'] = undefined;

/**
 * @member {Array} TriggeredAlarms
 */
SendCommandResultCommand.prototype['TriggeredAlarms'] = undefined;


// Implement Command interface:
/**
 * @member {String} CommandId
 */
Command.prototype['CommandId'] = undefined;
/**
 * @member {String} DocumentName
 */
Command.prototype['DocumentName'] = undefined;
/**
 * @member {String} DocumentVersion
 */
Command.prototype['DocumentVersion'] = undefined;
/**
 * @member {String} Comment
 */
Command.prototype['Comment'] = undefined;
/**
 * @member {Date} ExpiresAfter
 */
Command.prototype['ExpiresAfter'] = undefined;
/**
 * @member {Object} Parameters
 */
Command.prototype['Parameters'] = undefined;
/**
 * @member {Array} InstanceIds
 */
Command.prototype['InstanceIds'] = undefined;
/**
 * @member {Array} Targets
 */
Command.prototype['Targets'] = undefined;
/**
 * @member {Date} RequestedDateTime
 */
Command.prototype['RequestedDateTime'] = undefined;
/**
 * @member {module:model/CommandStatus} Status
 */
Command.prototype['Status'] = undefined;
/**
 * @member {String} StatusDetails
 */
Command.prototype['StatusDetails'] = undefined;
/**
 * @member {String} OutputS3Region
 */
Command.prototype['OutputS3Region'] = undefined;
/**
 * @member {String} OutputS3BucketName
 */
Command.prototype['OutputS3BucketName'] = undefined;
/**
 * @member {String} OutputS3KeyPrefix
 */
Command.prototype['OutputS3KeyPrefix'] = undefined;
/**
 * @member {String} MaxConcurrency
 */
Command.prototype['MaxConcurrency'] = undefined;
/**
 * @member {String} MaxErrors
 */
Command.prototype['MaxErrors'] = undefined;
/**
 * @member {Number} TargetCount
 */
Command.prototype['TargetCount'] = undefined;
/**
 * @member {Number} CompletedCount
 */
Command.prototype['CompletedCount'] = undefined;
/**
 * @member {Number} ErrorCount
 */
Command.prototype['ErrorCount'] = undefined;
/**
 * @member {Number} DeliveryTimedOutCount
 */
Command.prototype['DeliveryTimedOutCount'] = undefined;
/**
 * @member {String} ServiceRole
 */
Command.prototype['ServiceRole'] = undefined;
/**
 * @member {module:model/CommandNotificationConfig} NotificationConfig
 */
Command.prototype['NotificationConfig'] = undefined;
/**
 * @member {module:model/CommandCloudWatchOutputConfig} CloudWatchOutputConfig
 */
Command.prototype['CloudWatchOutputConfig'] = undefined;
/**
 * @member {Number} TimeoutSeconds
 */
Command.prototype['TimeoutSeconds'] = undefined;
/**
 * @member {module:model/CommandAlarmConfiguration} AlarmConfiguration
 */
Command.prototype['AlarmConfiguration'] = undefined;
/**
 * @member {Array} TriggeredAlarms
 */
Command.prototype['TriggeredAlarms'] = undefined;




export default SendCommandResultCommand;

