/**
 * Amazon Simple Systems Manager (SSM)
 * <p>Amazon Web Services Systems Manager is the operations hub for your Amazon Web Services applications and resources and a secure end-to-end management solution for hybrid cloud environments that enables safe and secure operations at scale.</p> <p>This reference is intended to be used with the <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/\">Amazon Web Services Systems Manager User Guide</a>. To get started, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html\">Setting up Amazon Web Services Systems Manager</a>.</p> <p class=\"title\"> <b>Related resources</b> </p> <ul> <li> <p>For information about each of the capabilities that comprise Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/systems-manager-capabilities.html\">Systems Manager capabilities</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </li> <li> <p>For details about predefined runbooks for Automation, a capability of Amazon Web Services Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-runbook-reference.html\">Systems Manager Automation runbook reference</a> </i>.</p> </li> <li> <p>For information about AppConfig, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/\">AppConfig User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/\">AppConfig API Reference</a> </i>.</p> </li> <li> <p>For information about Incident Manager, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/userguide/\">Systems Manager Incident Manager User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/APIReference/\">Systems Manager Incident Manager API Reference</a> </i>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2014-11-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Target model module.
 * @module model/Target
 * @version 2014-11-06
 */
class Target {
    /**
     * Constructs a new <code>Target</code>.
     * &lt;p&gt;An array of search criteria that targets managed nodes using a key-value pair that you specify.&lt;/p&gt; &lt;note&gt; &lt;p&gt; One or more targets must be specified for maintenance window Run Command-type tasks. Depending on the task, targets are optional for other maintenance window task types (Automation, Lambda, and Step Functions). For more information about running tasks that don&#39;t specify targets, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/systems-manager/latest/userguide/maintenance-windows-targetless-tasks.html\&quot;&gt;Registering maintenance window tasks without targets&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Systems Manager User Guide&lt;/i&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Supported formats include the following.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Key&#x3D;InstanceIds,Values&#x3D;&amp;lt;instance-id-1&amp;gt;,&amp;lt;instance-id-2&amp;gt;,&amp;lt;instance-id-3&amp;gt;&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Key&#x3D;tag:&amp;lt;my-tag-key&amp;gt;,Values&#x3D;&amp;lt;my-tag-value-1&amp;gt;,&amp;lt;my-tag-value-2&amp;gt;&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Key&#x3D;tag-key,Values&#x3D;&amp;lt;my-tag-key-1&amp;gt;,&amp;lt;my-tag-key-2&amp;gt;&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;Run Command and Maintenance window targets only&lt;/b&gt;: &lt;code&gt;Key&#x3D;resource-groups:Name,Values&#x3D;&amp;lt;resource-group-name&amp;gt;&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;Maintenance window targets only&lt;/b&gt;: &lt;code&gt;Key&#x3D;resource-groups:ResourceTypeFilters,Values&#x3D;&amp;lt;resource-type-1&amp;gt;,&amp;lt;resource-type-2&amp;gt;&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;Automation targets only&lt;/b&gt;: &lt;code&gt;Key&#x3D;ResourceGroup;Values&#x3D;&amp;lt;resource-group-name&amp;gt;&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For example:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Key&#x3D;InstanceIds,Values&#x3D;i-02573cafcfEXAMPLE,i-0471e04240EXAMPLE,i-07782c72faEXAMPLE&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Key&#x3D;tag:CostCenter,Values&#x3D;CostCenter1,CostCenter2,CostCenter3&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Key&#x3D;tag-key,Values&#x3D;Name,Instance-Type,CostCenter&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;Run Command and Maintenance window targets only&lt;/b&gt;: &lt;code&gt;Key&#x3D;resource-groups:Name,Values&#x3D;ProductionResourceGroup&lt;/code&gt; &lt;/p&gt; &lt;p&gt;This example demonstrates how to target all resources in the resource group &lt;b&gt;ProductionResourceGroup&lt;/b&gt; in your maintenance window.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;Maintenance window targets only&lt;/b&gt;: &lt;code&gt;Key&#x3D;resource-groups:ResourceTypeFilters,Values&#x3D;AWS::EC2::INSTANCE,AWS::EC2::VPC&lt;/code&gt; &lt;/p&gt; &lt;p&gt;This example demonstrates how to target only Amazon Elastic Compute Cloud (Amazon EC2) instances and VPCs in your maintenance window.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;Automation targets only&lt;/b&gt;: &lt;code&gt;Key&#x3D;ResourceGroup,Values&#x3D;MyResourceGroup&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;State Manager association targets only&lt;/b&gt;: &lt;code&gt;Key&#x3D;InstanceIds,Values&#x3D;*&lt;/code&gt; &lt;/p&gt; &lt;p&gt;This example demonstrates how to target all managed instances in the Amazon Web Services Region where the association was created.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information about how to send commands that target managed nodes using &lt;code&gt;Key,Value&lt;/code&gt; parameters, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\&quot;&gt;Targeting multiple instances&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Systems Manager User Guide&lt;/i&gt;.&lt;/p&gt;
     * @alias module:model/Target
     */
    constructor() { 
        
        Target.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Target</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Target} obj Optional instance to populate.
     * @return {module:model/Target} The populated <code>Target</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Target();

            if (data.hasOwnProperty('Key')) {
                obj['Key'] = ApiClient.convertToType(data['Key'], 'String');
            }
            if (data.hasOwnProperty('Values')) {
                obj['Values'] = ApiClient.convertToType(data['Values'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Target</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Target</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Key`
        if (data['Key']) { // data not null
          String.validateJSON(data['Key']);
        }
        // validate the optional field `Values`
        if (data['Values']) { // data not null
          Array.validateJSON(data['Values']);
        }

        return true;
    }


}



/**
 * @member {String} Key
 */
Target.prototype['Key'] = undefined;

/**
 * @member {Array} Values
 */
Target.prototype['Values'] = undefined;






export default Target;

