/**
 * Amazon Simple Systems Manager (SSM)
 * <p>Amazon Web Services Systems Manager is the operations hub for your Amazon Web Services applications and resources and a secure end-to-end management solution for hybrid cloud environments that enables safe and secure operations at scale.</p> <p>This reference is intended to be used with the <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/\">Amazon Web Services Systems Manager User Guide</a>. To get started, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html\">Setting up Amazon Web Services Systems Manager</a>.</p> <p class=\"title\"> <b>Related resources</b> </p> <ul> <li> <p>For information about each of the capabilities that comprise Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/systems-manager-capabilities.html\">Systems Manager capabilities</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </li> <li> <p>For details about predefined runbooks for Automation, a capability of Amazon Web Services Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-runbook-reference.html\">Systems Manager Automation runbook reference</a> </i>.</p> </li> <li> <p>For information about AppConfig, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/\">AppConfig User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/\">AppConfig API Reference</a> </i>.</p> </li> <li> <p>For information about Incident Manager, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/userguide/\">Systems Manager Incident Manager User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/APIReference/\">Systems Manager Incident Manager API Reference</a> </i>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2014-11-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AlarmConfiguration from './AlarmConfiguration';
import AssociationComplianceSeverity from './AssociationComplianceSeverity';
import AssociationDescription from './AssociationDescription';
import AssociationDescriptionOutputLocation from './AssociationDescriptionOutputLocation';
import AssociationOverview from './AssociationOverview';
import AssociationSyncCompliance from './AssociationSyncCompliance';
import UpdateAssociationStatusRequestAssociationStatus from './UpdateAssociationStatusRequestAssociationStatus';

/**
 * The CreateAssociationResultAssociationDescription model module.
 * @module model/CreateAssociationResultAssociationDescription
 * @version 2014-11-06
 */
class CreateAssociationResultAssociationDescription {
    /**
     * Constructs a new <code>CreateAssociationResultAssociationDescription</code>.
     * @alias module:model/CreateAssociationResultAssociationDescription
     * @implements module:model/AssociationDescription
     */
    constructor() { 
        AssociationDescription.initialize(this);
        CreateAssociationResultAssociationDescription.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateAssociationResultAssociationDescription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateAssociationResultAssociationDescription} obj Optional instance to populate.
     * @return {module:model/CreateAssociationResultAssociationDescription} The populated <code>CreateAssociationResultAssociationDescription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateAssociationResultAssociationDescription();
            AssociationDescription.constructFromObject(data, obj);

            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('InstanceId')) {
                obj['InstanceId'] = ApiClient.convertToType(data['InstanceId'], 'String');
            }
            if (data.hasOwnProperty('AssociationVersion')) {
                obj['AssociationVersion'] = ApiClient.convertToType(data['AssociationVersion'], 'String');
            }
            if (data.hasOwnProperty('Date')) {
                obj['Date'] = ApiClient.convertToType(data['Date'], 'Date');
            }
            if (data.hasOwnProperty('LastUpdateAssociationDate')) {
                obj['LastUpdateAssociationDate'] = ApiClient.convertToType(data['LastUpdateAssociationDate'], 'Date');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = UpdateAssociationStatusRequestAssociationStatus.constructFromObject(data['Status']);
            }
            if (data.hasOwnProperty('Overview')) {
                obj['Overview'] = AssociationOverview.constructFromObject(data['Overview']);
            }
            if (data.hasOwnProperty('DocumentVersion')) {
                obj['DocumentVersion'] = ApiClient.convertToType(data['DocumentVersion'], 'String');
            }
            if (data.hasOwnProperty('AutomationTargetParameterName')) {
                obj['AutomationTargetParameterName'] = ApiClient.convertToType(data['AutomationTargetParameterName'], 'String');
            }
            if (data.hasOwnProperty('Parameters')) {
                obj['Parameters'] = ApiClient.convertToType(data['Parameters'], Object);
            }
            if (data.hasOwnProperty('AssociationId')) {
                obj['AssociationId'] = ApiClient.convertToType(data['AssociationId'], 'String');
            }
            if (data.hasOwnProperty('Targets')) {
                obj['Targets'] = ApiClient.convertToType(data['Targets'], Array);
            }
            if (data.hasOwnProperty('ScheduleExpression')) {
                obj['ScheduleExpression'] = ApiClient.convertToType(data['ScheduleExpression'], 'String');
            }
            if (data.hasOwnProperty('OutputLocation')) {
                obj['OutputLocation'] = AssociationDescriptionOutputLocation.constructFromObject(data['OutputLocation']);
            }
            if (data.hasOwnProperty('LastExecutionDate')) {
                obj['LastExecutionDate'] = ApiClient.convertToType(data['LastExecutionDate'], 'Date');
            }
            if (data.hasOwnProperty('LastSuccessfulExecutionDate')) {
                obj['LastSuccessfulExecutionDate'] = ApiClient.convertToType(data['LastSuccessfulExecutionDate'], 'Date');
            }
            if (data.hasOwnProperty('AssociationName')) {
                obj['AssociationName'] = ApiClient.convertToType(data['AssociationName'], 'String');
            }
            if (data.hasOwnProperty('MaxErrors')) {
                obj['MaxErrors'] = ApiClient.convertToType(data['MaxErrors'], 'String');
            }
            if (data.hasOwnProperty('MaxConcurrency')) {
                obj['MaxConcurrency'] = ApiClient.convertToType(data['MaxConcurrency'], 'String');
            }
            if (data.hasOwnProperty('ComplianceSeverity')) {
                obj['ComplianceSeverity'] = ApiClient.convertToType(data['ComplianceSeverity'], AssociationComplianceSeverity);
            }
            if (data.hasOwnProperty('SyncCompliance')) {
                obj['SyncCompliance'] = ApiClient.convertToType(data['SyncCompliance'], AssociationSyncCompliance);
            }
            if (data.hasOwnProperty('ApplyOnlyAtCronInterval')) {
                obj['ApplyOnlyAtCronInterval'] = ApiClient.convertToType(data['ApplyOnlyAtCronInterval'], 'Boolean');
            }
            if (data.hasOwnProperty('CalendarNames')) {
                obj['CalendarNames'] = ApiClient.convertToType(data['CalendarNames'], Array);
            }
            if (data.hasOwnProperty('TargetLocations')) {
                obj['TargetLocations'] = ApiClient.convertToType(data['TargetLocations'], Array);
            }
            if (data.hasOwnProperty('ScheduleOffset')) {
                obj['ScheduleOffset'] = ApiClient.convertToType(data['ScheduleOffset'], 'Number');
            }
            if (data.hasOwnProperty('TargetMaps')) {
                obj['TargetMaps'] = ApiClient.convertToType(data['TargetMaps'], Array);
            }
            if (data.hasOwnProperty('AlarmConfiguration')) {
                obj['AlarmConfiguration'] = AlarmConfiguration.constructFromObject(data['AlarmConfiguration']);
            }
            if (data.hasOwnProperty('TriggeredAlarms')) {
                obj['TriggeredAlarms'] = ApiClient.convertToType(data['TriggeredAlarms'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateAssociationResultAssociationDescription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateAssociationResultAssociationDescription</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `InstanceId`
        if (data['InstanceId']) { // data not null
          String.validateJSON(data['InstanceId']);
        }
        // validate the optional field `AssociationVersion`
        if (data['AssociationVersion']) { // data not null
          String.validateJSON(data['AssociationVersion']);
        }
        // validate the optional field `Date`
        if (data['Date']) { // data not null
          Date.validateJSON(data['Date']);
        }
        // validate the optional field `LastUpdateAssociationDate`
        if (data['LastUpdateAssociationDate']) { // data not null
          Date.validateJSON(data['LastUpdateAssociationDate']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          UpdateAssociationStatusRequestAssociationStatus.validateJSON(data['Status']);
        }
        // validate the optional field `Overview`
        if (data['Overview']) { // data not null
          AssociationOverview.validateJSON(data['Overview']);
        }
        // validate the optional field `DocumentVersion`
        if (data['DocumentVersion']) { // data not null
          String.validateJSON(data['DocumentVersion']);
        }
        // validate the optional field `AutomationTargetParameterName`
        if (data['AutomationTargetParameterName']) { // data not null
          String.validateJSON(data['AutomationTargetParameterName']);
        }
        // validate the optional field `Parameters`
        if (data['Parameters']) { // data not null
          Object.validateJSON(data['Parameters']);
        }
        // validate the optional field `AssociationId`
        if (data['AssociationId']) { // data not null
          String.validateJSON(data['AssociationId']);
        }
        // validate the optional field `Targets`
        if (data['Targets']) { // data not null
          Array.validateJSON(data['Targets']);
        }
        // validate the optional field `ScheduleExpression`
        if (data['ScheduleExpression']) { // data not null
          String.validateJSON(data['ScheduleExpression']);
        }
        // validate the optional field `OutputLocation`
        if (data['OutputLocation']) { // data not null
          AssociationDescriptionOutputLocation.validateJSON(data['OutputLocation']);
        }
        // validate the optional field `LastExecutionDate`
        if (data['LastExecutionDate']) { // data not null
          Date.validateJSON(data['LastExecutionDate']);
        }
        // validate the optional field `LastSuccessfulExecutionDate`
        if (data['LastSuccessfulExecutionDate']) { // data not null
          Date.validateJSON(data['LastSuccessfulExecutionDate']);
        }
        // validate the optional field `AssociationName`
        if (data['AssociationName']) { // data not null
          String.validateJSON(data['AssociationName']);
        }
        // validate the optional field `MaxErrors`
        if (data['MaxErrors']) { // data not null
          String.validateJSON(data['MaxErrors']);
        }
        // validate the optional field `MaxConcurrency`
        if (data['MaxConcurrency']) { // data not null
          String.validateJSON(data['MaxConcurrency']);
        }
        // validate the optional field `ComplianceSeverity`
        if (data['ComplianceSeverity']) { // data not null
          AssociationComplianceSeverity.validateJSON(data['ComplianceSeverity']);
        }
        // validate the optional field `SyncCompliance`
        if (data['SyncCompliance']) { // data not null
          AssociationSyncCompliance.validateJSON(data['SyncCompliance']);
        }
        // validate the optional field `ApplyOnlyAtCronInterval`
        if (data['ApplyOnlyAtCronInterval']) { // data not null
          Boolean.validateJSON(data['ApplyOnlyAtCronInterval']);
        }
        // validate the optional field `CalendarNames`
        if (data['CalendarNames']) { // data not null
          Array.validateJSON(data['CalendarNames']);
        }
        // validate the optional field `TargetLocations`
        if (data['TargetLocations']) { // data not null
          Array.validateJSON(data['TargetLocations']);
        }
        // validate the optional field `ScheduleOffset`
        if (data['ScheduleOffset']) { // data not null
          Number.validateJSON(data['ScheduleOffset']);
        }
        // validate the optional field `TargetMaps`
        if (data['TargetMaps']) { // data not null
          Array.validateJSON(data['TargetMaps']);
        }
        // validate the optional field `AlarmConfiguration`
        if (data['AlarmConfiguration']) { // data not null
          AlarmConfiguration.validateJSON(data['AlarmConfiguration']);
        }
        // validate the optional field `TriggeredAlarms`
        if (data['TriggeredAlarms']) { // data not null
          Array.validateJSON(data['TriggeredAlarms']);
        }

        return true;
    }


}



/**
 * @member {String} Name
 */
CreateAssociationResultAssociationDescription.prototype['Name'] = undefined;

/**
 * @member {String} InstanceId
 */
CreateAssociationResultAssociationDescription.prototype['InstanceId'] = undefined;

/**
 * @member {String} AssociationVersion
 */
CreateAssociationResultAssociationDescription.prototype['AssociationVersion'] = undefined;

/**
 * @member {Date} Date
 */
CreateAssociationResultAssociationDescription.prototype['Date'] = undefined;

/**
 * @member {Date} LastUpdateAssociationDate
 */
CreateAssociationResultAssociationDescription.prototype['LastUpdateAssociationDate'] = undefined;

/**
 * @member {module:model/UpdateAssociationStatusRequestAssociationStatus} Status
 */
CreateAssociationResultAssociationDescription.prototype['Status'] = undefined;

/**
 * @member {module:model/AssociationOverview} Overview
 */
CreateAssociationResultAssociationDescription.prototype['Overview'] = undefined;

/**
 * @member {String} DocumentVersion
 */
CreateAssociationResultAssociationDescription.prototype['DocumentVersion'] = undefined;

/**
 * @member {String} AutomationTargetParameterName
 */
CreateAssociationResultAssociationDescription.prototype['AutomationTargetParameterName'] = undefined;

/**
 * @member {Object} Parameters
 */
CreateAssociationResultAssociationDescription.prototype['Parameters'] = undefined;

/**
 * @member {String} AssociationId
 */
CreateAssociationResultAssociationDescription.prototype['AssociationId'] = undefined;

/**
 * @member {Array} Targets
 */
CreateAssociationResultAssociationDescription.prototype['Targets'] = undefined;

/**
 * @member {String} ScheduleExpression
 */
CreateAssociationResultAssociationDescription.prototype['ScheduleExpression'] = undefined;

/**
 * @member {module:model/AssociationDescriptionOutputLocation} OutputLocation
 */
CreateAssociationResultAssociationDescription.prototype['OutputLocation'] = undefined;

/**
 * @member {Date} LastExecutionDate
 */
CreateAssociationResultAssociationDescription.prototype['LastExecutionDate'] = undefined;

/**
 * @member {Date} LastSuccessfulExecutionDate
 */
CreateAssociationResultAssociationDescription.prototype['LastSuccessfulExecutionDate'] = undefined;

/**
 * @member {String} AssociationName
 */
CreateAssociationResultAssociationDescription.prototype['AssociationName'] = undefined;

/**
 * @member {String} MaxErrors
 */
CreateAssociationResultAssociationDescription.prototype['MaxErrors'] = undefined;

/**
 * @member {String} MaxConcurrency
 */
CreateAssociationResultAssociationDescription.prototype['MaxConcurrency'] = undefined;

/**
 * @member {module:model/AssociationComplianceSeverity} ComplianceSeverity
 */
CreateAssociationResultAssociationDescription.prototype['ComplianceSeverity'] = undefined;

/**
 * @member {module:model/AssociationSyncCompliance} SyncCompliance
 */
CreateAssociationResultAssociationDescription.prototype['SyncCompliance'] = undefined;

/**
 * @member {Boolean} ApplyOnlyAtCronInterval
 */
CreateAssociationResultAssociationDescription.prototype['ApplyOnlyAtCronInterval'] = undefined;

/**
 * @member {Array} CalendarNames
 */
CreateAssociationResultAssociationDescription.prototype['CalendarNames'] = undefined;

/**
 * @member {Array} TargetLocations
 */
CreateAssociationResultAssociationDescription.prototype['TargetLocations'] = undefined;

/**
 * @member {Number} ScheduleOffset
 */
CreateAssociationResultAssociationDescription.prototype['ScheduleOffset'] = undefined;

/**
 * @member {Array} TargetMaps
 */
CreateAssociationResultAssociationDescription.prototype['TargetMaps'] = undefined;

/**
 * @member {module:model/AlarmConfiguration} AlarmConfiguration
 */
CreateAssociationResultAssociationDescription.prototype['AlarmConfiguration'] = undefined;

/**
 * @member {Array} TriggeredAlarms
 */
CreateAssociationResultAssociationDescription.prototype['TriggeredAlarms'] = undefined;


// Implement AssociationDescription interface:
/**
 * @member {String} Name
 */
AssociationDescription.prototype['Name'] = undefined;
/**
 * @member {String} InstanceId
 */
AssociationDescription.prototype['InstanceId'] = undefined;
/**
 * @member {String} AssociationVersion
 */
AssociationDescription.prototype['AssociationVersion'] = undefined;
/**
 * @member {Date} Date
 */
AssociationDescription.prototype['Date'] = undefined;
/**
 * @member {Date} LastUpdateAssociationDate
 */
AssociationDescription.prototype['LastUpdateAssociationDate'] = undefined;
/**
 * @member {module:model/UpdateAssociationStatusRequestAssociationStatus} Status
 */
AssociationDescription.prototype['Status'] = undefined;
/**
 * @member {module:model/AssociationOverview} Overview
 */
AssociationDescription.prototype['Overview'] = undefined;
/**
 * @member {String} DocumentVersion
 */
AssociationDescription.prototype['DocumentVersion'] = undefined;
/**
 * @member {String} AutomationTargetParameterName
 */
AssociationDescription.prototype['AutomationTargetParameterName'] = undefined;
/**
 * @member {Object} Parameters
 */
AssociationDescription.prototype['Parameters'] = undefined;
/**
 * @member {String} AssociationId
 */
AssociationDescription.prototype['AssociationId'] = undefined;
/**
 * @member {Array} Targets
 */
AssociationDescription.prototype['Targets'] = undefined;
/**
 * @member {String} ScheduleExpression
 */
AssociationDescription.prototype['ScheduleExpression'] = undefined;
/**
 * @member {module:model/AssociationDescriptionOutputLocation} OutputLocation
 */
AssociationDescription.prototype['OutputLocation'] = undefined;
/**
 * @member {Date} LastExecutionDate
 */
AssociationDescription.prototype['LastExecutionDate'] = undefined;
/**
 * @member {Date} LastSuccessfulExecutionDate
 */
AssociationDescription.prototype['LastSuccessfulExecutionDate'] = undefined;
/**
 * @member {String} AssociationName
 */
AssociationDescription.prototype['AssociationName'] = undefined;
/**
 * @member {String} MaxErrors
 */
AssociationDescription.prototype['MaxErrors'] = undefined;
/**
 * @member {String} MaxConcurrency
 */
AssociationDescription.prototype['MaxConcurrency'] = undefined;
/**
 * @member {module:model/AssociationComplianceSeverity} ComplianceSeverity
 */
AssociationDescription.prototype['ComplianceSeverity'] = undefined;
/**
 * @member {module:model/AssociationSyncCompliance} SyncCompliance
 */
AssociationDescription.prototype['SyncCompliance'] = undefined;
/**
 * @member {Boolean} ApplyOnlyAtCronInterval
 */
AssociationDescription.prototype['ApplyOnlyAtCronInterval'] = undefined;
/**
 * @member {Array} CalendarNames
 */
AssociationDescription.prototype['CalendarNames'] = undefined;
/**
 * @member {Array} TargetLocations
 */
AssociationDescription.prototype['TargetLocations'] = undefined;
/**
 * @member {Number} ScheduleOffset
 */
AssociationDescription.prototype['ScheduleOffset'] = undefined;
/**
 * @member {Array} TargetMaps
 */
AssociationDescription.prototype['TargetMaps'] = undefined;
/**
 * @member {module:model/AlarmConfiguration} AlarmConfiguration
 */
AssociationDescription.prototype['AlarmConfiguration'] = undefined;
/**
 * @member {Array} TriggeredAlarms
 */
AssociationDescription.prototype['TriggeredAlarms'] = undefined;




export default CreateAssociationResultAssociationDescription;

