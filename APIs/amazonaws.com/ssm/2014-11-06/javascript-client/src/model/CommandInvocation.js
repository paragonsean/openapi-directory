/**
 * Amazon Simple Systems Manager (SSM)
 * <p>Amazon Web Services Systems Manager is the operations hub for your Amazon Web Services applications and resources and a secure end-to-end management solution for hybrid cloud environments that enables safe and secure operations at scale.</p> <p>This reference is intended to be used with the <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/\">Amazon Web Services Systems Manager User Guide</a>. To get started, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html\">Setting up Amazon Web Services Systems Manager</a>.</p> <p class=\"title\"> <b>Related resources</b> </p> <ul> <li> <p>For information about each of the capabilities that comprise Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/systems-manager-capabilities.html\">Systems Manager capabilities</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </li> <li> <p>For details about predefined runbooks for Automation, a capability of Amazon Web Services Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-runbook-reference.html\">Systems Manager Automation runbook reference</a> </i>.</p> </li> <li> <p>For information about AppConfig, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/\">AppConfig User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/\">AppConfig API Reference</a> </i>.</p> </li> <li> <p>For information about Incident Manager, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/userguide/\">Systems Manager Incident Manager User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/APIReference/\">Systems Manager Incident Manager API Reference</a> </i>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2014-11-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CommandCloudWatchOutputConfig from './CommandCloudWatchOutputConfig';
import CommandInvocationNotificationConfig from './CommandInvocationNotificationConfig';
import CommandInvocationStatus from './CommandInvocationStatus';

/**
 * The CommandInvocation model module.
 * @module model/CommandInvocation
 * @version 2014-11-06
 */
class CommandInvocation {
    /**
     * Constructs a new <code>CommandInvocation</code>.
     * An invocation is a copy of a command sent to a specific managed node. A command can apply to one or more managed nodes. A command invocation applies to one managed node. For example, if a user runs &lt;code&gt;SendCommand&lt;/code&gt; against three managed nodes, then a command invocation is created for each requested managed node ID. A command invocation returns status and detail information about a command you ran. 
     * @alias module:model/CommandInvocation
     */
    constructor() { 
        
        CommandInvocation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CommandInvocation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CommandInvocation} obj Optional instance to populate.
     * @return {module:model/CommandInvocation} The populated <code>CommandInvocation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CommandInvocation();

            if (data.hasOwnProperty('CommandId')) {
                obj['CommandId'] = ApiClient.convertToType(data['CommandId'], 'String');
            }
            if (data.hasOwnProperty('InstanceId')) {
                obj['InstanceId'] = ApiClient.convertToType(data['InstanceId'], 'String');
            }
            if (data.hasOwnProperty('InstanceName')) {
                obj['InstanceName'] = ApiClient.convertToType(data['InstanceName'], 'String');
            }
            if (data.hasOwnProperty('Comment')) {
                obj['Comment'] = ApiClient.convertToType(data['Comment'], 'String');
            }
            if (data.hasOwnProperty('DocumentName')) {
                obj['DocumentName'] = ApiClient.convertToType(data['DocumentName'], 'String');
            }
            if (data.hasOwnProperty('DocumentVersion')) {
                obj['DocumentVersion'] = ApiClient.convertToType(data['DocumentVersion'], 'String');
            }
            if (data.hasOwnProperty('RequestedDateTime')) {
                obj['RequestedDateTime'] = ApiClient.convertToType(data['RequestedDateTime'], 'Date');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], CommandInvocationStatus);
            }
            if (data.hasOwnProperty('StatusDetails')) {
                obj['StatusDetails'] = ApiClient.convertToType(data['StatusDetails'], 'String');
            }
            if (data.hasOwnProperty('TraceOutput')) {
                obj['TraceOutput'] = ApiClient.convertToType(data['TraceOutput'], 'String');
            }
            if (data.hasOwnProperty('StandardOutputUrl')) {
                obj['StandardOutputUrl'] = ApiClient.convertToType(data['StandardOutputUrl'], 'String');
            }
            if (data.hasOwnProperty('StandardErrorUrl')) {
                obj['StandardErrorUrl'] = ApiClient.convertToType(data['StandardErrorUrl'], 'String');
            }
            if (data.hasOwnProperty('CommandPlugins')) {
                obj['CommandPlugins'] = ApiClient.convertToType(data['CommandPlugins'], Array);
            }
            if (data.hasOwnProperty('ServiceRole')) {
                obj['ServiceRole'] = ApiClient.convertToType(data['ServiceRole'], 'String');
            }
            if (data.hasOwnProperty('NotificationConfig')) {
                obj['NotificationConfig'] = CommandInvocationNotificationConfig.constructFromObject(data['NotificationConfig']);
            }
            if (data.hasOwnProperty('CloudWatchOutputConfig')) {
                obj['CloudWatchOutputConfig'] = CommandCloudWatchOutputConfig.constructFromObject(data['CloudWatchOutputConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CommandInvocation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CommandInvocation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `CommandId`
        if (data['CommandId']) { // data not null
          String.validateJSON(data['CommandId']);
        }
        // validate the optional field `InstanceId`
        if (data['InstanceId']) { // data not null
          String.validateJSON(data['InstanceId']);
        }
        // validate the optional field `InstanceName`
        if (data['InstanceName']) { // data not null
          String.validateJSON(data['InstanceName']);
        }
        // validate the optional field `Comment`
        if (data['Comment']) { // data not null
          String.validateJSON(data['Comment']);
        }
        // validate the optional field `DocumentName`
        if (data['DocumentName']) { // data not null
          String.validateJSON(data['DocumentName']);
        }
        // validate the optional field `DocumentVersion`
        if (data['DocumentVersion']) { // data not null
          String.validateJSON(data['DocumentVersion']);
        }
        // validate the optional field `RequestedDateTime`
        if (data['RequestedDateTime']) { // data not null
          Date.validateJSON(data['RequestedDateTime']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          CommandInvocationStatus.validateJSON(data['Status']);
        }
        // validate the optional field `StatusDetails`
        if (data['StatusDetails']) { // data not null
          String.validateJSON(data['StatusDetails']);
        }
        // validate the optional field `TraceOutput`
        if (data['TraceOutput']) { // data not null
          String.validateJSON(data['TraceOutput']);
        }
        // validate the optional field `StandardOutputUrl`
        if (data['StandardOutputUrl']) { // data not null
          String.validateJSON(data['StandardOutputUrl']);
        }
        // validate the optional field `StandardErrorUrl`
        if (data['StandardErrorUrl']) { // data not null
          String.validateJSON(data['StandardErrorUrl']);
        }
        // validate the optional field `CommandPlugins`
        if (data['CommandPlugins']) { // data not null
          Array.validateJSON(data['CommandPlugins']);
        }
        // validate the optional field `ServiceRole`
        if (data['ServiceRole']) { // data not null
          String.validateJSON(data['ServiceRole']);
        }
        // validate the optional field `NotificationConfig`
        if (data['NotificationConfig']) { // data not null
          CommandInvocationNotificationConfig.validateJSON(data['NotificationConfig']);
        }
        // validate the optional field `CloudWatchOutputConfig`
        if (data['CloudWatchOutputConfig']) { // data not null
          CommandCloudWatchOutputConfig.validateJSON(data['CloudWatchOutputConfig']);
        }

        return true;
    }


}



/**
 * @member {String} CommandId
 */
CommandInvocation.prototype['CommandId'] = undefined;

/**
 * @member {String} InstanceId
 */
CommandInvocation.prototype['InstanceId'] = undefined;

/**
 * @member {String} InstanceName
 */
CommandInvocation.prototype['InstanceName'] = undefined;

/**
 * @member {String} Comment
 */
CommandInvocation.prototype['Comment'] = undefined;

/**
 * @member {String} DocumentName
 */
CommandInvocation.prototype['DocumentName'] = undefined;

/**
 * @member {String} DocumentVersion
 */
CommandInvocation.prototype['DocumentVersion'] = undefined;

/**
 * @member {Date} RequestedDateTime
 */
CommandInvocation.prototype['RequestedDateTime'] = undefined;

/**
 * @member {module:model/CommandInvocationStatus} Status
 */
CommandInvocation.prototype['Status'] = undefined;

/**
 * @member {String} StatusDetails
 */
CommandInvocation.prototype['StatusDetails'] = undefined;

/**
 * @member {String} TraceOutput
 */
CommandInvocation.prototype['TraceOutput'] = undefined;

/**
 * @member {String} StandardOutputUrl
 */
CommandInvocation.prototype['StandardOutputUrl'] = undefined;

/**
 * @member {String} StandardErrorUrl
 */
CommandInvocation.prototype['StandardErrorUrl'] = undefined;

/**
 * @member {Array} CommandPlugins
 */
CommandInvocation.prototype['CommandPlugins'] = undefined;

/**
 * @member {String} ServiceRole
 */
CommandInvocation.prototype['ServiceRole'] = undefined;

/**
 * @member {module:model/CommandInvocationNotificationConfig} NotificationConfig
 */
CommandInvocation.prototype['NotificationConfig'] = undefined;

/**
 * @member {module:model/CommandCloudWatchOutputConfig} CloudWatchOutputConfig
 */
CommandInvocation.prototype['CloudWatchOutputConfig'] = undefined;






export default CommandInvocation;

