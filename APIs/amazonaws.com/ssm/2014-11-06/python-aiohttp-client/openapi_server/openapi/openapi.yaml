openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p>Amazon Web Services Systems Manager is the operations hub for your\
    \ Amazon Web Services applications and resources and a secure end-to-end management\
    \ solution for hybrid cloud environments that enables safe and secure operations\
    \ at scale.</p> <p>This reference is intended to be used with the <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/\"\
    >Amazon Web Services Systems Manager User Guide</a>. To get started, see <a href=\"\
    https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html\"\
    >Setting up Amazon Web Services Systems Manager</a>.</p> <p class=\"title\"> <b>Related\
    \ resources</b> </p> <ul> <li> <p>For information about each of the capabilities\
    \ that comprise Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/systems-manager-capabilities.html\"\
    >Systems Manager capabilities</a> in the <i>Amazon Web Services Systems Manager\
    \ User Guide</i>.</p> </li> <li> <p>For details about predefined runbooks for\
    \ Automation, a capability of Amazon Web Services Systems Manager, see the <i>\
    \ <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-runbook-reference.html\"\
    >Systems Manager Automation runbook reference</a> </i>.</p> </li> <li> <p>For\
    \ information about AppConfig, a capability of Systems Manager, see the <i> <a\
    \ href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/\">AppConfig User\
    \ Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/\"\
    >AppConfig API Reference</a> </i>.</p> </li> <li> <p>For information about Incident\
    \ Manager, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/userguide/\"\
    >Systems Manager Incident Manager User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/APIReference/\"\
    >Systems Manager Incident Manager API Reference</a> </i>.</p> </li> </ul>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon Simple Systems Manager (SSM)
  version: 2014-11-06
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: ssm
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/ssm-2014-11-06.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/ssm/
servers:
- description: The Amazon SSM multi-region endpoint
  url: "http://ssm.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon SSM multi-region endpoint
  url: "https://ssm.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon SSM endpoint for China (Beijing) and China (Ningxia)
  url: "http://ssm.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon SSM endpoint for China (Beijing) and China (Ningxia)
  url: "https://ssm.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=AmazonSSM.AddTagsToResource:
    post:
      description: "<p>Adds or overwrites one or more tags for the specified resource.\
        \ <i>Tags</i> are metadata that you can assign to your automations, documents,\
        \ managed nodes, maintenance windows, Parameter Store parameters, and patch\
        \ baselines. Tags enable you to categorize your resources in different ways,\
        \ for example, by purpose, owner, or environment. Each tag consists of a key\
        \ and an optional value, both of which you define. For example, you could\
        \ define a set of tags for your account's managed nodes that helps you track\
        \ each node's owner and stack level. For example:</p> <ul> <li> <p> <code>Key=Owner,Value=DbAdmin</code>\
        \ </p> </li> <li> <p> <code>Key=Owner,Value=SysAdmin</code> </p> </li> <li>\
        \ <p> <code>Key=Owner,Value=Dev</code> </p> </li> <li> <p> <code>Key=Stack,Value=Production</code>\
        \ </p> </li> <li> <p> <code>Key=Stack,Value=Pre-Production</code> </p> </li>\
        \ <li> <p> <code>Key=Stack,Value=Test</code> </p> </li> </ul> <p>Most resources\
        \ can have a maximum of 50 tags. Automations can have a maximum of 5 tags.</p>\
        \ <p>We recommend that you devise a set of tag keys that meets your needs\
        \ for each resource type. Using a consistent set of tag keys makes it easier\
        \ for you to manage your resources. You can search and filter the resources\
        \ based on the tags you add. Tags don't have any semantic meaning to and are\
        \ interpreted strictly as a string of characters.</p> <p>For more information\
        \ about using tags with Amazon Elastic Compute Cloud (Amazon EC2) instances,\
        \ see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html\"\
        >Tagging your Amazon EC2 resources</a> in the <i>Amazon EC2 User Guide</i>.</p>"
      operationId: add_tags_to_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.AddTagsToResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTagsToResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddTagsToResourceResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceType'
          description: InvalidResourceType
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceId'
          description: InvalidResourceId
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsError'
          description: TooManyTagsError
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyUpdates'
          description: TooManyUpdates
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.AssociateOpsItemRelatedItem:
    post:
      description: "Associates a related item to a Systems Manager OpsCenter OpsItem.\
        \ For example, you can associate an Incident Manager incident or analysis\
        \ with an OpsItem. Incident Manager and OpsCenter are capabilities of Amazon\
        \ Web Services Systems Manager."
      operationId: associate_ops_item_related_item
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.AssociateOpsItemRelatedItem
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateOpsItemRelatedItemRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateOpsItemRelatedItemResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsItemNotFoundException'
          description: OpsItemNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsItemLimitExceededException'
          description: OpsItemLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsItemInvalidParameterException'
          description: OpsItemInvalidParameterException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsItemRelatedItemAlreadyExistsException'
          description: OpsItemRelatedItemAlreadyExistsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.CancelCommand:
    post:
      description: Attempts to cancel the command specified by the Command ID. There
        is no guarantee that the command will be terminated and the underlying process
        stopped.
      operationId: cancel_command
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.CancelCommand
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelCommandRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelCommandResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCommandId'
          description: InvalidCommandId
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceId'
          description: InvalidInstanceId
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateInstanceId'
          description: DuplicateInstanceId
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.CancelMaintenanceWindowExecution:
    post:
      description: Stops a maintenance window execution that is already in progress
        and cancels any tasks in the window that haven't already starting running.
        Tasks already in progress will continue to completion.
      operationId: cancel_maintenance_window_execution
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.CancelMaintenanceWindowExecution
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelMaintenanceWindowExecutionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelMaintenanceWindowExecutionResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
          description: DoesNotExistException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.CreateActivation:
    post:
      description: "<p>Generates an activation code and activation ID you can use\
        \ to register your on-premises servers, edge devices, or virtual machine (VM)\
        \ with Amazon Web Services Systems Manager. Registering these machines with\
        \ Systems Manager makes it possible to manage them using Systems Manager capabilities.\
        \ You use the activation code and ID when installing SSM Agent on machines\
        \ in your hybrid environment. For more information about requirements for\
        \ managing on-premises machines using Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-managedinstances.html\"\
        >Setting up Amazon Web Services Systems Manager for hybrid environments</a>\
        \ in the <i>Amazon Web Services Systems Manager User Guide</i>. </p> <note>\
        \ <p>Amazon Elastic Compute Cloud (Amazon EC2) instances, edge devices, and\
        \ on-premises servers and VMs that are configured for Systems Manager are\
        \ all called <i>managed nodes</i>.</p> </note>"
      operationId: create_activation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.CreateActivation
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateActivationRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateActivationResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameters'
          description: InvalidParameters
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.CreateAssociation:
    post:
      description: "A State Manager association defines the state that you want to\
        \ maintain on your managed nodes. For example, an association can specify\
        \ that anti-virus software must be installed and running on your managed nodes,\
        \ or that certain ports must be closed. For static targets, the association\
        \ specifies a schedule for when the configuration is reapplied. For dynamic\
        \ targets, such as an Amazon Web Services resource group or an Amazon Web\
        \ Services autoscaling group, State Manager, a capability of Amazon Web Services\
        \ Systems Manager applies the configuration when new managed nodes are added\
        \ to the group. The association also specifies actions to take when applying\
        \ the configuration. For example, an association for anti-virus software might\
        \ run once a day. If the software isn't installed, then State Manager installs\
        \ it. If the software is installed, but the service isn't running, then the\
        \ association might instruct State Manager to start the service. "
      operationId: create_association
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.CreateAssociation
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAssociationRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAssociationResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationAlreadyExists'
          description: AssociationAlreadyExists
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationLimitExceeded'
          description: AssociationLimitExceeded
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocument'
          description: InvalidDocument
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocumentVersion'
          description: InvalidDocumentVersion
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceId'
          description: InvalidInstanceId
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedPlatformType'
          description: UnsupportedPlatformType
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidOutputLocation'
          description: InvalidOutputLocation
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameters'
          description: InvalidParameters
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTarget'
          description: InvalidTarget
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSchedule'
          description: InvalidSchedule
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTargetMaps'
          description: InvalidTargetMaps
        "492":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTag'
          description: InvalidTag
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.CreateAssociationBatch:
    post:
      description: "<p>Associates the specified Amazon Web Services Systems Manager\
        \ document (SSM document) with the specified managed nodes or targets.</p>\
        \ <p>When you associate a document with one or more managed nodes using IDs\
        \ or tags, Amazon Web Services Systems Manager Agent (SSM Agent) running on\
        \ the managed node processes the document and configures the node as specified.</p>\
        \ <p>If you associate a document with a managed node that already has an associated\
        \ document, the system returns the AssociationAlreadyExists exception.</p>"
      operationId: create_association_batch
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.CreateAssociationBatch
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAssociationBatchRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAssociationBatchResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocument'
          description: InvalidDocument
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocumentVersion'
          description: InvalidDocumentVersion
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceId'
          description: InvalidInstanceId
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameters'
          description: InvalidParameters
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateInstanceId'
          description: DuplicateInstanceId
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationLimitExceeded'
          description: AssociationLimitExceeded
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedPlatformType'
          description: UnsupportedPlatformType
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidOutputLocation'
          description: InvalidOutputLocation
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTarget'
          description: InvalidTarget
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSchedule'
          description: InvalidSchedule
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTargetMaps'
          description: InvalidTargetMaps
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.CreateDocument:
    post:
      description: "Creates a Amazon Web Services Systems Manager (SSM document).\
        \ An SSM document defines the actions that Systems Manager performs on your\
        \ managed nodes. For more information about SSM documents, including information\
        \ about supported schemas, features, and syntax, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-ssm-docs.html\"\
        >Amazon Web Services Systems Manager Documents</a> in the <i>Amazon Web Services\
        \ Systems Manager User Guide</i>."
      operationId: create_document
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.CreateDocument
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDocumentRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDocumentResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentAlreadyExists'
          description: DocumentAlreadyExists
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaxDocumentSizeExceeded'
          description: MaxDocumentSizeExceeded
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocumentContent'
          description: InvalidDocumentContent
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentLimitExceeded'
          description: DocumentLimitExceeded
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocumentSchemaVersion'
          description: InvalidDocumentSchemaVersion
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.CreateMaintenanceWindow:
    post:
      description: "<p>Creates a new maintenance window.</p> <note> <p>The value you\
        \ specify for <code>Duration</code> determines the specific end time for the\
        \ maintenance window based on the time it begins. No maintenance window tasks\
        \ are permitted to start after the resulting endtime minus the number of hours\
        \ you specify for <code>Cutoff</code>. For example, if the maintenance window\
        \ starts at 3 PM, the duration is three hours, and the value you specify for\
        \ <code>Cutoff</code> is one hour, no maintenance window tasks can start after\
        \ 5 PM.</p> </note>"
      operationId: create_maintenance_window
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.CreateMaintenanceWindow
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMaintenanceWindowRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMaintenanceWindowResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatch'
          description: IdempotentParameterMismatch
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.CreateOpsItem:
    post:
      description: "<p>Creates a new OpsItem. You must have permission in Identity\
        \ and Access Management (IAM) to create a new OpsItem. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-setup.html\"\
        >Set up OpsCenter</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p>\
        \ <p>Operations engineers and IT professionals use Amazon Web Services Systems\
        \ Manager OpsCenter to view, investigate, and remediate operational issues\
        \ impacting the performance and health of their Amazon Web Services resources.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter.html\"\
        >Amazon Web Services Systems Manager OpsCenter</a> in the <i>Amazon Web Services\
        \ Systems Manager User Guide</i>. </p>"
      operationId: create_ops_item
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.CreateOpsItem
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOpsItemRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOpsItemResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsItemAlreadyExistsException'
          description: OpsItemAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsItemLimitExceededException'
          description: OpsItemLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsItemInvalidParameterException'
          description: OpsItemInvalidParameterException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsItemAccessDeniedException'
          description: OpsItemAccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.CreateOpsMetadata:
    post:
      description: "If you create a new application in Application Manager, Amazon\
        \ Web Services Systems Manager calls this API operation to specify information\
        \ about the new application, including the application type."
      operationId: create_ops_metadata
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.CreateOpsMetadata
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOpsMetadataRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOpsMetadataResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsMetadataAlreadyExistsException'
          description: OpsMetadataAlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsMetadataTooManyUpdatesException'
          description: OpsMetadataTooManyUpdatesException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsMetadataInvalidArgumentException'
          description: OpsMetadataInvalidArgumentException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsMetadataLimitExceededException'
          description: OpsMetadataLimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.CreatePatchBaseline:
    post:
      description: "<p>Creates a patch baseline.</p> <note> <p>For information about\
        \ valid key-value pairs in <code>PatchFilters</code> for each supported operating\
        \ system type, see <a>PatchFilter</a>.</p> </note>"
      operationId: create_patch_baseline
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.CreatePatchBaseline
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePatchBaselineRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePatchBaselineResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatch'
          description: IdempotentParameterMismatch
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.CreateResourceDataSync:
    post:
      description: "<p>A resource data sync helps you view data from multiple sources\
        \ in a single location. Amazon Web Services Systems Manager offers two types\
        \ of resource data sync: <code>SyncToDestination</code> and <code>SyncFromSource</code>.</p>\
        \ <p>You can configure Systems Manager Inventory to use the <code>SyncToDestination</code>\
        \ type to synchronize Inventory data from multiple Amazon Web Services Regions\
        \ to a single Amazon Simple Storage Service (Amazon S3) bucket. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-inventory-datasync.html\"\
        >Configuring resource data sync for Inventory</a> in the <i>Amazon Web Services\
        \ Systems Manager User Guide</i>.</p> <p>You can configure Systems Manager\
        \ Explorer to use the <code>SyncFromSource</code> type to synchronize operational\
        \ work items (OpsItems) and operational data (OpsData) from multiple Amazon\
        \ Web Services Regions to a single Amazon S3 bucket. This type can synchronize\
        \ OpsItems and OpsData from multiple Amazon Web Services accounts and Amazon\
        \ Web Services Regions or <code>EntireOrganization</code> by using Organizations.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/Explorer-resource-data-sync.html\"\
        >Setting up Systems Manager Explorer to display data from multiple accounts\
        \ and Regions</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p>\
        \ <p>A resource data sync is an asynchronous operation that returns immediately.\
        \ After a successful initial sync is completed, the system continuously syncs\
        \ data. To check the status of a sync, use the <a>ListResourceDataSync</a>.</p>\
        \ <note> <p>By default, data isn't encrypted in Amazon S3. We strongly recommend\
        \ that you enable encryption in Amazon S3 to ensure secure data storage. We\
        \ also recommend that you secure access to the Amazon S3 bucket by creating\
        \ a restrictive bucket policy. </p> </note>"
      operationId: create_resource_data_sync
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.CreateResourceDataSync
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResourceDataSyncRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResourceDataSyncResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceDataSyncCountExceededException'
          description: ResourceDataSyncCountExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceDataSyncAlreadyExistsException'
          description: ResourceDataSyncAlreadyExistsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceDataSyncInvalidConfigurationException'
          description: ResourceDataSyncInvalidConfigurationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DeleteActivation:
    post:
      description: "Deletes an activation. You aren't required to delete an activation.\
        \ If you delete an activation, you can no longer use it to register additional\
        \ managed nodes. Deleting an activation doesn't de-register managed nodes.\
        \ You must manually de-register managed nodes."
      operationId: delete_activation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DeleteActivation
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteActivationRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteActivationResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidActivationId'
          description: InvalidActivationId
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidActivation'
          description: InvalidActivation
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyUpdates'
          description: TooManyUpdates
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DeleteAssociation:
    post:
      description: "<p>Disassociates the specified Amazon Web Services Systems Manager\
        \ document (SSM document) from the specified managed node. If you created\
        \ the association by using the <code>Targets</code> parameter, then you must\
        \ delete the association by using the association ID.</p> <p>When you disassociate\
        \ a document from a managed node, it doesn't change the configuration of the\
        \ node. To change the configuration state of a managed node after you disassociate\
        \ a document, you must create a new document with the desired configuration\
        \ and associate it with the node.</p>"
      operationId: delete_association
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DeleteAssociation
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAssociationRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAssociationResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationDoesNotExist'
          description: AssociationDoesNotExist
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocument'
          description: InvalidDocument
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceId'
          description: InvalidInstanceId
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyUpdates'
          description: TooManyUpdates
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DeleteDocument:
    post:
      description: "<p>Deletes the Amazon Web Services Systems Manager document (SSM\
        \ document) and all managed node associations to the document.</p> <p>Before\
        \ you delete the document, we recommend that you use <a>DeleteAssociation</a>\
        \ to disassociate all managed nodes that are associated with the document.</p>"
      operationId: delete_document
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DeleteDocument
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDocumentRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDocumentResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocument'
          description: InvalidDocument
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocumentOperation'
          description: InvalidDocumentOperation
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociatedInstances'
          description: AssociatedInstances
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DeleteInventory:
    post:
      description: Delete a custom inventory type or the data associated with a custom
        Inventory type. Deleting a custom inventory type is also referred to as deleting
        a custom inventory schema.
      operationId: delete_inventory
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DeleteInventory
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteInventoryRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteInventoryResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTypeNameException'
          description: InvalidTypeNameException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidOptionException'
          description: InvalidOptionException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDeleteInventoryParametersException'
          description: InvalidDeleteInventoryParametersException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInventoryRequestException'
          description: InvalidInventoryRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DeleteMaintenanceWindow:
    post:
      description: Deletes a maintenance window.
      operationId: delete_maintenance_window
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DeleteMaintenanceWindow
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteMaintenanceWindowRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteMaintenanceWindowResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DeleteOpsMetadata:
    post:
      description: Delete OpsMetadata related to an application.
      operationId: delete_ops_metadata
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DeleteOpsMetadata
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteOpsMetadataRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOpsMetadataResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsMetadataNotFoundException'
          description: OpsMetadataNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsMetadataInvalidArgumentException'
          description: OpsMetadataInvalidArgumentException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DeleteParameter:
    post:
      description: "Delete a parameter from the system. After deleting a parameter,\
        \ wait for at least 30 seconds to create a parameter with the same name."
      operationId: delete_parameter
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DeleteParameter
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteParameterRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteParameterResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterNotFound'
          description: ParameterNotFound
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DeleteParameters:
    post:
      description: "Delete a list of parameters. After deleting a parameter, wait\
        \ for at least 30 seconds to create a parameter with the same name."
      operationId: delete_parameters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DeleteParameters
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteParametersRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteParametersResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DeletePatchBaseline:
    post:
      description: Deletes a patch baseline.
      operationId: delete_patch_baseline
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DeletePatchBaseline
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePatchBaselineRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePatchBaselineResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DeleteResourceDataSync:
    post:
      description: "Deletes a resource data sync configuration. After the configuration\
        \ is deleted, changes to data on managed nodes are no longer synced to or\
        \ from the target. Deleting a sync configuration doesn't delete data."
      operationId: delete_resource_data_sync
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DeleteResourceDataSync
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteResourceDataSyncRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResourceDataSyncResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceDataSyncNotFoundException'
          description: ResourceDataSyncNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceDataSyncInvalidConfigurationException'
          description: ResourceDataSyncInvalidConfigurationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DeleteResourcePolicy:
    post:
      description: "Deletes a Systems Manager resource policy. A resource policy helps\
        \ you to define the IAM entity (for example, an Amazon Web Services account)\
        \ that can manage your Systems Manager resources. Currently, <code>OpsItemGroup</code>\
        \ is the only resource that supports Systems Manager resource policies. The\
        \ resource policy for <code>OpsItemGroup</code> enables Amazon Web Services\
        \ accounts to view and interact with OpsCenter operational work items (OpsItems)."
      operationId: delete_resource_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DeleteResourcePolicy
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteResourcePolicyRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResourcePolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePolicyInvalidParameterException'
          description: ResourcePolicyInvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePolicyConflictException'
          description: ResourcePolicyConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DeregisterManagedInstance:
    post:
      description: "Removes the server or virtual machine from the list of registered\
        \ servers. You can reregister the node again at any time. If you don't plan\
        \ to use Run Command on the server, we suggest uninstalling SSM Agent first."
      operationId: deregister_managed_instance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DeregisterManagedInstance
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeregisterManagedInstanceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeregisterManagedInstanceResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceId'
          description: InvalidInstanceId
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DeregisterPatchBaselineForPatchGroup:
    post:
      description: Removes a patch group from a patch baseline.
      operationId: deregister_patch_baseline_for_patch_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DeregisterPatchBaselineForPatchGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeregisterPatchBaselineForPatchGroupRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeregisterPatchBaselineForPatchGroupResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceId'
          description: InvalidResourceId
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DeregisterTargetFromMaintenanceWindow:
    post:
      description: Removes a target from a maintenance window.
      operationId: deregister_target_from_maintenance_window
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DeregisterTargetFromMaintenanceWindow
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeregisterTargetFromMaintenanceWindowRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeregisterTargetFromMaintenanceWindowResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
          description: DoesNotExistException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetInUseException'
          description: TargetInUseException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DeregisterTaskFromMaintenanceWindow:
    post:
      description: Removes a task from a maintenance window.
      operationId: deregister_task_from_maintenance_window
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DeregisterTaskFromMaintenanceWindow
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeregisterTaskFromMaintenanceWindowRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeregisterTaskFromMaintenanceWindowResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
          description: DoesNotExistException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DescribeActivations:
    post:
      description: "Describes details about the activation, such as the date and time\
        \ the activation was created, its expiration date, the Identity and Access\
        \ Management (IAM) role assigned to the managed nodes in the activation, and\
        \ the number of nodes registered by using this activation."
      operationId: describe_activations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DescribeActivations
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeActivationsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeActivationsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilter'
          description: InvalidFilter
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
          description: InvalidNextToken
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DescribeAssociation:
    post:
      description: "Describes the association for the specified target or managed\
        \ node. If you created the association by using the <code>Targets</code> parameter,\
        \ then you must retrieve the association by using the association ID."
      operationId: describe_association
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DescribeAssociation
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAssociationRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAssociationResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationDoesNotExist'
          description: AssociationDoesNotExist
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAssociationVersion'
          description: InvalidAssociationVersion
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocument'
          description: InvalidDocument
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceId'
          description: InvalidInstanceId
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DescribeAssociationExecutionTargets:
    post:
      description: Views information about a specific execution of a specific association.
      operationId: describe_association_execution_targets
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DescribeAssociationExecutionTargets
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAssociationExecutionTargetsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAssociationExecutionTargetsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationDoesNotExist'
          description: AssociationDoesNotExist
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
          description: InvalidNextToken
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationExecutionDoesNotExist'
          description: AssociationExecutionDoesNotExist
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DescribeAssociationExecutions:
    post:
      description: 'Views all executions for a specific association ID. '
      operationId: describe_association_executions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DescribeAssociationExecutions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAssociationExecutionsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAssociationExecutionsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationDoesNotExist'
          description: AssociationDoesNotExist
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
          description: InvalidNextToken
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DescribeAutomationExecutions:
    post:
      description: Provides details about all active and terminated Automation executions.
      operationId: describe_automation_executions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DescribeAutomationExecutions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAutomationExecutionsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAutomationExecutionsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilterKey'
          description: InvalidFilterKey
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilterValue'
          description: InvalidFilterValue
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
          description: InvalidNextToken
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DescribeAutomationStepExecutions:
    post:
      description: Information about all active and terminated step executions in
        an Automation workflow.
      operationId: describe_automation_step_executions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DescribeAutomationStepExecutions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAutomationStepExecutionsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAutomationStepExecutionsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationExecutionNotFoundException'
          description: AutomationExecutionNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
          description: InvalidNextToken
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilterKey'
          description: InvalidFilterKey
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilterValue'
          description: InvalidFilterValue
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DescribeAvailablePatches:
    post:
      description: Lists all patches eligible to be included in a patch baseline.
      operationId: describe_available_patches
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DescribeAvailablePatches
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAvailablePatchesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAvailablePatchesResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DescribeDocument:
    post:
      description: Describes the specified Amazon Web Services Systems Manager document
        (SSM document).
      operationId: describe_document
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DescribeDocument
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDocumentRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDocumentResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocument'
          description: InvalidDocument
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocumentVersion'
          description: InvalidDocumentVersion
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DescribeDocumentPermission:
    post:
      description: "Describes the permissions for a Amazon Web Services Systems Manager\
        \ document (SSM document). If you created the document, you are the owner.\
        \ If a document is shared, it can either be shared privately (by specifying\
        \ a user's Amazon Web Services account ID) or publicly (<i>All</i>). "
      operationId: describe_document_permission
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DescribeDocumentPermission
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDocumentPermissionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDocumentPermissionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocument'
          description: InvalidDocument
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
          description: InvalidNextToken
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPermissionType'
          description: InvalidPermissionType
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocumentOperation'
          description: InvalidDocumentOperation
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DescribeEffectiveInstanceAssociations:
    post:
      description: All associations for the managed node(s).
      operationId: describe_effective_instance_associations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DescribeEffectiveInstanceAssociations
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEffectiveInstanceAssociationsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEffectiveInstanceAssociationsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceId'
          description: InvalidInstanceId
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
          description: InvalidNextToken
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DescribeEffectivePatchesForPatchBaseline:
    post:
      description: Retrieves the current effective patches (the patch and the approval
        state) for the specified patch baseline. Applies to patch baselines for Windows
        only.
      operationId: describe_effective_patches_for_patch_baseline
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DescribeEffectivePatchesForPatchBaseline
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEffectivePatchesForPatchBaselineRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEffectivePatchesForPatchBaselineResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceId'
          description: InvalidResourceId
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
          description: DoesNotExistException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperatingSystem'
          description: UnsupportedOperatingSystem
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DescribeInstanceAssociationsStatus:
    post:
      description: The status of the associations for the managed node(s).
      operationId: describe_instance_associations_status
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DescribeInstanceAssociationsStatus
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeInstanceAssociationsStatusRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeInstanceAssociationsStatusResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceId'
          description: InvalidInstanceId
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
          description: InvalidNextToken
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DescribeInstanceInformation:
    post:
      description: "<p>Provides information about one or more of your managed nodes,\
        \ including the operating system platform, SSM Agent version, association\
        \ status, and IP address. This operation does not return information for nodes\
        \ that are either Stopped or Terminated.</p> <p>If you specify one or more\
        \ node IDs, the operation returns information for those managed nodes. If\
        \ you don't specify node IDs, it returns information for all your managed\
        \ nodes. If you specify a node ID that isn't valid or a node that you don't\
        \ own, you receive an error.</p> <note> <p>The <code>IamRole</code> field\
        \ returned for this API operation is the Identity and Access Management (IAM)\
        \ role assigned to on-premises managed nodes. This operation does not return\
        \ the IAM role for EC2 instances.</p> </note>"
      operationId: describe_instance_information
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DescribeInstanceInformation
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeInstanceInformationRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeInstanceInformationResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceId'
          description: InvalidInstanceId
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
          description: InvalidNextToken
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceInformationFilterValue'
          description: InvalidInstanceInformationFilterValue
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilterKey'
          description: InvalidFilterKey
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DescribeInstancePatchStates:
    post:
      description: Retrieves the high-level patch state of one or more managed nodes.
      operationId: describe_instance_patch_states
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DescribeInstancePatchStates
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeInstancePatchStatesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeInstancePatchStatesResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
          description: InvalidNextToken
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DescribeInstancePatchStatesForPatchGroup:
    post:
      description: Retrieves the high-level patch state for the managed nodes in the
        specified patch group.
      operationId: describe_instance_patch_states_for_patch_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DescribeInstancePatchStatesForPatchGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeInstancePatchStatesForPatchGroupRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeInstancePatchStatesForPatchGroupResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilter'
          description: InvalidFilter
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
          description: InvalidNextToken
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DescribeInstancePatches:
    post:
      description: Retrieves information about the patches on the specified managed
        node and their state relative to the patch baseline being used for the node.
      operationId: describe_instance_patches
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DescribeInstancePatches
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeInstancePatchesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeInstancePatchesResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceId'
          description: InvalidInstanceId
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilter'
          description: InvalidFilter
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
          description: InvalidNextToken
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DescribeInventoryDeletions:
    post:
      description: Describes a specific delete inventory operation.
      operationId: describe_inventory_deletions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DescribeInventoryDeletions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeInventoryDeletionsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeInventoryDeletionsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDeletionIdException'
          description: InvalidDeletionIdException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
          description: InvalidNextToken
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowExecutionTaskInvocations:
    post:
      description: Retrieves the individual task executions (one per target) for a
        particular task run as part of a maintenance window execution.
      operationId: describe_maintenance_window_execution_task_invocations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DescribeMaintenanceWindowExecutionTaskInvocations
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeMaintenanceWindowExecutionTaskInvocationsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeMaintenanceWindowExecutionTaskInvocationsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
          description: DoesNotExistException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowExecutionTasks:
    post:
      description: "For a given maintenance window execution, lists the tasks that\
        \ were run."
      operationId: describe_maintenance_window_execution_tasks
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DescribeMaintenanceWindowExecutionTasks
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeMaintenanceWindowExecutionTasksRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeMaintenanceWindowExecutionTasksResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
          description: DoesNotExistException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowExecutions:
    post:
      description: "Lists the executions of a maintenance window. This includes information\
        \ about when the maintenance window was scheduled to be active, and information\
        \ about tasks registered and run with the maintenance window."
      operationId: describe_maintenance_window_executions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DescribeMaintenanceWindowExecutions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeMaintenanceWindowExecutionsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeMaintenanceWindowExecutionsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowSchedule:
    post:
      description: Retrieves information about upcoming executions of a maintenance
        window.
      operationId: describe_maintenance_window_schedule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DescribeMaintenanceWindowSchedule
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeMaintenanceWindowScheduleRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeMaintenanceWindowScheduleResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
          description: DoesNotExistException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowTargets:
    post:
      description: Lists the targets registered with the maintenance window.
      operationId: describe_maintenance_window_targets
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DescribeMaintenanceWindowTargets
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeMaintenanceWindowTargetsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeMaintenanceWindowTargetsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
          description: DoesNotExistException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowTasks:
    post:
      description: "<p>Lists the tasks in a maintenance window.</p> <note> <p>For\
        \ maintenance window tasks without a specified target, you can't supply values\
        \ for <code>--max-errors</code> and <code>--max-concurrency</code>. Instead,\
        \ the system inserts a placeholder value of <code>1</code>, which may be reported\
        \ in the response to this command. These values don't affect the running of\
        \ your task and can be ignored.</p> </note>"
      operationId: describe_maintenance_window_tasks
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DescribeMaintenanceWindowTasks
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeMaintenanceWindowTasksRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeMaintenanceWindowTasksResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
          description: DoesNotExistException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindows:
    post:
      description: Retrieves the maintenance windows in an Amazon Web Services account.
      operationId: describe_maintenance_windows
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DescribeMaintenanceWindows
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeMaintenanceWindowsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeMaintenanceWindowsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowsForTarget:
    post:
      description: Retrieves information about the maintenance window targets or tasks
        that a managed node is associated with.
      operationId: describe_maintenance_windows_for_target
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DescribeMaintenanceWindowsForTarget
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeMaintenanceWindowsForTargetRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeMaintenanceWindowsForTargetResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DescribeOpsItems:
    post:
      description: "<p>Query a set of OpsItems. You must have permission in Identity\
        \ and Access Management (IAM) to query a list of OpsItems. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-setup.html\"\
        >Set up OpsCenter</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p>\
        \ <p>Operations engineers and IT professionals use Amazon Web Services Systems\
        \ Manager OpsCenter to view, investigate, and remediate operational issues\
        \ impacting the performance and health of their Amazon Web Services resources.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter.html\"\
        >OpsCenter</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.\
        \ </p>"
      operationId: describe_ops_items
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DescribeOpsItems
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeOpsItemsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeOpsItemsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DescribeParameters:
    post:
      description: "<p>Get information about a parameter.</p> <p>Request results are\
        \ returned on a best-effort basis. If you specify <code>MaxResults</code>\
        \ in the request, the response includes information up to the limit specified.\
        \ The number of items returned, however, can be between zero and the value\
        \ of <code>MaxResults</code>. If the service reaches an internal limit while\
        \ processing the results, it stops the operation and returns the matching\
        \ values up to that point and a <code>NextToken</code>. You can specify the\
        \ <code>NextToken</code> in a subsequent call to get the next set of results.</p>\
        \ <important> <p>If you change the KMS key alias for the KMS key used to encrypt\
        \ a parameter, then you must also update the key alias the parameter uses\
        \ to reference KMS. Otherwise, <code>DescribeParameters</code> retrieves whatever\
        \ the original key alias was referencing.</p> </important>"
      operationId: describe_parameters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DescribeParameters
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeParametersRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeParametersResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilterKey'
          description: InvalidFilterKey
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilterOption'
          description: InvalidFilterOption
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilterValue'
          description: InvalidFilterValue
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
          description: InvalidNextToken
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DescribePatchBaselines:
    post:
      description: Lists the patch baselines in your Amazon Web Services account.
      operationId: describe_patch_baselines
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DescribePatchBaselines
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePatchBaselinesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePatchBaselinesResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DescribePatchGroupState:
    post:
      description: Returns high-level aggregated patch compliance state information
        for a patch group.
      operationId: describe_patch_group_state
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DescribePatchGroupState
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePatchGroupStateRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePatchGroupStateResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
          description: InvalidNextToken
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DescribePatchGroups:
    post:
      description: Lists all patch groups that have been registered with patch baselines.
      operationId: describe_patch_groups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DescribePatchGroups
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePatchGroupsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePatchGroupsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DescribePatchProperties:
    post:
      description: "<p>Lists the properties of available patches organized by product,\
        \ product family, classification, severity, and other properties of available\
        \ patches. You can use the reported properties in the filters you specify\
        \ in requests for operations such as <a>CreatePatchBaseline</a>, <a>UpdatePatchBaseline</a>,\
        \ <a>DescribeAvailablePatches</a>, and <a>DescribePatchBaselines</a>.</p>\
        \ <p>The following section lists the properties that can be used in filters\
        \ for each major operating system type:</p> <dl> <dt>AMAZON_LINUX</dt> <dd>\
        \ <p>Valid properties: <code>PRODUCT</code> | <code>CLASSIFICATION</code>\
        \ | <code>SEVERITY</code> </p> </dd> <dt>AMAZON_LINUX_2</dt> <dd> <p>Valid\
        \ properties: <code>PRODUCT</code> | <code>CLASSIFICATION</code> | <code>SEVERITY</code>\
        \ </p> </dd> <dt>CENTOS</dt> <dd> <p>Valid properties: <code>PRODUCT</code>\
        \ | <code>CLASSIFICATION</code> | <code>SEVERITY</code> </p> </dd> <dt>DEBIAN</dt>\
        \ <dd> <p>Valid properties: <code>PRODUCT</code> | <code>PRIORITY</code> </p>\
        \ </dd> <dt>MACOS</dt> <dd> <p>Valid properties: <code>PRODUCT</code> | <code>CLASSIFICATION</code>\
        \ </p> </dd> <dt>ORACLE_LINUX</dt> <dd> <p>Valid properties: <code>PRODUCT</code>\
        \ | <code>CLASSIFICATION</code> | <code>SEVERITY</code> </p> </dd> <dt>REDHAT_ENTERPRISE_LINUX</dt>\
        \ <dd> <p>Valid properties: <code>PRODUCT</code> | <code>CLASSIFICATION</code>\
        \ | <code>SEVERITY</code> </p> </dd> <dt>SUSE</dt> <dd> <p>Valid properties:\
        \ <code>PRODUCT</code> | <code>CLASSIFICATION</code> | <code>SEVERITY</code>\
        \ </p> </dd> <dt>UBUNTU</dt> <dd> <p>Valid properties: <code>PRODUCT</code>\
        \ | <code>PRIORITY</code> </p> </dd> <dt>WINDOWS</dt> <dd> <p>Valid properties:\
        \ <code>PRODUCT</code> | <code>PRODUCT_FAMILY</code> | <code>CLASSIFICATION</code>\
        \ | <code>MSRC_SEVERITY</code> </p> </dd> </dl>"
      operationId: describe_patch_properties
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DescribePatchProperties
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePatchPropertiesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePatchPropertiesResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DescribeSessions:
    post:
      description: Retrieves a list of all active sessions (both connected and disconnected)
        or terminated sessions from the past 30 days.
      operationId: describe_sessions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DescribeSessions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeSessionsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSessionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilterKey'
          description: InvalidFilterKey
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
          description: InvalidNextToken
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.DisassociateOpsItemRelatedItem:
    post:
      description: "Deletes the association between an OpsItem and a related item.\
        \ For example, this API operation can delete an Incident Manager incident\
        \ from an OpsItem. Incident Manager is a capability of Amazon Web Services\
        \ Systems Manager."
      operationId: disassociate_ops_item_related_item
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.DisassociateOpsItemRelatedItem
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateOpsItemRelatedItemRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateOpsItemRelatedItemResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsItemRelatedItemAssociationNotFoundException'
          description: OpsItemRelatedItemAssociationNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsItemNotFoundException'
          description: OpsItemNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsItemInvalidParameterException'
          description: OpsItemInvalidParameterException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.GetAutomationExecution:
    post:
      description: Get detailed information about a particular Automation execution.
      operationId: get_automation_execution
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.GetAutomationExecution
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAutomationExecutionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAutomationExecutionResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationExecutionNotFoundException'
          description: AutomationExecutionNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.GetCalendarState:
    post:
      description: "<p>Gets the state of a Amazon Web Services Systems Manager change\
        \ calendar at the current time or a specified time. If you specify a time,\
        \ <code>GetCalendarState</code> returns the state of the calendar at that\
        \ specific time, and returns the next time that the change calendar state\
        \ will transition. If you don't specify a time, <code>GetCalendarState</code>\
        \ uses the current time. Change Calendar entries have two possible states:\
        \ <code>OPEN</code> or <code>CLOSED</code>.</p> <p>If you specify more than\
        \ one calendar in a request, the command returns the status of <code>OPEN</code>\
        \ only if all calendars in the request are open. If one or more calendars\
        \ in the request are closed, the status returned is <code>CLOSED</code>.</p>\
        \ <p>For more information about Change Calendar, a capability of Amazon Web\
        \ Services Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-change-calendar.html\"\
        >Amazon Web Services Systems Manager Change Calendar</a> in the <i>Amazon\
        \ Web Services Systems Manager User Guide</i>.</p>"
      operationId: get_calendar_state
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.GetCalendarState
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCalendarStateRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCalendarStateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocument'
          description: InvalidDocument
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocumentType'
          description: InvalidDocumentType
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedCalendarException'
          description: UnsupportedCalendarException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.GetCommandInvocation:
    post:
      description: "<p>Returns detailed information about command execution for an\
        \ invocation or plugin.</p> <p> <code>GetCommandInvocation</code> only gives\
        \ the execution status of a plugin in a document. To get the command execution\
        \ status on a specific managed node, use <a>ListCommandInvocations</a>. To\
        \ get the command execution status across managed nodes, use <a>ListCommands</a>.</p>"
      operationId: get_command_invocation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.GetCommandInvocation
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCommandInvocationRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCommandInvocationResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCommandId'
          description: InvalidCommandId
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceId'
          description: InvalidInstanceId
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPluginName'
          description: InvalidPluginName
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvocationDoesNotExist'
          description: InvocationDoesNotExist
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.GetConnectionStatus:
    post:
      description: Retrieves the Session Manager connection status for a managed node
        to determine whether it is running and ready to receive Session Manager connections.
      operationId: get_connection_status
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.GetConnectionStatus
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetConnectionStatusRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConnectionStatusResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.GetDefaultPatchBaseline:
    post:
      description: "<p>Retrieves the default patch baseline. Amazon Web Services Systems\
        \ Manager supports creating multiple default patch baselines. For example,\
        \ you can create a default patch baseline for each operating system.</p> <p>If\
        \ you don't specify an operating system value, the default patch baseline\
        \ for Windows is returned.</p>"
      operationId: get_default_patch_baseline
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.GetDefaultPatchBaseline
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDefaultPatchBaselineRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDefaultPatchBaselineResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.GetDeployablePatchSnapshotForInstance:
    post:
      description: "<p>Retrieves the current snapshot for the patch baseline the managed\
        \ node uses. This API is primarily used by the <code>AWS-RunPatchBaseline</code>\
        \ Systems Manager document (SSM document).</p> <note> <p>If you run the command\
        \ locally, such as with the Command Line Interface (CLI), the system attempts\
        \ to use your local Amazon Web Services credentials and the operation fails.\
        \ To avoid this, you can run the command in the Amazon Web Services Systems\
        \ Manager console. Use Run Command, a capability of Amazon Web Services Systems\
        \ Manager, with an SSM document that enables you to target a managed node\
        \ with a script or command. For example, run the command using the <code>AWS-RunShellScript</code>\
        \ document or the <code>AWS-RunPowerShellScript</code> document.</p> </note>"
      operationId: get_deployable_patch_snapshot_for_instance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.GetDeployablePatchSnapshotForInstance
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDeployablePatchSnapshotForInstanceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDeployablePatchSnapshotForInstanceResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperatingSystem'
          description: UnsupportedOperatingSystem
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedFeatureRequiredException'
          description: UnsupportedFeatureRequiredException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.GetDocument:
    post:
      description: Gets the contents of the specified Amazon Web Services Systems
        Manager document (SSM document).
      operationId: get_document
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.GetDocument
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDocumentRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocumentResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocument'
          description: InvalidDocument
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocumentVersion'
          description: InvalidDocumentVersion
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.GetInventory:
    post:
      description: "Query inventory information. This includes managed node status,\
        \ such as <code>Stopped</code> or <code>Terminated</code>."
      operationId: get_inventory
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.GetInventory
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetInventoryRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInventoryResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilter'
          description: InvalidFilter
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInventoryGroupException'
          description: InvalidInventoryGroupException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
          description: InvalidNextToken
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTypeNameException'
          description: InvalidTypeNameException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAggregatorException'
          description: InvalidAggregatorException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResultAttributeException'
          description: InvalidResultAttributeException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.GetInventorySchema:
    post:
      description: "Return a list of inventory type names for the account, or return\
        \ a list of attribute names for a specific Inventory item type."
      operationId: get_inventory_schema
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.GetInventorySchema
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetInventorySchemaRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInventorySchemaResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTypeNameException'
          description: InvalidTypeNameException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
          description: InvalidNextToken
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.GetMaintenanceWindow:
    post:
      description: Retrieves a maintenance window.
      operationId: get_maintenance_window
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.GetMaintenanceWindow
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMaintenanceWindowRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMaintenanceWindowResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
          description: DoesNotExistException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.GetMaintenanceWindowExecution:
    post:
      description: Retrieves details about a specific a maintenance window execution.
      operationId: get_maintenance_window_execution
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.GetMaintenanceWindowExecution
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMaintenanceWindowExecutionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMaintenanceWindowExecutionResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
          description: DoesNotExistException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.GetMaintenanceWindowExecutionTask:
    post:
      description: Retrieves the details about a specific task run as part of a maintenance
        window execution.
      operationId: get_maintenance_window_execution_task
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.GetMaintenanceWindowExecutionTask
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMaintenanceWindowExecutionTaskRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMaintenanceWindowExecutionTaskResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
          description: DoesNotExistException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.GetMaintenanceWindowExecutionTaskInvocation:
    post:
      description: Retrieves information about a specific task running on a specific
        target.
      operationId: get_maintenance_window_execution_task_invocation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.GetMaintenanceWindowExecutionTaskInvocation
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMaintenanceWindowExecutionTaskInvocationRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMaintenanceWindowExecutionTaskInvocationResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
          description: DoesNotExistException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.GetMaintenanceWindowTask:
    post:
      description: "<p>Retrieves the details of a maintenance window task.</p> <note>\
        \ <p>For maintenance window tasks without a specified target, you can't supply\
        \ values for <code>--max-errors</code> and <code>--max-concurrency</code>.\
        \ Instead, the system inserts a placeholder value of <code>1</code>, which\
        \ may be reported in the response to this command. These values don't affect\
        \ the running of your task and can be ignored.</p> </note> <p>To retrieve\
        \ a list of tasks in a maintenance window, instead use the <a>DescribeMaintenanceWindowTasks</a>\
        \ command.</p>"
      operationId: get_maintenance_window_task
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.GetMaintenanceWindowTask
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMaintenanceWindowTaskRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMaintenanceWindowTaskResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
          description: DoesNotExistException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.GetOpsItem:
    post:
      description: "<p>Get information about an OpsItem by using the ID. You must\
        \ have permission in Identity and Access Management (IAM) to view information\
        \ about an OpsItem. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-setup.html\"\
        >Set up OpsCenter</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p>\
        \ <p>Operations engineers and IT professionals use Amazon Web Services Systems\
        \ Manager OpsCenter to view, investigate, and remediate operational issues\
        \ impacting the performance and health of their Amazon Web Services resources.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter.html\"\
        >OpsCenter</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.\
        \ </p>"
      operationId: get_ops_item
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.GetOpsItem
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOpsItemRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOpsItemResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsItemNotFoundException'
          description: OpsItemNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsItemAccessDeniedException'
          description: OpsItemAccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.GetOpsMetadata:
    post:
      description: View operational metadata related to an application in Application
        Manager.
      operationId: get_ops_metadata
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.GetOpsMetadata
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOpsMetadataRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOpsMetadataResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsMetadataNotFoundException'
          description: OpsMetadataNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsMetadataInvalidArgumentException'
          description: OpsMetadataInvalidArgumentException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.GetOpsSummary:
    post:
      description: 'View a summary of operations metadata (OpsData) based on specified
        filters and aggregators. OpsData can include information about Amazon Web
        Services Systems Manager OpsCenter operational workitems (OpsItems) as well
        as information about any Amazon Web Services resource or service configured
        to report OpsData to Amazon Web Services Systems Manager Explorer. '
      operationId: get_ops_summary
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.GetOpsSummary
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOpsSummaryRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOpsSummaryResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceDataSyncNotFoundException'
          description: ResourceDataSyncNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilter'
          description: InvalidFilter
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
          description: InvalidNextToken
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTypeNameException'
          description: InvalidTypeNameException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAggregatorException'
          description: InvalidAggregatorException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.GetParameter:
    post:
      description: "<p>Get information about a single parameter by specifying the\
        \ parameter name.</p> <note> <p>To get information about more than one parameter\
        \ at a time, use the <a>GetParameters</a> operation.</p> </note>"
      operationId: get_parameter
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.GetParameter
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetParameterRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetParameterResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidKeyId'
          description: InvalidKeyId
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterNotFound'
          description: ParameterNotFound
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterVersionNotFound'
          description: ParameterVersionNotFound
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.GetParameterHistory:
    post:
      description: "<p>Retrieves the history of all changes to a parameter.</p> <important>\
        \ <p>If you change the KMS key alias for the KMS key used to encrypt a parameter,\
        \ then you must also update the key alias the parameter uses to reference\
        \ KMS. Otherwise, <code>GetParameterHistory</code> retrieves whatever the\
        \ original key alias was referencing.</p> </important>"
      operationId: get_parameter_history
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.GetParameterHistory
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetParameterHistoryRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetParameterHistoryResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterNotFound'
          description: ParameterNotFound
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
          description: InvalidNextToken
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidKeyId'
          description: InvalidKeyId
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.GetParameters:
    post:
      description: "<p>Get information about one or more parameters by specifying\
        \ multiple parameter names.</p> <note> <p>To get information about a single\
        \ parameter, you can use the <a>GetParameter</a> operation instead.</p> </note>"
      operationId: get_parameters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.GetParameters
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetParametersRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetParametersResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidKeyId'
          description: InvalidKeyId
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.GetParametersByPath:
    post:
      description: "<p>Retrieve information about one or more parameters in a specific\
        \ hierarchy. </p> <p>Request results are returned on a best-effort basis.\
        \ If you specify <code>MaxResults</code> in the request, the response includes\
        \ information up to the limit specified. The number of items returned, however,\
        \ can be between zero and the value of <code>MaxResults</code>. If the service\
        \ reaches an internal limit while processing the results, it stops the operation\
        \ and returns the matching values up to that point and a <code>NextToken</code>.\
        \ You can specify the <code>NextToken</code> in a subsequent call to get the\
        \ next set of results.</p>"
      operationId: get_parameters_by_path
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.GetParametersByPath
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetParametersByPathRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetParametersByPathResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilterKey'
          description: InvalidFilterKey
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilterOption'
          description: InvalidFilterOption
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilterValue'
          description: InvalidFilterValue
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidKeyId'
          description: InvalidKeyId
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
          description: InvalidNextToken
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.GetPatchBaseline:
    post:
      description: Retrieves information about a patch baseline.
      operationId: get_patch_baseline
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.GetPatchBaseline
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPatchBaselineRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPatchBaselineResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
          description: DoesNotExistException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceId'
          description: InvalidResourceId
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.GetPatchBaselineForPatchGroup:
    post:
      description: Retrieves the patch baseline that should be used for the specified
        patch group.
      operationId: get_patch_baseline_for_patch_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.GetPatchBaselineForPatchGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPatchBaselineForPatchGroupRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPatchBaselineForPatchGroupResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.GetResourcePolicies:
    post:
      description: Returns an array of the <code>Policy</code> object.
      operationId: get_resource_policies
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.GetResourcePolicies
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetResourcePoliciesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResourcePoliciesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePolicyInvalidParameterException'
          description: ResourcePolicyInvalidParameterException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.GetServiceSetting:
    post:
      description: "<p> <code>ServiceSetting</code> is an account-level setting for\
        \ an Amazon Web Services service. This setting defines how a user interacts\
        \ with or uses a service or a feature of a service. For example, if an Amazon\
        \ Web Services service charges money to the account based on feature or service\
        \ usage, then the Amazon Web Services service team might create a default\
        \ setting of <code>false</code>. This means the user can't use this feature\
        \ unless they change the setting to <code>true</code> and intentionally opt\
        \ in for a paid feature.</p> <p>Services map a <code>SettingId</code> object\
        \ to a setting value. Amazon Web Services services teams define the default\
        \ value for a <code>SettingId</code>. You can't create a new <code>SettingId</code>,\
        \ but you can overwrite the default value if you have the <code>ssm:UpdateServiceSetting</code>\
        \ permission for the setting. Use the <a>UpdateServiceSetting</a> API operation\
        \ to change the default setting. Or use the <a>ResetServiceSetting</a> to\
        \ change the value back to the original value defined by the Amazon Web Services\
        \ service team.</p> <p>Query the current service setting for the Amazon Web\
        \ Services account. </p>"
      operationId: get_service_setting
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.GetServiceSetting
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetServiceSettingRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceSettingResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceSettingNotFound'
          description: ServiceSettingNotFound
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.LabelParameterVersion:
    post:
      description: "<p>A parameter label is a user-defined alias to help you manage\
        \ different versions of a parameter. When you modify a parameter, Amazon Web\
        \ Services Systems Manager automatically saves a new version and increments\
        \ the version number by one. A label can help you remember the purpose of\
        \ a parameter when there are multiple versions. </p> <p>Parameter labels have\
        \ the following requirements and restrictions.</p> <ul> <li> <p>A version\
        \ of a parameter can have a maximum of 10 labels.</p> </li> <li> <p>You can't\
        \ attach the same label to different versions of the same parameter. For example,\
        \ if version 1 has the label Production, then you can't attach Production\
        \ to version 2.</p> </li> <li> <p>You can move a label from one version of\
        \ a parameter to another.</p> </li> <li> <p>You can't create a label when\
        \ you create a new parameter. You must attach a label to a specific version\
        \ of a parameter.</p> </li> <li> <p>If you no longer want to use a parameter\
        \ label, then you can either delete it or move it to a different version of\
        \ a parameter.</p> </li> <li> <p>A label can have a maximum of 100 characters.</p>\
        \ </li> <li> <p>Labels can contain letters (case sensitive), numbers, periods\
        \ (.), hyphens (-), or underscores (_).</p> </li> <li> <p>Labels can't begin\
        \ with a number, \"<code>aws</code>\" or \"<code>ssm</code>\" (not case sensitive).\
        \ If a label fails to meet these requirements, then the label isn't associated\
        \ with a parameter and the system displays it in the list of InvalidLabels.</p>\
        \ </li> </ul>"
      operationId: label_parameter_version
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.LabelParameterVersion
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelParameterVersionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelParameterVersionResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyUpdates'
          description: TooManyUpdates
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterNotFound'
          description: ParameterNotFound
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterVersionNotFound'
          description: ParameterVersionNotFound
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterVersionLabelLimitExceeded'
          description: ParameterVersionLabelLimitExceeded
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.ListAssociationVersions:
    post:
      description: Retrieves all versions of an association for a specific association
        ID.
      operationId: list_association_versions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.ListAssociationVersions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAssociationVersionsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssociationVersionsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
          description: InvalidNextToken
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationDoesNotExist'
          description: AssociationDoesNotExist
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.ListAssociations:
    post:
      description: Returns all State Manager associations in the current Amazon Web
        Services account and Amazon Web Services Region. You can limit the results
        to a specific State Manager association document or managed node by specifying
        a filter. State Manager is a capability of Amazon Web Services Systems Manager.
      operationId: list_associations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.ListAssociations
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAssociationsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssociationsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
          description: InvalidNextToken
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.ListCommandInvocations:
    post:
      description: "An invocation is copy of a command sent to a specific managed\
        \ node. A command can apply to one or more managed nodes. A command invocation\
        \ applies to one managed node. For example, if a user runs <code>SendCommand</code>\
        \ against three managed nodes, then a command invocation is created for each\
        \ requested managed node ID. <code>ListCommandInvocations</code> provide status\
        \ about command execution."
      operationId: list_command_invocations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.ListCommandInvocations
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListCommandInvocationsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCommandInvocationsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCommandId'
          description: InvalidCommandId
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceId'
          description: InvalidInstanceId
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilterKey'
          description: InvalidFilterKey
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
          description: InvalidNextToken
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.ListCommands:
    post:
      description: Lists the commands requested by users of the Amazon Web Services
        account.
      operationId: list_commands
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.ListCommands
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListCommandsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCommandsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCommandId'
          description: InvalidCommandId
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceId'
          description: InvalidInstanceId
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilterKey'
          description: InvalidFilterKey
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
          description: InvalidNextToken
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.ListComplianceItems:
    post:
      description: "For a specified resource ID, this API operation returns a list\
        \ of compliance statuses for different resource types. Currently, you can\
        \ only specify one resource ID per call. List results depend on the criteria\
        \ specified in the filter."
      operationId: list_compliance_items
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.ListComplianceItems
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListComplianceItemsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListComplianceItemsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceType'
          description: InvalidResourceType
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceId'
          description: InvalidResourceId
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilter'
          description: InvalidFilter
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
          description: InvalidNextToken
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.ListComplianceSummaries:
    post:
      description: "Returns a summary count of compliant and non-compliant resources\
        \ for a compliance type. For example, this call can return State Manager associations,\
        \ patches, or custom compliance types according to the filter criteria that\
        \ you specify."
      operationId: list_compliance_summaries
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.ListComplianceSummaries
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListComplianceSummariesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListComplianceSummariesResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilter'
          description: InvalidFilter
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
          description: InvalidNextToken
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.ListDocumentMetadataHistory:
    post:
      description: Information about approval reviews for a version of a change template
        in Change Manager.
      operationId: list_document_metadata_history
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.ListDocumentMetadataHistory
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDocumentMetadataHistoryRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDocumentMetadataHistoryResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocument'
          description: InvalidDocument
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocumentVersion'
          description: InvalidDocumentVersion
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
          description: InvalidNextToken
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.ListDocumentVersions:
    post:
      description: List all versions for a document.
      operationId: list_document_versions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.ListDocumentVersions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDocumentVersionsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDocumentVersionsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
          description: InvalidNextToken
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocument'
          description: InvalidDocument
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.ListDocuments:
    post:
      description: Returns all Systems Manager (SSM) documents in the current Amazon
        Web Services account and Amazon Web Services Region. You can limit the results
        of this request by using a filter.
      operationId: list_documents
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.ListDocuments
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDocumentsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDocumentsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
          description: InvalidNextToken
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilterKey'
          description: InvalidFilterKey
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.ListInventoryEntries:
    post:
      description: A list of inventory items returned by the request.
      operationId: list_inventory_entries
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.ListInventoryEntries
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListInventoryEntriesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInventoryEntriesResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceId'
          description: InvalidInstanceId
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTypeNameException'
          description: InvalidTypeNameException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilter'
          description: InvalidFilter
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
          description: InvalidNextToken
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.ListOpsItemEvents:
    post:
      description: Returns a list of all OpsItem events in the current Amazon Web
        Services Region and Amazon Web Services account. You can limit the results
        to events associated with specific OpsItems by specifying a filter.
      operationId: list_ops_item_events
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.ListOpsItemEvents
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListOpsItemEventsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOpsItemEventsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsItemNotFoundException'
          description: OpsItemNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsItemLimitExceededException'
          description: OpsItemLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsItemInvalidParameterException'
          description: OpsItemInvalidParameterException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.ListOpsItemRelatedItems:
    post:
      description: Lists all related-item resources associated with a Systems Manager
        OpsCenter OpsItem. OpsCenter is a capability of Amazon Web Services Systems
        Manager.
      operationId: list_ops_item_related_items
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.ListOpsItemRelatedItems
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListOpsItemRelatedItemsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOpsItemRelatedItemsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsItemInvalidParameterException'
          description: OpsItemInvalidParameterException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.ListOpsMetadata:
    post:
      description: Amazon Web Services Systems Manager calls this API operation when
        displaying all Application Manager OpsMetadata objects or blobs.
      operationId: list_ops_metadata
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.ListOpsMetadata
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListOpsMetadataRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOpsMetadataResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsMetadataInvalidArgumentException'
          description: OpsMetadataInvalidArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.ListResourceComplianceSummaries:
    post:
      description: "Returns a resource-level summary count. The summary includes information\
        \ about compliant and non-compliant statuses and detailed compliance-item\
        \ severity counts, according to the filter criteria you specify."
      operationId: list_resource_compliance_summaries
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.ListResourceComplianceSummaries
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListResourceComplianceSummariesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResourceComplianceSummariesResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilter'
          description: InvalidFilter
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
          description: InvalidNextToken
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.ListResourceDataSync:
    post:
      description: "<p>Lists your resource data sync configurations. Includes information\
        \ about the last time a sync attempted to start, the last sync status, and\
        \ the last time a sync successfully completed.</p> <p>The number of sync configurations\
        \ might be too large to return using a single call to <code>ListResourceDataSync</code>.\
        \ You can limit the number of sync configurations returned by using the <code>MaxResults</code>\
        \ parameter. To determine whether there are more sync configurations to list,\
        \ check the value of <code>NextToken</code> in the output. If there are more\
        \ sync configurations to list, you can request them by specifying the <code>NextToken</code>\
        \ returned in the call to the parameter of a subsequent call. </p>"
      operationId: list_resource_data_sync
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.ListResourceDataSync
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListResourceDataSyncRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResourceDataSyncResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceDataSyncInvalidConfigurationException'
          description: ResourceDataSyncInvalidConfigurationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
          description: InvalidNextToken
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.ListTagsForResource:
    post:
      description: "<p>Returns a list of the tags assigned to the specified resource.</p>\
        \ <p>For information about the ID format for each supported resource type,\
        \ see <a>AddTagsToResource</a>.</p>"
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.ListTagsForResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceType'
          description: InvalidResourceType
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceId'
          description: InvalidResourceId
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.ModifyDocumentPermission:
    post:
      description: "Shares a Amazon Web Services Systems Manager document (SSM document)publicly\
        \ or privately. If you share a document privately, you must specify the Amazon\
        \ Web Services user IDs for those people who can use the document. If you\
        \ share a document publicly, you must specify <i>All</i> as the account ID."
      operationId: modify_document_permission
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.ModifyDocumentPermission
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyDocumentPermissionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModifyDocumentPermissionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocument'
          description: InvalidDocument
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPermissionType'
          description: InvalidPermissionType
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentPermissionLimit'
          description: DocumentPermissionLimit
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentLimitExceeded'
          description: DocumentLimitExceeded
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.PutComplianceItems:
    post:
      description: "<p>Registers a compliance type and other compliance details on\
        \ a designated resource. This operation lets you register custom compliance\
        \ details with a resource. This call overwrites existing compliance information\
        \ on the resource, so you must provide a full list of compliance items each\
        \ time that you send the request.</p> <p>ComplianceType can be one of the\
        \ following:</p> <ul> <li> <p>ExecutionId: The execution ID when the patch,\
        \ association, or custom compliance item was applied.</p> </li> <li> <p>ExecutionType:\
        \ Specify patch, association, or Custom:<code>string</code>.</p> </li> <li>\
        \ <p>ExecutionTime. The time the patch, association, or custom compliance\
        \ item was applied to the managed node.</p> </li> <li> <p>Id: The patch, association,\
        \ or custom compliance ID.</p> </li> <li> <p>Title: A title.</p> </li> <li>\
        \ <p>Status: The status of the compliance item. For example, <code>approved</code>\
        \ for patches, or <code>Failed</code> for associations.</p> </li> <li> <p>Severity:\
        \ A patch severity. For example, <code>Critical</code>.</p> </li> <li> <p>DocumentName:\
        \ An SSM document name. For example, <code>AWS-RunPatchBaseline</code>.</p>\
        \ </li> <li> <p>DocumentVersion: An SSM document version number. For example,\
        \ 4.</p> </li> <li> <p>Classification: A patch classification. For example,\
        \ <code>security updates</code>.</p> </li> <li> <p>PatchBaselineId: A patch\
        \ baseline ID.</p> </li> <li> <p>PatchSeverity: A patch severity. For example,\
        \ <code>Critical</code>.</p> </li> <li> <p>PatchState: A patch state. For\
        \ example, <code>InstancesWithFailedPatches</code>.</p> </li> <li> <p>PatchGroup:\
        \ The name of a patch group.</p> </li> <li> <p>InstalledTime: The time the\
        \ association, patch, or custom compliance item was applied to the resource.\
        \ Specify the time by using the following format: yyyy-MM-dd'T'HH:mm:ss'Z'</p>\
        \ </li> </ul>"
      operationId: put_compliance_items
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.PutComplianceItems
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutComplianceItemsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutComplianceItemsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidItemContentException'
          description: InvalidItemContentException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TotalSizeLimitExceededException'
          description: TotalSizeLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemSizeLimitExceededException'
          description: ItemSizeLimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComplianceTypeCountLimitExceededException'
          description: ComplianceTypeCountLimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceType'
          description: InvalidResourceType
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceId'
          description: InvalidResourceId
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.PutInventory:
    post:
      description: "Bulk update custom inventory items on one or more managed nodes.\
        \ The request adds an inventory item, if it doesn't already exist, or updates\
        \ an inventory item, if it does exist."
      operationId: put_inventory
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.PutInventory
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutInventoryRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutInventoryResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceId'
          description: InvalidInstanceId
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTypeNameException'
          description: InvalidTypeNameException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidItemContentException'
          description: InvalidItemContentException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TotalSizeLimitExceededException'
          description: TotalSizeLimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemSizeLimitExceededException'
          description: ItemSizeLimitExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemContentMismatchException'
          description: ItemContentMismatchException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomSchemaCountLimitExceededException'
          description: CustomSchemaCountLimitExceededException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedInventorySchemaVersionException'
          description: UnsupportedInventorySchemaVersionException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedInventoryItemContextException'
          description: UnsupportedInventoryItemContextException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInventoryItemContextException'
          description: InvalidInventoryItemContextException
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubTypeCountLimitExceededException'
          description: SubTypeCountLimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.PutParameter:
    post:
      description: Add a parameter to the system.
      operationId: put_parameter
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.PutParameter
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutParameterRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutParameterResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidKeyId'
          description: InvalidKeyId
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterLimitExceeded'
          description: ParameterLimitExceeded
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyUpdates'
          description: TooManyUpdates
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterAlreadyExists'
          description: ParameterAlreadyExists
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HierarchyLevelLimitExceededException'
          description: HierarchyLevelLimitExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HierarchyTypeMismatchException'
          description: HierarchyTypeMismatchException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAllowedPatternException'
          description: InvalidAllowedPatternException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterMaxVersionLimitExceeded'
          description: ParameterMaxVersionLimitExceeded
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterPatternMismatchException'
          description: ParameterPatternMismatchException
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedParameterType'
          description: UnsupportedParameterType
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesLimitExceededException'
          description: PoliciesLimitExceededException
        "492":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPolicyTypeException'
          description: InvalidPolicyTypeException
        "493":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPolicyAttributeException'
          description: InvalidPolicyAttributeException
        "494":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncompatiblePolicyException'
          description: IncompatiblePolicyException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.PutResourcePolicy:
    post:
      description: "Creates or updates a Systems Manager resource policy. A resource\
        \ policy helps you to define the IAM entity (for example, an Amazon Web Services\
        \ account) that can manage your Systems Manager resources. Currently, <code>OpsItemGroup</code>\
        \ is the only resource that supports Systems Manager resource policies. The\
        \ resource policy for <code>OpsItemGroup</code> enables Amazon Web Services\
        \ accounts to view and interact with OpsCenter operational work items (OpsItems)."
      operationId: put_resource_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.PutResourcePolicy
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutResourcePolicyRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutResourcePolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePolicyInvalidParameterException'
          description: ResourcePolicyInvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePolicyLimitExceededException'
          description: ResourcePolicyLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePolicyConflictException'
          description: ResourcePolicyConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.RegisterDefaultPatchBaseline:
    post:
      description: "<p>Defines the default patch baseline for the relevant operating\
        \ system.</p> <p>To reset the Amazon Web Services-predefined patch baseline\
        \ as the default, specify the full patch baseline Amazon Resource Name (ARN)\
        \ as the baseline ID value. For example, for CentOS, specify <code>arn:aws:ssm:us-east-2:733109147000:patchbaseline/pb-0574b43a65ea646ed</code>\
        \ instead of <code>pb-0574b43a65ea646ed</code>.</p>"
      operationId: register_default_patch_baseline
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.RegisterDefaultPatchBaseline
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterDefaultPatchBaselineRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterDefaultPatchBaselineResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceId'
          description: InvalidResourceId
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
          description: DoesNotExistException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.RegisterPatchBaselineForPatchGroup:
    post:
      description: Registers a patch baseline for a patch group.
      operationId: register_patch_baseline_for_patch_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.RegisterPatchBaselineForPatchGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterPatchBaselineForPatchGroupRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterPatchBaselineForPatchGroupResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
          description: DoesNotExistException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceId'
          description: InvalidResourceId
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.RegisterTargetWithMaintenanceWindow:
    post:
      description: Registers a target with a maintenance window.
      operationId: register_target_with_maintenance_window
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.RegisterTargetWithMaintenanceWindow
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterTargetWithMaintenanceWindowRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterTargetWithMaintenanceWindowResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatch'
          description: IdempotentParameterMismatch
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
          description: DoesNotExistException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.RegisterTaskWithMaintenanceWindow:
    post:
      description: Adds a new task to a maintenance window.
      operationId: register_task_with_maintenance_window
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.RegisterTaskWithMaintenanceWindow
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterTaskWithMaintenanceWindowRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterTaskWithMaintenanceWindowResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatch'
          description: IdempotentParameterMismatch
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
          description: DoesNotExistException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureNotAvailableException'
          description: FeatureNotAvailableException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.RemoveTagsFromResource:
    post:
      description: Removes tag keys from the specified resource.
      operationId: remove_tags_from_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.RemoveTagsFromResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveTagsFromResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveTagsFromResourceResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceType'
          description: InvalidResourceType
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceId'
          description: InvalidResourceId
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyUpdates'
          description: TooManyUpdates
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.ResetServiceSetting:
    post:
      description: "<p> <code>ServiceSetting</code> is an account-level setting for\
        \ an Amazon Web Services service. This setting defines how a user interacts\
        \ with or uses a service or a feature of a service. For example, if an Amazon\
        \ Web Services service charges money to the account based on feature or service\
        \ usage, then the Amazon Web Services service team might create a default\
        \ setting of \"false\". This means the user can't use this feature unless\
        \ they change the setting to \"true\" and intentionally opt in for a paid\
        \ feature.</p> <p>Services map a <code>SettingId</code> object to a setting\
        \ value. Amazon Web Services services teams define the default value for a\
        \ <code>SettingId</code>. You can't create a new <code>SettingId</code>, but\
        \ you can overwrite the default value if you have the <code>ssm:UpdateServiceSetting</code>\
        \ permission for the setting. Use the <a>GetServiceSetting</a> API operation\
        \ to view the current value. Use the <a>UpdateServiceSetting</a> API operation\
        \ to change the default setting. </p> <p>Reset the service setting for the\
        \ account to the default value as provisioned by the Amazon Web Services service\
        \ team. </p>"
      operationId: reset_service_setting
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.ResetServiceSetting
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetServiceSettingRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetServiceSettingResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceSettingNotFound'
          description: ServiceSettingNotFound
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyUpdates'
          description: TooManyUpdates
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.ResumeSession:
    post:
      description: "<p>Reconnects a session to a managed node after it has been disconnected.\
        \ Connections can be resumed for disconnected sessions, but not terminated\
        \ sessions.</p> <note> <p>This command is primarily for use by client machines\
        \ to automatically reconnect during intermittent network issues. It isn't\
        \ intended for any other use.</p> </note>"
      operationId: resume_session
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.ResumeSession
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResumeSessionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResumeSessionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
          description: DoesNotExistException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.SendAutomationSignal:
    post:
      description: 'Sends a signal to an Automation execution to change the current
        behavior or status of the execution. '
      operationId: send_automation_signal
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.SendAutomationSignal
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendAutomationSignalRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendAutomationSignalResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationExecutionNotFoundException'
          description: AutomationExecutionNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationStepNotFoundException'
          description: AutomationStepNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAutomationSignalException'
          description: InvalidAutomationSignalException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.SendCommand:
    post:
      description: Runs commands on one or more managed nodes.
      operationId: send_command
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.SendCommand
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendCommandRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendCommandResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateInstanceId'
          description: DuplicateInstanceId
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceId'
          description: InvalidInstanceId
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocument'
          description: InvalidDocument
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocumentVersion'
          description: InvalidDocumentVersion
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidOutputFolder'
          description: InvalidOutputFolder
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameters'
          description: InvalidParameters
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedPlatformType'
          description: UnsupportedPlatformType
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaxDocumentSizeExceeded'
          description: MaxDocumentSizeExceeded
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRole'
          description: InvalidRole
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNotificationConfig'
          description: InvalidNotificationConfig
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.StartAssociationsOnce:
    post:
      description: Runs an association immediately and only one time. This operation
        can be helpful when troubleshooting associations.
      operationId: start_associations_once
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.StartAssociationsOnce
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartAssociationsOnceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartAssociationsOnceResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAssociation'
          description: InvalidAssociation
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationDoesNotExist'
          description: AssociationDoesNotExist
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.StartAutomationExecution:
    post:
      description: Initiates execution of an Automation runbook.
      operationId: start_automation_execution
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.StartAutomationExecution
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartAutomationExecutionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartAutomationExecutionResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationDefinitionNotFoundException'
          description: AutomationDefinitionNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAutomationExecutionParametersException'
          description: InvalidAutomationExecutionParametersException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationExecutionLimitExceededException'
          description: AutomationExecutionLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationDefinitionVersionNotFoundException'
          description: AutomationDefinitionVersionNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatch'
          description: IdempotentParameterMismatch
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTarget'
          description: InvalidTarget
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.StartChangeRequestExecution:
    post:
      description: Creates a change request for Change Manager. The Automation runbooks
        specified in the change request run only after all required approvals for
        the change request have been received.
      operationId: start_change_request_execution
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.StartChangeRequestExecution
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartChangeRequestExecutionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartChangeRequestExecutionResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationDefinitionNotFoundException'
          description: AutomationDefinitionNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAutomationExecutionParametersException'
          description: InvalidAutomationExecutionParametersException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationExecutionLimitExceededException'
          description: AutomationExecutionLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationDefinitionVersionNotFoundException'
          description: AutomationDefinitionVersionNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatch'
          description: IdempotentParameterMismatch
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationDefinitionNotApprovedException'
          description: AutomationDefinitionNotApprovedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.StartSession:
    post:
      description: "<p>Initiates a connection to a target (for example, a managed\
        \ node) for a Session Manager session. Returns a URL and token that can be\
        \ used to open a WebSocket connection for sending input and receiving outputs.</p>\
        \ <note> <p>Amazon Web Services CLI usage: <code>start-session</code> is an\
        \ interactive command that requires the Session Manager plugin to be installed\
        \ on the client machine making the call. For information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-working-with-install-plugin.html\"\
        >Install the Session Manager plugin for the Amazon Web Services CLI</a> in\
        \ the <i>Amazon Web Services Systems Manager User Guide</i>.</p> <p>Amazon\
        \ Web Services Tools for PowerShell usage: Start-SSMSession isn't currently\
        \ supported by Amazon Web Services Tools for PowerShell on Windows local machines.</p>\
        \ </note>"
      operationId: start_session
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.StartSession
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartSessionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartSessionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocument'
          description: InvalidDocument
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetNotConnected'
          description: TargetNotConnected
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.StopAutomationExecution:
    post:
      description: Stop an Automation that is currently running.
      operationId: stop_automation_execution
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.StopAutomationExecution
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopAutomationExecutionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopAutomationExecutionResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationExecutionNotFoundException'
          description: AutomationExecutionNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAutomationStatusUpdateException'
          description: InvalidAutomationStatusUpdateException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.TerminateSession:
    post:
      description: Permanently ends a session and closes the data connection between
        the Session Manager client and SSM Agent on the managed node. A terminated
        session can't be resumed.
      operationId: terminate_session
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.TerminateSession
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerminateSessionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminateSessionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.UnlabelParameterVersion:
    post:
      description: Remove a label or labels from a parameter.
      operationId: unlabel_parameter_version
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.UnlabelParameterVersion
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnlabelParameterVersionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnlabelParameterVersionResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyUpdates'
          description: TooManyUpdates
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterNotFound'
          description: ParameterNotFound
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterVersionNotFound'
          description: ParameterVersionNotFound
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.UpdateAssociation:
    post:
      description: "<p>Updates an association. You can update the association name\
        \ and version, the document version, schedule, parameters, and Amazon Simple\
        \ Storage Service (Amazon S3) output. When you call <code>UpdateAssociation</code>,\
        \ the system removes all optional parameters from the request and overwrites\
        \ the association with null values for those parameters. This is by design.\
        \ You must specify all optional parameters in the call, even if you are not\
        \ changing the parameters. This includes the <code>Name</code> parameter.\
        \ Before calling this API action, we recommend that you call the <a>DescribeAssociation</a>\
        \ API operation and make a note of all optional parameters required for your\
        \ <code>UpdateAssociation</code> call.</p> <p>In order to call this API operation,\
        \ a user, group, or role must be granted permission to call the <a>DescribeAssociation</a>\
        \ API operation. If you don't have permission to call <code>DescribeAssociation</code>,\
        \ then you receive the following error: <code>An error occurred (AccessDeniedException)\
        \ when calling the UpdateAssociation operation: User: &lt;user_arn&gt; isn't\
        \ authorized to perform: ssm:DescribeAssociation on resource: &lt;resource_arn&gt;</code>\
        \ </p> <important> <p>When you update an association, the association immediately\
        \ runs against the specified targets. You can add the <code>ApplyOnlyAtCronInterval</code>\
        \ parameter to run the association during the next schedule run.</p> </important>"
      operationId: update_association
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.UpdateAssociation
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAssociationRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAssociationResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSchedule'
          description: InvalidSchedule
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameters'
          description: InvalidParameters
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidOutputLocation'
          description: InvalidOutputLocation
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocumentVersion'
          description: InvalidDocumentVersion
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationDoesNotExist'
          description: AssociationDoesNotExist
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidUpdate'
          description: InvalidUpdate
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyUpdates'
          description: TooManyUpdates
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocument'
          description: InvalidDocument
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTarget'
          description: InvalidTarget
        "490":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAssociationVersion'
          description: InvalidAssociationVersion
        "491":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationVersionLimitExceeded'
          description: AssociationVersionLimitExceeded
        "492":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTargetMaps'
          description: InvalidTargetMaps
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.UpdateAssociationStatus:
    post:
      description: <p>Updates the status of the Amazon Web Services Systems Manager
        document (SSM document) associated with the specified managed node.</p> <p>
        <code>UpdateAssociationStatus</code> is primarily used by the Amazon Web Services
        Systems Manager Agent (SSM Agent) to report status updates about your associations
        and is only used for associations created with the <code>InstanceId</code>
        legacy parameter.</p>
      operationId: update_association_status
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.UpdateAssociationStatus
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAssociationStatusRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAssociationStatusResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceId'
          description: InvalidInstanceId
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocument'
          description: InvalidDocument
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationDoesNotExist'
          description: AssociationDoesNotExist
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusUnchanged'
          description: StatusUnchanged
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyUpdates'
          description: TooManyUpdates
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.UpdateDocument:
    post:
      description: Updates one or more values for an SSM document.
      operationId: update_document
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.UpdateDocument
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDocumentRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDocumentResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaxDocumentSizeExceeded'
          description: MaxDocumentSizeExceeded
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentVersionLimitExceeded'
          description: DocumentVersionLimitExceeded
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateDocumentContent'
          description: DuplicateDocumentContent
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateDocumentVersionName'
          description: DuplicateDocumentVersionName
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocumentContent'
          description: InvalidDocumentContent
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocumentVersion'
          description: InvalidDocumentVersion
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocumentSchemaVersion'
          description: InvalidDocumentSchemaVersion
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocument'
          description: InvalidDocument
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocumentOperation'
          description: InvalidDocumentOperation
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.UpdateDocumentDefaultVersion:
    post:
      description: "<p>Set the default version of a document. </p> <note> <p>If you\
        \ change a document version for a State Manager association, Systems Manager\
        \ immediately runs the association unless you previously specifed the <code>apply-only-at-cron-interval</code>\
        \ parameter.</p> </note>"
      operationId: update_document_default_version
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.UpdateDocumentDefaultVersion
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDocumentDefaultVersionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDocumentDefaultVersionResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocument'
          description: InvalidDocument
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocumentVersion'
          description: InvalidDocumentVersion
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocumentSchemaVersion'
          description: InvalidDocumentSchemaVersion
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.UpdateDocumentMetadata:
    post:
      description: Updates information related to approval reviews for a specific
        version of a change template in Change Manager.
      operationId: update_document_metadata
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.UpdateDocumentMetadata
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDocumentMetadataRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDocumentMetadataResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocument'
          description: InvalidDocument
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocumentOperation'
          description: InvalidDocumentOperation
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocumentVersion'
          description: InvalidDocumentVersion
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.UpdateMaintenanceWindow:
    post:
      description: "<p>Updates an existing maintenance window. Only specified parameters\
        \ are modified.</p> <note> <p>The value you specify for <code>Duration</code>\
        \ determines the specific end time for the maintenance window based on the\
        \ time it begins. No maintenance window tasks are permitted to start after\
        \ the resulting endtime minus the number of hours you specify for <code>Cutoff</code>.\
        \ For example, if the maintenance window starts at 3 PM, the duration is three\
        \ hours, and the value you specify for <code>Cutoff</code> is one hour, no\
        \ maintenance window tasks can start after 5 PM.</p> </note>"
      operationId: update_maintenance_window
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.UpdateMaintenanceWindow
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMaintenanceWindowRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMaintenanceWindowResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
          description: DoesNotExistException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.UpdateMaintenanceWindowTarget:
    post:
      description: "<p>Modifies the target of an existing maintenance window. You\
        \ can change the following:</p> <ul> <li> <p>Name</p> </li> <li> <p>Description</p>\
        \ </li> <li> <p>Owner</p> </li> <li> <p>IDs for an ID target</p> </li> <li>\
        \ <p>Tags for a Tag target</p> </li> <li> <p>From any supported tag type to\
        \ another. The three supported tag types are ID target, Tag target, and resource\
        \ group. For more information, see <a>Target</a>.</p> </li> </ul> <note> <p>If\
        \ a parameter is null, then the corresponding field isn't modified.</p> </note>"
      operationId: update_maintenance_window_target
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.UpdateMaintenanceWindowTarget
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMaintenanceWindowTargetRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMaintenanceWindowTargetResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
          description: DoesNotExistException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.UpdateMaintenanceWindowTask:
    post:
      description: "<p>Modifies a task assigned to a maintenance window. You can't\
        \ change the task type, but you can change the following values:</p> <ul>\
        \ <li> <p> <code>TaskARN</code>. For example, you can change a <code>RUN_COMMAND</code>\
        \ task from <code>AWS-RunPowerShellScript</code> to <code>AWS-RunShellScript</code>.</p>\
        \ </li> <li> <p> <code>ServiceRoleArn</code> </p> </li> <li> <p> <code>TaskInvocationParameters</code>\
        \ </p> </li> <li> <p> <code>Priority</code> </p> </li> <li> <p> <code>MaxConcurrency</code>\
        \ </p> </li> <li> <p> <code>MaxErrors</code> </p> </li> </ul> <note> <p>One\
        \ or more targets must be specified for maintenance window Run Command-type\
        \ tasks. Depending on the task, targets are optional for other maintenance\
        \ window task types (Automation, Lambda, and Step Functions). For more information\
        \ about running tasks that don't specify targets, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/maintenance-windows-targetless-tasks.html\"\
        >Registering maintenance window tasks without targets</a> in the <i>Amazon\
        \ Web Services Systems Manager User Guide</i>.</p> </note> <p>If the value\
        \ for a parameter in <code>UpdateMaintenanceWindowTask</code> is null, then\
        \ the corresponding field isn't modified. If you set <code>Replace</code>\
        \ to true, then all fields required by the <a>RegisterTaskWithMaintenanceWindow</a>\
        \ operation are required for this request. Optional fields that aren't specified\
        \ are set to null.</p> <important> <p>When you update a maintenance window\
        \ task that has options specified in <code>TaskInvocationParameters</code>,\
        \ you must provide again all the <code>TaskInvocationParameters</code> values\
        \ that you want to retain. The values you don't specify again are removed.\
        \ For example, suppose that when you registered a Run Command task, you specified\
        \ <code>TaskInvocationParameters</code> values for <code>Comment</code>, <code>NotificationConfig</code>,\
        \ and <code>OutputS3BucketName</code>. If you update the maintenance window\
        \ task and specify only a different <code>OutputS3BucketName</code> value,\
        \ the values for <code>Comment</code> and <code>NotificationConfig</code>\
        \ are removed.</p> </important>"
      operationId: update_maintenance_window_task
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.UpdateMaintenanceWindowTask
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMaintenanceWindowTaskRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMaintenanceWindowTaskResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
          description: DoesNotExistException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.UpdateManagedInstanceRole:
    post:
      description: "Changes the Identity and Access Management (IAM) role that is\
        \ assigned to the on-premises server, edge device, or virtual machines (VM).\
        \ IAM roles are first assigned to these hybrid nodes during the activation\
        \ process. For more information, see <a>CreateActivation</a>."
      operationId: update_managed_instance_role
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.UpdateManagedInstanceRole
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateManagedInstanceRoleRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateManagedInstanceRoleResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceId'
          description: InvalidInstanceId
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.UpdateOpsItem:
    post:
      description: "<p>Edit or change an OpsItem. You must have permission in Identity\
        \ and Access Management (IAM) to update an OpsItem. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-setup.html\"\
        >Set up OpsCenter</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p>\
        \ <p>Operations engineers and IT professionals use Amazon Web Services Systems\
        \ Manager OpsCenter to view, investigate, and remediate operational issues\
        \ impacting the performance and health of their Amazon Web Services resources.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter.html\"\
        >OpsCenter</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.\
        \ </p>"
      operationId: update_ops_item
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.UpdateOpsItem
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOpsItemRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOpsItemResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsItemNotFoundException'
          description: OpsItemNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsItemAlreadyExistsException'
          description: OpsItemAlreadyExistsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsItemLimitExceededException'
          description: OpsItemLimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsItemInvalidParameterException'
          description: OpsItemInvalidParameterException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsItemAccessDeniedException'
          description: OpsItemAccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.UpdateOpsMetadata:
    post:
      description: Amazon Web Services Systems Manager calls this API operation when
        you edit OpsMetadata in Application Manager.
      operationId: update_ops_metadata
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.UpdateOpsMetadata
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOpsMetadataRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOpsMetadataResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsMetadataNotFoundException'
          description: OpsMetadataNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsMetadataInvalidArgumentException'
          description: OpsMetadataInvalidArgumentException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsMetadataKeyLimitExceededException'
          description: OpsMetadataKeyLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsMetadataTooManyUpdatesException'
          description: OpsMetadataTooManyUpdatesException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.UpdatePatchBaseline:
    post:
      description: "<p>Modifies an existing patch baseline. Fields not specified in\
        \ the request are left unchanged.</p> <note> <p>For information about valid\
        \ key-value pairs in <code>PatchFilters</code> for each supported operating\
        \ system type, see <a>PatchFilter</a>.</p> </note>"
      operationId: update_patch_baseline
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.UpdatePatchBaseline
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePatchBaselineRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePatchBaselineResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
          description: DoesNotExistException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.UpdateResourceDataSync:
    post:
      description: "<p>Update a resource data sync. After you create a resource data\
        \ sync for a Region, you can't change the account options for that sync. For\
        \ example, if you create a sync in the us-east-2 (Ohio) Region and you choose\
        \ the <code>Include only the current account</code> option, you can't edit\
        \ that sync later and choose the <code>Include all accounts from my Organizations\
        \ configuration</code> option. Instead, you must delete the first resource\
        \ data sync, and create a new one.</p> <note> <p>This API operation only supports\
        \ a resource data sync that was created with a SyncFromSource <code>SyncType</code>.</p>\
        \ </note>"
      operationId: update_resource_data_sync
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.UpdateResourceDataSync
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateResourceDataSyncRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateResourceDataSyncResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceDataSyncNotFoundException'
          description: ResourceDataSyncNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceDataSyncInvalidConfigurationException'
          description: ResourceDataSyncInvalidConfigurationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceDataSyncConflictException'
          description: ResourceDataSyncConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AmazonSSM.UpdateServiceSetting:
    post:
      description: "<p> <code>ServiceSetting</code> is an account-level setting for\
        \ an Amazon Web Services service. This setting defines how a user interacts\
        \ with or uses a service or a feature of a service. For example, if an Amazon\
        \ Web Services service charges money to the account based on feature or service\
        \ usage, then the Amazon Web Services service team might create a default\
        \ setting of \"false\". This means the user can't use this feature unless\
        \ they change the setting to \"true\" and intentionally opt in for a paid\
        \ feature.</p> <p>Services map a <code>SettingId</code> object to a setting\
        \ value. Amazon Web Services services teams define the default value for a\
        \ <code>SettingId</code>. You can't create a new <code>SettingId</code>, but\
        \ you can overwrite the default value if you have the <code>ssm:UpdateServiceSetting</code>\
        \ permission for the setting. Use the <a>GetServiceSetting</a> API operation\
        \ to view the current value. Or, use the <a>ResetServiceSetting</a> to change\
        \ the value back to the original value defined by the Amazon Web Services\
        \ service team.</p> <p>Update the service setting for the account. </p>"
      operationId: update_service_setting
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AmazonSSM.UpdateServiceSetting
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServiceSettingRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateServiceSettingResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceSettingNotFound'
          description: ServiceSettingNotFound
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyUpdates'
          description: TooManyUpdates
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AddTagsToResourceResult:
      properties: {}
      type: object
    AddTagsToResourceRequest:
      example:
        ResourceId: ""
        ResourceType: ""
        Tags: ""
      properties:
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceTypeForTagging'
          - description: "<p>Specifies the type of resource you are tagging.</p> <note>\
              \ <p>The <code>ManagedInstance</code> type for this API operation is\
              \ for on-premises managed nodes. You must specify the name of the managed\
              \ node in the following format: <code>mi-<i>ID_number</i> </code>. For\
              \ example, <code>mi-1a2b3c4d5e6f</code>.</p> </note>"
          title: ResourceType
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: "<p>The resource ID you want to tag.</p> <p>Use the ID of\
              \ the resource. Here are some examples:</p> <p> <code>MaintenanceWindow</code>:\
              \ <code>mw-012345abcde</code> </p> <p> <code>PatchBaseline</code>: <code>pb-012345abcde</code>\
              \ </p> <p> <code>Automation</code>: <code>example-c160-4567-8519-012345abcde</code>\
              \ </p> <p> <code>OpsMetadata</code> object: <code>ResourceID</code>\
              \ for tagging is created from the Amazon Resource Name (ARN) for the\
              \ object. Specifically, <code>ResourceID</code> is created from the\
              \ strings that come after the word <code>opsmetadata</code> in the ARN.\
              \ For example, an OpsMetadata object with an ARN of <code>arn:aws:ssm:us-east-2:1234567890:opsmetadata/aws/ssm/MyGroup/appmanager</code>\
              \ has a <code>ResourceID</code> of either <code>aws/ssm/MyGroup/appmanager</code>\
              \ or <code>/aws/ssm/MyGroup/appmanager</code>.</p> <p>For the <code>Document</code>\
              \ and <code>Parameter</code> values, use the name of the resource. If\
              \ you're tagging a shared document, you must use the full ARN of the\
              \ document.</p> <p> <code>ManagedInstance</code>: <code>mi-012345abcde</code>\
              \ </p> <note> <p>The <code>ManagedInstance</code> type for this API\
              \ operation is only for on-premises managed nodes. You must specify\
              \ the name of the managed node in the following format: <code>mi-<i>ID_number</i>\
              \ </code>. For example, <code>mi-1a2b3c4d5e6f</code>.</p> </note>"
          title: ResourceId
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: <p>One or more tags. The value parameter is required.</p>
              <important> <p>Don't enter personally identifiable information in this
              field.</p> </important>
          title: Tags
      required:
      - ResourceId
      - ResourceType
      - Tags
      title: AddTagsToResourceRequest
      type: object
    InvalidResourceType: {}
    InvalidResourceId: {}
    InternalServerError: {}
    TooManyTagsError: {}
    TooManyUpdates: {}
    AssociateOpsItemRelatedItemResponse:
      example:
        AssociationId: ""
      properties:
        AssociationId:
          allOf:
          - $ref: '#/components/schemas/OpsItemRelatedItemAssociationId'
          - description: The association ID.
          title: AssociationId
      title: AssociateOpsItemRelatedItemResponse
      type: object
    AssociateOpsItemRelatedItemRequest:
      example:
        ResourceUri: ""
        OpsItemId: ""
        AssociationType: ""
        ResourceType: ""
      properties:
        OpsItemId:
          allOf:
          - $ref: '#/components/schemas/OpsItemId'
          - description: The ID of the OpsItem to which you want to associate a resource
              as a related item.
          title: OpsItemId
        AssociationType:
          allOf:
          - $ref: '#/components/schemas/OpsItemRelatedItemAssociationType'
          - description: The type of association that you want to create between an
              OpsItem and a resource. OpsCenter supports <code>IsParentOf</code> and
              <code>RelatesTo</code> association types.
          title: AssociationType
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/OpsItemRelatedItemAssociationResourceType'
          - description: "<p>The type of resource that you want to associate with\
              \ an OpsItem. OpsCenter supports the following types:</p> <p> <code>AWS::SSMIncidents::IncidentRecord</code>:\
              \ an Incident Manager incident. </p> <p> <code>AWS::SSM::Document</code>:\
              \ a Systems Manager (SSM) document.</p>"
          title: ResourceType
        ResourceUri:
          allOf:
          - $ref: '#/components/schemas/OpsItemRelatedItemAssociationResourceUri'
          - description: The Amazon Resource Name (ARN) of the Amazon Web Services
              resource that you want to associate with the OpsItem.
          title: ResourceUri
      required:
      - AssociationType
      - OpsItemId
      - ResourceType
      - ResourceUri
      title: AssociateOpsItemRelatedItemRequest
      type: object
    OpsItemNotFoundException: {}
    OpsItemLimitExceededException: {}
    OpsItemInvalidParameterException: {}
    OpsItemRelatedItemAlreadyExistsException: {}
    CancelCommandResult:
      description: Whether or not the command was successfully canceled. There is
        no guarantee that a request can be canceled.
      properties: {}
      type: object
    CancelCommandRequest:
      description: <p/>
      example:
        CommandId: ""
        InstanceIds: ""
      properties:
        CommandId:
          allOf:
          - $ref: '#/components/schemas/CommandId'
          - description: The ID of the command you want to cancel.
          title: CommandId
        InstanceIds:
          allOf:
          - $ref: '#/components/schemas/InstanceIdList'
          - description: "(Optional) A list of managed node IDs on which you want\
              \ to cancel the command. If not provided, the command is canceled on\
              \ every node on which it was requested."
          title: InstanceIds
      required:
      - CommandId
      title: CancelCommandRequest
      type: object
    InvalidCommandId: {}
    InvalidInstanceId: {}
    DuplicateInstanceId: {}
    CancelMaintenanceWindowExecutionResult:
      example:
        WindowExecutionId: ""
      properties:
        WindowExecutionId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionId'
          - description: The ID of the maintenance window execution that has been
              stopped.
          title: WindowExecutionId
      title: CancelMaintenanceWindowExecutionResult
      type: object
    CancelMaintenanceWindowExecutionRequest:
      example:
        WindowExecutionId: ""
      properties:
        WindowExecutionId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionId'
          - description: The ID of the maintenance window execution to stop.
          title: WindowExecutionId
      required:
      - WindowExecutionId
      title: CancelMaintenanceWindowExecutionRequest
      type: object
    DoesNotExistException: {}
    CreateActivationResult:
      example:
        ActivationId: ""
        ActivationCode: ""
      properties:
        ActivationId:
          allOf:
          - $ref: '#/components/schemas/ActivationId'
          - description: The ID number generated by the system when it processed the
              activation. The activation ID functions like a user name.
          title: ActivationId
        ActivationCode:
          allOf:
          - $ref: '#/components/schemas/ActivationCode'
          - description: 'The code the system generates when it processes the activation.
              The activation code functions like a password to validate the activation
              ID. '
          title: ActivationCode
      title: CreateActivationResult
      type: object
    CreateActivationRequest:
      example:
        RegistrationLimit: ""
        Description: ""
        ExpirationDate: ""
        RegistrationMetadata: ""
        IamRole: ""
        DefaultInstanceName: ""
        Tags: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/ActivationDescription'
          - description: <p>A user-defined description of the resource that you want
              to register with Systems Manager. </p> <important> <p>Don't enter personally
              identifiable information in this field.</p> </important>
          title: Description
        DefaultInstanceName:
          allOf:
          - $ref: '#/components/schemas/DefaultInstanceName'
          - description: "<p>The name of the registered, managed node as it will appear\
              \ in the Amazon Web Services Systems Manager console or when you use\
              \ the Amazon Web Services command line tools to list Systems Manager\
              \ resources.</p> <important> <p>Don't enter personally identifiable\
              \ information in this field.</p> </important>"
          title: DefaultInstanceName
        IamRole:
          allOf:
          - $ref: '#/components/schemas/IamRole'
          - description: "<p>The name of the Identity and Access Management (IAM)\
              \ role that you want to assign to the managed node. This IAM role must\
              \ provide AssumeRole permissions for the Amazon Web Services Systems\
              \ Manager service principal <code>ssm.amazonaws.com</code>. For more\
              \ information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-service-role.html\"\
              >Create an IAM service role for a hybrid environment</a> in the <i>Amazon\
              \ Web Services Systems Manager User Guide</i>.</p> <note> <p>You can't\
              \ specify an IAM service-linked role for this parameter. You must create\
              \ a unique role.</p> </note>"
          title: IamRole
        RegistrationLimit:
          allOf:
          - $ref: '#/components/schemas/RegistrationLimit'
          - description: Specify the maximum number of managed nodes you want to register.
              The default value is <code>1</code>.
          title: RegistrationLimit
        ExpirationDate:
          allOf:
          - $ref: '#/components/schemas/ExpirationDate'
          - description: "The date by which this activation request should expire,\
              \ in timestamp format, such as \"2021-07-07T00:00:00\". You can specify\
              \ a date up to 30 days in advance. If you don't provide an expiration\
              \ date, the activation code expires in 24 hours."
          title: ExpirationDate
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "<p>Optional metadata that you assign to a resource. Tags\
              \ enable you to categorize a resource in different ways, such as by\
              \ purpose, owner, or environment. For example, you might want to tag\
              \ an activation to identify which servers or virtual machines (VMs)\
              \ in your on-premises environment you intend to activate. In this case,\
              \ you could specify the following key-value pairs:</p> <ul> <li> <p>\
              \ <code>Key=OS,Value=Windows</code> </p> </li> <li> <p> <code>Key=Environment,Value=Production</code>\
              \ </p> </li> </ul> <important> <p>When you install SSM Agent on your\
              \ on-premises servers and VMs, you specify an activation ID and code.\
              \ When you specify the activation ID and code, tags assigned to the\
              \ activation are automatically applied to the on-premises servers or\
              \ VMs.</p> </important> <p>You can't add tags to or delete tags from\
              \ an existing activation. You can tag your on-premises servers, edge\
              \ devices, and VMs after they connect to Systems Manager for the first\
              \ time and are assigned a managed node ID. This means they are listed\
              \ in the Amazon Web Services Systems Manager console with an ID that\
              \ is prefixed with \"mi-\". For information about how to add tags to\
              \ your managed nodes, see <a>AddTagsToResource</a>. For information\
              \ about how to remove tags from your managed nodes, see <a>RemoveTagsFromResource</a>.</p>"
          title: Tags
        RegistrationMetadata:
          allOf:
          - $ref: '#/components/schemas/RegistrationMetadataList'
          - description: Reserved for internal use.
          title: RegistrationMetadata
      required:
      - IamRole
      title: CreateActivationRequest
      type: object
    InvalidParameters: {}
    CreateAssociationResult:
      example:
        AssociationDescription:
          LastExecutionDate: ""
          AssociationName: ""
          LastSuccessfulExecutionDate: ""
          MaxErrors: ""
          AssociationVersion: ""
          ScheduleOffset: ""
          Name: ""
          TriggeredAlarms: ""
          DocumentVersion: ""
          TargetLocations: ""
          Status:
            AdditionalInfo: ""
            Message: ""
            Date: ""
            Name: ""
          CalendarNames: ""
          ScheduleExpression: ""
          Parameters: ""
          InstanceId: ""
          TargetMaps: ""
          MaxConcurrency: ""
          ComplianceSeverity: ""
          Overview:
            Status: ""
            AssociationStatusAggregatedCount: ""
            DetailedStatus: ""
          Targets: ""
          SyncCompliance: ""
          AlarmConfiguration:
            IgnorePollAlarmFailure: ""
            Alarms: ""
          OutputLocation:
            S3Location:
              OutputS3KeyPrefix: ""
              OutputS3Region: ""
              OutputS3BucketName: ""
          Date: ""
          ApplyOnlyAtCronInterval: ""
          LastUpdateAssociationDate: ""
          AutomationTargetParameterName: ""
          AssociationId: ""
      properties:
        AssociationDescription:
          $ref: '#/components/schemas/CreateAssociationResult_AssociationDescription'
      title: CreateAssociationResult
      type: object
    CreateAssociationRequest:
      example:
        AssociationName: ""
        CalendarNames: ""
        ScheduleExpression: ""
        MaxErrors: ""
        Parameters: ""
        InstanceId: ""
        TargetMaps: ""
        MaxConcurrency: ""
        ComplianceSeverity: ""
        Targets: ""
        SyncCompliance: ""
        AlarmConfiguration:
          IgnorePollAlarmFailure: ""
          Alarms: ""
        OutputLocation:
          S3Location:
            OutputS3KeyPrefix: ""
            OutputS3Region: ""
            OutputS3BucketName: ""
        ScheduleOffset: ""
        Name: ""
        ApplyOnlyAtCronInterval: ""
        DocumentVersion: ""
        AutomationTargetParameterName: ""
        Tags: ""
        TargetLocations: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DocumentARN'
          - description: "<p>The name of the SSM Command document or Automation runbook\
              \ that contains the configuration information for the managed node.</p>\
              \ <p>You can specify Amazon Web Services-predefined documents, documents\
              \ you created, or a document that is shared with you from another Amazon\
              \ Web Services account.</p> <p>For Systems Manager documents (SSM documents)\
              \ that are shared with you from other Amazon Web Services accounts,\
              \ you must specify the complete SSM document ARN, in the following format:</p>\
              \ <p> <code>arn:<i>partition</i>:ssm:<i>region</i>:<i>account-id</i>:document/<i>document-name</i>\
              \ </code> </p> <p>For example:</p> <p> <code>arn:aws:ssm:us-east-2:12345678912:document/My-Shared-Document</code>\
              \ </p> <p>For Amazon Web Services-predefined documents and SSM documents\
              \ you created in your account, you only need to specify the document\
              \ name. For example, <code>AWS-ApplyPatchBaseline</code> or <code>My-Document</code>.</p>"
          title: Name
        DocumentVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: "<p>The document version you want to associate with the target(s).\
              \ Can be a specific version or the default version.</p> <important>\
              \ <p>State Manager doesn't support running associations that use a new\
              \ version of a document if that document is shared from another account.\
              \ State Manager always runs the <code>default</code> version of a document\
              \ if shared from another account, even though the Systems Manager console\
              \ shows that a new version was processed. If you want to run an association\
              \ using a new version of a document shared form another account, you\
              \ must set the document version to <code>default</code>.</p> </important>"
          title: DocumentVersion
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          - description: "<p>The managed node ID.</p> <note> <p> <code>InstanceId</code>\
              \ has been deprecated. To specify a managed node ID for an association,\
              \ use the <code>Targets</code> parameter. Requests that include the\
              \ parameter <code>InstanceID</code> with Systems Manager documents (SSM\
              \ documents) that use schema version 2.0 or later will fail. In addition,\
              \ if you use the parameter <code>InstanceId</code>, you can't use the\
              \ parameters <code>AssociationName</code>, <code>DocumentVersion</code>,\
              \ <code>MaxErrors</code>, <code>MaxConcurrency</code>, <code>OutputLocation</code>,\
              \ or <code>ScheduleExpression</code>. To use these parameters, you must\
              \ use the <code>Targets</code> parameter.</p> </note>"
          title: InstanceId
        Parameters:
          allOf:
          - $ref: '#/components/schemas/Parameters'
          - description: The parameters for the runtime configuration of the document.
          title: Parameters
        Targets:
          allOf:
          - $ref: '#/components/schemas/Targets'
          - description: "The targets for the association. You can target managed\
              \ nodes by using tags, Amazon Web Services resource groups, all managed\
              \ nodes in an Amazon Web Services account, or individual managed node\
              \ IDs. You can target all managed nodes in an Amazon Web Services account\
              \ by specifying the <code>InstanceIds</code> key with a value of <code>*</code>.\
              \ For more information about choosing targets for an association, see\
              \ <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-state-manager-targets-and-rate-controls.html\"\
              >Using targets and rate controls with State Manager associations</a>\
              \ in the <i>Amazon Web Services Systems Manager User Guide</i>."
          title: Targets
        ScheduleExpression:
          allOf:
          - $ref: '#/components/schemas/ScheduleExpression'
          - description: A cron expression when the association will be applied to
              the target(s).
          title: ScheduleExpression
        OutputLocation:
          $ref: '#/components/schemas/CreateAssociationRequest_OutputLocation'
        AssociationName:
          allOf:
          - $ref: '#/components/schemas/AssociationName'
          - description: Specify a descriptive name for the association.
          title: AssociationName
        AutomationTargetParameterName:
          allOf:
          - $ref: '#/components/schemas/AutomationTargetParameterName'
          - description: Choose the parameter that will define how your automation
              will branch out. This target is required for associations that use an
              Automation runbook and target resources by using rate controls. Automation
              is a capability of Amazon Web Services Systems Manager.
          title: AutomationTargetParameterName
        MaxErrors:
          allOf:
          - $ref: '#/components/schemas/MaxErrors'
          - description: "<p>The number of errors that are allowed before the system\
              \ stops sending requests to run the association on additional targets.\
              \ You can specify either an absolute number of errors, for example 10,\
              \ or a percentage of the target set, for example 10%. If you specify\
              \ 3, for example, the system stops sending requests when the fourth\
              \ error is received. If you specify 0, then the system stops sending\
              \ requests after the first error is returned. If you run an association\
              \ on 50 managed nodes and set <code>MaxError</code> to 10%, then the\
              \ system stops sending the request when the sixth error is received.</p>\
              \ <p>Executions that are already running an association when <code>MaxErrors</code>\
              \ is reached are allowed to complete, but some of these executions may\
              \ fail as well. If you need to ensure that there won't be more than\
              \ max-errors failed executions, set <code>MaxConcurrency</code> to 1\
              \ so that executions proceed one at a time.</p>"
          title: MaxErrors
        MaxConcurrency:
          allOf:
          - $ref: '#/components/schemas/MaxConcurrency'
          - description: "<p>The maximum number of targets allowed to run the association\
              \ at the same time. You can specify a number, for example 10, or a percentage\
              \ of the target set, for example 10%. The default value is 100%, which\
              \ means all targets run the association at the same time.</p> <p>If\
              \ a new managed node starts and attempts to run an association while\
              \ Systems Manager is running <code>MaxConcurrency</code> associations,\
              \ the association is allowed to run. During the next association interval,\
              \ the new managed node will process its association within the limit\
              \ specified for <code>MaxConcurrency</code>.</p>"
          title: MaxConcurrency
        ComplianceSeverity:
          allOf:
          - $ref: '#/components/schemas/AssociationComplianceSeverity'
          - description: The severity level to assign to the association.
          title: ComplianceSeverity
        SyncCompliance:
          allOf:
          - $ref: '#/components/schemas/AssociationSyncCompliance'
          - description: "<p>The mode for generating association compliance. You can\
              \ specify <code>AUTO</code> or <code>MANUAL</code>. In <code>AUTO</code>\
              \ mode, the system uses the status of the association execution to determine\
              \ the compliance status. If the association execution runs successfully,\
              \ then the association is <code>COMPLIANT</code>. If the association\
              \ execution doesn't run successfully, the association is <code>NON-COMPLIANT</code>.</p>\
              \ <p>In <code>MANUAL</code> mode, you must specify the <code>AssociationId</code>\
              \ as a parameter for the <a>PutComplianceItems</a> API operation. In\
              \ this case, compliance data isn't managed by State Manager. It is managed\
              \ by your direct call to the <a>PutComplianceItems</a> API operation.</p>\
              \ <p>By default, all associations use <code>AUTO</code> mode.</p>"
          title: SyncCompliance
        ApplyOnlyAtCronInterval:
          allOf:
          - $ref: '#/components/schemas/ApplyOnlyAtCronInterval'
          - description: "By default, when you create a new association, the system\
              \ runs it immediately after it is created and then according to the\
              \ schedule you specified. Specify this option if you don't want an association\
              \ to run immediately after you create it. This parameter isn't supported\
              \ for rate expressions."
          title: ApplyOnlyAtCronInterval
        CalendarNames:
          allOf:
          - $ref: '#/components/schemas/CalendarNameOrARNList'
          - description: "The names or Amazon Resource Names (ARNs) of the Change\
              \ Calendar type documents you want to gate your associations under.\
              \ The associations only run when that change calendar is open. For more\
              \ information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-change-calendar\"\
              >Amazon Web Services Systems Manager Change Calendar</a>."
          title: CalendarNames
        TargetLocations:
          allOf:
          - $ref: '#/components/schemas/TargetLocations'
          - description: A location is a combination of Amazon Web Services Regions
              and Amazon Web Services accounts where you want to run the association.
              Use this action to create an association in multiple Regions and multiple
              accounts.
          title: TargetLocations
        ScheduleOffset:
          allOf:
          - $ref: '#/components/schemas/ScheduleOffset'
          - description: "<p>Number of days to wait after the scheduled day to run\
              \ an association. For example, if you specified a cron schedule of <code>cron(0\
              \ 0 ? * THU#2 *)</code>, you could specify an offset of 3 to run the\
              \ association each Sunday after the second Thursday of the month. For\
              \ more information about cron schedules for associations, see <a href=\"\
              https://docs.aws.amazon.com/systems-manager/latest/userguide/reference-cron-and-rate-expressions.html\"\
              >Reference: Cron and rate expressions for Systems Manager</a> in the\
              \ <i>Amazon Web Services Systems Manager User Guide</i>. </p> <note>\
              \ <p>To use offsets, you must specify the <code>ApplyOnlyAtCronInterval</code>\
              \ parameter. This option tells the system not to run an association\
              \ immediately after you create it. </p> </note>"
          title: ScheduleOffset
        TargetMaps:
          allOf:
          - $ref: '#/components/schemas/TargetMaps'
          - description: A key-value mapping of document parameters to target resources.
              Both Targets and TargetMaps can't be specified together.
          title: TargetMaps
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "Adds or overwrites one or more tags for a State Manager\
              \ association. <i>Tags</i> are metadata that you can assign to your\
              \ Amazon Web Services resources. Tags enable you to categorize your\
              \ resources in different ways, for example, by purpose, owner, or environment.\
              \ Each tag consists of a key and an optional value, both of which you\
              \ define. "
          title: Tags
        AlarmConfiguration:
          $ref: '#/components/schemas/AlarmConfiguration'
      required:
      - Name
      title: CreateAssociationRequest
      type: object
    AssociationAlreadyExists: {}
    AssociationLimitExceeded: {}
    InvalidDocument: {}
    InvalidDocumentVersion: {}
    UnsupportedPlatformType: {}
    InvalidOutputLocation: {}
    InvalidTarget: {}
    InvalidSchedule: {}
    InvalidTargetMaps: {}
    InvalidTag: {}
    CreateAssociationBatchResult:
      example:
        Failed: ""
        Successful: ""
      properties:
        Successful:
          allOf:
          - $ref: '#/components/schemas/AssociationDescriptionList'
          - description: Information about the associations that succeeded.
          title: Successful
        Failed:
          allOf:
          - $ref: '#/components/schemas/FailedCreateAssociationList'
          - description: Information about the associations that failed.
          title: Failed
      title: CreateAssociationBatchResult
      type: object
    CreateAssociationBatchRequest:
      example:
        Entries: ""
      properties:
        Entries:
          allOf:
          - $ref: '#/components/schemas/CreateAssociationBatchRequestEntries'
          - description: One or more associations.
          title: Entries
      required:
      - Entries
      title: CreateAssociationBatchRequest
      type: object
    CreateDocumentResult:
      example:
        DocumentDescription:
          ReviewInformation: ""
          Sha1: ""
          Owner: ""
          DocumentFormat: ""
          Description: ""
          Category: ""
          AttachmentsInformation: ""
          StatusInformation: ""
          DefaultVersion: ""
          Hash: ""
          Name: ""
          ApprovedVersion: ""
          CategoryEnum: ""
          ReviewStatus: ""
          DisplayName: ""
          TargetType: ""
          VersionName: ""
          DocumentVersion: ""
          Tags: ""
          Status: ""
          Parameters: ""
          SchemaVersion: ""
          Requires: ""
          HashType: ""
          DocumentType: ""
          LatestVersion: ""
          PendingReviewVersion: ""
          CreatedDate: ""
          Author: ""
          PlatformTypes: ""
      properties:
        DocumentDescription:
          $ref: '#/components/schemas/CreateDocumentResult_DocumentDescription'
      title: CreateDocumentResult
      type: object
    CreateDocumentRequest:
      example:
        DocumentFormat: ""
        Requires: ""
        Content: ""
        DisplayName: ""
        TargetType: ""
        DocumentType: ""
        VersionName: ""
        Attachments: ""
        Tags: ""
        Name: ""
      properties:
        Content:
          allOf:
          - $ref: '#/components/schemas/DocumentContent'
          - description: "<p>The content for the new SSM document in JSON or YAML\
              \ format. The content of the document must not exceed 64KB. This quota\
              \ also includes the content specified for input parameters at runtime.\
              \ We recommend storing the contents for your new document in an external\
              \ JSON or YAML file and referencing the file in a command.</p> <p>For\
              \ examples, see the following topics in the <i>Amazon Web Services Systems\
              \ Manager User Guide</i>.</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/create-ssm-document-api.html\"\
              >Create an SSM document (Amazon Web Services API)</a> </p> </li> <li>\
              \ <p> <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/create-ssm-document-cli.html\"\
              >Create an SSM document (Amazon Web Services CLI)</a> </p> </li> <li>\
              \ <p> <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/create-ssm-document-api.html\"\
              >Create an SSM document (API)</a> </p> </li> </ul>"
          title: Content
        Requires:
          allOf:
          - $ref: '#/components/schemas/DocumentRequiresList'
          - description: "A list of SSM documents required by a document. This parameter\
              \ is used exclusively by AppConfig. When a user creates an AppConfig\
              \ configuration in an SSM document, the user must also specify a required\
              \ document for validation purposes. In this case, an <code>ApplicationConfiguration</code>\
              \ document requires an <code>ApplicationConfigurationSchema</code> document\
              \ for validation purposes. For more information, see <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/what-is-appconfig.html\"\
              >What is AppConfig?</a> in the <i>AppConfig User Guide</i>."
          title: Requires
        Attachments:
          allOf:
          - $ref: '#/components/schemas/AttachmentsSourceList'
          - description: A list of key-value pairs that describe attachments to a
              version of a document.
          title: Attachments
        Name:
          allOf:
          - $ref: '#/components/schemas/DocumentName'
          - description: <p>A name for the SSM document.</p> <important> <p>You can't
              use the following strings as document name prefixes. These are reserved
              by Amazon Web Services for use as document name prefixes:</p> <ul> <li>
              <p> <code>aws</code> </p> </li> <li> <p> <code>amazon</code> </p> </li>
              <li> <p> <code>amzn</code> </p> </li> </ul> </important>
          title: Name
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DocumentDisplayName'
          - description: An optional field where you can specify a friendly name for
              the SSM document. This value can differ for each version of the document.
              You can update this value at a later time using the <a>UpdateDocument</a>
              operation.
          title: DisplayName
        VersionName:
          allOf:
          - $ref: '#/components/schemas/DocumentVersionName'
          - description: "An optional field specifying the version of the artifact\
              \ you are creating with the document. For example, <code>Release12.1</code>.\
              \ This value is unique across all versions of a document, and can't\
              \ be changed."
          title: VersionName
        DocumentType:
          allOf:
          - $ref: '#/components/schemas/DocumentType'
          - description: <p>The type of document to create.</p> <note> <p>The <code>DeploymentStrategy</code>
              document type is an internal-use-only document type reserved for AppConfig.</p>
              </note>
          title: DocumentType
        DocumentFormat:
          allOf:
          - $ref: '#/components/schemas/DocumentFormat'
          - description: "Specify the document format for the request. The document\
              \ format can be JSON, YAML, or TEXT. JSON is the default format."
          title: DocumentFormat
        TargetType:
          allOf:
          - $ref: '#/components/schemas/TargetType'
          - description: "Specify a target type to define the kinds of resources the\
              \ document can run on. For example, to run a document on EC2 instances,\
              \ specify the following value: <code>/AWS::EC2::Instance</code>. If\
              \ you specify a value of '/' the document can run on all types of resources.\
              \ If you don't specify a value, the document can't run on any resources.\
              \ For a list of valid resource types, see <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html\"\
              >Amazon Web Services resource and property types reference</a> in the\
              \ <i>CloudFormation User Guide</i>. "
          title: TargetType
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "<p>Optional metadata that you assign to a resource. Tags\
              \ enable you to categorize a resource in different ways, such as by\
              \ purpose, owner, or environment. For example, you might want to tag\
              \ an SSM document to identify the types of targets or the environment\
              \ where it will run. In this case, you could specify the following key-value\
              \ pairs:</p> <ul> <li> <p> <code>Key=OS,Value=Windows</code> </p> </li>\
              \ <li> <p> <code>Key=Environment,Value=Production</code> </p> </li>\
              \ </ul> <note> <p>To add tags to an existing SSM document, use the <a>AddTagsToResource</a>\
              \ operation.</p> </note>"
          title: Tags
      required:
      - Content
      - Name
      title: CreateDocumentRequest
      type: object
    DocumentAlreadyExists: {}
    MaxDocumentSizeExceeded: {}
    InvalidDocumentContent: {}
    DocumentLimitExceeded: {}
    InvalidDocumentSchemaVersion: {}
    CreateMaintenanceWindowResult:
      example:
        WindowId: ""
      properties:
        WindowId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowId'
          - description: The ID of the created maintenance window.
          title: WindowId
      title: CreateMaintenanceWindowResult
      type: object
    CreateMaintenanceWindowRequest:
      example:
        StartDate: ""
        Description: ""
        AllowUnassociatedTargets: ""
        Cutoff: ""
        Schedule: ""
        Duration: ""
        ScheduleOffset: ""
        ClientToken: ""
        EndDate: ""
        Tags: ""
        Name: ""
        ScheduleTimezone: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowName'
          - description: The name of the maintenance window.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowDescription'
          - description: 'An optional description for the maintenance window. We recommend
              specifying a description to help you organize your maintenance windows. '
          title: Description
        StartDate:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowStringDateTime'
          - description: "The date and time, in ISO-8601 Extended format, for when\
              \ you want the maintenance window to become active. <code>StartDate</code>\
              \ allows you to delay activation of the maintenance window until the\
              \ specified future date."
          title: StartDate
        EndDate:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowStringDateTime'
          - description: "The date and time, in ISO-8601 Extended format, for when\
              \ you want the maintenance window to become inactive. <code>EndDate</code>\
              \ allows you to set a date and time in the future when the maintenance\
              \ window will no longer run."
          title: EndDate
        Schedule:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowSchedule'
          - description: The schedule of the maintenance window in the form of a cron
              or rate expression.
          title: Schedule
        ScheduleTimezone:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTimezone'
          - description: "The time zone that the scheduled maintenance window executions\
              \ are based on, in Internet Assigned Numbers Authority (IANA) format.\
              \ For example: \"America/Los_Angeles\", \"UTC\", or \"Asia/Seoul\".\
              \ For more information, see the <a href=\"https://www.iana.org/time-zones\"\
              >Time Zone Database</a> on the IANA website."
          title: ScheduleTimezone
        ScheduleOffset:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowOffset'
          - description: "<p>The number of days to wait after the date and time specified\
              \ by a cron expression before running the maintenance window.</p> <p>For\
              \ example, the following cron expression schedules a maintenance window\
              \ to run on the third Tuesday of every month at 11:30 PM.</p> <p> <code>cron(30\
              \ 23 ? * TUE#3 *)</code> </p> <p>If the schedule offset is <code>2</code>,\
              \ the maintenance window won't run until two days later.</p>"
          title: ScheduleOffset
        Duration:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowDurationHours'
          - description: The duration of the maintenance window in hours.
          title: Duration
        Cutoff:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowCutoff'
          - description: The number of hours before the end of the maintenance window
              that Amazon Web Services Systems Manager stops scheduling new tasks
              for execution.
          title: Cutoff
        AllowUnassociatedTargets:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowAllowUnassociatedTargets'
          - description: "<p>Enables a maintenance window task to run on managed nodes,\
              \ even if you haven't registered those nodes as targets. If enabled,\
              \ then you must specify the unregistered managed nodes (by node ID)\
              \ when you register a task with the maintenance window.</p> <p>If you\
              \ don't enable this option, then you must specify previously-registered\
              \ targets when you register a task with the maintenance window.</p>"
          title: AllowUnassociatedTargets
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: User-provided idempotency token.
          title: ClientToken
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "<p>Optional metadata that you assign to a resource. Tags\
              \ enable you to categorize a resource in different ways, such as by\
              \ purpose, owner, or environment. For example, you might want to tag\
              \ a maintenance window to identify the type of tasks it will run, the\
              \ types of targets, and the environment it will run in. In this case,\
              \ you could specify the following key-value pairs:</p> <ul> <li> <p>\
              \ <code>Key=TaskType,Value=AgentUpdate</code> </p> </li> <li> <p> <code>Key=OS,Value=Windows</code>\
              \ </p> </li> <li> <p> <code>Key=Environment,Value=Production</code>\
              \ </p> </li> </ul> <note> <p>To add tags to an existing maintenance\
              \ window, use the <a>AddTagsToResource</a> operation.</p> </note>"
          title: Tags
      required:
      - AllowUnassociatedTargets
      - Cutoff
      - Duration
      - Name
      - Schedule
      title: CreateMaintenanceWindowRequest
      type: object
    IdempotentParameterMismatch: {}
    ResourceLimitExceededException: {}
    CreateOpsItemResponse:
      example:
        OpsItemId: ""
        OpsItemArn: ""
      properties:
        OpsItemId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the OpsItem.
          title: OpsItemId
        OpsItemArn:
          allOf:
          - $ref: '#/components/schemas/OpsItemArn'
          - description: The OpsItem Amazon Resource Name (ARN).
          title: OpsItemArn
      title: CreateOpsItemResponse
      type: object
    CreateOpsItemRequest:
      example:
        Description: ""
        OpsItemType: ""
        Category: ""
        AccountId: ""
        Priority: ""
        OperationalData: ""
        PlannedStartTime: ""
        Title: ""
        Severity: ""
        Source: ""
        ActualStartTime: ""
        ActualEndTime: ""
        Notifications: ""
        RelatedOpsItems: ""
        Tags: ""
        PlannedEndTime: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/OpsItemDescription'
          - description: 'Information about the OpsItem. '
          title: Description
        OpsItemType:
          allOf:
          - $ref: '#/components/schemas/OpsItemType'
          - description: <p>The type of OpsItem to create. Systems Manager supports
              the following types of OpsItems:</p> <ul> <li> <p> <code>/aws/issue</code>
              </p> <p>This type of OpsItem is used for default OpsItems created by
              OpsCenter. </p> </li> <li> <p> <code>/aws/changerequest</code> </p>
              <p>This type of OpsItem is used by Change Manager for reviewing and
              approving or rejecting change requests. </p> </li> <li> <p> <code>/aws/insights</code>
              </p> <p>This type of OpsItem is used by OpsCenter for aggregating and
              reporting on duplicate OpsItems. </p> </li> </ul>
          title: OpsItemType
        OperationalData:
          allOf:
          - $ref: '#/components/schemas/OpsItemOperationalData'
          - description: "<p>Operational data is custom data that provides useful\
              \ reference details about the OpsItem. For example, you can specify\
              \ log files, error strings, license keys, troubleshooting tips, or other\
              \ relevant data. You enter operational data as key-value pairs. The\
              \ key has a maximum length of 128 characters. The value has a maximum\
              \ size of 20 KB.</p> <important> <p>Operational data keys <i>can't</i>\
              \ begin with the following: <code>amazon</code>, <code>aws</code>, <code>amzn</code>,\
              \ <code>ssm</code>, <code>/amazon</code>, <code>/aws</code>, <code>/amzn</code>,\
              \ <code>/ssm</code>.</p> </important> <p>You can choose to make the\
              \ data searchable by other users in the account or you can restrict\
              \ search access. Searchable data means that all users with access to\
              \ the OpsItem Overview page (as provided by the <a>DescribeOpsItems</a>\
              \ API operation) can view and search on the specified data. Operational\
              \ data that isn't searchable is only viewable by users who have access\
              \ to the OpsItem (as provided by the <a>GetOpsItem</a> API operation).</p>\
              \ <p>Use the <code>/aws/resources</code> key in OperationalData to specify\
              \ a related resource in the request. Use the <code>/aws/automations</code>\
              \ key in OperationalData to associate an Automation runbook with the\
              \ OpsItem. To view Amazon Web Services CLI example commands that use\
              \ these keys, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-manually-create-OpsItems.html\"\
              >Creating OpsItems manually</a> in the <i>Amazon Web Services Systems\
              \ Manager User Guide</i>.</p>"
          title: OperationalData
        Notifications:
          allOf:
          - $ref: '#/components/schemas/OpsItemNotifications'
          - description: The Amazon Resource Name (ARN) of an SNS topic where notifications
              are sent when this OpsItem is edited or changed.
          title: Notifications
        Priority:
          allOf:
          - $ref: '#/components/schemas/OpsItemPriority'
          - description: The importance of this OpsItem in relation to other OpsItems
              in the system.
          title: Priority
        RelatedOpsItems:
          allOf:
          - $ref: '#/components/schemas/RelatedOpsItems'
          - description: "One or more OpsItems that share something in common with\
              \ the current OpsItems. For example, related OpsItems can include OpsItems\
              \ with similar error messages, impacted resources, or statuses for the\
              \ impacted resource."
          title: RelatedOpsItems
        Source:
          allOf:
          - $ref: '#/components/schemas/OpsItemSource'
          - description: "<p>The origin of the OpsItem, such as Amazon EC2 or Systems\
              \ Manager.</p> <note> <p>The source name can't contain the following\
              \ strings: <code>aws</code>, <code>amazon</code>, and <code>amzn</code>.\
              \ </p> </note>"
          title: Source
        Title:
          allOf:
          - $ref: '#/components/schemas/OpsItemTitle'
          - description: A short heading that describes the nature of the OpsItem
              and the impacted resource.
          title: Title
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "<p>Optional metadata that you assign to a resource.</p>\
              \ <p>Tags use a key-value pair. For example:</p> <p> <code>Key=Department,Value=Finance</code>\
              \ </p> <important> <p>To add tags to a new OpsItem, a user must have\
              \ IAM permissions for both the <code>ssm:CreateOpsItems</code> operation\
              \ and the <code>ssm:AddTagsToResource</code> operation. To add tags\
              \ to an existing OpsItem, use the <a>AddTagsToResource</a> operation.</p>\
              \ </important>"
          title: Tags
        Category:
          allOf:
          - $ref: '#/components/schemas/OpsItemCategory'
          - description: 'Specify a category to assign to an OpsItem. '
          title: Category
        Severity:
          allOf:
          - $ref: '#/components/schemas/OpsItemSeverity'
          - description: Specify a severity to assign to an OpsItem.
          title: Severity
        ActualStartTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time a runbook workflow started. Currently reported only
              for the OpsItem type <code>/aws/changerequest</code>.
          title: ActualStartTime
        ActualEndTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time a runbook workflow ended. Currently reported only
              for the OpsItem type <code>/aws/changerequest</code>.
          title: ActualEndTime
        PlannedStartTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time specified in a change request for a runbook workflow
              to start. Currently supported only for the OpsItem type <code>/aws/changerequest</code>.
          title: PlannedStartTime
        PlannedEndTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time specified in a change request for a runbook workflow
              to end. Currently supported only for the OpsItem type <code>/aws/changerequest</code>.
          title: PlannedEndTime
        AccountId:
          allOf:
          - $ref: '#/components/schemas/OpsItemAccountId'
          - description: "The target Amazon Web Services account where you want to\
              \ create an OpsItem. To make this call, your account must be configured\
              \ to work with OpsItems across accounts. For more information, see <a\
              \ href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-setup.html\"\
              >Set up OpsCenter</a> in the <i>Amazon Web Services Systems Manager\
              \ User Guide</i>."
          title: AccountId
      required:
      - Description
      - Source
      - Title
      title: CreateOpsItemRequest
      type: object
    OpsItemAlreadyExistsException: {}
    OpsItemAccessDeniedException: {}
    CreateOpsMetadataResult:
      example:
        OpsMetadataArn: ""
      properties:
        OpsMetadataArn:
          allOf:
          - $ref: '#/components/schemas/OpsMetadataArn'
          - description: The Amazon Resource Name (ARN) of the OpsMetadata Object
              or blob created by the call.
          title: OpsMetadataArn
      title: CreateOpsMetadataResult
      type: object
    CreateOpsMetadataRequest:
      example:
        ResourceId: ""
        Metadata: ""
        Tags: ""
      properties:
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/OpsMetadataResourceId'
          - description: A resource ID for a new Application Manager application.
          title: ResourceId
        Metadata:
          allOf:
          - $ref: '#/components/schemas/MetadataMap'
          - description: 'Metadata for a new Application Manager application. '
          title: Metadata
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "<p>Optional metadata that you assign to a resource. You\
              \ can specify a maximum of five tags for an OpsMetadata object. Tags\
              \ enable you to categorize a resource in different ways, such as by\
              \ purpose, owner, or environment. For example, you might want to tag\
              \ an OpsMetadata object to identify an environment or target Amazon\
              \ Web Services Region. In this case, you could specify the following\
              \ key-value pairs:</p> <ul> <li> <p> <code>Key=Environment,Value=Production</code>\
              \ </p> </li> <li> <p> <code>Key=Region,Value=us-east-2</code> </p> </li>\
              \ </ul>"
          title: Tags
      required:
      - ResourceId
      title: CreateOpsMetadataRequest
      type: object
    OpsMetadataAlreadyExistsException: {}
    OpsMetadataTooManyUpdatesException: {}
    OpsMetadataInvalidArgumentException: {}
    OpsMetadataLimitExceededException: {}
    CreatePatchBaselineResult:
      example:
        BaselineId: ""
      properties:
        BaselineId:
          allOf:
          - $ref: '#/components/schemas/BaselineId'
          - description: The ID of the created patch baseline.
          title: BaselineId
      title: CreatePatchBaselineResult
      type: object
    CreatePatchBaselineRequest:
      example:
        OperatingSystem: ""
        Description: ""
        ApprovalRules:
          PatchRules: ""
        Sources: ""
        Name: ""
        RejectedPatches: ""
        ApprovedPatches: ""
        RejectedPatchesAction: ""
        ApprovedPatchesComplianceLevel: ""
        ApprovedPatchesEnableNonSecurity: ""
        ClientToken: ""
        GlobalFilters:
          PatchFilters: ""
        Tags: ""
      properties:
        OperatingSystem:
          allOf:
          - $ref: '#/components/schemas/OperatingSystem'
          - description: Defines the operating system the patch baseline applies to.
              The default value is <code>WINDOWS</code>.
          title: OperatingSystem
        Name:
          allOf:
          - $ref: '#/components/schemas/BaselineName'
          - description: The name of the patch baseline.
          title: Name
        GlobalFilters:
          $ref: '#/components/schemas/CreatePatchBaselineRequest_GlobalFilters'
        ApprovalRules:
          $ref: '#/components/schemas/CreatePatchBaselineRequest_ApprovalRules'
        ApprovedPatches:
          allOf:
          - $ref: '#/components/schemas/PatchIdList'
          - description: "<p>A list of explicitly approved patches for the baseline.</p>\
              \ <p>For information about accepted formats for lists of approved patches\
              \ and rejected patches, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-approved-rejected-package-name-formats.html\"\
              >About package name formats for approved and rejected patch lists</a>\
              \ in the <i>Amazon Web Services Systems Manager User Guide</i>.</p>"
          title: ApprovedPatches
        ApprovedPatchesComplianceLevel:
          allOf:
          - $ref: '#/components/schemas/PatchComplianceLevel'
          - description: "Defines the compliance level for approved patches. When\
              \ an approved patch is reported as missing, this value describes the\
              \ severity of the compliance violation. The default value is <code>UNSPECIFIED</code>."
          title: ApprovedPatchesComplianceLevel
        ApprovedPatchesEnableNonSecurity:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether the list of approved patches includes non-security
              updates that should be applied to the managed nodes. The default value
              is <code>false</code>. Applies to Linux managed nodes only.
          title: ApprovedPatchesEnableNonSecurity
        RejectedPatches:
          allOf:
          - $ref: '#/components/schemas/PatchIdList'
          - description: "<p>A list of explicitly rejected patches for the baseline.</p>\
              \ <p>For information about accepted formats for lists of approved patches\
              \ and rejected patches, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-approved-rejected-package-name-formats.html\"\
              >About package name formats for approved and rejected patch lists</a>\
              \ in the <i>Amazon Web Services Systems Manager User Guide</i>.</p>"
          title: RejectedPatches
        RejectedPatchesAction:
          allOf:
          - $ref: '#/components/schemas/PatchAction'
          - description: "<p>The action for Patch Manager to take on patches included\
              \ in the <code>RejectedPackages</code> list.</p> <ul> <li> <p> <b> <code>ALLOW_AS_DEPENDENCY</code>\
              \ </b>: A package in the <code>Rejected</code> patches list is installed\
              \ only if it is a dependency of another package. It is considered compliant\
              \ with the patch baseline, and its status is reported as <code>InstalledOther</code>.\
              \ This is the default action if no option is specified.</p> </li> <li>\
              \ <p> <b> <code>BLOCK</code> </b>: Packages in the <code>RejectedPatches</code>\
              \ list, and packages that include them as dependencies, aren't installed\
              \ under any circumstances. If a package was installed before it was\
              \ added to the Rejected patches list, it is considered non-compliant\
              \ with the patch baseline, and its status is reported as <code>InstalledRejected</code>.</p>\
              \ </li> </ul>"
          title: RejectedPatchesAction
        Description:
          allOf:
          - $ref: '#/components/schemas/BaselineDescription'
          - description: A description of the patch baseline.
          title: Description
        Sources:
          allOf:
          - $ref: '#/components/schemas/PatchSourceList'
          - description: "Information about the patches to use to update the managed\
              \ nodes, including target operating systems and source repositories.\
              \ Applies to Linux managed nodes only."
          title: Sources
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: User-provided idempotency token.
          title: ClientToken
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "<p>Optional metadata that you assign to a resource. Tags\
              \ enable you to categorize a resource in different ways, such as by\
              \ purpose, owner, or environment. For example, you might want to tag\
              \ a patch baseline to identify the severity level of patches it specifies\
              \ and the operating system family it applies to. In this case, you could\
              \ specify the following key-value pairs:</p> <ul> <li> <p> <code>Key=PatchSeverity,Value=Critical</code>\
              \ </p> </li> <li> <p> <code>Key=OS,Value=Windows</code> </p> </li> </ul>\
              \ <note> <p>To add tags to an existing patch baseline, use the <a>AddTagsToResource</a>\
              \ operation.</p> </note>"
          title: Tags
      required:
      - Name
      title: CreatePatchBaselineRequest
      type: object
    CreateResourceDataSyncResult:
      properties: {}
      type: object
    CreateResourceDataSyncRequest:
      example:
        S3Destination:
          AWSKMSKeyARN: ""
          BucketName: ""
          SyncFormat: ""
          Region: ""
          Prefix: ""
          DestinationDataSharing:
            DestinationDataSharingType: ""
        SyncSource:
          SourceType: ""
          AwsOrganizationsSource:
            OrganizationSourceType: ""
            OrganizationalUnits: ""
          IncludeFutureRegions: ""
          SourceRegions: ""
          EnableAllOpsDataSources: ""
        SyncName: ""
        SyncType: ""
      properties:
        SyncName:
          allOf:
          - $ref: '#/components/schemas/ResourceDataSyncName'
          - description: A name for the configuration.
          title: SyncName
        S3Destination:
          $ref: '#/components/schemas/CreateResourceDataSyncRequest_S3Destination'
        SyncType:
          allOf:
          - $ref: '#/components/schemas/ResourceDataSyncType'
          - description: "Specify <code>SyncToDestination</code> to create a resource\
              \ data sync that synchronizes data to an S3 bucket for Inventory. If\
              \ you specify <code>SyncToDestination</code>, you must provide a value\
              \ for <code>S3Destination</code>. Specify <code>SyncFromSource</code>\
              \ to synchronize data from a single account and multiple Regions, or\
              \ multiple Amazon Web Services accounts and Amazon Web Services Regions,\
              \ as listed in Organizations for Explorer. If you specify <code>SyncFromSource</code>,\
              \ you must provide a value for <code>SyncSource</code>. The default\
              \ value is <code>SyncToDestination</code>."
          title: SyncType
        SyncSource:
          $ref: '#/components/schemas/CreateResourceDataSyncRequest_SyncSource'
      required:
      - SyncName
      title: CreateResourceDataSyncRequest
      type: object
    ResourceDataSyncCountExceededException: {}
    ResourceDataSyncAlreadyExistsException: {}
    ResourceDataSyncInvalidConfigurationException: {}
    DeleteActivationResult:
      properties: {}
      type: object
    DeleteActivationRequest:
      example:
        ActivationId: ""
      properties:
        ActivationId:
          allOf:
          - $ref: '#/components/schemas/ActivationId'
          - description: The ID of the activation that you want to delete.
          title: ActivationId
      required:
      - ActivationId
      title: DeleteActivationRequest
      type: object
    InvalidActivationId: {}
    InvalidActivation: {}
    DeleteAssociationResult:
      properties: {}
      type: object
    DeleteAssociationRequest:
      example:
        InstanceId: ""
        AssociationId: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DocumentARN'
          - description: The name of the SSM document.
          title: Name
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          - description: "<p>The managed node ID.</p> <note> <p> <code>InstanceId</code>\
              \ has been deprecated. To specify a managed node ID for an association,\
              \ use the <code>Targets</code> parameter. Requests that include the\
              \ parameter <code>InstanceID</code> with Systems Manager documents (SSM\
              \ documents) that use schema version 2.0 or later will fail. In addition,\
              \ if you use the parameter <code>InstanceId</code>, you can't use the\
              \ parameters <code>AssociationName</code>, <code>DocumentVersion</code>,\
              \ <code>MaxErrors</code>, <code>MaxConcurrency</code>, <code>OutputLocation</code>,\
              \ or <code>ScheduleExpression</code>. To use these parameters, you must\
              \ use the <code>Targets</code> parameter.</p> </note>"
          title: InstanceId
        AssociationId:
          allOf:
          - $ref: '#/components/schemas/AssociationId'
          - description: The association ID that you want to delete.
          title: AssociationId
      title: DeleteAssociationRequest
      type: object
    AssociationDoesNotExist: {}
    DeleteDocumentResult:
      properties: {}
      type: object
    DeleteDocumentRequest:
      example:
        Force: ""
        VersionName: ""
        DocumentVersion: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DocumentName'
          - description: The name of the document.
          title: Name
        DocumentVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: "The version of the document that you want to delete. If\
              \ not provided, all versions of the document are deleted."
          title: DocumentVersion
        VersionName:
          allOf:
          - $ref: '#/components/schemas/DocumentVersionName'
          - description: "The version name of the document that you want to delete.\
              \ If not provided, all versions of the document are deleted."
          title: VersionName
        Force:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Some SSM document types require that you specify a <code>Force</code>\
              \ flag before you can delete the document. For example, you must specify\
              \ a <code>Force</code> flag to delete a document of type <code>ApplicationConfigurationSchema</code>.\
              \ You can restrict access to the <code>Force</code> flag in an Identity\
              \ and Access Management (IAM) policy."
          title: Force
      required:
      - Name
      title: DeleteDocumentRequest
      type: object
    InvalidDocumentOperation: {}
    AssociatedInstances: {}
    DeleteInventoryResult:
      example:
        TypeName: ""
        DeletionSummary:
          TotalCount: ""
          RemainingCount: ""
          SummaryItems: ""
        DeletionId: ""
      properties:
        DeletionId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: 'Every <code>DeleteInventory</code> operation is assigned
              a unique ID. This option returns a unique ID. You can use this ID to
              query the status of a delete operation. This option is useful for ensuring
              that a delete operation has completed before you begin other operations. '
          title: DeletionId
        TypeName:
          allOf:
          - $ref: '#/components/schemas/InventoryItemTypeName'
          - description: The name of the inventory data type specified in the request.
          title: TypeName
        DeletionSummary:
          $ref: '#/components/schemas/DeleteInventoryResult_DeletionSummary'
      title: DeleteInventoryResult
      type: object
    DeleteInventoryRequest:
      example:
        TypeName: ""
        SchemaDeleteOption: ""
        DryRun: ""
        ClientToken: ""
      properties:
        TypeName:
          allOf:
          - $ref: '#/components/schemas/InventoryItemTypeName'
          - description: 'The name of the custom inventory type for which you want
              to delete either all previously collected data or the inventory type
              itself. '
          title: TypeName
        SchemaDeleteOption:
          allOf:
          - $ref: '#/components/schemas/InventorySchemaDeleteOption'
          - description: "<p>Use the <code>SchemaDeleteOption</code> to delete a custom\
              \ inventory type (schema). If you don't choose this option, the system\
              \ only deletes existing inventory data associated with the custom inventory\
              \ type. Choose one of the following options:</p> <p>DisableSchema: If\
              \ you choose this option, the system ignores all inventory data for\
              \ the specified version, and any earlier versions. To enable this schema\
              \ again, you must call the <code>PutInventory</code> operation for a\
              \ version greater than the disabled version.</p> <p>DeleteSchema: This\
              \ option deletes the specified custom type from the Inventory service.\
              \ You can recreate the schema later, if you want.</p>"
          title: SchemaDeleteOption
        DryRun:
          allOf:
          - $ref: '#/components/schemas/DryRun'
          - description: "Use this option to view a summary of the deletion request\
              \ without deleting any data or the data type. This option is useful\
              \ when you only want to understand what will be deleted. Once you validate\
              \ that the data to be deleted is what you intend to delete, you can\
              \ run the same command without specifying the <code>DryRun</code> option."
          title: DryRun
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: User-provided idempotency token.
          title: ClientToken
      required:
      - TypeName
      title: DeleteInventoryRequest
      type: object
    InvalidTypeNameException: {}
    InvalidOptionException: {}
    InvalidDeleteInventoryParametersException: {}
    InvalidInventoryRequestException: {}
    DeleteMaintenanceWindowResult:
      example:
        WindowId: ""
      properties:
        WindowId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowId'
          - description: The ID of the deleted maintenance window.
          title: WindowId
      title: DeleteMaintenanceWindowResult
      type: object
    DeleteMaintenanceWindowRequest:
      example:
        WindowId: ""
      properties:
        WindowId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowId'
          - description: The ID of the maintenance window to delete.
          title: WindowId
      required:
      - WindowId
      title: DeleteMaintenanceWindowRequest
      type: object
    DeleteOpsMetadataResult:
      properties: {}
      type: object
    DeleteOpsMetadataRequest:
      example:
        OpsMetadataArn: ""
      properties:
        OpsMetadataArn:
          allOf:
          - $ref: '#/components/schemas/OpsMetadataArn'
          - description: The Amazon Resource Name (ARN) of an OpsMetadata Object to
              delete.
          title: OpsMetadataArn
      required:
      - OpsMetadataArn
      title: DeleteOpsMetadataRequest
      type: object
    OpsMetadataNotFoundException: {}
    DeleteParameterResult:
      properties: {}
      type: object
    DeleteParameterRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/PSParameterName'
          - description: The name of the parameter to delete.
          title: Name
      required:
      - Name
      title: DeleteParameterRequest
      type: object
    ParameterNotFound: {}
    DeleteParametersResult:
      example:
        DeletedParameters: ""
        InvalidParameters: ""
      properties:
        DeletedParameters:
          allOf:
          - $ref: '#/components/schemas/ParameterNameList'
          - description: The names of the deleted parameters.
          title: DeletedParameters
        InvalidParameters:
          allOf:
          - $ref: '#/components/schemas/ParameterNameList'
          - description: The names of parameters that weren't deleted because the
              parameters aren't valid.
          title: InvalidParameters
      title: DeleteParametersResult
      type: object
    DeleteParametersRequest:
      example:
        Names: ""
      properties:
        Names:
          allOf:
          - $ref: '#/components/schemas/ParameterNameList'
          - description: "The names of the parameters to delete. After deleting a\
              \ parameter, wait for at least 30 seconds to create a parameter with\
              \ the same name."
          title: Names
      required:
      - Names
      title: DeleteParametersRequest
      type: object
    DeletePatchBaselineResult:
      example:
        BaselineId: ""
      properties:
        BaselineId:
          allOf:
          - $ref: '#/components/schemas/BaselineId'
          - description: The ID of the deleted patch baseline.
          title: BaselineId
      title: DeletePatchBaselineResult
      type: object
    DeletePatchBaselineRequest:
      example:
        BaselineId: ""
      properties:
        BaselineId:
          allOf:
          - $ref: '#/components/schemas/BaselineId'
          - description: The ID of the patch baseline to delete.
          title: BaselineId
      required:
      - BaselineId
      title: DeletePatchBaselineRequest
      type: object
    ResourceInUseException: {}
    DeleteResourceDataSyncResult:
      properties: {}
      type: object
    DeleteResourceDataSyncRequest:
      example:
        SyncName: ""
        SyncType: ""
      properties:
        SyncName:
          allOf:
          - $ref: '#/components/schemas/ResourceDataSyncName'
          - description: The name of the configuration to delete.
          title: SyncName
        SyncType:
          allOf:
          - $ref: '#/components/schemas/ResourceDataSyncType'
          - description: Specify the type of resource data sync to delete.
          title: SyncType
      required:
      - SyncName
      title: DeleteResourceDataSyncRequest
      type: object
    ResourceDataSyncNotFoundException: {}
    DeleteResourcePolicyResponse:
      properties: {}
      type: object
    DeleteResourcePolicyRequest:
      example:
        ResourceArn: ""
        PolicyHash: ""
        PolicyId: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArnString'
          - description: Amazon Resource Name (ARN) of the resource to which the policies
              are attached.
          title: ResourceArn
        PolicyId:
          allOf:
          - $ref: '#/components/schemas/PolicyId'
          - description: The policy ID.
          title: PolicyId
        PolicyHash:
          allOf:
          - $ref: '#/components/schemas/PolicyHash'
          - description: ID of the current policy version. The hash helps to prevent
              multiple calls from attempting to overwrite a policy.
          title: PolicyHash
      required:
      - PolicyHash
      - PolicyId
      - ResourceArn
      title: DeleteResourcePolicyRequest
      type: object
    ResourcePolicyInvalidParameterException: {}
    ResourcePolicyConflictException: {}
    DeregisterManagedInstanceResult:
      properties: {}
      type: object
    DeregisterManagedInstanceRequest:
      example:
        InstanceId: ""
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/ManagedInstanceId'
          - description: 'The ID assigned to the managed node when you registered
              it using the activation process. '
          title: InstanceId
      required:
      - InstanceId
      title: DeregisterManagedInstanceRequest
      type: object
    DeregisterPatchBaselineForPatchGroupResult:
      example:
        BaselineId: ""
        PatchGroup: ""
      properties:
        BaselineId:
          allOf:
          - $ref: '#/components/schemas/BaselineId'
          - description: The ID of the patch baseline the patch group was deregistered
              from.
          title: BaselineId
        PatchGroup:
          allOf:
          - $ref: '#/components/schemas/PatchGroup'
          - description: The name of the patch group deregistered from the patch baseline.
          title: PatchGroup
      title: DeregisterPatchBaselineForPatchGroupResult
      type: object
    DeregisterPatchBaselineForPatchGroupRequest:
      example:
        BaselineId: ""
        PatchGroup: ""
      properties:
        BaselineId:
          allOf:
          - $ref: '#/components/schemas/BaselineId'
          - description: The ID of the patch baseline to deregister the patch group
              from.
          title: BaselineId
        PatchGroup:
          allOf:
          - $ref: '#/components/schemas/PatchGroup'
          - description: The name of the patch group that should be deregistered from
              the patch baseline.
          title: PatchGroup
      required:
      - BaselineId
      - PatchGroup
      title: DeregisterPatchBaselineForPatchGroupRequest
      type: object
    DeregisterTargetFromMaintenanceWindowResult:
      example:
        WindowId: ""
        WindowTargetId: ""
      properties:
        WindowId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowId'
          - description: The ID of the maintenance window the target was removed from.
          title: WindowId
        WindowTargetId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTargetId'
          - description: The ID of the removed target definition.
          title: WindowTargetId
      title: DeregisterTargetFromMaintenanceWindowResult
      type: object
    DeregisterTargetFromMaintenanceWindowRequest:
      example:
        WindowId: ""
        Safe: ""
        WindowTargetId: ""
      properties:
        WindowId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowId'
          - description: The ID of the maintenance window the target should be removed
              from.
          title: WindowId
        WindowTargetId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTargetId'
          - description: The ID of the target definition to remove.
          title: WindowTargetId
        Safe:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "The system checks if the target is being referenced by a\
              \ task. If the target is being referenced, the system returns an error\
              \ and doesn't deregister the target from the maintenance window."
          title: Safe
      required:
      - WindowId
      - WindowTargetId
      title: DeregisterTargetFromMaintenanceWindowRequest
      type: object
    TargetInUseException: {}
    DeregisterTaskFromMaintenanceWindowResult:
      example:
        WindowTaskId: ""
        WindowId: ""
      properties:
        WindowId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowId'
          - description: The ID of the maintenance window the task was removed from.
          title: WindowId
        WindowTaskId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskId'
          - description: The ID of the task removed from the maintenance window.
          title: WindowTaskId
      title: DeregisterTaskFromMaintenanceWindowResult
      type: object
    DeregisterTaskFromMaintenanceWindowRequest:
      example:
        WindowTaskId: ""
        WindowId: ""
      properties:
        WindowId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowId'
          - description: The ID of the maintenance window the task should be removed
              from.
          title: WindowId
        WindowTaskId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskId'
          - description: The ID of the task to remove from the maintenance window.
          title: WindowTaskId
      required:
      - WindowId
      - WindowTaskId
      title: DeregisterTaskFromMaintenanceWindowRequest
      type: object
    DescribeActivationsResult:
      example:
        NextToken: ""
        ActivationList: ""
      properties:
        ActivationList:
          allOf:
          - $ref: '#/components/schemas/ActivationList'
          - description: A list of activations for your Amazon Web Services account.
          title: ActivationList
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: 'The token for the next set of items to return. Use this
              token to get the next set of results. '
          title: NextToken
      title: DescribeActivationsResult
      type: object
    DescribeActivationsRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/DescribeActivationsFilterList'
          - description: A filter to view information about your activations.
          title: Filters
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: 'A token to start the list. Use this token to get the next
              set of results. '
          title: NextToken
      title: DescribeActivationsRequest
      type: object
    InvalidFilter: {}
    InvalidNextToken: {}
    DescribeAssociationResult:
      example:
        AssociationDescription:
          LastExecutionDate: ""
          AssociationName: ""
          LastSuccessfulExecutionDate: ""
          MaxErrors: ""
          AssociationVersion: ""
          ScheduleOffset: ""
          Name: ""
          TriggeredAlarms: ""
          DocumentVersion: ""
          TargetLocations: ""
          Status:
            AdditionalInfo: ""
            Message: ""
            Date: ""
            Name: ""
          CalendarNames: ""
          ScheduleExpression: ""
          Parameters: ""
          InstanceId: ""
          TargetMaps: ""
          MaxConcurrency: ""
          ComplianceSeverity: ""
          Overview:
            Status: ""
            AssociationStatusAggregatedCount: ""
            DetailedStatus: ""
          Targets: ""
          SyncCompliance: ""
          AlarmConfiguration:
            IgnorePollAlarmFailure: ""
            Alarms: ""
          OutputLocation:
            S3Location:
              OutputS3KeyPrefix: ""
              OutputS3Region: ""
              OutputS3BucketName: ""
          Date: ""
          ApplyOnlyAtCronInterval: ""
          LastUpdateAssociationDate: ""
          AutomationTargetParameterName: ""
          AssociationId: ""
      properties:
        AssociationDescription:
          $ref: '#/components/schemas/CreateAssociationResult_AssociationDescription'
      title: DescribeAssociationResult
      type: object
    DescribeAssociationRequest:
      example:
        InstanceId: ""
        AssociationVersion: ""
        AssociationId: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DocumentARN'
          - description: The name of the SSM document.
          title: Name
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          - description: The managed node ID.
          title: InstanceId
        AssociationId:
          allOf:
          - $ref: '#/components/schemas/AssociationId'
          - description: The association ID for which you want information.
          title: AssociationId
        AssociationVersion:
          allOf:
          - $ref: '#/components/schemas/AssociationVersion'
          - description: "Specify the association version to retrieve. To view the\
              \ latest version, either specify <code>$LATEST</code> for this parameter,\
              \ or omit this parameter. To view a list of all associations for a managed\
              \ node, use <a>ListAssociations</a>. To get a list of versions for a\
              \ specific association, use <a>ListAssociationVersions</a>. "
          title: AssociationVersion
      title: DescribeAssociationRequest
      type: object
    InvalidAssociationVersion: {}
    DescribeAssociationExecutionTargetsResult:
      example:
        NextToken: ""
        AssociationExecutionTargets: ""
      properties:
        AssociationExecutionTargets:
          allOf:
          - $ref: '#/components/schemas/AssociationExecutionTargetsList'
          - description: Information about the execution.
          title: AssociationExecutionTargets
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. Use this token
              to get the next set of results.
          title: NextToken
      title: DescribeAssociationExecutionTargetsResult
      type: object
    DescribeAssociationExecutionTargetsRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
        AssociationId: ""
        ExecutionId: ""
      properties:
        AssociationId:
          allOf:
          - $ref: '#/components/schemas/AssociationId'
          - description: The association ID that includes the execution for which
              you want to view details.
          title: AssociationId
        ExecutionId:
          allOf:
          - $ref: '#/components/schemas/AssociationExecutionId'
          - description: The execution ID for which you want to view details.
          title: ExecutionId
        Filters:
          allOf:
          - $ref: '#/components/schemas/AssociationExecutionTargetsFilterList'
          - description: <p>Filters for the request. You can specify the following
              filters and values.</p> <p>Status (EQUAL)</p> <p>ResourceId (EQUAL)</p>
              <p>ResourceType (EQUAL)</p>
          title: Filters
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: 'A token to start the list. Use this token to get the next
              set of results. '
          title: NextToken
      required:
      - AssociationId
      - ExecutionId
      title: DescribeAssociationExecutionTargetsRequest
      type: object
    AssociationExecutionDoesNotExist: {}
    DescribeAssociationExecutionsResult:
      example:
        AssociationExecutions: ""
        NextToken: ""
      properties:
        AssociationExecutions:
          allOf:
          - $ref: '#/components/schemas/AssociationExecutionsList'
          - description: A list of the executions for the specified association ID.
          title: AssociationExecutions
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. Use this token
              to get the next set of results.
          title: NextToken
      title: DescribeAssociationExecutionsResult
      type: object
    DescribeAssociationExecutionsRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
        AssociationId: ""
      properties:
        AssociationId:
          allOf:
          - $ref: '#/components/schemas/AssociationId'
          - description: The association ID for which you want to view execution history
              details.
          title: AssociationId
        Filters:
          allOf:
          - $ref: '#/components/schemas/AssociationExecutionFilterList'
          - description: "<p>Filters for the request. You can specify the following\
              \ filters and values.</p> <p>ExecutionId (EQUAL)</p> <p>Status (EQUAL)</p>\
              \ <p>CreatedTime (EQUAL, GREATER_THAN, LESS_THAN)</p>"
          title: Filters
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: 'A token to start the list. Use this token to get the next
              set of results. '
          title: NextToken
      required:
      - AssociationId
      title: DescribeAssociationExecutionsRequest
      type: object
    DescribeAutomationExecutionsResult:
      example:
        AutomationExecutionMetadataList: ""
        NextToken: ""
      properties:
        AutomationExecutionMetadataList:
          allOf:
          - $ref: '#/components/schemas/AutomationExecutionMetadataList'
          - description: "The list of details about each automation execution which\
              \ has occurred which matches the filter specification, if any."
          title: AutomationExecutionMetadataList
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use when requesting the next set of items.\
              \ If there are no additional items to return, the string is empty."
          title: NextToken
      title: DescribeAutomationExecutionsResult
      type: object
    DescribeAutomationExecutionsRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/AutomationExecutionFilterList'
          - description: Filters used to limit the scope of executions that are requested.
          title: Filters
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. (You received
              this token from a previous call.)
          title: NextToken
      title: DescribeAutomationExecutionsRequest
      type: object
    InvalidFilterKey: {}
    InvalidFilterValue: {}
    DescribeAutomationStepExecutionsResult:
      example:
        StepExecutions: ""
        NextToken: ""
      properties:
        StepExecutions:
          allOf:
          - $ref: '#/components/schemas/StepExecutionList'
          - description: A list of details about the current state of all steps that
              make up an execution.
          title: StepExecutions
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use when requesting the next set of items.\
              \ If there are no additional items to return, the string is empty."
          title: NextToken
      title: DescribeAutomationStepExecutionsResult
      type: object
    DescribeAutomationStepExecutionsRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
        ReverseOrder: ""
        AutomationExecutionId: ""
      properties:
        AutomationExecutionId:
          allOf:
          - $ref: '#/components/schemas/AutomationExecutionId'
          - description: The Automation execution ID for which you want step execution
              descriptions.
          title: AutomationExecutionId
        Filters:
          allOf:
          - $ref: '#/components/schemas/StepExecutionFilterList'
          - description: One or more filters to limit the number of step executions
              returned by the request.
          title: Filters
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. (You received
              this token from a previous call.)
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
        ReverseOrder:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether to list step executions in reverse order
              by start time. The default value is 'false'.
          title: ReverseOrder
      required:
      - AutomationExecutionId
      title: DescribeAutomationStepExecutionsRequest
      type: object
    AutomationExecutionNotFoundException: {}
    DescribeAvailablePatchesResult:
      example:
        NextToken: ""
        Patches: ""
      properties:
        Patches:
          allOf:
          - $ref: '#/components/schemas/PatchList'
          - description: An array of patches. Each entry in the array is a patch structure.
          title: Patches
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use when requesting the next set of items.\
              \ If there are no additional items to return, the string is empty."
          title: NextToken
      title: DescribeAvailablePatchesResult
      type: object
    DescribeAvailablePatchesRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/PatchOrchestratorFilterList'
          - description: "<p>Each element in the array is a structure containing a\
              \ key-value pair.</p> <p> <b>Windows Server</b> </p> <p>Supported keys\
              \ for Windows Server managed node patches include the following:</p>\
              \ <ul> <li> <p> <b> <code>PATCH_SET</code> </b> </p> <p>Sample values:\
              \ <code>OS</code> | <code>APPLICATION</code> </p> </li> <li> <p> <b>\
              \ <code>PRODUCT</code> </b> </p> <p>Sample values: <code>WindowsServer2012</code>\
              \ | <code>Office 2010</code> | <code>MicrosoftDefenderAntivirus</code>\
              \ </p> </li> <li> <p> <b> <code>PRODUCT_FAMILY</code> </b> </p> <p>Sample\
              \ values: <code>Windows</code> | <code>Office</code> </p> </li> <li>\
              \ <p> <b> <code>MSRC_SEVERITY</code> </b> </p> <p>Sample values: <code>ServicePacks</code>\
              \ | <code>Important</code> | <code>Moderate</code> </p> </li> <li> <p>\
              \ <b> <code>CLASSIFICATION</code> </b> </p> <p>Sample values: <code>ServicePacks</code>\
              \ | <code>SecurityUpdates</code> | <code>DefinitionUpdates</code> </p>\
              \ </li> <li> <p> <b> <code>PATCH_ID</code> </b> </p> <p>Sample values:\
              \ <code>KB123456</code> | <code>KB4516046</code> </p> </li> </ul> <p>\
              \ <b>Linux</b> </p> <important> <p>When specifying filters for Linux\
              \ patches, you must specify a key-pair for <code>PRODUCT</code>. For\
              \ example, using the Command Line Interface (CLI), the following command\
              \ fails:</p> <p> <code>aws ssm describe-available-patches --filters\
              \ Key=CVE_ID,Values=CVE-2018-3615</code> </p> <p>However, the following\
              \ command succeeds:</p> <p> <code>aws ssm describe-available-patches\
              \ --filters Key=PRODUCT,Values=AmazonLinux2018.03 Key=CVE_ID,Values=CVE-2018-3615</code>\
              \ </p> </important> <p>Supported keys for Linux managed node patches\
              \ include the following:</p> <ul> <li> <p> <b> <code>PRODUCT</code>\
              \ </b> </p> <p>Sample values: <code>AmazonLinux2018.03</code> | <code>AmazonLinux2.0</code>\
              \ </p> </li> <li> <p> <b> <code>NAME</code> </b> </p> <p>Sample values:\
              \ <code>kernel-headers</code> | <code>samba-python</code> | <code>php</code>\
              \ </p> </li> <li> <p> <b> <code>SEVERITY</code> </b> </p> <p>Sample\
              \ values: <code>Critical</code> | <code>Important</code> | <code>Medium</code>\
              \ | <code>Low</code> </p> </li> <li> <p> <b> <code>EPOCH</code> </b>\
              \ </p> <p>Sample values: <code>0</code> | <code>1</code> </p> </li>\
              \ <li> <p> <b> <code>VERSION</code> </b> </p> <p>Sample values: <code>78.6.1</code>\
              \ | <code>4.10.16</code> </p> </li> <li> <p> <b> <code>RELEASE</code>\
              \ </b> </p> <p>Sample values: <code>9.56.amzn1</code> | <code>1.amzn2</code>\
              \ </p> </li> <li> <p> <b> <code>ARCH</code> </b> </p> <p>Sample values:\
              \ <code>i686</code> | <code>x86_64</code> </p> </li> <li> <p> <b> <code>REPOSITORY</code>\
              \ </b> </p> <p>Sample values: <code>Core</code> | <code>Updates</code>\
              \ </p> </li> <li> <p> <b> <code>ADVISORY_ID</code> </b> </p> <p>Sample\
              \ values: <code>ALAS-2018-1058</code> | <code>ALAS2-2021-1594</code>\
              \ </p> </li> <li> <p> <b> <code>CVE_ID</code> </b> </p> <p>Sample values:\
              \ <code>CVE-2018-3615</code> | <code>CVE-2020-1472</code> </p> </li>\
              \ <li> <p> <b> <code>BUGZILLA_ID</code> </b> </p> <p>Sample values:\
              \ <code>1463241</code> </p> </li> </ul>"
          title: Filters
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PatchBaselineMaxResults'
          - description: The maximum number of patches to return (per page).
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. (You received
              this token from a previous call.)
          title: NextToken
      title: DescribeAvailablePatchesRequest
      type: object
    DescribeDocumentResult:
      example:
        Document:
          ReviewInformation: ""
          Sha1: ""
          Owner: ""
          DocumentFormat: ""
          Description: ""
          Category: ""
          AttachmentsInformation: ""
          StatusInformation: ""
          DefaultVersion: ""
          Hash: ""
          Name: ""
          ApprovedVersion: ""
          CategoryEnum: ""
          ReviewStatus: ""
          DisplayName: ""
          TargetType: ""
          VersionName: ""
          DocumentVersion: ""
          Tags: ""
          Status: ""
          Parameters: ""
          SchemaVersion: ""
          Requires: ""
          HashType: ""
          DocumentType: ""
          LatestVersion: ""
          PendingReviewVersion: ""
          CreatedDate: ""
          Author: ""
          PlatformTypes: ""
      properties:
        Document:
          $ref: '#/components/schemas/CreateDocumentResult_DocumentDescription'
      title: DescribeDocumentResult
      type: object
    DescribeDocumentRequest:
      example:
        VersionName: ""
        DocumentVersion: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DocumentARN'
          - description: The name of the SSM document.
          title: Name
        DocumentVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: The document version for which you want information. Can
              be a specific version or the default version.
          title: DocumentVersion
        VersionName:
          allOf:
          - $ref: '#/components/schemas/DocumentVersionName'
          - description: "An optional field specifying the version of the artifact\
              \ associated with the document. For example, \"Release 12, Update 6\"\
              . This value is unique across all versions of a document, and can't\
              \ be changed."
          title: VersionName
      required:
      - Name
      title: DescribeDocumentRequest
      type: object
    DescribeDocumentPermissionResponse:
      example:
        AccountSharingInfoList: ""
        AccountIds: ""
        NextToken: ""
      properties:
        AccountIds:
          allOf:
          - $ref: '#/components/schemas/AccountIdList'
          - description: The account IDs that have permission to use this document.
              The ID can be either an Amazon Web Services account or <i>All</i>.
          title: AccountIds
        AccountSharingInfoList:
          allOf:
          - $ref: '#/components/schemas/AccountSharingInfoList'
          - description: A list of Amazon Web Services accounts where the current
              document is shared and the version shared with each account.
          title: AccountSharingInfoList
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. Use this token
              to get the next set of results.
          title: NextToken
      title: DescribeDocumentPermissionResponse
      type: object
    DescribeDocumentPermissionRequest:
      example:
        NextToken: ""
        PermissionType: ""
        MaxResults: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DocumentName'
          - description: The name of the document for which you are the owner.
          title: Name
        PermissionType:
          allOf:
          - $ref: '#/components/schemas/DocumentPermissionType'
          - description: The permission type for the document. The permission type
              can be <i>Share</i>.
          title: PermissionType
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/DocumentPermissionMaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. (You received
              this token from a previous call.)
          title: NextToken
      required:
      - Name
      - PermissionType
      title: DescribeDocumentPermissionRequest
      type: object
    InvalidPermissionType: {}
    DescribeEffectiveInstanceAssociationsResult:
      example:
        NextToken: ""
        Associations: ""
      properties:
        Associations:
          allOf:
          - $ref: '#/components/schemas/InstanceAssociationList'
          - description: The associations for the requested managed node.
          title: Associations
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use when requesting the next set of items.\
              \ If there are no additional items to return, the string is empty."
          title: NextToken
      title: DescribeEffectiveInstanceAssociationsResult
      type: object
    DescribeEffectiveInstanceAssociationsRequest:
      example:
        NextToken: ""
        InstanceId: ""
        MaxResults: ""
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          - description: The managed node ID for which you want to view all associations.
          title: InstanceId
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/EffectiveInstanceAssociationMaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. (You received
              this token from a previous call.)
          title: NextToken
      required:
      - InstanceId
      title: DescribeEffectiveInstanceAssociationsRequest
      type: object
    DescribeEffectivePatchesForPatchBaselineResult:
      example:
        EffectivePatches: ""
        NextToken: ""
      properties:
        EffectivePatches:
          allOf:
          - $ref: '#/components/schemas/EffectivePatchList'
          - description: An array of patches and patch status.
          title: EffectivePatches
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use when requesting the next set of items.\
              \ If there are no additional items to return, the string is empty."
          title: NextToken
      title: DescribeEffectivePatchesForPatchBaselineResult
      type: object
    DescribeEffectivePatchesForPatchBaselineRequest:
      example:
        BaselineId: ""
        NextToken: ""
        MaxResults: ""
      properties:
        BaselineId:
          allOf:
          - $ref: '#/components/schemas/BaselineId'
          - description: The ID of the patch baseline to retrieve the effective patches
              for.
          title: BaselineId
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PatchBaselineMaxResults'
          - description: The maximum number of patches to return (per page).
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. (You received
              this token from a previous call.)
          title: NextToken
      required:
      - BaselineId
      title: DescribeEffectivePatchesForPatchBaselineRequest
      type: object
    UnsupportedOperatingSystem: {}
    DescribeInstanceAssociationsStatusResult:
      example:
        NextToken: ""
        InstanceAssociationStatusInfos: ""
      properties:
        InstanceAssociationStatusInfos:
          allOf:
          - $ref: '#/components/schemas/InstanceAssociationStatusInfos'
          - description: Status information about the association.
          title: InstanceAssociationStatusInfos
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use when requesting the next set of items.\
              \ If there are no additional items to return, the string is empty."
          title: NextToken
      title: DescribeInstanceAssociationsStatusResult
      type: object
    DescribeInstanceAssociationsStatusRequest:
      example:
        NextToken: ""
        InstanceId: ""
        MaxResults: ""
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          - description: The managed node IDs for which you want association status
              information.
          title: InstanceId
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. (You received
              this token from a previous call.)
          title: NextToken
      required:
      - InstanceId
      title: DescribeInstanceAssociationsStatusRequest
      type: object
    DescribeInstanceInformationResult:
      example:
        NextToken: ""
        InstanceInformationList: ""
      properties:
        InstanceInformationList:
          allOf:
          - $ref: '#/components/schemas/InstanceInformationList'
          - description: The managed node information list.
          title: InstanceInformationList
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use when requesting the next set of items.\
              \ If there are no additional items to return, the string is empty. "
          title: NextToken
      title: DescribeInstanceInformationResult
      type: object
    DescribeInstanceInformationRequest:
      example:
        Filters: ""
        NextToken: ""
        InstanceInformationFilterList: ""
        MaxResults: ""
      properties:
        InstanceInformationFilterList:
          allOf:
          - $ref: '#/components/schemas/InstanceInformationFilterList'
          - description: "<p>This is a legacy method. We recommend that you don't\
              \ use this method. Instead, use the <code>Filters</code> data type.\
              \ <code>Filters</code> enables you to return node information by filtering\
              \ based on tags applied to managed nodes.</p> <note> <p>Attempting to\
              \ use <code>InstanceInformationFilterList</code> and <code>Filters</code>\
              \ leads to an exception error. </p> </note>"
          title: InstanceInformationFilterList
        Filters:
          allOf:
          - $ref: '#/components/schemas/InstanceInformationStringFilterList'
          - description: "One or more filters. Use a filter to return a more specific\
              \ list of managed nodes. You can filter based on tags applied to your\
              \ managed nodes. Tag filters can't be combined with other filter types.\
              \ Use this <code>Filters</code> data type instead of <code>InstanceInformationFilterList</code>,\
              \ which is deprecated."
          title: Filters
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsEC2Compatible'
          - description: 'The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results. The default value is 10 items. '
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. (You received
              this token from a previous call.)
          title: NextToken
      title: DescribeInstanceInformationRequest
      type: object
    InvalidInstanceInformationFilterValue: {}
    DescribeInstancePatchStatesResult:
      example:
        NextToken: ""
        InstancePatchStates: ""
      properties:
        InstancePatchStates:
          allOf:
          - $ref: '#/components/schemas/InstancePatchStateList'
          - description: The high-level patch state for the requested managed nodes.
          title: InstancePatchStates
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use when requesting the next set of items.\
              \ If there are no additional items to return, the string is empty."
          title: NextToken
      title: DescribeInstancePatchStatesResult
      type: object
    DescribeInstancePatchStatesRequest:
      example:
        NextToken: ""
        MaxResults: ""
        InstanceIds: ""
      properties:
        InstanceIds:
          allOf:
          - $ref: '#/components/schemas/InstanceIdList'
          - description: The ID of the managed node for which patch state information
              should be retrieved.
          title: InstanceIds
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. (You received
              this token from a previous call.)
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PatchComplianceMaxResults'
          - description: The maximum number of managed nodes to return (per page).
          title: MaxResults
      required:
      - InstanceIds
      title: DescribeInstancePatchStatesRequest
      type: object
    DescribeInstancePatchStatesForPatchGroupResult:
      example:
        NextToken: ""
        InstancePatchStates: ""
      properties:
        InstancePatchStates:
          allOf:
          - $ref: '#/components/schemas/InstancePatchStatesList'
          - description: 'The high-level patch state for the requested managed nodes. '
          title: InstancePatchStates
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use when requesting the next set of items.\
              \ If there are no additional items to return, the string is empty."
          title: NextToken
      title: DescribeInstancePatchStatesForPatchGroupResult
      type: object
    DescribeInstancePatchStatesForPatchGroupRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
        PatchGroup: ""
      properties:
        PatchGroup:
          allOf:
          - $ref: '#/components/schemas/PatchGroup'
          - description: The name of the patch group for which the patch state information
              should be retrieved.
          title: PatchGroup
        Filters:
          allOf:
          - $ref: '#/components/schemas/InstancePatchStateFilterList'
          - description: "<p>Each entry in the array is a structure containing:</p>\
              \ <ul> <li> <p>Key (string between 1 and 200 characters)</p> </li> <li>\
              \ <p>Values (array containing a single string)</p> </li> <li> <p>Type\
              \ (string \"Equal\", \"NotEqual\", \"LessThan\", \"GreaterThan\")</p>\
              \ </li> </ul>"
          title: Filters
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. (You received
              this token from a previous call.)
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PatchComplianceMaxResults'
          - description: The maximum number of patches to return (per page).
          title: MaxResults
      required:
      - PatchGroup
      title: DescribeInstancePatchStatesForPatchGroupRequest
      type: object
    DescribeInstancePatchesResult:
      example:
        NextToken: ""
        Patches: ""
      properties:
        Patches:
          allOf:
          - $ref: '#/components/schemas/PatchComplianceDataList'
          - description: "<p>Each entry in the array is a structure containing:</p>\
              \ <ul> <li> <p>Title (string)</p> </li> <li> <p>KBId (string)</p> </li>\
              \ <li> <p>Classification (string)</p> </li> <li> <p>Severity (string)</p>\
              \ </li> <li> <p>State (string, such as \"INSTALLED\" or \"FAILED\")</p>\
              \ </li> <li> <p>InstalledTime (DateTime)</p> </li> <li> <p>InstalledBy\
              \ (string)</p> </li> </ul>"
          title: Patches
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use when requesting the next set of items.\
              \ If there are no additional items to return, the string is empty."
          title: NextToken
      title: DescribeInstancePatchesResult
      type: object
    DescribeInstancePatchesRequest:
      example:
        Filters: ""
        NextToken: ""
        InstanceId: ""
        MaxResults: ""
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          - description: The ID of the managed node whose patch state information
              should be retrieved.
          title: InstanceId
        Filters:
          allOf:
          - $ref: '#/components/schemas/PatchOrchestratorFilterList'
          - description: "<p>Each element in the array is a structure containing a\
              \ key-value pair.</p> <p>Supported keys for <code>DescribeInstancePatches</code>include\
              \ the following:</p> <ul> <li> <p> <b> <code>Classification</code> </b>\
              \ </p> <p>Sample values: <code>Security</code> | <code>SecurityUpdates</code>\
              \ </p> </li> <li> <p> <b> <code>KBId</code> </b> </p> <p>Sample values:\
              \ <code>KB4480056</code> | <code>java-1.7.0-openjdk.x86_64</code> </p>\
              \ </li> <li> <p> <b> <code>Severity</code> </b> </p> <p>Sample values:\
              \ <code>Important</code> | <code>Medium</code> | <code>Low</code> </p>\
              \ </li> <li> <p> <b> <code>State</code> </b> </p> <p>Sample values:\
              \ <code>Installed</code> | <code>InstalledOther</code> | <code>InstalledPendingReboot</code>\
              \ </p> </li> </ul>"
          title: Filters
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. (You received
              this token from a previous call.)
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PatchComplianceMaxResults'
          - description: The maximum number of patches to return (per page).
          title: MaxResults
      required:
      - InstanceId
      title: DescribeInstancePatchesRequest
      type: object
    DescribeInventoryDeletionsResult:
      example:
        NextToken: ""
        InventoryDeletions: ""
      properties:
        InventoryDeletions:
          allOf:
          - $ref: '#/components/schemas/InventoryDeletionsList'
          - description: A list of status items for deleted inventory.
          title: InventoryDeletions
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. Use this token
              to get the next set of results.
          title: NextToken
      title: DescribeInventoryDeletionsResult
      type: object
    DescribeInventoryDeletionsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        DeletionId: ""
      properties:
        DeletionId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: Specify the delete inventory ID for which you want information.
              This ID was returned by the <code>DeleteInventory</code> operation.
          title: DeletionId
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: 'A token to start the list. Use this token to get the next
              set of results. '
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
      title: DescribeInventoryDeletionsRequest
      type: object
    InvalidDeletionIdException: {}
    DescribeMaintenanceWindowExecutionTaskInvocationsResult:
      example:
        NextToken: ""
        WindowExecutionTaskInvocationIdentities: ""
      properties:
        WindowExecutionTaskInvocationIdentities:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionTaskInvocationIdentityList'
          - description: Information about the task invocation results per invocation.
          title: WindowExecutionTaskInvocationIdentities
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use when requesting the next set of items.\
              \ If there are no additional items to return, the string is empty."
          title: NextToken
      title: DescribeMaintenanceWindowExecutionTaskInvocationsResult
      type: object
    DescribeMaintenanceWindowExecutionTaskInvocationsRequest:
      example:
        Filters: ""
        TaskId: ""
        NextToken: ""
        MaxResults: ""
        WindowExecutionId: ""
      properties:
        WindowExecutionId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionId'
          - description: The ID of the maintenance window execution the task is part
              of.
          title: WindowExecutionId
        TaskId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionTaskId'
          - description: The ID of the specific task in the maintenance window task
              that should be retrieved.
          title: TaskId
        Filters:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowFilterList'
          - description: "Optional filters used to scope down the returned task invocations.\
              \ The supported filter key is <code>STATUS</code> with the corresponding\
              \ values <code>PENDING</code>, <code>IN_PROGRESS</code>, <code>SUCCESS</code>,\
              \ <code>FAILED</code>, <code>TIMED_OUT</code>, <code>CANCELLING</code>,\
              \ and <code>CANCELLED</code>."
          title: Filters
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowMaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. (You received
              this token from a previous call.)
          title: NextToken
      required:
      - TaskId
      - WindowExecutionId
      title: DescribeMaintenanceWindowExecutionTaskInvocationsRequest
      type: object
    DescribeMaintenanceWindowExecutionTasksResult:
      example:
        NextToken: ""
        WindowExecutionTaskIdentities: ""
      properties:
        WindowExecutionTaskIdentities:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionTaskIdentityList'
          - description: Information about the task executions.
          title: WindowExecutionTaskIdentities
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use when requesting the next set of items.\
              \ If there are no additional items to return, the string is empty."
          title: NextToken
      title: DescribeMaintenanceWindowExecutionTasksResult
      type: object
    DescribeMaintenanceWindowExecutionTasksRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
        WindowExecutionId: ""
      properties:
        WindowExecutionId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionId'
          - description: The ID of the maintenance window execution whose task executions
              should be retrieved.
          title: WindowExecutionId
        Filters:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowFilterList'
          - description: "Optional filters used to scope down the returned tasks.\
              \ The supported filter key is <code>STATUS</code> with the corresponding\
              \ values <code>PENDING</code>, <code>IN_PROGRESS</code>, <code>SUCCESS</code>,\
              \ <code>FAILED</code>, <code>TIMED_OUT</code>, <code>CANCELLING</code>,\
              \ and <code>CANCELLED</code>."
          title: Filters
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowMaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. (You received
              this token from a previous call.)
          title: NextToken
      required:
      - WindowExecutionId
      title: DescribeMaintenanceWindowExecutionTasksRequest
      type: object
    DescribeMaintenanceWindowExecutionsResult:
      example:
        NextToken: ""
        WindowExecutions: ""
      properties:
        WindowExecutions:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionList'
          - description: Information about the maintenance window executions.
          title: WindowExecutions
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use when requesting the next set of items.\
              \ If there are no additional items to return, the string is empty."
          title: NextToken
      title: DescribeMaintenanceWindowExecutionsResult
      type: object
    DescribeMaintenanceWindowExecutionsRequest:
      example:
        Filters: ""
        WindowId: ""
        NextToken: ""
        MaxResults: ""
      properties:
        WindowId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowId'
          - description: The ID of the maintenance window whose executions should
              be retrieved.
          title: WindowId
        Filters:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowFilterList'
          - description: "<p>Each entry in the array is a structure containing:</p>\
              \ <ul> <li> <p>Key. A string between 1 and 128 characters. Supported\
              \ keys include <code>ExecutedBefore</code> and <code>ExecutedAfter</code>.</p>\
              \ </li> <li> <p>Values. An array of strings, each between 1 and 256\
              \ characters. Supported values are date/time strings in a valid ISO\
              \ 8601 date/time format, such as <code>2021-11-04T05:00:00Z</code>.</p>\
              \ </li> </ul>"
          title: Filters
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowMaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. (You received
              this token from a previous call.)
          title: NextToken
      required:
      - WindowId
      title: DescribeMaintenanceWindowExecutionsRequest
      type: object
    DescribeMaintenanceWindowScheduleResult:
      example:
        ScheduledWindowExecutions: ""
        NextToken: ""
      properties:
        ScheduledWindowExecutions:
          allOf:
          - $ref: '#/components/schemas/ScheduledWindowExecutionList'
          - description: Information about maintenance window executions scheduled
              for the specified time range.
          title: ScheduledWindowExecutions
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. (You use this
              token in the next call.)
          title: NextToken
      title: DescribeMaintenanceWindowScheduleResult
      type: object
    DescribeMaintenanceWindowScheduleRequest:
      example:
        Filters: ""
        WindowId: ""
        NextToken: ""
        MaxResults: ""
        Targets: ""
        ResourceType: ""
      properties:
        WindowId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowId'
          - description: The ID of the maintenance window to retrieve information
              about.
          title: WindowId
        Targets:
          allOf:
          - $ref: '#/components/schemas/Targets'
          - description: The managed node ID or key-value pair to retrieve information
              about.
          title: Targets
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowResourceType'
          - description: "The type of resource you want to retrieve information about.\
              \ For example, <code>INSTANCE</code>."
          title: ResourceType
        Filters:
          allOf:
          - $ref: '#/components/schemas/PatchOrchestratorFilterList'
          - description: "Filters used to limit the range of results. For example,\
              \ you can limit maintenance window executions to only those scheduled\
              \ before or after a certain date and time."
          title: Filters
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowSearchMaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. (You received
              this token from a previous call.)
          title: NextToken
      title: DescribeMaintenanceWindowScheduleRequest
      type: object
    DescribeMaintenanceWindowTargetsResult:
      example:
        NextToken: ""
        Targets: ""
      properties:
        Targets:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTargetList'
          - description: Information about the targets in the maintenance window.
          title: Targets
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use when requesting the next set of items.\
              \ If there are no additional items to return, the string is empty."
          title: NextToken
      title: DescribeMaintenanceWindowTargetsResult
      type: object
    DescribeMaintenanceWindowTargetsRequest:
      example:
        Filters: ""
        WindowId: ""
        NextToken: ""
        MaxResults: ""
      properties:
        WindowId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowId'
          - description: The ID of the maintenance window whose targets should be
              retrieved.
          title: WindowId
        Filters:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowFilterList'
          - description: "Optional filters that can be used to narrow down the scope\
              \ of the returned window targets. The supported filter keys are <code>Type</code>,\
              \ <code>WindowTargetId</code>, and <code>OwnerInformation</code>."
          title: Filters
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowMaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. (You received
              this token from a previous call.)
          title: NextToken
      required:
      - WindowId
      title: DescribeMaintenanceWindowTargetsRequest
      type: object
    DescribeMaintenanceWindowTasksResult:
      example:
        Tasks: ""
        NextToken: ""
      properties:
        Tasks:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskList'
          - description: Information about the tasks in the maintenance window.
          title: Tasks
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use when requesting the next set of items.\
              \ If there are no additional items to return, the string is empty."
          title: NextToken
      title: DescribeMaintenanceWindowTasksResult
      type: object
    DescribeMaintenanceWindowTasksRequest:
      example:
        Filters: ""
        WindowId: ""
        NextToken: ""
        MaxResults: ""
      properties:
        WindowId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowId'
          - description: The ID of the maintenance window whose tasks should be retrieved.
          title: WindowId
        Filters:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowFilterList'
          - description: "Optional filters used to narrow down the scope of the returned\
              \ tasks. The supported filter keys are <code>WindowTaskId</code>, <code>TaskArn</code>,\
              \ <code>Priority</code>, and <code>TaskType</code>."
          title: Filters
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowMaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. (You received
              this token from a previous call.)
          title: NextToken
      required:
      - WindowId
      title: DescribeMaintenanceWindowTasksRequest
      type: object
    DescribeMaintenanceWindowsResult:
      example:
        NextToken: ""
        WindowIdentities: ""
      properties:
        WindowIdentities:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowIdentityList'
          - description: Information about the maintenance windows.
          title: WindowIdentities
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use when requesting the next set of items.\
              \ If there are no additional items to return, the string is empty."
          title: NextToken
      title: DescribeMaintenanceWindowsResult
      type: object
    DescribeMaintenanceWindowsRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowFilterList'
          - description: "Optional filters used to narrow down the scope of the returned\
              \ maintenance windows. Supported filter keys are <code>Name</code> and\
              \ <code>Enabled</code>. For example, <code>Name=MyMaintenanceWindow</code>\
              \ and <code>Enabled=True</code>."
          title: Filters
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowMaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. (You received
              this token from a previous call.)
          title: NextToken
      title: DescribeMaintenanceWindowsRequest
      type: object
    DescribeMaintenanceWindowsForTargetResult:
      example:
        NextToken: ""
        WindowIdentities: ""
      properties:
        WindowIdentities:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowsForTargetList'
          - description: Information about the maintenance window targets and tasks
              a managed node is associated with.
          title: WindowIdentities
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. (You use this
              token in the next call.)
          title: NextToken
      title: DescribeMaintenanceWindowsForTargetResult
      type: object
    DescribeMaintenanceWindowsForTargetRequest:
      example:
        NextToken: ""
        MaxResults: ""
        Targets: ""
        ResourceType: ""
      properties:
        Targets:
          allOf:
          - $ref: '#/components/schemas/Targets'
          - description: The managed node ID or key-value pair to retrieve information
              about.
          title: Targets
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowResourceType'
          - description: "The type of resource you want to retrieve information about.\
              \ For example, <code>INSTANCE</code>."
          title: ResourceType
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowSearchMaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. (You received
              this token from a previous call.)
          title: NextToken
      required:
      - ResourceType
      - Targets
      title: DescribeMaintenanceWindowsForTargetRequest
      type: object
    DescribeOpsItemsResponse:
      example:
        OpsItemSummaries: ""
        NextToken: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The token for the next set of items to return. Use this token
              to get the next set of results.
          title: NextToken
        OpsItemSummaries:
          allOf:
          - $ref: '#/components/schemas/OpsItemSummaries'
          - description: A list of OpsItems.
          title: OpsItemSummaries
      title: DescribeOpsItemsResponse
      type: object
    DescribeOpsItemsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        OpsItemFilters: ""
      properties:
        OpsItemFilters:
          allOf:
          - $ref: '#/components/schemas/OpsItemFilters'
          - description: "<p>One or more filters to limit the response.</p> <ul> <li>\
              \ <p>Key: CreatedTime</p> <p>Operations: GreaterThan, LessThan</p> </li>\
              \ <li> <p>Key: LastModifiedBy</p> <p>Operations: Contains, Equals</p>\
              \ </li> <li> <p>Key: LastModifiedTime</p> <p>Operations: GreaterThan,\
              \ LessThan</p> </li> <li> <p>Key: Priority</p> <p>Operations: Equals</p>\
              \ </li> <li> <p>Key: Source</p> <p>Operations: Contains, Equals</p>\
              \ </li> <li> <p>Key: Status</p> <p>Operations: Equals</p> </li> <li>\
              \ <p>Key: Title*</p> <p>Operations: Equals,Contains</p> </li> <li> <p>Key:\
              \ OperationalData**</p> <p>Operations: Equals</p> </li> <li> <p>Key:\
              \ OperationalDataKey</p> <p>Operations: Equals</p> </li> <li> <p>Key:\
              \ OperationalDataValue</p> <p>Operations: Equals, Contains</p> </li>\
              \ <li> <p>Key: OpsItemId</p> <p>Operations: Equals</p> </li> <li> <p>Key:\
              \ ResourceId</p> <p>Operations: Contains</p> </li> <li> <p>Key: AutomationId</p>\
              \ <p>Operations: Equals</p> </li> <li> <p>Key: AccountId</p> <p>Operations:\
              \ Equals</p> </li> </ul> <p>*The Equals operator for Title matches the\
              \ first 100 characters. If you specify more than 100 characters, they\
              \ system returns an error that the filter value exceeds the length limit.</p>\
              \ <p>**If you filter the response by using the OperationalData operator,\
              \ specify a key-value pair by using the following JSON format: {\"key\"\
              :\"key_name\",\"value\":\"a_value\"}</p>"
          title: OpsItemFilters
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/OpsItemMaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A token to start the list. Use this token to get the next
              set of results.
          title: NextToken
      title: DescribeOpsItemsRequest
      type: object
    DescribeParametersResult:
      example:
        Parameters: ""
        NextToken: ""
      properties:
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParameterMetadataList'
          - description: Parameters returned by the request.
          title: Parameters
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use when requesting the next set of items.
          title: NextToken
      title: DescribeParametersResult
      type: object
    DescribeParametersRequest:
      example:
        Filters: ""
        ParameterFilters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/ParametersFilterList'
          - description: "This data type is deprecated. Instead, use <code>ParameterFilters</code>."
          title: Filters
        ParameterFilters:
          allOf:
          - $ref: '#/components/schemas/ParameterStringFilterList'
          - description: Filters to limit the request results.
          title: ParameterFilters
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. (You received
              this token from a previous call.)
          title: NextToken
      title: DescribeParametersRequest
      type: object
    InvalidFilterOption: {}
    DescribePatchBaselinesResult:
      example:
        BaselineIdentities: ""
        NextToken: ""
      properties:
        BaselineIdentities:
          allOf:
          - $ref: '#/components/schemas/PatchBaselineIdentityList'
          - description: An array of <code>PatchBaselineIdentity</code> elements.
          title: BaselineIdentities
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use when requesting the next set of items.\
              \ If there are no additional items to return, the string is empty."
          title: NextToken
      title: DescribePatchBaselinesResult
      type: object
    DescribePatchBaselinesRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/PatchOrchestratorFilterList'
          - description: "<p>Each element in the array is a structure containing a\
              \ key-value pair.</p> <p>Supported keys for <code>DescribePatchBaselines</code>\
              \ include the following:</p> <ul> <li> <p> <b> <code>NAME_PREFIX</code>\
              \ </b> </p> <p>Sample values: <code>AWS-</code> | <code>My-</code> </p>\
              \ </li> <li> <p> <b> <code>OWNER</code> </b> </p> <p>Sample values:\
              \ <code>AWS</code> | <code>Self</code> </p> </li> <li> <p> <b> <code>OPERATING_SYSTEM</code>\
              \ </b> </p> <p>Sample values: <code>AMAZON_LINUX</code> | <code>SUSE</code>\
              \ | <code>WINDOWS</code> </p> </li> </ul>"
          title: Filters
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PatchBaselineMaxResults'
          - description: The maximum number of patch baselines to return (per page).
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. (You received
              this token from a previous call.)
          title: NextToken
      title: DescribePatchBaselinesRequest
      type: object
    DescribePatchGroupStateResult:
      example:
        Instances: ""
        InstancesWithMissingPatches: ""
        InstancesWithInstalledPatches: ""
        InstancesWithInstalledPendingRebootPatches: ""
        InstancesWithCriticalNonCompliantPatches: ""
        InstancesWithInstalledRejectedPatches: ""
        InstancesWithNotApplicablePatches: ""
        InstancesWithUnreportedNotApplicablePatches: ""
        InstancesWithSecurityNonCompliantPatches: ""
        InstancesWithFailedPatches: ""
        InstancesWithOtherNonCompliantPatches: ""
        InstancesWithInstalledOtherPatches: ""
      properties:
        Instances:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of managed nodes in the patch group.
          title: Instances
        InstancesWithInstalledPatches:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of managed nodes with installed patches.
          title: InstancesWithInstalledPatches
        InstancesWithInstalledOtherPatches:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of managed nodes with patches installed that aren't
              defined in the patch baseline.
          title: InstancesWithInstalledOtherPatches
        InstancesWithInstalledPendingRebootPatches:
          allOf:
          - $ref: '#/components/schemas/InstancesCount'
          - description: The number of managed nodes with patches installed by Patch
              Manager that haven't been rebooted after the patch installation. The
              status of these managed nodes is <code>NON_COMPLIANT</code>.
          title: InstancesWithInstalledPendingRebootPatches
        InstancesWithInstalledRejectedPatches:
          allOf:
          - $ref: '#/components/schemas/InstancesCount'
          - description: "<p>The number of managed nodes with patches installed that\
              \ are specified in a <code>RejectedPatches</code> list. Patches with\
              \ a status of <code>INSTALLED_REJECTED</code> were typically installed\
              \ before they were added to a <code>RejectedPatches</code> list.</p>\
              \ <note> <p>If <code>ALLOW_AS_DEPENDENCY</code> is the specified option\
              \ for <code>RejectedPatchesAction</code>, the value of <code>InstancesWithInstalledRejectedPatches</code>\
              \ will always be <code>0</code> (zero).</p> </note>"
          title: InstancesWithInstalledRejectedPatches
        InstancesWithMissingPatches:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of managed nodes with missing patches from the
              patch baseline.
          title: InstancesWithMissingPatches
        InstancesWithFailedPatches:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of managed nodes with patches from the patch baseline
              that failed to install.
          title: InstancesWithFailedPatches
        InstancesWithNotApplicablePatches:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of managed nodes with patches that aren't applicable.
          title: InstancesWithNotApplicablePatches
        InstancesWithUnreportedNotApplicablePatches:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The number of managed nodes with <code>NotApplicable</code>\
              \ patches beyond the supported limit, which aren't reported by name\
              \ to Inventory. Inventory is a capability of Amazon Web Services Systems\
              \ Manager."
          title: InstancesWithUnreportedNotApplicablePatches
        InstancesWithCriticalNonCompliantPatches:
          allOf:
          - $ref: '#/components/schemas/InstancesCount'
          - description: "The number of managed nodes where patches that are specified\
              \ as <code>Critical</code> for compliance reporting in the patch baseline\
              \ aren't installed. These patches might be missing, have failed installation,\
              \ were rejected, or were installed but awaiting a required managed node\
              \ reboot. The status of these managed nodes is <code>NON_COMPLIANT</code>."
          title: InstancesWithCriticalNonCompliantPatches
        InstancesWithSecurityNonCompliantPatches:
          allOf:
          - $ref: '#/components/schemas/InstancesCount'
          - description: "The number of managed nodes where patches that are specified\
              \ as <code>Security</code> in a patch advisory aren't installed. These\
              \ patches might be missing, have failed installation, were rejected,\
              \ or were installed but awaiting a required managed node reboot. The\
              \ status of these managed nodes is <code>NON_COMPLIANT</code>."
          title: InstancesWithSecurityNonCompliantPatches
        InstancesWithOtherNonCompliantPatches:
          allOf:
          - $ref: '#/components/schemas/InstancesCount'
          - description: The number of managed nodes with patches installed that are
              specified as other than <code>Critical</code> or <code>Security</code>
              but aren't compliant with the patch baseline. The status of these managed
              nodes is <code>NON_COMPLIANT</code>.
          title: InstancesWithOtherNonCompliantPatches
      title: DescribePatchGroupStateResult
      type: object
    DescribePatchGroupStateRequest:
      example:
        PatchGroup: ""
      properties:
        PatchGroup:
          allOf:
          - $ref: '#/components/schemas/PatchGroup'
          - description: The name of the patch group whose patch snapshot should be
              retrieved.
          title: PatchGroup
      required:
      - PatchGroup
      title: DescribePatchGroupStateRequest
      type: object
    DescribePatchGroupsResult:
      example:
        Mappings: ""
        NextToken: ""
      properties:
        Mappings:
          allOf:
          - $ref: '#/components/schemas/PatchGroupPatchBaselineMappingList'
          - description: "<p>Each entry in the array contains:</p> <ul> <li> <p> <code>PatchGroup</code>:\
              \ string (between 1 and 256 characters. Regex: <code>^([\\p{L}\\p{Z}\\\
              p{N}_.:/=+\\-@]*)$)</code> </p> </li> <li> <p> <code>PatchBaselineIdentity</code>:\
              \ A <code>PatchBaselineIdentity</code> element.</p> </li> </ul>"
          title: Mappings
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use when requesting the next set of items.\
              \ If there are no additional items to return, the string is empty."
          title: NextToken
      title: DescribePatchGroupsResult
      type: object
    DescribePatchGroupsRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PatchBaselineMaxResults'
          - description: The maximum number of patch groups to return (per page).
          title: MaxResults
        Filters:
          allOf:
          - $ref: '#/components/schemas/PatchOrchestratorFilterList'
          - description: "<p>Each element in the array is a structure containing a\
              \ key-value pair.</p> <p>Supported keys for <code>DescribePatchGroups</code>\
              \ include the following:</p> <ul> <li> <p> <b> <code>NAME_PREFIX</code>\
              \ </b> </p> <p>Sample values: <code>AWS-</code> | <code>My-</code>.</p>\
              \ </li> <li> <p> <b> <code>OPERATING_SYSTEM</code> </b> </p> <p>Sample\
              \ values: <code>AMAZON_LINUX</code> | <code>SUSE</code> | <code>WINDOWS</code>\
              \ </p> </li> </ul>"
          title: Filters
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. (You received
              this token from a previous call.)
          title: NextToken
      title: DescribePatchGroupsRequest
      type: object
    DescribePatchPropertiesResult:
      example:
        NextToken: ""
        Properties: ""
      properties:
        Properties:
          allOf:
          - $ref: '#/components/schemas/PatchPropertiesList'
          - description: A list of the properties for patches matching the filter
              request parameters.
          title: Properties
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. (You use this
              token in the next call.)
          title: NextToken
      title: DescribePatchPropertiesResult
      type: object
    DescribePatchPropertiesRequest:
      example:
        OperatingSystem: ""
        NextToken: ""
        MaxResults: ""
        PatchSet: ""
        Property: ""
      properties:
        OperatingSystem:
          allOf:
          - $ref: '#/components/schemas/OperatingSystem'
          - description: The operating system type for which to list patches.
          title: OperatingSystem
        Property:
          allOf:
          - $ref: '#/components/schemas/PatchProperty'
          - description: 'The patch property for which you want to view patch details. '
          title: Property
        PatchSet:
          allOf:
          - $ref: '#/components/schemas/PatchSet'
          - description: Indicates whether to list patches for the Windows operating
              system or for applications released by Microsoft. Not applicable for
              the Linux or macOS operating systems.
          title: PatchSet
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. (You received
              this token from a previous call.)
          title: NextToken
      required:
      - OperatingSystem
      - Property
      title: DescribePatchPropertiesRequest
      type: object
    DescribeSessionsResponse:
      example:
        NextToken: ""
        Sessions: ""
      properties:
        Sessions:
          allOf:
          - $ref: '#/components/schemas/SessionList'
          - description: A list of sessions meeting the request parameters.
          title: Sessions
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. (You received
              this token from a previous call.)
          title: NextToken
      title: DescribeSessionsResponse
      type: object
    DescribeSessionsRequest:
      example:
        Filters: ""
        NextToken: ""
        State: ""
        MaxResults: ""
      properties:
        State:
          allOf:
          - $ref: '#/components/schemas/SessionState'
          - description: "The session status to retrieve a list of sessions for. For\
              \ example, \"Active\"."
          title: State
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/SessionMaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. (You received
              this token from a previous call.)
          title: NextToken
        Filters:
          allOf:
          - $ref: '#/components/schemas/SessionFilterList'
          - description: One or more filters to limit the type of sessions returned
              by the request.
          title: Filters
      required:
      - State
      title: DescribeSessionsRequest
      type: object
    DisassociateOpsItemRelatedItemResponse:
      properties: {}
      type: object
    DisassociateOpsItemRelatedItemRequest:
      example:
        OpsItemId: ""
        AssociationId: ""
      properties:
        OpsItemId:
          allOf:
          - $ref: '#/components/schemas/OpsItemId'
          - description: The ID of the OpsItem for which you want to delete an association
              between the OpsItem and a related item.
          title: OpsItemId
        AssociationId:
          allOf:
          - $ref: '#/components/schemas/OpsItemRelatedItemAssociationId'
          - description: The ID of the association for which you want to delete an
              association between the OpsItem and a related item.
          title: AssociationId
      required:
      - AssociationId
      - OpsItemId
      title: DisassociateOpsItemRelatedItemRequest
      type: object
    OpsItemRelatedItemAssociationNotFoundException: {}
    GetAutomationExecutionResult:
      example:
        AutomationExecution:
          CurrentAction: ""
          StepExecutions: ""
          MaxErrors: ""
          ExecutionStartTime: ""
          ProgressCounters:
            SuccessSteps: ""
            TimedOutSteps: ""
            FailedSteps: ""
            CancelledSteps: ""
            TotalSteps: ""
          ExecutionEndTime: ""
          Target: ""
          AutomationSubtype: ""
          AutomationExecutionStatus: ""
          TriggeredAlarms: ""
          FailureMessage: ""
          DocumentVersion: ""
          ExecutedBy: ""
          DocumentName: ""
          TargetLocations: ""
          ScheduledTime: ""
          ChangeRequestName: ""
          Parameters: ""
          Mode: ""
          TargetMaps: ""
          MaxConcurrency: ""
          Targets: ""
          AlarmConfiguration:
            IgnorePollAlarmFailure: ""
            Alarms: ""
          AutomationExecutionId: ""
          StepExecutionsTruncated: ""
          TargetParameterName: ""
          OpsItemId: ""
          ParentAutomationExecutionId: ""
          ResolvedTargets:
            Truncated: ""
            ParameterValues: ""
          CurrentStepName: ""
          Outputs: ""
          Runbooks: ""
          AssociationId: ""
      properties:
        AutomationExecution:
          $ref: '#/components/schemas/GetAutomationExecutionResult_AutomationExecution'
      title: GetAutomationExecutionResult
      type: object
    GetAutomationExecutionRequest:
      example:
        AutomationExecutionId: ""
      properties:
        AutomationExecutionId:
          allOf:
          - $ref: '#/components/schemas/AutomationExecutionId'
          - description: The unique identifier for an existing automation execution
              to examine. The execution ID is returned by StartAutomationExecution
              when the execution of an Automation runbook is initiated.
          title: AutomationExecutionId
      required:
      - AutomationExecutionId
      title: GetAutomationExecutionRequest
      type: object
    GetCalendarStateResponse:
      example:
        AtTime: ""
        State: ""
        NextTransitionTime: ""
      properties:
        State:
          allOf:
          - $ref: '#/components/schemas/CalendarState'
          - description: "The state of the calendar. An <code>OPEN</code> calendar\
              \ indicates that actions are allowed to proceed, and a <code>CLOSED</code>\
              \ calendar indicates that actions aren't allowed to proceed."
          title: State
        AtTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601String'
          - description: "The time, as an <a href=\"https://en.wikipedia.org/wiki/ISO_8601\"\
              >ISO 8601</a> string, that you specified in your command. If you don't\
              \ specify a time, <code>GetCalendarState</code> uses the current time."
          title: AtTime
        NextTransitionTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601String'
          - description: "The time, as an <a href=\"https://en.wikipedia.org/wiki/ISO_8601\"\
              >ISO 8601</a> string, that the calendar state will change. If the current\
              \ calendar state is <code>OPEN</code>, <code>NextTransitionTime</code>\
              \ indicates when the calendar state changes to <code>CLOSED</code>,\
              \ and vice-versa."
          title: NextTransitionTime
      title: GetCalendarStateResponse
      type: object
    GetCalendarStateRequest:
      example:
        CalendarNames: ""
        AtTime: ""
      properties:
        CalendarNames:
          allOf:
          - $ref: '#/components/schemas/CalendarNameOrARNList'
          - description: The names or Amazon Resource Names (ARNs) of the Systems
              Manager documents (SSM documents) that represent the calendar entries
              for which you want to get the state.
          title: CalendarNames
        AtTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601String'
          - description: "(Optional) The specific time for which you want to get calendar\
              \ state information, in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\"\
              >ISO 8601</a> format. If you don't specify a value or <code>AtTime</code>,\
              \ the current time is used."
          title: AtTime
      required:
      - CalendarNames
      title: GetCalendarStateRequest
      type: object
    InvalidDocumentType: {}
    UnsupportedCalendarException: {}
    GetCommandInvocationResult:
      example:
        Status: ""
        Comment: ""
        ResponseCode: ""
        PluginName: ""
        InstanceId: ""
        ExecutionEndDateTime: ""
        StandardOutputUrl: ""
        CloudWatchOutputConfig:
          CloudWatchOutputEnabled: ""
          CloudWatchLogGroupName: ""
        ExecutionStartDateTime: ""
        StatusDetails: ""
        StandardOutputContent: ""
        CommandId: ""
        DocumentVersion: ""
        ExecutionElapsedTime: ""
        StandardErrorContent: ""
        StandardErrorUrl: ""
        DocumentName: ""
      properties:
        CommandId:
          allOf:
          - $ref: '#/components/schemas/CommandId'
          - description: The parent command ID of the invocation plugin.
          title: CommandId
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          - description: "The ID of the managed node targeted by the command. A <i>managed\
              \ node</i> can be an Amazon Elastic Compute Cloud (Amazon EC2) instance,\
              \ edge device, or on-premises server or VM in your hybrid environment\
              \ that is configured for Amazon Web Services Systems Manager."
          title: InstanceId
        Comment:
          allOf:
          - $ref: '#/components/schemas/Comment'
          - description: The comment text for the command.
          title: Comment
        DocumentName:
          allOf:
          - $ref: '#/components/schemas/DocumentName'
          - description: "The name of the document that was run. For example, <code>AWS-RunShellScript</code>."
          title: DocumentName
        DocumentVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: The Systems Manager document (SSM document) version used
              in the request.
          title: DocumentVersion
        PluginName:
          allOf:
          - $ref: '#/components/schemas/CommandPluginName'
          - description: "The name of the plugin, or <i>step name</i>, for which details\
              \ are reported. For example, <code>aws:RunShellScript</code> is a plugin."
          title: PluginName
        ResponseCode:
          allOf:
          - $ref: '#/components/schemas/ResponseCode'
          - description: "The error level response code for the plugin script. If\
              \ the response code is <code>-1</code>, then the command hasn't started\
              \ running on the managed node, or it wasn't received by the node."
          title: ResponseCode
        ExecutionStartDateTime:
          allOf:
          - $ref: '#/components/schemas/StringDateTime'
          - description: "<p>The date and time the plugin started running. Date and\
              \ time are written in ISO 8601 format. For example, June 7, 2017 is\
              \ represented as 2017-06-7. The following sample Amazon Web Services\
              \ CLI command uses the <code>InvokedBefore</code> filter.</p> <p> <code>aws\
              \ ssm list-commands --filters key=InvokedBefore,value=2017-06-07T00:00:00Z</code>\
              \ </p> <p>If the plugin hasn't started to run, the string is empty.</p>"
          title: ExecutionStartDateTime
        ExecutionElapsedTime:
          allOf:
          - $ref: '#/components/schemas/StringDateTime'
          - description: Duration since <code>ExecutionStartDateTime</code>.
          title: ExecutionElapsedTime
        ExecutionEndDateTime:
          allOf:
          - $ref: '#/components/schemas/StringDateTime'
          - description: "<p>The date and time the plugin finished running. Date and\
              \ time are written in ISO 8601 format. For example, June 7, 2017 is\
              \ represented as 2017-06-7. The following sample Amazon Web Services\
              \ CLI command uses the <code>InvokedAfter</code> filter.</p> <p> <code>aws\
              \ ssm list-commands --filters key=InvokedAfter,value=2017-06-07T00:00:00Z</code>\
              \ </p> <p>If the plugin hasn't started to run, the string is empty.</p>"
          title: ExecutionEndDateTime
        Status:
          allOf:
          - $ref: '#/components/schemas/CommandInvocationStatus'
          - description: The status of this invocation plugin. This status can be
              different than <code>StatusDetails</code>.
          title: Status
        StatusDetails:
          allOf:
          - $ref: '#/components/schemas/StatusDetails'
          - description: "<p>A detailed status of the command execution for an invocation.\
              \ <code>StatusDetails</code> includes more information than <code>Status</code>\
              \ because it includes states resulting from error and concurrency control\
              \ parameters. <code>StatusDetails</code> can show different results\
              \ than <code>Status</code>. For more information about these statuses,\
              \ see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/monitor-commands.html\"\
              >Understanding command statuses</a> in the <i>Amazon Web Services Systems\
              \ Manager User Guide</i>. <code>StatusDetails</code> can be one of the\
              \ following values:</p> <ul> <li> <p>Pending: The command hasn't been\
              \ sent to the managed node.</p> </li> <li> <p>In Progress: The command\
              \ has been sent to the managed node but hasn't reached a terminal state.</p>\
              \ </li> <li> <p>Delayed: The system attempted to send the command to\
              \ the target, but the target wasn't available. The managed node might\
              \ not be available because of network issues, because the node was stopped,\
              \ or for similar reasons. The system will try to send the command again.</p>\
              \ </li> <li> <p>Success: The command or plugin ran successfully. This\
              \ is a terminal state.</p> </li> <li> <p>Delivery Timed Out: The command\
              \ wasn't delivered to the managed node before the delivery timeout expired.\
              \ Delivery timeouts don't count against the parent command's <code>MaxErrors</code>\
              \ limit, but they do contribute to whether the parent command status\
              \ is Success or Incomplete. This is a terminal state.</p> </li> <li>\
              \ <p>Execution Timed Out: The command started to run on the managed\
              \ node, but the execution wasn't complete before the timeout expired.\
              \ Execution timeouts count against the <code>MaxErrors</code> limit\
              \ of the parent command. This is a terminal state.</p> </li> <li> <p>Failed:\
              \ The command wasn't run successfully on the managed node. For a plugin,\
              \ this indicates that the result code wasn't zero. For a command invocation,\
              \ this indicates that the result code for one or more plugins wasn't\
              \ zero. Invocation failures count against the <code>MaxErrors</code>\
              \ limit of the parent command. This is a terminal state.</p> </li> <li>\
              \ <p>Cancelled: The command was terminated before it was completed.\
              \ This is a terminal state.</p> </li> <li> <p>Undeliverable: The command\
              \ can't be delivered to the managed node. The node might not exist or\
              \ might not be responding. Undeliverable invocations don't count against\
              \ the parent command's <code>MaxErrors</code> limit and don't contribute\
              \ to whether the parent command status is Success or Incomplete. This\
              \ is a terminal state.</p> </li> <li> <p>Terminated: The parent command\
              \ exceeded its <code>MaxErrors</code> limit and subsequent command invocations\
              \ were canceled by the system. This is a terminal state.</p> </li> </ul>"
          title: StatusDetails
        StandardOutputContent:
          allOf:
          - $ref: '#/components/schemas/StandardOutputContent'
          - description: "The first 24,000 characters written by the plugin to <code>stdout</code>.\
              \ If the command hasn't finished running, if <code>ExecutionStatus</code>\
              \ is neither Succeeded nor Failed, then this string is empty."
          title: StandardOutputContent
        StandardOutputUrl:
          allOf:
          - $ref: '#/components/schemas/Url'
          - description: "The URL for the complete text written by the plugin to <code>stdout</code>\
              \ in Amazon Simple Storage Service (Amazon S3). If an S3 bucket wasn't\
              \ specified, then this string is empty."
          title: StandardOutputUrl
        StandardErrorContent:
          allOf:
          - $ref: '#/components/schemas/StandardErrorContent'
          - description: "The first 8,000 characters written by the plugin to <code>stderr</code>.\
              \ If the command hasn't finished running, then this string is empty."
          title: StandardErrorContent
        StandardErrorUrl:
          allOf:
          - $ref: '#/components/schemas/Url'
          - description: "The URL for the complete text written by the plugin to <code>stderr</code>.\
              \ If the command hasn't finished running, then this string is empty."
          title: StandardErrorUrl
        CloudWatchOutputConfig:
          $ref: '#/components/schemas/GetCommandInvocationResult_CloudWatchOutputConfig'
      title: GetCommandInvocationResult
      type: object
    GetCommandInvocationRequest:
      example:
        PluginName: ""
        InstanceId: ""
        CommandId: ""
      properties:
        CommandId:
          allOf:
          - $ref: '#/components/schemas/CommandId'
          - description: (Required) The parent command ID of the invocation plugin.
          title: CommandId
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          - description: "(Required) The ID of the managed node targeted by the command.\
              \ A <i>managed node</i> can be an Amazon Elastic Compute Cloud (Amazon\
              \ EC2) instance, edge device, and on-premises server or VM in your hybrid\
              \ environment that is configured for Amazon Web Services Systems Manager."
          title: InstanceId
        PluginName:
          allOf:
          - $ref: '#/components/schemas/CommandPluginName'
          - description: "<p>The name of the step for which you want detailed results.\
              \ If the document contains only one step, you can omit the name and\
              \ details for that step. If the document contains more than one step,\
              \ you must specify the name of the step for which you want to view details.\
              \ Be sure to specify the name of the step, not the name of a plugin\
              \ like <code>aws:RunShellScript</code>.</p> <p>To find the <code>PluginName</code>,\
              \ check the document content and find the name of the step you want\
              \ details for. Alternatively, use <a>ListCommandInvocations</a> with\
              \ the <code>CommandId</code> and <code>Details</code> parameters. The\
              \ <code>PluginName</code> is the <code>Name</code> attribute of the\
              \ <code>CommandPlugin</code> object in the <code>CommandPlugins</code>\
              \ list.</p>"
          title: PluginName
      required:
      - CommandId
      - InstanceId
      title: GetCommandInvocationRequest
      type: object
    InvalidPluginName: {}
    InvocationDoesNotExist: {}
    GetConnectionStatusResponse:
      example:
        Status: ""
        Target: ""
      properties:
        Target:
          allOf:
          - $ref: '#/components/schemas/SessionTarget'
          - description: 'The ID of the managed node to check connection status. '
          title: Target
        Status:
          allOf:
          - $ref: '#/components/schemas/ConnectionStatus'
          - description: "The status of the connection to the managed node. For example,\
              \ 'Connected' or 'Not Connected'."
          title: Status
      title: GetConnectionStatusResponse
      type: object
    GetConnectionStatusRequest:
      example:
        Target: ""
      properties:
        Target:
          allOf:
          - $ref: '#/components/schemas/SessionTarget'
          - description: The managed node ID.
          title: Target
      required:
      - Target
      title: GetConnectionStatusRequest
      type: object
    GetDefaultPatchBaselineResult:
      example:
        BaselineId: ""
        OperatingSystem: ""
      properties:
        BaselineId:
          allOf:
          - $ref: '#/components/schemas/BaselineId'
          - description: The ID of the default patch baseline.
          title: BaselineId
        OperatingSystem:
          allOf:
          - $ref: '#/components/schemas/OperatingSystem'
          - description: 'The operating system for the returned patch baseline. '
          title: OperatingSystem
      title: GetDefaultPatchBaselineResult
      type: object
    GetDefaultPatchBaselineRequest:
      example:
        OperatingSystem: ""
      properties:
        OperatingSystem:
          allOf:
          - $ref: '#/components/schemas/OperatingSystem'
          - description: Returns the default patch baseline for the specified operating
              system.
          title: OperatingSystem
      title: GetDefaultPatchBaselineRequest
      type: object
    GetDeployablePatchSnapshotForInstanceResult:
      example:
        SnapshotId: ""
        InstanceId: ""
        Product: ""
        SnapshotDownloadUrl: ""
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          - description: The managed node ID.
          title: InstanceId
        SnapshotId:
          allOf:
          - $ref: '#/components/schemas/SnapshotId'
          - description: The user-defined snapshot ID.
          title: SnapshotId
        SnapshotDownloadUrl:
          allOf:
          - $ref: '#/components/schemas/SnapshotDownloadUrl'
          - description: A pre-signed Amazon Simple Storage Service (Amazon S3) URL
              that can be used to download the patch snapshot.
          title: SnapshotDownloadUrl
        Product:
          allOf:
          - $ref: '#/components/schemas/Product'
          - description: Returns the specific operating system (for example Windows
              Server 2012 or Amazon Linux 2015.09) on the managed node for the specified
              patch snapshot.
          title: Product
      title: GetDeployablePatchSnapshotForInstanceResult
      type: object
    GetDeployablePatchSnapshotForInstanceRequest:
      example:
        SnapshotId: ""
        BaselineOverride:
          OperatingSystem: ""
          ApprovedPatches: ""
          RejectedPatchesAction: ""
          ApprovedPatchesComplianceLevel: ""
          ApprovedPatchesEnableNonSecurity: ""
          ApprovalRules:
            PatchRules: ""
          GlobalFilters:
            PatchFilters: ""
          Sources: ""
          RejectedPatches: ""
        InstanceId: ""
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          - description: The ID of the managed node for which the appropriate patch
              snapshot should be retrieved.
          title: InstanceId
        SnapshotId:
          allOf:
          - $ref: '#/components/schemas/SnapshotId'
          - description: The snapshot ID provided by the user when running <code>AWS-RunPatchBaseline</code>.
          title: SnapshotId
        BaselineOverride:
          $ref: '#/components/schemas/GetDeployablePatchSnapshotForInstanceRequest_BaselineOverride'
      required:
      - InstanceId
      - SnapshotId
      title: GetDeployablePatchSnapshotForInstanceRequest
      type: object
    UnsupportedFeatureRequiredException: {}
    GetDocumentResult:
      example:
        Status: ""
        DocumentFormat: ""
        Requires: ""
        StatusInformation: ""
        DocumentType: ""
        AttachmentsContent: ""
        Name: ""
        Content: ""
        ReviewStatus: ""
        CreatedDate: ""
        DisplayName: ""
        VersionName: ""
        DocumentVersion: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DocumentARN'
          - description: The name of the SSM document.
          title: Name
        CreatedDate:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date the SSM document was created.
          title: CreatedDate
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DocumentDisplayName'
          - description: "The friendly name of the SSM document. This value can differ\
              \ for each version of the document. If you want to update this value,\
              \ see <a>UpdateDocument</a>."
          title: DisplayName
        VersionName:
          allOf:
          - $ref: '#/components/schemas/DocumentVersionName'
          - description: "The version of the artifact associated with the document.\
              \ For example, \"Release 12, Update 6\". This value is unique across\
              \ all versions of a document, and can't be changed."
          title: VersionName
        DocumentVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: The document version.
          title: DocumentVersion
        Status:
          allOf:
          - $ref: '#/components/schemas/DocumentStatus'
          - description: "The status of the SSM document, such as <code>Creating</code>,\
              \ <code>Active</code>, <code>Updating</code>, <code>Failed</code>, and\
              \ <code>Deleting</code>."
          title: Status
        StatusInformation:
          allOf:
          - $ref: '#/components/schemas/DocumentStatusInformation'
          - description: "A message returned by Amazon Web Services Systems Manager\
              \ that explains the <code>Status</code> value. For example, a <code>Failed</code>\
              \ status might be explained by the <code>StatusInformation</code> message,\
              \ \"The specified S3 bucket doesn't exist. Verify that the URL of the\
              \ S3 bucket is correct.\""
          title: StatusInformation
        Content:
          allOf:
          - $ref: '#/components/schemas/DocumentContent'
          - description: The contents of the SSM document.
          title: Content
        DocumentType:
          allOf:
          - $ref: '#/components/schemas/DocumentType'
          - description: The document type.
          title: DocumentType
        DocumentFormat:
          allOf:
          - $ref: '#/components/schemas/DocumentFormat'
          - description: "The document format, either JSON or YAML."
          title: DocumentFormat
        Requires:
          allOf:
          - $ref: '#/components/schemas/DocumentRequiresList'
          - description: "A list of SSM documents required by a document. For example,\
              \ an <code>ApplicationConfiguration</code> document requires an <code>ApplicationConfigurationSchema</code>\
              \ document."
          title: Requires
        AttachmentsContent:
          allOf:
          - $ref: '#/components/schemas/AttachmentContentList'
          - description: "A description of the document attachments, including names,\
              \ locations, sizes, and so on."
          title: AttachmentsContent
        ReviewStatus:
          allOf:
          - $ref: '#/components/schemas/ReviewStatus'
          - description: "<p>The current review status of a new custom Systems Manager\
              \ document (SSM document) created by a member of your organization,\
              \ or of the latest version of an existing SSM document.</p> <p>Only\
              \ one version of an SSM document can be in the APPROVED state at a time.\
              \ When a new version is approved, the status of the previous version\
              \ changes to REJECTED.</p> <p>Only one version of an SSM document can\
              \ be in review, or PENDING, at a time.</p>"
          title: ReviewStatus
      title: GetDocumentResult
      type: object
    GetDocumentRequest:
      example:
        DocumentFormat: ""
        VersionName: ""
        DocumentVersion: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DocumentARN'
          - description: The name of the SSM document.
          title: Name
        VersionName:
          allOf:
          - $ref: '#/components/schemas/DocumentVersionName'
          - description: "An optional field specifying the version of the artifact\
              \ associated with the document. For example, \"Release 12, Update 6\"\
              . This value is unique across all versions of a document and can't be\
              \ changed."
          title: VersionName
        DocumentVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: The document version for which you want information.
          title: DocumentVersion
        DocumentFormat:
          allOf:
          - $ref: '#/components/schemas/DocumentFormat'
          - description: Returns the document in the specified format. The document
              format can be either JSON or YAML. JSON is the default format.
          title: DocumentFormat
      required:
      - Name
      title: GetDocumentRequest
      type: object
    GetInventoryResult:
      example:
        NextToken: ""
        Entities: ""
      properties:
        Entities:
          allOf:
          - $ref: '#/components/schemas/InventoryResultEntityList'
          - description: 'Collection of inventory entities such as a collection of
              managed node inventory. '
          title: Entities
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use when requesting the next set of items.\
              \ If there are no additional items to return, the string is empty."
          title: NextToken
      title: GetInventoryResult
      type: object
    GetInventoryRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
        Aggregators: ""
        ResultAttributes: ""
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/InventoryFilterList'
          - description: One or more filters. Use a filter to return a more specific
              list of results.
          title: Filters
        Aggregators:
          allOf:
          - $ref: '#/components/schemas/InventoryAggregatorList'
          - description: "Returns counts of inventory types based on one or more expressions.\
              \ For example, if you aggregate by using an expression that uses the\
              \ <code>AWS:InstanceInformation.PlatformType</code> type, you can see\
              \ a count of how many Windows and Linux managed nodes exist in your\
              \ inventoried fleet."
          title: Aggregators
        ResultAttributes:
          allOf:
          - $ref: '#/components/schemas/ResultAttributeList'
          - description: The list of inventory item types to return.
          title: ResultAttributes
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. (You received
              this token from a previous call.)
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
      title: GetInventoryRequest
      type: object
    InvalidInventoryGroupException: {}
    InvalidAggregatorException: {}
    InvalidResultAttributeException: {}
    GetInventorySchemaResult:
      example:
        NextToken: ""
        Schemas: ""
      properties:
        Schemas:
          allOf:
          - $ref: '#/components/schemas/InventoryItemSchemaResultList'
          - description: Inventory schemas returned by the request.
          title: Schemas
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use when requesting the next set of items.\
              \ If there are no additional items to return, the string is empty."
          title: NextToken
      title: GetInventorySchemaResult
      type: object
    GetInventorySchemaRequest:
      example:
        TypeName: ""
        SubType: ""
        NextToken: ""
        MaxResults: ""
        Aggregator: ""
      properties:
        TypeName:
          allOf:
          - $ref: '#/components/schemas/InventoryItemTypeNameFilter'
          - description: The type of inventory item to return.
          title: TypeName
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. (You received
              this token from a previous call.)
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/GetInventorySchemaMaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
        Aggregator:
          allOf:
          - $ref: '#/components/schemas/AggregatorSchemaOnly'
          - description: "Returns inventory schemas that support aggregation. For\
              \ example, this call returns the <code>AWS:InstanceInformation</code>\
              \ type, because it supports aggregation based on the <code>PlatformName</code>,\
              \ <code>PlatformType</code>, and <code>PlatformVersion</code> attributes."
          title: Aggregator
        SubType:
          allOf:
          - $ref: '#/components/schemas/IsSubTypeSchema'
          - description: Returns the sub-type schema for a specified inventory type.
          title: SubType
      title: GetInventorySchemaRequest
      type: object
    GetMaintenanceWindowResult:
      example:
        Description: ""
        AllowUnassociatedTargets: ""
        Enabled: ""
        Duration: ""
        ScheduleOffset: ""
        ModifiedDate: ""
        EndDate: ""
        NextExecutionTime: ""
        Name: ""
        StartDate: ""
        WindowId: ""
        Cutoff: ""
        Schedule: ""
        CreatedDate: ""
        ScheduleTimezone: ""
      properties:
        WindowId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowId'
          - description: The ID of the created maintenance window.
          title: WindowId
        Name:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowName'
          - description: The name of the maintenance window.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowDescription'
          - description: The description of the maintenance window.
          title: Description
        StartDate:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowStringDateTime'
          - description: "The date and time, in ISO-8601 Extended format, for when\
              \ the maintenance window is scheduled to become active. The maintenance\
              \ window won't run before this specified time."
          title: StartDate
        EndDate:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowStringDateTime'
          - description: "The date and time, in ISO-8601 Extended format, for when\
              \ the maintenance window is scheduled to become inactive. The maintenance\
              \ window won't run after this specified time."
          title: EndDate
        Schedule:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowSchedule'
          - description: The schedule of the maintenance window in the form of a cron
              or rate expression.
          title: Schedule
        ScheduleTimezone:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTimezone'
          - description: "The time zone that the scheduled maintenance window executions\
              \ are based on, in Internet Assigned Numbers Authority (IANA) format.\
              \ For example: \"America/Los_Angeles\", \"UTC\", or \"Asia/Seoul\".\
              \ For more information, see the <a href=\"https://www.iana.org/time-zones\"\
              >Time Zone Database</a> on the IANA website."
          title: ScheduleTimezone
        ScheduleOffset:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowOffset'
          - description: The number of days to wait to run a maintenance window after
              the scheduled cron expression date and time.
          title: ScheduleOffset
        NextExecutionTime:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowStringDateTime'
          - description: "The next time the maintenance window will actually run,\
              \ taking into account any specified times for the maintenance window\
              \ to become active or inactive."
          title: NextExecutionTime
        Duration:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowDurationHours'
          - description: The duration of the maintenance window in hours.
          title: Duration
        Cutoff:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowCutoff'
          - description: The number of hours before the end of the maintenance window
              that Amazon Web Services Systems Manager stops scheduling new tasks
              for execution.
          title: Cutoff
        AllowUnassociatedTargets:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowAllowUnassociatedTargets'
          - description: Whether targets must be registered with the maintenance window
              before tasks can be defined for those targets.
          title: AllowUnassociatedTargets
        Enabled:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowEnabled'
          - description: Indicates whether the maintenance window is enabled.
          title: Enabled
        CreatedDate:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date the maintenance window was created.
          title: CreatedDate
        ModifiedDate:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date the maintenance window was last modified.
          title: ModifiedDate
      title: GetMaintenanceWindowResult
      type: object
    GetMaintenanceWindowRequest:
      example:
        WindowId: ""
      properties:
        WindowId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowId'
          - description: The ID of the maintenance window for which you want to retrieve
              information.
          title: WindowId
      required:
      - WindowId
      title: GetMaintenanceWindowRequest
      type: object
    GetMaintenanceWindowExecutionResult:
      example:
        Status: ""
        TaskIds: ""
        EndTime: ""
        StatusDetails: ""
        StartTime: ""
        WindowExecutionId: ""
      properties:
        WindowExecutionId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionId'
          - description: The ID of the maintenance window execution.
          title: WindowExecutionId
        TaskIds:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionTaskIdList'
          - description: The ID of the task executions from the maintenance window
              execution.
          title: TaskIds
        Status:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionStatus'
          - description: The status of the maintenance window execution.
          title: Status
        StatusDetails:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionStatusDetails'
          - description: The details explaining the status. Not available for all
              status values.
          title: StatusDetails
        StartTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time the maintenance window started running.
          title: StartTime
        EndTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time the maintenance window finished running.
          title: EndTime
      title: GetMaintenanceWindowExecutionResult
      type: object
    GetMaintenanceWindowExecutionRequest:
      example:
        WindowExecutionId: ""
      properties:
        WindowExecutionId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionId'
          - description: The ID of the maintenance window execution that includes
              the task.
          title: WindowExecutionId
      required:
      - WindowExecutionId
      title: GetMaintenanceWindowExecutionRequest
      type: object
    GetMaintenanceWindowExecutionTaskResult:
      example:
        Status: ""
        MaxErrors: ""
        EndTime: ""
        Priority: ""
        MaxConcurrency: ""
        StartTime: ""
        AlarmConfiguration:
          IgnorePollAlarmFailure: ""
          Alarms: ""
        WindowExecutionId: ""
        TaskArn: ""
        Type: ""
        ServiceRole: ""
        TaskParameters: ""
        StatusDetails: ""
        TriggeredAlarms: ""
        TaskExecutionId: ""
      properties:
        WindowExecutionId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionId'
          - description: The ID of the maintenance window execution that includes
              the task.
          title: WindowExecutionId
        TaskExecutionId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionTaskId'
          - description: The ID of the specific task execution in the maintenance
              window task that was retrieved.
          title: TaskExecutionId
        TaskArn:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskArn'
          - description: The Amazon Resource Name (ARN) of the task that ran.
          title: TaskArn
        ServiceRole:
          allOf:
          - $ref: '#/components/schemas/ServiceRole'
          - description: The role that was assumed when running the task.
          title: ServiceRole
        Type:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskType'
          - description: The type of task that was run.
          title: Type
        TaskParameters:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskParametersList'
          - description: "<p>The parameters passed to the task when it was run.</p>\
              \ <note> <p> <code>TaskParameters</code> has been deprecated. To specify\
              \ parameters to pass to a task when it runs, instead use the <code>Parameters</code>\
              \ option in the <code>TaskInvocationParameters</code> structure. For\
              \ information about how Systems Manager handles these options for the\
              \ supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p>\
              \ </note> <p>The map has the following format:</p> <ul> <li> <p> <code>Key</code>:\
              \ string, between 1 and 255 characters</p> </li> <li> <p> <code>Value</code>:\
              \ an array of strings, each between 1 and 255 characters</p> </li> </ul>"
          title: TaskParameters
        Priority:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskPriority'
          - description: The priority of the task.
          title: Priority
        MaxConcurrency:
          allOf:
          - $ref: '#/components/schemas/MaxConcurrency'
          - description: The defined maximum number of task executions that could
              be run in parallel.
          title: MaxConcurrency
        MaxErrors:
          allOf:
          - $ref: '#/components/schemas/MaxErrors'
          - description: The defined maximum number of task execution errors allowed
              before scheduling of the task execution would have been stopped.
          title: MaxErrors
        Status:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionStatus'
          - description: The status of the task.
          title: Status
        StatusDetails:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionStatusDetails'
          - description: The details explaining the status. Not available for all
              status values.
          title: StatusDetails
        StartTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time the task execution started.
          title: StartTime
        EndTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time the task execution completed.
          title: EndTime
        AlarmConfiguration:
          $ref: '#/components/schemas/GetMaintenanceWindowExecutionTaskResult_AlarmConfiguration'
        TriggeredAlarms:
          allOf:
          - $ref: '#/components/schemas/AlarmStateInformationList'
          - description: The CloudWatch alarms that were invoked by the maintenance
              window task.
          title: TriggeredAlarms
      title: GetMaintenanceWindowExecutionTaskResult
      type: object
    GetMaintenanceWindowExecutionTaskRequest:
      example:
        TaskId: ""
        WindowExecutionId: ""
      properties:
        WindowExecutionId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionId'
          - description: The ID of the maintenance window execution that includes
              the task.
          title: WindowExecutionId
        TaskId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionTaskId'
          - description: The ID of the specific task execution in the maintenance
              window task that should be retrieved.
          title: TaskId
      required:
      - TaskId
      - WindowExecutionId
      title: GetMaintenanceWindowExecutionTaskRequest
      type: object
    GetMaintenanceWindowExecutionTaskInvocationResult:
      example:
        Status: ""
        OwnerInformation: ""
        Parameters: ""
        EndTime: ""
        TaskType: ""
        StatusDetails: ""
        StartTime: ""
        InvocationId: ""
        WindowExecutionId: ""
        TaskExecutionId: ""
        WindowTargetId: ""
        ExecutionId: ""
      properties:
        WindowExecutionId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionId'
          - description: The maintenance window execution ID.
          title: WindowExecutionId
        TaskExecutionId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionTaskId'
          - description: The task execution ID.
          title: TaskExecutionId
        InvocationId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionTaskInvocationId'
          - description: The invocation ID.
          title: InvocationId
        ExecutionId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionTaskExecutionId'
          - description: The execution ID.
          title: ExecutionId
        TaskType:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskType'
          - description: Retrieves the task type for a maintenance window.
          title: TaskType
        Parameters:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionTaskInvocationParameters'
          - description: The parameters used at the time that the task ran.
          title: Parameters
        Status:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionStatus'
          - description: The task status for an invocation.
          title: Status
        StatusDetails:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionStatusDetails'
          - description: The details explaining the status. Details are only available
              for certain status values.
          title: StatusDetails
        StartTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time that the task started running on the target.
          title: StartTime
        EndTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time that the task finished running on the target.
          title: EndTime
        OwnerInformation:
          allOf:
          - $ref: '#/components/schemas/OwnerInformation'
          - description: User-provided value to be included in any Amazon CloudWatch
              Events or Amazon EventBridge events raised while running tasks for these
              targets in this maintenance window.
          title: OwnerInformation
        WindowTargetId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskTargetId'
          - description: The maintenance window target ID.
          title: WindowTargetId
      title: GetMaintenanceWindowExecutionTaskInvocationResult
      type: object
    GetMaintenanceWindowExecutionTaskInvocationRequest:
      example:
        TaskId: ""
        InvocationId: ""
        WindowExecutionId: ""
      properties:
        WindowExecutionId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionId'
          - description: The ID of the maintenance window execution for which the
              task is a part.
          title: WindowExecutionId
        TaskId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionTaskId'
          - description: 'The ID of the specific task in the maintenance window task
              that should be retrieved. '
          title: TaskId
        InvocationId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionTaskInvocationId'
          - description: The invocation ID to retrieve.
          title: InvocationId
      required:
      - InvocationId
      - TaskId
      - WindowExecutionId
      title: GetMaintenanceWindowExecutionTaskInvocationRequest
      type: object
    GetMaintenanceWindowTaskResult:
      example:
        MaxErrors: ""
        Description: ""
        ServiceRoleArn: ""
        Priority: ""
        MaxConcurrency: ""
        Targets: ""
        AlarmConfiguration:
          IgnorePollAlarmFailure: ""
          Alarms: ""
        TaskArn: ""
        Name: ""
        TaskInvocationParameters:
          Automation:
            Parameters: ""
            DocumentVersion: ""
          StepFunctions:
            Input: ""
            Name: ""
          RunCommand:
            TimeoutSeconds: ""
            Comment: ""
            OutputS3KeyPrefix: ""
            Parameters: ""
            CloudWatchOutputConfig:
              CloudWatchOutputEnabled: ""
              CloudWatchLogGroupName: ""
            DocumentHashType: ""
            ServiceRoleArn: ""
            NotificationConfig:
              NotificationArn: ""
              NotificationType: ""
              NotificationEvents: ""
            DocumentVersion: ""
            OutputS3BucketName: ""
            DocumentHash: ""
          Lambda:
            ClientContext: ""
            Qualifier: ""
            Payload: ""
        WindowTaskId: ""
        WindowId: ""
        TaskParameters: ""
        TaskType: ""
        CutoffBehavior: ""
        LoggingInfo:
          S3KeyPrefix: ""
          S3Region: ""
          S3BucketName: ""
      properties:
        WindowId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowId'
          - description: The retrieved maintenance window ID.
          title: WindowId
        WindowTaskId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskId'
          - description: The retrieved maintenance window task ID.
          title: WindowTaskId
        Targets:
          allOf:
          - $ref: '#/components/schemas/Targets'
          - description: The targets where the task should run.
          title: Targets
        TaskArn:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskArn'
          - description: "The resource that the task used during execution. For <code>RUN_COMMAND</code>\
              \ and <code>AUTOMATION</code> task types, the value of <code>TaskArn</code>\
              \ is the SSM document name/ARN. For <code>LAMBDA</code> tasks, the value\
              \ is the function name/ARN. For <code>STEP_FUNCTIONS</code> tasks, the\
              \ value is the state machine ARN."
          title: TaskArn
        ServiceRoleArn:
          allOf:
          - $ref: '#/components/schemas/ServiceRole'
          - description: The Amazon Resource Name (ARN) of the Identity and Access
              Management (IAM) service role to use to publish Amazon Simple Notification
              Service (Amazon SNS) notifications for maintenance window Run Command
              tasks.
          title: ServiceRoleArn
        TaskType:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskType'
          - description: The type of task to run.
          title: TaskType
        TaskParameters:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskParameters'
          - description: "<p>The parameters to pass to the task when it runs.</p>\
              \ <note> <p> <code>TaskParameters</code> has been deprecated. To specify\
              \ parameters to pass to a task when it runs, instead use the <code>Parameters</code>\
              \ option in the <code>TaskInvocationParameters</code> structure. For\
              \ information about how Systems Manager handles these options for the\
              \ supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p>\
              \ </note>"
          title: TaskParameters
        TaskInvocationParameters:
          $ref: '#/components/schemas/GetMaintenanceWindowTaskResult_TaskInvocationParameters'
        Priority:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskPriority'
          - description: "The priority of the task when it runs. The lower the number,\
              \ the higher the priority. Tasks that have the same priority are scheduled\
              \ in parallel."
          title: Priority
        MaxConcurrency:
          allOf:
          - $ref: '#/components/schemas/MaxConcurrency'
          - description: "<p>The maximum number of targets allowed to run this task\
              \ in parallel.</p> <note> <p>For maintenance window tasks without a\
              \ target specified, you can't supply a value for this option. Instead,\
              \ the system inserts a placeholder value of <code>1</code>, which may\
              \ be reported in the response to this command. This value doesn't affect\
              \ the running of your task and can be ignored.</p> </note>"
          title: MaxConcurrency
        MaxErrors:
          allOf:
          - $ref: '#/components/schemas/MaxErrors'
          - description: "<p>The maximum number of errors allowed before the task\
              \ stops being scheduled.</p> <note> <p>For maintenance window tasks\
              \ without a target specified, you can't supply a value for this option.\
              \ Instead, the system inserts a placeholder value of <code>1</code>,\
              \ which may be reported in the response to this command. This value\
              \ doesn't affect the running of your task and can be ignored.</p> </note>"
          title: MaxErrors
        LoggingInfo:
          $ref: '#/components/schemas/GetMaintenanceWindowTaskResult_LoggingInfo'
        Name:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowName'
          - description: The retrieved task name.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowDescription'
          - description: The retrieved task description.
          title: Description
        CutoffBehavior:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskCutoffBehavior'
          - description: "The action to take on tasks when the maintenance window\
              \ cutoff time is reached. <code>CONTINUE_TASK</code> means that tasks\
              \ continue to run. For Automation, Lambda, Step Functions tasks, <code>CANCEL_TASK</code>\
              \ means that currently running task invocations continue, but no new\
              \ task invocations are started. For Run Command tasks, <code>CANCEL_TASK</code>\
              \ means the system attempts to stop the task by sending a <code>CancelCommand</code>\
              \ operation."
          title: CutoffBehavior
        AlarmConfiguration:
          $ref: '#/components/schemas/GetMaintenanceWindowExecutionTaskResult_AlarmConfiguration'
      title: GetMaintenanceWindowTaskResult
      type: object
    GetMaintenanceWindowTaskRequest:
      example:
        WindowTaskId: ""
        WindowId: ""
      properties:
        WindowId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowId'
          - description: The maintenance window ID that includes the task to retrieve.
          title: WindowId
        WindowTaskId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskId'
          - description: The maintenance window task ID to retrieve.
          title: WindowTaskId
      required:
      - WindowId
      - WindowTaskId
      title: GetMaintenanceWindowTaskRequest
      type: object
    GetOpsItemResponse:
      example:
        OpsItem:
          Status: ""
          LastModifiedBy: ""
          CreatedBy: ""
          OpsItemType: ""
          CreatedTime: ""
          Description: ""
          Category: ""
          OpsItemArn: ""
          Priority: ""
          OperationalData: ""
          PlannedStartTime: ""
          Title: ""
          Severity: ""
          Source: ""
          OpsItemId: ""
          ActualStartTime: ""
          Version: ""
          LastModifiedTime: ""
          ActualEndTime: ""
          Notifications: ""
          RelatedOpsItems: ""
          PlannedEndTime: ""
      properties:
        OpsItem:
          $ref: '#/components/schemas/GetOpsItemResponse_OpsItem'
      title: GetOpsItemResponse
      type: object
    GetOpsItemRequest:
      example:
        OpsItemId: ""
        OpsItemArn: ""
      properties:
        OpsItemId:
          allOf:
          - $ref: '#/components/schemas/OpsItemId'
          - description: The ID of the OpsItem that you want to get.
          title: OpsItemId
        OpsItemArn:
          allOf:
          - $ref: '#/components/schemas/OpsItemArn'
          - description: The OpsItem Amazon Resource Name (ARN).
          title: OpsItemArn
      required:
      - OpsItemId
      title: GetOpsItemRequest
      type: object
    GetOpsMetadataResult:
      example:
        NextToken: ""
        ResourceId: ""
        Metadata: ""
      properties:
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/OpsMetadataResourceId'
          - description: The resource ID of the Application Manager application.
          title: ResourceId
        Metadata:
          allOf:
          - $ref: '#/components/schemas/MetadataMap'
          - description: OpsMetadata for an Application Manager application.
          title: Metadata
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. Use this token
              to get the next set of results.
          title: NextToken
      title: GetOpsMetadataResult
      type: object
    GetOpsMetadataRequest:
      example:
        OpsMetadataArn: ""
        NextToken: ""
        MaxResults: ""
      properties:
        OpsMetadataArn:
          allOf:
          - $ref: '#/components/schemas/OpsMetadataArn'
          - description: The Amazon Resource Name (ARN) of an OpsMetadata Object to
              view.
          title: OpsMetadataArn
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/GetOpsMetadataMaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token to start the list. Use this token to get the next
              set of results.
          title: NextToken
      required:
      - OpsMetadataArn
      title: GetOpsMetadataRequest
      type: object
    GetOpsSummaryResult:
      example:
        NextToken: ""
        Entities: ""
      properties:
        Entities:
          allOf:
          - $ref: '#/components/schemas/OpsEntityList'
          - description: The list of aggregated details and filtered OpsData.
          title: Entities
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. Use this token
              to get the next set of results.
          title: NextToken
      title: GetOpsSummaryResult
      type: object
    GetOpsSummaryRequest:
      example:
        Filters: ""
        NextToken: ""
        SyncName: ""
        MaxResults: ""
        Aggregators: ""
        ResultAttributes: ""
      properties:
        SyncName:
          allOf:
          - $ref: '#/components/schemas/ResourceDataSyncName'
          - description: Specify the name of a resource data sync to get.
          title: SyncName
        Filters:
          allOf:
          - $ref: '#/components/schemas/OpsFilterList'
          - description: 'Optional filters used to scope down the returned OpsData. '
          title: Filters
        Aggregators:
          allOf:
          - $ref: '#/components/schemas/OpsAggregatorList'
          - description: Optional aggregators that return counts of OpsData based
              on one or more expressions.
          title: Aggregators
        ResultAttributes:
          allOf:
          - $ref: '#/components/schemas/OpsResultAttributeList'
          - description: The OpsData data type to return.
          title: ResultAttributes
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: 'A token to start the list. Use this token to get the next
              set of results. '
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
      title: GetOpsSummaryRequest
      type: object
    GetParameterResult:
      example:
        Parameter:
          SourceResult: ""
          LastModifiedDate: ""
          Type: ""
          Version: ""
          Value: ""
          DataType: ""
          ARN: ""
          Name: ""
          Selector: ""
      properties:
        Parameter:
          $ref: '#/components/schemas/GetParameterResult_Parameter'
      title: GetParameterResult
      type: object
    GetParameterRequest:
      example:
        WithDecryption: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/PSParameterName'
          - description: "<p>The name of the parameter you want to query.</p> <p>To\
              \ query by parameter label, use <code>\"Name\": \"name:label\"</code>.\
              \ To query by parameter version, use <code>\"Name\": \"name:version\"\
              </code>.</p>"
          title: Name
        WithDecryption:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Return decrypted values for secure string parameters. This
              flag is ignored for <code>String</code> and <code>StringList</code>
              parameter types.
          title: WithDecryption
      required:
      - Name
      title: GetParameterRequest
      type: object
    InvalidKeyId: {}
    ParameterVersionNotFound: {}
    GetParameterHistoryResult:
      example:
        Parameters: ""
        NextToken: ""
      properties:
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParameterHistoryList'
          - description: A list of parameters returned by the request.
          title: Parameters
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use when requesting the next set of items.\
              \ If there are no additional items to return, the string is empty."
          title: NextToken
      title: GetParameterHistoryResult
      type: object
    GetParameterHistoryRequest:
      example:
        NextToken: ""
        MaxResults: ""
        WithDecryption: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/PSParameterName'
          - description: The name of the parameter for which you want to review history.
          title: Name
        WithDecryption:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Return decrypted values for secure string parameters. This
              flag is ignored for <code>String</code> and <code>StringList</code>
              parameter types.
          title: WithDecryption
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. (You received
              this token from a previous call.)
          title: NextToken
      required:
      - Name
      title: GetParameterHistoryRequest
      type: object
    GetParametersResult:
      example:
        Parameters: ""
        InvalidParameters: ""
      properties:
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParameterList'
          - description: A list of details for a parameter.
          title: Parameters
        InvalidParameters:
          allOf:
          - $ref: '#/components/schemas/ParameterNameList'
          - description: A list of parameters that aren't formatted correctly or don't
              run during an execution.
          title: InvalidParameters
      title: GetParametersResult
      type: object
    GetParametersRequest:
      example:
        Names: ""
        WithDecryption: ""
      properties:
        Names:
          allOf:
          - $ref: '#/components/schemas/ParameterNameList'
          - description: "<p>Names of the parameters for which you want to query information.</p>\
              \ <p>To query by parameter label, use <code>\"Name\": \"name:label\"\
              </code>. To query by parameter version, use <code>\"Name\": \"name:version\"\
              </code>.</p>"
          title: Names
        WithDecryption:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Return decrypted secure string value. Return decrypted values
              for secure string parameters. This flag is ignored for <code>String</code>
              and <code>StringList</code> parameter types.
          title: WithDecryption
      required:
      - Names
      title: GetParametersRequest
      type: object
    GetParametersByPathResult:
      example:
        Parameters: ""
        NextToken: ""
      properties:
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParameterList'
          - description: A list of parameters found in the specified hierarchy.
          title: Parameters
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. Use this token
              to get the next set of results.
          title: NextToken
      title: GetParametersByPathResult
      type: object
    GetParametersByPathRequest:
      example:
        Path: ""
        ParameterFilters: ""
        NextToken: ""
        MaxResults: ""
        Recursive: ""
        WithDecryption: ""
      properties:
        Path:
          allOf:
          - $ref: '#/components/schemas/PSParameterName'
          - description: "The hierarchy for the parameter. Hierarchies start with\
              \ a forward slash (/). The hierarchy is the parameter name except the\
              \ last part of the parameter. For the API call to succeed, the last\
              \ part of the parameter name can't be in the path. A parameter name\
              \ hierarchy can have a maximum of 15 levels. Here is an example of a\
              \ hierarchy: <code>/Finance/Prod/IAD/WinServ2016/license33 </code> "
          title: Path
        Recursive:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>Retrieve all parameters within a hierarchy.</p> <important>\
              \ <p>If a user has access to a path, then the user can access all levels\
              \ of that path. For example, if a user has permission to access path\
              \ <code>/a</code>, then the user can also access <code>/a/b</code>.\
              \ Even if a user has explicitly been denied access in IAM for parameter\
              \ <code>/a/b</code>, they can still call the GetParametersByPath API\
              \ operation recursively for <code>/a</code> and view <code>/a/b</code>.</p>\
              \ </important>"
          title: Recursive
        ParameterFilters:
          allOf:
          - $ref: '#/components/schemas/ParameterStringFilterList'
          - description: "<p>Filters to limit the request results.</p> <note> <p>The\
              \ following <code>Key</code> values are supported for <code>GetParametersByPath</code>:\
              \ <code>Type</code>, <code>KeyId</code>, and <code>Label</code>.</p>\
              \ <p>The following <code>Key</code> values aren't supported for <code>GetParametersByPath</code>:\
              \ <code>tag</code>, <code>DataType</code>, <code>Name</code>, <code>Path</code>,\
              \ and <code>Tier</code>.</p> </note>"
          title: ParameterFilters
        WithDecryption:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Retrieve all parameters in a hierarchy with their value decrypted.
          title: WithDecryption
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/GetParametersByPathMaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: 'A token to start the list. Use this token to get the next
              set of results. '
          title: NextToken
      required:
      - Path
      title: GetParametersByPathRequest
      type: object
    GetPatchBaselineResult:
      example:
        BaselineId: ""
        OperatingSystem: ""
        Description: ""
        ApprovalRules:
          PatchRules: ""
        ModifiedDate: ""
        Sources: ""
        Name: ""
        RejectedPatches: ""
        ApprovedPatches: ""
        RejectedPatchesAction: ""
        PatchGroups: ""
        ApprovedPatchesComplianceLevel: ""
        CreatedDate: ""
        ApprovedPatchesEnableNonSecurity: ""
        GlobalFilters:
          PatchFilters: ""
      properties:
        BaselineId:
          allOf:
          - $ref: '#/components/schemas/BaselineId'
          - description: The ID of the retrieved patch baseline.
          title: BaselineId
        Name:
          allOf:
          - $ref: '#/components/schemas/BaselineName'
          - description: The name of the patch baseline.
          title: Name
        OperatingSystem:
          allOf:
          - $ref: '#/components/schemas/OperatingSystem'
          - description: Returns the operating system specified for the patch baseline.
          title: OperatingSystem
        GlobalFilters:
          $ref: '#/components/schemas/GetPatchBaselineResult_GlobalFilters'
        ApprovalRules:
          $ref: '#/components/schemas/CreatePatchBaselineRequest_ApprovalRules'
        ApprovedPatches:
          allOf:
          - $ref: '#/components/schemas/PatchIdList'
          - description: A list of explicitly approved patches for the baseline.
          title: ApprovedPatches
        ApprovedPatchesComplianceLevel:
          allOf:
          - $ref: '#/components/schemas/PatchComplianceLevel'
          - description: Returns the specified compliance severity level for approved
              patches in the patch baseline.
          title: ApprovedPatchesComplianceLevel
        ApprovedPatchesEnableNonSecurity:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether the list of approved patches includes non-security
              updates that should be applied to the managed nodes. The default value
              is <code>false</code>. Applies to Linux managed nodes only.
          title: ApprovedPatchesEnableNonSecurity
        RejectedPatches:
          allOf:
          - $ref: '#/components/schemas/PatchIdList'
          - description: A list of explicitly rejected patches for the baseline.
          title: RejectedPatches
        RejectedPatchesAction:
          allOf:
          - $ref: '#/components/schemas/PatchAction'
          - description: "The action specified to take on patches included in the\
              \ <code>RejectedPatches</code> list. A patch can be allowed only if\
              \ it is a dependency of another package, or blocked entirely along with\
              \ packages that include it as a dependency."
          title: RejectedPatchesAction
        PatchGroups:
          allOf:
          - $ref: '#/components/schemas/PatchGroupList'
          - description: Patch groups included in the patch baseline.
          title: PatchGroups
        CreatedDate:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date the patch baseline was created.
          title: CreatedDate
        ModifiedDate:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date the patch baseline was last modified.
          title: ModifiedDate
        Description:
          allOf:
          - $ref: '#/components/schemas/BaselineDescription'
          - description: A description of the patch baseline.
          title: Description
        Sources:
          allOf:
          - $ref: '#/components/schemas/PatchSourceList'
          - description: "Information about the patches to use to update the managed\
              \ nodes, including target operating systems and source repositories.\
              \ Applies to Linux managed nodes only."
          title: Sources
      title: GetPatchBaselineResult
      type: object
    GetPatchBaselineRequest:
      example:
        BaselineId: ""
      properties:
        BaselineId:
          allOf:
          - $ref: '#/components/schemas/BaselineId'
          - description: "<p>The ID of the patch baseline to retrieve.</p> <note>\
              \ <p>To retrieve information about an Amazon Web Services managed patch\
              \ baseline, specify the full Amazon Resource Name (ARN) of the baseline.\
              \ For example, for the baseline <code>AWS-AmazonLinuxDefaultPatchBaseline</code>,\
              \ specify <code>arn:aws:ssm:us-east-2:733109147000:patchbaseline/pb-0e392de35e7c563b7</code>\
              \ instead of <code>pb-0e392de35e7c563b7</code>.</p> </note>"
          title: BaselineId
      required:
      - BaselineId
      title: GetPatchBaselineRequest
      type: object
    GetPatchBaselineForPatchGroupResult:
      example:
        BaselineId: ""
        OperatingSystem: ""
        PatchGroup: ""
      properties:
        BaselineId:
          allOf:
          - $ref: '#/components/schemas/BaselineId'
          - description: The ID of the patch baseline that should be used for the
              patch group.
          title: BaselineId
        PatchGroup:
          allOf:
          - $ref: '#/components/schemas/PatchGroup'
          - description: The name of the patch group.
          title: PatchGroup
        OperatingSystem:
          allOf:
          - $ref: '#/components/schemas/OperatingSystem'
          - description: The operating system rule specified for patch groups using
              the patch baseline.
          title: OperatingSystem
      title: GetPatchBaselineForPatchGroupResult
      type: object
    GetPatchBaselineForPatchGroupRequest:
      example:
        OperatingSystem: ""
        PatchGroup: ""
      properties:
        PatchGroup:
          allOf:
          - $ref: '#/components/schemas/PatchGroup'
          - description: The name of the patch group whose patch baseline should be
              retrieved.
          title: PatchGroup
        OperatingSystem:
          allOf:
          - $ref: '#/components/schemas/OperatingSystem'
          - description: Returns the operating system rule specified for patch groups
              using the patch baseline.
          title: OperatingSystem
      required:
      - PatchGroup
      title: GetPatchBaselineForPatchGroupRequest
      type: object
    GetResourcePoliciesResponse:
      example:
        Policies: ""
        NextToken: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The token for the next set of items to return. Use this token
              to get the next set of results.
          title: NextToken
        Policies:
          allOf:
          - $ref: '#/components/schemas/GetResourcePoliciesResponseEntries'
          - description: An array of the <code>Policy</code> object.
          title: Policies
      title: GetResourcePoliciesResponse
      type: object
    GetResourcePoliciesRequest:
      example:
        ResourceArn: ""
        NextToken: ""
        MaxResults: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArnString'
          - description: Amazon Resource Name (ARN) of the resource to which the policies
              are attached.
          title: ResourceArn
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A token to start the list. Use this token to get the next
              set of results.
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ResourcePolicyMaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
      required:
      - ResourceArn
      title: GetResourcePoliciesRequest
      type: object
    GetServiceSettingResult:
      description: The query result body of the GetServiceSetting API operation.
      example:
        ServiceSetting:
          Status: ""
          LastModifiedDate: ""
          SettingValue: ""
          SettingId: ""
          ARN: ""
          LastModifiedUser: ""
      properties:
        ServiceSetting:
          $ref: '#/components/schemas/GetServiceSettingResult_ServiceSetting'
      title: GetServiceSettingResult
      type: object
    GetServiceSettingRequest:
      description: The request body of the GetServiceSetting API operation.
      example:
        SettingId: ""
      properties:
        SettingId:
          allOf:
          - $ref: '#/components/schemas/ServiceSettingId'
          - description: <p>The ID of the service setting to get. The setting ID can
              be one of the following.</p> <ul> <li> <p> <code>/ssm/managed-instance/default-ec2-instance-management-role</code>
              </p> </li> <li> <p> <code>/ssm/automation/customer-script-log-destination</code>
              </p> </li> <li> <p> <code>/ssm/automation/customer-script-log-group-name</code>
              </p> </li> <li> <p> <code>/ssm/documents/console/public-sharing-permission</code>
              </p> </li> <li> <p> <code>/ssm/managed-instance/activation-tier</code>
              </p> </li> <li> <p> <code>/ssm/opsinsights/opscenter</code> </p> </li>
              <li> <p> <code>/ssm/parameter-store/default-parameter-tier</code> </p>
              </li> <li> <p> <code>/ssm/parameter-store/high-throughput-enabled</code>
              </p> </li> </ul>
          title: SettingId
      required:
      - SettingId
      title: GetServiceSettingRequest
      type: object
    ServiceSettingNotFound: {}
    LabelParameterVersionResult:
      example:
        ParameterVersion: ""
        InvalidLabels: ""
      properties:
        InvalidLabels:
          allOf:
          - $ref: '#/components/schemas/ParameterLabelList'
          - description: "The label doesn't meet the requirements. For information\
              \ about parameter label requirements, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-paramstore-labels.html\"\
              >Labeling parameters</a> in the <i>Amazon Web Services Systems Manager\
              \ User Guide</i>."
          title: InvalidLabels
        ParameterVersion:
          allOf:
          - $ref: '#/components/schemas/PSParameterVersion'
          - description: The version of the parameter that has been labeled.
          title: ParameterVersion
      title: LabelParameterVersionResult
      type: object
    LabelParameterVersionRequest:
      example:
        ParameterVersion: ""
        Labels: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/PSParameterName'
          - description: The parameter name on which you want to attach one or more
              labels.
          title: Name
        ParameterVersion:
          allOf:
          - $ref: '#/components/schemas/PSParameterVersion'
          - description: "The specific version of the parameter on which you want\
              \ to attach one or more labels. If no version is specified, the system\
              \ attaches the label to the latest version."
          title: ParameterVersion
        Labels:
          allOf:
          - $ref: '#/components/schemas/ParameterLabelList'
          - description: One or more labels to attach to the specified parameter version.
          title: Labels
      required:
      - Labels
      - Name
      title: LabelParameterVersionRequest
      type: object
    ParameterVersionLabelLimitExceeded: {}
    ListAssociationVersionsResult:
      example:
        NextToken: ""
        AssociationVersions: ""
      properties:
        AssociationVersions:
          allOf:
          - $ref: '#/components/schemas/AssociationVersionList'
          - description: Information about all versions of the association for the
              specified association ID.
          title: AssociationVersions
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. Use this token
              to get the next set of results.
          title: NextToken
      title: ListAssociationVersionsResult
      type: object
    ListAssociationVersionsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        AssociationId: ""
      properties:
        AssociationId:
          allOf:
          - $ref: '#/components/schemas/AssociationId'
          - description: The association ID for which you want to view all versions.
          title: AssociationId
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: 'A token to start the list. Use this token to get the next
              set of results. '
          title: NextToken
      required:
      - AssociationId
      title: ListAssociationVersionsRequest
      type: object
    ListAssociationsResult:
      example:
        NextToken: ""
        Associations: ""
      properties:
        Associations:
          allOf:
          - $ref: '#/components/schemas/AssociationList'
          - description: The associations.
          title: Associations
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use when requesting the next set of items.\
              \ If there are no additional items to return, the string is empty."
          title: NextToken
      title: ListAssociationsResult
      type: object
    ListAssociationsRequest:
      example:
        NextToken: ""
        AssociationFilterList: ""
        MaxResults: ""
      properties:
        AssociationFilterList:
          allOf:
          - $ref: '#/components/schemas/AssociationFilterList'
          - description: <p>One or more filters. Use a filter to return a more specific
              list of results.</p> <note> <p>Filtering associations using the <code>InstanceID</code>
              attribute only returns legacy associations created using the <code>InstanceID</code>
              attribute. Associations targeting the managed node that are part of
              the Target Attributes <code>ResourceGroup</code> or <code>Tags</code>
              aren't returned.</p> </note>
          title: AssociationFilterList
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. (You received
              this token from a previous call.)
          title: NextToken
      title: ListAssociationsRequest
      type: object
    ListCommandInvocationsResult:
      example:
        NextToken: ""
        CommandInvocations: ""
      properties:
        CommandInvocations:
          allOf:
          - $ref: '#/components/schemas/CommandInvocationList'
          - description: '(Optional) A list of all invocations. '
          title: CommandInvocations
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: (Optional) The token for the next set of items to return.
              (You received this token from a previous call.)
          title: NextToken
      title: ListCommandInvocationsResult
      type: object
    ListCommandInvocationsRequest:
      example:
        Filters: ""
        Details: ""
        NextToken: ""
        InstanceId: ""
        MaxResults: ""
        CommandId: ""
      properties:
        CommandId:
          allOf:
          - $ref: '#/components/schemas/CommandId'
          - description: (Optional) The invocations for a specific command ID.
          title: CommandId
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          - description: (Optional) The command execution details for a specific managed
              node ID.
          title: InstanceId
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/CommandMaxResults'
          - description: (Optional) The maximum number of items to return for this
              call. The call also returns a token that you can specify in a subsequent
              call to get the next set of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: (Optional) The token for the next set of items to return.
              (You received this token from a previous call.)
          title: NextToken
        Filters:
          allOf:
          - $ref: '#/components/schemas/CommandFilterList'
          - description: (Optional) One or more filters. Use a filter to return a
              more specific list of results.
          title: Filters
        Details:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: '(Optional) If set this returns the response of the command
              executions and any command output. The default value is <code>false</code>. '
          title: Details
      title: ListCommandInvocationsRequest
      type: object
    ListCommandsResult:
      example:
        NextToken: ""
        Commands: ""
      properties:
        Commands:
          allOf:
          - $ref: '#/components/schemas/CommandList'
          - description: '(Optional) The list of commands requested by the user. '
          title: Commands
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: (Optional) The token for the next set of items to return.
              (You received this token from a previous call.)
          title: NextToken
      title: ListCommandsResult
      type: object
    ListCommandsRequest:
      example:
        Filters: ""
        NextToken: ""
        InstanceId: ""
        MaxResults: ""
        CommandId: ""
      properties:
        CommandId:
          allOf:
          - $ref: '#/components/schemas/CommandId'
          - description: "(Optional) If provided, lists only the specified command."
          title: CommandId
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          - description: <p>(Optional) Lists commands issued against this managed
              node ID.</p> <note> <p>You can't specify a managed node ID in the same
              command that you specify <code>Status</code> = <code>Pending</code>.
              This is because the command hasn't reached the managed node yet.</p>
              </note>
          title: InstanceId
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/CommandMaxResults'
          - description: (Optional) The maximum number of items to return for this
              call. The call also returns a token that you can specify in a subsequent
              call to get the next set of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: (Optional) The token for the next set of items to return.
              (You received this token from a previous call.)
          title: NextToken
        Filters:
          allOf:
          - $ref: '#/components/schemas/CommandFilterList'
          - description: '(Optional) One or more filters. Use a filter to return a
              more specific list of results. '
          title: Filters
      title: ListCommandsRequest
      type: object
    ListComplianceItemsResult:
      example:
        NextToken: ""
        ComplianceItems: ""
      properties:
        ComplianceItems:
          allOf:
          - $ref: '#/components/schemas/ComplianceItemList'
          - description: 'A list of compliance information for the specified resource
              ID. '
          title: ComplianceItems
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. Use this token
              to get the next set of results.
          title: NextToken
      title: ListComplianceItemsResult
      type: object
    ListComplianceItemsRequest:
      example:
        ResourceTypes: ""
        Filters: ""
        ResourceIds: ""
        NextToken: ""
        MaxResults: ""
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/ComplianceStringFilterList'
          - description: One or more compliance filters. Use a filter to return a
              more specific list of results.
          title: Filters
        ResourceIds:
          allOf:
          - $ref: '#/components/schemas/ComplianceResourceIdList'
          - description: "The ID for the resources from which to get compliance information.\
              \ Currently, you can only specify one resource ID."
          title: ResourceIds
        ResourceTypes:
          allOf:
          - $ref: '#/components/schemas/ComplianceResourceTypeList'
          - description: "The type of resource from which to get compliance information.\
              \ Currently, the only supported resource type is <code>ManagedInstance</code>."
          title: ResourceTypes
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: 'A token to start the list. Use this token to get the next
              set of results. '
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
      title: ListComplianceItemsRequest
      type: object
    ListComplianceSummariesResult:
      example:
        ComplianceSummaryItems: ""
        NextToken: ""
      properties:
        ComplianceSummaryItems:
          allOf:
          - $ref: '#/components/schemas/ComplianceSummaryItemList'
          - description: "A list of compliant and non-compliant summary counts based\
              \ on compliance types. For example, this call returns State Manager\
              \ associations, patches, or custom compliance types according to the\
              \ filter criteria that you specified."
          title: ComplianceSummaryItems
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. Use this token
              to get the next set of results.
          title: NextToken
      title: ListComplianceSummariesResult
      type: object
    ListComplianceSummariesRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/ComplianceStringFilterList'
          - description: One or more compliance or inventory filters. Use a filter
              to return a more specific list of results.
          title: Filters
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: 'A token to start the list. Use this token to get the next
              set of results. '
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of items to return for this call. Currently,\
              \ you can specify null or 50. The call also returns a token that you\
              \ can specify in a subsequent call to get the next set of results."
          title: MaxResults
      title: ListComplianceSummariesRequest
      type: object
    ListDocumentMetadataHistoryResponse:
      example:
        NextToken: ""
        Metadata:
          ReviewerResponse: ""
        Author: ""
        DocumentVersion: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DocumentName'
          - description: The name of the change template.
          title: Name
        DocumentVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: The version of the change template.
          title: DocumentVersion
        Author:
          allOf:
          - $ref: '#/components/schemas/DocumentAuthor'
          - description: The user ID of the person in the organization who requested
              the review of the change template.
          title: Author
        Metadata:
          $ref: '#/components/schemas/ListDocumentMetadataHistoryResponse_Metadata'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: NextToken
      title: ListDocumentMetadataHistoryResponse
      type: object
    ListDocumentMetadataHistoryRequest:
      example:
        NextToken: ""
        MaxResults: ""
        Metadata: ""
        DocumentVersion: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DocumentName'
          - description: The name of the change template.
          title: Name
        DocumentVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: The version of the change template.
          title: DocumentVersion
        Metadata:
          allOf:
          - $ref: '#/components/schemas/DocumentMetadataEnum'
          - description: "The type of data for which details are being requested.\
              \ Currently, the only supported value is <code>DocumentReviews</code>."
          title: Metadata
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. (You received
              this token from a previous call.)
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
      required:
      - Metadata
      - Name
      title: ListDocumentMetadataHistoryRequest
      type: object
    ListDocumentVersionsResult:
      example:
        NextToken: ""
        DocumentVersions: ""
      properties:
        DocumentVersions:
          allOf:
          - $ref: '#/components/schemas/DocumentVersionList'
          - description: The document versions.
          title: DocumentVersions
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use when requesting the next set of items.\
              \ If there are no additional items to return, the string is empty."
          title: NextToken
      title: ListDocumentVersionsResult
      type: object
    ListDocumentVersionsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DocumentARN'
          - description: The name of the document. You can specify an Amazon Resource
              Name (ARN).
          title: Name
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. (You received
              this token from a previous call.)
          title: NextToken
      required:
      - Name
      title: ListDocumentVersionsRequest
      type: object
    ListDocumentsResult:
      example:
        DocumentIdentifiers: ""
        NextToken: ""
      properties:
        DocumentIdentifiers:
          allOf:
          - $ref: '#/components/schemas/DocumentIdentifierList'
          - description: The names of the SSM documents.
          title: DocumentIdentifiers
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use when requesting the next set of items.\
              \ If there are no additional items to return, the string is empty."
          title: NextToken
      title: ListDocumentsResult
      type: object
    ListDocumentsRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
        DocumentFilterList: ""
      properties:
        DocumentFilterList:
          allOf:
          - $ref: '#/components/schemas/DocumentFilterList'
          - description: "This data type is deprecated. Instead, use <code>Filters</code>."
          title: DocumentFilterList
        Filters:
          allOf:
          - $ref: '#/components/schemas/DocumentKeyValuesFilterList'
          - description: "<p>One or more <code>DocumentKeyValuesFilter</code> objects.\
              \ Use a filter to return a more specific list of results. For keys,\
              \ you can specify one or more key-value pair tags that have been applied\
              \ to a document. Other valid keys include <code>Owner</code>, <code>Name</code>,\
              \ <code>PlatformTypes</code>, <code>DocumentType</code>, and <code>TargetType</code>.\
              \ For example, to return documents you own use <code>Key=Owner,Values=Self</code>.\
              \ To specify a custom key-value pair, use the format <code>Key=tag:tagName,Values=valueName</code>.</p>\
              \ <note> <p>This API operation only supports filtering documents by\
              \ using a single tag key and one or more tag values. For example: <code>Key=tag:tagName,Values=valueName1,valueName2</code>\
              \ </p> </note>"
          title: Filters
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. (You received
              this token from a previous call.)
          title: NextToken
      title: ListDocumentsRequest
      type: object
    ListInventoryEntriesResult:
      example:
        TypeName: ""
        CaptureTime: ""
        SchemaVersion: ""
        NextToken: ""
        InstanceId: ""
        Entries: ""
      properties:
        TypeName:
          allOf:
          - $ref: '#/components/schemas/InventoryItemTypeName'
          - description: The type of inventory item returned by the request.
          title: TypeName
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          - description: The managed node ID targeted by the request to query inventory
              information.
          title: InstanceId
        SchemaVersion:
          allOf:
          - $ref: '#/components/schemas/InventoryItemSchemaVersion'
          - description: The inventory schema version used by the managed node(s).
          title: SchemaVersion
        CaptureTime:
          allOf:
          - $ref: '#/components/schemas/InventoryItemCaptureTime'
          - description: The time that inventory information was collected for the
              managed node(s).
          title: CaptureTime
        Entries:
          allOf:
          - $ref: '#/components/schemas/InventoryItemEntryList'
          - description: A list of inventory items on the managed node(s).
          title: Entries
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token to use when requesting the next set of items.\
              \ If there are no additional items to return, the string is empty."
          title: NextToken
      title: ListInventoryEntriesResult
      type: object
    ListInventoryEntriesRequest:
      example:
        TypeName: ""
        Filters: ""
        NextToken: ""
        InstanceId: ""
        MaxResults: ""
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          - description: The managed node ID for which you want inventory information.
          title: InstanceId
        TypeName:
          allOf:
          - $ref: '#/components/schemas/InventoryItemTypeName'
          - description: The type of inventory item for which you want information.
          title: TypeName
        Filters:
          allOf:
          - $ref: '#/components/schemas/InventoryFilterList'
          - description: One or more filters. Use a filter to return a more specific
              list of results.
          title: Filters
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. (You received
              this token from a previous call.)
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
      required:
      - InstanceId
      - TypeName
      title: ListInventoryEntriesRequest
      type: object
    ListOpsItemEventsResponse:
      example:
        NextToken: ""
        Summaries: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'The token for the next set of items to return. Use this
              token to get the next set of results. '
          title: NextToken
        Summaries:
          allOf:
          - $ref: '#/components/schemas/OpsItemEventSummaries'
          - description: A list of event information for the specified OpsItems.
          title: Summaries
      title: ListOpsItemEventsResponse
      type: object
    ListOpsItemEventsRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/OpsItemEventFilters'
          - description: 'One or more OpsItem filters. Use a filter to return a more
              specific list of results. '
          title: Filters
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/OpsItemEventMaxResults'
          - description: 'The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results. '
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'A token to start the list. Use this token to get the next
              set of results. '
          title: NextToken
      title: ListOpsItemEventsRequest
      type: object
    ListOpsItemRelatedItemsResponse:
      example:
        NextToken: ""
        Summaries: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The token for the next set of items to return. Use this token
              to get the next set of results.
          title: NextToken
        Summaries:
          allOf:
          - $ref: '#/components/schemas/OpsItemRelatedItemSummaries'
          - description: A list of related-item resources for the specified OpsItem.
          title: Summaries
      title: ListOpsItemRelatedItemsResponse
      type: object
    ListOpsItemRelatedItemsRequest:
      example:
        OpsItemId: ""
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        OpsItemId:
          allOf:
          - $ref: '#/components/schemas/OpsItemId'
          - description: The ID of the OpsItem for which you want to list all related-item
              resources.
          title: OpsItemId
        Filters:
          allOf:
          - $ref: '#/components/schemas/OpsItemRelatedItemsFilters'
          - description: 'One or more OpsItem filters. Use a filter to return a more
              specific list of results. '
          title: Filters
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/OpsItemRelatedItemsMaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The token for the next set of items to return. (You received
              this token from a previous call.)
          title: NextToken
      title: ListOpsItemRelatedItemsRequest
      type: object
    ListOpsMetadataResult:
      example:
        NextToken: ""
        OpsMetadataList: ""
      properties:
        OpsMetadataList:
          allOf:
          - $ref: '#/components/schemas/OpsMetadataList'
          - description: Returns a list of OpsMetadata objects.
          title: OpsMetadataList
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. Use this token
              to get the next set of results.
          title: NextToken
      title: ListOpsMetadataResult
      type: object
    ListOpsMetadataRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/OpsMetadataFilterList'
          - description: One or more filters to limit the number of OpsMetadata objects
              returned by the call.
          title: Filters
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListOpsMetadataMaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token to start the list. Use this token to get the next
              set of results.
          title: NextToken
      title: ListOpsMetadataRequest
      type: object
    ListResourceComplianceSummariesResult:
      example:
        NextToken: ""
        ResourceComplianceSummaryItems: ""
      properties:
        ResourceComplianceSummaryItems:
          allOf:
          - $ref: '#/components/schemas/ResourceComplianceSummaryItemList'
          - description: "A summary count for specified or targeted managed nodes.\
              \ Summary count includes information about compliant and non-compliant\
              \ State Manager associations, patch status, or custom items according\
              \ to the filter criteria that you specify. "
          title: ResourceComplianceSummaryItems
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. Use this token
              to get the next set of results.
          title: NextToken
      title: ListResourceComplianceSummariesResult
      type: object
    ListResourceComplianceSummariesRequest:
      example:
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/ComplianceStringFilterList'
          - description: One or more filters. Use a filter to return a more specific
              list of results.
          title: Filters
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: 'A token to start the list. Use this token to get the next
              set of results. '
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
      title: ListResourceComplianceSummariesRequest
      type: object
    ListResourceDataSyncResult:
      example:
        ResourceDataSyncItems: ""
        NextToken: ""
      properties:
        ResourceDataSyncItems:
          allOf:
          - $ref: '#/components/schemas/ResourceDataSyncItemList'
          - description: A list of your current resource data sync configurations
              and their statuses.
          title: ResourceDataSyncItems
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next set of items to return. Use this token
              to get the next set of results.
          title: NextToken
      title: ListResourceDataSyncResult
      type: object
    ListResourceDataSyncRequest:
      example:
        NextToken: ""
        SyncType: ""
        MaxResults: ""
      properties:
        SyncType:
          allOf:
          - $ref: '#/components/schemas/ResourceDataSyncType'
          - description: View a list of resource data syncs according to the sync
              type. Specify <code>SyncToDestination</code> to view resource data syncs
              that synchronize data to an Amazon S3 bucket. Specify <code>SyncFromSource</code>
              to view resource data syncs from Organizations or from multiple Amazon
              Web Services Regions.
          title: SyncType
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: 'A token to start the list. Use this token to get the next
              set of results. '
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of items to return for this call. The
              call also returns a token that you can specify in a subsequent call
              to get the next set of results.
          title: MaxResults
      title: ListResourceDataSyncRequest
      type: object
    ListTagsForResourceResult:
      example:
        TagList: ""
      properties:
        TagList:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: A list of tags.
          title: TagList
      title: ListTagsForResourceResult
      type: object
    ListTagsForResourceRequest:
      example:
        ResourceId: ""
        ResourceType: ""
      properties:
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceTypeForTagging'
          - description: Returns a list of tags for a specific resource type.
          title: ResourceType
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: The resource ID for which you want to see a list of tags.
          title: ResourceId
      required:
      - ResourceId
      - ResourceType
      title: ListTagsForResourceRequest
      type: object
    ModifyDocumentPermissionResponse:
      properties: {}
      type: object
    ModifyDocumentPermissionRequest:
      example:
        AccountIdsToRemove: ""
        AccountIdsToAdd: ""
        PermissionType: ""
        SharedDocumentVersion: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DocumentName'
          - description: The name of the document that you want to share.
          title: Name
        PermissionType:
          allOf:
          - $ref: '#/components/schemas/DocumentPermissionType'
          - description: The permission type for the document. The permission type
              can be <i>Share</i>.
          title: PermissionType
        AccountIdsToAdd:
          allOf:
          - $ref: '#/components/schemas/AccountIdList'
          - description: The Amazon Web Services users that should have access to
              the document. The account IDs can either be a group of account IDs or
              <i>All</i>.
          title: AccountIdsToAdd
        AccountIdsToRemove:
          allOf:
          - $ref: '#/components/schemas/AccountIdList'
          - description: "The Amazon Web Services users that should no longer have\
              \ access to the document. The Amazon Web Services user can either be\
              \ a group of account IDs or <i>All</i>. This action has a higher priority\
              \ than <i>AccountIdsToAdd</i>. If you specify an ID to add and the same\
              \ ID to remove, the system removes access to the document."
          title: AccountIdsToRemove
        SharedDocumentVersion:
          allOf:
          - $ref: '#/components/schemas/SharedDocumentVersion'
          - description: "(Optional) The version of the document to share. If it isn't\
              \ specified, the system choose the <code>Default</code> version to share."
          title: SharedDocumentVersion
      required:
      - Name
      - PermissionType
      title: ModifyDocumentPermissionRequest
      type: object
    DocumentPermissionLimit: {}
    PutComplianceItemsResult:
      properties: {}
      type: object
    PutComplianceItemsRequest:
      example:
        ItemContentHash: ""
        ResourceId: ""
        ComplianceType: ""
        ResourceType: ""
        ExecutionSummary:
          ExecutionTime: ""
          ExecutionType: ""
          ExecutionId: ""
        Items: ""
        UploadType: ""
      properties:
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ComplianceResourceId'
          - description: "Specify an ID for this resource. For a managed node, this\
              \ is the node ID."
          title: ResourceId
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ComplianceResourceType'
          - description: Specify the type of resource. <code>ManagedInstance</code>
              is currently the only supported resource type.
          title: ResourceType
        ComplianceType:
          allOf:
          - $ref: '#/components/schemas/ComplianceTypeName'
          - description: "Specify the compliance type. For example, specify Association\
              \ (for a State Manager association), Patch, or Custom:<code>string</code>."
          title: ComplianceType
        ExecutionSummary:
          $ref: '#/components/schemas/PutComplianceItemsRequest_ExecutionSummary'
        Items:
          allOf:
          - $ref: '#/components/schemas/ComplianceItemEntryList'
          - description: "Information about the compliance as defined by the resource\
              \ type. For example, for a patch compliance type, <code>Items</code>\
              \ includes information about the PatchSeverity, Classification, and\
              \ so on."
          title: Items
        ItemContentHash:
          allOf:
          - $ref: '#/components/schemas/ComplianceItemContentHash'
          - description: "MD5 or SHA-256 content hash. The content hash is used to\
              \ determine if existing information should be overwritten or ignored.\
              \ If the content hashes match, the request to put compliance information\
              \ is ignored."
          title: ItemContentHash
        UploadType:
          allOf:
          - $ref: '#/components/schemas/ComplianceUploadType'
          - description: "<p>The mode for uploading compliance items. You can specify\
              \ <code>COMPLETE</code> or <code>PARTIAL</code>. In <code>COMPLETE</code>\
              \ mode, the system overwrites all existing compliance information for\
              \ the resource. You must provide a full list of compliance items each\
              \ time you send the request.</p> <p>In <code>PARTIAL</code> mode, the\
              \ system overwrites compliance information for a specific association.\
              \ The association must be configured with <code>SyncCompliance</code>\
              \ set to <code>MANUAL</code>. By default, all requests use <code>COMPLETE</code>\
              \ mode.</p> <note> <p>This attribute is only valid for association compliance.</p>\
              \ </note>"
          title: UploadType
      required:
      - ComplianceType
      - ExecutionSummary
      - Items
      - ResourceId
      - ResourceType
      title: PutComplianceItemsRequest
      type: object
    InvalidItemContentException: {}
    TotalSizeLimitExceededException: {}
    ItemSizeLimitExceededException: {}
    ComplianceTypeCountLimitExceededException: {}
    PutInventoryResult:
      example:
        Message: ""
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/PutInventoryMessage'
          - description: Information about the request.
          title: Message
      title: PutInventoryResult
      type: object
    PutInventoryRequest:
      example:
        InstanceId: ""
        Items: ""
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          - description: An managed node ID where you want to add or update inventory
              items.
          title: InstanceId
        Items:
          allOf:
          - $ref: '#/components/schemas/InventoryItemList'
          - description: The inventory items that you want to add or update on managed
              nodes.
          title: Items
      required:
      - InstanceId
      - Items
      title: PutInventoryRequest
      type: object
    ItemContentMismatchException: {}
    CustomSchemaCountLimitExceededException: {}
    UnsupportedInventorySchemaVersionException: {}
    UnsupportedInventoryItemContextException: {}
    InvalidInventoryItemContextException: {}
    SubTypeCountLimitExceededException: {}
    PutParameterResult:
      example:
        Version: ""
        Tier: ""
      properties:
        Version:
          allOf:
          - $ref: '#/components/schemas/PSParameterVersion'
          - description: "The new version number of a parameter. If you edit a parameter\
              \ value, Parameter Store automatically creates a new version and assigns\
              \ this new version a unique ID. You can reference a parameter version\
              \ ID in API operations or in Systems Manager documents (SSM documents).\
              \ By default, if you don't specify a specific version, the system returns\
              \ the latest parameter value when a parameter is called."
          title: Version
        Tier:
          allOf:
          - $ref: '#/components/schemas/ParameterTier'
          - description: The tier assigned to the parameter.
          title: Tier
      title: PutParameterResult
      type: object
    PutParameterRequest:
      example:
        Type: ""
        Overwrite: ""
        Description: ""
        Policies: ""
        AllowedPattern: ""
        Tier: ""
        Value: ""
        DataType: ""
        KeyId: ""
        Tags: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/PSParameterName'
          - description: "<p>The fully qualified name of the parameter that you want\
              \ to add to the system. The fully qualified name includes the complete\
              \ hierarchy of the parameter path and name. For parameters in a hierarchy,\
              \ you must include a leading forward slash character (/) when you create\
              \ or reference a parameter. For example: <code>/Dev/DBServer/MySQL/db-string13</code>\
              \ </p> <p>Naming Constraints:</p> <ul> <li> <p>Parameter names are case\
              \ sensitive.</p> </li> <li> <p>A parameter name must be unique within\
              \ an Amazon Web Services Region</p> </li> <li> <p>A parameter name can't\
              \ be prefixed with \"<code>aws</code>\" or \"<code>ssm</code>\" (case-insensitive).</p>\
              \ </li> <li> <p>Parameter names can include only the following symbols\
              \ and letters: <code>a-zA-Z0-9_.-</code> </p> <p>In addition, the slash\
              \ character ( / ) is used to delineate hierarchies in parameter names.\
              \ For example: <code>/Dev/Production/East/Project-ABC/MyParameter</code>\
              \ </p> </li> <li> <p>A parameter name can't include spaces.</p> </li>\
              \ <li> <p>Parameter hierarchies are limited to a maximum depth of fifteen\
              \ levels.</p> </li> </ul> <p>For additional information about valid\
              \ values for parameter names, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-paramstore-su-create.html\"\
              >Creating Systems Manager parameters</a> in the <i>Amazon Web Services\
              \ Systems Manager User Guide</i>.</p> <note> <p>The maximum length constraint\
              \ of 2048 characters listed below includes 1037 characters reserved\
              \ for internal use by Systems Manager. The maximum length for a parameter\
              \ name that you create is 1011 characters. This includes the characters\
              \ in the ARN that precede the name you specify, such as <code>arn:aws:ssm:us-east-2:111122223333:parameter/</code>.</p>\
              \ </note>"
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/ParameterDescription'
          - description: <p>Information about the parameter that you want to add to
              the system. Optional but recommended.</p> <important> <p>Don't enter
              personally identifiable information in this field.</p> </important>
          title: Description
        Value:
          allOf:
          - $ref: '#/components/schemas/PSParameterValue'
          - description: "<p>The parameter value that you want to add to the system.\
              \ Standard parameters have a value limit of 4 KB. Advanced parameters\
              \ have a value limit of 8 KB.</p> <note> <p>Parameters can't be referenced\
              \ or nested in the values of other parameters. You can't include <code>{{}}</code>\
              \ or <code>{{ssm:<i>parameter-name</i>}}</code> in a parameter value.</p>\
              \ </note>"
          title: Value
        Type:
          allOf:
          - $ref: '#/components/schemas/ParameterType'
          - description: "<p>The type of parameter that you want to add to the system.</p>\
              \ <note> <p> <code>SecureString</code> isn't currently supported for\
              \ CloudFormation templates.</p> </note> <p>Items in a <code>StringList</code>\
              \ must be separated by a comma (,). You can't use other punctuation\
              \ or special character to escape items in the list. If you have a parameter\
              \ value that requires a comma, then use the <code>String</code> data\
              \ type.</p> <important> <p>Specifying a parameter type isn't required\
              \ when updating a parameter. You must specify a parameter type when\
              \ creating a parameter.</p> </important>"
          title: Type
        KeyId:
          allOf:
          - $ref: '#/components/schemas/ParameterKeyId'
          - description: "<p>The Key Management Service (KMS) ID that you want to\
              \ use to encrypt a parameter. Use a custom key for better security.\
              \ Required for parameters that use the <code>SecureString</code> data\
              \ type.</p> <p>If you don't specify a key ID, the system uses the default\
              \ key associated with your Amazon Web Services account which is not\
              \ as secure as using a custom key.</p> <ul> <li> <p>To use a custom\
              \ KMS key, choose the <code>SecureString</code> data type with the <code>Key\
              \ ID</code> parameter.</p> </li> </ul>"
          title: KeyId
        Overwrite:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Overwrite an existing parameter. The default value is <code>false</code>.
          title: Overwrite
        AllowedPattern:
          allOf:
          - $ref: '#/components/schemas/AllowedPattern'
          - description: "A regular expression used to validate the parameter value.\
              \ For example, for String types with values restricted to numbers, you\
              \ can specify the following: AllowedPattern=^\\d+$ "
          title: AllowedPattern
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "<p>Optional metadata that you assign to a resource. Tags\
              \ enable you to categorize a resource in different ways, such as by\
              \ purpose, owner, or environment. For example, you might want to tag\
              \ a Systems Manager parameter to identify the type of resource to which\
              \ it applies, the environment, or the type of configuration data referenced\
              \ by the parameter. In this case, you could specify the following key-value\
              \ pairs:</p> <ul> <li> <p> <code>Key=Resource,Value=S3bucket</code>\
              \ </p> </li> <li> <p> <code>Key=OS,Value=Windows</code> </p> </li> <li>\
              \ <p> <code>Key=ParameterType,Value=LicenseKey</code> </p> </li> </ul>\
              \ <note> <p>To add tags to an existing Systems Manager parameter, use\
              \ the <a>AddTagsToResource</a> operation.</p> </note>"
          title: Tags
        Tier:
          allOf:
          - $ref: '#/components/schemas/ParameterTier'
          - description: "<p>The parameter tier to assign to a parameter.</p> <p>Parameter\
              \ Store offers a standard tier and an advanced tier for parameters.\
              \ Standard parameters have a content size limit of 4 KB and can't be\
              \ configured to use parameter policies. You can create a maximum of\
              \ 10,000 standard parameters for each Region in an Amazon Web Services\
              \ account. Standard parameters are offered at no additional cost. </p>\
              \ <p>Advanced parameters have a content size limit of 8 KB and can be\
              \ configured to use parameter policies. You can create a maximum of\
              \ 100,000 advanced parameters for each Region in an Amazon Web Services\
              \ account. Advanced parameters incur a charge. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-advanced-parameters.html\"\
              >Standard and advanced parameter tiers</a> in the <i>Amazon Web Services\
              \ Systems Manager User Guide</i>.</p> <p>You can change a standard parameter\
              \ to an advanced parameter any time. But you can't revert an advanced\
              \ parameter to a standard parameter. Reverting an advanced parameter\
              \ to a standard parameter would result in data loss because the system\
              \ would truncate the size of the parameter from 8 KB to 4 KB. Reverting\
              \ would also remove any policies attached to the parameter. Lastly,\
              \ advanced parameters use a different form of encryption than standard\
              \ parameters. </p> <p>If you no longer need an advanced parameter, or\
              \ if you no longer want to incur charges for an advanced parameter,\
              \ you must delete it and recreate it as a new standard parameter. </p>\
              \ <p> <b>Using the Default Tier Configuration</b> </p> <p>In <code>PutParameter</code>\
              \ requests, you can specify the tier to create the parameter in. Whenever\
              \ you specify a tier in the request, Parameter Store creates or updates\
              \ the parameter according to that request. However, if you don't specify\
              \ a tier in a request, Parameter Store assigns the tier based on the\
              \ current Parameter Store default tier configuration.</p> <p>The default\
              \ tier when you begin using Parameter Store is the standard-parameter\
              \ tier. If you use the advanced-parameter tier, you can specify one\
              \ of the following as the default:</p> <ul> <li> <p> <b>Advanced</b>:\
              \ With this option, Parameter Store evaluates all requests as advanced\
              \ parameters. </p> </li> <li> <p> <b>Intelligent-Tiering</b>: With this\
              \ option, Parameter Store evaluates each request to determine if the\
              \ parameter is standard or advanced. </p> <p>If the request doesn't\
              \ include any options that require an advanced parameter, the parameter\
              \ is created in the standard-parameter tier. If one or more options\
              \ requiring an advanced parameter are included in the request, Parameter\
              \ Store create a parameter in the advanced-parameter tier.</p> <p>This\
              \ approach helps control your parameter-related costs by always creating\
              \ standard parameters unless an advanced parameter is necessary. </p>\
              \ </li> </ul> <p>Options that require an advanced parameter include\
              \ the following:</p> <ul> <li> <p>The content size of the parameter\
              \ is more than 4 KB.</p> </li> <li> <p>The parameter uses a parameter\
              \ policy.</p> </li> <li> <p>More than 10,000 parameters already exist\
              \ in your Amazon Web Services account in the current Amazon Web Services\
              \ Region.</p> </li> </ul> <p>For more information about configuring\
              \ the default tier option, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/ps-default-tier.html\"\
              >Specifying a default parameter tier</a> in the <i>Amazon Web Services\
              \ Systems Manager User Guide</i>.</p>"
          title: Tier
        Policies:
          allOf:
          - $ref: '#/components/schemas/ParameterPolicies'
          - description: "<p>One or more policies to apply to a parameter. This operation\
              \ takes a JSON array. Parameter Store, a capability of Amazon Web Services\
              \ Systems Manager supports the following policy types:</p> <p>Expiration:\
              \ This policy deletes the parameter after it expires. When you create\
              \ the policy, you specify the expiration date. You can update the expiration\
              \ date and time by updating the policy. Updating the <i>parameter</i>\
              \ doesn't affect the expiration date and time. When the expiration time\
              \ is reached, Parameter Store deletes the parameter.</p> <p>ExpirationNotification:\
              \ This policy initiates an event in Amazon CloudWatch Events that notifies\
              \ you about the expiration. By using this policy, you can receive notification\
              \ before or after the expiration time is reached, in units of days or\
              \ hours.</p> <p>NoChangeNotification: This policy initiates a CloudWatch\
              \ Events event if a parameter hasn't been modified for a specified period\
              \ of time. This policy type is useful when, for example, a secret needs\
              \ to be changed within a period of time, but it hasn't been changed.</p>\
              \ <p>All existing policies are preserved until you send new policies\
              \ or an empty policy. For more information about parameter policies,\
              \ see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-policies.html\"\
              >Assigning parameter policies</a>. </p>"
          title: Policies
        DataType:
          allOf:
          - $ref: '#/components/schemas/ParameterDataType'
          - description: "<p>The data type for a <code>String</code> parameter. Supported\
              \ data types include plain text and Amazon Machine Image (AMI) IDs.</p>\
              \ <p> <b>The following data type values are supported.</b> </p> <ul>\
              \ <li> <p> <code>text</code> </p> </li> <li> <p> <code>aws:ec2:image</code>\
              \ </p> </li> <li> <p> <code>aws:ssm:integration</code> </p> </li> </ul>\
              \ <p>When you create a <code>String</code> parameter and specify <code>aws:ec2:image</code>,\
              \ Amazon Web Services Systems Manager validates the parameter value\
              \ is in the required format, such as <code>ami-12345abcdeEXAMPLE</code>,\
              \ and that the specified AMI is available in your Amazon Web Services\
              \ account.</p> <note> <p>If the action is successful, the service sends\
              \ back an HTTP 200 response which indicates a successful <code>PutParameter</code>\
              \ call for all cases except for data type <code>aws:ec2:image</code>.\
              \ If you call <code>PutParameter</code> with <code>aws:ec2:image</code>\
              \ data type, a successful HTTP 200 response does not guarantee that\
              \ your parameter was successfully created or updated. The <code>aws:ec2:image</code>\
              \ value is validated asynchronously, and the <code>PutParameter</code>\
              \ call returns before the validation is complete. If you submit an invalid\
              \ AMI value, the PutParameter operation will return success, but the\
              \ asynchronous validation will fail and the parameter will not be created\
              \ or updated. To monitor whether your <code>aws:ec2:image</code> parameters\
              \ are created successfully, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-paramstore-cwe.html\"\
              >Setting up notifications or trigger actions based on Parameter Store\
              \ events</a>. For more information about AMI format validation , see\
              \ <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-ec2-aliases.html\"\
              >Native parameter support for Amazon Machine Image (AMI) IDs</a>. </p>\
              \ </note>"
          title: DataType
      required:
      - Name
      - Value
      title: PutParameterRequest
      type: object
    ParameterLimitExceeded: {}
    ParameterAlreadyExists: {}
    HierarchyLevelLimitExceededException: {}
    HierarchyTypeMismatchException: {}
    InvalidAllowedPatternException: {}
    ParameterMaxVersionLimitExceeded: {}
    ParameterPatternMismatchException: {}
    UnsupportedParameterType: {}
    PoliciesLimitExceededException: {}
    InvalidPolicyTypeException: {}
    InvalidPolicyAttributeException: {}
    IncompatiblePolicyException: {}
    PutResourcePolicyResponse:
      example:
        PolicyHash: ""
        PolicyId: ""
      properties:
        PolicyId:
          allOf:
          - $ref: '#/components/schemas/PolicyId'
          - description: "The policy ID. To update a policy, you must specify <code>PolicyId</code>\
              \ and <code>PolicyHash</code>."
          title: PolicyId
        PolicyHash:
          allOf:
          - $ref: '#/components/schemas/PolicyHash'
          - description: ID of the current policy version.
          title: PolicyHash
      title: PutResourcePolicyResponse
      type: object
    PutResourcePolicyRequest:
      example:
        Policy: ""
        ResourceArn: ""
        PolicyHash: ""
        PolicyId: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArnString'
          - description: Amazon Resource Name (ARN) of the resource to which you want
              to attach a policy.
          title: ResourceArn
        Policy:
          allOf:
          - $ref: '#/components/schemas/Policy'
          - description: A policy you want to associate with a resource.
          title: Policy
        PolicyId:
          allOf:
          - $ref: '#/components/schemas/PolicyId'
          - description: The policy ID.
          title: PolicyId
        PolicyHash:
          allOf:
          - $ref: '#/components/schemas/PolicyHash'
          - description: ID of the current policy version. The hash helps to prevent
              a situation where multiple users attempt to overwrite a policy. You
              must provide this hash when updating or deleting a policy.
          title: PolicyHash
      required:
      - Policy
      - ResourceArn
      title: PutResourcePolicyRequest
      type: object
    ResourcePolicyLimitExceededException: {}
    RegisterDefaultPatchBaselineResult:
      example:
        BaselineId: ""
      properties:
        BaselineId:
          allOf:
          - $ref: '#/components/schemas/BaselineId'
          - description: The ID of the default patch baseline.
          title: BaselineId
      title: RegisterDefaultPatchBaselineResult
      type: object
    RegisterDefaultPatchBaselineRequest:
      example:
        BaselineId: ""
      properties:
        BaselineId:
          allOf:
          - $ref: '#/components/schemas/BaselineId'
          - description: The ID of the patch baseline that should be the default patch
              baseline.
          title: BaselineId
      required:
      - BaselineId
      title: RegisterDefaultPatchBaselineRequest
      type: object
    RegisterPatchBaselineForPatchGroupResult:
      example:
        BaselineId: ""
        PatchGroup: ""
      properties:
        BaselineId:
          allOf:
          - $ref: '#/components/schemas/BaselineId'
          - description: The ID of the patch baseline the patch group was registered
              with.
          title: BaselineId
        PatchGroup:
          allOf:
          - $ref: '#/components/schemas/PatchGroup'
          - description: The name of the patch group registered with the patch baseline.
          title: PatchGroup
      title: RegisterPatchBaselineForPatchGroupResult
      type: object
    RegisterPatchBaselineForPatchGroupRequest:
      example:
        BaselineId: ""
        PatchGroup: ""
      properties:
        BaselineId:
          allOf:
          - $ref: '#/components/schemas/BaselineId'
          - description: The ID of the patch baseline to register with the patch group.
          title: BaselineId
        PatchGroup:
          allOf:
          - $ref: '#/components/schemas/PatchGroup'
          - description: The name of the patch group to be registered with the patch
              baseline.
          title: PatchGroup
      required:
      - BaselineId
      - PatchGroup
      title: RegisterPatchBaselineForPatchGroupRequest
      type: object
    AlreadyExistsException: {}
    RegisterTargetWithMaintenanceWindowResult:
      example:
        WindowTargetId: ""
      properties:
        WindowTargetId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTargetId'
          - description: The ID of the target definition in this maintenance window.
          title: WindowTargetId
      title: RegisterTargetWithMaintenanceWindowResult
      type: object
    RegisterTargetWithMaintenanceWindowRequest:
      example:
        OwnerInformation: ""
        Description: ""
        WindowId: ""
        ResourceType: ""
        Targets: ""
        ClientToken: ""
        Name: ""
      properties:
        WindowId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowId'
          - description: The ID of the maintenance window the target should be registered
              with.
          title: WindowId
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowResourceType'
          - description: The type of target being registered with the maintenance
              window.
          title: ResourceType
        Targets:
          allOf:
          - $ref: '#/components/schemas/Targets'
          - description: "<p>The targets to register with the maintenance window.\
              \ In other words, the managed nodes to run commands on when the maintenance\
              \ window runs.</p> <note> <p>If a single maintenance window task is\
              \ registered with multiple targets, its task invocations occur sequentially\
              \ and not in parallel. If your task must run on multiple targets at\
              \ the same time, register a task for each target individually and assign\
              \ each task the same priority level.</p> </note> <p>You can specify\
              \ targets using managed node IDs, resource group names, or tags that\
              \ have been applied to managed nodes.</p> <p> <b>Example 1</b>: Specify\
              \ managed node IDs</p> <p> <code>Key=InstanceIds,Values=&lt;instance-id-1&gt;,&lt;instance-id-2&gt;,&lt;instance-id-3&gt;</code>\
              \ </p> <p> <b>Example 2</b>: Use tag key-pairs applied to managed nodes</p>\
              \ <p> <code>Key=tag:&lt;my-tag-key&gt;,Values=&lt;my-tag-value-1&gt;,&lt;my-tag-value-2&gt;</code>\
              \ </p> <p> <b>Example 3</b>: Use tag-keys applied to managed nodes</p>\
              \ <p> <code>Key=tag-key,Values=&lt;my-tag-key-1&gt;,&lt;my-tag-key-2&gt;</code>\
              \ </p> <p> <b>Example 4</b>: Use resource group names</p> <p> <code>Key=resource-groups:Name,Values=&lt;resource-group-name&gt;</code>\
              \ </p> <p> <b>Example 5</b>: Use filters for resource group types</p>\
              \ <p> <code>Key=resource-groups:ResourceTypeFilters,Values=&lt;resource-type-1&gt;,&lt;resource-type-2&gt;</code>\
              \ </p> <note> <p>For <code>Key=resource-groups:ResourceTypeFilters</code>,\
              \ specify resource types in the following format</p> <p> <code>Key=resource-groups:ResourceTypeFilters,Values=AWS::EC2::INSTANCE,AWS::EC2::VPC</code>\
              \ </p> </note> <p>For more information about these examples formats,\
              \ including the best use case for each one, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/mw-cli-tutorial-targets-examples.html\"\
              >Examples: Register targets with a maintenance window</a> in the <i>Amazon\
              \ Web Services Systems Manager User Guide</i>.</p>"
          title: Targets
        OwnerInformation:
          allOf:
          - $ref: '#/components/schemas/OwnerInformation'
          - description: User-provided value that will be included in any Amazon CloudWatch
              Events events raised while running tasks for these targets in this maintenance
              window.
          title: OwnerInformation
        Name:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowName'
          - description: An optional name for the target.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowDescription'
          - description: An optional description for the target.
          title: Description
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: User-provided idempotency token.
          title: ClientToken
      required:
      - ResourceType
      - Targets
      - WindowId
      title: RegisterTargetWithMaintenanceWindowRequest
      type: object
    RegisterTaskWithMaintenanceWindowResult:
      example:
        WindowTaskId: ""
      properties:
        WindowTaskId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskId'
          - description: The ID of the task in the maintenance window.
          title: WindowTaskId
      title: RegisterTaskWithMaintenanceWindowResult
      type: object
    RegisterTaskWithMaintenanceWindowRequest:
      example:
        MaxErrors: ""
        Description: ""
        ServiceRoleArn: ""
        Priority: ""
        MaxConcurrency: ""
        Targets: ""
        AlarmConfiguration:
          IgnorePollAlarmFailure: ""
          Alarms: ""
        TaskArn: ""
        Name: ""
        TaskInvocationParameters:
          Automation:
            Parameters: ""
            DocumentVersion: ""
          StepFunctions:
            Input: ""
            Name: ""
          RunCommand:
            TimeoutSeconds: ""
            Comment: ""
            OutputS3KeyPrefix: ""
            Parameters: ""
            CloudWatchOutputConfig:
              CloudWatchOutputEnabled: ""
              CloudWatchLogGroupName: ""
            DocumentHashType: ""
            ServiceRoleArn: ""
            NotificationConfig:
              NotificationArn: ""
              NotificationType: ""
              NotificationEvents: ""
            DocumentVersion: ""
            OutputS3BucketName: ""
            DocumentHash: ""
          Lambda:
            ClientContext: ""
            Qualifier: ""
            Payload: ""
        WindowId: ""
        TaskParameters: ""
        TaskType: ""
        CutoffBehavior: ""
        ClientToken: ""
        LoggingInfo:
          S3KeyPrefix: ""
          S3Region: ""
          S3BucketName: ""
      properties:
        WindowId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowId'
          - description: The ID of the maintenance window the task should be added
              to.
          title: WindowId
        Targets:
          allOf:
          - $ref: '#/components/schemas/Targets'
          - description: "<p>The targets (either managed nodes or maintenance window\
              \ targets).</p> <note> <p>One or more targets must be specified for\
              \ maintenance window Run Command-type tasks. Depending on the task,\
              \ targets are optional for other maintenance window task types (Automation,\
              \ Lambda, and Step Functions). For more information about running tasks\
              \ that don't specify targets, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/maintenance-windows-targetless-tasks.html\"\
              >Registering maintenance window tasks without targets</a> in the <i>Amazon\
              \ Web Services Systems Manager User Guide</i>.</p> </note> <p>Specify\
              \ managed nodes using the following format: </p> <p> <code>Key=InstanceIds,Values=&lt;instance-id-1&gt;,&lt;instance-id-2&gt;</code>\
              \ </p> <p>Specify maintenance window targets using the following format:</p>\
              \ <p> <code>Key=WindowTargetIds,Values=&lt;window-target-id-1&gt;,&lt;window-target-id-2&gt;</code>\
              \ </p>"
          title: Targets
        TaskArn:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskArn'
          - description: The ARN of the task to run.
          title: TaskArn
        ServiceRoleArn:
          allOf:
          - $ref: '#/components/schemas/ServiceRole'
          - description: "<p>The Amazon Resource Name (ARN) of the IAM service role\
              \ for Amazon Web Services Systems Manager to assume when running a maintenance\
              \ window task. If you do not specify a service role ARN, Systems Manager\
              \ uses your account's service-linked role. If no service-linked role\
              \ for Systems Manager exists in your account, it is created when you\
              \ run <code>RegisterTaskWithMaintenanceWindow</code>.</p> <p>For more\
              \ information, see the following topics in the in the <i>Amazon Web\
              \ Services Systems Manager User Guide</i>:</p> <ul> <li> <p> <a href=\"\
              https://docs.aws.amazon.com/systems-manager/latest/userguide/using-service-linked-roles.html#slr-permissions\"\
              >Using service-linked roles for Systems Manager</a> </p> </li> <li>\
              \ <p> <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-maintenance-permissions.html#maintenance-window-tasks-service-role\"\
              >Should I use a service-linked role or a custom service role to run\
              \ maintenance window tasks? </a> </p> </li> </ul>"
          title: ServiceRoleArn
        TaskType:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskType'
          - description: The type of task being registered.
          title: TaskType
        TaskParameters:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskParameters'
          - description: "<p>The parameters that should be passed to the task when\
              \ it is run.</p> <note> <p> <code>TaskParameters</code> has been deprecated.\
              \ To specify parameters to pass to a task when it runs, instead use\
              \ the <code>Parameters</code> option in the <code>TaskInvocationParameters</code>\
              \ structure. For information about how Systems Manager handles these\
              \ options for the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p>\
              \ </note>"
          title: TaskParameters
        TaskInvocationParameters:
          $ref: '#/components/schemas/RegisterTaskWithMaintenanceWindowRequest_TaskInvocationParameters'
        Priority:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskPriority'
          - description: "The priority of the task in the maintenance window, the\
              \ lower the number the higher the priority. Tasks in a maintenance window\
              \ are scheduled in priority order with tasks that have the same priority\
              \ scheduled in parallel."
          title: Priority
        MaxConcurrency:
          allOf:
          - $ref: '#/components/schemas/MaxConcurrency'
          - description: "<p>The maximum number of targets this task can be run for,\
              \ in parallel.</p> <note> <p>Although this element is listed as \"Required:\
              \ No\", a value can be omitted only when you are registering or updating\
              \ a <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/maintenance-windows-targetless-tasks.html\"\
              >targetless task</a> You must provide a value in all other cases.</p>\
              \ <p>For maintenance window tasks without a target specified, you can't\
              \ supply a value for this option. Instead, the system inserts a placeholder\
              \ value of <code>1</code>. This value doesn't affect the running of\
              \ your task.</p> </note>"
          title: MaxConcurrency
        MaxErrors:
          allOf:
          - $ref: '#/components/schemas/MaxErrors'
          - description: "<p>The maximum number of errors allowed before this task\
              \ stops being scheduled.</p> <note> <p>Although this element is listed\
              \ as \"Required: No\", a value can be omitted only when you are registering\
              \ or updating a <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/maintenance-windows-targetless-tasks.html\"\
              >targetless task</a> You must provide a value in all other cases.</p>\
              \ <p>For maintenance window tasks without a target specified, you can't\
              \ supply a value for this option. Instead, the system inserts a placeholder\
              \ value of <code>1</code>. This value doesn't affect the running of\
              \ your task.</p> </note>"
          title: MaxErrors
        LoggingInfo:
          $ref: '#/components/schemas/RegisterTaskWithMaintenanceWindowRequest_LoggingInfo'
        Name:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowName'
          - description: An optional name for the task.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowDescription'
          - description: An optional description for the task.
          title: Description
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: User-provided idempotency token.
          title: ClientToken
        CutoffBehavior:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskCutoffBehavior'
          - description: "<p>Indicates whether tasks should continue to run after\
              \ the cutoff time specified in the maintenance windows is reached. </p>\
              \ <ul> <li> <p> <code>CONTINUE_TASK</code>: When the cutoff time is\
              \ reached, any tasks that are running continue. The default value.</p>\
              \ </li> <li> <p> <code>CANCEL_TASK</code>:</p> <ul> <li> <p>For Automation,\
              \ Lambda, Step Functions tasks: When the cutoff time is reached, any\
              \ task invocations that are already running continue, but no new task\
              \ invocations are started.</p> </li> <li> <p>For Run Command tasks:\
              \ When the cutoff time is reached, the system sends a <a>CancelCommand</a>\
              \ operation that attempts to cancel the command associated with the\
              \ task. However, there is no guarantee that the command will be terminated\
              \ and the underlying process stopped.</p> </li> </ul> <p>The status\
              \ for tasks that are not completed is <code>TIMED_OUT</code>.</p> </li>\
              \ </ul>"
          title: CutoffBehavior
        AlarmConfiguration:
          $ref: '#/components/schemas/RegisterTaskWithMaintenanceWindowRequest_AlarmConfiguration'
      required:
      - TaskArn
      - TaskType
      - WindowId
      title: RegisterTaskWithMaintenanceWindowRequest
      type: object
    FeatureNotAvailableException: {}
    RemoveTagsFromResourceResult:
      properties: {}
      type: object
    RemoveTagsFromResourceRequest:
      example:
        ResourceId: ""
        ResourceType: ""
        TagKeys: ""
      properties:
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceTypeForTagging'
          - description: "<p>The type of resource from which you want to remove a\
              \ tag.</p> <note> <p>The <code>ManagedInstance</code> type for this\
              \ API operation is only for on-premises managed nodes. Specify the name\
              \ of the managed node in the following format: <code>mi-<i>ID_number</i>\
              \ </code>. For example, <code>mi-1a2b3c4d5e6f</code>.</p> </note>"
          title: ResourceType
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: "<p>The ID of the resource from which you want to remove\
              \ tags. For example:</p> <p>ManagedInstance: mi-012345abcde</p> <p>MaintenanceWindow:\
              \ mw-012345abcde</p> <p> <code>Automation</code>: <code>example-c160-4567-8519-012345abcde</code>\
              \ </p> <p>PatchBaseline: pb-012345abcde</p> <p>OpsMetadata object: <code>ResourceID</code>\
              \ for tagging is created from the Amazon Resource Name (ARN) for the\
              \ object. Specifically, <code>ResourceID</code> is created from the\
              \ strings that come after the word <code>opsmetadata</code> in the ARN.\
              \ For example, an OpsMetadata object with an ARN of <code>arn:aws:ssm:us-east-2:1234567890:opsmetadata/aws/ssm/MyGroup/appmanager</code>\
              \ has a <code>ResourceID</code> of either <code>aws/ssm/MyGroup/appmanager</code>\
              \ or <code>/aws/ssm/MyGroup/appmanager</code>.</p> <p>For the Document\
              \ and Parameter values, use the name of the resource.</p> <note> <p>The\
              \ <code>ManagedInstance</code> type for this API operation is only for\
              \ on-premises managed nodes. Specify the name of the managed node in\
              \ the following format: mi-ID_number. For example, mi-1a2b3c4d5e6f.</p>\
              \ </note>"
          title: ResourceId
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/KeyList'
          - description: Tag keys that you want to remove from the specified resource.
          title: TagKeys
      required:
      - ResourceId
      - ResourceType
      - TagKeys
      title: RemoveTagsFromResourceRequest
      type: object
    ResetServiceSettingResult:
      description: The result body of the ResetServiceSetting API operation.
      example:
        ServiceSetting:
          Status: ""
          LastModifiedDate: ""
          SettingValue: ""
          SettingId: ""
          ARN: ""
          LastModifiedUser: ""
      properties:
        ServiceSetting:
          $ref: '#/components/schemas/ResetServiceSettingResult_ServiceSetting'
      title: ResetServiceSettingResult
      type: object
    ResetServiceSettingRequest:
      description: The request body of the ResetServiceSetting API operation.
      example:
        SettingId: ""
      properties:
        SettingId:
          allOf:
          - $ref: '#/components/schemas/ServiceSettingId'
          - description: <p>The Amazon Resource Name (ARN) of the service setting
              to reset. The setting ID can be one of the following.</p> <ul> <li>
              <p> <code>/ssm/managed-instance/default-ec2-instance-management-role</code>
              </p> </li> <li> <p> <code>/ssm/automation/customer-script-log-destination</code>
              </p> </li> <li> <p> <code>/ssm/automation/customer-script-log-group-name</code>
              </p> </li> <li> <p> <code>/ssm/documents/console/public-sharing-permission</code>
              </p> </li> <li> <p> <code>/ssm/managed-instance/activation-tier</code>
              </p> </li> <li> <p> <code>/ssm/opsinsights/opscenter</code> </p> </li>
              <li> <p> <code>/ssm/parameter-store/default-parameter-tier</code> </p>
              </li> <li> <p> <code>/ssm/parameter-store/high-throughput-enabled</code>
              </p> </li> </ul>
          title: SettingId
      required:
      - SettingId
      title: ResetServiceSettingRequest
      type: object
    ResumeSessionResponse:
      example:
        SessionId: ""
        StreamUrl: ""
        TokenValue: ""
      properties:
        SessionId:
          allOf:
          - $ref: '#/components/schemas/SessionId'
          - description: The ID of the session.
          title: SessionId
        TokenValue:
          allOf:
          - $ref: '#/components/schemas/TokenValue'
          - description: An encrypted token value containing session and caller information.
              Used to authenticate the connection to the managed node.
          title: TokenValue
        StreamUrl:
          allOf:
          - $ref: '#/components/schemas/StreamUrl'
          - description: "<p>A URL back to SSM Agent on the managed node that the\
              \ Session Manager client uses to send commands and receive output from\
              \ the managed node. Format: <code>wss://ssmmessages.<b>region</b>.amazonaws.com/v1/data-channel/<b>session-id</b>?stream=(input|output)</code>.</p>\
              \ <p> <b>region</b> represents the Region identifier for an Amazon Web\
              \ Services Region supported by Amazon Web Services Systems Manager,\
              \ such as <code>us-east-2</code> for the US East (Ohio) Region. For\
              \ a list of supported <b>region</b> values, see the <b>Region</b> column\
              \ in <a href=\"https://docs.aws.amazon.com/general/latest/gr/ssm.html#ssm_region\"\
              >Systems Manager service endpoints</a> in the <i>Amazon Web Services\
              \ General Reference</i>.</p> <p> <b>session-id</b> represents the ID\
              \ of a Session Manager session, such as <code>1a2b3c4dEXAMPLE</code>.</p>"
          title: StreamUrl
      title: ResumeSessionResponse
      type: object
    ResumeSessionRequest:
      example:
        SessionId: ""
      properties:
        SessionId:
          allOf:
          - $ref: '#/components/schemas/SessionId'
          - description: The ID of the disconnected session to resume.
          title: SessionId
      required:
      - SessionId
      title: ResumeSessionRequest
      type: object
    SendAutomationSignalResult:
      properties: {}
      type: object
    SendAutomationSignalRequest:
      example:
        SignalType: ""
        Payload: ""
        AutomationExecutionId: ""
      properties:
        AutomationExecutionId:
          allOf:
          - $ref: '#/components/schemas/AutomationExecutionId'
          - description: The unique identifier for an existing Automation execution
              that you want to send the signal to.
          title: AutomationExecutionId
        SignalType:
          allOf:
          - $ref: '#/components/schemas/SignalType'
          - description: 'The type of signal to send to an Automation execution. '
          title: SignalType
        Payload:
          allOf:
          - $ref: '#/components/schemas/AutomationParameterMap'
          - description: "<p>The data sent with the signal. The data schema depends\
              \ on the type of signal used in the request.</p> <p>For <code>Approve</code>\
              \ and <code>Reject</code> signal types, the payload is an optional comment\
              \ that you can send with the signal type. For example:</p> <p> <code>Comment=\"\
              Looks good\"</code> </p> <p>For <code>StartStep</code> and <code>Resume</code>\
              \ signal types, you must send the name of the Automation step to start\
              \ or resume as the payload. For example:</p> <p> <code>StepName=\"step1\"\
              </code> </p> <p>For the <code>StopStep</code> signal type, you must\
              \ send the step execution ID as the payload. For example:</p> <p> <code>StepExecutionId=\"\
              97fff367-fc5a-4299-aed8-0123456789ab\"</code> </p>"
          title: Payload
      required:
      - AutomationExecutionId
      - SignalType
      title: SendAutomationSignalRequest
      type: object
    AutomationStepNotFoundException: {}
    InvalidAutomationSignalException: {}
    SendCommandResult:
      example:
        Command:
          MaxErrors: ""
          TargetCount: ""
          OutputS3Region: ""
          CompletedCount: ""
          ErrorCount: ""
          ExpiresAfter: ""
          TimeoutSeconds: ""
          OutputS3KeyPrefix: ""
          ServiceRole: ""
          DeliveryTimedOutCount: ""
          CloudWatchOutputConfig:
            CloudWatchOutputEnabled: ""
            CloudWatchLogGroupName: ""
          NotificationConfig:
            NotificationArn: ""
            NotificationType: ""
            NotificationEvents: ""
          TriggeredAlarms: ""
          DocumentVersion: ""
          InstanceIds: ""
          OutputS3BucketName: ""
          DocumentName: ""
          Status: ""
          Comment: ""
          Parameters: ""
          MaxConcurrency: ""
          Targets: ""
          AlarmConfiguration:
            IgnorePollAlarmFailure: ""
            Alarms: ""
          StatusDetails: ""
          CommandId: ""
          RequestedDateTime: ""
      properties:
        Command:
          $ref: '#/components/schemas/SendCommandResult_Command'
      title: SendCommandResult
      type: object
    SendCommandRequest:
      example:
        Comment: ""
        MaxErrors: ""
        Parameters: ""
        DocumentHashType: ""
        ServiceRoleArn: ""
        MaxConcurrency: ""
        Targets: ""
        OutputS3Region: ""
        AlarmConfiguration:
          IgnorePollAlarmFailure: ""
          Alarms: ""
        TimeoutSeconds: ""
        OutputS3KeyPrefix: ""
        CloudWatchOutputConfig:
          CloudWatchOutputEnabled: ""
          CloudWatchLogGroupName: ""
        NotificationConfig:
          NotificationArn: ""
          NotificationType: ""
          NotificationEvents: ""
        DocumentVersion: ""
        InstanceIds: ""
        OutputS3BucketName: ""
        DocumentName: ""
        DocumentHash: ""
      properties:
        InstanceIds:
          allOf:
          - $ref: '#/components/schemas/InstanceIdList'
          - description: "<p>The IDs of the managed nodes where the command should\
              \ run. Specifying managed node IDs is most useful when you are targeting\
              \ a limited number of managed nodes, though you can specify up to 50\
              \ IDs.</p> <p>To target a larger number of managed nodes, or if you\
              \ prefer not to list individual node IDs, we recommend using the <code>Targets</code>\
              \ option instead. Using <code>Targets</code>, which accepts tag key-value\
              \ pairs to identify the managed nodes to send commands to, you can a\
              \ send command to tens, hundreds, or thousands of nodes at once.</p>\
              \ <p>For more information about how to use targets, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\"\
              >Using targets and rate controls to send commands to a fleet</a> in\
              \ the <i>Amazon Web Services Systems Manager User Guide</i>.</p>"
          title: InstanceIds
        Targets:
          allOf:
          - $ref: '#/components/schemas/Targets'
          - description: "<p>An array of search criteria that targets managed nodes\
              \ using a <code>Key,Value</code> combination that you specify. Specifying\
              \ targets is most useful when you want to send a command to a large\
              \ number of managed nodes at once. Using <code>Targets</code>, which\
              \ accepts tag key-value pairs to identify managed nodes, you can send\
              \ a command to tens, hundreds, or thousands of nodes at once.</p> <p>To\
              \ send a command to a smaller number of managed nodes, you can use the\
              \ <code>InstanceIds</code> option instead.</p> <p>For more information\
              \ about how to use targets, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html\"\
              >Sending commands to a fleet</a> in the <i>Amazon Web Services Systems\
              \ Manager User Guide</i>.</p>"
          title: Targets
        DocumentName:
          allOf:
          - $ref: '#/components/schemas/DocumentARN'
          - description: "<p>The name of the Amazon Web Services Systems Manager document\
              \ (SSM document) to run. This can be a public document or a custom document.\
              \ To run a shared document belonging to another account, specify the\
              \ document Amazon Resource Name (ARN). For more information about how\
              \ to use shared documents, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/ssm-using-shared.html\"\
              >Using shared SSM documents</a> in the <i>Amazon Web Services Systems\
              \ Manager User Guide</i>.</p> <note> <p>If you specify a document name\
              \ or ARN that hasn't been shared with your account, you receive an <code>InvalidDocument</code>\
              \ error. </p> </note>"
          title: DocumentName
        DocumentVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: "<p>The SSM document version to use in the request. You can\
              \ specify $DEFAULT, $LATEST, or a specific version number. If you run\
              \ commands by using the Command Line Interface (Amazon Web Services\
              \ CLI), then you must escape the first two options by using a backslash.\
              \ If you specify a version number, then you don't need to use the backslash.\
              \ For example:</p> <p>--document-version \"\\$DEFAULT\"</p> <p>--document-version\
              \ \"\\$LATEST\"</p> <p>--document-version \"3\"</p>"
          title: DocumentVersion
        DocumentHash:
          allOf:
          - $ref: '#/components/schemas/DocumentHash'
          - description: <p>The Sha256 or Sha1 hash created by the system when the
              document was created. </p> <note> <p>Sha1 hashes have been deprecated.</p>
              </note>
          title: DocumentHash
        DocumentHashType:
          allOf:
          - $ref: '#/components/schemas/DocumentHashType'
          - description: <p>Sha256 or Sha1.</p> <note> <p>Sha1 hashes have been deprecated.</p>
              </note>
          title: DocumentHashType
        TimeoutSeconds:
          allOf:
          - $ref: '#/components/schemas/TimeoutSeconds'
          - description: "If this time is reached and the command hasn't already started\
              \ running, it won't run."
          title: TimeoutSeconds
        Comment:
          allOf:
          - $ref: '#/components/schemas/Comment'
          - description: "User-specified information about the command, such as a\
              \ brief description of what the command should do."
          title: Comment
        Parameters:
          allOf:
          - $ref: '#/components/schemas/Parameters'
          - description: The required and optional parameters specified in the document
              being run.
          title: Parameters
        OutputS3Region:
          allOf:
          - $ref: '#/components/schemas/S3Region'
          - description: "(Deprecated) You can no longer specify this parameter. The\
              \ system ignores it. Instead, Systems Manager automatically determines\
              \ the Amazon Web Services Region of the S3 bucket."
          title: OutputS3Region
        OutputS3BucketName:
          allOf:
          - $ref: '#/components/schemas/S3BucketName'
          - description: The name of the S3 bucket where command execution responses
              should be stored.
          title: OutputS3BucketName
        OutputS3KeyPrefix:
          allOf:
          - $ref: '#/components/schemas/S3KeyPrefix'
          - description: The directory structure within the S3 bucket where the responses
              should be stored.
          title: OutputS3KeyPrefix
        MaxConcurrency:
          allOf:
          - $ref: '#/components/schemas/MaxConcurrency'
          - description: "(Optional) The maximum number of managed nodes that are\
              \ allowed to run the command at the same time. You can specify a number\
              \ such as 10 or a percentage such as 10%. The default value is <code>50</code>.\
              \ For more information about how to use <code>MaxConcurrency</code>,\
              \ see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-velocity\"\
              >Using concurrency controls</a> in the <i>Amazon Web Services Systems\
              \ Manager User Guide</i>."
          title: MaxConcurrency
        MaxErrors:
          allOf:
          - $ref: '#/components/schemas/MaxErrors'
          - description: "The maximum number of errors allowed without the command\
              \ failing. When the command fails one more time beyond the value of\
              \ <code>MaxErrors</code>, the systems stops sending the command to additional\
              \ targets. You can specify a number like 10 or a percentage like 10%.\
              \ The default value is <code>0</code>. For more information about how\
              \ to use <code>MaxErrors</code>, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-maxerrors\"\
              >Using error controls</a> in the <i>Amazon Web Services Systems Manager\
              \ User Guide</i>."
          title: MaxErrors
        ServiceRoleArn:
          allOf:
          - $ref: '#/components/schemas/ServiceRole'
          - description: "<p>The ARN of the Identity and Access Management (IAM) service\
              \ role to use to publish Amazon Simple Notification Service (Amazon\
              \ SNS) notifications for Run Command commands.</p> <p>This role must\
              \ provide the <code>sns:Publish</code> permission for your notification\
              \ topic. For information about creating and using this service role,\
              \ see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/monitoring-sns-notifications.html\"\
              >Monitoring Systems Manager status changes using Amazon SNS notifications</a>\
              \ in the <i>Amazon Web Services Systems Manager User Guide</i>.</p>"
          title: ServiceRoleArn
        NotificationConfig:
          $ref: '#/components/schemas/SendCommandRequest_NotificationConfig'
        CloudWatchOutputConfig:
          $ref: '#/components/schemas/SendCommandRequest_CloudWatchOutputConfig'
        AlarmConfiguration:
          $ref: '#/components/schemas/SendCommandRequest_AlarmConfiguration'
      required:
      - DocumentName
      title: SendCommandRequest
      type: object
    InvalidOutputFolder: {}
    InvalidRole: {}
    InvalidNotificationConfig: {}
    StartAssociationsOnceResult:
      properties: {}
      type: object
    StartAssociationsOnceRequest:
      example:
        AssociationIds: ""
      properties:
        AssociationIds:
          allOf:
          - $ref: '#/components/schemas/AssociationIdList'
          - description: The association IDs that you want to run immediately and
              only one time.
          title: AssociationIds
      required:
      - AssociationIds
      title: StartAssociationsOnceRequest
      type: object
    InvalidAssociation: {}
    StartAutomationExecutionResult:
      example:
        AutomationExecutionId: ""
      properties:
        AutomationExecutionId:
          allOf:
          - $ref: '#/components/schemas/AutomationExecutionId'
          - description: The unique ID of a newly scheduled automation execution.
          title: AutomationExecutionId
      title: StartAutomationExecutionResult
      type: object
    StartAutomationExecutionRequest:
      example:
        MaxErrors: ""
        Parameters: ""
        Mode: ""
        TargetMaps: ""
        MaxConcurrency: ""
        Targets: ""
        AlarmConfiguration:
          IgnorePollAlarmFailure: ""
          Alarms: ""
        TargetParameterName: ""
        DocumentVersion: ""
        ClientToken: ""
        Tags: ""
        DocumentName: ""
        TargetLocations: ""
      properties:
        DocumentName:
          allOf:
          - $ref: '#/components/schemas/DocumentARN'
          - description: "The name of the SSM document to run. This can be a public\
              \ document or a custom document. To run a shared document belonging\
              \ to another account, specify the document ARN. For more information\
              \ about how to use shared documents, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/ssm-using-shared.html\"\
              >Using shared SSM documents</a> in the <i>Amazon Web Services Systems\
              \ Manager User Guide</i>."
          title: DocumentName
        DocumentVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: The version of the Automation runbook to use for this execution.
          title: DocumentVersion
        Parameters:
          allOf:
          - $ref: '#/components/schemas/AutomationParameterMap'
          - description: "A key-value map of execution parameters, which match the\
              \ declared parameters in the Automation runbook."
          title: Parameters
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          - description: "User-provided idempotency token. The token must be unique,\
              \ is case insensitive, enforces the UUID format, and can't be reused."
          title: ClientToken
        Mode:
          allOf:
          - $ref: '#/components/schemas/ExecutionMode'
          - description: "The execution mode of the automation. Valid modes include\
              \ the following: Auto and Interactive. The default mode is Auto."
          title: Mode
        TargetParameterName:
          allOf:
          - $ref: '#/components/schemas/AutomationParameterKey'
          - description: The name of the parameter used as the target resource for
              the rate-controlled execution. Required if you specify targets.
          title: TargetParameterName
        Targets:
          allOf:
          - $ref: '#/components/schemas/Targets'
          - description: A key-value mapping to target resources. Required if you
              specify TargetParameterName.
          title: Targets
        TargetMaps:
          allOf:
          - $ref: '#/components/schemas/TargetMaps'
          - description: A key-value mapping of document parameters to target resources.
              Both Targets and TargetMaps can't be specified together.
          title: TargetMaps
        MaxConcurrency:
          allOf:
          - $ref: '#/components/schemas/MaxConcurrency'
          - description: "The maximum number of targets allowed to run this task in\
              \ parallel. You can specify a number, such as 10, or a percentage, such\
              \ as 10%. The default value is <code>10</code>."
          title: MaxConcurrency
        MaxErrors:
          allOf:
          - $ref: '#/components/schemas/MaxErrors'
          - description: "<p>The number of errors that are allowed before the system\
              \ stops running the automation on additional targets. You can specify\
              \ either an absolute number of errors, for example 10, or a percentage\
              \ of the target set, for example 10%. If you specify 3, for example,\
              \ the system stops running the automation when the fourth error is received.\
              \ If you specify 0, then the system stops running the automation on\
              \ additional targets after the first error result is returned. If you\
              \ run an automation on 50 resources and set max-errors to 10%, then\
              \ the system stops running the automation on additional targets when\
              \ the sixth error is received.</p> <p>Executions that are already running\
              \ an automation when max-errors is reached are allowed to complete,\
              \ but some of these executions may fail as well. If you need to ensure\
              \ that there won't be more than max-errors failed executions, set max-concurrency\
              \ to 1 so the executions proceed one at a time.</p>"
          title: MaxErrors
        TargetLocations:
          allOf:
          - $ref: '#/components/schemas/TargetLocations'
          - description: "A location is a combination of Amazon Web Services Regions\
              \ and/or Amazon Web Services accounts where you want to run the automation.\
              \ Use this operation to start an automation in multiple Amazon Web Services\
              \ Regions and multiple Amazon Web Services accounts. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-automation-multiple-accounts-and-regions.html\"\
              >Running Automation workflows in multiple Amazon Web Services Regions\
              \ and Amazon Web Services accounts</a> in the <i>Amazon Web Services\
              \ Systems Manager User Guide</i>. "
          title: TargetLocations
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "<p>Optional metadata that you assign to a resource. You\
              \ can specify a maximum of five tags for an automation. Tags enable\
              \ you to categorize a resource in different ways, such as by purpose,\
              \ owner, or environment. For example, you might want to tag an automation\
              \ to identify an environment or operating system. In this case, you\
              \ could specify the following key-value pairs:</p> <ul> <li> <p> <code>Key=environment,Value=test</code>\
              \ </p> </li> <li> <p> <code>Key=OS,Value=Windows</code> </p> </li> </ul>\
              \ <note> <p>To add tags to an existing automation, use the <a>AddTagsToResource</a>\
              \ operation.</p> </note>"
          title: Tags
        AlarmConfiguration:
          $ref: '#/components/schemas/StartAutomationExecutionRequest_AlarmConfiguration'
      required:
      - DocumentName
      title: StartAutomationExecutionRequest
      type: object
    AutomationDefinitionNotFoundException: {}
    InvalidAutomationExecutionParametersException: {}
    AutomationExecutionLimitExceededException: {}
    AutomationDefinitionVersionNotFoundException: {}
    StartChangeRequestExecutionResult:
      example:
        AutomationExecutionId: ""
      properties:
        AutomationExecutionId:
          allOf:
          - $ref: '#/components/schemas/AutomationExecutionId'
          - description: 'The unique ID of a runbook workflow operation. (A runbook
              workflow is a type of Automation operation.) '
          title: AutomationExecutionId
      title: StartChangeRequestExecutionResult
      type: object
    StartChangeRequestExecutionRequest:
      example:
        ScheduledTime: ""
        ChangeRequestName: ""
        Parameters: ""
        AutoApprove: ""
        Runbooks: ""
        DocumentVersion: ""
        ClientToken: ""
        ScheduledEndTime: ""
        Tags: ""
        DocumentName: ""
        ChangeDetails: ""
      properties:
        ScheduledTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: <p>The date and time specified in the change request to run
              the Automation runbooks.</p> <note> <p>The Automation runbooks specified
              for the runbook workflow can't run until all required approvals for
              the change request have been received.</p> </note>
          title: ScheduledTime
        DocumentName:
          allOf:
          - $ref: '#/components/schemas/DocumentARN'
          - description: The name of the change template document to run during the
              runbook workflow.
          title: DocumentName
        DocumentVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: The version of the change template document to run during
              the runbook workflow.
          title: DocumentVersion
        Parameters:
          allOf:
          - $ref: '#/components/schemas/AutomationParameterMap'
          - description: A key-value map of parameters that match the declared parameters
              in the change template document.
          title: Parameters
        ChangeRequestName:
          allOf:
          - $ref: '#/components/schemas/ChangeRequestName'
          - description: The name of the change request associated with the runbook
              workflow to be run.
          title: ChangeRequestName
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          - description: "The user-provided idempotency token. The token must be unique,\
              \ is case insensitive, enforces the UUID format, and can't be reused."
          title: ClientToken
        AutoApprove:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>Indicates whether the change request can be approved\
              \ automatically without the need for manual approvals.</p> <p>If <code>AutoApprovable</code>\
              \ is enabled in a change template, then setting <code>AutoApprove</code>\
              \ to <code>true</code> in <code>StartChangeRequestExecution</code> creates\
              \ a change request that bypasses approver review.</p> <note> <p>Change\
              \ Calendar restrictions are not bypassed in this scenario. If the state\
              \ of an associated calendar is <code>CLOSED</code>, change freeze approvers\
              \ must still grant permission for this change request to run. If they\
              \ don't, the change won't be processed until the calendar state is again\
              \ <code>OPEN</code>. </p> </note>"
          title: AutoApprove
        Runbooks:
          allOf:
          - $ref: '#/components/schemas/Runbooks'
          - description: <p>Information about the Automation runbooks that are run
              during the runbook workflow.</p> <note> <p>The Automation runbooks specified
              for the runbook workflow can't run until all required approvals for
              the change request have been received.</p> </note>
          title: Runbooks
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "<p>Optional metadata that you assign to a resource. You\
              \ can specify a maximum of five tags for a change request. Tags enable\
              \ you to categorize a resource in different ways, such as by purpose,\
              \ owner, or environment. For example, you might want to tag a change\
              \ request to identify an environment or target Amazon Web Services Region.\
              \ In this case, you could specify the following key-value pairs:</p>\
              \ <ul> <li> <p> <code>Key=Environment,Value=Production</code> </p> </li>\
              \ <li> <p> <code>Key=Region,Value=us-east-2</code> </p> </li> </ul>"
          title: Tags
        ScheduledEndTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time that the requester expects the runbook workflow
              related to the change request to complete. The time is an estimate only
              that the requester provides for reviewers.
          title: ScheduledEndTime
        ChangeDetails:
          allOf:
          - $ref: '#/components/schemas/ChangeDetailsValue'
          - description: "User-provided details about the change. If no details are\
              \ provided, content specified in the <b>Template information</b> section\
              \ of the associated change template is added."
          title: ChangeDetails
      required:
      - DocumentName
      - Runbooks
      title: StartChangeRequestExecutionRequest
      type: object
    AutomationDefinitionNotApprovedException: {}
    StartSessionResponse:
      example:
        SessionId: ""
        StreamUrl: ""
        TokenValue: ""
      properties:
        SessionId:
          allOf:
          - $ref: '#/components/schemas/SessionId'
          - description: The ID of the session.
          title: SessionId
        TokenValue:
          allOf:
          - $ref: '#/components/schemas/TokenValue'
          - description: "An encrypted token value containing session and caller information.\
              \ This token is used to authenticate the connection to the managed node,\
              \ and is valid only long enough to ensure the connection is successful.\
              \ Never share your session's token."
          title: TokenValue
        StreamUrl:
          allOf:
          - $ref: '#/components/schemas/StreamUrl'
          - description: "<p>A URL back to SSM Agent on the managed node that the\
              \ Session Manager client uses to send commands and receive output from\
              \ the node. Format: <code>wss://ssmmessages.<b>region</b>.amazonaws.com/v1/data-channel/<b>session-id</b>?stream=(input|output)</code>\
              \ </p> <p> <b>region</b> represents the Region identifier for an Amazon\
              \ Web Services Region supported by Amazon Web Services Systems Manager,\
              \ such as <code>us-east-2</code> for the US East (Ohio) Region. For\
              \ a list of supported <b>region</b> values, see the <b>Region</b> column\
              \ in <a href=\"https://docs.aws.amazon.com/general/latest/gr/ssm.html#ssm_region\"\
              >Systems Manager service endpoints</a> in the <i>Amazon Web Services\
              \ General Reference</i>.</p> <p> <b>session-id</b> represents the ID\
              \ of a Session Manager session, such as <code>1a2b3c4dEXAMPLE</code>.</p>"
          title: StreamUrl
      title: StartSessionResponse
      type: object
    StartSessionRequest:
      example:
        Target: ""
        Parameters: ""
        Reason: ""
        DocumentName: ""
      properties:
        Target:
          allOf:
          - $ref: '#/components/schemas/SessionTarget'
          - description: The managed node to connect to for the session.
          title: Target
        DocumentName:
          allOf:
          - $ref: '#/components/schemas/DocumentARN'
          - description: "The name of the SSM document you want to use to define the\
              \ type of session, input parameters, or preferences for the session.\
              \ For example, <code>SSM-SessionManagerRunShell</code>. You can call\
              \ the <a>GetDocument</a> API to verify the document exists before attempting\
              \ to start a session. If no document name is provided, a shell to the\
              \ managed node is launched by default. For more information, see <a\
              \ href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-working-with-sessions-start.html\"\
              >Start a session</a> in the <i>Amazon Web Services Systems Manager User\
              \ Guide</i>."
          title: DocumentName
        Reason:
          allOf:
          - $ref: '#/components/schemas/SessionReason'
          - description: The reason for connecting to the instance. This value is
              included in the details for the Amazon CloudWatch Events event created
              when you start the session.
          title: Reason
        Parameters:
          allOf:
          - $ref: '#/components/schemas/SessionManagerParameters'
          - description: The values you want to specify for the parameters defined
              in the Session document.
          title: Parameters
      required:
      - Target
      title: StartSessionRequest
      type: object
    TargetNotConnected: {}
    StopAutomationExecutionResult:
      properties: {}
      type: object
    StopAutomationExecutionRequest:
      example:
        Type: ""
        AutomationExecutionId: ""
      properties:
        AutomationExecutionId:
          allOf:
          - $ref: '#/components/schemas/AutomationExecutionId'
          - description: The execution ID of the Automation to stop.
          title: AutomationExecutionId
        Type:
          allOf:
          - $ref: '#/components/schemas/StopType'
          - description: "The stop request type. Valid types include the following:\
              \ Cancel and Complete. The default type is Cancel."
          title: Type
      required:
      - AutomationExecutionId
      title: StopAutomationExecutionRequest
      type: object
    InvalidAutomationStatusUpdateException: {}
    TerminateSessionResponse:
      example:
        SessionId: ""
      properties:
        SessionId:
          allOf:
          - $ref: '#/components/schemas/SessionId'
          - description: The ID of the session that has been terminated.
          title: SessionId
      title: TerminateSessionResponse
      type: object
    TerminateSessionRequest:
      example:
        SessionId: ""
      properties:
        SessionId:
          allOf:
          - $ref: '#/components/schemas/SessionId'
          - description: The ID of the session to terminate.
          title: SessionId
      required:
      - SessionId
      title: TerminateSessionRequest
      type: object
    UnlabelParameterVersionResult:
      example:
        RemovedLabels: ""
        InvalidLabels: ""
      properties:
        RemovedLabels:
          allOf:
          - $ref: '#/components/schemas/ParameterLabelList'
          - description: A list of all labels deleted from the parameter.
          title: RemovedLabels
        InvalidLabels:
          allOf:
          - $ref: '#/components/schemas/ParameterLabelList'
          - description: The labels that aren't attached to the given parameter version.
          title: InvalidLabels
      title: UnlabelParameterVersionResult
      type: object
    UnlabelParameterVersionRequest:
      example:
        ParameterVersion: ""
        Labels: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/PSParameterName'
          - description: The name of the parameter from which you want to delete one
              or more labels.
          title: Name
        ParameterVersion:
          allOf:
          - $ref: '#/components/schemas/PSParameterVersion'
          - description: "The specific version of the parameter which you want to\
              \ delete one or more labels from. If it isn't present, the call will\
              \ fail."
          title: ParameterVersion
        Labels:
          allOf:
          - $ref: '#/components/schemas/ParameterLabelList'
          - description: One or more labels to delete from the specified parameter
              version.
          title: Labels
      required:
      - Labels
      - Name
      - ParameterVersion
      title: UnlabelParameterVersionRequest
      type: object
    UpdateAssociationResult:
      example:
        AssociationDescription:
          LastExecutionDate: ""
          AssociationName: ""
          LastSuccessfulExecutionDate: ""
          MaxErrors: ""
          AssociationVersion: ""
          ScheduleOffset: ""
          Name: ""
          TriggeredAlarms: ""
          DocumentVersion: ""
          TargetLocations: ""
          Status:
            AdditionalInfo: ""
            Message: ""
            Date: ""
            Name: ""
          CalendarNames: ""
          ScheduleExpression: ""
          Parameters: ""
          InstanceId: ""
          TargetMaps: ""
          MaxConcurrency: ""
          ComplianceSeverity: ""
          Overview:
            Status: ""
            AssociationStatusAggregatedCount: ""
            DetailedStatus: ""
          Targets: ""
          SyncCompliance: ""
          AlarmConfiguration:
            IgnorePollAlarmFailure: ""
            Alarms: ""
          OutputLocation:
            S3Location:
              OutputS3KeyPrefix: ""
              OutputS3Region: ""
              OutputS3BucketName: ""
          Date: ""
          ApplyOnlyAtCronInterval: ""
          LastUpdateAssociationDate: ""
          AutomationTargetParameterName: ""
          AssociationId: ""
      properties:
        AssociationDescription:
          $ref: '#/components/schemas/UpdateAssociationResult_AssociationDescription'
      title: UpdateAssociationResult
      type: object
    UpdateAssociationRequest:
      example:
        AssociationName: ""
        CalendarNames: ""
        ScheduleExpression: ""
        MaxErrors: ""
        Parameters: ""
        AssociationVersion: ""
        TargetMaps: ""
        MaxConcurrency: ""
        ComplianceSeverity: ""
        Targets: ""
        SyncCompliance: ""
        AlarmConfiguration:
          IgnorePollAlarmFailure: ""
          Alarms: ""
        OutputLocation:
          S3Location:
            OutputS3KeyPrefix: ""
            OutputS3Region: ""
            OutputS3BucketName: ""
        ScheduleOffset: ""
        Name: ""
        ApplyOnlyAtCronInterval: ""
        DocumentVersion: ""
        AssociationId: ""
        AutomationTargetParameterName: ""
        TargetLocations: ""
      properties:
        AssociationId:
          allOf:
          - $ref: '#/components/schemas/AssociationId'
          - description: 'The ID of the association you want to update. '
          title: AssociationId
        Parameters:
          allOf:
          - $ref: '#/components/schemas/Parameters'
          - description: "The parameters you want to update for the association. If\
              \ you create a parameter using Parameter Store, a capability of Amazon\
              \ Web Services Systems Manager, you can reference the parameter using\
              \ <code>{{ssm:parameter-name}}</code>."
          title: Parameters
        DocumentVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: "<p>The document version you want update for the association.\
              \ </p> <important> <p>State Manager doesn't support running associations\
              \ that use a new version of a document if that document is shared from\
              \ another account. State Manager always runs the <code>default</code>\
              \ version of a document if shared from another account, even though\
              \ the Systems Manager console shows that a new version was processed.\
              \ If you want to run an association using a new version of a document\
              \ shared form another account, you must set the document version to\
              \ <code>default</code>.</p> </important>"
          title: DocumentVersion
        ScheduleExpression:
          allOf:
          - $ref: '#/components/schemas/ScheduleExpression'
          - description: The cron expression used to schedule the association that
              you want to update.
          title: ScheduleExpression
        OutputLocation:
          $ref: '#/components/schemas/UpdateAssociationRequest_OutputLocation'
        Name:
          allOf:
          - $ref: '#/components/schemas/DocumentARN'
          - description: "<p>The name of the SSM Command document or Automation runbook\
              \ that contains the configuration information for the managed node.</p>\
              \ <p>You can specify Amazon Web Services-predefined documents, documents\
              \ you created, or a document that is shared with you from another account.</p>\
              \ <p>For Systems Manager document (SSM document) that are shared with\
              \ you from other Amazon Web Services accounts, you must specify the\
              \ complete SSM document ARN, in the following format:</p> <p> <code>arn:aws:ssm:<i>region</i>:<i>account-id</i>:document/<i>document-name</i>\
              \ </code> </p> <p>For example:</p> <p> <code>arn:aws:ssm:us-east-2:12345678912:document/My-Shared-Document</code>\
              \ </p> <p>For Amazon Web Services-predefined documents and SSM documents\
              \ you created in your account, you only need to specify the document\
              \ name. For example, <code>AWS-ApplyPatchBaseline</code> or <code>My-Document</code>.</p>"
          title: Name
        Targets:
          allOf:
          - $ref: '#/components/schemas/Targets'
          - description: The targets of the association.
          title: Targets
        AssociationName:
          allOf:
          - $ref: '#/components/schemas/AssociationName'
          - description: The name of the association that you want to update.
          title: AssociationName
        AssociationVersion:
          allOf:
          - $ref: '#/components/schemas/AssociationVersion'
          - description: "This parameter is provided for concurrency control purposes.\
              \ You must specify the latest association version in the service. If\
              \ you want to ensure that this request succeeds, either specify <code>$LATEST</code>,\
              \ or omit this parameter."
          title: AssociationVersion
        AutomationTargetParameterName:
          allOf:
          - $ref: '#/components/schemas/AutomationTargetParameterName'
          - description: Choose the parameter that will define how your automation
              will branch out. This target is required for associations that use an
              Automation runbook and target resources by using rate controls. Automation
              is a capability of Amazon Web Services Systems Manager.
          title: AutomationTargetParameterName
        MaxErrors:
          allOf:
          - $ref: '#/components/schemas/MaxErrors'
          - description: "<p>The number of errors that are allowed before the system\
              \ stops sending requests to run the association on additional targets.\
              \ You can specify either an absolute number of errors, for example 10,\
              \ or a percentage of the target set, for example 10%. If you specify\
              \ 3, for example, the system stops sending requests when the fourth\
              \ error is received. If you specify 0, then the system stops sending\
              \ requests after the first error is returned. If you run an association\
              \ on 50 managed nodes and set <code>MaxError</code> to 10%, then the\
              \ system stops sending the request when the sixth error is received.</p>\
              \ <p>Executions that are already running an association when <code>MaxErrors</code>\
              \ is reached are allowed to complete, but some of these executions may\
              \ fail as well. If you need to ensure that there won't be more than\
              \ max-errors failed executions, set <code>MaxConcurrency</code> to 1\
              \ so that executions proceed one at a time.</p>"
          title: MaxErrors
        MaxConcurrency:
          allOf:
          - $ref: '#/components/schemas/MaxConcurrency'
          - description: "<p>The maximum number of targets allowed to run the association\
              \ at the same time. You can specify a number, for example 10, or a percentage\
              \ of the target set, for example 10%. The default value is 100%, which\
              \ means all targets run the association at the same time.</p> <p>If\
              \ a new managed node starts and attempts to run an association while\
              \ Systems Manager is running <code>MaxConcurrency</code> associations,\
              \ the association is allowed to run. During the next association interval,\
              \ the new managed node will process its association within the limit\
              \ specified for <code>MaxConcurrency</code>.</p>"
          title: MaxConcurrency
        ComplianceSeverity:
          allOf:
          - $ref: '#/components/schemas/AssociationComplianceSeverity'
          - description: The severity level to assign to the association.
          title: ComplianceSeverity
        SyncCompliance:
          allOf:
          - $ref: '#/components/schemas/AssociationSyncCompliance'
          - description: "<p>The mode for generating association compliance. You can\
              \ specify <code>AUTO</code> or <code>MANUAL</code>. In <code>AUTO</code>\
              \ mode, the system uses the status of the association execution to determine\
              \ the compliance status. If the association execution runs successfully,\
              \ then the association is <code>COMPLIANT</code>. If the association\
              \ execution doesn't run successfully, the association is <code>NON-COMPLIANT</code>.</p>\
              \ <p>In <code>MANUAL</code> mode, you must specify the <code>AssociationId</code>\
              \ as a parameter for the <a>PutComplianceItems</a> API operation. In\
              \ this case, compliance data isn't managed by State Manager, a capability\
              \ of Amazon Web Services Systems Manager. It is managed by your direct\
              \ call to the <a>PutComplianceItems</a> API operation.</p> <p>By default,\
              \ all associations use <code>AUTO</code> mode.</p>"
          title: SyncCompliance
        ApplyOnlyAtCronInterval:
          allOf:
          - $ref: '#/components/schemas/ApplyOnlyAtCronInterval'
          - description: "<p>By default, when you update an association, the system\
              \ runs it immediately after it is updated and then according to the\
              \ schedule you specified. Specify this option if you don't want an association\
              \ to run immediately after you update it. This parameter isn't supported\
              \ for rate expressions.</p> <p>If you chose this option when you created\
              \ an association and later you edit that association or you make changes\
              \ to the SSM document on which that association is based (by using the\
              \ Documents page in the console), State Manager applies the association\
              \ at the next specified cron interval. For example, if you chose the\
              \ <code>Latest</code> version of an SSM document when you created an\
              \ association and you edit the association by choosing a different document\
              \ version on the Documents page, State Manager applies the association\
              \ at the next specified cron interval if you previously selected this\
              \ option. If this option wasn't selected, State Manager immediately\
              \ runs the association.</p> <p>You can reset this option. To do so,\
              \ specify the <code>no-apply-only-at-cron-interval</code> parameter\
              \ when you update the association from the command line. This parameter\
              \ forces the association to run immediately after updating it and according\
              \ to the interval specified.</p>"
          title: ApplyOnlyAtCronInterval
        CalendarNames:
          allOf:
          - $ref: '#/components/schemas/CalendarNameOrARNList'
          - description: "The names or Amazon Resource Names (ARNs) of the Change\
              \ Calendar type documents you want to gate your associations under.\
              \ The associations only run when that change calendar is open. For more\
              \ information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-change-calendar\"\
              >Amazon Web Services Systems Manager Change Calendar</a>."
          title: CalendarNames
        TargetLocations:
          allOf:
          - $ref: '#/components/schemas/TargetLocations'
          - description: A location is a combination of Amazon Web Services Regions
              and Amazon Web Services accounts where you want to run the association.
              Use this action to update an association in multiple Regions and multiple
              accounts.
          title: TargetLocations
        ScheduleOffset:
          allOf:
          - $ref: '#/components/schemas/ScheduleOffset'
          - description: "<p>Number of days to wait after the scheduled day to run\
              \ an association. For example, if you specified a cron schedule of <code>cron(0\
              \ 0 ? * THU#2 *)</code>, you could specify an offset of 3 to run the\
              \ association each Sunday after the second Thursday of the month. For\
              \ more information about cron schedules for associations, see <a href=\"\
              https://docs.aws.amazon.com/systems-manager/latest/userguide/reference-cron-and-rate-expressions.html\"\
              >Reference: Cron and rate expressions for Systems Manager</a> in the\
              \ <i>Amazon Web Services Systems Manager User Guide</i>. </p> <note>\
              \ <p>To use offsets, you must specify the <code>ApplyOnlyAtCronInterval</code>\
              \ parameter. This option tells the system not to run an association\
              \ immediately after you create it. </p> </note>"
          title: ScheduleOffset
        TargetMaps:
          allOf:
          - $ref: '#/components/schemas/TargetMaps'
          - description: A key-value mapping of document parameters to target resources.
              Both Targets and TargetMaps can't be specified together.
          title: TargetMaps
        AlarmConfiguration:
          $ref: '#/components/schemas/AlarmConfiguration'
      required:
      - AssociationId
      title: UpdateAssociationRequest
      type: object
    InvalidUpdate: {}
    AssociationVersionLimitExceeded: {}
    UpdateAssociationStatusResult:
      example:
        AssociationDescription:
          LastExecutionDate: ""
          AssociationName: ""
          LastSuccessfulExecutionDate: ""
          MaxErrors: ""
          AssociationVersion: ""
          ScheduleOffset: ""
          Name: ""
          TriggeredAlarms: ""
          DocumentVersion: ""
          TargetLocations: ""
          Status:
            AdditionalInfo: ""
            Message: ""
            Date: ""
            Name: ""
          CalendarNames: ""
          ScheduleExpression: ""
          Parameters: ""
          InstanceId: ""
          TargetMaps: ""
          MaxConcurrency: ""
          ComplianceSeverity: ""
          Overview:
            Status: ""
            AssociationStatusAggregatedCount: ""
            DetailedStatus: ""
          Targets: ""
          SyncCompliance: ""
          AlarmConfiguration:
            IgnorePollAlarmFailure: ""
            Alarms: ""
          OutputLocation:
            S3Location:
              OutputS3KeyPrefix: ""
              OutputS3Region: ""
              OutputS3BucketName: ""
          Date: ""
          ApplyOnlyAtCronInterval: ""
          LastUpdateAssociationDate: ""
          AutomationTargetParameterName: ""
          AssociationId: ""
      properties:
        AssociationDescription:
          $ref: '#/components/schemas/CreateAssociationResult_AssociationDescription'
      title: UpdateAssociationStatusResult
      type: object
    UpdateAssociationStatusRequest:
      example:
        InstanceId: ""
        AssociationStatus:
          AdditionalInfo: ""
          Message: ""
          Date: ""
          Name: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DocumentARN'
          - description: The name of the SSM document.
          title: Name
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          - description: The managed node ID.
          title: InstanceId
        AssociationStatus:
          $ref: '#/components/schemas/UpdateAssociationStatusRequest_AssociationStatus'
      required:
      - AssociationStatus
      - InstanceId
      - Name
      title: UpdateAssociationStatusRequest
      type: object
    StatusUnchanged: {}
    UpdateDocumentResult:
      example:
        DocumentDescription:
          ReviewInformation: ""
          Sha1: ""
          Owner: ""
          DocumentFormat: ""
          Description: ""
          Category: ""
          AttachmentsInformation: ""
          StatusInformation: ""
          DefaultVersion: ""
          Hash: ""
          Name: ""
          ApprovedVersion: ""
          CategoryEnum: ""
          ReviewStatus: ""
          DisplayName: ""
          TargetType: ""
          VersionName: ""
          DocumentVersion: ""
          Tags: ""
          Status: ""
          Parameters: ""
          SchemaVersion: ""
          Requires: ""
          HashType: ""
          DocumentType: ""
          LatestVersion: ""
          PendingReviewVersion: ""
          CreatedDate: ""
          Author: ""
          PlatformTypes: ""
      properties:
        DocumentDescription:
          $ref: '#/components/schemas/UpdateDocumentResult_DocumentDescription'
      title: UpdateDocumentResult
      type: object
    UpdateDocumentRequest:
      example:
        DocumentFormat: ""
        Content: ""
        DisplayName: ""
        TargetType: ""
        VersionName: ""
        DocumentVersion: ""
        Attachments: ""
        Name: ""
      properties:
        Content:
          allOf:
          - $ref: '#/components/schemas/DocumentContent'
          - description: A valid JSON or YAML string.
          title: Content
        Attachments:
          allOf:
          - $ref: '#/components/schemas/AttachmentsSourceList'
          - description: A list of key-value pairs that describe attachments to a
              version of a document.
          title: Attachments
        Name:
          allOf:
          - $ref: '#/components/schemas/DocumentName'
          - description: The name of the SSM document that you want to update.
          title: Name
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DocumentDisplayName'
          - description: "The friendly name of the SSM document that you want to update.\
              \ This value can differ for each version of the document. If you don't\
              \ specify a value for this parameter in your request, the existing value\
              \ is applied to the new document version."
          title: DisplayName
        VersionName:
          allOf:
          - $ref: '#/components/schemas/DocumentVersionName'
          - description: "An optional field specifying the version of the artifact\
              \ you are updating with the document. For example, \"Release 12, Update\
              \ 6\". This value is unique across all versions of a document, and can't\
              \ be changed."
          title: VersionName
        DocumentVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: "<p>The version of the document that you want to update.\
              \ Currently, Systems Manager supports updating only the latest version\
              \ of the document. You can specify the version number of the latest\
              \ version or use the <code>$LATEST</code> variable.</p> <note> <p>If\
              \ you change a document version for a State Manager association, Systems\
              \ Manager immediately runs the association unless you previously specifed\
              \ the <code>apply-only-at-cron-interval</code> parameter.</p> </note>"
          title: DocumentVersion
        DocumentFormat:
          allOf:
          - $ref: '#/components/schemas/DocumentFormat'
          - description: Specify the document format for the new document version.
              Systems Manager supports JSON and YAML documents. JSON is the default
              format.
          title: DocumentFormat
        TargetType:
          allOf:
          - $ref: '#/components/schemas/TargetType'
          - description: Specify a new target type for the document.
          title: TargetType
      required:
      - Content
      - Name
      title: UpdateDocumentRequest
      type: object
    DocumentVersionLimitExceeded: {}
    DuplicateDocumentContent: {}
    DuplicateDocumentVersionName: {}
    UpdateDocumentDefaultVersionResult:
      example:
        Description:
          DefaultVersionName: ""
          DefaultVersion: ""
          Name: ""
      properties:
        Description:
          $ref: '#/components/schemas/UpdateDocumentDefaultVersionResult_Description'
      title: UpdateDocumentDefaultVersionResult
      type: object
    UpdateDocumentDefaultVersionRequest:
      example:
        DocumentVersion: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DocumentName'
          - description: The name of a custom document that you want to set as the
              default version.
          title: Name
        DocumentVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersionNumber'
          - description: The version of a custom document that you want to set as
              the default version.
          title: DocumentVersion
      required:
      - DocumentVersion
      - Name
      title: UpdateDocumentDefaultVersionRequest
      type: object
    UpdateDocumentMetadataResponse:
      properties: {}
      type: object
    UpdateDocumentMetadataRequest:
      example:
        DocumentReviews:
          Comment: ""
          Action: ""
        DocumentVersion: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DocumentName'
          - description: The name of the change template for which a version's metadata
              is to be updated.
          title: Name
        DocumentVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: The version of a change template in which to update approval
              metadata.
          title: DocumentVersion
        DocumentReviews:
          $ref: '#/components/schemas/UpdateDocumentMetadataRequest_DocumentReviews'
      required:
      - DocumentReviews
      - Name
      title: UpdateDocumentMetadataRequest
      type: object
    UpdateMaintenanceWindowResult:
      example:
        StartDate: ""
        Description: ""
        WindowId: ""
        AllowUnassociatedTargets: ""
        Cutoff: ""
        Schedule: ""
        Enabled: ""
        Duration: ""
        ScheduleOffset: ""
        EndDate: ""
        Name: ""
        ScheduleTimezone: ""
      properties:
        WindowId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowId'
          - description: The ID of the created maintenance window.
          title: WindowId
        Name:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowName'
          - description: The name of the maintenance window.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowDescription'
          - description: An optional description of the update.
          title: Description
        StartDate:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowStringDateTime'
          - description: "The date and time, in ISO-8601 Extended format, for when\
              \ the maintenance window is scheduled to become active. The maintenance\
              \ window won't run before this specified time."
          title: StartDate
        EndDate:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowStringDateTime'
          - description: "The date and time, in ISO-8601 Extended format, for when\
              \ the maintenance window is scheduled to become inactive. The maintenance\
              \ window won't run after this specified time."
          title: EndDate
        Schedule:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowSchedule'
          - description: The schedule of the maintenance window in the form of a cron
              or rate expression.
          title: Schedule
        ScheduleTimezone:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTimezone'
          - description: "The time zone that the scheduled maintenance window executions\
              \ are based on, in Internet Assigned Numbers Authority (IANA) format.\
              \ For example: \"America/Los_Angeles\", \"UTC\", or \"Asia/Seoul\".\
              \ For more information, see the <a href=\"https://www.iana.org/time-zones\"\
              >Time Zone Database</a> on the IANA website."
          title: ScheduleTimezone
        ScheduleOffset:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowOffset'
          - description: The number of days to wait to run a maintenance window after
              the scheduled cron expression date and time.
          title: ScheduleOffset
        Duration:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowDurationHours'
          - description: The duration of the maintenance window in hours.
          title: Duration
        Cutoff:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowCutoff'
          - description: The number of hours before the end of the maintenance window
              that Amazon Web Services Systems Manager stops scheduling new tasks
              for execution.
          title: Cutoff
        AllowUnassociatedTargets:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowAllowUnassociatedTargets'
          - description: Whether targets must be registered with the maintenance window
              before tasks can be defined for those targets.
          title: AllowUnassociatedTargets
        Enabled:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowEnabled'
          - description: Whether the maintenance window is enabled.
          title: Enabled
      title: UpdateMaintenanceWindowResult
      type: object
    UpdateMaintenanceWindowRequest:
      example:
        Replace: ""
        Description: ""
        AllowUnassociatedTargets: ""
        Enabled: ""
        Duration: ""
        ScheduleOffset: ""
        EndDate: ""
        Name: ""
        StartDate: ""
        WindowId: ""
        Cutoff: ""
        Schedule: ""
        ScheduleTimezone: ""
      properties:
        WindowId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowId'
          - description: The ID of the maintenance window to update.
          title: WindowId
        Name:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowName'
          - description: The name of the maintenance window.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowDescription'
          - description: An optional description for the update request.
          title: Description
        StartDate:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowStringDateTime'
          - description: "The date and time, in ISO-8601 Extended format, for when\
              \ you want the maintenance window to become active. <code>StartDate</code>\
              \ allows you to delay activation of the maintenance window until the\
              \ specified future date."
          title: StartDate
        EndDate:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowStringDateTime'
          - description: "The date and time, in ISO-8601 Extended format, for when\
              \ you want the maintenance window to become inactive. <code>EndDate</code>\
              \ allows you to set a date and time in the future when the maintenance\
              \ window will no longer run."
          title: EndDate
        Schedule:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowSchedule'
          - description: The schedule of the maintenance window in the form of a cron
              or rate expression.
          title: Schedule
        ScheduleTimezone:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTimezone'
          - description: "The time zone that the scheduled maintenance window executions\
              \ are based on, in Internet Assigned Numbers Authority (IANA) format.\
              \ For example: \"America/Los_Angeles\", \"UTC\", or \"Asia/Seoul\".\
              \ For more information, see the <a href=\"https://www.iana.org/time-zones\"\
              >Time Zone Database</a> on the IANA website."
          title: ScheduleTimezone
        ScheduleOffset:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowOffset'
          - description: "<p>The number of days to wait after the date and time specified\
              \ by a cron expression before running the maintenance window.</p> <p>For\
              \ example, the following cron expression schedules a maintenance window\
              \ to run the third Tuesday of every month at 11:30 PM.</p> <p> <code>cron(30\
              \ 23 ? * TUE#3 *)</code> </p> <p>If the schedule offset is <code>2</code>,\
              \ the maintenance window won't run until two days later.</p>"
          title: ScheduleOffset
        Duration:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowDurationHours'
          - description: The duration of the maintenance window in hours.
          title: Duration
        Cutoff:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowCutoff'
          - description: The number of hours before the end of the maintenance window
              that Amazon Web Services Systems Manager stops scheduling new tasks
              for execution.
          title: Cutoff
        AllowUnassociatedTargets:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowAllowUnassociatedTargets'
          - description: Whether targets must be registered with the maintenance window
              before tasks can be defined for those targets.
          title: AllowUnassociatedTargets
        Enabled:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowEnabled'
          - description: Whether the maintenance window is enabled.
          title: Enabled
        Replace:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "If <code>True</code>, then all fields that are required\
              \ by the <a>CreateMaintenanceWindow</a> operation are also required\
              \ for this API request. Optional fields that aren't specified are set\
              \ to null. "
          title: Replace
      required:
      - WindowId
      title: UpdateMaintenanceWindowRequest
      type: object
    UpdateMaintenanceWindowTargetResult:
      example:
        OwnerInformation: ""
        Description: ""
        WindowId: ""
        Targets: ""
        WindowTargetId: ""
        Name: ""
      properties:
        WindowId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowId'
          - description: The maintenance window ID specified in the update request.
          title: WindowId
        WindowTargetId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTargetId'
          - description: The target ID specified in the update request.
          title: WindowTargetId
        Targets:
          allOf:
          - $ref: '#/components/schemas/Targets'
          - description: The updated targets.
          title: Targets
        OwnerInformation:
          allOf:
          - $ref: '#/components/schemas/OwnerInformation'
          - description: The updated owner.
          title: OwnerInformation
        Name:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowName'
          - description: The updated name.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowDescription'
          - description: The updated description.
          title: Description
      title: UpdateMaintenanceWindowTargetResult
      type: object
    UpdateMaintenanceWindowTargetRequest:
      example:
        Replace: ""
        OwnerInformation: ""
        Description: ""
        WindowId: ""
        Targets: ""
        WindowTargetId: ""
        Name: ""
      properties:
        WindowId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowId'
          - description: The maintenance window ID with which to modify the target.
          title: WindowId
        WindowTargetId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTargetId'
          - description: The target ID to modify.
          title: WindowTargetId
        Targets:
          allOf:
          - $ref: '#/components/schemas/Targets'
          - description: The targets to add or replace.
          title: Targets
        OwnerInformation:
          allOf:
          - $ref: '#/components/schemas/OwnerInformation'
          - description: User-provided value that will be included in any Amazon CloudWatch
              Events events raised while running tasks for these targets in this maintenance
              window.
          title: OwnerInformation
        Name:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowName'
          - description: A name for the update.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowDescription'
          - description: An optional description for the update.
          title: Description
        Replace:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "If <code>True</code>, then all fields that are required\
              \ by the <a>RegisterTargetWithMaintenanceWindow</a> operation are also\
              \ required for this API request. Optional fields that aren't specified\
              \ are set to null."
          title: Replace
      required:
      - WindowId
      - WindowTargetId
      title: UpdateMaintenanceWindowTargetRequest
      type: object
    UpdateMaintenanceWindowTaskResult:
      example:
        MaxErrors: ""
        Description: ""
        ServiceRoleArn: ""
        Priority: ""
        MaxConcurrency: ""
        Targets: ""
        AlarmConfiguration:
          IgnorePollAlarmFailure: ""
          Alarms: ""
        TaskArn: ""
        Name: ""
        TaskInvocationParameters:
          Automation:
            Parameters: ""
            DocumentVersion: ""
          StepFunctions:
            Input: ""
            Name: ""
          RunCommand:
            TimeoutSeconds: ""
            Comment: ""
            OutputS3KeyPrefix: ""
            Parameters: ""
            CloudWatchOutputConfig:
              CloudWatchOutputEnabled: ""
              CloudWatchLogGroupName: ""
            DocumentHashType: ""
            ServiceRoleArn: ""
            NotificationConfig:
              NotificationArn: ""
              NotificationType: ""
              NotificationEvents: ""
            DocumentVersion: ""
            OutputS3BucketName: ""
            DocumentHash: ""
          Lambda:
            ClientContext: ""
            Qualifier: ""
            Payload: ""
        WindowTaskId: ""
        WindowId: ""
        TaskParameters: ""
        CutoffBehavior: ""
        LoggingInfo:
          S3KeyPrefix: ""
          S3Region: ""
          S3BucketName: ""
      properties:
        WindowId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowId'
          - description: The ID of the maintenance window that was updated.
          title: WindowId
        WindowTaskId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskId'
          - description: The task ID of the maintenance window that was updated.
          title: WindowTaskId
        Targets:
          allOf:
          - $ref: '#/components/schemas/Targets'
          - description: The updated target values.
          title: Targets
        TaskArn:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskArn'
          - description: The updated task ARN value.
          title: TaskArn
        ServiceRoleArn:
          allOf:
          - $ref: '#/components/schemas/ServiceRole'
          - description: The Amazon Resource Name (ARN) of the Identity and Access
              Management (IAM) service role to use to publish Amazon Simple Notification
              Service (Amazon SNS) notifications for maintenance window Run Command
              tasks.
          title: ServiceRoleArn
        TaskParameters:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskParameters'
          - description: "<p>The updated parameter values.</p> <note> <p> <code>TaskParameters</code>\
              \ has been deprecated. To specify parameters to pass to a task when\
              \ it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code>\
              \ structure. For information about how Systems Manager handles these\
              \ options for the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p>\
              \ </note>"
          title: TaskParameters
        TaskInvocationParameters:
          $ref: '#/components/schemas/UpdateMaintenanceWindowTaskResult_TaskInvocationParameters'
        Priority:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskPriority'
          - description: The updated priority value.
          title: Priority
        MaxConcurrency:
          allOf:
          - $ref: '#/components/schemas/MaxConcurrency'
          - description: The updated <code>MaxConcurrency</code> value.
          title: MaxConcurrency
        MaxErrors:
          allOf:
          - $ref: '#/components/schemas/MaxErrors'
          - description: The updated <code>MaxErrors</code> value.
          title: MaxErrors
        LoggingInfo:
          $ref: '#/components/schemas/UpdateMaintenanceWindowTaskResult_LoggingInfo'
        Name:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowName'
          - description: The updated task name.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowDescription'
          - description: The updated task description.
          title: Description
        CutoffBehavior:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskCutoffBehavior'
          - description: 'The specification for whether tasks should continue to run
              after the cutoff time specified in the maintenance windows is reached. '
          title: CutoffBehavior
        AlarmConfiguration:
          $ref: '#/components/schemas/GetMaintenanceWindowExecutionTaskResult_AlarmConfiguration'
      title: UpdateMaintenanceWindowTaskResult
      type: object
    UpdateMaintenanceWindowTaskRequest:
      example:
        Replace: ""
        MaxErrors: ""
        Description: ""
        ServiceRoleArn: ""
        Priority: ""
        MaxConcurrency: ""
        Targets: ""
        AlarmConfiguration:
          IgnorePollAlarmFailure: ""
          Alarms: ""
        TaskArn: ""
        Name: ""
        TaskInvocationParameters:
          Automation:
            Parameters: ""
            DocumentVersion: ""
          StepFunctions:
            Input: ""
            Name: ""
          RunCommand:
            TimeoutSeconds: ""
            Comment: ""
            OutputS3KeyPrefix: ""
            Parameters: ""
            CloudWatchOutputConfig:
              CloudWatchOutputEnabled: ""
              CloudWatchLogGroupName: ""
            DocumentHashType: ""
            ServiceRoleArn: ""
            NotificationConfig:
              NotificationArn: ""
              NotificationType: ""
              NotificationEvents: ""
            DocumentVersion: ""
            OutputS3BucketName: ""
            DocumentHash: ""
          Lambda:
            ClientContext: ""
            Qualifier: ""
            Payload: ""
        WindowTaskId: ""
        WindowId: ""
        TaskParameters: ""
        CutoffBehavior: ""
        LoggingInfo:
          S3KeyPrefix: ""
          S3Region: ""
          S3BucketName: ""
      properties:
        WindowId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowId'
          - description: The maintenance window ID that contains the task to modify.
          title: WindowId
        WindowTaskId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskId'
          - description: The task ID to modify.
          title: WindowTaskId
        Targets:
          allOf:
          - $ref: '#/components/schemas/Targets'
          - description: "<p>The targets (either managed nodes or tags) to modify.\
              \ Managed nodes are specified using the format <code>Key=instanceids,Values=instanceID_1,instanceID_2</code>.\
              \ Tags are specified using the format <code> Key=tag_name,Values=tag_value</code>.\
              \ </p> <note> <p>One or more targets must be specified for maintenance\
              \ window Run Command-type tasks. Depending on the task, targets are\
              \ optional for other maintenance window task types (Automation, Lambda,\
              \ and Step Functions). For more information about running tasks that\
              \ don't specify targets, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/maintenance-windows-targetless-tasks.html\"\
              >Registering maintenance window tasks without targets</a> in the <i>Amazon\
              \ Web Services Systems Manager User Guide</i>.</p> </note>"
          title: Targets
        TaskArn:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskArn'
          - description: The task ARN to modify.
          title: TaskArn
        ServiceRoleArn:
          allOf:
          - $ref: '#/components/schemas/ServiceRole'
          - description: "<p>The Amazon Resource Name (ARN) of the IAM service role\
              \ for Amazon Web Services Systems Manager to assume when running a maintenance\
              \ window task. If you do not specify a service role ARN, Systems Manager\
              \ uses your account's service-linked role. If no service-linked role\
              \ for Systems Manager exists in your account, it is created when you\
              \ run <code>RegisterTaskWithMaintenanceWindow</code>.</p> <p>For more\
              \ information, see the following topics in the in the <i>Amazon Web\
              \ Services Systems Manager User Guide</i>:</p> <ul> <li> <p> <a href=\"\
              https://docs.aws.amazon.com/systems-manager/latest/userguide/using-service-linked-roles.html#slr-permissions\"\
              >Using service-linked roles for Systems Manager</a> </p> </li> <li>\
              \ <p> <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-maintenance-permissions.html#maintenance-window-tasks-service-role\"\
              >Should I use a service-linked role or a custom service role to run\
              \ maintenance window tasks? </a> </p> </li> </ul>"
          title: ServiceRoleArn
        TaskParameters:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskParameters'
          - description: "<p>The parameters to modify.</p> <note> <p> <code>TaskParameters</code>\
              \ has been deprecated. To specify parameters to pass to a task when\
              \ it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code>\
              \ structure. For information about how Systems Manager handles these\
              \ options for the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p>\
              \ </note> <p>The map has the following format:</p> <p>Key: string, between\
              \ 1 and 255 characters</p> <p>Value: an array of strings, each string\
              \ is between 1 and 255 characters</p>"
          title: TaskParameters
        TaskInvocationParameters:
          $ref: '#/components/schemas/UpdateMaintenanceWindowTaskRequest_TaskInvocationParameters'
        Priority:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskPriority'
          - description: "The new task priority to specify. The lower the number,\
              \ the higher the priority. Tasks that have the same priority are scheduled\
              \ in parallel."
          title: Priority
        MaxConcurrency:
          allOf:
          - $ref: '#/components/schemas/MaxConcurrency'
          - description: "<p>The new <code>MaxConcurrency</code> value you want to\
              \ specify. <code>MaxConcurrency</code> is the number of targets that\
              \ are allowed to run this task, in parallel.</p> <note> <p>Although\
              \ this element is listed as \"Required: No\", a value can be omitted\
              \ only when you are registering or updating a <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/maintenance-windows-targetless-tasks.html\"\
              >targetless task</a> You must provide a value in all other cases.</p>\
              \ <p>For maintenance window tasks without a target specified, you can't\
              \ supply a value for this option. Instead, the system inserts a placeholder\
              \ value of <code>1</code>. This value doesn't affect the running of\
              \ your task.</p> </note>"
          title: MaxConcurrency
        MaxErrors:
          allOf:
          - $ref: '#/components/schemas/MaxErrors'
          - description: "<p>The new <code>MaxErrors</code> value to specify. <code>MaxErrors</code>\
              \ is the maximum number of errors that are allowed before the task stops\
              \ being scheduled.</p> <note> <p>Although this element is listed as\
              \ \"Required: No\", a value can be omitted only when you are registering\
              \ or updating a <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/maintenance-windows-targetless-tasks.html\"\
              >targetless task</a> You must provide a value in all other cases.</p>\
              \ <p>For maintenance window tasks without a target specified, you can't\
              \ supply a value for this option. Instead, the system inserts a placeholder\
              \ value of <code>1</code>. This value doesn't affect the running of\
              \ your task.</p> </note>"
          title: MaxErrors
        LoggingInfo:
          $ref: '#/components/schemas/UpdateMaintenanceWindowTaskRequest_LoggingInfo'
        Name:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowName'
          - description: The new task name to specify.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowDescription'
          - description: The new task description to specify.
          title: Description
        Replace:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "If True, then all fields that are required by the <a>RegisterTaskWithMaintenanceWindow</a>\
              \ operation are also required for this API request. Optional fields\
              \ that aren't specified are set to null."
          title: Replace
        CutoffBehavior:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskCutoffBehavior'
          - description: "<p>Indicates whether tasks should continue to run after\
              \ the cutoff time specified in the maintenance windows is reached. </p>\
              \ <ul> <li> <p> <code>CONTINUE_TASK</code>: When the cutoff time is\
              \ reached, any tasks that are running continue. The default value.</p>\
              \ </li> <li> <p> <code>CANCEL_TASK</code>:</p> <ul> <li> <p>For Automation,\
              \ Lambda, Step Functions tasks: When the cutoff time is reached, any\
              \ task invocations that are already running continue, but no new task\
              \ invocations are started.</p> </li> <li> <p>For Run Command tasks:\
              \ When the cutoff time is reached, the system sends a <a>CancelCommand</a>\
              \ operation that attempts to cancel the command associated with the\
              \ task. However, there is no guarantee that the command will be terminated\
              \ and the underlying process stopped.</p> </li> </ul> <p>The status\
              \ for tasks that are not completed is <code>TIMED_OUT</code>.</p> </li>\
              \ </ul>"
          title: CutoffBehavior
        AlarmConfiguration:
          $ref: '#/components/schemas/RegisterTaskWithMaintenanceWindowRequest_AlarmConfiguration'
      required:
      - WindowId
      - WindowTaskId
      title: UpdateMaintenanceWindowTaskRequest
      type: object
    UpdateManagedInstanceRoleResult:
      properties: {}
      type: object
    UpdateManagedInstanceRoleRequest:
      example:
        InstanceId: ""
        IamRole: ""
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/ManagedInstanceId'
          - description: The ID of the managed node where you want to update the role.
          title: InstanceId
        IamRole:
          allOf:
          - $ref: '#/components/schemas/IamRole'
          - description: "<p>The name of the Identity and Access Management (IAM)\
              \ role that you want to assign to the managed node. This IAM role must\
              \ provide AssumeRole permissions for the Amazon Web Services Systems\
              \ Manager service principal <code>ssm.amazonaws.com</code>. For more\
              \ information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-service-role.html\"\
              >Create an IAM service role for a hybrid environment</a> in the <i>Amazon\
              \ Web Services Systems Manager User Guide</i>.</p> <note> <p>You can't\
              \ specify an IAM service-linked role for this parameter. You must create\
              \ a unique role.</p> </note>"
          title: IamRole
      required:
      - IamRole
      - InstanceId
      title: UpdateManagedInstanceRoleRequest
      type: object
    UpdateOpsItemResponse:
      properties: {}
      type: object
    UpdateOpsItemRequest:
      example:
        Status: ""
        Description: ""
        Category: ""
        OpsItemArn: ""
        Priority: ""
        OperationalData: ""
        PlannedStartTime: ""
        Title: ""
        Severity: ""
        OpsItemId: ""
        ActualStartTime: ""
        OperationalDataToDelete: ""
        ActualEndTime: ""
        Notifications: ""
        RelatedOpsItems: ""
        PlannedEndTime: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/OpsItemDescription'
          - description: 'Update the information about the OpsItem. Provide enough
              information so that users reading this OpsItem for the first time understand
              the issue. '
          title: Description
        OperationalData:
          allOf:
          - $ref: '#/components/schemas/OpsItemOperationalData'
          - description: "<p>Add new keys or edit existing key-value pairs of the\
              \ OperationalData map in the OpsItem object.</p> <p>Operational data\
              \ is custom data that provides useful reference details about the OpsItem.\
              \ For example, you can specify log files, error strings, license keys,\
              \ troubleshooting tips, or other relevant data. You enter operational\
              \ data as key-value pairs. The key has a maximum length of 128 characters.\
              \ The value has a maximum size of 20 KB.</p> <important> <p>Operational\
              \ data keys <i>can't</i> begin with the following: <code>amazon</code>,\
              \ <code>aws</code>, <code>amzn</code>, <code>ssm</code>, <code>/amazon</code>,\
              \ <code>/aws</code>, <code>/amzn</code>, <code>/ssm</code>.</p> </important>\
              \ <p>You can choose to make the data searchable by other users in the\
              \ account or you can restrict search access. Searchable data means that\
              \ all users with access to the OpsItem Overview page (as provided by\
              \ the <a>DescribeOpsItems</a> API operation) can view and search on\
              \ the specified data. Operational data that isn't searchable is only\
              \ viewable by users who have access to the OpsItem (as provided by the\
              \ <a>GetOpsItem</a> API operation).</p> <p>Use the <code>/aws/resources</code>\
              \ key in OperationalData to specify a related resource in the request.\
              \ Use the <code>/aws/automations</code> key in OperationalData to associate\
              \ an Automation runbook with the OpsItem. To view Amazon Web Services\
              \ CLI example commands that use these keys, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-manually-create-OpsItems.html\"\
              >Creating OpsItems manually</a> in the <i>Amazon Web Services Systems\
              \ Manager User Guide</i>.</p>"
          title: OperationalData
        OperationalDataToDelete:
          allOf:
          - $ref: '#/components/schemas/OpsItemOpsDataKeysList'
          - description: Keys that you want to remove from the OperationalData map.
          title: OperationalDataToDelete
        Notifications:
          allOf:
          - $ref: '#/components/schemas/OpsItemNotifications'
          - description: The Amazon Resource Name (ARN) of an SNS topic where notifications
              are sent when this OpsItem is edited or changed.
          title: Notifications
        Priority:
          allOf:
          - $ref: '#/components/schemas/OpsItemPriority'
          - description: The importance of this OpsItem in relation to other OpsItems
              in the system.
          title: Priority
        RelatedOpsItems:
          allOf:
          - $ref: '#/components/schemas/RelatedOpsItems'
          - description: "One or more OpsItems that share something in common with\
              \ the current OpsItems. For example, related OpsItems can include OpsItems\
              \ with similar error messages, impacted resources, or statuses for the\
              \ impacted resource."
          title: RelatedOpsItems
        Status:
          allOf:
          - $ref: '#/components/schemas/OpsItemStatus'
          - description: "The OpsItem status. Status can be <code>Open</code>, <code>In\
              \ Progress</code>, or <code>Resolved</code>. For more information, see\
              \ <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-working-with-OpsItems-editing-details.html\"\
              >Editing OpsItem details</a> in the <i>Amazon Web Services Systems Manager\
              \ User Guide</i>."
          title: Status
        OpsItemId:
          allOf:
          - $ref: '#/components/schemas/OpsItemId'
          - description: The ID of the OpsItem.
          title: OpsItemId
        Title:
          allOf:
          - $ref: '#/components/schemas/OpsItemTitle'
          - description: A short heading that describes the nature of the OpsItem
              and the impacted resource.
          title: Title
        Category:
          allOf:
          - $ref: '#/components/schemas/OpsItemCategory'
          - description: Specify a new category for an OpsItem.
          title: Category
        Severity:
          allOf:
          - $ref: '#/components/schemas/OpsItemSeverity'
          - description: Specify a new severity for an OpsItem.
          title: Severity
        ActualStartTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time a runbook workflow started. Currently reported only
              for the OpsItem type <code>/aws/changerequest</code>.
          title: ActualStartTime
        ActualEndTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time a runbook workflow ended. Currently reported only
              for the OpsItem type <code>/aws/changerequest</code>.
          title: ActualEndTime
        PlannedStartTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time specified in a change request for a runbook workflow
              to start. Currently supported only for the OpsItem type <code>/aws/changerequest</code>.
          title: PlannedStartTime
        PlannedEndTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time specified in a change request for a runbook workflow
              to end. Currently supported only for the OpsItem type <code>/aws/changerequest</code>.
          title: PlannedEndTime
        OpsItemArn:
          allOf:
          - $ref: '#/components/schemas/OpsItemArn'
          - description: The OpsItem Amazon Resource Name (ARN).
          title: OpsItemArn
      required:
      - OpsItemId
      title: UpdateOpsItemRequest
      type: object
    UpdateOpsMetadataResult:
      example:
        OpsMetadataArn: ""
      properties:
        OpsMetadataArn:
          allOf:
          - $ref: '#/components/schemas/OpsMetadataArn'
          - description: The Amazon Resource Name (ARN) of the OpsMetadata Object
              that was updated.
          title: OpsMetadataArn
      title: UpdateOpsMetadataResult
      type: object
    UpdateOpsMetadataRequest:
      example:
        MetadataToUpdate: ""
        OpsMetadataArn: ""
        KeysToDelete: ""
      properties:
        OpsMetadataArn:
          allOf:
          - $ref: '#/components/schemas/OpsMetadataArn'
          - description: The Amazon Resource Name (ARN) of the OpsMetadata Object
              to update.
          title: OpsMetadataArn
        MetadataToUpdate:
          allOf:
          - $ref: '#/components/schemas/MetadataMap'
          - description: Metadata to add to an OpsMetadata object.
          title: MetadataToUpdate
        KeysToDelete:
          allOf:
          - $ref: '#/components/schemas/MetadataKeysToDeleteList'
          - description: 'The metadata keys to delete from the OpsMetadata object. '
          title: KeysToDelete
      required:
      - OpsMetadataArn
      title: UpdateOpsMetadataRequest
      type: object
    OpsMetadataKeyLimitExceededException: {}
    UpdatePatchBaselineResult:
      example:
        BaselineId: ""
        OperatingSystem: ""
        Description: ""
        ApprovalRules:
          PatchRules: ""
        ModifiedDate: ""
        Sources: ""
        Name: ""
        RejectedPatches: ""
        ApprovedPatches: ""
        RejectedPatchesAction: ""
        ApprovedPatchesComplianceLevel: ""
        CreatedDate: ""
        ApprovedPatchesEnableNonSecurity: ""
        GlobalFilters:
          PatchFilters: ""
      properties:
        BaselineId:
          allOf:
          - $ref: '#/components/schemas/BaselineId'
          - description: The ID of the deleted patch baseline.
          title: BaselineId
        Name:
          allOf:
          - $ref: '#/components/schemas/BaselineName'
          - description: The name of the patch baseline.
          title: Name
        OperatingSystem:
          allOf:
          - $ref: '#/components/schemas/OperatingSystem'
          - description: The operating system rule used by the updated patch baseline.
          title: OperatingSystem
        GlobalFilters:
          $ref: '#/components/schemas/GetPatchBaselineResult_GlobalFilters'
        ApprovalRules:
          $ref: '#/components/schemas/CreatePatchBaselineRequest_ApprovalRules'
        ApprovedPatches:
          allOf:
          - $ref: '#/components/schemas/PatchIdList'
          - description: A list of explicitly approved patches for the baseline.
          title: ApprovedPatches
        ApprovedPatchesComplianceLevel:
          allOf:
          - $ref: '#/components/schemas/PatchComplianceLevel'
          - description: The compliance severity level assigned to the patch baseline
              after the update completed.
          title: ApprovedPatchesComplianceLevel
        ApprovedPatchesEnableNonSecurity:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether the list of approved patches includes non-security
              updates that should be applied to the managed nodes. The default value
              is <code>false</code>. Applies to Linux managed nodes only.
          title: ApprovedPatchesEnableNonSecurity
        RejectedPatches:
          allOf:
          - $ref: '#/components/schemas/PatchIdList'
          - description: A list of explicitly rejected patches for the baseline.
          title: RejectedPatches
        RejectedPatchesAction:
          allOf:
          - $ref: '#/components/schemas/PatchAction'
          - description: "The action specified to take on patches included in the\
              \ <code>RejectedPatches</code> list. A patch can be allowed only if\
              \ it is a dependency of another package, or blocked entirely along with\
              \ packages that include it as a dependency."
          title: RejectedPatchesAction
        CreatedDate:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date when the patch baseline was created.
          title: CreatedDate
        ModifiedDate:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date when the patch baseline was last modified.
          title: ModifiedDate
        Description:
          allOf:
          - $ref: '#/components/schemas/BaselineDescription'
          - description: A description of the patch baseline.
          title: Description
        Sources:
          allOf:
          - $ref: '#/components/schemas/PatchSourceList'
          - description: "Information about the patches to use to update the managed\
              \ nodes, including target operating systems and source repositories.\
              \ Applies to Linux managed nodes only."
          title: Sources
      title: UpdatePatchBaselineResult
      type: object
    UpdatePatchBaselineRequest:
      example:
        BaselineId: ""
        ApprovedPatches: ""
        RejectedPatchesAction: ""
        Replace: ""
        Description: ""
        ApprovedPatchesComplianceLevel: ""
        ApprovedPatchesEnableNonSecurity: ""
        ApprovalRules:
          PatchRules: ""
        GlobalFilters:
          PatchFilters: ""
        Sources: ""
        Name: ""
        RejectedPatches: ""
      properties:
        BaselineId:
          allOf:
          - $ref: '#/components/schemas/BaselineId'
          - description: The ID of the patch baseline to update.
          title: BaselineId
        Name:
          allOf:
          - $ref: '#/components/schemas/BaselineName'
          - description: The name of the patch baseline.
          title: Name
        GlobalFilters:
          $ref: '#/components/schemas/CreatePatchBaselineRequest_GlobalFilters'
        ApprovalRules:
          $ref: '#/components/schemas/CreatePatchBaselineRequest_ApprovalRules'
        ApprovedPatches:
          allOf:
          - $ref: '#/components/schemas/PatchIdList'
          - description: "<p>A list of explicitly approved patches for the baseline.</p>\
              \ <p>For information about accepted formats for lists of approved patches\
              \ and rejected patches, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-approved-rejected-package-name-formats.html\"\
              >About package name formats for approved and rejected patch lists</a>\
              \ in the <i>Amazon Web Services Systems Manager User Guide</i>.</p>"
          title: ApprovedPatches
        ApprovedPatchesComplianceLevel:
          allOf:
          - $ref: '#/components/schemas/PatchComplianceLevel'
          - description: Assigns a new compliance severity level to an existing patch
              baseline.
          title: ApprovedPatchesComplianceLevel
        ApprovedPatchesEnableNonSecurity:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether the list of approved patches includes non-security
              updates that should be applied to the managed nodes. The default value
              is <code>false</code>. Applies to Linux managed nodes only.
          title: ApprovedPatchesEnableNonSecurity
        RejectedPatches:
          allOf:
          - $ref: '#/components/schemas/PatchIdList'
          - description: "<p>A list of explicitly rejected patches for the baseline.</p>\
              \ <p>For information about accepted formats for lists of approved patches\
              \ and rejected patches, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-approved-rejected-package-name-formats.html\"\
              >About package name formats for approved and rejected patch lists</a>\
              \ in the <i>Amazon Web Services Systems Manager User Guide</i>.</p>"
          title: RejectedPatches
        RejectedPatchesAction:
          allOf:
          - $ref: '#/components/schemas/PatchAction'
          - description: "<p>The action for Patch Manager to take on patches included\
              \ in the <code>RejectedPackages</code> list.</p> <ul> <li> <p> <b> <code>ALLOW_AS_DEPENDENCY</code>\
              \ </b>: A package in the <code>Rejected</code> patches list is installed\
              \ only if it is a dependency of another package. It is considered compliant\
              \ with the patch baseline, and its status is reported as <code>InstalledOther</code>.\
              \ This is the default action if no option is specified.</p> </li> <li>\
              \ <p> <b> <code>BLOCK</code> </b>: Packages in the <code>RejectedPatches</code>\
              \ list, and packages that include them as dependencies, aren't installed\
              \ under any circumstances. If a package was installed before it was\
              \ added to the <code>Rejected</code> patches list, it is considered\
              \ non-compliant with the patch baseline, and its status is reported\
              \ as <code>InstalledRejected</code>.</p> </li> </ul>"
          title: RejectedPatchesAction
        Description:
          allOf:
          - $ref: '#/components/schemas/BaselineDescription'
          - description: A description of the patch baseline.
          title: Description
        Sources:
          allOf:
          - $ref: '#/components/schemas/PatchSourceList'
          - description: "Information about the patches to use to update the managed\
              \ nodes, including target operating systems and source repositories.\
              \ Applies to Linux managed nodes only."
          title: Sources
        Replace:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "If True, then all fields that are required by the <a>CreatePatchBaseline</a>\
              \ operation are also required for this API request. Optional fields\
              \ that aren't specified are set to null."
          title: Replace
      required:
      - BaselineId
      title: UpdatePatchBaselineRequest
      type: object
    UpdateResourceDataSyncResult:
      properties: {}
      type: object
    UpdateResourceDataSyncRequest:
      example:
        SyncSource:
          SourceType: ""
          AwsOrganizationsSource:
            OrganizationSourceType: ""
            OrganizationalUnits: ""
          IncludeFutureRegions: ""
          SourceRegions: ""
          EnableAllOpsDataSources: ""
        SyncName: ""
        SyncType: ""
      properties:
        SyncName:
          allOf:
          - $ref: '#/components/schemas/ResourceDataSyncName'
          - description: The name of the resource data sync you want to update.
          title: SyncName
        SyncType:
          allOf:
          - $ref: '#/components/schemas/ResourceDataSyncType'
          - description: The type of resource data sync. The supported <code>SyncType</code>
              is SyncFromSource.
          title: SyncType
        SyncSource:
          $ref: '#/components/schemas/UpdateResourceDataSyncRequest_SyncSource'
      required:
      - SyncName
      - SyncSource
      - SyncType
      title: UpdateResourceDataSyncRequest
      type: object
    ResourceDataSyncConflictException: {}
    UpdateServiceSettingResult:
      description: The result body of the UpdateServiceSetting API operation.
      properties: {}
      type: object
    UpdateServiceSettingRequest:
      description: The request body of the UpdateServiceSetting API operation.
      example:
        SettingValue: ""
        SettingId: ""
      properties:
        SettingId:
          allOf:
          - $ref: '#/components/schemas/ServiceSettingId'
          - description: "<p>The Amazon Resource Name (ARN) of the service setting\
              \ to update. For example, <code>arn:aws:ssm:us-east-1:111122223333:servicesetting/ssm/parameter-store/high-throughput-enabled</code>.\
              \ The setting ID can be one of the following.</p> <ul> <li> <p> <code>/ssm/managed-instance/default-ec2-instance-management-role</code>\
              \ </p> </li> <li> <p> <code>/ssm/automation/customer-script-log-destination</code>\
              \ </p> </li> <li> <p> <code>/ssm/automation/customer-script-log-group-name</code>\
              \ </p> </li> <li> <p> <code>/ssm/documents/console/public-sharing-permission</code>\
              \ </p> </li> <li> <p> <code>/ssm/managed-instance/activation-tier</code>\
              \ </p> </li> <li> <p> <code>/ssm/opsinsights/opscenter</code> </p> </li>\
              \ <li> <p> <code>/ssm/parameter-store/default-parameter-tier</code>\
              \ </p> </li> <li> <p> <code>/ssm/parameter-store/high-throughput-enabled</code>\
              \ </p> </li> </ul> <note> <p>Permissions to update the <code>/ssm/managed-instance/default-ec2-instance-management-role</code>\
              \ setting should only be provided to administrators. Implement least\
              \ privilege access when allowing individuals to configure or modify\
              \ the Default Host Management Configuration.</p> </note>"
          title: SettingId
        SettingValue:
          allOf:
          - $ref: '#/components/schemas/ServiceSettingValue'
          - description: "<p>The new value to specify for the service setting. The\
              \ following list specifies the available values for each setting.</p>\
              \ <ul> <li> <p> <code>/ssm/managed-instance/default-ec2-instance-management-role:\
              \ The name of an IAM role</code> </p> </li> <li> <p> <code>/ssm/automation/customer-script-log-destination</code>:\
              \ <code>CloudWatch</code> </p> </li> <li> <p> <code>/ssm/automation/customer-script-log-group-name</code>:\
              \ The name of an Amazon CloudWatch Logs log group</p> </li> <li> <p>\
              \ <code>/ssm/documents/console/public-sharing-permission</code>: <code>Enable</code>\
              \ or <code>Disable</code> </p> </li> <li> <p> <code>/ssm/managed-instance/activation-tier</code>:\
              \ <code>standard</code> or <code>advanced</code> </p> </li> <li> <p>\
              \ <code>/ssm/opsinsights/opscenter</code>: <code>Enabled</code> or <code>Disabled</code>\
              \ </p> </li> <li> <p> <code>/ssm/parameter-store/default-parameter-tier</code>:\
              \ <code>Standard</code>, <code>Advanced</code>, <code>Intelligent-Tiering</code>\
              \ </p> </li> <li> <p> <code>/ssm/parameter-store/high-throughput-enabled</code>:\
              \ <code>true</code> or <code>false</code> </p> </li> </ul>"
          title: SettingValue
      required:
      - SettingId
      - SettingValue
      title: UpdateServiceSettingRequest
      type: object
    Account:
      title: Account
      type: string
    AccountId:
      pattern: "\\(\\?i\\)all\\|[0-9]\\{12\\}"
      title: AccountId
      type: string
    AccountIdList:
      items:
        $ref: '#/components/schemas/AccountId'
      maxItems: 20
      type: array
    SharedDocumentVersion:
      description: "The document version shared with other Amazon Web Services accounts.\
        \ You can share <code>Latest</code>, <code>Default</code> or <code>All versions</code>."
      maxLength: 8
      pattern: "([$]LATEST|[$]DEFAULT|[$]ALL)"
      type: string
    AccountSharingInfo:
      description: Information includes the Amazon Web Services account ID where the
        current document is shared and the version shared with that account.
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID where the current document
              is shared.
          title: AccountId
        SharedDocumentVersion:
          allOf:
          - $ref: '#/components/schemas/SharedDocumentVersion'
          - description: The version of the current document shared with the account.
          title: SharedDocumentVersion
      title: AccountSharingInfo
      type: object
    AccountSharingInfoList:
      description: A list of Amazon Web Services accounts where the current document
        is shared and the version shared with each account.
      items:
        $ref: '#/components/schemas/AccountSharingInfo'
      type: array
    Accounts:
      items:
        $ref: '#/components/schemas/Account'
      maxItems: 50
      minItems: 1
      type: array
    ActivationId:
      pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
      type: string
    ActivationDescription:
      maxLength: 256
      minLength: 0
      type: string
    DefaultInstanceName:
      maxLength: 256
      minLength: 0
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      type: string
    IamRole:
      maxLength: 64
      type: string
    RegistrationLimit:
      maximum: 1000
      minimum: 1
      type: integer
    RegistrationsCount:
      maximum: 1000
      minimum: 1
      type: integer
    ExpirationDate:
      format: date-time
      type: string
    Boolean:
      type: boolean
    CreatedDate:
      format: date-time
      type: string
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 1000
      type: array
    Activation:
      description: An activation registers one or more on-premises servers or virtual
        machines (VMs) with Amazon Web Services so that you can configure those servers
        or VMs using Run Command. A server or VM that has been registered with Amazon
        Web Services Systems Manager is called a managed node.
      properties:
        ActivationId:
          allOf:
          - $ref: '#/components/schemas/ActivationId'
          - description: The ID created by Systems Manager when you submitted the
              activation.
          title: ActivationId
        Description:
          allOf:
          - $ref: '#/components/schemas/ActivationDescription'
          - description: A user defined description of the activation.
          title: Description
        DefaultInstanceName:
          allOf:
          - $ref: '#/components/schemas/DefaultInstanceName'
          - description: A name for the managed node when it is created.
          title: DefaultInstanceName
        IamRole:
          allOf:
          - $ref: '#/components/schemas/IamRole'
          - description: The Identity and Access Management (IAM) role to assign to
              the managed node.
          title: IamRole
        RegistrationLimit:
          allOf:
          - $ref: '#/components/schemas/RegistrationLimit'
          - description: The maximum number of managed nodes that can be registered
              using this activation.
          title: RegistrationLimit
        RegistrationsCount:
          allOf:
          - $ref: '#/components/schemas/RegistrationsCount'
          - description: The number of managed nodes already registered with this
              activation.
          title: RegistrationsCount
        ExpirationDate:
          allOf:
          - $ref: '#/components/schemas/ExpirationDate'
          - description: The date when this activation can no longer be used to register
              managed nodes.
          title: ExpirationDate
        Expired:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether or not the activation is expired.
          title: Expired
        CreatedDate:
          allOf:
          - $ref: '#/components/schemas/CreatedDate'
          - description: The date the activation was created.
          title: CreatedDate
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: Tags assigned to the activation.
          title: Tags
      title: Activation
      type: object
    ActivationCode:
      maxLength: 250
      minLength: 20
      type: string
    ActivationList:
      items:
        $ref: '#/components/schemas/Activation'
      type: array
    ResourceTypeForTagging:
      enum:
      - Document
      - ManagedInstance
      - MaintenanceWindow
      - Parameter
      - PatchBaseline
      - OpsItem
      - OpsMetadata
      - Automation
      - Association
      title: ResourceTypeForTagging
      type: string
    ResourceId:
      type: string
    AgentErrorCode:
      maxLength: 10
      type: string
    AggregatorSchemaOnly:
      type: boolean
    AlarmName:
      maxLength: 255
      minLength: 1
      pattern: ^(?!\s*$).+
      type: string
    Alarm:
      description: A CloudWatch alarm you apply to an automation or command.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/AlarmName'
          - description: The name of your CloudWatch alarm.
          title: Name
      required:
      - Name
      title: Alarm
      type: object
    AlarmList:
      items:
        $ref: '#/components/schemas/Alarm'
      maxItems: 1
      minItems: 1
      type: array
    AlarmConfiguration:
      description: The details for the CloudWatch alarm you want to apply to an automation
        or command.
      example:
        IgnorePollAlarmFailure: ""
        Alarms: ""
      properties:
        IgnorePollAlarmFailure:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "When this value is <i>true</i>, your automation or command\
              \ continues to run in cases where we can’t retrieve alarm status information\
              \ from CloudWatch. In cases where we successfully retrieve an alarm\
              \ status of OK or INSUFFICIENT_DATA, the automation or command continues\
              \ to run, regardless of this value. Default is <i>false</i>."
          title: IgnorePollAlarmFailure
        Alarms:
          allOf:
          - $ref: '#/components/schemas/AlarmList'
          - description: The name of the CloudWatch alarm specified in the configuration.
          title: Alarms
      required:
      - Alarms
      title: AlarmConfiguration
      type: object
    ExternalAlarmState:
      enum:
      - UNKNOWN
      - ALARM
      title: ExternalAlarmState
      type: string
    AlarmStateInformation:
      description: The details about the state of your CloudWatch alarm.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/AlarmName'
          - description: The name of your CloudWatch alarm.
          title: Name
        State:
          allOf:
          - $ref: '#/components/schemas/ExternalAlarmState'
          - description: The state of your CloudWatch alarm.
          title: State
      required:
      - Name
      - State
      title: AlarmStateInformation
      type: object
    AlarmStateInformationList:
      items:
        $ref: '#/components/schemas/AlarmStateInformation'
      maxItems: 1
      minItems: 1
      type: array
    AllowedPattern:
      maxLength: 1024
      minLength: 0
      type: string
    ApplyOnlyAtCronInterval:
      type: boolean
    ApproveAfterDays:
      maximum: 360
      minimum: 0
      type: integer
    OpsItemId:
      pattern: "^(oi)-[0-9a-f]{12}$"
      type: string
    OpsItemRelatedItemAssociationType:
      type: string
    OpsItemRelatedItemAssociationResourceType:
      type: string
    OpsItemRelatedItemAssociationResourceUri:
      type: string
    OpsItemRelatedItemAssociationId:
      type: string
    DocumentARN:
      pattern: "^[a-zA-Z0-9_\\-.:/]{3,128}$"
      type: string
    InstanceId:
      pattern: "(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)"
      title: InstanceId
      type: string
    AssociationId:
      pattern: "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"
      title: AssociationId
      type: string
    AssociationVersion:
      pattern: "([$]LATEST)|([1-9][0-9]*)"
      type: string
    DocumentVersion:
      pattern: "([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)"
      type: string
    Targets:
      items:
        $ref: '#/components/schemas/Target'
      maxItems: 5
      minItems: 0
      type: array
    DateTime:
      format: date-time
      type: string
    AssociationOverview:
      description: Information about the association.
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/StatusName'
          - description: "The status of the association. Status can be: Pending, Success,\
              \ or Failed."
          title: Status
        DetailedStatus:
          allOf:
          - $ref: '#/components/schemas/StatusName'
          - description: A detailed status of the association.
          title: DetailedStatus
        AssociationStatusAggregatedCount:
          allOf:
          - $ref: '#/components/schemas/AssociationStatusAggregatedCount'
          - description: "Returns the number of targets for the association status.\
              \ For example, if you created an association with two managed nodes,\
              \ and one of them was successful, this would return the count of managed\
              \ nodes by status."
          title: AssociationStatusAggregatedCount
      title: AssociationOverview
      type: object
    ScheduleExpression:
      maxLength: 256
      minLength: 1
      type: string
    AssociationName:
      pattern: "^[a-zA-Z0-9_\\-.]{3,128}$"
      type: string
    ScheduleOffset:
      maximum: 6
      minimum: 1
      type: integer
    TargetMaps:
      items:
        $ref: '#/components/schemas/TargetMap'
      maxItems: 300
      minItems: 0
      type: array
    Association:
      description: Describes an association of a Amazon Web Services Systems Manager
        document (SSM document) and a managed node.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DocumentARN'
          - description: The name of the SSM document.
          title: Name
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          - description: The managed node ID.
          title: InstanceId
        AssociationId:
          allOf:
          - $ref: '#/components/schemas/AssociationId'
          - description: The ID created by the system when you create an association.
              An association is a binding between a document and a set of targets
              with a schedule.
          title: AssociationId
        AssociationVersion:
          allOf:
          - $ref: '#/components/schemas/AssociationVersion'
          - description: The association version.
          title: AssociationVersion
        DocumentVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: "<p>The version of the document used in the association.\
              \ If you change a document version for a State Manager association,\
              \ Systems Manager immediately runs the association unless you previously\
              \ specifed the <code>apply-only-at-cron-interval</code> parameter.</p>\
              \ <important> <p>State Manager doesn't support running associations\
              \ that use a new version of a document if that document is shared from\
              \ another account. State Manager always runs the <code>default</code>\
              \ version of a document if shared from another account, even though\
              \ the Systems Manager console shows that a new version was processed.\
              \ If you want to run an association using a new version of a document\
              \ shared form another account, you must set the document version to\
              \ <code>default</code>.</p> </important>"
          title: DocumentVersion
        Targets:
          allOf:
          - $ref: '#/components/schemas/Targets'
          - description: The managed nodes targeted by the request to create an association.
              You can target all managed nodes in an Amazon Web Services account by
              specifying the <code>InstanceIds</code> key with a value of <code>*</code>.
          title: Targets
        LastExecutionDate:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date on which the association was last run.
          title: LastExecutionDate
        Overview:
          $ref: '#/components/schemas/Association_Overview'
        ScheduleExpression:
          allOf:
          - $ref: '#/components/schemas/ScheduleExpression'
          - description: A cron expression that specifies a schedule when the association
              runs. The schedule runs in Coordinated Universal Time (UTC).
          title: ScheduleExpression
        AssociationName:
          allOf:
          - $ref: '#/components/schemas/AssociationName'
          - description: The association name.
          title: AssociationName
        ScheduleOffset:
          allOf:
          - $ref: '#/components/schemas/ScheduleOffset'
          - description: Number of days to wait after the scheduled day to run an
              association.
          title: ScheduleOffset
        TargetMaps:
          allOf:
          - $ref: '#/components/schemas/TargetMaps'
          - description: A key-value mapping of document parameters to target resources.
              Both Targets and TargetMaps can't be specified together.
          title: TargetMaps
      title: Association
      type: object
    AssociationComplianceSeverity:
      enum:
      - CRITICAL
      - HIGH
      - MEDIUM
      - LOW
      - UNSPECIFIED
      title: AssociationComplianceSeverity
      type: string
    AssociationStatus:
      description: Describes an association status.
      properties:
        Date:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date when the status changed.
          title: Date
        Name:
          allOf:
          - $ref: '#/components/schemas/AssociationStatusName'
          - description: The status.
          title: Name
        Message:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: The reason for the status.
          title: Message
        AdditionalInfo:
          allOf:
          - $ref: '#/components/schemas/StatusAdditionalInfo'
          - description: A user-defined string.
          title: AdditionalInfo
      required:
      - Date
      - Message
      - Name
      title: AssociationStatus
      type: object
    AutomationTargetParameterName:
      maxLength: 50
      minLength: 1
      type: string
    Parameters:
      additionalProperties:
        $ref: '#/components/schemas/ParameterValueList'
      type: object
    InstanceAssociationOutputLocation:
      description: "<p>An S3 bucket where you want to store the results of this request.</p>\
        \ <p>For the minimal permissions required to enable Amazon S3 output for an\
        \ association, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-state-assoc.html\"\
        >Creating associations</a> in the <i>Systems Manager User Guide</i>. </p>"
      properties:
        S3Location:
          $ref: '#/components/schemas/InstanceAssociationOutputLocation_S3Location'
      title: InstanceAssociationOutputLocation
      type: object
    MaxErrors:
      maxLength: 7
      minLength: 1
      pattern: "^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$"
      type: string
    MaxConcurrency:
      maxLength: 7
      minLength: 1
      pattern: "^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$"
      type: string
    AssociationSyncCompliance:
      enum:
      - AUTO
      - MANUAL
      title: AssociationSyncCompliance
      type: string
    CalendarNameOrARNList:
      items:
        $ref: '#/components/schemas/CalendarNameOrARN'
      type: array
    TargetLocations:
      items:
        $ref: '#/components/schemas/TargetLocation'
      maxItems: 100
      minItems: 1
      type: array
    AssociationDescription:
      description: Describes the parameters for a document.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DocumentARN'
          - description: The name of the SSM document.
          title: Name
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          - description: The managed node ID.
          title: InstanceId
        AssociationVersion:
          allOf:
          - $ref: '#/components/schemas/AssociationVersion'
          - description: The association version.
          title: AssociationVersion
        Date:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date when the association was made.
          title: Date
        LastUpdateAssociationDate:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date when the association was last updated.
          title: LastUpdateAssociationDate
        Status:
          $ref: '#/components/schemas/UpdateAssociationStatusRequest_AssociationStatus'
        Overview:
          $ref: '#/components/schemas/Association_Overview'
        DocumentVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: The document version.
          title: DocumentVersion
        AutomationTargetParameterName:
          allOf:
          - $ref: '#/components/schemas/AutomationTargetParameterName'
          - description: Choose the parameter that will define how your automation
              will branch out. This target is required for associations that use an
              Automation runbook and target resources by using rate controls. Automation
              is a capability of Amazon Web Services Systems Manager.
          title: AutomationTargetParameterName
        Parameters:
          allOf:
          - $ref: '#/components/schemas/Parameters'
          - description: 'A description of the parameters for a document. '
          title: Parameters
        AssociationId:
          allOf:
          - $ref: '#/components/schemas/AssociationId'
          - description: The association ID.
          title: AssociationId
        Targets:
          allOf:
          - $ref: '#/components/schemas/Targets'
          - description: 'The managed nodes targeted by the request. '
          title: Targets
        ScheduleExpression:
          allOf:
          - $ref: '#/components/schemas/ScheduleExpression'
          - description: A cron expression that specifies a schedule when the association
              runs.
          title: ScheduleExpression
        OutputLocation:
          $ref: '#/components/schemas/AssociationDescription_OutputLocation'
        LastExecutionDate:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date on which the association was last run.
          title: LastExecutionDate
        LastSuccessfulExecutionDate:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The last date on which the association was successfully run.
          title: LastSuccessfulExecutionDate
        AssociationName:
          allOf:
          - $ref: '#/components/schemas/AssociationName'
          - description: The association name.
          title: AssociationName
        MaxErrors:
          allOf:
          - $ref: '#/components/schemas/MaxErrors'
          - description: "<p>The number of errors that are allowed before the system\
              \ stops sending requests to run the association on additional targets.\
              \ You can specify either an absolute number of errors, for example 10,\
              \ or a percentage of the target set, for example 10%. If you specify\
              \ 3, for example, the system stops sending requests when the fourth\
              \ error is received. If you specify 0, then the system stops sending\
              \ requests after the first error is returned. If you run an association\
              \ on 50 managed nodes and set <code>MaxError</code> to 10%, then the\
              \ system stops sending the request when the sixth error is received.</p>\
              \ <p>Executions that are already running an association when <code>MaxErrors</code>\
              \ is reached are allowed to complete, but some of these executions may\
              \ fail as well. If you need to ensure that there won't be more than\
              \ max-errors failed executions, set <code>MaxConcurrency</code> to 1\
              \ so that executions proceed one at a time.</p>"
          title: MaxErrors
        MaxConcurrency:
          allOf:
          - $ref: '#/components/schemas/MaxConcurrency'
          - description: "<p>The maximum number of targets allowed to run the association\
              \ at the same time. You can specify a number, for example 10, or a percentage\
              \ of the target set, for example 10%. The default value is 100%, which\
              \ means all targets run the association at the same time.</p> <p>If\
              \ a new managed node starts and attempts to run an association while\
              \ Systems Manager is running <code>MaxConcurrency</code> associations,\
              \ the association is allowed to run. During the next association interval,\
              \ the new managed node will process its association within the limit\
              \ specified for <code>MaxConcurrency</code>.</p>"
          title: MaxConcurrency
        ComplianceSeverity:
          allOf:
          - $ref: '#/components/schemas/AssociationComplianceSeverity'
          - description: The severity level that is assigned to the association.
          title: ComplianceSeverity
        SyncCompliance:
          allOf:
          - $ref: '#/components/schemas/AssociationSyncCompliance'
          - description: "<p>The mode for generating association compliance. You can\
              \ specify <code>AUTO</code> or <code>MANUAL</code>. In <code>AUTO</code>\
              \ mode, the system uses the status of the association execution to determine\
              \ the compliance status. If the association execution runs successfully,\
              \ then the association is <code>COMPLIANT</code>. If the association\
              \ execution doesn't run successfully, the association is <code>NON-COMPLIANT</code>.</p>\
              \ <p>In <code>MANUAL</code> mode, you must specify the <code>AssociationId</code>\
              \ as a parameter for the <a>PutComplianceItems</a> API operation. In\
              \ this case, compliance data isn't managed by State Manager, a capability\
              \ of Amazon Web Services Systems Manager. It is managed by your direct\
              \ call to the <a>PutComplianceItems</a> API operation.</p> <p>By default,\
              \ all associations use <code>AUTO</code> mode.</p>"
          title: SyncCompliance
        ApplyOnlyAtCronInterval:
          allOf:
          - $ref: '#/components/schemas/ApplyOnlyAtCronInterval'
          - description: "By default, when you create a new associations, the system\
              \ runs it immediately after it is created and then according to the\
              \ schedule you specified. Specify this option if you don't want an association\
              \ to run immediately after you create it. This parameter isn't supported\
              \ for rate expressions."
          title: ApplyOnlyAtCronInterval
        CalendarNames:
          allOf:
          - $ref: '#/components/schemas/CalendarNameOrARNList'
          - description: "The names or Amazon Resource Names (ARNs) of the Change\
              \ Calendar type documents your associations are gated under. The associations\
              \ only run when that change calendar is open. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-change-calendar\"\
              >Amazon Web Services Systems Manager Change Calendar</a>."
          title: CalendarNames
        TargetLocations:
          allOf:
          - $ref: '#/components/schemas/TargetLocations'
          - description: The combination of Amazon Web Services Regions and Amazon
              Web Services accounts where you want to run the association.
          title: TargetLocations
        ScheduleOffset:
          allOf:
          - $ref: '#/components/schemas/ScheduleOffset'
          - description: Number of days to wait after the scheduled day to run an
              association.
          title: ScheduleOffset
        TargetMaps:
          allOf:
          - $ref: '#/components/schemas/TargetMaps'
          - description: A key-value mapping of document parameters to target resources.
              Both Targets and TargetMaps can't be specified together.
          title: TargetMaps
        AlarmConfiguration:
          $ref: '#/components/schemas/AlarmConfiguration'
        TriggeredAlarms:
          allOf:
          - $ref: '#/components/schemas/AlarmStateInformationList'
          - description: The CloudWatch alarm that was invoked during the association.
          title: TriggeredAlarms
      title: AssociationDescription
      type: object
    AssociationDescriptionList:
      items:
        $ref: '#/components/schemas/AssociationDescription'
      type: array
    AssociationExecutionId:
      pattern: "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"
      type: string
    StatusName:
      type: string
    ResourceCountByStatus:
      type: string
    AssociationExecution:
      description: Includes information about the specified association.
      properties:
        AssociationId:
          allOf:
          - $ref: '#/components/schemas/AssociationId'
          - description: The association ID.
          title: AssociationId
        AssociationVersion:
          allOf:
          - $ref: '#/components/schemas/AssociationVersion'
          - description: The association version.
          title: AssociationVersion
        ExecutionId:
          allOf:
          - $ref: '#/components/schemas/AssociationExecutionId'
          - description: The execution ID for the association.
          title: ExecutionId
        Status:
          allOf:
          - $ref: '#/components/schemas/StatusName'
          - description: The status of the association execution.
          title: Status
        DetailedStatus:
          allOf:
          - $ref: '#/components/schemas/StatusName'
          - description: Detailed status information about the execution.
          title: DetailedStatus
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time the execution started.
          title: CreatedTime
        LastExecutionDate:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date of the last execution.
          title: LastExecutionDate
        ResourceCountByStatus:
          allOf:
          - $ref: '#/components/schemas/ResourceCountByStatus'
          - description: An aggregate status of the resources in the execution based
              on the status type.
          title: ResourceCountByStatus
        AlarmConfiguration:
          $ref: '#/components/schemas/AlarmConfiguration'
        TriggeredAlarms:
          allOf:
          - $ref: '#/components/schemas/AlarmStateInformationList'
          - description: The CloudWatch alarms that were invoked by the association.
          title: TriggeredAlarms
      title: AssociationExecution
      type: object
    AssociationExecutionFilterKey:
      enum:
      - ExecutionId
      - Status
      - CreatedTime
      title: AssociationExecutionFilterKey
      type: string
    AssociationExecutionFilterValue:
      minLength: 1
      type: string
    AssociationFilterOperatorType:
      enum:
      - EQUAL
      - LESS_THAN
      - GREATER_THAN
      title: AssociationFilterOperatorType
      type: string
    AssociationExecutionFilter:
      description: Filters used in the request.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/AssociationExecutionFilterKey'
          - description: The key value used in the request.
          title: Key
        Value:
          allOf:
          - $ref: '#/components/schemas/AssociationExecutionFilterValue'
          - description: The value specified for the key.
          title: Value
        Type:
          allOf:
          - $ref: '#/components/schemas/AssociationFilterOperatorType'
          - description: The filter type specified in the request.
          title: Type
      required:
      - Key
      - Type
      - Value
      title: AssociationExecutionFilter
      type: object
    AssociationExecutionFilterList:
      items:
        $ref: '#/components/schemas/AssociationExecutionFilter'
      minItems: 1
      type: array
    AssociationResourceId:
      maxLength: 100
      minLength: 1
      type: string
    AssociationResourceType:
      maxLength: 50
      minLength: 1
      type: string
    OutputSource:
      description: Information about the source where the association execution details
        are stored.
      properties:
        OutputSourceId:
          allOf:
          - $ref: '#/components/schemas/OutputSourceId'
          - description: "The ID of the output source, for example the URL of an S3\
              \ bucket."
          title: OutputSourceId
        OutputSourceType:
          allOf:
          - $ref: '#/components/schemas/OutputSourceType'
          - description: "The type of source where the association execution details\
              \ are stored, for example, Amazon S3."
          title: OutputSourceType
      title: OutputSource
      type: object
    AssociationExecutionTarget:
      description: Includes information about the specified association execution.
      properties:
        AssociationId:
          allOf:
          - $ref: '#/components/schemas/AssociationId'
          - description: The association ID.
          title: AssociationId
        AssociationVersion:
          allOf:
          - $ref: '#/components/schemas/AssociationVersion'
          - description: The association version.
          title: AssociationVersion
        ExecutionId:
          allOf:
          - $ref: '#/components/schemas/AssociationExecutionId'
          - description: The execution ID.
          title: ExecutionId
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/AssociationResourceId'
          - description: "The resource ID, for example, the managed node ID where\
              \ the association ran."
          title: ResourceId
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/AssociationResourceType'
          - description: "The resource type, for example, EC2."
          title: ResourceType
        Status:
          allOf:
          - $ref: '#/components/schemas/StatusName'
          - description: The association execution status.
          title: Status
        DetailedStatus:
          allOf:
          - $ref: '#/components/schemas/StatusName'
          - description: Detailed information about the execution status.
          title: DetailedStatus
        LastExecutionDate:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date of the last execution.
          title: LastExecutionDate
        OutputSource:
          $ref: '#/components/schemas/AssociationExecutionTarget_OutputSource'
      title: AssociationExecutionTarget
      type: object
    AssociationExecutionTargetsFilterKey:
      enum:
      - Status
      - ResourceId
      - ResourceType
      title: AssociationExecutionTargetsFilterKey
      type: string
    AssociationExecutionTargetsFilterValue:
      minLength: 1
      type: string
    AssociationExecutionTargetsFilter:
      description: Filters for the association execution.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/AssociationExecutionTargetsFilterKey'
          - description: The key value used in the request.
          title: Key
        Value:
          allOf:
          - $ref: '#/components/schemas/AssociationExecutionTargetsFilterValue'
          - description: The value specified for the key.
          title: Value
      required:
      - Key
      - Value
      title: AssociationExecutionTargetsFilter
      type: object
    AssociationExecutionTargetsFilterList:
      items:
        $ref: '#/components/schemas/AssociationExecutionTargetsFilter'
      minItems: 1
      type: array
    AssociationExecutionTargetsList:
      items:
        $ref: '#/components/schemas/AssociationExecutionTarget'
      type: array
    AssociationExecutionsList:
      items:
        $ref: '#/components/schemas/AssociationExecution'
      type: array
    AssociationFilterKey:
      enum:
      - InstanceId
      - Name
      - AssociationId
      - AssociationStatusName
      - LastExecutedBefore
      - LastExecutedAfter
      - AssociationName
      - ResourceGroupName
      title: AssociationFilterKey
      type: string
    AssociationFilterValue:
      minLength: 1
      type: string
    AssociationFilter:
      description: Describes a filter.
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/AssociationFilterKey'
          - description: <p>The name of the filter.</p> <note> <p> <code>InstanceId</code>
              has been deprecated.</p> </note>
          title: key
        value:
          allOf:
          - $ref: '#/components/schemas/AssociationFilterValue'
          - description: The filter value.
          title: value
      required:
      - key
      - value
      title: AssociationFilter
      type: object
    AssociationFilterList:
      items:
        $ref: '#/components/schemas/AssociationFilter'
      minItems: 1
      type: array
    AssociationIdList:
      items:
        $ref: '#/components/schemas/AssociationId'
      maxItems: 10
      minItems: 1
      type: array
    AssociationList:
      items:
        $ref: '#/components/schemas/Association'
      type: array
    AssociationStatusAggregatedCount:
      additionalProperties:
        $ref: '#/components/schemas/InstanceCount'
      type: object
    AssociationStatusName:
      enum:
      - Pending
      - Success
      - Failed
      title: AssociationStatusName
      type: string
    StatusMessage:
      maxLength: 1024
      minLength: 1
      type: string
    StatusAdditionalInfo:
      maxLength: 1024
      type: string
    InstanceCount:
      title: InstanceCount
      type: integer
    AssociationVersionInfo:
      description: Information about the association version.
      properties:
        AssociationId:
          allOf:
          - $ref: '#/components/schemas/AssociationId'
          - description: The ID created by the system when the association was created.
          title: AssociationId
        AssociationVersion:
          allOf:
          - $ref: '#/components/schemas/AssociationVersion'
          - description: The association version.
          title: AssociationVersion
        CreatedDate:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date the association version was created.
          title: CreatedDate
        Name:
          allOf:
          - $ref: '#/components/schemas/DocumentARN'
          - description: The name specified when the association was created.
          title: Name
        DocumentVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: The version of an Amazon Web Services Systems Manager document
              (SSM document) used when the association version was created.
          title: DocumentVersion
        Parameters:
          allOf:
          - $ref: '#/components/schemas/Parameters'
          - description: Parameters specified when the association version was created.
          title: Parameters
        Targets:
          allOf:
          - $ref: '#/components/schemas/Targets'
          - description: 'The targets specified for the association when the association
              version was created. '
          title: Targets
        ScheduleExpression:
          allOf:
          - $ref: '#/components/schemas/ScheduleExpression'
          - description: The cron or rate schedule specified for the association when
              the association version was created.
          title: ScheduleExpression
        OutputLocation:
          $ref: '#/components/schemas/AssociationVersionInfo_OutputLocation'
        AssociationName:
          allOf:
          - $ref: '#/components/schemas/AssociationName'
          - description: The name specified for the association version when the association
              version was created.
          title: AssociationName
        MaxErrors:
          allOf:
          - $ref: '#/components/schemas/MaxErrors'
          - description: "<p>The number of errors that are allowed before the system\
              \ stops sending requests to run the association on additional targets.\
              \ You can specify either an absolute number of errors, for example 10,\
              \ or a percentage of the target set, for example 10%. If you specify\
              \ 3, for example, the system stops sending requests when the fourth\
              \ error is received. If you specify 0, then the system stops sending\
              \ requests after the first error is returned. If you run an association\
              \ on 50 managed nodes and set <code>MaxError</code> to 10%, then the\
              \ system stops sending the request when the sixth error is received.</p>\
              \ <p>Executions that are already running an association when <code>MaxErrors</code>\
              \ is reached are allowed to complete, but some of these executions may\
              \ fail as well. If you need to ensure that there won't be more than\
              \ max-errors failed executions, set <code>MaxConcurrency</code> to 1\
              \ so that executions proceed one at a time.</p>"
          title: MaxErrors
        MaxConcurrency:
          allOf:
          - $ref: '#/components/schemas/MaxConcurrency'
          - description: "<p>The maximum number of targets allowed to run the association\
              \ at the same time. You can specify a number, for example 10, or a percentage\
              \ of the target set, for example 10%. The default value is 100%, which\
              \ means all targets run the association at the same time.</p> <p>If\
              \ a new managed node starts and attempts to run an association while\
              \ Systems Manager is running <code>MaxConcurrency</code> associations,\
              \ the association is allowed to run. During the next association interval,\
              \ the new managed node will process its association within the limit\
              \ specified for <code>MaxConcurrency</code>.</p>"
          title: MaxConcurrency
        ComplianceSeverity:
          allOf:
          - $ref: '#/components/schemas/AssociationComplianceSeverity'
          - description: The severity level that is assigned to the association.
          title: ComplianceSeverity
        SyncCompliance:
          allOf:
          - $ref: '#/components/schemas/AssociationSyncCompliance'
          - description: "<p>The mode for generating association compliance. You can\
              \ specify <code>AUTO</code> or <code>MANUAL</code>. In <code>AUTO</code>\
              \ mode, the system uses the status of the association execution to determine\
              \ the compliance status. If the association execution runs successfully,\
              \ then the association is <code>COMPLIANT</code>. If the association\
              \ execution doesn't run successfully, the association is <code>NON-COMPLIANT</code>.</p>\
              \ <p>In <code>MANUAL</code> mode, you must specify the <code>AssociationId</code>\
              \ as a parameter for the <a>PutComplianceItems</a> API operation. In\
              \ this case, compliance data isn't managed by State Manager, a capability\
              \ of Amazon Web Services Systems Manager. It is managed by your direct\
              \ call to the <a>PutComplianceItems</a> API operation.</p> <p>By default,\
              \ all associations use <code>AUTO</code> mode.</p>"
          title: SyncCompliance
        ApplyOnlyAtCronInterval:
          allOf:
          - $ref: '#/components/schemas/ApplyOnlyAtCronInterval'
          - description: "By default, when you create a new associations, the system\
              \ runs it immediately after it is created and then according to the\
              \ schedule you specified. Specify this option if you don't want an association\
              \ to run immediately after you create it. This parameter isn't supported\
              \ for rate expressions."
          title: ApplyOnlyAtCronInterval
        CalendarNames:
          allOf:
          - $ref: '#/components/schemas/CalendarNameOrARNList'
          - description: "The names or Amazon Resource Names (ARNs) of the Change\
              \ Calendar type documents your associations are gated under. The associations\
              \ for this version only run when that Change Calendar is open. For more\
              \ information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-change-calendar\"\
              >Amazon Web Services Systems Manager Change Calendar</a>."
          title: CalendarNames
        TargetLocations:
          allOf:
          - $ref: '#/components/schemas/TargetLocations'
          - description: The combination of Amazon Web Services Regions and Amazon
              Web Services accounts where you wanted to run the association when this
              association version was created.
          title: TargetLocations
        ScheduleOffset:
          allOf:
          - $ref: '#/components/schemas/ScheduleOffset'
          - description: Number of days to wait after the scheduled day to run an
              association.
          title: ScheduleOffset
        TargetMaps:
          allOf:
          - $ref: '#/components/schemas/TargetMaps'
          - description: A key-value mapping of document parameters to target resources.
              Both Targets and TargetMaps can't be specified together.
          title: TargetMaps
      title: AssociationVersionInfo
      type: object
    AssociationVersionList:
      items:
        $ref: '#/components/schemas/AssociationVersionInfo'
      minItems: 1
      type: array
    AttachmentName:
      pattern: "^[a-zA-Z0-9_\\-.]{3,128}$"
      type: string
    ContentLength:
      type: integer
    AttachmentHash:
      maxLength: 256
      type: string
    AttachmentHashType:
      enum:
      - Sha256
      title: AttachmentHashType
      type: string
    AttachmentUrl:
      type: string
    AttachmentContent:
      description: A structure that includes attributes that describe a document attachment.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/AttachmentName'
          - description: The name of an attachment.
          title: Name
        Size:
          allOf:
          - $ref: '#/components/schemas/ContentLength'
          - description: The size of an attachment in bytes.
          title: Size
        Hash:
          allOf:
          - $ref: '#/components/schemas/AttachmentHash'
          - description: The cryptographic hash value of the document content.
          title: Hash
        HashType:
          allOf:
          - $ref: '#/components/schemas/AttachmentHashType'
          - description: The hash algorithm used to calculate the hash value.
          title: HashType
        Url:
          allOf:
          - $ref: '#/components/schemas/AttachmentUrl'
          - description: The URL location of the attachment content.
          title: Url
      title: AttachmentContent
      type: object
    AttachmentContentList:
      items:
        $ref: '#/components/schemas/AttachmentContent'
      type: array
    AttachmentIdentifier:
      pattern: "^[a-zA-Z0-9_\\-.]{3,128}$"
      type: string
    AttachmentInformation:
      description: "An attribute of an attachment, such as the attachment name."
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/AttachmentName'
          - description: The name of the attachment.
          title: Name
      title: AttachmentInformation
      type: object
    AttachmentInformationList:
      items:
        $ref: '#/components/schemas/AttachmentInformation'
      type: array
    AttachmentsSourceKey:
      enum:
      - SourceUrl
      - S3FileUrl
      - AttachmentReference
      title: AttachmentsSourceKey
      type: string
    AttachmentsSourceValues:
      items:
        $ref: '#/components/schemas/AttachmentsSourceValue'
      maxItems: 1
      minItems: 1
      type: array
    AttachmentsSource:
      description: "Identifying information about a document attachment, including\
        \ the file name and a key-value pair that identifies the location of an attachment\
        \ to a document."
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/AttachmentsSourceKey'
          - description: The key of a key-value pair that identifies the location
              of an attachment to a document.
          title: Key
        Values:
          allOf:
          - $ref: '#/components/schemas/AttachmentsSourceValues'
          - description: "<p>The value of a key-value pair that identifies the location\
              \ of an attachment to a document. The format for <b>Value</b> depends\
              \ on the type of key you specify.</p> <ul> <li> <p>For the key <i>SourceUrl</i>,\
              \ the value is an S3 bucket location. For example:</p> <p> <code>\"\
              Values\": [ \"s3://doc-example-bucket/my-folder\" ]</code> </p> </li>\
              \ <li> <p>For the key <i>S3FileUrl</i>, the value is a file in an S3\
              \ bucket. For example:</p> <p> <code>\"Values\": [ \"s3://doc-example-bucket/my-folder/my-file.py\"\
              \ ]</code> </p> </li> <li> <p>For the key <i>AttachmentReference</i>,\
              \ the value is constructed from the name of another SSM document in\
              \ your account, a version number of that document, and a file attached\
              \ to that document version that you want to reuse. For example:</p>\
              \ <p> <code>\"Values\": [ \"MyOtherDocument/3/my-other-file.py\" ]</code>\
              \ </p> <p>However, if the SSM document is shared with you from another\
              \ account, the full SSM document ARN must be specified instead of the\
              \ document name only. For example:</p> <p> <code>\"Values\": [ \"arn:aws:ssm:us-east-2:111122223333:document/OtherAccountDocument/3/their-file.py\"\
              \ ]</code> </p> </li> </ul>"
          title: Values
        Name:
          allOf:
          - $ref: '#/components/schemas/AttachmentIdentifier'
          - description: The name of the document attachment file.
          title: Name
      title: AttachmentsSource
      type: object
    AttachmentsSourceList:
      items:
        $ref: '#/components/schemas/AttachmentsSource'
      maxItems: 20
      minItems: 0
      type: array
    AttachmentsSourceValue:
      maxLength: 1024
      minLength: 1
      title: AttachmentsSourceValue
      type: string
    AttributeName:
      maxLength: 64
      minLength: 1
      type: string
    AttributeValue:
      maxLength: 4096
      minLength: 0
      title: AttributeValue
      type: string
    AutomationActionName:
      pattern: "^aws:[a-zA-Z]{3,25}$"
      type: string
    AutomationExecutionId:
      maxLength: 36
      minLength: 36
      type: string
    DocumentName:
      pattern: "^[a-zA-Z0-9_\\-.]{3,128}$"
      type: string
    AutomationExecutionStatus:
      enum:
      - Pending
      - InProgress
      - Waiting
      - Success
      - TimedOut
      - Cancelling
      - Cancelled
      - Failed
      - PendingApproval
      - Approved
      - Rejected
      - Scheduled
      - RunbookInProgress
      - PendingChangeCalendarOverride
      - ChangeCalendarOverrideApproved
      - ChangeCalendarOverrideRejected
      - CompletedWithSuccess
      - CompletedWithFailure
      title: AutomationExecutionStatus
      type: string
    StepExecutionList:
      items:
        $ref: '#/components/schemas/StepExecution'
      type: array
    AutomationParameterMap:
      additionalProperties:
        $ref: '#/components/schemas/AutomationParameterValueList'
      maxProperties: 200
      minProperties: 1
      type: object
    String:
      title: String
      type: string
    ExecutionMode:
      enum:
      - Auto
      - Interactive
      title: ExecutionMode
      type: string
    AutomationParameterKey:
      maxLength: 50
      minLength: 1
      type: string
    ResolvedTargets:
      description: Information about targets that resolved during the Automation execution.
      properties:
        ParameterValues:
          allOf:
          - $ref: '#/components/schemas/TargetParameterList'
          - description: A list of parameter values sent to targets that resolved
              during the Automation execution.
          title: ParameterValues
        Truncated:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: A boolean value indicating whether the resolved target list
              is truncated.
          title: Truncated
      title: ResolvedTargets
      type: object
    ProgressCounters:
      description: An aggregate of step execution statuses displayed in the Amazon
        Web Services Systems Manager console for a multi-Region and multi-account
        Automation execution.
      properties:
        TotalSteps:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The total number of steps run in all specified Amazon Web
              Services Regions and Amazon Web Services accounts for the current Automation
              execution.
          title: TotalSteps
        SuccessSteps:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The total number of steps that successfully completed in
              all specified Amazon Web Services Regions and Amazon Web Services accounts
              for the current Automation execution.
          title: SuccessSteps
        FailedSteps:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The total number of steps that failed to run in all specified
              Amazon Web Services Regions and Amazon Web Services accounts for the
              current Automation execution.
          title: FailedSteps
        CancelledSteps:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The total number of steps that the system cancelled in all
              specified Amazon Web Services Regions and Amazon Web Services accounts
              for the current Automation execution.
          title: CancelledSteps
        TimedOutSteps:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The total number of steps that timed out in all specified
              Amazon Web Services Regions and Amazon Web Services accounts for the
              current Automation execution.
          title: TimedOutSteps
      title: ProgressCounters
      type: object
    AutomationSubtype:
      enum:
      - ChangeRequest
      title: AutomationSubtype
      type: string
    Runbooks:
      items:
        $ref: '#/components/schemas/Runbook'
      maxItems: 1
      minItems: 1
      type: array
    ChangeRequestName:
      maxLength: 1024
      minLength: 1
      type: string
    AutomationExecution:
      description: Detailed information about the current state of an individual Automation
        execution.
      properties:
        AutomationExecutionId:
          allOf:
          - $ref: '#/components/schemas/AutomationExecutionId'
          - description: The execution ID.
          title: AutomationExecutionId
        DocumentName:
          allOf:
          - $ref: '#/components/schemas/DocumentName'
          - description: The name of the Automation runbook used during the execution.
          title: DocumentName
        DocumentVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: The version of the document to use during execution.
          title: DocumentVersion
        ExecutionStartTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time the execution started.
          title: ExecutionStartTime
        ExecutionEndTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time the execution finished.
          title: ExecutionEndTime
        AutomationExecutionStatus:
          allOf:
          - $ref: '#/components/schemas/AutomationExecutionStatus'
          - description: The execution status of the Automation.
          title: AutomationExecutionStatus
        StepExecutions:
          allOf:
          - $ref: '#/components/schemas/StepExecutionList'
          - description: A list of details about the current state of all steps that
              comprise an execution. An Automation runbook contains a list of steps
              that are run in order.
          title: StepExecutions
        StepExecutionsTruncated:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "A boolean value that indicates if the response contains\
              \ the full list of the Automation step executions. If true, use the\
              \ DescribeAutomationStepExecutions API operation to get the full list\
              \ of step executions."
          title: StepExecutionsTruncated
        Parameters:
          allOf:
          - $ref: '#/components/schemas/AutomationParameterMap'
          - description: "The key-value map of execution parameters, which were supplied\
              \ when calling <a>StartAutomationExecution</a>."
          title: Parameters
        Outputs:
          allOf:
          - $ref: '#/components/schemas/AutomationParameterMap'
          - description: The list of execution outputs as defined in the Automation
              runbook.
          title: Outputs
        FailureMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "A message describing why an execution has failed, if the\
              \ status is set to Failed."
          title: FailureMessage
        Mode:
          allOf:
          - $ref: '#/components/schemas/ExecutionMode'
          - description: The automation execution mode.
          title: Mode
        ParentAutomationExecutionId:
          allOf:
          - $ref: '#/components/schemas/AutomationExecutionId'
          - description: The AutomationExecutionId of the parent automation.
          title: ParentAutomationExecutionId
        ExecutedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the user who ran the automation.
          title: ExecutedBy
        CurrentStepName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the step that is currently running.
          title: CurrentStepName
        CurrentAction:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The action of the step that is currently running.
          title: CurrentAction
        TargetParameterName:
          allOf:
          - $ref: '#/components/schemas/AutomationParameterKey'
          - description: The parameter name.
          title: TargetParameterName
        Targets:
          allOf:
          - $ref: '#/components/schemas/Targets'
          - description: The specified targets.
          title: Targets
        TargetMaps:
          allOf:
          - $ref: '#/components/schemas/TargetMaps'
          - description: The specified key-value mapping of document parameters to
              target resources.
          title: TargetMaps
        ResolvedTargets:
          $ref: '#/components/schemas/AutomationExecution_ResolvedTargets'
        MaxConcurrency:
          allOf:
          - $ref: '#/components/schemas/MaxConcurrency'
          - description: The <code>MaxConcurrency</code> value specified by the user
              when the execution started.
          title: MaxConcurrency
        MaxErrors:
          allOf:
          - $ref: '#/components/schemas/MaxErrors'
          - description: The MaxErrors value specified by the user when the execution
              started.
          title: MaxErrors
        Target:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The target of the execution.
          title: Target
        TargetLocations:
          allOf:
          - $ref: '#/components/schemas/TargetLocations'
          - description: The combination of Amazon Web Services Regions and/or Amazon
              Web Services accounts where you want to run the Automation.
          title: TargetLocations
        ProgressCounters:
          $ref: '#/components/schemas/AutomationExecution_ProgressCounters'
        AlarmConfiguration:
          $ref: '#/components/schemas/AutomationExecution_AlarmConfiguration'
        TriggeredAlarms:
          allOf:
          - $ref: '#/components/schemas/AlarmStateInformationList'
          - description: The CloudWatch alarm that was invoked by the automation.
          title: TriggeredAlarms
        AutomationSubtype:
          allOf:
          - $ref: '#/components/schemas/AutomationSubtype'
          - description: "The subtype of the Automation operation. Currently, the\
              \ only supported value is <code>ChangeRequest</code>."
          title: AutomationSubtype
        ScheduledTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date and time the Automation operation is scheduled to
              start.
          title: ScheduledTime
        Runbooks:
          allOf:
          - $ref: '#/components/schemas/Runbooks'
          - description: <p>Information about the Automation runbooks that are run
              as part of a runbook workflow.</p> <note> <p>The Automation runbooks
              specified for the runbook workflow can't run until all required approvals
              for the change request have been received.</p> </note>
          title: Runbooks
        OpsItemId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of an OpsItem that is created to represent a Change
              Manager change request.
          title: OpsItemId
        AssociationId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of a State Manager association used in the Automation
              operation.
          title: AssociationId
        ChangeRequestName:
          allOf:
          - $ref: '#/components/schemas/ChangeRequestName'
          - description: The name of the Change Manager change request.
          title: ChangeRequestName
      title: AutomationExecution
      type: object
    AutomationExecutionFilterKey:
      enum:
      - DocumentNamePrefix
      - ExecutionStatus
      - ExecutionId
      - ParentExecutionId
      - CurrentAction
      - StartTimeBefore
      - StartTimeAfter
      - AutomationType
      - TagKey
      - TargetResourceGroup
      - AutomationSubtype
      - OpsItemId
      title: AutomationExecutionFilterKey
      type: string
    AutomationExecutionFilterValueList:
      items:
        $ref: '#/components/schemas/AutomationExecutionFilterValue'
      maxItems: 10
      minItems: 1
      type: array
    AutomationExecutionFilter:
      description: A filter used to match specific automation executions. This is
        used to limit the scope of Automation execution information returned.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/AutomationExecutionFilterKey'
          - description: One or more keys to limit the results.
          title: Key
        Values:
          allOf:
          - $ref: '#/components/schemas/AutomationExecutionFilterValueList'
          - description: The values used to limit the execution information associated
              with the filter's key.
          title: Values
      required:
      - Key
      - Values
      title: AutomationExecutionFilter
      type: object
    AutomationExecutionFilterList:
      items:
        $ref: '#/components/schemas/AutomationExecutionFilter'
      maxItems: 10
      minItems: 1
      type: array
    AutomationExecutionFilterValue:
      maxLength: 150
      minLength: 1
      title: AutomationExecutionFilterValue
      type: string
    AutomationType:
      enum:
      - CrossAccount
      - Local
      title: AutomationType
      type: string
    AutomationExecutionMetadata:
      description: Details about a specific Automation execution.
      properties:
        AutomationExecutionId:
          allOf:
          - $ref: '#/components/schemas/AutomationExecutionId'
          - description: The execution ID.
          title: AutomationExecutionId
        DocumentName:
          allOf:
          - $ref: '#/components/schemas/DocumentName'
          - description: The name of the Automation runbook used during execution.
          title: DocumentName
        DocumentVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: The document version used during the execution.
          title: DocumentVersion
        AutomationExecutionStatus:
          allOf:
          - $ref: '#/components/schemas/AutomationExecutionStatus'
          - description: The status of the execution.
          title: AutomationExecutionStatus
        ExecutionStartTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time the execution started.
          title: ExecutionStartTime
        ExecutionEndTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time the execution finished. This isn't populated if
              the execution is still in progress.
          title: ExecutionEndTime
        ExecutedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The IAM role ARN of the user who ran the automation.
          title: ExecutedBy
        LogFile:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: An S3 bucket where execution information is stored.
          title: LogFile
        Outputs:
          allOf:
          - $ref: '#/components/schemas/AutomationParameterMap'
          - description: The list of execution outputs as defined in the Automation
              runbook.
          title: Outputs
        Mode:
          allOf:
          - $ref: '#/components/schemas/ExecutionMode'
          - description: The Automation execution mode.
          title: Mode
        ParentAutomationExecutionId:
          allOf:
          - $ref: '#/components/schemas/AutomationExecutionId'
          - description: The execution ID of the parent automation.
          title: ParentAutomationExecutionId
        CurrentStepName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the step that is currently running.
          title: CurrentStepName
        CurrentAction:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The action of the step that is currently running.
          title: CurrentAction
        FailureMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The list of execution outputs as defined in the Automation
              runbook.
          title: FailureMessage
        TargetParameterName:
          allOf:
          - $ref: '#/components/schemas/AutomationParameterKey'
          - description: The list of execution outputs as defined in the Automation
              runbook.
          title: TargetParameterName
        Targets:
          allOf:
          - $ref: '#/components/schemas/Targets'
          - description: The targets defined by the user when starting the automation.
          title: Targets
        TargetMaps:
          allOf:
          - $ref: '#/components/schemas/TargetMaps'
          - description: The specified key-value mapping of document parameters to
              target resources.
          title: TargetMaps
        ResolvedTargets:
          $ref: '#/components/schemas/AutomationExecutionMetadata_ResolvedTargets'
        MaxConcurrency:
          allOf:
          - $ref: '#/components/schemas/MaxConcurrency'
          - description: The <code>MaxConcurrency</code> value specified by the user
              when starting the automation.
          title: MaxConcurrency
        MaxErrors:
          allOf:
          - $ref: '#/components/schemas/MaxErrors'
          - description: The <code>MaxErrors</code> value specified by the user when
              starting the automation.
          title: MaxErrors
        Target:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The list of execution outputs as defined in the Automation
              runbook.
          title: Target
        AutomationType:
          allOf:
          - $ref: '#/components/schemas/AutomationType'
          - description: "Use this filter with <a>DescribeAutomationExecutions</a>.\
              \ Specify either Local or CrossAccount. CrossAccount is an Automation\
              \ that runs in multiple Amazon Web Services Regions and Amazon Web Services\
              \ accounts. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-automation-multiple-accounts-and-regions.html\"\
              >Running Automation workflows in multiple Amazon Web Services Regions\
              \ and accounts</a> in the <i>Amazon Web Services Systems Manager User\
              \ Guide</i>. "
          title: AutomationType
        AlarmConfiguration:
          $ref: '#/components/schemas/AutomationExecution_AlarmConfiguration'
        TriggeredAlarms:
          allOf:
          - $ref: '#/components/schemas/AlarmStateInformationList'
          - description: The CloudWatch alarm that was invoked by the automation.
          title: TriggeredAlarms
        AutomationSubtype:
          allOf:
          - $ref: '#/components/schemas/AutomationSubtype'
          - description: "The subtype of the Automation operation. Currently, the\
              \ only supported value is <code>ChangeRequest</code>."
          title: AutomationSubtype
        ScheduledTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date and time the Automation operation is scheduled to
              start.
          title: ScheduledTime
        Runbooks:
          allOf:
          - $ref: '#/components/schemas/Runbooks'
          - description: <p>Information about the Automation runbooks that are run
              during a runbook workflow in Change Manager.</p> <note> <p>The Automation
              runbooks specified for the runbook workflow can't run until all required
              approvals for the change request have been received.</p> </note>
          title: Runbooks
        OpsItemId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of an OpsItem that is created to represent a Change
              Manager change request.
          title: OpsItemId
        AssociationId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of a State Manager association used in the Automation
              operation.
          title: AssociationId
        ChangeRequestName:
          allOf:
          - $ref: '#/components/schemas/ChangeRequestName'
          - description: The name of the Change Manager change request.
          title: ChangeRequestName
      title: AutomationExecutionMetadata
      type: object
    AutomationExecutionMetadataList:
      items:
        $ref: '#/components/schemas/AutomationExecutionMetadata'
      type: array
    AutomationParameterValueList:
      items:
        $ref: '#/components/schemas/AutomationParameterValue'
      maxItems: 50
      minItems: 0
      title: AutomationParameterValueList
      type: array
    AutomationParameterValue:
      maxLength: 512
      minLength: 1
      title: AutomationParameterValue
      type: string
    BaselineDescription:
      maxLength: 1024
      minLength: 1
      type: string
    BaselineId:
      maxLength: 128
      minLength: 20
      pattern: "^[a-zA-Z0-9_\\-:/]{20,128}$"
      type: string
    BaselineName:
      maxLength: 128
      minLength: 3
      pattern: "^[a-zA-Z0-9_\\-.]{3,128}$"
      type: string
    OperatingSystem:
      enum:
      - WINDOWS
      - AMAZON_LINUX
      - AMAZON_LINUX_2
      - AMAZON_LINUX_2022
      - UBUNTU
      - REDHAT_ENTERPRISE_LINUX
      - SUSE
      - CENTOS
      - ORACLE_LINUX
      - DEBIAN
      - MACOS
      - RASPBIAN
      - ROCKY_LINUX
      - ALMA_LINUX
      - AMAZON_LINUX_2023
      title: OperatingSystem
      type: string
    PatchFilterGroup:
      description: "A set of patch filters, typically used for approval rules."
      example:
        PatchFilters: ""
      properties:
        PatchFilters:
          allOf:
          - $ref: '#/components/schemas/PatchFilterList'
          - description: The set of patch filters that make up the group.
          title: PatchFilters
      required:
      - PatchFilters
      title: PatchFilterGroup
      type: object
    PatchRuleGroup:
      description: A set of rules defining the approval rules for a patch baseline.
      example:
        PatchRules: ""
      properties:
        PatchRules:
          allOf:
          - $ref: '#/components/schemas/PatchRuleList'
          - description: The rules that make up the rule group.
          title: PatchRules
      required:
      - PatchRules
      title: PatchRuleGroup
      type: object
    PatchIdList:
      items:
        $ref: '#/components/schemas/PatchId'
      maxItems: 50
      minItems: 0
      type: array
    PatchComplianceLevel:
      enum:
      - CRITICAL
      - HIGH
      - MEDIUM
      - LOW
      - INFORMATIONAL
      - UNSPECIFIED
      title: PatchComplianceLevel
      type: string
    PatchAction:
      enum:
      - ALLOW_AS_DEPENDENCY
      - BLOCK
      title: PatchAction
      type: string
    PatchSourceList:
      items:
        $ref: '#/components/schemas/PatchSource'
      maxItems: 20
      minItems: 0
      type: array
    BaselineOverride:
      description: Defines the basic information about a patch baseline override.
      properties:
        OperatingSystem:
          allOf:
          - $ref: '#/components/schemas/OperatingSystem'
          - description: The operating system rule used by the patch baseline override.
          title: OperatingSystem
        GlobalFilters:
          $ref: '#/components/schemas/PatchFilterGroup'
        ApprovalRules:
          $ref: '#/components/schemas/PatchRuleGroup'
        ApprovedPatches:
          allOf:
          - $ref: '#/components/schemas/PatchIdList'
          - description: "<p>A list of explicitly approved patches for the baseline.</p>\
              \ <p>For information about accepted formats for lists of approved patches\
              \ and rejected patches, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-approved-rejected-package-name-formats.html\"\
              >About package name formats for approved and rejected patch lists</a>\
              \ in the <i>Amazon Web Services Systems Manager User Guide</i>.</p>"
          title: ApprovedPatches
        ApprovedPatchesComplianceLevel:
          allOf:
          - $ref: '#/components/schemas/PatchComplianceLevel'
          - description: "Defines the compliance level for approved patches. When\
              \ an approved patch is reported as missing, this value describes the\
              \ severity of the compliance violation."
          title: ApprovedPatchesComplianceLevel
        RejectedPatches:
          allOf:
          - $ref: '#/components/schemas/PatchIdList'
          - description: "<p>A list of explicitly rejected patches for the baseline.</p>\
              \ <p>For information about accepted formats for lists of approved patches\
              \ and rejected patches, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-approved-rejected-package-name-formats.html\"\
              >About package name formats for approved and rejected patch lists</a>\
              \ in the <i>Amazon Web Services Systems Manager User Guide</i>.</p>"
          title: RejectedPatches
        RejectedPatchesAction:
          allOf:
          - $ref: '#/components/schemas/PatchAction'
          - description: "The action for Patch Manager to take on patches included\
              \ in the <code>RejectedPackages</code> list. A patch can be allowed\
              \ only if it is a dependency of another package, or blocked entirely\
              \ along with packages that include it as a dependency."
          title: RejectedPatchesAction
        ApprovedPatchesEnableNonSecurity:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether the list of approved patches includes non-security
              updates that should be applied to the managed nodes. The default value
              is <code>false</code>. Applies to Linux managed nodes only.
          title: ApprovedPatchesEnableNonSecurity
        Sources:
          allOf:
          - $ref: '#/components/schemas/PatchSourceList'
          - description: "Information about the patches to use to update the managed\
              \ nodes, including target operating systems and source repositories.\
              \ Applies to Linux managed nodes only."
          title: Sources
      title: BaselineOverride
      type: object
    BatchErrorMessage:
      type: string
    CalendarNameOrARN:
      title: CalendarNameOrARN
      type: string
    CalendarState:
      enum:
      - OPEN
      - CLOSED
      title: CalendarState
      type: string
    CommandId:
      maxLength: 36
      minLength: 36
      type: string
    InstanceIdList:
      items:
        $ref: '#/components/schemas/InstanceId'
      maxItems: 50
      minItems: 0
      type: array
    MaintenanceWindowExecutionId:
      maxLength: 36
      minLength: 36
      pattern: "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
        -[0-9a-fA-F]{12}$"
      type: string
    Category:
      maxLength: 128
      title: Category
      type: string
    CategoryEnumList:
      items:
        $ref: '#/components/schemas/Category'
      maxItems: 3
      minItems: 0
      type: array
    CategoryList:
      items:
        $ref: '#/components/schemas/Category'
      maxItems: 3
      minItems: 0
      type: array
    ChangeDetailsValue:
      maxLength: 32768
      minLength: 1
      type: string
    ClientToken:
      maxLength: 64
      minLength: 1
      type: string
    CloudWatchLogGroupName:
      maxLength: 512
      minLength: 1
      type: string
    CloudWatchOutputEnabled:
      type: boolean
    CloudWatchOutputConfig:
      description: Configuration options for sending command output to Amazon CloudWatch
        Logs.
      example:
        CloudWatchOutputEnabled: ""
        CloudWatchLogGroupName: ""
      properties:
        CloudWatchLogGroupName:
          allOf:
          - $ref: '#/components/schemas/CloudWatchLogGroupName'
          - description: "<p>The name of the CloudWatch Logs log group where you want\
              \ to send command output. If you don't specify a group name, Amazon\
              \ Web Services Systems Manager automatically creates a log group for\
              \ you. The log group uses the following naming format:</p> <p> <code>aws/ssm/<i>SystemsManagerDocumentName</i>\
              \ </code> </p>"
          title: CloudWatchLogGroupName
        CloudWatchOutputEnabled:
          allOf:
          - $ref: '#/components/schemas/CloudWatchOutputEnabled'
          - description: Enables Systems Manager to send command output to CloudWatch
              Logs.
          title: CloudWatchOutputEnabled
      title: CloudWatchOutputConfig
      type: object
    Comment:
      maxLength: 100
      type: string
    CommandStatus:
      enum:
      - Pending
      - InProgress
      - Success
      - Cancelled
      - Failed
      - TimedOut
      - Cancelling
      title: CommandStatus
      type: string
    StatusDetails:
      maxLength: 100
      minLength: 0
      type: string
    S3Region:
      maxLength: 20
      minLength: 3
      type: string
    S3BucketName:
      maxLength: 63
      minLength: 3
      type: string
    S3KeyPrefix:
      maxLength: 500
      type: string
    TargetCount:
      type: integer
    CompletedCount:
      type: integer
    ErrorCount:
      type: integer
    DeliveryTimedOutCount:
      type: integer
    ServiceRole:
      type: string
    NotificationConfig:
      description: Configurations for sending notifications.
      properties:
        NotificationArn:
          allOf:
          - $ref: '#/components/schemas/NotificationArn'
          - description: An Amazon Resource Name (ARN) for an Amazon Simple Notification
              Service (Amazon SNS) topic. Run Command pushes notifications about command
              status changes to this topic.
          title: NotificationArn
        NotificationEvents:
          allOf:
          - $ref: '#/components/schemas/NotificationEventList'
          - description: "The different events for which you can receive notifications.\
              \ To learn more about these events, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/monitoring-sns-notifications.html\"\
              >Monitoring Systems Manager status changes using Amazon SNS notifications</a>\
              \ in the <i>Amazon Web Services Systems Manager User Guide</i>."
          title: NotificationEvents
        NotificationType:
          allOf:
          - $ref: '#/components/schemas/NotificationType'
          - description: "<p>The type of notification.</p> <ul> <li> <p> <code>Command</code>:\
              \ Receive notification when the status of a command changes.</p> </li>\
              \ <li> <p> <code>Invocation</code>: For commands sent to multiple managed\
              \ nodes, receive notification on a per-node basis when the status of\
              \ a command changes. </p> </li> </ul>"
          title: NotificationType
      title: NotificationConfig
      type: object
    TimeoutSeconds:
      maximum: 2592000
      minimum: 30
      type: integer
    Command:
      description: Describes a command request.
      properties:
        CommandId:
          allOf:
          - $ref: '#/components/schemas/CommandId'
          - description: A unique identifier for this command.
          title: CommandId
        DocumentName:
          allOf:
          - $ref: '#/components/schemas/DocumentName'
          - description: The name of the document requested for execution.
          title: DocumentName
        DocumentVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: The Systems Manager document (SSM document) version.
          title: DocumentVersion
        Comment:
          allOf:
          - $ref: '#/components/schemas/Comment'
          - description: "User-specified information about the command, such as a\
              \ brief description of what the command should do."
          title: Comment
        ExpiresAfter:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: "If a command expires, it changes status to <code>DeliveryTimedOut</code>\
              \ for all invocations that have the status <code>InProgress</code>,\
              \ <code>Pending</code>, or <code>Delayed</code>. <code>ExpiresAfter</code>\
              \ is calculated based on the total timeout for the overall command.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/monitor-commands.html?icmpid=docs_ec2_console#monitor-about-status-timeouts\"\
              >Understanding command timeout values</a> in the <i>Amazon Web Services\
              \ Systems Manager User Guide</i>."
          title: ExpiresAfter
        Parameters:
          allOf:
          - $ref: '#/components/schemas/Parameters'
          - description: The parameter values to be inserted in the document when
              running the command.
          title: Parameters
        InstanceIds:
          allOf:
          - $ref: '#/components/schemas/InstanceIdList'
          - description: The managed node IDs against which this command was requested.
          title: InstanceIds
        Targets:
          allOf:
          - $ref: '#/components/schemas/Targets'
          - description: "An array of search criteria that targets managed nodes using\
              \ a Key,Value combination that you specify. Targets is required if you\
              \ don't provide one or more managed node IDs in the call."
          title: Targets
        RequestedDateTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date and time the command was requested.
          title: RequestedDateTime
        Status:
          allOf:
          - $ref: '#/components/schemas/CommandStatus'
          - description: The status of the command.
          title: Status
        StatusDetails:
          allOf:
          - $ref: '#/components/schemas/StatusDetails'
          - description: "<p>A detailed status of the command execution. <code>StatusDetails</code>\
              \ includes more information than <code>Status</code> because it includes\
              \ states resulting from error and concurrency control parameters. <code>StatusDetails</code>\
              \ can show different results than Status. For more information about\
              \ these statuses, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/monitor-commands.html\"\
              >Understanding command statuses</a> in the <i>Amazon Web Services Systems\
              \ Manager User Guide</i>. StatusDetails can be one of the following\
              \ values:</p> <ul> <li> <p>Pending: The command hasn't been sent to\
              \ any managed nodes.</p> </li> <li> <p>In Progress: The command has\
              \ been sent to at least one managed node but hasn't reached a final\
              \ state on all managed nodes.</p> </li> <li> <p>Success: The command\
              \ successfully ran on all invocations. This is a terminal state.</p>\
              \ </li> <li> <p>Delivery Timed Out: The value of MaxErrors or more command\
              \ invocations shows a status of Delivery Timed Out. This is a terminal\
              \ state.</p> </li> <li> <p>Execution Timed Out: The value of MaxErrors\
              \ or more command invocations shows a status of Execution Timed Out.\
              \ This is a terminal state.</p> </li> <li> <p>Failed: The value of MaxErrors\
              \ or more command invocations shows a status of Failed. This is a terminal\
              \ state.</p> </li> <li> <p>Incomplete: The command was attempted on\
              \ all managed nodes and one or more invocations doesn't have a value\
              \ of Success but not enough invocations failed for the status to be\
              \ Failed. This is a terminal state.</p> </li> <li> <p>Cancelled: The\
              \ command was terminated before it was completed. This is a terminal\
              \ state.</p> </li> <li> <p>Rate Exceeded: The number of managed nodes\
              \ targeted by the command exceeded the account limit for pending invocations.\
              \ The system has canceled the command before running it on any managed\
              \ node. This is a terminal state.</p> </li> <li> <p>Delayed: The system\
              \ attempted to send the command to the managed node but wasn't successful.\
              \ The system retries again.</p> </li> </ul>"
          title: StatusDetails
        OutputS3Region:
          allOf:
          - $ref: '#/components/schemas/S3Region'
          - description: "(Deprecated) You can no longer specify this parameter. The\
              \ system ignores it. Instead, Systems Manager automatically determines\
              \ the Amazon Web Services Region of the S3 bucket."
          title: OutputS3Region
        OutputS3BucketName:
          allOf:
          - $ref: '#/components/schemas/S3BucketName'
          - description: The S3 bucket where the responses to the command executions
              should be stored. This was requested when issuing the command.
          title: OutputS3BucketName
        OutputS3KeyPrefix:
          allOf:
          - $ref: '#/components/schemas/S3KeyPrefix'
          - description: The S3 directory path inside the bucket where the responses
              to the command executions should be stored. This was requested when
              issuing the command.
          title: OutputS3KeyPrefix
        MaxConcurrency:
          allOf:
          - $ref: '#/components/schemas/MaxConcurrency'
          - description: "The maximum number of managed nodes that are allowed to\
              \ run the command at the same time. You can specify a number of managed\
              \ nodes, such as 10, or a percentage of nodes, such as 10%. The default\
              \ value is 50. For more information about how to use <code>MaxConcurrency</code>,\
              \ see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/run-command.html\"\
              >Running commands using Systems Manager Run Command</a> in the <i>Amazon\
              \ Web Services Systems Manager User Guide</i>."
          title: MaxConcurrency
        MaxErrors:
          allOf:
          - $ref: '#/components/schemas/MaxErrors'
          - description: "The maximum number of errors allowed before the system stops\
              \ sending the command to additional targets. You can specify a number\
              \ of errors, such as 10, or a percentage or errors, such as 10%. The\
              \ default value is <code>0</code>. For more information about how to\
              \ use <code>MaxErrors</code>, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/run-command.html\"\
              >Running commands using Systems Manager Run Command</a> in the <i>Amazon\
              \ Web Services Systems Manager User Guide</i>."
          title: MaxErrors
        TargetCount:
          allOf:
          - $ref: '#/components/schemas/TargetCount'
          - description: The number of targets for the command.
          title: TargetCount
        CompletedCount:
          allOf:
          - $ref: '#/components/schemas/CompletedCount'
          - description: "The number of targets for which the command invocation reached\
              \ a terminal state. Terminal states include the following: Success,\
              \ Failed, Execution Timed Out, Delivery Timed Out, Cancelled, Terminated,\
              \ or Undeliverable."
          title: CompletedCount
        ErrorCount:
          allOf:
          - $ref: '#/components/schemas/ErrorCount'
          - description: The number of targets for which the status is Failed or Execution
              Timed Out.
          title: ErrorCount
        DeliveryTimedOutCount:
          allOf:
          - $ref: '#/components/schemas/DeliveryTimedOutCount'
          - description: The number of targets for which the status is Delivery Timed
              Out.
          title: DeliveryTimedOutCount
        ServiceRole:
          allOf:
          - $ref: '#/components/schemas/ServiceRole'
          - description: "The Identity and Access Management (IAM) service role that\
              \ Run Command, a capability of Amazon Web Services Systems Manager,\
              \ uses to act on your behalf when sending notifications about command\
              \ status changes. "
          title: ServiceRole
        NotificationConfig:
          $ref: '#/components/schemas/Command_NotificationConfig'
        CloudWatchOutputConfig:
          $ref: '#/components/schemas/Command_CloudWatchOutputConfig'
        TimeoutSeconds:
          allOf:
          - $ref: '#/components/schemas/TimeoutSeconds'
          - description: The <code>TimeoutSeconds</code> value specified for a command.
          title: TimeoutSeconds
        AlarmConfiguration:
          $ref: '#/components/schemas/Command_AlarmConfiguration'
        TriggeredAlarms:
          allOf:
          - $ref: '#/components/schemas/AlarmStateInformationList'
          - description: The CloudWatch alarm that was invoked by the command.
          title: TriggeredAlarms
      title: Command
      type: object
    CommandFilterKey:
      enum:
      - InvokedAfter
      - InvokedBefore
      - Status
      - ExecutionStage
      - DocumentName
      title: CommandFilterKey
      type: string
    CommandFilterValue:
      maxLength: 128
      minLength: 1
      type: string
    CommandFilter:
      description: <p>Describes a command filter.</p> <note> <p>A managed node ID
        can't be specified when a command status is <code>Pending</code> because the
        command hasn't run on the node yet.</p> </note>
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/CommandFilterKey'
          - description: "<p>The name of the filter.</p> <note> <p>The <code>ExecutionStage</code>\
              \ filter can't be used with the <code>ListCommandInvocations</code>\
              \ operation, only with <code>ListCommands</code>.</p> </note>"
          title: key
        value:
          allOf:
          - $ref: '#/components/schemas/CommandFilterValue'
          - description: "<p>The filter value. Valid values for each filter key are\
              \ as follows:</p> <ul> <li> <p> <b>InvokedAfter</b>: Specify a timestamp\
              \ to limit your results. For example, specify <code>2021-07-07T00:00:00Z</code>\
              \ to see a list of command executions occurring July 7, 2021, and later.</p>\
              \ </li> <li> <p> <b>InvokedBefore</b>: Specify a timestamp to limit\
              \ your results. For example, specify <code>2021-07-07T00:00:00Z</code>\
              \ to see a list of command executions from before July 7, 2021.</p>\
              \ </li> <li> <p> <b>Status</b>: Specify a valid command status to see\
              \ a list of all command executions with that status. The status choices\
              \ depend on the API you call.</p> <p>The status values you can specify\
              \ for <code>ListCommands</code> are:</p> <ul> <li> <p> <code>Pending</code>\
              \ </p> </li> <li> <p> <code>InProgress</code> </p> </li> <li> <p> <code>Success</code>\
              \ </p> </li> <li> <p> <code>Cancelled</code> </p> </li> <li> <p> <code>Failed</code>\
              \ </p> </li> <li> <p> <code>TimedOut</code> (this includes both Delivery\
              \ and Execution time outs) </p> </li> <li> <p> <code>AccessDenied</code>\
              \ </p> </li> <li> <p> <code>DeliveryTimedOut</code> </p> </li> <li>\
              \ <p> <code>ExecutionTimedOut</code> </p> </li> <li> <p> <code>Incomplete</code>\
              \ </p> </li> <li> <p> <code>NoInstancesInTag</code> </p> </li> <li>\
              \ <p> <code>LimitExceeded</code> </p> </li> </ul> <p>The status values\
              \ you can specify for <code>ListCommandInvocations</code> are:</p> <ul>\
              \ <li> <p> <code>Pending</code> </p> </li> <li> <p> <code>InProgress</code>\
              \ </p> </li> <li> <p> <code>Delayed</code> </p> </li> <li> <p> <code>Success</code>\
              \ </p> </li> <li> <p> <code>Cancelled</code> </p> </li> <li> <p> <code>Failed</code>\
              \ </p> </li> <li> <p> <code>TimedOut</code> (this includes both Delivery\
              \ and Execution time outs) </p> </li> <li> <p> <code>AccessDenied</code>\
              \ </p> </li> <li> <p> <code>DeliveryTimedOut</code> </p> </li> <li>\
              \ <p> <code>ExecutionTimedOut</code> </p> </li> <li> <p> <code>Undeliverable</code>\
              \ </p> </li> <li> <p> <code>InvalidPlatform</code> </p> </li> <li> <p>\
              \ <code>Terminated</code> </p> </li> </ul> </li> <li> <p> <b>DocumentName</b>:\
              \ Specify name of the Amazon Web Services Systems Manager document (SSM\
              \ document) for which you want to see command execution results. For\
              \ example, specify <code>AWS-RunPatchBaseline</code> to see command\
              \ executions that used this SSM document to perform security patching\
              \ operations on managed nodes. </p> </li> <li> <p> <b>ExecutionStage</b>:\
              \ Specify one of the following values (<code>ListCommands</code> operations\
              \ only):</p> <ul> <li> <p> <code>Executing</code>: Returns a list of\
              \ command executions that are currently still running.</p> </li> <li>\
              \ <p> <code>Complete</code>: Returns a list of command executions that\
              \ have already completed. </p> </li> </ul> </li> </ul>"
          title: value
      required:
      - key
      - value
      title: CommandFilter
      type: object
    CommandFilterList:
      items:
        $ref: '#/components/schemas/CommandFilter'
      maxItems: 5
      minItems: 1
      type: array
    InstanceTagName:
      maxLength: 255
      type: string
    CommandInvocationStatus:
      enum:
      - Pending
      - InProgress
      - Delayed
      - Success
      - Cancelled
      - TimedOut
      - Failed
      - Cancelling
      title: CommandInvocationStatus
      type: string
    InvocationTraceOutput:
      maxLength: 2500
      type: string
    Url:
      type: string
    CommandPluginList:
      items:
        $ref: '#/components/schemas/CommandPlugin'
      type: array
    CommandInvocation:
      description: "An invocation is a copy of a command sent to a specific managed\
        \ node. A command can apply to one or more managed nodes. A command invocation\
        \ applies to one managed node. For example, if a user runs <code>SendCommand</code>\
        \ against three managed nodes, then a command invocation is created for each\
        \ requested managed node ID. A command invocation returns status and detail\
        \ information about a command you ran. "
      properties:
        CommandId:
          allOf:
          - $ref: '#/components/schemas/CommandId'
          - description: The command against which this invocation was requested.
          title: CommandId
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          - description: The managed node ID in which this invocation was requested.
          title: InstanceId
        InstanceName:
          allOf:
          - $ref: '#/components/schemas/InstanceTagName'
          - description: The fully qualified host name of the managed node.
          title: InstanceName
        Comment:
          allOf:
          - $ref: '#/components/schemas/Comment'
          - description: "User-specified information about the command, such as a\
              \ brief description of what the command should do."
          title: Comment
        DocumentName:
          allOf:
          - $ref: '#/components/schemas/DocumentName'
          - description: The document name that was requested for execution.
          title: DocumentName
        DocumentVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: The Systems Manager document (SSM document) version.
          title: DocumentVersion
        RequestedDateTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time and date the request was sent to this managed node.
          title: RequestedDateTime
        Status:
          allOf:
          - $ref: '#/components/schemas/CommandInvocationStatus'
          - description: "Whether or not the invocation succeeded, failed, or is pending."
          title: Status
        StatusDetails:
          allOf:
          - $ref: '#/components/schemas/StatusDetails'
          - description: "<p>A detailed status of the command execution for each invocation\
              \ (each managed node targeted by the command). StatusDetails includes\
              \ more information than Status because it includes states resulting\
              \ from error and concurrency control parameters. StatusDetails can show\
              \ different results than Status. For more information about these statuses,\
              \ see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/monitor-commands.html\"\
              >Understanding command statuses</a> in the <i>Amazon Web Services Systems\
              \ Manager User Guide</i>. StatusDetails can be one of the following\
              \ values:</p> <ul> <li> <p>Pending: The command hasn't been sent to\
              \ the managed node.</p> </li> <li> <p>In Progress: The command has been\
              \ sent to the managed node but hasn't reached a terminal state.</p>\
              \ </li> <li> <p>Success: The execution of the command or plugin was\
              \ successfully completed. This is a terminal state.</p> </li> <li> <p>Delivery\
              \ Timed Out: The command wasn't delivered to the managed node before\
              \ the delivery timeout expired. Delivery timeouts don't count against\
              \ the parent command's <code>MaxErrors</code> limit, but they do contribute\
              \ to whether the parent command status is Success or Incomplete. This\
              \ is a terminal state.</p> </li> <li> <p>Execution Timed Out: Command\
              \ execution started on the managed node, but the execution wasn't complete\
              \ before the execution timeout expired. Execution timeouts count against\
              \ the <code>MaxErrors</code> limit of the parent command. This is a\
              \ terminal state.</p> </li> <li> <p>Failed: The command wasn't successful\
              \ on the managed node. For a plugin, this indicates that the result\
              \ code wasn't zero. For a command invocation, this indicates that the\
              \ result code for one or more plugins wasn't zero. Invocation failures\
              \ count against the <code>MaxErrors</code> limit of the parent command.\
              \ This is a terminal state.</p> </li> <li> <p>Cancelled: The command\
              \ was terminated before it was completed. This is a terminal state.</p>\
              \ </li> <li> <p>Undeliverable: The command can't be delivered to the\
              \ managed node. The managed node might not exist or might not be responding.\
              \ Undeliverable invocations don't count against the parent command's\
              \ MaxErrors limit and don't contribute to whether the parent command\
              \ status is Success or Incomplete. This is a terminal state.</p> </li>\
              \ <li> <p>Terminated: The parent command exceeded its MaxErrors limit\
              \ and subsequent command invocations were canceled by the system. This\
              \ is a terminal state.</p> </li> <li> <p>Delayed: The system attempted\
              \ to send the command to the managed node but wasn't successful. The\
              \ system retries again.</p> </li> </ul>"
          title: StatusDetails
        TraceOutput:
          allOf:
          - $ref: '#/components/schemas/InvocationTraceOutput'
          - description: ' Gets the trace output sent by the agent. '
          title: TraceOutput
        StandardOutputUrl:
          allOf:
          - $ref: '#/components/schemas/Url'
          - description: "The URL to the plugin's StdOut file in Amazon Simple Storage\
              \ Service (Amazon S3), if the S3 bucket was defined for the parent command.\
              \ For an invocation, <code>StandardOutputUrl</code> is populated if\
              \ there is just one plugin defined for the command, and the S3 bucket\
              \ was defined for the command."
          title: StandardOutputUrl
        StandardErrorUrl:
          allOf:
          - $ref: '#/components/schemas/Url'
          - description: "The URL to the plugin's StdErr file in Amazon Simple Storage\
              \ Service (Amazon S3), if the S3 bucket was defined for the parent command.\
              \ For an invocation, <code>StandardErrorUrl</code> is populated if there\
              \ is just one plugin defined for the command, and the S3 bucket was\
              \ defined for the command."
          title: StandardErrorUrl
        CommandPlugins:
          allOf:
          - $ref: '#/components/schemas/CommandPluginList'
          - description: Plugins processed by the command.
          title: CommandPlugins
        ServiceRole:
          allOf:
          - $ref: '#/components/schemas/ServiceRole'
          - description: "The Identity and Access Management (IAM) service role that\
              \ Run Command, a capability of Amazon Web Services Systems Manager,\
              \ uses to act on your behalf when sending notifications about command\
              \ status changes on a per managed node basis."
          title: ServiceRole
        NotificationConfig:
          $ref: '#/components/schemas/CommandInvocation_NotificationConfig'
        CloudWatchOutputConfig:
          $ref: '#/components/schemas/Command_CloudWatchOutputConfig'
      title: CommandInvocation
      type: object
    CommandInvocationList:
      items:
        $ref: '#/components/schemas/CommandInvocation'
      type: array
    CommandList:
      items:
        $ref: '#/components/schemas/Command'
      type: array
    CommandMaxResults:
      maximum: 50
      minimum: 1
      type: integer
    CommandPluginName:
      minLength: 4
      type: string
    CommandPluginStatus:
      enum:
      - Pending
      - InProgress
      - Success
      - TimedOut
      - Cancelled
      - Failed
      title: CommandPluginStatus
      type: string
    ResponseCode:
      type: integer
    CommandPluginOutput:
      maxLength: 2500
      type: string
    CommandPlugin:
      description: Describes plugin details.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/CommandPluginName'
          - description: "The name of the plugin. Must be one of the following: <code>aws:updateAgent</code>,\
              \ <code>aws:domainjoin</code>, <code>aws:applications</code>, <code>aws:runPowerShellScript</code>,\
              \ <code>aws:psmodule</code>, <code>aws:cloudWatch</code>, <code>aws:runShellScript</code>,\
              \ or <code>aws:updateSSMAgent</code>. "
          title: Name
        Status:
          allOf:
          - $ref: '#/components/schemas/CommandPluginStatus'
          - description: The status of this plugin. You can run a document with multiple
              plugins.
          title: Status
        StatusDetails:
          allOf:
          - $ref: '#/components/schemas/StatusDetails'
          - description: "<p>A detailed status of the plugin execution. <code>StatusDetails</code>\
              \ includes more information than Status because it includes states resulting\
              \ from error and concurrency control parameters. StatusDetails can show\
              \ different results than Status. For more information about these statuses,\
              \ see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/monitor-commands.html\"\
              >Understanding command statuses</a> in the <i>Amazon Web Services Systems\
              \ Manager User Guide</i>. StatusDetails can be one of the following\
              \ values:</p> <ul> <li> <p>Pending: The command hasn't been sent to\
              \ the managed node.</p> </li> <li> <p>In Progress: The command has been\
              \ sent to the managed node but hasn't reached a terminal state.</p>\
              \ </li> <li> <p>Success: The execution of the command or plugin was\
              \ successfully completed. This is a terminal state.</p> </li> <li> <p>Delivery\
              \ Timed Out: The command wasn't delivered to the managed node before\
              \ the delivery timeout expired. Delivery timeouts don't count against\
              \ the parent command's <code>MaxErrors</code> limit, but they do contribute\
              \ to whether the parent command status is Success or Incomplete. This\
              \ is a terminal state.</p> </li> <li> <p>Execution Timed Out: Command\
              \ execution started on the managed node, but the execution wasn't complete\
              \ before the execution timeout expired. Execution timeouts count against\
              \ the <code>MaxErrors</code> limit of the parent command. This is a\
              \ terminal state.</p> </li> <li> <p>Failed: The command wasn't successful\
              \ on the managed node. For a plugin, this indicates that the result\
              \ code wasn't zero. For a command invocation, this indicates that the\
              \ result code for one or more plugins wasn't zero. Invocation failures\
              \ count against the MaxErrors limit of the parent command. This is a\
              \ terminal state.</p> </li> <li> <p>Cancelled: The command was terminated\
              \ before it was completed. This is a terminal state.</p> </li> <li>\
              \ <p>Undeliverable: The command can't be delivered to the managed node.\
              \ The managed node might not exist, or it might not be responding. Undeliverable\
              \ invocations don't count against the parent command's MaxErrors limit,\
              \ and they don't contribute to whether the parent command status is\
              \ Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Terminated:\
              \ The parent command exceeded its MaxErrors limit and subsequent command\
              \ invocations were canceled by the system. This is a terminal state.</p>\
              \ </li> </ul>"
          title: StatusDetails
        ResponseCode:
          allOf:
          - $ref: '#/components/schemas/ResponseCode'
          - description: 'A numeric response code generated after running the plugin. '
          title: ResponseCode
        ResponseStartDateTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: 'The time the plugin started running. '
          title: ResponseStartDateTime
        ResponseFinishDateTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: "The time the plugin stopped running. Could stop prematurely\
              \ if, for example, a cancel command was sent. "
          title: ResponseFinishDateTime
        Output:
          allOf:
          - $ref: '#/components/schemas/CommandPluginOutput'
          - description: Output of the plugin execution.
          title: Output
        StandardOutputUrl:
          allOf:
          - $ref: '#/components/schemas/Url'
          - description: "The URL for the complete text written by the plugin to stdout\
              \ in Amazon S3. If the S3 bucket for the command wasn't specified, then\
              \ this string is empty."
          title: StandardOutputUrl
        StandardErrorUrl:
          allOf:
          - $ref: '#/components/schemas/Url'
          - description: "The URL for the complete text written by the plugin to stderr.\
              \ If execution isn't yet complete, then this string is empty."
          title: StandardErrorUrl
        OutputS3Region:
          allOf:
          - $ref: '#/components/schemas/S3Region'
          - description: "(Deprecated) You can no longer specify this parameter. The\
              \ system ignores it. Instead, Amazon Web Services Systems Manager automatically\
              \ determines the S3 bucket region."
          title: OutputS3Region
        OutputS3BucketName:
          allOf:
          - $ref: '#/components/schemas/S3BucketName'
          - description: "<p>The S3 bucket where the responses to the command executions\
              \ should be stored. This was requested when issuing the command. For\
              \ example, in the following response:</p> <p> <code>doc-example-bucket/ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix/i-02573cafcfEXAMPLE/awsrunShellScript</code>\
              \ </p> <p> <code>doc-example-bucket</code> is the name of the S3 bucket;</p>\
              \ <p> <code>ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix</code> is the name\
              \ of the S3 prefix;</p> <p> <code>i-02573cafcfEXAMPLE</code> is the\
              \ managed node ID;</p> <p> <code>awsrunShellScript</code> is the name\
              \ of the plugin.</p>"
          title: OutputS3BucketName
        OutputS3KeyPrefix:
          allOf:
          - $ref: '#/components/schemas/S3KeyPrefix'
          - description: "<p>The S3 directory path inside the bucket where the responses\
              \ to the command executions should be stored. This was requested when\
              \ issuing the command. For example, in the following response:</p> <p>\
              \ <code>doc-example-bucket/ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix/i-02573cafcfEXAMPLE/awsrunShellScript</code>\
              \ </p> <p> <code>doc-example-bucket</code> is the name of the S3 bucket;</p>\
              \ <p> <code>ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix</code> is the name\
              \ of the S3 prefix;</p> <p> <code>i-02573cafcfEXAMPLE</code> is the\
              \ managed node ID;</p> <p> <code>awsrunShellScript</code> is the name\
              \ of the plugin.</p>"
          title: OutputS3KeyPrefix
      title: CommandPlugin
      type: object
    ComplianceExecutionId:
      maxLength: 100
      type: string
    ComplianceExecutionType:
      maxLength: 50
      type: string
    ComplianceExecutionSummary:
      description: "A summary of the call execution that includes an execution ID,\
        \ the type of execution (for example, <code>Command</code>), and the date/time\
        \ of the execution using a datetime object that is saved in the following\
        \ format: yyyy-MM-dd'T'HH:mm:ss'Z'."
      properties:
        ExecutionTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: "The time the execution ran as a datetime object that is\
              \ saved in the following format: yyyy-MM-dd'T'HH:mm:ss'Z'."
          title: ExecutionTime
        ExecutionId:
          allOf:
          - $ref: '#/components/schemas/ComplianceExecutionId'
          - description: "An ID created by the system when <code>PutComplianceItems</code>\
              \ was called. For example, <code>CommandID</code> is a valid execution\
              \ ID. You can use this ID in subsequent calls."
          title: ExecutionId
        ExecutionType:
          allOf:
          - $ref: '#/components/schemas/ComplianceExecutionType'
          - description: "The type of execution. For example, <code>Command</code>\
              \ is a valid execution type."
          title: ExecutionType
      required:
      - ExecutionTime
      title: ComplianceExecutionSummary
      type: object
    ComplianceFilterValue:
      title: ComplianceFilterValue
      type: string
    ComplianceTypeName:
      maxLength: 100
      minLength: 1
      pattern: "[A-Za-z0-9_\\-]\\w+|Custom:[a-zA-Z0-9_\\-]\\w+"
      type: string
    ComplianceResourceType:
      maxLength: 50
      minLength: 1
      title: ComplianceResourceType
      type: string
    ComplianceResourceId:
      maxLength: 100
      minLength: 1
      title: ComplianceResourceId
      type: string
    ComplianceItemId:
      type: string
    ComplianceItemTitle:
      maxLength: 500
      type: string
    ComplianceStatus:
      enum:
      - COMPLIANT
      - NON_COMPLIANT
      title: ComplianceStatus
      type: string
    ComplianceSeverity:
      enum:
      - CRITICAL
      - HIGH
      - MEDIUM
      - LOW
      - INFORMATIONAL
      - UNSPECIFIED
      title: ComplianceSeverity
      type: string
    ComplianceItemDetails:
      additionalProperties:
        $ref: '#/components/schemas/AttributeValue'
      type: object
    ComplianceItem:
      description: "Information about the compliance as defined by the resource type.\
        \ For example, for a patch resource type, <code>Items</code> includes information\
        \ about the PatchSeverity, Classification, and so on."
      properties:
        ComplianceType:
          allOf:
          - $ref: '#/components/schemas/ComplianceTypeName'
          - description: "The compliance type. For example, Association (for a State\
              \ Manager association), Patch, or Custom:<code>string</code> are all\
              \ valid compliance types."
          title: ComplianceType
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ComplianceResourceType'
          - description: The type of resource. <code>ManagedInstance</code> is currently
              the only supported resource type.
          title: ResourceType
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ComplianceResourceId'
          - description: "An ID for the resource. For a managed node, this is the\
              \ node ID."
          title: ResourceId
        Id:
          allOf:
          - $ref: '#/components/schemas/ComplianceItemId'
          - description: "An ID for the compliance item. For example, if the compliance\
              \ item is a Windows patch, the ID could be the number of the KB article;\
              \ for example: KB4010320."
          title: Id
        Title:
          allOf:
          - $ref: '#/components/schemas/ComplianceItemTitle'
          - description: "A title for the compliance item. For example, if the compliance\
              \ item is a Windows patch, the title could be the title of the KB article\
              \ for the patch; for example: Security Update for Active Directory Federation\
              \ Services."
          title: Title
        Status:
          allOf:
          - $ref: '#/components/schemas/ComplianceStatus'
          - description: "The status of the compliance item. An item is either COMPLIANT,\
              \ NON_COMPLIANT, or an empty string (for Windows patches that aren't\
              \ applicable)."
          title: Status
        Severity:
          allOf:
          - $ref: '#/components/schemas/ComplianceSeverity'
          - description: "The severity of the compliance status. Severity can be one\
              \ of the following: Critical, High, Medium, Low, Informational, Unspecified."
          title: Severity
        ExecutionSummary:
          $ref: '#/components/schemas/ComplianceItem_ExecutionSummary'
        Details:
          allOf:
          - $ref: '#/components/schemas/ComplianceItemDetails'
          - description: "A \"Key\": \"Value\" tag combination for the compliance\
              \ item."
          title: Details
      title: ComplianceItem
      type: object
    ComplianceItemContentHash:
      maxLength: 256
      type: string
    ComplianceItemEntry:
      description: Information about a compliance item.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ComplianceItemId'
          - description: "The compliance item ID. For example, if the compliance item\
              \ is a Windows patch, the ID could be the number of the KB article."
          title: Id
        Title:
          allOf:
          - $ref: '#/components/schemas/ComplianceItemTitle'
          - description: "The title of the compliance item. For example, if the compliance\
              \ item is a Windows patch, the title could be the title of the KB article\
              \ for the patch; for example: Security Update for Active Directory Federation\
              \ Services. "
          title: Title
        Severity:
          allOf:
          - $ref: '#/components/schemas/ComplianceSeverity'
          - description: "The severity of the compliance status. Severity can be one\
              \ of the following: Critical, High, Medium, Low, Informational, Unspecified."
          title: Severity
        Status:
          allOf:
          - $ref: '#/components/schemas/ComplianceStatus'
          - description: The status of the compliance item. An item is either COMPLIANT
              or NON_COMPLIANT.
          title: Status
        Details:
          allOf:
          - $ref: '#/components/schemas/ComplianceItemDetails'
          - description: "A \"Key\": \"Value\" tag combination for the compliance\
              \ item."
          title: Details
      required:
      - Severity
      - Status
      title: ComplianceItemEntry
      type: object
    ComplianceItemEntryList:
      items:
        $ref: '#/components/schemas/ComplianceItemEntry'
      maxItems: 10000
      minItems: 0
      type: array
    ComplianceItemList:
      items:
        $ref: '#/components/schemas/ComplianceItem'
      type: array
    ComplianceQueryOperatorType:
      enum:
      - EQUAL
      - NOT_EQUAL
      - BEGIN_WITH
      - LESS_THAN
      - GREATER_THAN
      title: ComplianceQueryOperatorType
      type: string
    ComplianceResourceIdList:
      items:
        $ref: '#/components/schemas/ComplianceResourceId'
      minItems: 1
      type: array
    ComplianceResourceTypeList:
      items:
        $ref: '#/components/schemas/ComplianceResourceType'
      minItems: 1
      type: array
    ComplianceStringFilterKey:
      maxLength: 200
      minLength: 1
      type: string
    ComplianceStringFilterValueList:
      items:
        $ref: '#/components/schemas/ComplianceFilterValue'
      maxItems: 20
      minItems: 1
      type: array
    ComplianceStringFilter:
      description: One or more filters. Use a filter to return a more specific list
        of results.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/ComplianceStringFilterKey'
          - description: The name of the filter.
          title: Key
        Values:
          allOf:
          - $ref: '#/components/schemas/ComplianceStringFilterValueList'
          - description: The value for which to search.
          title: Values
        Type:
          allOf:
          - $ref: '#/components/schemas/ComplianceQueryOperatorType'
          - description: "The type of comparison that should be performed for the\
              \ value: Equal, NotEqual, BeginWith, LessThan, or GreaterThan."
          title: Type
      title: ComplianceStringFilter
      type: object
    ComplianceStringFilterList:
      items:
        $ref: '#/components/schemas/ComplianceStringFilter'
      type: array
    ComplianceSummaryCount:
      type: integer
    CompliantSummary:
      description: A summary of resources that are compliant. The summary is organized
        according to the resource count for each compliance type.
      properties:
        CompliantCount:
          allOf:
          - $ref: '#/components/schemas/ComplianceSummaryCount'
          - description: The total number of resources that are compliant.
          title: CompliantCount
        SeveritySummary:
          $ref: '#/components/schemas/CompliantSummary_SeveritySummary'
      title: CompliantSummary
      type: object
    NonCompliantSummary:
      description: A summary of resources that aren't compliant. The summary is organized
        according to resource type.
      properties:
        NonCompliantCount:
          allOf:
          - $ref: '#/components/schemas/ComplianceSummaryCount'
          - description: The total number of compliance items that aren't compliant.
          title: NonCompliantCount
        SeveritySummary:
          $ref: '#/components/schemas/NonCompliantSummary_SeveritySummary'
      title: NonCompliantSummary
      type: object
    ComplianceSummaryItem:
      description: A summary of compliance information by compliance type.
      properties:
        ComplianceType:
          allOf:
          - $ref: '#/components/schemas/ComplianceTypeName'
          - description: "The type of compliance item. For example, the compliance\
              \ type can be Association, Patch, or Custom:string."
          title: ComplianceType
        CompliantSummary:
          $ref: '#/components/schemas/ComplianceSummaryItem_CompliantSummary'
        NonCompliantSummary:
          $ref: '#/components/schemas/ComplianceSummaryItem_NonCompliantSummary'
      title: ComplianceSummaryItem
      type: object
    ComplianceSummaryItemList:
      items:
        $ref: '#/components/schemas/ComplianceSummaryItem'
      type: array
    ComplianceUploadType:
      enum:
      - COMPLETE
      - PARTIAL
      title: ComplianceUploadType
      type: string
    SeveritySummary:
      description: The number of managed nodes found for each patch severity level
        defined in the request filter.
      properties:
        CriticalCount:
          allOf:
          - $ref: '#/components/schemas/ComplianceSummaryCount'
          - description: The total number of resources or compliance items that have
              a severity level of <code>Critical</code>. Critical severity is determined
              by the organization that published the compliance items.
          title: CriticalCount
        HighCount:
          allOf:
          - $ref: '#/components/schemas/ComplianceSummaryCount'
          - description: The total number of resources or compliance items that have
              a severity level of high. High severity is determined by the organization
              that published the compliance items.
          title: HighCount
        MediumCount:
          allOf:
          - $ref: '#/components/schemas/ComplianceSummaryCount'
          - description: The total number of resources or compliance items that have
              a severity level of medium. Medium severity is determined by the organization
              that published the compliance items.
          title: MediumCount
        LowCount:
          allOf:
          - $ref: '#/components/schemas/ComplianceSummaryCount'
          - description: The total number of resources or compliance items that have
              a severity level of low. Low severity is determined by the organization
              that published the compliance items.
          title: LowCount
        InformationalCount:
          allOf:
          - $ref: '#/components/schemas/ComplianceSummaryCount'
          - description: The total number of resources or compliance items that have
              a severity level of informational. Informational severity is determined
              by the organization that published the compliance items.
          title: InformationalCount
        UnspecifiedCount:
          allOf:
          - $ref: '#/components/schemas/ComplianceSummaryCount'
          - description: The total number of resources or compliance items that have
              a severity level of unspecified. Unspecified severity is determined
              by the organization that published the compliance items.
          title: UnspecifiedCount
      title: SeveritySummary
      type: object
    ComputerName:
      maxLength: 255
      minLength: 1
      type: string
    ConnectionStatus:
      enum:
      - Connected
      - NotConnected
      title: ConnectionStatus
      type: string
    RegistrationMetadataList:
      items:
        $ref: '#/components/schemas/RegistrationMetadataItem'
      type: array
    CreateAssociationBatchRequestEntries:
      items:
        $ref: '#/components/schemas/CreateAssociationBatchRequestEntry'
      minItems: 1
      type: array
    CreateAssociationBatchRequestEntry:
      description: Describes the association of a Amazon Web Services Systems Manager
        document (SSM document) and a managed node.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DocumentARN'
          - description: "<p>The name of the SSM document that contains the configuration\
              \ information for the managed node. You can specify Command or Automation\
              \ runbooks.</p> <p>You can specify Amazon Web Services-predefined documents,\
              \ documents you created, or a document that is shared with you from\
              \ another account.</p> <p>For SSM documents that are shared with you\
              \ from other Amazon Web Services accounts, you must specify the complete\
              \ SSM document ARN, in the following format:</p> <p> <code>arn:aws:ssm:<i>region</i>:<i>account-id</i>:document/<i>document-name</i>\
              \ </code> </p> <p>For example:</p> <p> <code>arn:aws:ssm:us-east-2:12345678912:document/My-Shared-Document</code>\
              \ </p> <p>For Amazon Web Services-predefined documents and SSM documents\
              \ you created in your account, you only need to specify the document\
              \ name. For example, <code>AWS-ApplyPatchBaseline</code> or <code>My-Document</code>.</p>"
          title: Name
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          - description: "<p>The managed node ID.</p> <note> <p> <code>InstanceId</code>\
              \ has been deprecated. To specify a managed node ID for an association,\
              \ use the <code>Targets</code> parameter. Requests that include the\
              \ parameter <code>InstanceID</code> with Systems Manager documents (SSM\
              \ documents) that use schema version 2.0 or later will fail. In addition,\
              \ if you use the parameter <code>InstanceId</code>, you can't use the\
              \ parameters <code>AssociationName</code>, <code>DocumentVersion</code>,\
              \ <code>MaxErrors</code>, <code>MaxConcurrency</code>, <code>OutputLocation</code>,\
              \ or <code>ScheduleExpression</code>. To use these parameters, you must\
              \ use the <code>Targets</code> parameter.</p> </note>"
          title: InstanceId
        Parameters:
          allOf:
          - $ref: '#/components/schemas/Parameters'
          - description: 'A description of the parameters for a document. '
          title: Parameters
        AutomationTargetParameterName:
          allOf:
          - $ref: '#/components/schemas/AutomationTargetParameterName'
          - description: Specify the target for the association. This target is required
              for associations that use an Automation runbook and target resources
              by using rate controls. Automation is a capability of Amazon Web Services
              Systems Manager.
          title: AutomationTargetParameterName
        DocumentVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: The document version.
          title: DocumentVersion
        Targets:
          allOf:
          - $ref: '#/components/schemas/Targets'
          - description: The managed nodes targeted by the request.
          title: Targets
        ScheduleExpression:
          allOf:
          - $ref: '#/components/schemas/ScheduleExpression'
          - description: A cron expression that specifies a schedule when the association
              runs.
          title: ScheduleExpression
        OutputLocation:
          $ref: '#/components/schemas/UpdateAssociationRequest_OutputLocation'
        AssociationName:
          allOf:
          - $ref: '#/components/schemas/AssociationName'
          - description: Specify a descriptive name for the association.
          title: AssociationName
        MaxErrors:
          allOf:
          - $ref: '#/components/schemas/MaxErrors'
          - description: "<p>The number of errors that are allowed before the system\
              \ stops sending requests to run the association on additional targets.\
              \ You can specify either an absolute number of errors, for example 10,\
              \ or a percentage of the target set, for example 10%. If you specify\
              \ 3, for example, the system stops sending requests when the fourth\
              \ error is received. If you specify 0, then the system stops sending\
              \ requests after the first error is returned. If you run an association\
              \ on 50 managed nodes and set <code>MaxError</code> to 10%, then the\
              \ system stops sending the request when the sixth error is received.</p>\
              \ <p>Executions that are already running an association when <code>MaxErrors</code>\
              \ is reached are allowed to complete, but some of these executions may\
              \ fail as well. If you need to ensure that there won't be more than\
              \ max-errors failed executions, set <code>MaxConcurrency</code> to 1\
              \ so that executions proceed one at a time.</p>"
          title: MaxErrors
        MaxConcurrency:
          allOf:
          - $ref: '#/components/schemas/MaxConcurrency'
          - description: "<p>The maximum number of targets allowed to run the association\
              \ at the same time. You can specify a number, for example 10, or a percentage\
              \ of the target set, for example 10%. The default value is 100%, which\
              \ means all targets run the association at the same time.</p> <p>If\
              \ a new managed node starts and attempts to run an association while\
              \ Systems Manager is running <code>MaxConcurrency</code> associations,\
              \ the association is allowed to run. During the next association interval,\
              \ the new managed node will process its association within the limit\
              \ specified for <code>MaxConcurrency</code>.</p>"
          title: MaxConcurrency
        ComplianceSeverity:
          allOf:
          - $ref: '#/components/schemas/AssociationComplianceSeverity'
          - description: The severity level to assign to the association.
          title: ComplianceSeverity
        SyncCompliance:
          allOf:
          - $ref: '#/components/schemas/AssociationSyncCompliance'
          - description: "<p>The mode for generating association compliance. You can\
              \ specify <code>AUTO</code> or <code>MANUAL</code>. In <code>AUTO</code>\
              \ mode, the system uses the status of the association execution to determine\
              \ the compliance status. If the association execution runs successfully,\
              \ then the association is <code>COMPLIANT</code>. If the association\
              \ execution doesn't run successfully, the association is <code>NON-COMPLIANT</code>.\
              \ </p> <p>In <code>MANUAL</code> mode, you must specify the <code>AssociationId</code>\
              \ as a parameter for the <a>PutComplianceItems</a> API operation. In\
              \ this case, compliance data isn't managed by State Manager, a capability\
              \ of Amazon Web Services Systems Manager. It is managed by your direct\
              \ call to the <a>PutComplianceItems</a> API operation.</p> <p>By default,\
              \ all associations use <code>AUTO</code> mode.</p>"
          title: SyncCompliance
        ApplyOnlyAtCronInterval:
          allOf:
          - $ref: '#/components/schemas/ApplyOnlyAtCronInterval'
          - description: "By default, when you create a new associations, the system\
              \ runs it immediately after it is created and then according to the\
              \ schedule you specified. Specify this option if you don't want an association\
              \ to run immediately after you create it. This parameter isn't supported\
              \ for rate expressions."
          title: ApplyOnlyAtCronInterval
        CalendarNames:
          allOf:
          - $ref: '#/components/schemas/CalendarNameOrARNList'
          - description: "The names or Amazon Resource Names (ARNs) of the Change\
              \ Calendar type documents your associations are gated under. The associations\
              \ only run when that Change Calendar is open. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-change-calendar\"\
              >Amazon Web Services Systems Manager Change Calendar</a>."
          title: CalendarNames
        TargetLocations:
          allOf:
          - $ref: '#/components/schemas/TargetLocations'
          - description: Use this action to create an association in multiple Regions
              and multiple accounts.
          title: TargetLocations
        ScheduleOffset:
          allOf:
          - $ref: '#/components/schemas/ScheduleOffset'
          - description: Number of days to wait after the scheduled day to run an
              association.
          title: ScheduleOffset
        TargetMaps:
          allOf:
          - $ref: '#/components/schemas/TargetMaps'
          - description: A key-value mapping of document parameters to target resources.
              Both Targets and TargetMaps can't be specified together.
          title: TargetMaps
        AlarmConfiguration:
          $ref: '#/components/schemas/AlarmConfiguration'
      required:
      - Name
      title: CreateAssociationBatchRequestEntry
      type: object
    FailedCreateAssociationList:
      items:
        $ref: '#/components/schemas/FailedCreateAssociation'
      type: array
    DocumentContent:
      minLength: 1
      type: string
    DocumentRequiresList:
      items:
        $ref: '#/components/schemas/DocumentRequires'
      minItems: 1
      type: array
    DocumentDisplayName:
      maxLength: 1024
      pattern: "^[\\w\\.\\-\\:\\/ ]*$"
      type: string
    DocumentVersionName:
      pattern: "^[a-zA-Z0-9_\\-.]{1,128}$"
      type: string
    DocumentType:
      enum:
      - Command
      - Policy
      - Automation
      - Session
      - Package
      - ApplicationConfiguration
      - ApplicationConfigurationSchema
      - DeploymentStrategy
      - ChangeCalendar
      - Automation.ChangeTemplate
      - ProblemAnalysis
      - ProblemAnalysisTemplate
      - CloudFormation
      - ConformancePackTemplate
      - QuickSetup
      title: DocumentType
      type: string
    DocumentFormat:
      enum:
      - YAML
      - JSON
      - TEXT
      title: DocumentFormat
      type: string
    TargetType:
      maxLength: 200
      pattern: "^\\/[\\w\\.\\-\\:\\/]*$"
      type: string
    DocumentDescription:
      description: 'Describes an Amazon Web Services Systems Manager document (SSM
        document). '
      properties:
        Sha1:
          allOf:
          - $ref: '#/components/schemas/DocumentSha1'
          - description: "The SHA1 hash of the document, which you can use for verification."
          title: Sha1
        Hash:
          allOf:
          - $ref: '#/components/schemas/DocumentHash'
          - description: <p>The Sha256 or Sha1 hash created by the system when the
              document was created. </p> <note> <p>Sha1 hashes have been deprecated.</p>
              </note>
          title: Hash
        HashType:
          allOf:
          - $ref: '#/components/schemas/DocumentHashType'
          - description: <p>The hash type of the document. Valid values include <code>Sha256</code>
              or <code>Sha1</code>.</p> <note> <p>Sha1 hashes have been deprecated.</p>
              </note>
          title: HashType
        Name:
          allOf:
          - $ref: '#/components/schemas/DocumentARN'
          - description: The name of the SSM document.
          title: Name
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DocumentDisplayName'
          - description: "The friendly name of the SSM document. This value can differ\
              \ for each version of the document. If you want to update this value,\
              \ see <a>UpdateDocument</a>."
          title: DisplayName
        VersionName:
          allOf:
          - $ref: '#/components/schemas/DocumentVersionName'
          - description: The version of the artifact associated with the document.
          title: VersionName
        Owner:
          allOf:
          - $ref: '#/components/schemas/DocumentOwner'
          - description: The Amazon Web Services user that created the document.
          title: Owner
        CreatedDate:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date when the document was created.
          title: CreatedDate
        Status:
          allOf:
          - $ref: '#/components/schemas/DocumentStatus'
          - description: The status of the SSM document.
          title: Status
        StatusInformation:
          allOf:
          - $ref: '#/components/schemas/DocumentStatusInformation'
          - description: "A message returned by Amazon Web Services Systems Manager\
              \ that explains the <code>Status</code> value. For example, a <code>Failed</code>\
              \ status might be explained by the <code>StatusInformation</code> message,\
              \ \"The specified S3 bucket doesn't exist. Verify that the URL of the\
              \ S3 bucket is correct.\""
          title: StatusInformation
        DocumentVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: The document version.
          title: DocumentVersion
        Description:
          allOf:
          - $ref: '#/components/schemas/DescriptionInDocument'
          - description: 'A description of the document. '
          title: Description
        Parameters:
          allOf:
          - $ref: '#/components/schemas/DocumentParameterList'
          - description: A description of the parameters for a document.
          title: Parameters
        PlatformTypes:
          allOf:
          - $ref: '#/components/schemas/PlatformTypeList'
          - description: 'The list of operating system (OS) platforms compatible with
              this SSM document. '
          title: PlatformTypes
        DocumentType:
          allOf:
          - $ref: '#/components/schemas/DocumentType'
          - description: The type of document.
          title: DocumentType
        SchemaVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentSchemaVersion'
          - description: The schema version.
          title: SchemaVersion
        LatestVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: The latest version of the document.
          title: LatestVersion
        DefaultVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: The default version.
          title: DefaultVersion
        DocumentFormat:
          allOf:
          - $ref: '#/components/schemas/DocumentFormat'
          - description: "The document format, either JSON or YAML."
          title: DocumentFormat
        TargetType:
          allOf:
          - $ref: '#/components/schemas/TargetType'
          - description: "The target type which defines the kinds of resources the\
              \ document can run on. For example, <code>/AWS::EC2::Instance</code>.\
              \ For a list of valid resource types, see <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html\"\
              >Amazon Web Services resource and property types reference</a> in the\
              \ <i>CloudFormation User Guide</i>. "
          title: TargetType
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "The tags, or metadata, that have been applied to the document."
          title: Tags
        AttachmentsInformation:
          allOf:
          - $ref: '#/components/schemas/AttachmentInformationList'
          - description: "Details about the document attachments, including names,\
              \ locations, sizes, and so on."
          title: AttachmentsInformation
        Requires:
          allOf:
          - $ref: '#/components/schemas/DocumentRequiresList'
          - description: "A list of SSM documents required by a document. For example,\
              \ an <code>ApplicationConfiguration</code> document requires an <code>ApplicationConfigurationSchema</code>\
              \ document."
          title: Requires
        Author:
          allOf:
          - $ref: '#/components/schemas/DocumentAuthor'
          - description: The user in your organization who created the document.
          title: Author
        ReviewInformation:
          allOf:
          - $ref: '#/components/schemas/ReviewInformationList'
          - description: Details about the review of a document.
          title: ReviewInformation
        ApprovedVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: The version of the document currently approved for use in
              the organization.
          title: ApprovedVersion
        PendingReviewVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: The version of the document that is currently under review.
          title: PendingReviewVersion
        ReviewStatus:
          allOf:
          - $ref: '#/components/schemas/ReviewStatus'
          - description: The current status of the review.
          title: ReviewStatus
        Category:
          allOf:
          - $ref: '#/components/schemas/CategoryList'
          - description: The classification of a document to help you identify and
              categorize its use.
          title: Category
        CategoryEnum:
          allOf:
          - $ref: '#/components/schemas/CategoryEnumList'
          - description: The value that identifies a document's category.
          title: CategoryEnum
      title: DocumentDescription
      type: object
    MaintenanceWindowName:
      maxLength: 128
      minLength: 3
      pattern: "^[a-zA-Z0-9_\\-.]{3,128}$"
      type: string
    MaintenanceWindowDescription:
      format: password
      maxLength: 128
      minLength: 1
      type: string
    MaintenanceWindowStringDateTime:
      type: string
    MaintenanceWindowSchedule:
      maxLength: 256
      minLength: 1
      type: string
    MaintenanceWindowTimezone:
      type: string
    MaintenanceWindowOffset:
      maximum: 6
      minimum: 1
      type: integer
    MaintenanceWindowDurationHours:
      maximum: 24
      minimum: 1
      type: integer
    MaintenanceWindowCutoff:
      maximum: 23
      minimum: 0
      type: integer
    MaintenanceWindowAllowUnassociatedTargets:
      type: boolean
    MaintenanceWindowId:
      maxLength: 20
      minLength: 20
      pattern: "^mw-[0-9a-f]{17}$"
      type: string
    OpsItemDescription:
      maxLength: 2048
      minLength: 1
      pattern: "[\\s\\S]*\\S[\\s\\S]*"
      type: string
    OpsItemType:
      type: string
    OpsItemOperationalData:
      additionalProperties:
        $ref: '#/components/schemas/OpsItemDataValue'
      type: object
    OpsItemNotifications:
      items:
        $ref: '#/components/schemas/OpsItemNotification'
      type: array
    OpsItemPriority:
      maximum: 5
      minimum: 1
      type: integer
    RelatedOpsItems:
      items:
        $ref: '#/components/schemas/RelatedOpsItem'
      type: array
    OpsItemSource:
      maxLength: 128
      minLength: 1
      pattern: ^(?!\s*$).+
      type: string
    OpsItemTitle:
      maxLength: 1024
      minLength: 1
      pattern: ^(?!\s*$).+
      type: string
    OpsItemCategory:
      maxLength: 64
      minLength: 1
      pattern: ^(?!\s*$).+
      type: string
    OpsItemSeverity:
      maxLength: 64
      minLength: 1
      pattern: ^(?!\s*$).+
      type: string
    OpsItemAccountId:
      pattern: "^[0-9]{12}$"
      type: string
    OpsItemArn:
      maxLength: 2048
      minLength: 20
      pattern: "arn:(aws[a-zA-Z-]*)?:ssm:[a-z0-9-\\.]{0,63}:[0-9]{12}:opsitem.*"
      type: string
    OpsMetadataResourceId:
      maxLength: 1024
      minLength: 1
      pattern: ^(?!\s*$).+
      type: string
    MetadataMap:
      additionalProperties:
        $ref: '#/components/schemas/MetadataValue'
      maxProperties: 5
      minProperties: 1
      type: object
    OpsMetadataArn:
      maxLength: 1011
      minLength: 1
      pattern: "arn:(aws[a-zA-Z-]*)?:ssm:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:opsmetadata\\\
        /([a-zA-Z0-9-_\\.\\/]*)"
      type: string
    ResourceDataSyncName:
      maxLength: 64
      minLength: 1
      type: string
    ResourceDataSyncS3Destination:
      description: Information about the target S3 bucket for the resource data sync.
      properties:
        BucketName:
          allOf:
          - $ref: '#/components/schemas/ResourceDataSyncS3BucketName'
          - description: The name of the S3 bucket where the aggregated data is stored.
          title: BucketName
        Prefix:
          allOf:
          - $ref: '#/components/schemas/ResourceDataSyncS3Prefix'
          - description: An Amazon S3 prefix for the bucket.
          title: Prefix
        SyncFormat:
          allOf:
          - $ref: '#/components/schemas/ResourceDataSyncS3Format'
          - description: "A supported sync format. The following format is currently\
              \ supported: JsonSerDe"
          title: SyncFormat
        Region:
          allOf:
          - $ref: '#/components/schemas/ResourceDataSyncS3Region'
          - description: The Amazon Web Services Region with the S3 bucket targeted
              by the resource data sync.
          title: Region
        AWSKMSKeyARN:
          allOf:
          - $ref: '#/components/schemas/ResourceDataSyncAWSKMSKeyARN'
          - description: The ARN of an encryption key for a destination in Amazon
              S3. Must belong to the same Region as the destination S3 bucket.
          title: AWSKMSKeyARN
        DestinationDataSharing:
          $ref: '#/components/schemas/ResourceDataSyncS3Destination_DestinationDataSharing'
      required:
      - BucketName
      - Region
      - SyncFormat
      title: ResourceDataSyncS3Destination
      type: object
    ResourceDataSyncType:
      maxLength: 64
      minLength: 1
      type: string
    ResourceDataSyncSource:
      description: Information about the source of the data included in the resource
        data sync.
      properties:
        SourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceDataSyncSourceType'
          - description: The type of data source for the resource data sync. <code>SourceType</code>
              is either <code>AwsOrganizations</code> (if an organization is present
              in Organizations) or <code>SingleAccountMultiRegions</code>.
          title: SourceType
        AwsOrganizationsSource:
          $ref: '#/components/schemas/ResourceDataSyncSource_AwsOrganizationsSource'
        SourceRegions:
          allOf:
          - $ref: '#/components/schemas/ResourceDataSyncSourceRegionList'
          - description: The <code>SyncSource</code> Amazon Web Services Regions included
              in the resource data sync.
          title: SourceRegions
        IncludeFutureRegions:
          allOf:
          - $ref: '#/components/schemas/ResourceDataSyncIncludeFutureRegions'
          - description: Whether to automatically synchronize and aggregate data from
              new Amazon Web Services Regions when those Regions come online.
          title: IncludeFutureRegions
        EnableAllOpsDataSources:
          allOf:
          - $ref: '#/components/schemas/ResourceDataSyncEnableAllOpsDataSources'
          - description: "When you create a resource data sync, if you choose one\
              \ of the Organizations options, then Systems Manager automatically enables\
              \ all OpsData sources in the selected Amazon Web Services Regions for\
              \ all Amazon Web Services accounts in your organization (or in the selected\
              \ organization units). For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/Explorer-resouce-data-sync-multiple-accounts-and-regions.html\"\
              >About multiple account and Region resource data syncs</a> in the <i>Amazon\
              \ Web Services Systems Manager User Guide</i>."
          title: EnableAllOpsDataSources
      required:
      - SourceRegions
      - SourceType
      title: ResourceDataSyncSource
      type: object
    DefaultBaseline:
      type: boolean
    InventoryItemTypeName:
      maxLength: 100
      minLength: 1
      pattern: ^(AWS|Custom):.*$
      type: string
    InventorySchemaDeleteOption:
      enum:
      - DisableSchema
      - DeleteSchema
      title: InventorySchemaDeleteOption
      type: string
    DryRun:
      type: boolean
    UUID:
      pattern: "[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}"
      type: string
    InventoryDeletionSummary:
      description: Information about the delete operation.
      properties:
        TotalCount:
          allOf:
          - $ref: '#/components/schemas/TotalCount'
          - description: The total number of items to delete. This count doesn't change
              during the delete operation.
          title: TotalCount
        RemainingCount:
          allOf:
          - $ref: '#/components/schemas/RemainingCount'
          - description: Remaining number of items to delete.
          title: RemainingCount
        SummaryItems:
          allOf:
          - $ref: '#/components/schemas/InventoryDeletionSummaryItems'
          - description: A list of counts and versions for deleted items.
          title: SummaryItems
      title: InventoryDeletionSummary
      type: object
    PSParameterName:
      maxLength: 2048
      minLength: 1
      title: PSParameterName
      type: string
    ParameterNameList:
      items:
        $ref: '#/components/schemas/PSParameterName'
      maxItems: 10
      minItems: 1
      type: array
    ResourceArnString:
      maxLength: 2048
      minLength: 20
      type: string
    PolicyId:
      type: string
    PolicyHash:
      type: string
    ManagedInstanceId:
      maxLength: 124
      minLength: 20
      pattern: "(^mi-[0-9a-f]{17}$)|(^eks_c:[0-9A-Za-z][A-Za-z0-9\\-_]{0,99}_\\w{17}$)"
      type: string
    PatchGroup:
      maxLength: 256
      minLength: 1
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      title: PatchGroup
      type: string
    MaintenanceWindowTargetId:
      maxLength: 36
      minLength: 36
      pattern: "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
        -[0-9a-fA-F]{12}$"
      type: string
    MaintenanceWindowTaskId:
      maxLength: 36
      minLength: 36
      pattern: "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
        -[0-9a-fA-F]{12}$"
      type: string
    DescribeActivationsFilterKeys:
      enum:
      - ActivationIds
      - DefaultInstanceName
      - IamRole
      title: DescribeActivationsFilterKeys
      type: string
    StringList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    DescribeActivationsFilter:
      description: Filter for the DescribeActivation API.
      properties:
        FilterKey:
          allOf:
          - $ref: '#/components/schemas/DescribeActivationsFilterKeys'
          - description: The name of the filter.
          title: FilterKey
        FilterValues:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: The filter values.
          title: FilterValues
      title: DescribeActivationsFilter
      type: object
    DescribeActivationsFilterList:
      items:
        $ref: '#/components/schemas/DescribeActivationsFilter'
      type: array
    MaxResults:
      maximum: 50
      minimum: 1
      type: integer
    NextToken:
      type: string
    StepExecutionFilterList:
      items:
        $ref: '#/components/schemas/StepExecutionFilter'
      maxItems: 6
      minItems: 1
      type: array
    PatchOrchestratorFilterList:
      items:
        $ref: '#/components/schemas/PatchOrchestratorFilter'
      maxItems: 5
      minItems: 0
      type: array
    PatchBaselineMaxResults:
      maximum: 100
      minimum: 1
      type: integer
    PatchList:
      items:
        $ref: '#/components/schemas/Patch'
      type: array
    DocumentPermissionType:
      enum:
      - Share
      title: DocumentPermissionType
      type: string
    DocumentPermissionMaxResults:
      maximum: 200
      minimum: 1
      type: integer
    EffectiveInstanceAssociationMaxResults:
      maximum: 5
      minimum: 1
      type: integer
    InstanceAssociationList:
      items:
        $ref: '#/components/schemas/InstanceAssociation'
      type: array
    EffectivePatchList:
      items:
        $ref: '#/components/schemas/EffectivePatch'
      type: array
    InstanceAssociationStatusInfos:
      items:
        $ref: '#/components/schemas/InstanceAssociationStatusInfo'
      type: array
    InstanceInformationFilterList:
      items:
        $ref: '#/components/schemas/InstanceInformationFilter'
      minItems: 0
      type: array
    InstanceInformationStringFilterList:
      items:
        $ref: '#/components/schemas/InstanceInformationStringFilter'
      minItems: 0
      type: array
    MaxResultsEC2Compatible:
      maximum: 50
      minimum: 5
      type: integer
    InstanceInformationList:
      items:
        $ref: '#/components/schemas/InstanceInformation'
      type: array
    InstancePatchStateFilterList:
      items:
        $ref: '#/components/schemas/InstancePatchStateFilter'
      maxItems: 4
      minItems: 0
      type: array
    PatchComplianceMaxResults:
      maximum: 100
      minimum: 10
      type: integer
    InstancePatchStatesList:
      items:
        $ref: '#/components/schemas/InstancePatchState'
      maxItems: 5
      minItems: 1
      type: array
    InstancePatchStateList:
      items:
        $ref: '#/components/schemas/InstancePatchState'
      type: array
    PatchComplianceDataList:
      items:
        $ref: '#/components/schemas/PatchComplianceData'
      type: array
    InventoryDeletionsList:
      items:
        $ref: '#/components/schemas/InventoryDeletionStatusItem'
      type: array
    MaintenanceWindowExecutionTaskId:
      maxLength: 36
      minLength: 36
      pattern: "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
        -[0-9a-fA-F]{12}$"
      title: MaintenanceWindowExecutionTaskId
      type: string
    MaintenanceWindowFilterList:
      items:
        $ref: '#/components/schemas/MaintenanceWindowFilter'
      maxItems: 5
      minItems: 0
      type: array
    MaintenanceWindowMaxResults:
      maximum: 100
      minimum: 10
      type: integer
    MaintenanceWindowExecutionTaskInvocationIdentityList:
      items:
        $ref: '#/components/schemas/MaintenanceWindowExecutionTaskInvocationIdentity'
      type: array
    MaintenanceWindowExecutionTaskIdentityList:
      items:
        $ref: '#/components/schemas/MaintenanceWindowExecutionTaskIdentity'
      type: array
    MaintenanceWindowExecutionList:
      items:
        $ref: '#/components/schemas/MaintenanceWindowExecution'
      type: array
    MaintenanceWindowResourceType:
      enum:
      - INSTANCE
      - RESOURCE_GROUP
      title: MaintenanceWindowResourceType
      type: string
    MaintenanceWindowSearchMaxResults:
      minimum: 1
      type: integer
    ScheduledWindowExecutionList:
      items:
        $ref: '#/components/schemas/ScheduledWindowExecution'
      type: array
    MaintenanceWindowTargetList:
      items:
        $ref: '#/components/schemas/MaintenanceWindowTarget'
      type: array
    MaintenanceWindowTaskList:
      items:
        $ref: '#/components/schemas/MaintenanceWindowTask'
      type: array
    MaintenanceWindowsForTargetList:
      items:
        $ref: '#/components/schemas/MaintenanceWindowIdentityForTarget'
      type: array
    MaintenanceWindowIdentityList:
      items:
        $ref: '#/components/schemas/MaintenanceWindowIdentity'
      type: array
    OpsItemFilters:
      items:
        $ref: '#/components/schemas/OpsItemFilter'
      type: array
    OpsItemMaxResults:
      maximum: 50
      minimum: 1
      type: integer
    OpsItemSummaries:
      items:
        $ref: '#/components/schemas/OpsItemSummary'
      type: array
    ParametersFilterList:
      items:
        $ref: '#/components/schemas/ParametersFilter'
      type: array
    ParameterStringFilterList:
      items:
        $ref: '#/components/schemas/ParameterStringFilter'
      type: array
    ParameterMetadataList:
      items:
        $ref: '#/components/schemas/ParameterMetadata'
      type: array
    PatchBaselineIdentityList:
      items:
        $ref: '#/components/schemas/PatchBaselineIdentity'
      type: array
    Integer:
      type: integer
    InstancesCount:
      type: integer
    PatchGroupPatchBaselineMappingList:
      items:
        $ref: '#/components/schemas/PatchGroupPatchBaselineMapping'
      type: array
    PatchProperty:
      enum:
      - PRODUCT
      - PRODUCT_FAMILY
      - CLASSIFICATION
      - MSRC_SEVERITY
      - PRIORITY
      - SEVERITY
      title: PatchProperty
      type: string
    PatchSet:
      enum:
      - OS
      - APPLICATION
      title: PatchSet
      type: string
    PatchPropertiesList:
      items:
        $ref: '#/components/schemas/PatchPropertyEntry'
      type: array
    SessionState:
      enum:
      - Active
      - History
      title: SessionState
      type: string
    SessionMaxResults:
      maximum: 200
      minimum: 1
      type: integer
    SessionFilterList:
      items:
        $ref: '#/components/schemas/SessionFilter'
      maxItems: 6
      minItems: 1
      type: array
    SessionList:
      items:
        $ref: '#/components/schemas/Session'
      type: array
    DescriptionInDocument:
      type: string
    DocumentAuthor:
      type: string
    DocumentDefaultVersionDescription:
      description: A default version of a document.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DocumentName'
          - description: The name of the document.
          title: Name
        DefaultVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: The default version of the document.
          title: DefaultVersion
        DefaultVersionName:
          allOf:
          - $ref: '#/components/schemas/DocumentVersionName'
          - description: The default version of the artifact associated with the document.
          title: DefaultVersionName
      title: DocumentDefaultVersionDescription
      type: object
    DocumentSha1:
      type: string
    DocumentHash:
      maxLength: 256
      type: string
    DocumentHashType:
      enum:
      - Sha256
      - Sha1
      title: DocumentHashType
      type: string
    DocumentOwner:
      type: string
    DocumentStatus:
      description: The status of a document.
      enum:
      - Creating
      - Active
      - Updating
      - Deleting
      - Failed
      title: DocumentStatus
      type: string
    DocumentStatusInformation:
      type: string
    DocumentParameterList:
      items:
        $ref: '#/components/schemas/DocumentParameter'
      type: array
    PlatformTypeList:
      items:
        $ref: '#/components/schemas/PlatformType'
      type: array
    DocumentSchemaVersion:
      pattern: "([0-9]+)\\.([0-9]+)"
      type: string
    ReviewInformationList:
      items:
        $ref: '#/components/schemas/ReviewInformation'
      minItems: 1
      type: array
    ReviewStatus:
      enum:
      - APPROVED
      - NOT_REVIEWED
      - PENDING
      - REJECTED
      title: ReviewStatus
      type: string
    DocumentFilterKey:
      enum:
      - Name
      - Owner
      - PlatformTypes
      - DocumentType
      title: DocumentFilterKey
      type: string
    DocumentFilterValue:
      minLength: 1
      type: string
    DocumentFilter:
      description: "This data type is deprecated. Instead, use <a>DocumentKeyValuesFilter</a>."
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/DocumentFilterKey'
          - description: The name of the filter.
          title: key
        value:
          allOf:
          - $ref: '#/components/schemas/DocumentFilterValue'
          - description: The value of the filter.
          title: value
      required:
      - key
      - value
      title: DocumentFilter
      type: object
    DocumentFilterList:
      items:
        $ref: '#/components/schemas/DocumentFilter'
      minItems: 1
      type: array
    DocumentIdentifier:
      description: Describes the name of a SSM document.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DocumentARN'
          - description: The name of the SSM document.
          title: Name
        CreatedDate:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date the SSM document was created.
          title: CreatedDate
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DocumentDisplayName'
          - description: "An optional field where you can specify a friendly name\
              \ for the SSM document. This value can differ for each version of the\
              \ document. If you want to update this value, see <a>UpdateDocument</a>."
          title: DisplayName
        Owner:
          allOf:
          - $ref: '#/components/schemas/DocumentOwner'
          - description: The Amazon Web Services user that created the document.
          title: Owner
        VersionName:
          allOf:
          - $ref: '#/components/schemas/DocumentVersionName'
          - description: "An optional field specifying the version of the artifact\
              \ associated with the document. For example, \"Release 12, Update 6\"\
              . This value is unique across all versions of a document, and can't\
              \ be changed."
          title: VersionName
        PlatformTypes:
          allOf:
          - $ref: '#/components/schemas/PlatformTypeList'
          - description: 'The operating system platform. '
          title: PlatformTypes
        DocumentVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: The document version.
          title: DocumentVersion
        DocumentType:
          allOf:
          - $ref: '#/components/schemas/DocumentType'
          - description: The document type.
          title: DocumentType
        SchemaVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentSchemaVersion'
          - description: The schema version.
          title: SchemaVersion
        DocumentFormat:
          allOf:
          - $ref: '#/components/schemas/DocumentFormat'
          - description: "The document format, either JSON or YAML."
          title: DocumentFormat
        TargetType:
          allOf:
          - $ref: '#/components/schemas/TargetType'
          - description: "The target type which defines the kinds of resources the\
              \ document can run on. For example, <code>/AWS::EC2::Instance</code>.\
              \ For a list of valid resource types, see <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html\"\
              >Amazon Web Services resource and property types reference</a> in the\
              \ <i>CloudFormation User Guide</i>. "
          title: TargetType
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "The tags, or metadata, that have been applied to the document."
          title: Tags
        Requires:
          allOf:
          - $ref: '#/components/schemas/DocumentRequiresList'
          - description: "A list of SSM documents required by a document. For example,\
              \ an <code>ApplicationConfiguration</code> document requires an <code>ApplicationConfigurationSchema</code>\
              \ document."
          title: Requires
        ReviewStatus:
          allOf:
          - $ref: '#/components/schemas/ReviewStatus'
          - description: The current status of a document review.
          title: ReviewStatus
        Author:
          allOf:
          - $ref: '#/components/schemas/DocumentAuthor'
          - description: The user in your organization who created the document.
          title: Author
      title: DocumentIdentifier
      type: object
    DocumentIdentifierList:
      items:
        $ref: '#/components/schemas/DocumentIdentifier'
      type: array
    DocumentKeyValuesFilterKey:
      maxLength: 128
      minLength: 1
      type: string
    DocumentKeyValuesFilterValues:
      items:
        $ref: '#/components/schemas/DocumentKeyValuesFilterValue'
      type: array
    DocumentKeyValuesFilter:
      description: "<p>One or more filters. Use a filter to return a more specific\
        \ list of documents.</p> <p>For keys, you can specify one or more tags that\
        \ have been applied to a document. </p> <p>You can also use Amazon Web Services-provided\
        \ keys, some of which have specific allowed values. These keys and their associated\
        \ values are as follows:</p> <dl> <dt>DocumentType</dt> <dd> <ul> <li> <p>\
        \ <code>ApplicationConfiguration</code> </p> </li> <li> <p> <code>ApplicationConfigurationSchema</code>\
        \ </p> </li> <li> <p> <code>Automation</code> </p> </li> <li> <p> <code>ChangeCalendar</code>\
        \ </p> </li> <li> <p> <code>Command</code> </p> </li> <li> <p> <code>Package</code>\
        \ </p> </li> <li> <p> <code>Policy</code> </p> </li> <li> <p> <code>Session</code>\
        \ </p> </li> </ul> </dd> <dt>Owner</dt> <dd> <p>Note that only one <code>Owner</code>\
        \ can be specified in a request. For example: <code>Key=Owner,Values=Self</code>.</p>\
        \ <ul> <li> <p> <code>Amazon</code> </p> </li> <li> <p> <code>Private</code>\
        \ </p> </li> <li> <p> <code>Public</code> </p> </li> <li> <p> <code>Self</code>\
        \ </p> </li> <li> <p> <code>ThirdParty</code> </p> </li> </ul> </dd> <dt>PlatformTypes</dt>\
        \ <dd> <ul> <li> <p> <code>Linux</code> </p> </li> <li> <p> <code>Windows</code>\
        \ </p> </li> </ul> </dd> </dl> <p> <code>Name</code> is another Amazon Web\
        \ Services-provided key. If you use <code>Name</code> as a key, you can use\
        \ a name prefix to return a list of documents. For example, in the Amazon\
        \ Web Services CLI, to return a list of all documents that begin with <code>Te</code>,\
        \ run the following command:</p> <p> <code>aws ssm list-documents --filters\
        \ Key=Name,Values=Te</code> </p> <p>You can also use the <code>TargetType</code>\
        \ Amazon Web Services-provided key. For a list of valid resource type values\
        \ that can be used with this key, see <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html\"\
        >Amazon Web Services resource and property types reference</a> in the <i>CloudFormation\
        \ User Guide</i>.</p> <p>If you specify more than two keys, only documents\
        \ that are identified by all the tags are returned in the results. If you\
        \ specify more than two values for a key, documents that are identified by\
        \ any of the values are returned in the results.</p> <p>To specify a custom\
        \ key-value pair, use the format <code>Key=tag:tagName,Values=valueName</code>.</p>\
        \ <p>For example, if you created a key called region and are using the Amazon\
        \ Web Services CLI to call the <code>list-documents</code> command: </p> <p>\
        \ <code>aws ssm list-documents --filters Key=tag:region,Values=east,west Key=Owner,Values=Self</code>\
        \ </p>"
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/DocumentKeyValuesFilterKey'
          - description: The name of the filter key.
          title: Key
        Values:
          allOf:
          - $ref: '#/components/schemas/DocumentKeyValuesFilterValues'
          - description: The value for the filter key.
          title: Values
      title: DocumentKeyValuesFilter
      type: object
    DocumentKeyValuesFilterList:
      items:
        $ref: '#/components/schemas/DocumentKeyValuesFilter'
      maxItems: 6
      minItems: 0
      type: array
    DocumentKeyValuesFilterValue:
      maxLength: 256
      minLength: 1
      title: DocumentKeyValuesFilterValue
      type: string
    DocumentMetadataEnum:
      enum:
      - DocumentReviews
      title: DocumentMetadataEnum
      type: string
    DocumentReviewerResponseList:
      items:
        $ref: '#/components/schemas/DocumentReviewerResponseSource'
      type: array
    DocumentMetadataResponseInfo:
      description: Details about the response to a document review request.
      properties:
        ReviewerResponse:
          allOf:
          - $ref: '#/components/schemas/DocumentReviewerResponseList'
          - description: Details about a reviewer's response to a document review
              request.
          title: ReviewerResponse
      title: DocumentMetadataResponseInfo
      type: object
    DocumentParameterName:
      type: string
    DocumentParameterType:
      enum:
      - String
      - StringList
      title: DocumentParameterType
      type: string
    DocumentParameterDescrption:
      type: string
    DocumentParameterDefaultValue:
      type: string
    DocumentParameter:
      description: 'Parameters specified in a Systems Manager document that run on
        the server when the command is run. '
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DocumentParameterName'
          - description: The name of the parameter.
          title: Name
        Type:
          allOf:
          - $ref: '#/components/schemas/DocumentParameterType'
          - description: The type of parameter. The type can be either String or StringList.
          title: Type
        Description:
          allOf:
          - $ref: '#/components/schemas/DocumentParameterDescrption'
          - description: "A description of what the parameter does, how to use it,\
              \ the default value, and whether or not the parameter is optional."
          title: Description
        DefaultValue:
          allOf:
          - $ref: '#/components/schemas/DocumentParameterDefaultValue'
          - description: "If specified, the default values for the parameters. Parameters\
              \ without a default value are required. Parameters with a default value\
              \ are optional."
          title: DefaultValue
      title: DocumentParameter
      type: object
    RequireType:
      maxLength: 128
      pattern: "^[a-zA-Z0-9_\\-.]{1,128}$"
      type: string
    DocumentRequires:
      description: An SSM document required by the current document.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DocumentARN'
          - description: The name of the required SSM document. The name can be an
              Amazon Resource Name (ARN).
          title: Name
        Version:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: The document version required by the current document.
          title: Version
        RequireType:
          allOf:
          - $ref: '#/components/schemas/RequireType'
          - description: The document type of the required SSM document.
          title: RequireType
        VersionName:
          allOf:
          - $ref: '#/components/schemas/DocumentVersionName'
          - description: "An optional field specifying the version of the artifact\
              \ associated with the document. For example, \"Release 12, Update 6\"\
              . This value is unique across all versions of a document, and can't\
              \ be changed."
          title: VersionName
      required:
      - Name
      title: DocumentRequires
      type: object
    DocumentReviewAction:
      enum:
      - SendForReview
      - UpdateReview
      - Approve
      - Reject
      title: DocumentReviewAction
      type: string
    DocumentReviewComment:
      maxLength: 1024
      minLength: 1
      pattern: ^(?!\s*$).+
      type: string
    DocumentReviewCommentSource:
      description: Information about comments added to a document review request.
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/DocumentReviewCommentType'
          - description: "The type of information added to a review request. Currently,\
              \ only the value <code>Comment</code> is supported."
          title: Type
        Content:
          allOf:
          - $ref: '#/components/schemas/DocumentReviewComment'
          - description: "The content of a comment entered by a user who requests\
              \ a review of a new document version, or who reviews the new version."
          title: Content
      title: DocumentReviewCommentSource
      type: object
    DocumentReviewCommentList:
      items:
        $ref: '#/components/schemas/DocumentReviewCommentSource'
      maxItems: 1
      minItems: 0
      type: array
    DocumentReviewCommentType:
      enum:
      - Comment
      title: DocumentReviewCommentType
      type: string
    DocumentReviewerResponseSource:
      description: Information about a reviewer's response to a document review request.
      properties:
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date and time that a reviewer entered a response to a
              document review request.
          title: CreateTime
        UpdatedTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date and time that a reviewer last updated a response
              to a document review request.
          title: UpdatedTime
        ReviewStatus:
          allOf:
          - $ref: '#/components/schemas/ReviewStatus'
          - description: "<p>The current review status of a new custom SSM document\
              \ created by a member of your organization, or of the latest version\
              \ of an existing SSM document.</p> <p>Only one version of a document\
              \ can be in the APPROVED state at a time. When a new version is approved,\
              \ the status of the previous version changes to REJECTED.</p> <p>Only\
              \ one version of a document can be in review, or PENDING, at a time.</p>"
          title: ReviewStatus
        Comment:
          allOf:
          - $ref: '#/components/schemas/DocumentReviewCommentList'
          - description: The comment entered by a reviewer as part of their document
              review response.
          title: Comment
        Reviewer:
          allOf:
          - $ref: '#/components/schemas/Reviewer'
          - description: The user in your organization assigned to review a document
              request.
          title: Reviewer
      title: DocumentReviewerResponseSource
      type: object
    Reviewer:
      maxLength: 50
      pattern: "^[a-zA-Z0-9_\\-.]{1,128}$"
      type: string
    DocumentReviews:
      description: Information about a document approval review.
      properties:
        Action:
          allOf:
          - $ref: '#/components/schemas/DocumentReviewAction'
          - description: The action to take on a document approval review request.
          title: Action
        Comment:
          allOf:
          - $ref: '#/components/schemas/DocumentReviewCommentList'
          - description: A comment entered by a user in your organization about the
              document review request.
          title: Comment
      required:
      - Action
      title: DocumentReviews
      type: object
    DocumentVersionInfo:
      description: Version information about the document.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DocumentName'
          - description: The document name.
          title: Name
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DocumentDisplayName'
          - description: "The friendly name of the SSM document. This value can differ\
              \ for each version of the document. If you want to update this value,\
              \ see <a>UpdateDocument</a>."
          title: DisplayName
        DocumentVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: The document version.
          title: DocumentVersion
        VersionName:
          allOf:
          - $ref: '#/components/schemas/DocumentVersionName'
          - description: "The version of the artifact associated with the document.\
              \ For example, \"Release 12, Update 6\". This value is unique across\
              \ all versions of a document, and can't be changed."
          title: VersionName
        CreatedDate:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date the document was created.
          title: CreatedDate
        IsDefaultVersion:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: An identifier for the default version of the document.
          title: IsDefaultVersion
        DocumentFormat:
          allOf:
          - $ref: '#/components/schemas/DocumentFormat'
          - description: "The document format, either JSON or YAML."
          title: DocumentFormat
        Status:
          allOf:
          - $ref: '#/components/schemas/DocumentStatus'
          - description: "The status of the SSM document, such as <code>Creating</code>,\
              \ <code>Active</code>, <code>Failed</code>, and <code>Deleting</code>."
          title: Status
        StatusInformation:
          allOf:
          - $ref: '#/components/schemas/DocumentStatusInformation'
          - description: "A message returned by Amazon Web Services Systems Manager\
              \ that explains the <code>Status</code> value. For example, a <code>Failed</code>\
              \ status might be explained by the <code>StatusInformation</code> message,\
              \ \"The specified S3 bucket doesn't exist. Verify that the URL of the\
              \ S3 bucket is correct.\""
          title: StatusInformation
        ReviewStatus:
          allOf:
          - $ref: '#/components/schemas/ReviewStatus'
          - description: The current status of the approval review for the latest
              version of the document.
          title: ReviewStatus
      title: DocumentVersionInfo
      type: object
    DocumentVersionList:
      items:
        $ref: '#/components/schemas/DocumentVersionInfo'
      minItems: 1
      type: array
    DocumentVersionNumber:
      pattern: "(^[1-9][0-9]*$)"
      type: string
    Patch:
      description: Represents metadata about a patch.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/PatchId'
          - description: <p>The ID of the patch. Applies to Windows patches only.</p>
              <note> <p>This ID isn't the same as the Microsoft Knowledge Base ID.</p>
              </note>
          title: Id
        ReleaseDate:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date the patch was released.
          title: ReleaseDate
        Title:
          allOf:
          - $ref: '#/components/schemas/PatchTitle'
          - description: The title of the patch.
          title: Title
        Description:
          allOf:
          - $ref: '#/components/schemas/PatchDescription'
          - description: The description of the patch.
          title: Description
        ContentUrl:
          allOf:
          - $ref: '#/components/schemas/PatchContentUrl'
          - description: The URL where more information can be obtained about the
              patch.
          title: ContentUrl
        Vendor:
          allOf:
          - $ref: '#/components/schemas/PatchVendor'
          - description: The name of the vendor providing the patch.
          title: Vendor
        ProductFamily:
          allOf:
          - $ref: '#/components/schemas/PatchProductFamily'
          - description: "The product family the patch is applicable for. For example,\
              \ <code>Windows</code> or <code>Amazon Linux 2</code>."
          title: ProductFamily
        Product:
          allOf:
          - $ref: '#/components/schemas/PatchProduct'
          - description: "The specific product the patch is applicable for. For example,\
              \ <code>WindowsServer2016</code> or <code>AmazonLinux2018.03</code>."
          title: Product
        Classification:
          allOf:
          - $ref: '#/components/schemas/PatchClassification'
          - description: "The classification of the patch. For example, <code>SecurityUpdates</code>,\
              \ <code>Updates</code>, or <code>CriticalUpdates</code>."
          title: Classification
        MsrcSeverity:
          allOf:
          - $ref: '#/components/schemas/PatchMsrcSeverity'
          - description: "The severity of the patch, such as <code>Critical</code>,\
              \ <code>Important</code>, or <code>Moderate</code>. Applies to Windows\
              \ patches only."
          title: MsrcSeverity
        KbNumber:
          allOf:
          - $ref: '#/components/schemas/PatchKbNumber'
          - description: The Microsoft Knowledge Base ID of the patch. Applies to
              Windows patches only.
          title: KbNumber
        MsrcNumber:
          allOf:
          - $ref: '#/components/schemas/PatchMsrcNumber'
          - description: "The ID of the Microsoft Security Response Center (MSRC)\
              \ bulletin the patch is related to. For example, <code>MS14-045</code>.\
              \ Applies to Windows patches only."
          title: MsrcNumber
        Language:
          allOf:
          - $ref: '#/components/schemas/PatchLanguage'
          - description: The language of the patch if it's language-specific.
          title: Language
        AdvisoryIds:
          allOf:
          - $ref: '#/components/schemas/PatchAdvisoryIdList'
          - description: "The Advisory ID of the patch. For example, <code>RHSA-2020:3779</code>.\
              \ Applies to Linux-based managed nodes only."
          title: AdvisoryIds
        BugzillaIds:
          allOf:
          - $ref: '#/components/schemas/PatchBugzillaIdList'
          - description: "The Bugzilla ID of the patch. For example, <code>1600646</code>.\
              \ Applies to Linux-based managed nodes only."
          title: BugzillaIds
        CVEIds:
          allOf:
          - $ref: '#/components/schemas/PatchCVEIdList'
          - description: "The Common Vulnerabilities and Exposures (CVE) ID of the\
              \ patch. For example, <code>CVE-2011-3192</code>. Applies to Linux-based\
              \ managed nodes only."
          title: CVEIds
        Name:
          allOf:
          - $ref: '#/components/schemas/PatchName'
          - description: The name of the patch. Applies to Linux-based managed nodes
              only.
          title: Name
        Epoch:
          allOf:
          - $ref: '#/components/schemas/PatchEpoch'
          - description: "The epoch of the patch. For example in <code>pkg-example-EE-20180914-2.2.amzn1.noarch</code>,\
              \ the epoch value is <code>20180914-2</code>. Applies to Linux-based\
              \ managed nodes only."
          title: Epoch
        Version:
          allOf:
          - $ref: '#/components/schemas/PatchVersion'
          - description: "The version number of the patch. For example, in <code>example-pkg-1.710.10-2.7.abcd.x86_64</code>,\
              \ the version number is indicated by <code>-1</code>. Applies to Linux-based\
              \ managed nodes only."
          title: Version
        Release:
          allOf:
          - $ref: '#/components/schemas/PatchRelease'
          - description: "The particular release of a patch. For example, in <code>pkg-example-EE-20180914-2.2.amzn1.noarch</code>,\
              \ the release is <code>2.amaz1</code>. Applies to Linux-based managed\
              \ nodes only."
          title: Release
        Arch:
          allOf:
          - $ref: '#/components/schemas/PatchArch'
          - description: "The architecture of the patch. For example, in <code>example-pkg-0.710.10-2.7.abcd.x86_64</code>,\
              \ the architecture is indicated by <code>x86_64</code>. Applies to Linux-based\
              \ managed nodes only."
          title: Arch
        Severity:
          allOf:
          - $ref: '#/components/schemas/PatchSeverity'
          - description: "The severity level of the patch. For example, <code>CRITICAL</code>\
              \ or <code>MODERATE</code>."
          title: Severity
        Repository:
          allOf:
          - $ref: '#/components/schemas/PatchRepository'
          - description: "The source patch repository for the operating system and\
              \ version, such as <code>trusty-security</code> for Ubuntu Server 14.04\
              \ LTE and <code>focal-security</code> for Ubuntu Server 20.04 LTE. Applies\
              \ to Linux-based managed nodes only."
          title: Repository
      title: Patch
      type: object
    PatchStatus:
      description: Information about the approval status of a patch.
      properties:
        DeploymentStatus:
          allOf:
          - $ref: '#/components/schemas/PatchDeploymentStatus'
          - description: The approval status of a patch.
          title: DeploymentStatus
        ComplianceLevel:
          allOf:
          - $ref: '#/components/schemas/PatchComplianceLevel'
          - description: The compliance severity level for a patch.
          title: ComplianceLevel
        ApprovalDate:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date the patch was approved (or will be approved if the
              status is <code>PENDING_APPROVAL</code>).
          title: ApprovalDate
      title: PatchStatus
      type: object
    EffectivePatch:
      description: "The <code>EffectivePatch</code> structure defines metadata about\
        \ a patch along with the approval state of the patch in a particular patch\
        \ baseline. The approval state includes information about whether the patch\
        \ is currently approved, due to be approved by a rule, explicitly approved,\
        \ or explicitly rejected and the date the patch was or will be approved."
      properties:
        Patch:
          $ref: '#/components/schemas/EffectivePatch_Patch'
        PatchStatus:
          $ref: '#/components/schemas/EffectivePatch_PatchStatus'
      title: EffectivePatch
      type: object
    ExecutionRoleName:
      maxLength: 64
      minLength: 1
      pattern: "[\\w+=,.@/-]+"
      type: string
    Fault:
      enum:
      - Client
      - Server
      - Unknown
      title: Fault
      type: string
    FailedCreateAssociation:
      description: Describes a failed association.
      properties:
        Entry:
          $ref: '#/components/schemas/FailedCreateAssociation_Entry'
        Message:
          allOf:
          - $ref: '#/components/schemas/BatchErrorMessage'
          - description: A description of the failure.
          title: Message
        Fault:
          allOf:
          - $ref: '#/components/schemas/Fault'
          - description: The source of the failure.
          title: Fault
      title: FailedCreateAssociation
      type: object
    FailureDetails:
      description: Information about an Automation failure.
      properties:
        FailureStage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The stage of the Automation execution when the failure occurred.\
              \ The stages include the following: InputValidation, PreVerification,\
              \ Invocation, PostVerification."
          title: FailureStage
        FailureType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The type of Automation failure. Failure types include the\
              \ following: Action, Permission, Throttling, Verification, Internal."
          title: FailureType
        Details:
          allOf:
          - $ref: '#/components/schemas/AutomationParameterMap'
          - description: Detailed information about the Automation step failure.
          title: Details
      title: FailureDetails
      type: object
    ISO8601String:
      type: string
    StringDateTime:
      pattern: "^([\\-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\\
        d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\\
        s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d(?!:))?)?(\\17[0-5]\\\
        d([\\.,]\\d)?)?([zZ]|([\\-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$"
      type: string
    StandardOutputContent:
      maxLength: 24000
      type: string
    StandardErrorContent:
      maxLength: 8000
      type: string
    SessionTarget:
      maxLength: 400
      minLength: 1
      type: string
    SnapshotId:
      maxLength: 36
      minLength: 36
      pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
      type: string
    SnapshotDownloadUrl:
      type: string
    Product:
      type: string
    InventoryFilterList:
      items:
        $ref: '#/components/schemas/InventoryFilter'
      maxItems: 5
      minItems: 1
      type: array
    InventoryAggregatorList:
      items:
        $ref: '#/components/schemas/InventoryAggregator'
      maxItems: 10
      minItems: 1
      type: array
    ResultAttributeList:
      items:
        $ref: '#/components/schemas/ResultAttribute'
      maxItems: 1
      minItems: 1
      type: array
    InventoryResultEntityList:
      items:
        $ref: '#/components/schemas/InventoryResultEntity'
      type: array
    GetInventorySchemaMaxResults:
      maximum: 200
      minimum: 50
      type: integer
    InventoryItemTypeNameFilter:
      maxLength: 100
      minLength: 0
      type: string
    IsSubTypeSchema:
      type: boolean
    InventoryItemSchemaResultList:
      items:
        $ref: '#/components/schemas/InventoryItemSchema'
      type: array
    MaintenanceWindowExecutionTaskIdList:
      items:
        $ref: '#/components/schemas/MaintenanceWindowExecutionTaskId'
      type: array
    MaintenanceWindowExecutionStatus:
      enum:
      - PENDING
      - IN_PROGRESS
      - SUCCESS
      - FAILED
      - TIMED_OUT
      - CANCELLING
      - CANCELLED
      - SKIPPED_OVERLAPPING
      title: MaintenanceWindowExecutionStatus
      type: string
    MaintenanceWindowExecutionStatusDetails:
      maxLength: 250
      minLength: 0
      type: string
    MaintenanceWindowExecutionTaskInvocationId:
      maxLength: 36
      minLength: 36
      pattern: "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
        -[0-9a-fA-F]{12}$"
      type: string
    MaintenanceWindowExecutionTaskExecutionId:
      type: string
    MaintenanceWindowTaskType:
      enum:
      - RUN_COMMAND
      - AUTOMATION
      - STEP_FUNCTIONS
      - LAMBDA
      title: MaintenanceWindowTaskType
      type: string
    MaintenanceWindowExecutionTaskInvocationParameters:
      format: password
      type: string
    OwnerInformation:
      format: password
      maxLength: 128
      minLength: 1
      type: string
    MaintenanceWindowTaskTargetId:
      maxLength: 36
      type: string
    MaintenanceWindowTaskArn:
      maxLength: 1600
      minLength: 1
      type: string
    MaintenanceWindowTaskParametersList:
      items:
        $ref: '#/components/schemas/MaintenanceWindowTaskParameters'
      type: array
    MaintenanceWindowTaskPriority:
      minimum: 0
      type: integer
    MaintenanceWindowEnabled:
      type: boolean
    MaintenanceWindowTaskParameters:
      additionalProperties:
        $ref: '#/components/schemas/MaintenanceWindowTaskParameterValueExpression'
      title: MaintenanceWindowTaskParameters
      type: object
    MaintenanceWindowTaskInvocationParameters:
      description: The parameters for task execution.
      properties:
        RunCommand:
          $ref: '#/components/schemas/MaintenanceWindowTaskInvocationParameters_RunCommand'
        Automation:
          $ref: '#/components/schemas/MaintenanceWindowTaskInvocationParameters_Automation'
        StepFunctions:
          $ref: '#/components/schemas/MaintenanceWindowTaskInvocationParameters_StepFunctions'
        Lambda:
          $ref: '#/components/schemas/MaintenanceWindowTaskInvocationParameters_Lambda'
      title: MaintenanceWindowTaskInvocationParameters
      type: object
    LoggingInfo:
      description: "<p>Information about an Amazon Simple Storage Service (Amazon\
        \ S3) bucket to write managed node-level logs to.</p> <note> <p> <code>LoggingInfo</code>\
        \ has been deprecated. To specify an Amazon Simple Storage Service (Amazon\
        \ S3) bucket to contain logs, instead use the <code>OutputS3BucketName</code>\
        \ and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code>\
        \ structure. For information about how Amazon Web Services Systems Manager\
        \ handles these options for the supported maintenance window task types, see\
        \ <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>"
      properties:
        S3BucketName:
          allOf:
          - $ref: '#/components/schemas/S3BucketName'
          - description: The name of an S3 bucket where execution logs are stored.
          title: S3BucketName
        S3KeyPrefix:
          allOf:
          - $ref: '#/components/schemas/S3KeyPrefix'
          - description: '(Optional) The S3 bucket subfolder. '
          title: S3KeyPrefix
        S3Region:
          allOf:
          - $ref: '#/components/schemas/S3Region'
          - description: The Amazon Web Services Region where the S3 bucket is located.
          title: S3Region
      required:
      - S3BucketName
      - S3Region
      title: LoggingInfo
      type: object
    MaintenanceWindowTaskCutoffBehavior:
      enum:
      - CONTINUE_TASK
      - CANCEL_TASK
      title: MaintenanceWindowTaskCutoffBehavior
      type: string
    OpsItem:
      description: "<p>Operations engineers and IT professionals use Amazon Web Services\
        \ Systems Manager OpsCenter to view, investigate, and remediate operational\
        \ work items (OpsItems) impacting the performance and health of their Amazon\
        \ Web Services resources. OpsCenter is integrated with Amazon EventBridge\
        \ and Amazon CloudWatch. This means you can configure these services to automatically\
        \ create an OpsItem in OpsCenter when a CloudWatch alarm enters the ALARM\
        \ state or when EventBridge processes an event from any Amazon Web Services\
        \ service that publishes events. Configuring Amazon CloudWatch alarms and\
        \ EventBridge events to automatically create OpsItems allows you to quickly\
        \ diagnose and remediate issues with Amazon Web Services resources from a\
        \ single console.</p> <p>To help you diagnose issues, each OpsItem includes\
        \ contextually relevant information such as the name and ID of the Amazon\
        \ Web Services resource that generated the OpsItem, alarm or event details,\
        \ alarm history, and an alarm timeline graph. For the Amazon Web Services\
        \ resource, OpsCenter aggregates information from Config, CloudTrail logs,\
        \ and EventBridge, so you don't have to navigate across multiple console pages\
        \ during your investigation. For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter.html\"\
        >OpsCenter</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.\
        \ </p>"
      properties:
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN of the Amazon Web Services account that created the
              OpsItem.
          title: CreatedBy
        OpsItemType:
          allOf:
          - $ref: '#/components/schemas/OpsItemType'
          - description: <p>The type of OpsItem. Systems Manager supports the following
              types of OpsItems:</p> <ul> <li> <p> <code>/aws/issue</code> </p> <p>This
              type of OpsItem is used for default OpsItems created by OpsCenter. </p>
              </li> <li> <p> <code>/aws/changerequest</code> </p> <p>This type of
              OpsItem is used by Change Manager for reviewing and approving or rejecting
              change requests. </p> </li> <li> <p> <code>/aws/insights</code> </p>
              <p>This type of OpsItem is used by OpsCenter for aggregating and reporting
              on duplicate OpsItems. </p> </li> </ul>
          title: OpsItemType
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date and time the OpsItem was created.
          title: CreatedTime
        Description:
          allOf:
          - $ref: '#/components/schemas/OpsItemDescription'
          - description: The OpsItem description.
          title: Description
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN of the Amazon Web Services account that last updated
              the OpsItem.
          title: LastModifiedBy
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date and time the OpsItem was last updated.
          title: LastModifiedTime
        Notifications:
          allOf:
          - $ref: '#/components/schemas/OpsItemNotifications'
          - description: The Amazon Resource Name (ARN) of an Amazon Simple Notification
              Service (Amazon SNS) topic where notifications are sent when this OpsItem
              is edited or changed.
          title: Notifications
        Priority:
          allOf:
          - $ref: '#/components/schemas/OpsItemPriority'
          - description: The importance of this OpsItem in relation to other OpsItems
              in the system.
          title: Priority
        RelatedOpsItems:
          allOf:
          - $ref: '#/components/schemas/RelatedOpsItems'
          - description: "One or more OpsItems that share something in common with\
              \ the current OpsItem. For example, related OpsItems can include OpsItems\
              \ with similar error messages, impacted resources, or statuses for the\
              \ impacted resource."
          title: RelatedOpsItems
        Status:
          allOf:
          - $ref: '#/components/schemas/OpsItemStatus'
          - description: "The OpsItem status. Status can be <code>Open</code>, <code>In\
              \ Progress</code>, or <code>Resolved</code>. For more information, see\
              \ <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-working-with-OpsItems-editing-details.html\"\
              >Editing OpsItem details</a> in the <i>Amazon Web Services Systems Manager\
              \ User Guide</i>."
          title: Status
        OpsItemId:
          allOf:
          - $ref: '#/components/schemas/OpsItemId'
          - description: The ID of the OpsItem.
          title: OpsItemId
        Version:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The version of this OpsItem. Each time the OpsItem is edited
              the version number increments by one.
          title: Version
        Title:
          allOf:
          - $ref: '#/components/schemas/OpsItemTitle'
          - description: A short heading that describes the nature of the OpsItem
              and the impacted resource.
          title: Title
        Source:
          allOf:
          - $ref: '#/components/schemas/OpsItemSource'
          - description: "The origin of the OpsItem, such as Amazon EC2 or Systems\
              \ Manager. The impacted resource is a subset of source."
          title: Source
        OperationalData:
          allOf:
          - $ref: '#/components/schemas/OpsItemOperationalData'
          - description: "<p>Operational data is custom data that provides useful\
              \ reference details about the OpsItem. For example, you can specify\
              \ log files, error strings, license keys, troubleshooting tips, or other\
              \ relevant data. You enter operational data as key-value pairs. The\
              \ key has a maximum length of 128 characters. The value has a maximum\
              \ size of 20 KB.</p> <important> <p>Operational data keys <i>can't</i>\
              \ begin with the following: <code>amazon</code>, <code>aws</code>, <code>amzn</code>,\
              \ <code>ssm</code>, <code>/amazon</code>, <code>/aws</code>, <code>/amzn</code>,\
              \ <code>/ssm</code>.</p> </important> <p>You can choose to make the\
              \ data searchable by other users in the account or you can restrict\
              \ search access. Searchable data means that all users with access to\
              \ the OpsItem Overview page (as provided by the <a>DescribeOpsItems</a>\
              \ API operation) can view and search on the specified data. Operational\
              \ data that isn't searchable is only viewable by users who have access\
              \ to the OpsItem (as provided by the <a>GetOpsItem</a> API operation).</p>\
              \ <p>Use the <code>/aws/resources</code> key in OperationalData to specify\
              \ a related resource in the request. Use the <code>/aws/automations</code>\
              \ key in OperationalData to associate an Automation runbook with the\
              \ OpsItem. To view Amazon Web Services CLI example commands that use\
              \ these keys, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-manually-create-OpsItems.html\"\
              >Creating OpsItems manually</a> in the <i>Amazon Web Services Systems\
              \ Manager User Guide</i>.</p>"
          title: OperationalData
        Category:
          allOf:
          - $ref: '#/components/schemas/OpsItemCategory'
          - description: "An OpsItem category. Category options include: Availability,\
              \ Cost, Performance, Recovery, Security."
          title: Category
        Severity:
          allOf:
          - $ref: '#/components/schemas/OpsItemSeverity'
          - description: The severity of the OpsItem. Severity options range from
              1 to 4.
          title: Severity
        ActualStartTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time a runbook workflow started. Currently reported only
              for the OpsItem type <code>/aws/changerequest</code>.
          title: ActualStartTime
        ActualEndTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time a runbook workflow ended. Currently reported only
              for the OpsItem type <code>/aws/changerequest</code>.
          title: ActualEndTime
        PlannedStartTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time specified in a change request for a runbook workflow
              to start. Currently supported only for the OpsItem type <code>/aws/changerequest</code>.
          title: PlannedStartTime
        PlannedEndTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time specified in a change request for a runbook workflow
              to end. Currently supported only for the OpsItem type <code>/aws/changerequest</code>.
          title: PlannedEndTime
        OpsItemArn:
          allOf:
          - $ref: '#/components/schemas/OpsItemArn'
          - description: The OpsItem Amazon Resource Name (ARN).
          title: OpsItemArn
      title: OpsItem
      type: object
    GetOpsMetadataMaxResults:
      maximum: 10
      minimum: 1
      type: integer
    OpsFilterList:
      items:
        $ref: '#/components/schemas/OpsFilter'
      maxItems: 5
      minItems: 1
      type: array
    OpsAggregatorList:
      items:
        $ref: '#/components/schemas/OpsAggregator'
      maxItems: 12
      minItems: 1
      type: array
    OpsResultAttributeList:
      items:
        $ref: '#/components/schemas/OpsResultAttribute'
      minItems: 1
      type: array
    OpsEntityList:
      items:
        $ref: '#/components/schemas/OpsEntity'
      type: array
    ParameterHistoryList:
      items:
        $ref: '#/components/schemas/ParameterHistory'
      type: array
    Parameter:
      description: An Amazon Web Services Systems Manager parameter in Parameter Store.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/PSParameterName'
          - description: The name of the parameter.
          title: Name
        Type:
          allOf:
          - $ref: '#/components/schemas/ParameterType'
          - description: "<p>The type of parameter. Valid values include the following:\
              \ <code>String</code>, <code>StringList</code>, and <code>SecureString</code>.</p>\
              \ <note> <p>If type is <code>StringList</code>, the system returns a\
              \ comma-separated string with no spaces between commas in the <code>Value</code>\
              \ field.</p> </note>"
          title: Type
        Value:
          allOf:
          - $ref: '#/components/schemas/PSParameterValue'
          - description: "<p>The parameter value.</p> <note> <p>If type is <code>StringList</code>,\
              \ the system returns a comma-separated string with no spaces between\
              \ commas in the <code>Value</code> field.</p> </note>"
          title: Value
        Version:
          allOf:
          - $ref: '#/components/schemas/PSParameterVersion'
          - description: The parameter version.
          title: Version
        Selector:
          allOf:
          - $ref: '#/components/schemas/PSParameterSelector'
          - description: <p>Either the version number or the label used to retrieve
              the parameter value. Specify selectors by using one of the following
              formats:</p> <p>parameter_name:version</p> <p>parameter_name:label</p>
          title: Selector
        SourceResult:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Applies to parameters that reference information in other
              Amazon Web Services services. <code>SourceResult</code> is the raw result
              or response from the source.
          title: SourceResult
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: Date the parameter was last changed or updated and the parameter
              version was created.
          title: LastModifiedDate
        ARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the parameter.
          title: ARN
        DataType:
          allOf:
          - $ref: '#/components/schemas/ParameterDataType'
          - description: "The data type of the parameter, such as <code>text</code>\
              \ or <code>aws:ec2:image</code>. The default is <code>text</code>."
          title: DataType
      title: Parameter
      type: object
    GetParametersByPathMaxResults:
      maximum: 10
      minimum: 1
      type: integer
    ParameterList:
      items:
        $ref: '#/components/schemas/Parameter'
      type: array
    PatchGroupList:
      items:
        $ref: '#/components/schemas/PatchGroup'
      type: array
    ResourcePolicyMaxResults:
      maximum: 50
      minimum: 1
      type: integer
    GetResourcePoliciesResponseEntries:
      items:
        $ref: '#/components/schemas/GetResourcePoliciesResponseEntry'
      type: array
    GetResourcePoliciesResponseEntry:
      description: "A resource policy helps you to define the IAM entity (for example,\
        \ an Amazon Web Services account) that can manage your Systems Manager resources.\
        \ Currently, <code>OpsItemGroup</code> is the only resource that supports\
        \ Systems Manager resource policies. The resource policy for <code>OpsItemGroup</code>\
        \ enables Amazon Web Services accounts to view and interact with OpsCenter\
        \ operational work items (OpsItems)."
      properties:
        PolicyId:
          allOf:
          - $ref: '#/components/schemas/PolicyId'
          - description: A policy ID.
          title: PolicyId
        PolicyHash:
          allOf:
          - $ref: '#/components/schemas/PolicyHash'
          - description: ID of the current policy version. The hash helps to prevent
              a situation where multiple users attempt to overwrite a policy. You
              must provide this hash when updating or deleting a policy.
          title: PolicyHash
        Policy:
          allOf:
          - $ref: '#/components/schemas/Policy'
          - description: "A resource policy helps you to define the IAM entity (for\
              \ example, an Amazon Web Services account) that can manage your Systems\
              \ Manager resources. Currently, <code>OpsItemGroup</code> is the only\
              \ resource that supports Systems Manager resource policies. The resource\
              \ policy for <code>OpsItemGroup</code> enables Amazon Web Services accounts\
              \ to view and interact with OpsCenter operational work items (OpsItems)."
          title: Policy
      title: GetResourcePoliciesResponseEntry
      type: object
    Policy:
      pattern: \S+
      type: string
    ServiceSettingId:
      maxLength: 1000
      minLength: 1
      type: string
    ServiceSetting:
      description: "<p>The service setting data structure.</p> <p> <code>ServiceSetting</code>\
        \ is an account-level setting for an Amazon Web Services service. This setting\
        \ defines how a user interacts with or uses a service or a feature of a service.\
        \ For example, if an Amazon Web Services service charges money to the account\
        \ based on feature or service usage, then the Amazon Web Services service\
        \ team might create a default setting of \"false\". This means the user can't\
        \ use this feature unless they change the setting to \"true\" and intentionally\
        \ opt in for a paid feature.</p> <p>Services map a <code>SettingId</code>\
        \ object to a setting value. Amazon Web Services services teams define the\
        \ default value for a <code>SettingId</code>. You can't create a new <code>SettingId</code>,\
        \ but you can overwrite the default value if you have the <code>ssm:UpdateServiceSetting</code>\
        \ permission for the setting. Use the <a>UpdateServiceSetting</a> API operation\
        \ to change the default setting. Or, use the <a>ResetServiceSetting</a> to\
        \ change the value back to the original value defined by the Amazon Web Services\
        \ service team.</p>"
      properties:
        SettingId:
          allOf:
          - $ref: '#/components/schemas/ServiceSettingId'
          - description: The ID of the service setting.
          title: SettingId
        SettingValue:
          allOf:
          - $ref: '#/components/schemas/ServiceSettingValue'
          - description: The value of the service setting.
          title: SettingValue
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The last time the service setting was modified.
          title: LastModifiedDate
        LastModifiedUser:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN of the last modified user. This field is populated
              only if the setting value was overwritten.
          title: LastModifiedUser
        ARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN of the service setting.
          title: ARN
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The status of the service setting. The value can be Default,\
              \ Customized or PendingUpdate.</p> <ul> <li> <p>Default: The current\
              \ setting uses a default value provisioned by the Amazon Web Services\
              \ service team.</p> </li> <li> <p>Customized: The current setting use\
              \ a custom value specified by the customer.</p> </li> <li> <p>PendingUpdate:\
              \ The current setting uses a default or custom value, but a setting\
              \ change request is pending approval.</p> </li> </ul>"
          title: Status
      title: ServiceSetting
      type: object
    IPAddress:
      maxLength: 46
      minLength: 1
      type: string
    IdempotencyToken:
      maxLength: 36
      minLength: 36
      pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
      type: string
    InstallOverrideList:
      maxLength: 256
      minLength: 1
      pattern: "^https://.+$|^s3://([^/]+)/(.*?([^/]+))$"
      type: string
    InstanceAssociationStatusAggregatedCount:
      additionalProperties:
        $ref: '#/components/schemas/InstanceCount'
      type: object
    InstanceAggregatedAssociationOverview:
      description: Status information about the aggregated associations.
      properties:
        DetailedStatus:
          allOf:
          - $ref: '#/components/schemas/StatusName'
          - description: Detailed status information about the aggregated associations.
          title: DetailedStatus
        InstanceAssociationStatusAggregatedCount:
          allOf:
          - $ref: '#/components/schemas/InstanceAssociationStatusAggregatedCount'
          - description: The number of associations for the managed node(s).
          title: InstanceAssociationStatusAggregatedCount
      title: InstanceAggregatedAssociationOverview
      type: object
    InstanceAssociation:
      description: 'One or more association documents on the managed node. '
      properties:
        AssociationId:
          allOf:
          - $ref: '#/components/schemas/AssociationId'
          - description: The association ID.
          title: AssociationId
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          - description: The managed node ID.
          title: InstanceId
        Content:
          allOf:
          - $ref: '#/components/schemas/DocumentContent'
          - description: The content of the association document for the managed node(s).
          title: Content
        AssociationVersion:
          allOf:
          - $ref: '#/components/schemas/AssociationVersion'
          - description: Version information for the association on the managed node.
          title: AssociationVersion
      title: InstanceAssociation
      type: object
    InstanceAssociationExecutionSummary:
      maxLength: 512
      minLength: 1
      type: string
    S3OutputLocation:
      description: An S3 bucket where you want to store the results of this request.
      properties:
        OutputS3Region:
          allOf:
          - $ref: '#/components/schemas/S3Region'
          - description: The Amazon Web Services Region of the S3 bucket.
          title: OutputS3Region
        OutputS3BucketName:
          allOf:
          - $ref: '#/components/schemas/S3BucketName'
          - description: The name of the S3 bucket.
          title: OutputS3BucketName
        OutputS3KeyPrefix:
          allOf:
          - $ref: '#/components/schemas/S3KeyPrefix'
          - description: The S3 bucket subfolder.
          title: OutputS3KeyPrefix
      title: S3OutputLocation
      type: object
    S3OutputUrl:
      description: A URL for the Amazon Web Services Systems Manager (Systems Manager)
        bucket where you want to store the results of this request.
      properties:
        OutputUrl:
          allOf:
          - $ref: '#/components/schemas/Url'
          - description: A URL for an S3 bucket where you want to store the results
              of this request.
          title: OutputUrl
      title: S3OutputUrl
      type: object
    InstanceAssociationOutputUrl:
      description: The URL of S3 bucket where you want to store the results of this
        request.
      properties:
        S3OutputUrl:
          $ref: '#/components/schemas/InstanceAssociationOutputUrl_S3OutputUrl'
      title: InstanceAssociationOutputUrl
      type: object
    InstanceAssociationStatusInfo:
      description: Status information about the association.
      properties:
        AssociationId:
          allOf:
          - $ref: '#/components/schemas/AssociationId'
          - description: The association ID.
          title: AssociationId
        Name:
          allOf:
          - $ref: '#/components/schemas/DocumentARN'
          - description: The name of the association.
          title: Name
        DocumentVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: The association document versions.
          title: DocumentVersion
        AssociationVersion:
          allOf:
          - $ref: '#/components/schemas/AssociationVersion'
          - description: The version of the association applied to the managed node.
          title: AssociationVersion
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          - description: The managed node ID where the association was created.
          title: InstanceId
        ExecutionDate:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: 'The date the association ran. '
          title: ExecutionDate
        Status:
          allOf:
          - $ref: '#/components/schemas/StatusName'
          - description: Status information about the association.
          title: Status
        DetailedStatus:
          allOf:
          - $ref: '#/components/schemas/StatusName'
          - description: Detailed status information about the association.
          title: DetailedStatus
        ExecutionSummary:
          allOf:
          - $ref: '#/components/schemas/InstanceAssociationExecutionSummary'
          - description: Summary information about association execution.
          title: ExecutionSummary
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/AgentErrorCode'
          - description: An error code returned by the request to create the association.
          title: ErrorCode
        OutputUrl:
          $ref: '#/components/schemas/InstanceAssociationStatusInfo_OutputUrl'
        AssociationName:
          allOf:
          - $ref: '#/components/schemas/AssociationName'
          - description: The name of the association applied to the managed node.
          title: AssociationName
      title: InstanceAssociationStatusInfo
      type: object
    PingStatus:
      enum:
      - Online
      - ConnectionLost
      - Inactive
      title: PingStatus
      type: string
    Version:
      pattern: "^[0-9]{1,6}(\\.[0-9]{1,6}){2,3}$"
      type: string
    PlatformType:
      enum:
      - Windows
      - Linux
      - MacOS
      title: PlatformType
      type: string
    ResourceType:
      enum:
      - ManagedInstance
      - Document
      - EC2Instance
      title: ResourceType
      type: string
    SourceId:
      maxLength: 128
      minLength: 0
      pattern: "^[a-zA-Z0-9:_-]*$"
      type: string
    SourceType:
      enum:
      - AWS::EC2::Instance
      - AWS::IoT::Thing
      - AWS::SSM::ManagedInstance
      title: SourceType
      type: string
    InstanceInformation:
      description: 'Describes a filter for a specific list of managed nodes. '
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          - description: 'The managed node ID. '
          title: InstanceId
        PingStatus:
          allOf:
          - $ref: '#/components/schemas/PingStatus'
          - description: <p>Connection status of SSM Agent. </p> <note> <p>The status
              <code>Inactive</code> has been deprecated and is no longer in use.</p>
              </note>
          title: PingStatus
        LastPingDateTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: 'The date and time when the agent last pinged the Systems
              Manager service. '
          title: LastPingDateTime
        AgentVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: 'The version of SSM Agent running on your Linux managed node. '
          title: AgentVersion
        IsLatestVersion:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Indicates whether the latest version of SSM Agent is running\
              \ on your Linux managed node. This field doesn't indicate whether or\
              \ not the latest version is installed on Windows managed nodes, because\
              \ some older versions of Windows Server use the EC2Config service to\
              \ process Systems Manager requests."
          title: IsLatestVersion
        PlatformType:
          allOf:
          - $ref: '#/components/schemas/PlatformType'
          - description: 'The operating system platform type. '
          title: PlatformType
        PlatformName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'The name of the operating system platform running on your
              managed node. '
          title: PlatformName
        PlatformVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'The version of the OS platform running on your managed node. '
          title: PlatformVersion
        ActivationId:
          allOf:
          - $ref: '#/components/schemas/ActivationId'
          - description: The activation ID created by Amazon Web Services Systems
              Manager when the server or virtual machine (VM) was registered.
          title: ActivationId
        IamRole:
          allOf:
          - $ref: '#/components/schemas/IamRole'
          - description: "The Identity and Access Management (IAM) role assigned to\
              \ the on-premises Systems Manager managed node. This call doesn't return\
              \ the IAM role for Amazon Elastic Compute Cloud (Amazon EC2) instances.\
              \ To retrieve the IAM role for an EC2 instance, use the Amazon EC2 <code>DescribeInstances</code>\
              \ operation. For information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html\"\
              >DescribeInstances</a> in the <i>Amazon EC2 API Reference</i> or <a\
              \ href=\"https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-instances.html\"\
              >describe-instances</a> in the <i>Amazon Web Services CLI Command Reference</i>."
          title: IamRole
        RegistrationDate:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date the server or VM was registered with Amazon Web
              Services as a managed node.
          title: RegistrationDate
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: 'The type of instance. Instances are either EC2 instances
              or managed instances. '
          title: ResourceType
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name assigned to an on-premises server, edge device,\
              \ or virtual machine (VM) when it is activated as a Systems Manager\
              \ managed node. The name is specified as the <code>DefaultInstanceName</code>\
              \ property using the <a>CreateActivation</a> command. It is applied\
              \ to the managed node by specifying the Activation Code and Activation\
              \ ID when you install SSM Agent on the node, as explained in <a href=\"\
              https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-install-managed-linux.html\"\
              >Install SSM Agent for a hybrid environment (Linux)</a> and <a href=\"\
              https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-install-managed-win.html\"\
              >Install SSM Agent for a hybrid environment (Windows)</a>. To retrieve\
              \ the <code>Name</code> tag of an EC2 instance, use the Amazon EC2 <code>DescribeInstances</code>\
              \ operation. For information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html\"\
              >DescribeInstances</a> in the <i>Amazon EC2 API Reference</i> or <a\
              \ href=\"https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-instances.html\"\
              >describe-instances</a> in the <i>Amazon Web Services CLI Command Reference</i>."
          title: Name
        IPAddress:
          allOf:
          - $ref: '#/components/schemas/IPAddress'
          - description: The IP address of the managed node.
          title: IPAddress
        ComputerName:
          allOf:
          - $ref: '#/components/schemas/ComputerName'
          - description: The fully qualified host name of the managed node.
          title: ComputerName
        AssociationStatus:
          allOf:
          - $ref: '#/components/schemas/StatusName'
          - description: The status of the association.
          title: AssociationStatus
        LastAssociationExecutionDate:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date the association was last run.
          title: LastAssociationExecutionDate
        LastSuccessfulAssociationExecutionDate:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The last date the association was successfully run.
          title: LastSuccessfulAssociationExecutionDate
        AssociationOverview:
          $ref: '#/components/schemas/InstanceInformation_AssociationOverview'
        SourceId:
          allOf:
          - $ref: '#/components/schemas/SourceId'
          - description: "The ID of the source resource. For IoT Greengrass devices,\
              \ <code>SourceId</code> is the Thing name. "
          title: SourceId
        SourceType:
          allOf:
          - $ref: '#/components/schemas/SourceType'
          - description: "The type of the source resource. For IoT Greengrass devices,\
              \ <code>SourceType</code> is <code>AWS::IoT::Thing</code>. "
          title: SourceType
      title: InstanceInformation
      type: object
    InstanceInformationFilterKey:
      enum:
      - InstanceIds
      - AgentVersion
      - PingStatus
      - PlatformTypes
      - ActivationIds
      - IamRole
      - ResourceType
      - AssociationStatus
      title: InstanceInformationFilterKey
      type: string
    InstanceInformationFilterValueSet:
      items:
        $ref: '#/components/schemas/InstanceInformationFilterValue'
      maxItems: 100
      minItems: 1
      type: array
    InstanceInformationFilter:
      description: <p>Describes a filter for a specific list of managed nodes. You
        can filter node information by using tags. You specify tags by using a key-value
        mapping.</p> <p>Use this operation instead of the <a>DescribeInstanceInformationRequest$InstanceInformationFilterList</a>
        method. The <code>InstanceInformationFilterList</code> method is a legacy
        method and doesn't support tags. </p>
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/InstanceInformationFilterKey'
          - description: 'The name of the filter. '
          title: key
        valueSet:
          allOf:
          - $ref: '#/components/schemas/InstanceInformationFilterValueSet'
          - description: The filter values.
          title: valueSet
      required:
      - key
      - valueSet
      title: InstanceInformationFilter
      type: object
    InstanceInformationFilterValue:
      minLength: 1
      title: InstanceInformationFilterValue
      type: string
    InstanceInformationStringFilterKey:
      minLength: 1
      type: string
    InstanceInformationStringFilter:
      description: The filters to describe or get information about your managed nodes.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/InstanceInformationStringFilterKey'
          - description: "<p>The filter key name to describe your managed nodes.</p>\
              \ <p>Valid filter key values: ActivationIds | AgentVersion | AssociationStatus\
              \ | IamRole | InstanceIds | PingStatus | PlatformTypes | ResourceType\
              \ | SourceIds | SourceTypes | \"tag-key\" | \"tag:<code>{keyname}</code>\
              \ </p> <ul> <li> <p>Valid values for the <code>AssociationStatus</code>\
              \ filter key: Success | Pending | Failed</p> </li> <li> <p>Valid values\
              \ for the <code>PingStatus</code> filter key: Online | ConnectionLost\
              \ | Inactive (deprecated)</p> </li> <li> <p>Valid values for the <code>PlatformType</code>\
              \ filter key: Windows | Linux | MacOS</p> </li> <li> <p>Valid values\
              \ for the <code>ResourceType</code> filter key: EC2Instance | ManagedInstance</p>\
              \ </li> <li> <p>Valid values for the <code>SourceType</code> filter\
              \ key: AWS::EC2::Instance | AWS::SSM::ManagedInstance | AWS::IoT::Thing</p>\
              \ </li> <li> <p>Valid tag examples: <code>Key=tag-key,Values=Purpose</code>\
              \ | <code>Key=tag:Purpose,Values=Test</code>.</p> </li> </ul>"
          title: Key
        Values:
          allOf:
          - $ref: '#/components/schemas/InstanceInformationFilterValueSet'
          - description: The filter values.
          title: Values
      required:
      - Key
      - Values
      title: InstanceInformationStringFilter
      type: object
    PatchInstalledCount:
      type: integer
    PatchInstalledOtherCount:
      type: integer
    PatchInstalledPendingRebootCount:
      type: integer
    PatchInstalledRejectedCount:
      type: integer
    PatchMissingCount:
      type: integer
    PatchFailedCount:
      type: integer
    PatchUnreportedNotApplicableCount:
      type: integer
    PatchNotApplicableCount:
      type: integer
    PatchOperationType:
      enum:
      - Scan
      - Install
      title: PatchOperationType
      type: string
    RebootOption:
      enum:
      - RebootIfNeeded
      - NoReboot
      title: RebootOption
      type: string
    PatchCriticalNonCompliantCount:
      type: integer
    PatchSecurityNonCompliantCount:
      type: integer
    PatchOtherNonCompliantCount:
      type: integer
    InstancePatchState:
      description: "Defines the high-level patch compliance state for a managed node,\
        \ providing information about the number of installed, missing, not applicable,\
        \ and failed patches along with metadata about the operation when this information\
        \ was gathered for the managed node."
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          - description: The ID of the managed node the high-level patch compliance
              information was collected for.
          title: InstanceId
        PatchGroup:
          allOf:
          - $ref: '#/components/schemas/PatchGroup'
          - description: The name of the patch group the managed node belongs to.
          title: PatchGroup
        BaselineId:
          allOf:
          - $ref: '#/components/schemas/BaselineId'
          - description: The ID of the patch baseline used to patch the managed node.
          title: BaselineId
        SnapshotId:
          allOf:
          - $ref: '#/components/schemas/SnapshotId'
          - description: The ID of the patch baseline snapshot used during the patching
              operation when this compliance data was collected.
          title: SnapshotId
        InstallOverrideList:
          allOf:
          - $ref: '#/components/schemas/InstallOverrideList'
          - description: "<p>An https URL or an Amazon Simple Storage Service (Amazon\
              \ S3) path-style URL to a list of patches to be installed. This patch\
              \ installation list, which you maintain in an S3 bucket in YAML format\
              \ and specify in the SSM document <code>AWS-RunPatchBaseline</code>,\
              \ overrides the patches specified by the default patch baseline.</p>\
              \ <p>For more information about the <code>InstallOverrideList</code>\
              \ parameter, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-about-aws-runpatchbaseline.html\"\
              >About the <code>AWS-RunPatchBaseline</code> </a> SSM document in the\
              \ <i>Amazon Web Services Systems Manager User Guide</i>.</p>"
          title: InstallOverrideList
        OwnerInformation:
          allOf:
          - $ref: '#/components/schemas/OwnerInformation'
          - description: Placeholder information. This field will always be empty
              in the current release of the service.
          title: OwnerInformation
        InstalledCount:
          allOf:
          - $ref: '#/components/schemas/PatchInstalledCount'
          - description: The number of patches from the patch baseline that are installed
              on the managed node.
          title: InstalledCount
        InstalledOtherCount:
          allOf:
          - $ref: '#/components/schemas/PatchInstalledOtherCount'
          - description: The number of patches not specified in the patch baseline
              that are installed on the managed node.
          title: InstalledOtherCount
        InstalledPendingRebootCount:
          allOf:
          - $ref: '#/components/schemas/PatchInstalledPendingRebootCount'
          - description: The number of patches installed by Patch Manager since the
              last time the managed node was rebooted.
          title: InstalledPendingRebootCount
        InstalledRejectedCount:
          allOf:
          - $ref: '#/components/schemas/PatchInstalledRejectedCount'
          - description: "<p>The number of patches installed on a managed node that\
              \ are specified in a <code>RejectedPatches</code> list. Patches with\
              \ a status of <code>InstalledRejected</code> were typically installed\
              \ before they were added to a <code>RejectedPatches</code> list.</p>\
              \ <note> <p>If <code>ALLOW_AS_DEPENDENCY</code> is the specified option\
              \ for <code>RejectedPatchesAction</code>, the value of <code>InstalledRejectedCount</code>\
              \ will always be <code>0</code> (zero).</p> </note>"
          title: InstalledRejectedCount
        MissingCount:
          allOf:
          - $ref: '#/components/schemas/PatchMissingCount'
          - description: The number of patches from the patch baseline that are applicable
              for the managed node but aren't currently installed.
          title: MissingCount
        FailedCount:
          allOf:
          - $ref: '#/components/schemas/PatchFailedCount'
          - description: "The number of patches from the patch baseline that were\
              \ attempted to be installed during the last patching operation, but\
              \ failed to install."
          title: FailedCount
        UnreportedNotApplicableCount:
          allOf:
          - $ref: '#/components/schemas/PatchUnreportedNotApplicableCount'
          - description: The number of patches beyond the supported limit of <code>NotApplicableCount</code>
              that aren't reported by name to Inventory. Inventory is a capability
              of Amazon Web Services Systems Manager.
          title: UnreportedNotApplicableCount
        NotApplicableCount:
          allOf:
          - $ref: '#/components/schemas/PatchNotApplicableCount'
          - description: The number of patches from the patch baseline that aren't
              applicable for the managed node and therefore aren't installed on the
              node. This number may be truncated if the list of patch names is very
              large. The number of patches beyond this limit are reported in <code>UnreportedNotApplicableCount</code>.
          title: NotApplicableCount
        OperationStartTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time the most recent patching operation was started on
              the managed node.
          title: OperationStartTime
        OperationEndTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time the most recent patching operation completed on
              the managed node.
          title: OperationEndTime
        Operation:
          allOf:
          - $ref: '#/components/schemas/PatchOperationType'
          - description: "<p>The type of patching operation that was performed: or\
              \ </p> <ul> <li> <p> <code>SCAN</code> assesses the patch compliance\
              \ state.</p> </li> <li> <p> <code>INSTALL</code> installs missing patches.</p>\
              \ </li> </ul>"
          title: Operation
        LastNoRebootInstallOperationTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time of the last attempt to patch the managed node with
              <code>NoReboot</code> specified as the reboot option.
          title: LastNoRebootInstallOperationTime
        RebootOption:
          allOf:
          - $ref: '#/components/schemas/RebootOption'
          - description: "<p>Indicates the reboot option specified in the patch baseline.</p>\
              \ <note> <p>Reboot options apply to <code>Install</code> operations\
              \ only. Reboots aren't attempted for Patch Manager <code>Scan</code>\
              \ operations.</p> </note> <ul> <li> <p> <code>RebootIfNeeded</code>:\
              \ Patch Manager tries to reboot the managed node if it installed any\
              \ patches, or if any patches are detected with a status of <code>InstalledPendingReboot</code>.</p>\
              \ </li> <li> <p> <code>NoReboot</code>: Patch Manager attempts to install\
              \ missing packages without trying to reboot the system. Patches installed\
              \ with this option are assigned a status of <code>InstalledPendingReboot</code>.\
              \ These patches might not be in effect until a reboot is performed.</p>\
              \ </li> </ul>"
          title: RebootOption
        CriticalNonCompliantCount:
          allOf:
          - $ref: '#/components/schemas/PatchCriticalNonCompliantCount'
          - description: "The number of patches per node that are specified as <code>Critical</code>\
              \ for compliance reporting in the patch baseline aren't installed. These\
              \ patches might be missing, have failed installation, were rejected,\
              \ or were installed but awaiting a required managed node reboot. The\
              \ status of these managed nodes is <code>NON_COMPLIANT</code>."
          title: CriticalNonCompliantCount
        SecurityNonCompliantCount:
          allOf:
          - $ref: '#/components/schemas/PatchSecurityNonCompliantCount'
          - description: "The number of patches per node that are specified as <code>Security</code>\
              \ in a patch advisory aren't installed. These patches might be missing,\
              \ have failed installation, were rejected, or were installed but awaiting\
              \ a required managed node reboot. The status of these managed nodes\
              \ is <code>NON_COMPLIANT</code>."
          title: SecurityNonCompliantCount
        OtherNonCompliantCount:
          allOf:
          - $ref: '#/components/schemas/PatchOtherNonCompliantCount'
          - description: The number of patches per node that are specified as other
              than <code>Critical</code> or <code>Security</code> but aren't compliant
              with the patch baseline. The status of these managed nodes is <code>NON_COMPLIANT</code>.
          title: OtherNonCompliantCount
      required:
      - BaselineId
      - InstanceId
      - Operation
      - OperationEndTime
      - OperationStartTime
      - PatchGroup
      title: InstancePatchState
      type: object
    InstancePatchStateFilterKey:
      maxLength: 200
      minLength: 1
      type: string
    InstancePatchStateFilterValues:
      items:
        $ref: '#/components/schemas/InstancePatchStateFilterValue'
      maxItems: 1
      minItems: 1
      type: array
    InstancePatchStateOperatorType:
      enum:
      - Equal
      - NotEqual
      - LessThan
      - GreaterThan
      title: InstancePatchStateOperatorType
      type: string
    InstancePatchStateFilter:
      description: "<p>Defines a filter used in <a>DescribeInstancePatchStatesForPatchGroup</a>\
        \ to scope down the information returned by the API.</p> <p> <b>Example</b>:\
        \ To filter for all managed nodes in a patch group having more than three\
        \ patches with a <code>FailedCount</code> status, use the following for the\
        \ filter:</p> <ul> <li> <p>Value for <code>Key</code>: <code>FailedCount</code>\
        \ </p> </li> <li> <p>Value for <code>Type</code>: <code>GreaterThan</code>\
        \ </p> </li> <li> <p>Value for <code>Values</code>: <code>3</code> </p> </li>\
        \ </ul>"
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/InstancePatchStateFilterKey'
          - description: <p>The key for the filter. Supported values include the following:</p>
              <ul> <li> <p> <code>InstalledCount</code> </p> </li> <li> <p> <code>InstalledOtherCount</code>
              </p> </li> <li> <p> <code>InstalledPendingRebootCount</code> </p> </li>
              <li> <p> <code>InstalledRejectedCount</code> </p> </li> <li> <p> <code>MissingCount</code>
              </p> </li> <li> <p> <code>FailedCount</code> </p> </li> <li> <p> <code>UnreportedNotApplicableCount</code>
              </p> </li> <li> <p> <code>NotApplicableCount</code> </p> </li> </ul>
          title: Key
        Values:
          allOf:
          - $ref: '#/components/schemas/InstancePatchStateFilterValues'
          - description: The value for the filter. Must be an integer greater than
              or equal to 0.
          title: Values
        Type:
          allOf:
          - $ref: '#/components/schemas/InstancePatchStateOperatorType'
          - description: The type of comparison that should be performed for the value.
          title: Type
      required:
      - Key
      - Type
      - Values
      title: InstancePatchStateFilter
      type: object
    InstancePatchStateFilterValue:
      title: InstancePatchStateFilterValue
      type: string
    InventoryAggregatorExpression:
      maxLength: 1000
      minLength: 1
      type: string
    InventoryGroupList:
      items:
        $ref: '#/components/schemas/InventoryGroup'
      maxItems: 15
      minItems: 1
      type: array
    InventoryAggregator:
      description: Specifies the inventory type and attribute for the aggregation
        execution.
      properties:
        Expression:
          allOf:
          - $ref: '#/components/schemas/InventoryAggregatorExpression'
          - description: The inventory type and attribute name for aggregation.
          title: Expression
        Aggregators:
          allOf:
          - $ref: '#/components/schemas/InventoryAggregatorList'
          - description: Nested aggregators to further refine aggregation for an inventory
              type.
          title: Aggregators
        Groups:
          allOf:
          - $ref: '#/components/schemas/InventoryGroupList'
          - description: A user-defined set of one or more filters on which to aggregate
              inventory data. Groups return a count of resources that match and don't
              match the specified criteria.
          title: Groups
      title: InventoryAggregator
      type: object
    InventoryAttributeDataType:
      enum:
      - string
      - number
      title: InventoryAttributeDataType
      type: string
    InventoryDeletionLastStatusMessage:
      type: string
    InventoryDeletionLastStatusUpdateTime:
      format: date-time
      type: string
    InventoryDeletionStartTime:
      format: date-time
      type: string
    InventoryDeletionStatus:
      enum:
      - InProgress
      - Complete
      title: InventoryDeletionStatus
      type: string
    InventoryDeletionStatusItem:
      description: Status information returned by the <code>DeleteInventory</code>
        operation.
      properties:
        DeletionId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          - description: The deletion ID returned by the <code>DeleteInventory</code>
              operation.
          title: DeletionId
        TypeName:
          allOf:
          - $ref: '#/components/schemas/InventoryItemTypeName'
          - description: The name of the inventory data type.
          title: TypeName
        DeletionStartTime:
          allOf:
          - $ref: '#/components/schemas/InventoryDeletionStartTime'
          - description: The UTC timestamp when the delete operation started.
          title: DeletionStartTime
        LastStatus:
          allOf:
          - $ref: '#/components/schemas/InventoryDeletionStatus'
          - description: The status of the operation. Possible values are InProgress
              and Complete.
          title: LastStatus
        LastStatusMessage:
          allOf:
          - $ref: '#/components/schemas/InventoryDeletionLastStatusMessage'
          - description: Information about the status.
          title: LastStatusMessage
        DeletionSummary:
          $ref: '#/components/schemas/InventoryDeletionStatusItem_DeletionSummary'
        LastStatusUpdateTime:
          allOf:
          - $ref: '#/components/schemas/InventoryDeletionLastStatusUpdateTime'
          - description: The UTC timestamp of when the last status report.
          title: LastStatusUpdateTime
      title: InventoryDeletionStatusItem
      type: object
    TotalCount:
      type: integer
    RemainingCount:
      type: integer
    InventoryDeletionSummaryItems:
      items:
        $ref: '#/components/schemas/InventoryDeletionSummaryItem'
      type: array
    InventoryItemSchemaVersion:
      pattern: "^([0-9]{1,6})(\\.[0-9]{1,6})$"
      type: string
    ResourceCount:
      type: integer
    InventoryDeletionSummaryItem:
      description: "Either a count, remaining count, or a version number in a delete\
        \ inventory summary."
      properties:
        Version:
          allOf:
          - $ref: '#/components/schemas/InventoryItemSchemaVersion'
          - description: The inventory type version.
          title: Version
        Count:
          allOf:
          - $ref: '#/components/schemas/ResourceCount'
          - description: A count of the number of deleted items.
          title: Count
        RemainingCount:
          allOf:
          - $ref: '#/components/schemas/RemainingCount'
          - description: The remaining number of items to delete.
          title: RemainingCount
      title: InventoryDeletionSummaryItem
      type: object
    InventoryFilterKey:
      maxLength: 200
      minLength: 1
      type: string
    InventoryFilterValueList:
      items:
        $ref: '#/components/schemas/InventoryFilterValue'
      maxItems: 40
      minItems: 1
      type: array
    InventoryQueryOperatorType:
      enum:
      - Equal
      - NotEqual
      - BeginWith
      - LessThan
      - GreaterThan
      - Exists
      title: InventoryQueryOperatorType
      type: string
    InventoryFilter:
      description: One or more filters. Use a filter to return a more specific list
        of results.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/InventoryFilterKey'
          - description: The name of the filter key.
          title: Key
        Values:
          allOf:
          - $ref: '#/components/schemas/InventoryFilterValueList'
          - description: "Inventory filter values. Example: inventory filter where\
              \ managed node IDs are specified as values <code>Key=AWS:InstanceInformation.InstanceId,Values=\
              \ i-a12b3c4d5e6g, i-1a2b3c4d5e6,Type=Equal</code>. "
          title: Values
        Type:
          allOf:
          - $ref: '#/components/schemas/InventoryQueryOperatorType'
          - description: "<p>The type of filter.</p> <note> <p>The <code>Exists</code>\
              \ filter must be used with aggregators. For more information, see <a\
              \ href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-inventory-aggregate.html\"\
              >Aggregating inventory data</a> in the <i>Amazon Web Services Systems\
              \ Manager User Guide</i>.</p> </note>"
          title: Type
      required:
      - Key
      - Values
      title: InventoryFilter
      type: object
    InventoryFilterValue:
      title: InventoryFilterValue
      type: string
    InventoryGroupName:
      maxLength: 200
      minLength: 1
      type: string
    InventoryGroup:
      description: A user-defined set of one or more filters on which to aggregate
        inventory data. Groups return a count of resources that match and don't match
        the specified criteria.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/InventoryGroupName'
          - description: The name of the group.
          title: Name
        Filters:
          allOf:
          - $ref: '#/components/schemas/InventoryFilterList'
          - description: 'Filters define the criteria for the group. The <code>matchingCount</code>
              field displays the number of resources that match the criteria. The
              <code>notMatchingCount</code> field displays the number of resources
              that don''t match the criteria. '
          title: Filters
      required:
      - Filters
      - Name
      title: InventoryGroup
      type: object
    InventoryItemCaptureTime:
      pattern: "^(20)[0-9][0-9]-(0[1-9]|1[012])-([12][0-9]|3[01]|0[1-9])(T)(2[0-3]|[0-1][0-9])(:[0-5][0-9])(:[0-5][0-9])(Z)$"
      type: string
    InventoryItemContentHash:
      maxLength: 256
      type: string
    InventoryItemEntryList:
      items:
        $ref: '#/components/schemas/InventoryItemEntry'
      maxItems: 10000
      minItems: 0
      type: array
    InventoryItemContentContext:
      additionalProperties:
        $ref: '#/components/schemas/AttributeValue'
      maxProperties: 50
      minProperties: 0
      type: object
    InventoryItem:
      description: Information collected from managed nodes based on your inventory
        policy document
      properties:
        TypeName:
          allOf:
          - $ref: '#/components/schemas/InventoryItemTypeName'
          - description: "The name of the inventory type. Default inventory item type\
              \ names start with <code>AWS</code>. Custom inventory type names will\
              \ start with Custom. Default inventory item types include the following:\
              \ <code>AWS:AWSComponent</code>, <code>AWS:Application</code>, <code>AWS:InstanceInformation</code>,\
              \ <code>AWS:Network</code>, and <code>AWS:WindowsUpdate</code>."
          title: TypeName
        SchemaVersion:
          allOf:
          - $ref: '#/components/schemas/InventoryItemSchemaVersion'
          - description: The schema version for the inventory item.
          title: SchemaVersion
        CaptureTime:
          allOf:
          - $ref: '#/components/schemas/InventoryItemCaptureTime'
          - description: The time the inventory information was collected.
          title: CaptureTime
        ContentHash:
          allOf:
          - $ref: '#/components/schemas/InventoryItemContentHash'
          - description: 'MD5 hash of the inventory item type contents. The content
              hash is used to determine whether to update inventory information. The
              PutInventory API doesn''t update the inventory item type contents if
              the MD5 hash hasn''t changed since last update. '
          title: ContentHash
        Content:
          allOf:
          - $ref: '#/components/schemas/InventoryItemEntryList'
          - description: The inventory data of the inventory type.
          title: Content
        Context:
          allOf:
          - $ref: '#/components/schemas/InventoryItemContentContext'
          - description: "A map of associated properties for a specified inventory\
              \ type. For example, with this attribute, you can specify the <code>ExecutionId</code>,\
              \ <code>ExecutionType</code>, <code>ComplianceType</code> properties\
              \ of the <code>AWS:ComplianceItem</code> type."
          title: Context
      required:
      - CaptureTime
      - SchemaVersion
      - TypeName
      title: InventoryItem
      type: object
    InventoryItemAttributeName:
      type: string
    InventoryItemAttribute:
      description: Attributes are the entries within the inventory item content. It
        contains name and value.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/InventoryItemAttributeName'
          - description: Name of the inventory item attribute.
          title: Name
        DataType:
          allOf:
          - $ref: '#/components/schemas/InventoryAttributeDataType'
          - description: 'The data type of the inventory item attribute. '
          title: DataType
      required:
      - DataType
      - Name
      title: InventoryItemAttribute
      type: object
    InventoryItemAttributeList:
      items:
        $ref: '#/components/schemas/InventoryItemAttribute'
      maxItems: 50
      minItems: 1
      type: array
    InventoryItemEntry:
      additionalProperties:
        $ref: '#/components/schemas/AttributeValue'
      maxProperties: 50
      minProperties: 0
      title: InventoryItemEntry
      type: object
    InventoryItemList:
      items:
        $ref: '#/components/schemas/InventoryItem'
      maxItems: 30
      minItems: 1
      type: array
    InventoryTypeDisplayName:
      type: string
    InventoryItemSchema:
      description: The inventory item schema definition. Users can use this to compose
        inventory query filters.
      properties:
        TypeName:
          allOf:
          - $ref: '#/components/schemas/InventoryItemTypeName'
          - description: "The name of the inventory type. Default inventory item type\
              \ names start with Amazon Web Services. Custom inventory type names\
              \ will start with Custom. Default inventory item types include the following:\
              \ <code>AWS:AWSComponent</code>, <code>AWS:Application</code>, <code>AWS:InstanceInformation</code>,\
              \ <code>AWS:Network</code>, and <code>AWS:WindowsUpdate</code>."
          title: TypeName
        Version:
          allOf:
          - $ref: '#/components/schemas/InventoryItemSchemaVersion'
          - description: The schema version for the inventory item.
          title: Version
        Attributes:
          allOf:
          - $ref: '#/components/schemas/InventoryItemAttributeList'
          - description: The schema attributes for inventory. This contains data type
              and attribute name.
          title: Attributes
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/InventoryTypeDisplayName'
          - description: The alias name of the inventory type. The alias name is used
              for display purposes.
          title: DisplayName
      required:
      - Attributes
      - TypeName
      title: InventoryItemSchema
      type: object
    InventoryResultEntityId:
      type: string
    InventoryResultItemMap:
      additionalProperties:
        $ref: '#/components/schemas/InventoryResultItem'
      type: object
    InventoryResultEntity:
      description: Inventory query results.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/InventoryResultEntityId'
          - description: "ID of the inventory result entity. For example, for managed\
              \ node inventory the result will be the managed node ID. For EC2 instance\
              \ inventory, the result will be the instance ID. "
          title: Id
        Data:
          allOf:
          - $ref: '#/components/schemas/InventoryResultItemMap'
          - description: The data section in the inventory result entity JSON.
          title: Data
      title: InventoryResultEntity
      type: object
    InventoryResultItem:
      description: The inventory result item.
      properties:
        TypeName:
          allOf:
          - $ref: '#/components/schemas/InventoryItemTypeName'
          - description: The name of the inventory result item type.
          title: TypeName
        SchemaVersion:
          allOf:
          - $ref: '#/components/schemas/InventoryItemSchemaVersion'
          - description: The schema version for the inventory result item/
          title: SchemaVersion
        CaptureTime:
          allOf:
          - $ref: '#/components/schemas/InventoryItemCaptureTime'
          - description: The time inventory item data was captured.
          title: CaptureTime
        ContentHash:
          allOf:
          - $ref: '#/components/schemas/InventoryItemContentHash'
          - description: 'MD5 hash of the inventory item type contents. The content
              hash is used to determine whether to update inventory information. The
              PutInventory API doesn''t update the inventory item type contents if
              the MD5 hash hasn''t changed since last update. '
          title: ContentHash
        Content:
          allOf:
          - $ref: '#/components/schemas/InventoryItemEntryList'
          - description: 'Contains all the inventory data of the item type. Results
              include attribute names and values. '
          title: Content
      required:
      - Content
      - SchemaVersion
      - TypeName
      title: InventoryResultItem
      type: object
    InventoryResultItemKey:
      type: string
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      title: TagKey
      type: string
    KeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      type: array
    PSParameterVersion:
      type: integer
    ParameterLabelList:
      items:
        $ref: '#/components/schemas/ParameterLabel'
      maxItems: 10
      minItems: 1
      type: array
    LastResourceDataSyncMessage:
      type: string
    LastResourceDataSyncStatus:
      enum:
      - Successful
      - Failed
      - InProgress
      title: LastResourceDataSyncStatus
      type: string
    LastResourceDataSyncTime:
      format: date-time
      type: string
    LastSuccessfulResourceDataSyncTime:
      format: date-time
      type: string
    OpsItemEventFilters:
      items:
        $ref: '#/components/schemas/OpsItemEventFilter'
      type: array
    OpsItemEventMaxResults:
      maximum: 50
      minimum: 1
      type: integer
    OpsItemEventSummaries:
      items:
        $ref: '#/components/schemas/OpsItemEventSummary'
      type: array
    OpsItemRelatedItemsFilters:
      items:
        $ref: '#/components/schemas/OpsItemRelatedItemsFilter'
      type: array
    OpsItemRelatedItemsMaxResults:
      maximum: 50
      minimum: 1
      type: integer
    OpsItemRelatedItemSummaries:
      items:
        $ref: '#/components/schemas/OpsItemRelatedItemSummary'
      type: array
    ListOpsMetadataMaxResults:
      maximum: 50
      minimum: 1
      type: integer
    OpsMetadataFilterList:
      items:
        $ref: '#/components/schemas/OpsMetadataFilter'
      maxItems: 10
      minItems: 0
      type: array
    OpsMetadataList:
      items:
        $ref: '#/components/schemas/OpsMetadata'
      maxItems: 50
      minItems: 1
      type: array
    ResourceComplianceSummaryItemList:
      items:
        $ref: '#/components/schemas/ResourceComplianceSummaryItem'
      type: array
    ResourceDataSyncItemList:
      items:
        $ref: '#/components/schemas/ResourceDataSyncItem'
      type: array
    Long:
      type: integer
    MaintenanceWindowAutomationParameters:
      description: The parameters for an <code>AUTOMATION</code> task type.
      properties:
        DocumentVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: The version of an Automation runbook to use during task execution.
          title: DocumentVersion
        Parameters:
          allOf:
          - $ref: '#/components/schemas/AutomationParameterMap'
          - description: "<p>The parameters for the <code>AUTOMATION</code> task.</p>\
              \ <p>For information about specifying and updating task parameters,\
              \ see <a>RegisterTaskWithMaintenanceWindow</a> and <a>UpdateMaintenanceWindowTask</a>.</p>\
              \ <note> <p> <code>LoggingInfo</code> has been deprecated. To specify\
              \ an Amazon Simple Storage Service (Amazon S3) bucket to contain logs,\
              \ instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code>\
              \ options in the <code>TaskInvocationParameters</code> structure. For\
              \ information about how Amazon Web Services Systems Manager handles\
              \ these options for the supported maintenance window task types, see\
              \ <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p> <code>TaskParameters</code>\
              \ has been deprecated. To specify parameters to pass to a task when\
              \ it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code>\
              \ structure. For information about how Systems Manager handles these\
              \ options for the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p>\
              \ <p>For <code>AUTOMATION</code> task types, Amazon Web Services Systems\
              \ Manager ignores any values specified for these parameters.</p> </note>"
          title: Parameters
      title: MaintenanceWindowAutomationParameters
      type: object
    MaintenanceWindowExecution:
      description: 'Describes the information about an execution of a maintenance
        window. '
      properties:
        WindowId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowId'
          - description: The ID of the maintenance window.
          title: WindowId
        WindowExecutionId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionId'
          - description: The ID of the maintenance window execution.
          title: WindowExecutionId
        Status:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionStatus'
          - description: The status of the execution.
          title: Status
        StatusDetails:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionStatusDetails'
          - description: The details explaining the status. Not available for all
              status values.
          title: StatusDetails
        StartTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time the execution started.
          title: StartTime
        EndTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time the execution finished.
          title: EndTime
      title: MaintenanceWindowExecution
      type: object
    MaintenanceWindowExecutionTaskIdentity:
      description: Information about a task execution performed as part of a maintenance
        window execution.
      properties:
        WindowExecutionId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionId'
          - description: The ID of the maintenance window execution that ran the task.
          title: WindowExecutionId
        TaskExecutionId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionTaskId'
          - description: The ID of the specific task execution in the maintenance
              window execution.
          title: TaskExecutionId
        Status:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionStatus'
          - description: The status of the task execution.
          title: Status
        StatusDetails:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionStatusDetails'
          - description: The details explaining the status of the task execution.
              Not available for all status values.
          title: StatusDetails
        StartTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time the task execution started.
          title: StartTime
        EndTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time the task execution finished.
          title: EndTime
        TaskArn:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskArn'
          - description: The Amazon Resource Name (ARN) of the task that ran.
          title: TaskArn
        TaskType:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskType'
          - description: The type of task that ran.
          title: TaskType
        AlarmConfiguration:
          $ref: '#/components/schemas/MaintenanceWindowExecutionTaskIdentity_AlarmConfiguration'
        TriggeredAlarms:
          allOf:
          - $ref: '#/components/schemas/AlarmStateInformationList'
          - description: The CloudWatch alarm that was invoked by the maintenance
              window task.
          title: TriggeredAlarms
      title: MaintenanceWindowExecutionTaskIdentity
      type: object
    MaintenanceWindowExecutionTaskInvocationIdentity:
      description: Describes the information about a task invocation for a particular
        target as part of a task execution performed as part of a maintenance window
        execution.
      properties:
        WindowExecutionId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionId'
          - description: The ID of the maintenance window execution that ran the task.
          title: WindowExecutionId
        TaskExecutionId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionTaskId'
          - description: The ID of the specific task execution in the maintenance
              window execution.
          title: TaskExecutionId
        InvocationId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionTaskInvocationId'
          - description: The ID of the task invocation.
          title: InvocationId
        ExecutionId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionTaskExecutionId'
          - description: "The ID of the action performed in the service that actually\
              \ handled the task invocation. If the task type is <code>RUN_COMMAND</code>,\
              \ this value is the command ID."
          title: ExecutionId
        TaskType:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskType'
          - description: The task type.
          title: TaskType
        Parameters:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionTaskInvocationParameters'
          - description: The parameters that were provided for the invocation when
              it was run.
          title: Parameters
        Status:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionStatus'
          - description: The status of the task invocation.
          title: Status
        StatusDetails:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowExecutionStatusDetails'
          - description: 'The details explaining the status of the task invocation.
              Not available for all status values. '
          title: StatusDetails
        StartTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time the invocation started.
          title: StartTime
        EndTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time the invocation finished.
          title: EndTime
        OwnerInformation:
          allOf:
          - $ref: '#/components/schemas/OwnerInformation'
          - description: User-provided value that was specified when the target was
              registered with the maintenance window. This was also included in any
              Amazon CloudWatch Events events raised during the task invocation.
          title: OwnerInformation
        WindowTargetId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskTargetId'
          - description: The ID of the target definition in this maintenance window
              the invocation was performed for.
          title: WindowTargetId
      title: MaintenanceWindowExecutionTaskInvocationIdentity
      type: object
    MaintenanceWindowFilterKey:
      maxLength: 128
      minLength: 1
      type: string
    MaintenanceWindowFilterValues:
      items:
        $ref: '#/components/schemas/MaintenanceWindowFilterValue'
      type: array
    MaintenanceWindowFilter:
      description: <p>Filter used in the request. Supported filter keys depend on
        the API operation that includes the filter. API operations that use <code>MaintenanceWindowFilter&gt;</code>
        include the following:</p> <ul> <li> <p> <a>DescribeMaintenanceWindowExecutions</a>
        </p> </li> <li> <p> <a>DescribeMaintenanceWindowExecutionTaskInvocations</a>
        </p> </li> <li> <p> <a>DescribeMaintenanceWindowExecutionTasks</a> </p> </li>
        <li> <p> <a>DescribeMaintenanceWindows</a> </p> </li> <li> <p> <a>DescribeMaintenanceWindowTargets</a>
        </p> </li> <li> <p> <a>DescribeMaintenanceWindowTasks</a> </p> </li> </ul>
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowFilterKey'
          - description: The name of the filter.
          title: Key
        Values:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowFilterValues'
          - description: The filter values.
          title: Values
      title: MaintenanceWindowFilter
      type: object
    MaintenanceWindowFilterValue:
      maxLength: 256
      minLength: 1
      title: MaintenanceWindowFilterValue
      type: string
    MaintenanceWindowIdentity:
      description: Information about the maintenance window.
      properties:
        WindowId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowId'
          - description: The ID of the maintenance window.
          title: WindowId
        Name:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowName'
          - description: The name of the maintenance window.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowDescription'
          - description: A description of the maintenance window.
          title: Description
        Enabled:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowEnabled'
          - description: Indicates whether the maintenance window is enabled.
          title: Enabled
        Duration:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowDurationHours'
          - description: The duration of the maintenance window in hours.
          title: Duration
        Cutoff:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowCutoff'
          - description: The number of hours before the end of the maintenance window
              that Amazon Web Services Systems Manager stops scheduling new tasks
              for execution.
          title: Cutoff
        Schedule:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowSchedule'
          - description: The schedule of the maintenance window in the form of a cron
              or rate expression.
          title: Schedule
        ScheduleTimezone:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTimezone'
          - description: "The time zone that the scheduled maintenance window executions\
              \ are based on, in Internet Assigned Numbers Authority (IANA) format."
          title: ScheduleTimezone
        ScheduleOffset:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowOffset'
          - description: The number of days to wait to run a maintenance window after
              the scheduled cron expression date and time.
          title: ScheduleOffset
        EndDate:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowStringDateTime'
          - description: "The date and time, in ISO-8601 Extended format, for when\
              \ the maintenance window is scheduled to become inactive."
          title: EndDate
        StartDate:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowStringDateTime'
          - description: "The date and time, in ISO-8601 Extended format, for when\
              \ the maintenance window is scheduled to become active."
          title: StartDate
        NextExecutionTime:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowStringDateTime'
          - description: "The next time the maintenance window will actually run,\
              \ taking into account any specified times for the maintenance window\
              \ to become active or inactive."
          title: NextExecutionTime
      title: MaintenanceWindowIdentity
      type: object
    MaintenanceWindowIdentityForTarget:
      description: The maintenance window to which the specified target belongs.
      properties:
        WindowId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowId'
          - description: The ID of the maintenance window.
          title: WindowId
        Name:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowName'
          - description: The name of the maintenance window.
          title: Name
      title: MaintenanceWindowIdentityForTarget
      type: object
    MaintenanceWindowLambdaClientContext:
      maxLength: 8000
      minLength: 1
      type: string
    MaintenanceWindowLambdaQualifier:
      maxLength: 128
      minLength: 1
      type: string
    MaintenanceWindowLambdaPayload:
      format: password
      maxLength: 4096
      type: string
    MaintenanceWindowLambdaParameters:
      description: "<p>The parameters for a <code>LAMBDA</code> task type.</p> <p>For\
        \ information about specifying and updating task parameters, see <a>RegisterTaskWithMaintenanceWindow</a>\
        \ and <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p> <code>LoggingInfo</code>\
        \ has been deprecated. To specify an Amazon Simple Storage Service (Amazon\
        \ S3) bucket to contain logs, instead use the <code>OutputS3BucketName</code>\
        \ and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code>\
        \ structure. For information about how Amazon Web Services Systems Manager\
        \ handles these options for the supported maintenance window task types, see\
        \ <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p> <code>TaskParameters</code>\
        \ has been deprecated. To specify parameters to pass to a task when it runs,\
        \ instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code>\
        \ structure. For information about how Systems Manager handles these options\
        \ for the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p>\
        \ <p>For Lambda tasks, Systems Manager ignores any values specified for TaskParameters\
        \ and LoggingInfo.</p> </note>"
      properties:
        ClientContext:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowLambdaClientContext'
          - description: Pass client-specific information to the Lambda function that
              you are invoking. You can then process the client information in your
              Lambda function as you choose through the context variable.
          title: ClientContext
        Qualifier:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowLambdaQualifier'
          - description: "(Optional) Specify an Lambda function version or alias name.\
              \ If you specify a function version, the operation uses the qualified\
              \ function Amazon Resource Name (ARN) to invoke a specific Lambda function.\
              \ If you specify an alias name, the operation uses the alias ARN to\
              \ invoke the Lambda function version to which the alias points."
          title: Qualifier
        Payload:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowLambdaPayload'
          - description: JSON to provide to your Lambda function as input.
          title: Payload
      title: MaintenanceWindowLambdaParameters
      type: object
    MaintenanceWindowRunCommandParameters:
      description: "<p>The parameters for a <code>RUN_COMMAND</code> task type.</p>\
        \ <p>For information about specifying and updating task parameters, see <a>RegisterTaskWithMaintenanceWindow</a>\
        \ and <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p> <code>LoggingInfo</code>\
        \ has been deprecated. To specify an Amazon Simple Storage Service (Amazon\
        \ S3) bucket to contain logs, instead use the <code>OutputS3BucketName</code>\
        \ and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code>\
        \ structure. For information about how Amazon Web Services Systems Manager\
        \ handles these options for the supported maintenance window task types, see\
        \ <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p> <code>TaskParameters</code>\
        \ has been deprecated. To specify parameters to pass to a task when it runs,\
        \ instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code>\
        \ structure. For information about how Systems Manager handles these options\
        \ for the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p>\
        \ <p>For <code>RUN_COMMAND</code> tasks, Systems Manager uses specified values\
        \ for <code>TaskParameters</code> and <code>LoggingInfo</code> only if no\
        \ values are specified for <code>TaskInvocationParameters</code>. </p> </note>"
      properties:
        Comment:
          allOf:
          - $ref: '#/components/schemas/Comment'
          - description: Information about the commands to run.
          title: Comment
        CloudWatchOutputConfig:
          $ref: '#/components/schemas/CloudWatchOutputConfig'
        DocumentHash:
          allOf:
          - $ref: '#/components/schemas/DocumentHash'
          - description: The SHA-256 or SHA-1 hash created by the system when the
              document was created. SHA-1 hashes have been deprecated.
          title: DocumentHash
        DocumentHashType:
          allOf:
          - $ref: '#/components/schemas/DocumentHashType'
          - description: SHA-256 or SHA-1. SHA-1 hashes have been deprecated.
          title: DocumentHashType
        DocumentVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: "<p>The Amazon Web Services Systems Manager document (SSM\
              \ document) version to use in the request. You can specify <code>$DEFAULT</code>,\
              \ <code>$LATEST</code>, or a specific version number. If you run commands\
              \ by using the Amazon Web Services CLI, then you must escape the first\
              \ two options by using a backslash. If you specify a version number,\
              \ then you don't need to use the backslash. For example:</p> <p> <code>--document-version\
              \ \"\\$DEFAULT\"</code> </p> <p> <code>--document-version \"\\$LATEST\"\
              </code> </p> <p> <code>--document-version \"3\"</code> </p>"
          title: DocumentVersion
        NotificationConfig:
          $ref: '#/components/schemas/MaintenanceWindowRunCommandParameters_NotificationConfig'
        OutputS3BucketName:
          allOf:
          - $ref: '#/components/schemas/S3BucketName'
          - description: The name of the Amazon Simple Storage Service (Amazon S3)
              bucket.
          title: OutputS3BucketName
        OutputS3KeyPrefix:
          allOf:
          - $ref: '#/components/schemas/S3KeyPrefix'
          - description: The S3 bucket subfolder.
          title: OutputS3KeyPrefix
        Parameters:
          allOf:
          - $ref: '#/components/schemas/Parameters'
          - description: The parameters for the <code>RUN_COMMAND</code> task execution.
          title: Parameters
        ServiceRoleArn:
          allOf:
          - $ref: '#/components/schemas/ServiceRole'
          - description: The Amazon Resource Name (ARN) of the Identity and Access
              Management (IAM) service role to use to publish Amazon Simple Notification
              Service (Amazon SNS) notifications for maintenance window Run Command
              tasks.
          title: ServiceRoleArn
        TimeoutSeconds:
          allOf:
          - $ref: '#/components/schemas/TimeoutSeconds'
          - description: "If this time is reached and the command hasn't already started\
              \ running, it doesn't run."
          title: TimeoutSeconds
      title: MaintenanceWindowRunCommandParameters
      type: object
    MaintenanceWindowStepFunctionsInput:
      format: password
      maxLength: 4096
      type: string
    MaintenanceWindowStepFunctionsName:
      maxLength: 80
      minLength: 1
      type: string
    MaintenanceWindowStepFunctionsParameters:
      description: "<p>The parameters for a <code>STEP_FUNCTIONS</code> task.</p>\
        \ <p>For information about specifying and updating task parameters, see <a>RegisterTaskWithMaintenanceWindow</a>\
        \ and <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p> <code>LoggingInfo</code>\
        \ has been deprecated. To specify an Amazon Simple Storage Service (Amazon\
        \ S3) bucket to contain logs, instead use the <code>OutputS3BucketName</code>\
        \ and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code>\
        \ structure. For information about how Amazon Web Services Systems Manager\
        \ handles these options for the supported maintenance window task types, see\
        \ <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p> <code>TaskParameters</code>\
        \ has been deprecated. To specify parameters to pass to a task when it runs,\
        \ instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code>\
        \ structure. For information about how Systems Manager handles these options\
        \ for the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p>\
        \ <p>For Step Functions tasks, Systems Manager ignores any values specified\
        \ for <code>TaskParameters</code> and <code>LoggingInfo</code>.</p> </note>"
      properties:
        Input:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowStepFunctionsInput'
          - description: The inputs for the <code>STEP_FUNCTIONS</code> task.
          title: Input
        Name:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowStepFunctionsName'
          - description: The name of the <code>STEP_FUNCTIONS</code> task.
          title: Name
      title: MaintenanceWindowStepFunctionsParameters
      type: object
    MaintenanceWindowTarget:
      description: The target registered with the maintenance window.
      properties:
        WindowId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowId'
          - description: The ID of the maintenance window to register the target with.
          title: WindowId
        WindowTargetId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTargetId'
          - description: The ID of the target.
          title: WindowTargetId
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowResourceType'
          - description: The type of target that is being registered with the maintenance
              window.
          title: ResourceType
        Targets:
          allOf:
          - $ref: '#/components/schemas/Targets'
          - description: "<p>The targets, either managed nodes or tags.</p> <p>Specify\
              \ managed nodes using the following format:</p> <p> <code>Key=instanceids,Values=&lt;instanceid1&gt;,&lt;instanceid2&gt;</code>\
              \ </p> <p>Tags are specified using the following format:</p> <p> <code>Key=&lt;tag\
              \ name&gt;,Values=&lt;tag value&gt;</code>.</p>"
          title: Targets
        OwnerInformation:
          allOf:
          - $ref: '#/components/schemas/OwnerInformation'
          - description: A user-provided value that will be included in any Amazon
              CloudWatch Events events that are raised while running tasks for these
              targets in this maintenance window.
          title: OwnerInformation
        Name:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowName'
          - description: The name for the maintenance window target.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowDescription'
          - description: A description for the target.
          title: Description
      title: MaintenanceWindowTarget
      type: object
    MaintenanceWindowTask:
      description: Information about a task defined for a maintenance window.
      properties:
        WindowId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowId'
          - description: The ID of the maintenance window where the task is registered.
          title: WindowId
        WindowTaskId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskId'
          - description: The task ID.
          title: WindowTaskId
        TaskArn:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskArn'
          - description: "The resource that the task uses during execution. For <code>RUN_COMMAND</code>\
              \ and <code>AUTOMATION</code> task types, <code>TaskArn</code> is the\
              \ Amazon Web Services Systems Manager (SSM document) name or ARN. For\
              \ <code>LAMBDA</code> tasks, it's the function name or ARN. For <code>STEP_FUNCTIONS</code>\
              \ tasks, it's the state machine ARN."
          title: TaskArn
        Type:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskType'
          - description: The type of task.
          title: Type
        Targets:
          allOf:
          - $ref: '#/components/schemas/Targets'
          - description: "The targets (either managed nodes or tags). Managed nodes\
              \ are specified using <code>Key=instanceids,Values=&lt;instanceid1&gt;,&lt;instanceid2&gt;</code>.\
              \ Tags are specified using <code>Key=&lt;tag name&gt;,Values=&lt;tag\
              \ value&gt;</code>."
          title: Targets
        TaskParameters:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskParameters'
          - description: "<p>The parameters that should be passed to the task when\
              \ it is run.</p> <note> <p> <code>TaskParameters</code> has been deprecated.\
              \ To specify parameters to pass to a task when it runs, instead use\
              \ the <code>Parameters</code> option in the <code>TaskInvocationParameters</code>\
              \ structure. For information about how Systems Manager handles these\
              \ options for the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p>\
              \ </note>"
          title: TaskParameters
        Priority:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskPriority'
          - description: "The priority of the task in the maintenance window. The\
              \ lower the number, the higher the priority. Tasks that have the same\
              \ priority are scheduled in parallel."
          title: Priority
        LoggingInfo:
          $ref: '#/components/schemas/MaintenanceWindowTask_LoggingInfo'
        ServiceRoleArn:
          allOf:
          - $ref: '#/components/schemas/ServiceRole'
          - description: The Amazon Resource Name (ARN) of the Identity and Access
              Management (IAM) service role to use to publish Amazon Simple Notification
              Service (Amazon SNS) notifications for maintenance window Run Command
              tasks.
          title: ServiceRoleArn
        MaxConcurrency:
          allOf:
          - $ref: '#/components/schemas/MaxConcurrency'
          - description: "<p>The maximum number of targets this task can be run for,\
              \ in parallel.</p> <note> <p>Although this element is listed as \"Required:\
              \ No\", a value can be omitted only when you are registering or updating\
              \ a <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/maintenance-windows-targetless-tasks.html\"\
              >targetless task</a> You must provide a value in all other cases.</p>\
              \ <p>For maintenance window tasks without a target specified, you can't\
              \ supply a value for this option. Instead, the system inserts a placeholder\
              \ value of <code>1</code>. This value doesn't affect the running of\
              \ your task.</p> </note>"
          title: MaxConcurrency
        MaxErrors:
          allOf:
          - $ref: '#/components/schemas/MaxErrors'
          - description: "<p>The maximum number of errors allowed before this task\
              \ stops being scheduled.</p> <note> <p>Although this element is listed\
              \ as \"Required: No\", a value can be omitted only when you are registering\
              \ or updating a <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/maintenance-windows-targetless-tasks.html\"\
              >targetless task</a> You must provide a value in all other cases.</p>\
              \ <p>For maintenance window tasks without a target specified, you can't\
              \ supply a value for this option. Instead, the system inserts a placeholder\
              \ value of <code>1</code>. This value doesn't affect the running of\
              \ your task.</p> </note>"
          title: MaxErrors
        Name:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowName'
          - description: The task name.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowDescription'
          - description: A description of the task.
          title: Description
        CutoffBehavior:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskCutoffBehavior'
          - description: 'The specification for whether tasks should continue to run
              after the cutoff time specified in the maintenance windows is reached. '
          title: CutoffBehavior
        AlarmConfiguration:
          $ref: '#/components/schemas/MaintenanceWindowExecutionTaskIdentity_AlarmConfiguration'
      title: MaintenanceWindowTask
      type: object
    MaintenanceWindowTaskParameterName:
      maxLength: 255
      minLength: 1
      type: string
    MaintenanceWindowTaskParameterValue:
      format: password
      maxLength: 255
      minLength: 1
      title: MaintenanceWindowTaskParameterValue
      type: string
    MaintenanceWindowTaskParameterValueList:
      items:
        $ref: '#/components/schemas/MaintenanceWindowTaskParameterValue'
      type: array
    MaintenanceWindowTaskParameterValueExpression:
      description: Defines the values for a task parameter.
      properties:
        Values:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowTaskParameterValueList'
          - description: "This field contains an array of 0 or more strings, each\
              \ 1 to 255 characters in length."
          title: Values
      title: MaintenanceWindowTaskParameterValueExpression
      type: object
    MaxSessionDuration:
      maxLength: 4
      minLength: 1
      pattern: "^([1-9]|[1-9][0-9]|[1-9][0-9][0-9]|1[0-4][0-3][0-9]|1440)$"
      type: string
    MetadataKey:
      maxLength: 256
      minLength: 1
      pattern: ^(?!\s*$).+
      title: MetadataKey
      type: string
    MetadataKeysToDeleteList:
      items:
        $ref: '#/components/schemas/MetadataKey'
      maxItems: 10
      minItems: 1
      type: array
    MetadataValue:
      description: Metadata to assign to an Application Manager application.
      properties:
        Value:
          allOf:
          - $ref: '#/components/schemas/MetadataValueString'
          - description: Metadata value to assign to an Application Manager application.
          title: Value
      title: MetadataValue
      type: object
    MetadataValueString:
      maxLength: 4096
      minLength: 1
      type: string
    NormalStringMap:
      additionalProperties:
        $ref: '#/components/schemas/String'
      type: object
    NotificationArn:
      type: string
    NotificationEventList:
      items:
        $ref: '#/components/schemas/NotificationEvent'
      type: array
    NotificationType:
      enum:
      - Command
      - Invocation
      title: NotificationType
      type: string
    NotificationEvent:
      enum:
      - All
      - InProgress
      - Success
      - TimedOut
      - Cancelled
      - Failed
      title: NotificationEvent
      type: string
    OpsAggregatorType:
      maxLength: 20
      minLength: 1
      pattern: ^(range|count|sum)
      type: string
    OpsDataTypeName:
      maxLength: 100
      minLength: 1
      pattern: ^(AWS|Custom):.*$
      type: string
    OpsDataAttributeName:
      maxLength: 128
      minLength: 1
      type: string
    OpsAggregatorValueMap:
      additionalProperties:
        $ref: '#/components/schemas/OpsAggregatorValue'
      maxProperties: 5
      minProperties: 0
      type: object
    OpsAggregator:
      description: "One or more aggregators for viewing counts of OpsData using different\
        \ dimensions such as <code>Source</code>, <code>CreatedTime</code>, or <code>Source\
        \ and CreatedTime</code>, to name a few."
      properties:
        AggregatorType:
          allOf:
          - $ref: '#/components/schemas/OpsAggregatorType'
          - description: Either a <code>Range</code> or <code>Count</code> aggregator
              for limiting an OpsData summary.
          title: AggregatorType
        TypeName:
          allOf:
          - $ref: '#/components/schemas/OpsDataTypeName'
          - description: The data type name to use for viewing counts of OpsData.
          title: TypeName
        AttributeName:
          allOf:
          - $ref: '#/components/schemas/OpsDataAttributeName'
          - description: The name of an OpsData attribute on which to limit the count
              of OpsData.
          title: AttributeName
        Values:
          allOf:
          - $ref: '#/components/schemas/OpsAggregatorValueMap'
          - description: The aggregator value.
          title: Values
        Filters:
          allOf:
          - $ref: '#/components/schemas/OpsFilterList'
          - description: The aggregator filters.
          title: Filters
        Aggregators:
          allOf:
          - $ref: '#/components/schemas/OpsAggregatorList'
          - description: A nested aggregator for viewing counts of OpsData.
          title: Aggregators
      title: OpsAggregator
      type: object
    OpsAggregatorValue:
      maxLength: 2048
      minLength: 0
      title: OpsAggregatorValue
      type: string
    OpsAggregatorValueKey:
      maxLength: 32
      minLength: 1
      type: string
    OpsEntityId:
      type: string
    OpsEntityItemMap:
      additionalProperties:
        $ref: '#/components/schemas/OpsEntityItem'
      type: object
    OpsEntity:
      description: The result of the query.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/OpsEntityId'
          - description: The query ID.
          title: Id
        Data:
          allOf:
          - $ref: '#/components/schemas/OpsEntityItemMap'
          - description: The data returned by the query.
          title: Data
      title: OpsEntity
      type: object
    OpsEntityItemCaptureTime:
      pattern: "^(20)[0-9][0-9]-(0[1-9]|1[012])-([12][0-9]|3[01]|0[1-9])(T)(2[0-3]|[0-1][0-9])(:[0-5][0-9])(:[0-5][0-9])(Z)$"
      type: string
    OpsEntityItemEntryList:
      items:
        $ref: '#/components/schemas/OpsEntityItemEntry'
      maxItems: 10000
      minItems: 0
      type: array
    OpsEntityItem:
      description: The OpsData summary.
      properties:
        CaptureTime:
          allOf:
          - $ref: '#/components/schemas/OpsEntityItemCaptureTime'
          - description: The time the OpsData was captured.
          title: CaptureTime
        Content:
          allOf:
          - $ref: '#/components/schemas/OpsEntityItemEntryList'
          - description: The details of an OpsData summary.
          title: Content
      title: OpsEntityItem
      type: object
    OpsEntityItemEntry:
      additionalProperties:
        $ref: '#/components/schemas/AttributeValue'
      maxProperties: 50
      minProperties: 0
      title: OpsEntityItemEntry
      type: object
    OpsEntityItemKey:
      type: string
    OpsFilterKey:
      maxLength: 200
      minLength: 1
      type: string
    OpsFilterValueList:
      items:
        $ref: '#/components/schemas/OpsFilterValue'
      maxItems: 40
      minItems: 1
      type: array
    OpsFilterOperatorType:
      enum:
      - Equal
      - NotEqual
      - BeginWith
      - LessThan
      - GreaterThan
      - Exists
      title: OpsFilterOperatorType
      type: string
    OpsFilter:
      description: A filter for viewing OpsData summaries.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/OpsFilterKey'
          - description: The name of the filter.
          title: Key
        Values:
          allOf:
          - $ref: '#/components/schemas/OpsFilterValueList'
          - description: The filter value.
          title: Values
        Type:
          allOf:
          - $ref: '#/components/schemas/OpsFilterOperatorType'
          - description: The type of filter.
          title: Type
      required:
      - Key
      - Values
      title: OpsFilter
      type: object
    OpsFilterValue:
      maxLength: 256
      minLength: 0
      title: OpsFilterValue
      type: string
    OpsItemStatus:
      enum:
      - Open
      - InProgress
      - Resolved
      - Pending
      - TimedOut
      - Cancelling
      - Cancelled
      - Failed
      - CompletedWithSuccess
      - CompletedWithFailure
      - Scheduled
      - RunbookInProgress
      - PendingChangeCalendarOverride
      - ChangeCalendarOverrideApproved
      - ChangeCalendarOverrideRejected
      - PendingApproval
      - Approved
      - Rejected
      - Closed
      title: OpsItemStatus
      type: string
    OpsItemDataKey:
      maxLength: 128
      minLength: 1
      pattern: ^(?!\s*$).+
      type: string
    OpsItemDataType:
      enum:
      - SearchableString
      - String
      title: OpsItemDataType
      type: string
    OpsItemDataValueString:
      pattern: "[\\s\\S]*\\S[\\s\\S]*"
      type: string
    OpsItemDataValue:
      description: An object that defines the value of the key and its type in the
        OperationalData map.
      properties:
        Value:
          allOf:
          - $ref: '#/components/schemas/OpsItemDataValueString'
          - description: The value of the OperationalData key.
          title: Value
        Type:
          allOf:
          - $ref: '#/components/schemas/OpsItemDataType'
          - description: The type of key-value pair. Valid types include <code>SearchableString</code>
              and <code>String</code>.
          title: Type
      title: OpsItemDataValue
      type: object
    OpsItemEventFilterKey:
      enum:
      - OpsItemId
      title: OpsItemEventFilterKey
      type: string
    OpsItemEventFilterValues:
      items:
        $ref: '#/components/schemas/OpsItemEventFilterValue'
      type: array
    OpsItemEventFilterOperator:
      enum:
      - Equal
      title: OpsItemEventFilterOperator
      type: string
    OpsItemEventFilter:
      description: 'Describes a filter for a specific list of OpsItem events. You
        can filter event information by using tags. You specify tags by using a key-value
        pair mapping. '
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/OpsItemEventFilterKey'
          - description: "The name of the filter key. Currently, the only supported\
              \ value is <code>OpsItemId</code>."
          title: Key
        Values:
          allOf:
          - $ref: '#/components/schemas/OpsItemEventFilterValues'
          - description: "The values for the filter, consisting of one or more OpsItem\
              \ IDs."
          title: Values
        Operator:
          allOf:
          - $ref: '#/components/schemas/OpsItemEventFilterOperator'
          - description: "The operator used by the filter call. Currently, the only\
              \ supported value is <code>Equal</code>."
          title: Operator
      required:
      - Key
      - Operator
      - Values
      title: OpsItemEventFilter
      type: object
    OpsItemEventFilterValue:
      maxLength: 15
      minLength: 1
      pattern: "^(oi)-[0-9a-f]{12}$"
      title: OpsItemEventFilterValue
      type: string
    OpsItemEventSummary:
      description: Summary information about an OpsItem event or that associated an
        OpsItem with a related item.
      properties:
        OpsItemId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the OpsItem.
          title: OpsItemId
        EventId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of the OpsItem event.
          title: EventId
        Source:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The source of the OpsItem event.
          title: Source
        DetailType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The type of information provided as a detail.
          title: DetailType
        Detail:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specific information about the OpsItem event.
          title: Detail
        CreatedBy:
          $ref: '#/components/schemas/OpsItemEventSummary_CreatedBy'
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date and time the OpsItem event was created.
          title: CreatedTime
      title: OpsItemEventSummary
      type: object
    OpsItemIdentity:
      description: Information about the user or resource that created an OpsItem
        event.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the IAM entity that created
              the OpsItem event.
          title: Arn
      title: OpsItemIdentity
      type: object
    OpsItemFilterKey:
      enum:
      - Status
      - CreatedBy
      - Source
      - Priority
      - Title
      - OpsItemId
      - CreatedTime
      - LastModifiedTime
      - ActualStartTime
      - ActualEndTime
      - PlannedStartTime
      - PlannedEndTime
      - OperationalData
      - OperationalDataKey
      - OperationalDataValue
      - ResourceId
      - AutomationId
      - Category
      - Severity
      - OpsItemType
      - ChangeRequestByRequesterArn
      - ChangeRequestByRequesterName
      - ChangeRequestByApproverArn
      - ChangeRequestByApproverName
      - ChangeRequestByTemplate
      - ChangeRequestByTargetsResourceGroup
      - InsightByType
      - AccountId
      title: OpsItemFilterKey
      type: string
    OpsItemFilterValues:
      items:
        $ref: '#/components/schemas/OpsItemFilterValue'
      type: array
    OpsItemFilterOperator:
      enum:
      - Equal
      - Contains
      - GreaterThan
      - LessThan
      title: OpsItemFilterOperator
      type: string
    OpsItemFilter:
      description: Describes an OpsItem filter.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/OpsItemFilterKey'
          - description: The name of the filter.
          title: Key
        Values:
          allOf:
          - $ref: '#/components/schemas/OpsItemFilterValues'
          - description: The filter value.
          title: Values
        Operator:
          allOf:
          - $ref: '#/components/schemas/OpsItemFilterOperator'
          - description: The operator used by the filter call.
          title: Operator
      required:
      - Key
      - Operator
      - Values
      title: OpsItemFilter
      type: object
    OpsItemFilterValue:
      title: OpsItemFilterValue
      type: string
    OpsItemNotification:
      description: A notification about the OpsItem.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of an Amazon Simple Notification
              Service (Amazon SNS) topic where notifications are sent when this OpsItem
              is edited or changed.
          title: Arn
      title: OpsItemNotification
      type: object
    OpsItemOpsDataKeysList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    OpsItemRelatedItemSummary:
      description: Summary information about related-item resources for an OpsItem.
      properties:
        OpsItemId:
          allOf:
          - $ref: '#/components/schemas/OpsItemId'
          - description: The OpsItem ID.
          title: OpsItemId
        AssociationId:
          allOf:
          - $ref: '#/components/schemas/OpsItemRelatedItemAssociationId'
          - description: The association ID.
          title: AssociationId
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/OpsItemRelatedItemAssociationResourceType'
          - description: The resource type.
          title: ResourceType
        AssociationType:
          allOf:
          - $ref: '#/components/schemas/OpsItemRelatedItemAssociationType'
          - description: The association type.
          title: AssociationType
        ResourceUri:
          allOf:
          - $ref: '#/components/schemas/OpsItemRelatedItemAssociationResourceUri'
          - description: The Amazon Resource Name (ARN) of the related-item resource.
          title: ResourceUri
        CreatedBy:
          $ref: '#/components/schemas/OpsItemIdentity'
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time the related-item association was created.
          title: CreatedTime
        LastModifiedBy:
          $ref: '#/components/schemas/OpsItemIdentity'
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time the related-item association was last updated.
          title: LastModifiedTime
      title: OpsItemRelatedItemSummary
      type: object
    OpsItemRelatedItemsFilterKey:
      enum:
      - ResourceType
      - AssociationId
      - ResourceUri
      title: OpsItemRelatedItemsFilterKey
      type: string
    OpsItemRelatedItemsFilterValues:
      items:
        $ref: '#/components/schemas/OpsItemRelatedItemsFilterValue'
      type: array
    OpsItemRelatedItemsFilterOperator:
      enum:
      - Equal
      title: OpsItemRelatedItemsFilterOperator
      type: string
    OpsItemRelatedItemsFilter:
      description: 'Describes a filter for a specific list of related-item resources. '
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/OpsItemRelatedItemsFilterKey'
          - description: "The name of the filter key. Supported values include <code>ResourceUri</code>,\
              \ <code>ResourceType</code>, or <code>AssociationId</code>."
          title: Key
        Values:
          allOf:
          - $ref: '#/components/schemas/OpsItemRelatedItemsFilterValues'
          - description: The values for the filter.
          title: Values
        Operator:
          allOf:
          - $ref: '#/components/schemas/OpsItemRelatedItemsFilterOperator'
          - description: The operator used by the filter call. The only supported
              operator is <code>EQUAL</code>.
          title: Operator
      required:
      - Key
      - Operator
      - Values
      title: OpsItemRelatedItemsFilter
      type: object
    OpsItemRelatedItemsFilterValue:
      title: OpsItemRelatedItemsFilterValue
      type: string
    OpsItemSummary:
      description: A count of OpsItems.
      properties:
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the IAM entity that created
              the OpsItem.
          title: CreatedBy
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date and time the OpsItem was created.
          title: CreatedTime
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the IAM entity that created
              the OpsItem.
          title: LastModifiedBy
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date and time the OpsItem was last updated.
          title: LastModifiedTime
        Priority:
          allOf:
          - $ref: '#/components/schemas/OpsItemPriority'
          - description: The importance of this OpsItem in relation to other OpsItems
              in the system.
          title: Priority
        Source:
          allOf:
          - $ref: '#/components/schemas/OpsItemSource'
          - description: The impacted Amazon Web Services resource.
          title: Source
        Status:
          allOf:
          - $ref: '#/components/schemas/OpsItemStatus'
          - description: "The OpsItem status. Status can be <code>Open</code>, <code>In\
              \ Progress</code>, or <code>Resolved</code>."
          title: Status
        OpsItemId:
          allOf:
          - $ref: '#/components/schemas/OpsItemId'
          - description: The ID of the OpsItem.
          title: OpsItemId
        Title:
          allOf:
          - $ref: '#/components/schemas/OpsItemTitle'
          - description: A short heading that describes the nature of the OpsItem
              and the impacted resource.
          title: Title
        OperationalData:
          allOf:
          - $ref: '#/components/schemas/OpsItemOperationalData'
          - description: 'Operational data is custom data that provides useful reference
              details about the OpsItem. '
          title: OperationalData
        Category:
          allOf:
          - $ref: '#/components/schemas/OpsItemCategory'
          - description: A list of OpsItems by category.
          title: Category
        Severity:
          allOf:
          - $ref: '#/components/schemas/OpsItemSeverity'
          - description: A list of OpsItems by severity.
          title: Severity
        OpsItemType:
          allOf:
          - $ref: '#/components/schemas/OpsItemType'
          - description: <p>The type of OpsItem. Systems Manager supports the following
              types of OpsItems:</p> <ul> <li> <p> <code>/aws/issue</code> </p> <p>This
              type of OpsItem is used for default OpsItems created by OpsCenter. </p>
              </li> <li> <p> <code>/aws/changerequest</code> </p> <p>This type of
              OpsItem is used by Change Manager for reviewing and approving or rejecting
              change requests. </p> </li> <li> <p> <code>/aws/insights</code> </p>
              <p>This type of OpsItem is used by OpsCenter for aggregating and reporting
              on duplicate OpsItems. </p> </li> </ul>
          title: OpsItemType
        ActualStartTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time a runbook workflow started. Currently reported only
              for the OpsItem type <code>/aws/changerequest</code>.
          title: ActualStartTime
        ActualEndTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time a runbook workflow ended. Currently reported only
              for the OpsItem type <code>/aws/changerequest</code>.
          title: ActualEndTime
        PlannedStartTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time specified in a change request for a runbook workflow
              to start. Currently supported only for the OpsItem type <code>/aws/changerequest</code>.
          title: PlannedStartTime
        PlannedEndTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time specified in a change request for a runbook workflow
              to end. Currently supported only for the OpsItem type <code>/aws/changerequest</code>.
          title: PlannedEndTime
      title: OpsItemSummary
      type: object
    OpsMetadata:
      description: Operational metadata for an application in Application Manager.
      properties:
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/OpsMetadataResourceId'
          - description: The ID of the Application Manager application.
          title: ResourceId
        OpsMetadataArn:
          allOf:
          - $ref: '#/components/schemas/OpsMetadataArn'
          - description: The Amazon Resource Name (ARN) of the OpsMetadata Object
              or blob.
          title: OpsMetadataArn
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date the OpsMetadata object was last updated.
          title: LastModifiedDate
        LastModifiedUser:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The user name who last updated the OpsMetadata object.
          title: LastModifiedUser
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date the OpsMetadata objects was created.
          title: CreationDate
      title: OpsMetadata
      type: object
    OpsMetadataFilterKey:
      maxLength: 128
      minLength: 1
      pattern: ^(?!\s*$).+
      type: string
    OpsMetadataFilterValueList:
      items:
        $ref: '#/components/schemas/OpsMetadataFilterValue'
      maxItems: 10
      minItems: 1
      type: array
    OpsMetadataFilter:
      description: A filter to limit the number of OpsMetadata objects displayed.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/OpsMetadataFilterKey'
          - description: A filter key.
          title: Key
        Values:
          allOf:
          - $ref: '#/components/schemas/OpsMetadataFilterValueList'
          - description: A filter value.
          title: Values
      required:
      - Key
      - Values
      title: OpsMetadataFilter
      type: object
    OpsMetadataFilterValue:
      maxLength: 1024
      minLength: 1
      title: OpsMetadataFilterValue
      type: string
    OpsResultAttribute:
      description: The OpsItem data type to return.
      properties:
        TypeName:
          allOf:
          - $ref: '#/components/schemas/OpsDataTypeName'
          - description: "Name of the data type. Valid value: <code>AWS:OpsItem</code>,\
              \ <code>AWS:EC2InstanceInformation</code>, <code>AWS:OpsItemTrendline</code>,\
              \ or <code>AWS:ComplianceSummary</code>."
          title: TypeName
      required:
      - TypeName
      title: OpsResultAttribute
      type: object
    OutputSourceId:
      maxLength: 36
      minLength: 36
      type: string
    OutputSourceType:
      type: string
    PSParameterSelector:
      maxLength: 128
      minLength: 0
      type: string
    PSParameterValue:
      format: password
      type: string
    ParameterType:
      enum:
      - String
      - StringList
      - SecureString
      title: ParameterType
      type: string
    ParameterDataType:
      maxLength: 128
      minLength: 0
      type: string
    ParameterDescription:
      maxLength: 1024
      minLength: 0
      type: string
    ParameterKeyId:
      maxLength: 256
      minLength: 1
      pattern: "^([a-zA-Z0-9:/_-]+)$"
      type: string
    ParameterTier:
      enum:
      - Standard
      - Advanced
      - Intelligent-Tiering
      title: ParameterTier
      type: string
    ParameterPolicyList:
      items:
        $ref: '#/components/schemas/ParameterInlinePolicy'
      type: array
    ParameterHistory:
      description: Information about parameter usage.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/PSParameterName'
          - description: The name of the parameter.
          title: Name
        Type:
          allOf:
          - $ref: '#/components/schemas/ParameterType'
          - description: The type of parameter used.
          title: Type
        KeyId:
          allOf:
          - $ref: '#/components/schemas/ParameterKeyId'
          - description: The ID of the query key used for this parameter.
          title: KeyId
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: Date the parameter was last changed or updated.
          title: LastModifiedDate
        LastModifiedUser:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Amazon Resource Name (ARN) of the Amazon Web Services user
              who last changed the parameter.
          title: LastModifiedUser
        Description:
          allOf:
          - $ref: '#/components/schemas/ParameterDescription'
          - description: Information about the parameter.
          title: Description
        Value:
          allOf:
          - $ref: '#/components/schemas/PSParameterValue'
          - description: The parameter value.
          title: Value
        AllowedPattern:
          allOf:
          - $ref: '#/components/schemas/AllowedPattern'
          - description: <p>Parameter names can include the following letters and
              symbols.</p> <p>a-zA-Z0-9_.-</p>
          title: AllowedPattern
        Version:
          allOf:
          - $ref: '#/components/schemas/PSParameterVersion'
          - description: The parameter version.
          title: Version
        Labels:
          allOf:
          - $ref: '#/components/schemas/ParameterLabelList'
          - description: Labels assigned to the parameter version.
          title: Labels
        Tier:
          allOf:
          - $ref: '#/components/schemas/ParameterTier'
          - description: The parameter tier.
          title: Tier
        Policies:
          allOf:
          - $ref: '#/components/schemas/ParameterPolicyList'
          - description: <p>Information about the policies assigned to a parameter.</p>
              <p> <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-policies.html">Assigning
              parameter policies</a> in the <i>Amazon Web Services Systems Manager
              User Guide</i>.</p>
          title: Policies
        DataType:
          allOf:
          - $ref: '#/components/schemas/ParameterDataType'
          - description: "The data type of the parameter, such as <code>text</code>\
              \ or <code>aws:ec2:image</code>. The default is <code>text</code>."
          title: DataType
      title: ParameterHistory
      type: object
    ParameterInlinePolicy:
      description: One or more policies assigned to a parameter.
      properties:
        PolicyText:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The JSON text of the policy.
          title: PolicyText
        PolicyType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The type of policy. Parameter Store, a capability of Amazon\
              \ Web Services Systems Manager, supports the following policy types:\
              \ Expiration, ExpirationNotification, and NoChangeNotification. "
          title: PolicyType
        PolicyStatus:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The status of the policy. Policies report the following\
              \ statuses: Pending (the policy hasn't been enforced or applied yet),\
              \ Finished (the policy was applied), Failed (the policy wasn't applied),\
              \ or InProgress (the policy is being applied now). "
          title: PolicyStatus
      title: ParameterInlinePolicy
      type: object
    ParameterLabel:
      maxLength: 100
      minLength: 1
      title: ParameterLabel
      type: string
    ParameterMetadata:
      description: Metadata includes information like the ARN of the last user and
        the date/time the parameter was last used.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/PSParameterName'
          - description: The parameter name.
          title: Name
        Type:
          allOf:
          - $ref: '#/components/schemas/ParameterType'
          - description: "The type of parameter. Valid parameter types include the\
              \ following: <code>String</code>, <code>StringList</code>, and <code>SecureString</code>."
          title: Type
        KeyId:
          allOf:
          - $ref: '#/components/schemas/ParameterKeyId'
          - description: The ID of the query key used for this parameter.
          title: KeyId
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: Date the parameter was last changed or updated.
          title: LastModifiedDate
        LastModifiedUser:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Amazon Resource Name (ARN) of the Amazon Web Services user
              who last changed the parameter.
          title: LastModifiedUser
        Description:
          allOf:
          - $ref: '#/components/schemas/ParameterDescription'
          - description: Description of the parameter actions.
          title: Description
        AllowedPattern:
          allOf:
          - $ref: '#/components/schemas/AllowedPattern'
          - description: <p>A parameter name can include only the following letters
              and symbols.</p> <p>a-zA-Z0-9_.-</p>
          title: AllowedPattern
        Version:
          allOf:
          - $ref: '#/components/schemas/PSParameterVersion'
          - description: The parameter version.
          title: Version
        Tier:
          allOf:
          - $ref: '#/components/schemas/ParameterTier'
          - description: The parameter tier.
          title: Tier
        Policies:
          allOf:
          - $ref: '#/components/schemas/ParameterPolicyList'
          - description: A list of policies associated with a parameter.
          title: Policies
        DataType:
          allOf:
          - $ref: '#/components/schemas/ParameterDataType'
          - description: "The data type of the parameter, such as <code>text</code>\
              \ or <code>aws:ec2:image</code>. The default is <code>text</code>."
          title: DataType
      title: ParameterMetadata
      type: object
    ParameterName:
      type: string
    ParameterPolicies:
      maxLength: 4096
      minLength: 1
      type: string
    ParameterStringFilterKey:
      maxLength: 132
      minLength: 1
      pattern: tag:.+|Name|Type|KeyId|Path|Label|Tier|DataType
      type: string
    ParameterStringQueryOption:
      maxLength: 10
      minLength: 1
      type: string
    ParameterStringFilterValueList:
      items:
        $ref: '#/components/schemas/ParameterStringFilterValue'
      maxItems: 50
      minItems: 1
      type: array
    ParameterStringFilter:
      description: One or more filters. Use a filter to return a more specific list
        of results.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/ParameterStringFilterKey'
          - description: "<p>The name of the filter.</p> <p>The <code>ParameterStringFilter</code>\
              \ object is used by the <a>DescribeParameters</a> and <a>GetParametersByPath</a>\
              \ API operations. However, not all of the pattern values listed for\
              \ <code>Key</code> can be used with both operations.</p> <p>For <code>DescribeParameters</code>,\
              \ all of the listed patterns are valid except <code>Label</code>.</p>\
              \ <p>For <code>GetParametersByPath</code>, the following patterns listed\
              \ for <code>Key</code> aren't valid: <code>tag</code>, <code>DataType</code>,\
              \ <code>Name</code>, <code>Path</code>, and <code>Tier</code>.</p> <p>For\
              \ examples of Amazon Web Services CLI commands demonstrating valid parameter\
              \ filter constructions, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-search.html\"\
              >Searching for Systems Manager parameters</a> in the <i>Amazon Web Services\
              \ Systems Manager User Guide</i>.</p>"
          title: Key
        Option:
          allOf:
          - $ref: '#/components/schemas/ParameterStringQueryOption'
          - description: "<p>For all filters used with <a>DescribeParameters</a>,\
              \ valid options include <code>Equals</code> and <code>BeginsWith</code>.\
              \ The <code>Name</code> filter additionally supports the <code>Contains</code>\
              \ option. (Exception: For filters using the key <code>Path</code>, valid\
              \ options include <code>Recursive</code> and <code>OneLevel</code>.)</p>\
              \ <p>For filters used with <a>GetParametersByPath</a>, valid options\
              \ include <code>Equals</code> and <code>BeginsWith</code>. (Exception:\
              \ For filters using <code>Label</code> as the Key name, the only valid\
              \ option is <code>Equals</code>.)</p>"
          title: Option
        Values:
          allOf:
          - $ref: '#/components/schemas/ParameterStringFilterValueList'
          - description: The value you want to search for.
          title: Values
      required:
      - Key
      title: ParameterStringFilter
      type: object
    ParameterStringFilterValue:
      maxLength: 1024
      minLength: 1
      title: ParameterStringFilterValue
      type: string
    ParameterValue:
      title: ParameterValue
      type: string
    ParameterValueList:
      items:
        $ref: '#/components/schemas/ParameterValue'
      title: ParameterValueList
      type: array
    ParametersFilterKey:
      enum:
      - Name
      - Type
      - KeyId
      title: ParametersFilterKey
      type: string
    ParametersFilterValueList:
      items:
        $ref: '#/components/schemas/ParametersFilterValue'
      maxItems: 50
      minItems: 1
      type: array
    ParametersFilter:
      description: "This data type is deprecated. Instead, use <a>ParameterStringFilter</a>."
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/ParametersFilterKey'
          - description: The name of the filter.
          title: Key
        Values:
          allOf:
          - $ref: '#/components/schemas/ParametersFilterValueList'
          - description: The filter values.
          title: Values
      required:
      - Key
      - Values
      title: ParametersFilter
      type: object
    ParametersFilterValue:
      maxLength: 1024
      minLength: 1
      title: ParametersFilterValue
      type: string
    PatchId:
      maxLength: 100
      minLength: 1
      title: PatchId
      type: string
    PatchTitle:
      type: string
    PatchDescription:
      type: string
    PatchContentUrl:
      type: string
    PatchVendor:
      type: string
    PatchProductFamily:
      type: string
    PatchProduct:
      type: string
    PatchClassification:
      type: string
    PatchMsrcSeverity:
      type: string
    PatchKbNumber:
      type: string
    PatchMsrcNumber:
      type: string
    PatchLanguage:
      type: string
    PatchAdvisoryIdList:
      items:
        $ref: '#/components/schemas/PatchAdvisoryId'
      type: array
    PatchBugzillaIdList:
      items:
        $ref: '#/components/schemas/PatchBugzillaId'
      type: array
    PatchCVEIdList:
      items:
        $ref: '#/components/schemas/PatchCVEId'
      type: array
    PatchName:
      type: string
    PatchEpoch:
      type: integer
    PatchVersion:
      type: string
    PatchRelease:
      type: string
    PatchArch:
      type: string
    PatchSeverity:
      type: string
    PatchRepository:
      type: string
    PatchAdvisoryId:
      title: PatchAdvisoryId
      type: string
    PatchBaselineIdentity:
      description: Defines the basic information about a patch baseline.
      properties:
        BaselineId:
          allOf:
          - $ref: '#/components/schemas/BaselineId'
          - description: The ID of the patch baseline.
          title: BaselineId
        BaselineName:
          allOf:
          - $ref: '#/components/schemas/BaselineName'
          - description: The name of the patch baseline.
          title: BaselineName
        OperatingSystem:
          allOf:
          - $ref: '#/components/schemas/OperatingSystem'
          - description: 'Defines the operating system the patch baseline applies
              to. The default value is <code>WINDOWS</code>. '
          title: OperatingSystem
        BaselineDescription:
          allOf:
          - $ref: '#/components/schemas/BaselineDescription'
          - description: The description of the patch baseline.
          title: BaselineDescription
        DefaultBaseline:
          allOf:
          - $ref: '#/components/schemas/DefaultBaseline'
          - description: "Whether this is the default baseline. Amazon Web Services\
              \ Systems Manager supports creating multiple default patch baselines.\
              \ For example, you can create a default patch baseline for each operating\
              \ system."
          title: DefaultBaseline
      title: PatchBaselineIdentity
      type: object
    PatchBugzillaId:
      title: PatchBugzillaId
      type: string
    PatchCVEId:
      title: PatchCVEId
      type: string
    PatchCVEIds:
      type: string
    PatchComplianceDataState:
      enum:
      - INSTALLED
      - INSTALLED_OTHER
      - INSTALLED_PENDING_REBOOT
      - INSTALLED_REJECTED
      - MISSING
      - NOT_APPLICABLE
      - FAILED
      title: PatchComplianceDataState
      type: string
    PatchComplianceData:
      description: Information about the state of a patch on a particular managed
        node as it relates to the patch baseline used to patch the node.
      properties:
        Title:
          allOf:
          - $ref: '#/components/schemas/PatchTitle'
          - description: The title of the patch.
          title: Title
        KBId:
          allOf:
          - $ref: '#/components/schemas/PatchKbNumber'
          - description: The operating system-specific ID of the patch.
          title: KBId
        Classification:
          allOf:
          - $ref: '#/components/schemas/PatchClassification'
          - description: "The classification of the patch, such as <code>SecurityUpdates</code>,\
              \ <code>Updates</code>, and <code>CriticalUpdates</code>."
          title: Classification
        Severity:
          allOf:
          - $ref: '#/components/schemas/PatchSeverity'
          - description: "The severity of the patch such as <code>Critical</code>,\
              \ <code>Important</code>, and <code>Moderate</code>."
          title: Severity
        State:
          allOf:
          - $ref: '#/components/schemas/PatchComplianceDataState'
          - description: "<p>The state of the patch on the managed node, such as INSTALLED\
              \ or FAILED.</p> <p>For descriptions of each patch state, see <a href=\"\
              https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-compliance-about.html#sysman-compliance-monitor-patch\"\
              >About patch compliance</a> in the <i>Amazon Web Services Systems Manager\
              \ User Guide</i>.</p>"
          title: State
        InstalledTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date/time the patch was installed on the managed node.
              Not all operating systems provide this level of information.
          title: InstalledTime
        CVEIds:
          allOf:
          - $ref: '#/components/schemas/PatchCVEIds'
          - description: The IDs of one or more Common Vulnerabilities and Exposure
              (CVE) issues that are resolved by the patch.
          title: CVEIds
      required:
      - Classification
      - InstalledTime
      - KBId
      - Severity
      - State
      - Title
      title: PatchComplianceData
      type: object
    PatchDeploymentStatus:
      enum:
      - APPROVED
      - PENDING_APPROVAL
      - EXPLICIT_APPROVED
      - EXPLICIT_REJECTED
      title: PatchDeploymentStatus
      type: string
    PatchFilterKey:
      enum:
      - ARCH
      - ADVISORY_ID
      - BUGZILLA_ID
      - PATCH_SET
      - PRODUCT
      - PRODUCT_FAMILY
      - CLASSIFICATION
      - CVE_ID
      - EPOCH
      - MSRC_SEVERITY
      - NAME
      - PATCH_ID
      - SECTION
      - PRIORITY
      - REPOSITORY
      - RELEASE
      - SEVERITY
      - SECURITY
      - VERSION
      title: PatchFilterKey
      type: string
    PatchFilterValueList:
      items:
        $ref: '#/components/schemas/PatchFilterValue'
      maxItems: 20
      minItems: 1
      type: array
    PatchFilter:
      description: "<p> Defines which patches should be included in a patch baseline.</p>\
        \ <p>A patch filter consists of a key and a set of values. The filter key\
        \ is a patch property. For example, the available filter keys for <code>WINDOWS</code>\
        \ are <code>PATCH_SET</code>, <code>PRODUCT</code>, <code>PRODUCT_FAMILY</code>,\
        \ <code>CLASSIFICATION</code>, and <code>MSRC_SEVERITY</code>.</p> <p>The\
        \ filter values define a matching criterion for the patch property indicated\
        \ by the key. For example, if the filter key is <code>PRODUCT</code> and the\
        \ filter values are <code>[\"Office 2013\", \"Office 2016\"]</code>, then\
        \ the filter accepts all patches where product name is either \"Office 2013\"\
        \ or \"Office 2016\". The filter values can be exact values for the patch\
        \ property given as a key, or a wildcard (*), which matches all values.</p>\
        \ <p>You can view lists of valid values for the patch properties by running\
        \ the <code>DescribePatchProperties</code> command. For information about\
        \ which patch properties can be used with each major operating system, see\
        \ <a>DescribePatchProperties</a>.</p>"
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/PatchFilterKey'
          - description: <p>The key for the filter.</p> <p>Run the <a>DescribePatchProperties</a>
              command to view lists of valid keys for each operating system type.</p>
          title: Key
        Values:
          allOf:
          - $ref: '#/components/schemas/PatchFilterValueList'
          - description: <p>The value for the filter key.</p> <p>Run the <a>DescribePatchProperties</a>
              command to view lists of valid values for each key based on operating
              system type.</p>
          title: Values
      required:
      - Key
      - Values
      title: PatchFilter
      type: object
    PatchFilterList:
      items:
        $ref: '#/components/schemas/PatchFilter'
      maxItems: 4
      minItems: 0
      type: array
    PatchFilterValue:
      maxLength: 64
      minLength: 1
      title: PatchFilterValue
      type: string
    PatchGroupPatchBaselineMapping:
      description: The mapping between a patch group and the patch baseline the patch
        group is registered with.
      properties:
        PatchGroup:
          allOf:
          - $ref: '#/components/schemas/PatchGroup'
          - description: The name of the patch group registered with the patch baseline.
          title: PatchGroup
        BaselineIdentity:
          $ref: '#/components/schemas/PatchGroupPatchBaselineMapping_BaselineIdentity'
      title: PatchGroupPatchBaselineMapping
      type: object
    PatchOrchestratorFilterKey:
      maxLength: 128
      minLength: 1
      type: string
    PatchOrchestratorFilterValues:
      items:
        $ref: '#/components/schemas/PatchOrchestratorFilterValue'
      type: array
    PatchOrchestratorFilter:
      description: <p>Defines a filter used in Patch Manager APIs. Supported filter
        keys depend on the API operation that includes the filter. Patch Manager API
        operations that use <code>PatchOrchestratorFilter</code> include the following:</p>
        <ul> <li> <p> <a>DescribeAvailablePatches</a> </p> </li> <li> <p> <a>DescribeInstancePatches</a>
        </p> </li> <li> <p> <a>DescribePatchBaselines</a> </p> </li> <li> <p> <a>DescribePatchGroups</a>
        </p> </li> </ul>
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/PatchOrchestratorFilterKey'
          - description: The key for the filter.
          title: Key
        Values:
          allOf:
          - $ref: '#/components/schemas/PatchOrchestratorFilterValues'
          - description: The value for the filter.
          title: Values
      title: PatchOrchestratorFilter
      type: object
    PatchOrchestratorFilterValue:
      maxLength: 256
      minLength: 1
      title: PatchOrchestratorFilterValue
      type: string
    PatchPropertyEntry:
      additionalProperties:
        $ref: '#/components/schemas/AttributeValue'
      title: PatchPropertyEntry
      type: object
    PatchStringDateTime:
      maxLength: 10
      minLength: 1
      type: string
    PatchRule:
      description: Defines an approval rule for a patch baseline.
      properties:
        PatchFilterGroup:
          $ref: '#/components/schemas/PatchRule_PatchFilterGroup'
        ComplianceLevel:
          allOf:
          - $ref: '#/components/schemas/PatchComplianceLevel'
          - description: A compliance severity level for all approved patches in a
              patch baseline.
          title: ComplianceLevel
        ApproveAfterDays:
          allOf:
          - $ref: '#/components/schemas/ApproveAfterDays'
          - description: "The number of days after the release date of each patch\
              \ matched by the rule that the patch is marked as approved in the patch\
              \ baseline. For example, a value of <code>7</code> means that patches\
              \ are approved seven days after they are released. Not supported on\
              \ Debian Server or Ubuntu Server."
          title: ApproveAfterDays
        ApproveUntilDate:
          allOf:
          - $ref: '#/components/schemas/PatchStringDateTime'
          - description: "<p>The cutoff date for auto approval of released patches.\
              \ Any patches released on or before this date are installed automatically.\
              \ Not supported on Debian Server or Ubuntu Server.</p> <p>Enter dates\
              \ in the format <code>YYYY-MM-DD</code>. For example, <code>2021-12-31</code>.</p>"
          title: ApproveUntilDate
        EnableNonSecurity:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "For managed nodes identified by the approval rule filters,\
              \ enables a patch baseline to apply non-security updates available in\
              \ the specified repository. The default value is <code>false</code>.\
              \ Applies to Linux managed nodes only."
          title: EnableNonSecurity
      required:
      - PatchFilterGroup
      title: PatchRule
      type: object
    PatchRuleList:
      items:
        $ref: '#/components/schemas/PatchRule'
      maxItems: 10
      minItems: 0
      type: array
    PatchSourceName:
      pattern: "^[a-zA-Z0-9_\\-.]{3,50}$"
      type: string
    PatchSourceProductList:
      items:
        $ref: '#/components/schemas/PatchSourceProduct'
      maxItems: 20
      minItems: 1
      type: array
    PatchSourceConfiguration:
      format: password
      maxLength: 1024
      minLength: 1
      type: string
    PatchSource:
      description: "Information about the patches to use to update the managed nodes,\
        \ including target operating systems and source repository. Applies to Linux\
        \ managed nodes only."
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/PatchSourceName'
          - description: The name specified to identify the patch source.
          title: Name
        Products:
          allOf:
          - $ref: '#/components/schemas/PatchSourceProductList'
          - description: "The specific operating system versions a patch repository\
              \ applies to, such as \"Ubuntu16.04\", \"AmazonLinux2016.09\", \"RedhatEnterpriseLinux7.2\"\
              \ or \"Suse12.7\". For lists of supported product values, see <a>PatchFilter</a>."
          title: Products
        Configuration:
          allOf:
          - $ref: '#/components/schemas/PatchSourceConfiguration'
          - description: "<p>The value of the yum repo configuration. For example:</p>\
              \ <p> <code>[main]</code> </p> <p> <code>name=MyCustomRepository</code>\
              \ </p> <p> <code>baseurl=https://my-custom-repository</code> </p> <p>\
              \ <code>enabled=1</code> </p> <note> <p>For information about other\
              \ options available for your yum repository configuration, see <a href=\"\
              https://man7.org/linux/man-pages/man5/dnf.conf.5.html\">dnf.conf(5)</a>.</p>\
              \ </note>"
          title: Configuration
      required:
      - Configuration
      - Name
      - Products
      title: PatchSource
      type: object
    PatchSourceProduct:
      maxLength: 128
      minLength: 1
      title: PatchSourceProduct
      type: string
    PutInventoryMessage:
      type: string
    Region:
      title: Region
      type: string
    Regions:
      items:
        $ref: '#/components/schemas/Region'
      maxItems: 50
      minItems: 1
      type: array
    RegistrationMetadataKey:
      maxLength: 128
      minLength: 1
      pattern: ^(?!\s*$).+
      type: string
    RegistrationMetadataValue:
      maxLength: 2048
      minLength: 1
      pattern: ^(?!\s*$).+
      type: string
    RegistrationMetadataItem:
      description: Reserved for internal use.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/RegistrationMetadataKey'
          - description: Reserved for internal use.
          title: Key
        Value:
          allOf:
          - $ref: '#/components/schemas/RegistrationMetadataValue'
          - description: Reserved for internal use.
          title: Value
      required:
      - Key
      - Value
      title: RegistrationMetadataItem
      type: object
    RelatedOpsItem:
      description: "An OpsItems that shares something in common with the current OpsItem.\
        \ For example, related OpsItems can include OpsItems with similar error messages,\
        \ impacted resources, or statuses for the impacted resource."
      properties:
        OpsItemId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of an OpsItem related to the current OpsItem.
          title: OpsItemId
      required:
      - OpsItemId
      title: RelatedOpsItem
      type: object
    TargetParameterList:
      items:
        $ref: '#/components/schemas/ParameterValue'
      type: array
    ResourceComplianceSummaryItem:
      description: 'Compliance summary information for a specific resource. '
      properties:
        ComplianceType:
          allOf:
          - $ref: '#/components/schemas/ComplianceTypeName'
          - description: The compliance type.
          title: ComplianceType
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ComplianceResourceType'
          - description: The resource type.
          title: ResourceType
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ComplianceResourceId'
          - description: The resource ID.
          title: ResourceId
        Status:
          allOf:
          - $ref: '#/components/schemas/ComplianceStatus'
          - description: The compliance status for the resource.
          title: Status
        OverallSeverity:
          allOf:
          - $ref: '#/components/schemas/ComplianceSeverity'
          - description: The highest severity item found for the resource. The resource
              is compliant for this item.
          title: OverallSeverity
        ExecutionSummary:
          $ref: '#/components/schemas/ResourceComplianceSummaryItem_ExecutionSummary'
        CompliantSummary:
          $ref: '#/components/schemas/ResourceComplianceSummaryItem_CompliantSummary'
        NonCompliantSummary:
          $ref: '#/components/schemas/ResourceComplianceSummaryItem_NonCompliantSummary'
      title: ResourceComplianceSummaryItem
      type: object
    ResourceDataSyncAWSKMSKeyARN:
      maxLength: 512
      minLength: 1
      pattern: arn:.*
      type: string
    ResourceDataSyncOrganizationSourceType:
      maxLength: 64
      minLength: 1
      type: string
    ResourceDataSyncOrganizationalUnitList:
      items:
        $ref: '#/components/schemas/ResourceDataSyncOrganizationalUnit'
      maxItems: 1000
      minItems: 1
      type: array
    ResourceDataSyncAwsOrganizationsSource:
      description: "Information about the <code>AwsOrganizationsSource</code> resource\
        \ data sync source. A sync source of this type can synchronize data from Organizations\
        \ or, if an Amazon Web Services organization isn't present, from multiple\
        \ Amazon Web Services Regions."
      properties:
        OrganizationSourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceDataSyncOrganizationSourceType'
          - description: "If an Amazon Web Services organization is present, this\
              \ is either <code>OrganizationalUnits</code> or <code>EntireOrganization</code>.\
              \ For <code>OrganizationalUnits</code>, the data is aggregated from\
              \ a set of organization units. For <code>EntireOrganization</code>,\
              \ the data is aggregated from the entire Amazon Web Services organization."
          title: OrganizationSourceType
        OrganizationalUnits:
          allOf:
          - $ref: '#/components/schemas/ResourceDataSyncOrganizationalUnitList'
          - description: The Organizations organization units included in the sync.
          title: OrganizationalUnits
      required:
      - OrganizationSourceType
      title: ResourceDataSyncAwsOrganizationsSource
      type: object
    ResourceDataSyncCreatedTime:
      format: date-time
      type: string
    ResourceDataSyncDestinationDataSharingType:
      maxLength: 64
      minLength: 1
      type: string
    ResourceDataSyncDestinationDataSharing:
      description: Synchronize Amazon Web Services Systems Manager Inventory data
        from multiple Amazon Web Services accounts defined in Organizations to a centralized
        Amazon S3 bucket. Data is synchronized to individual key prefixes in the central
        bucket. Each key prefix represents a different Amazon Web Services account
        ID.
      properties:
        DestinationDataSharingType:
          allOf:
          - $ref: '#/components/schemas/ResourceDataSyncDestinationDataSharingType'
          - description: The sharing data type. Only <code>Organization</code> is
              supported.
          title: DestinationDataSharingType
      title: ResourceDataSyncDestinationDataSharing
      type: object
    ResourceDataSyncEnableAllOpsDataSources:
      type: boolean
    ResourceDataSyncIncludeFutureRegions:
      type: boolean
    ResourceDataSyncSourceWithState:
      description: <p>The data type name for including resource data sync state. There
        are four sync states:</p> <p> <code>OrganizationNotExists</code> (Your organization
        doesn't exist)</p> <p> <code>NoPermissions</code> (The system can't locate
        the service-linked role. This role is automatically created when a user creates
        a resource data sync in Amazon Web Services Systems Manager Explorer.)</p>
        <p> <code>InvalidOrganizationalUnit</code> (You specified or selected an invalid
        unit in the resource data sync configuration.)</p> <p> <code>TrustedAccessDisabled</code>
        (You disabled Systems Manager access in the organization in Organizations.)</p>
      properties:
        SourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceDataSyncSourceType'
          - description: The type of data source for the resource data sync. <code>SourceType</code>
              is either <code>AwsOrganizations</code> (if an organization is present
              in Organizations) or <code>singleAccountMultiRegions</code>.
          title: SourceType
        AwsOrganizationsSource:
          $ref: '#/components/schemas/ResourceDataSyncSourceWithState_AwsOrganizationsSource'
        SourceRegions:
          allOf:
          - $ref: '#/components/schemas/ResourceDataSyncSourceRegionList'
          - description: The <code>SyncSource</code> Amazon Web Services Regions included
              in the resource data sync.
          title: SourceRegions
        IncludeFutureRegions:
          allOf:
          - $ref: '#/components/schemas/ResourceDataSyncIncludeFutureRegions'
          - description: Whether to automatically synchronize and aggregate data from
              new Amazon Web Services Regions when those Regions come online.
          title: IncludeFutureRegions
        State:
          allOf:
          - $ref: '#/components/schemas/ResourceDataSyncState'
          - description: "<p>The data type name for including resource data sync state.\
              \ There are four sync states:</p> <p> <code>OrganizationNotExists</code>:\
              \ Your organization doesn't exist.</p> <p> <code>NoPermissions</code>:\
              \ The system can't locate the service-linked role. This role is automatically\
              \ created when a user creates a resource data sync in Explorer.</p>\
              \ <p> <code>InvalidOrganizationalUnit</code>: You specified or selected\
              \ an invalid unit in the resource data sync configuration.</p> <p> <code>TrustedAccessDisabled</code>:\
              \ You disabled Systems Manager access in the organization in Organizations.</p>"
          title: State
        EnableAllOpsDataSources:
          allOf:
          - $ref: '#/components/schemas/ResourceDataSyncEnableAllOpsDataSources'
          - description: "When you create a resource data sync, if you choose one\
              \ of the Organizations options, then Systems Manager automatically enables\
              \ all OpsData sources in the selected Amazon Web Services Regions for\
              \ all Amazon Web Services accounts in your organization (or in the selected\
              \ organization units). For more information, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/Explorer-resouce-data-sync-multiple-accounts-and-regions.html\"\
              >About multiple account and Region resource data syncs</a> in the <i>Amazon\
              \ Web Services Systems Manager User Guide</i>."
          title: EnableAllOpsDataSources
      title: ResourceDataSyncSourceWithState
      type: object
    ResourceDataSyncLastModifiedTime:
      format: date-time
      type: string
    ResourceDataSyncItem:
      description: "Information about a resource data sync configuration, including\
        \ its current status and last successful sync."
      properties:
        SyncName:
          allOf:
          - $ref: '#/components/schemas/ResourceDataSyncName'
          - description: The name of the resource data sync.
          title: SyncName
        SyncType:
          allOf:
          - $ref: '#/components/schemas/ResourceDataSyncType'
          - description: "The type of resource data sync. If <code>SyncType</code>\
              \ is <code>SyncToDestination</code>, then the resource data sync synchronizes\
              \ data to an S3 bucket. If the <code>SyncType</code> is <code>SyncFromSource</code>\
              \ then the resource data sync synchronizes data from Organizations or\
              \ from multiple Amazon Web Services Regions."
          title: SyncType
        SyncSource:
          $ref: '#/components/schemas/ResourceDataSyncItem_SyncSource'
        S3Destination:
          $ref: '#/components/schemas/ResourceDataSyncItem_S3Destination'
        LastSyncTime:
          allOf:
          - $ref: '#/components/schemas/LastResourceDataSyncTime'
          - description: The last time the configuration attempted to sync (UTC).
          title: LastSyncTime
        LastSuccessfulSyncTime:
          allOf:
          - $ref: '#/components/schemas/LastSuccessfulResourceDataSyncTime'
          - description: The last time the sync operations returned a status of <code>SUCCESSFUL</code>
              (UTC).
          title: LastSuccessfulSyncTime
        SyncLastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/ResourceDataSyncLastModifiedTime'
          - description: 'The date and time the resource data sync was changed. '
          title: SyncLastModifiedTime
        LastStatus:
          allOf:
          - $ref: '#/components/schemas/LastResourceDataSyncStatus'
          - description: The status reported by the last sync.
          title: LastStatus
        SyncCreatedTime:
          allOf:
          - $ref: '#/components/schemas/ResourceDataSyncCreatedTime'
          - description: The date and time the configuration was created (UTC).
          title: SyncCreatedTime
        LastSyncStatusMessage:
          allOf:
          - $ref: '#/components/schemas/LastResourceDataSyncMessage'
          - description: The status message details reported by the last sync.
          title: LastSyncStatusMessage
      title: ResourceDataSyncItem
      type: object
    ResourceDataSyncOrganizationalUnitId:
      maxLength: 128
      minLength: 1
      pattern: "^ou-[0-9a-z]{4,32}-[a-z0-9]{8,32}$"
      type: string
    ResourceDataSyncOrganizationalUnit:
      description: The Organizations organizational unit data source for the sync.
      properties:
        OrganizationalUnitId:
          allOf:
          - $ref: '#/components/schemas/ResourceDataSyncOrganizationalUnitId'
          - description: The Organizations unit ID data source for the sync.
          title: OrganizationalUnitId
      title: ResourceDataSyncOrganizationalUnit
      type: object
    ResourceDataSyncS3BucketName:
      maxLength: 2048
      minLength: 1
      type: string
    ResourceDataSyncS3Prefix:
      maxLength: 256
      minLength: 1
      type: string
    ResourceDataSyncS3Format:
      enum:
      - JsonSerDe
      title: ResourceDataSyncS3Format
      type: string
    ResourceDataSyncS3Region:
      maxLength: 64
      minLength: 1
      type: string
    ResourceDataSyncSourceType:
      maxLength: 64
      minLength: 1
      type: string
    ResourceDataSyncSourceRegionList:
      items:
        $ref: '#/components/schemas/ResourceDataSyncSourceRegion'
      type: array
    ResourceDataSyncSourceRegion:
      maxLength: 64
      minLength: 1
      title: ResourceDataSyncSourceRegion
      type: string
    ResourceDataSyncState:
      maxLength: 64
      minLength: 1
      type: string
    ResultAttribute:
      description: The inventory item result attribute.
      properties:
        TypeName:
          allOf:
          - $ref: '#/components/schemas/InventoryItemTypeName'
          - description: "Name of the inventory item type. Valid value: <code>AWS:InstanceInformation</code>.\
              \ Default Value: <code>AWS:InstanceInformation</code>."
          title: TypeName
      required:
      - TypeName
      title: ResultAttribute
      type: object
    SessionId:
      maxLength: 96
      minLength: 1
      type: string
    TokenValue:
      maxLength: 300
      minLength: 0
      type: string
    StreamUrl:
      type: string
    ReviewInformation:
      description: Information about the result of a document review request.
      properties:
        ReviewedTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time that the reviewer took action on the document review
              request.
          title: ReviewedTime
        Status:
          allOf:
          - $ref: '#/components/schemas/ReviewStatus'
          - description: The current status of the document review request.
          title: Status
        Reviewer:
          allOf:
          - $ref: '#/components/schemas/Reviewer'
          - description: The reviewer assigned to take action on the document review
              request.
          title: Reviewer
      title: ReviewInformation
      type: object
    Runbook:
      description: <p>Information about an Automation runbook used in a runbook workflow
        in Change Manager.</p> <note> <p>The Automation runbooks specified for the
        runbook workflow can't run until all required approvals for the change request
        have been received.</p> </note>
      properties:
        DocumentName:
          allOf:
          - $ref: '#/components/schemas/DocumentARN'
          - description: The name of the Automation runbook used in a runbook workflow.
          title: DocumentName
        DocumentVersion:
          allOf:
          - $ref: '#/components/schemas/DocumentVersion'
          - description: The version of the Automation runbook used in a runbook workflow.
          title: DocumentVersion
        Parameters:
          allOf:
          - $ref: '#/components/schemas/AutomationParameterMap'
          - description: "The key-value map of execution parameters, which were supplied\
              \ when calling <code>StartChangeRequestExecution</code>."
          title: Parameters
        TargetParameterName:
          allOf:
          - $ref: '#/components/schemas/AutomationParameterKey'
          - description: 'The name of the parameter used as the target resource for
              the rate-controlled runbook workflow. Required if you specify <code>Targets</code>. '
          title: TargetParameterName
        Targets:
          allOf:
          - $ref: '#/components/schemas/Targets'
          - description: A key-value mapping to target resources that the runbook
              operation performs tasks on. Required if you specify <code>TargetParameterName</code>.
          title: Targets
        TargetMaps:
          allOf:
          - $ref: '#/components/schemas/TargetMaps'
          - description: A key-value mapping of runbook parameters to target resources.
              Both Targets and TargetMaps can't be specified together.
          title: TargetMaps
        MaxConcurrency:
          allOf:
          - $ref: '#/components/schemas/MaxConcurrency'
          - description: "The <code>MaxConcurrency</code> value specified by the user\
              \ when the operation started, indicating the maximum number of resources\
              \ that the runbook operation can run on at the same time."
          title: MaxConcurrency
        MaxErrors:
          allOf:
          - $ref: '#/components/schemas/MaxErrors'
          - description: "The <code>MaxErrors</code> value specified by the user when\
              \ the execution started, indicating the maximum number of errors that\
              \ can occur during the operation before the updates are stopped or rolled\
              \ back."
          title: MaxErrors
        TargetLocations:
          allOf:
          - $ref: '#/components/schemas/TargetLocations'
          - description: Information about the Amazon Web Services Regions and Amazon
              Web Services accounts targeted by the current Runbook operation.
          title: TargetLocations
      required:
      - DocumentName
      title: Runbook
      type: object
    ScheduledWindowExecution:
      description: Information about a scheduled execution for a maintenance window.
      properties:
        WindowId:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowId'
          - description: The ID of the maintenance window to be run.
          title: WindowId
        Name:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowName'
          - description: The name of the maintenance window to be run.
          title: Name
        ExecutionTime:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindowStringDateTime'
          - description: "The time, in ISO-8601 Extended format, that the maintenance\
              \ window is scheduled to be run."
          title: ExecutionTime
      title: ScheduledWindowExecution
      type: object
    SignalType:
      enum:
      - Approve
      - Reject
      - StartStep
      - StopStep
      - Resume
      title: SignalType
      type: string
    ServiceSettingValue:
      maxLength: 4096
      minLength: 1
      type: string
    SessionStatus:
      enum:
      - Connected
      - Connecting
      - Disconnected
      - Terminated
      - Terminating
      - Failed
      title: SessionStatus
      type: string
    SessionOwner:
      maxLength: 256
      minLength: 1
      type: string
    SessionReason:
      maxLength: 256
      minLength: 1
      pattern: "^.{1,256}$"
      type: string
    SessionDetails:
      maxLength: 1024
      minLength: 1
      type: string
    SessionManagerOutputUrl:
      description: Reserved for future use.
      properties:
        S3OutputUrl:
          allOf:
          - $ref: '#/components/schemas/SessionManagerS3OutputUrl'
          - description: Reserved for future use.
          title: S3OutputUrl
        CloudWatchOutputUrl:
          allOf:
          - $ref: '#/components/schemas/SessionManagerCloudWatchOutputUrl'
          - description: Reserved for future use.
          title: CloudWatchOutputUrl
      title: SessionManagerOutputUrl
      type: object
    Session:
      description: Information about a Session Manager connection to a managed node.
      properties:
        SessionId:
          allOf:
          - $ref: '#/components/schemas/SessionId'
          - description: The ID of the session.
          title: SessionId
        Target:
          allOf:
          - $ref: '#/components/schemas/SessionTarget'
          - description: The managed node that the Session Manager session connected
              to.
          title: Target
        Status:
          allOf:
          - $ref: '#/components/schemas/SessionStatus'
          - description: "The status of the session. For example, \"Connected\" or\
              \ \"Terminated\"."
          title: Status
        StartDate:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: "The date and time, in ISO-8601 Extended format, when the\
              \ session began."
          title: StartDate
        EndDate:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: "The date and time, in ISO-8601 Extended format, when the\
              \ session was terminated."
          title: EndDate
        DocumentName:
          allOf:
          - $ref: '#/components/schemas/DocumentName'
          - description: "The name of the Session Manager SSM document used to define\
              \ the parameters and plugin settings for the session. For example, <code>SSM-SessionManagerRunShell</code>."
          title: DocumentName
        Owner:
          allOf:
          - $ref: '#/components/schemas/SessionOwner'
          - description: The ID of the Amazon Web Services user that started the session.
          title: Owner
        Reason:
          allOf:
          - $ref: '#/components/schemas/SessionReason'
          - description: The reason for connecting to the instance.
          title: Reason
        Details:
          allOf:
          - $ref: '#/components/schemas/SessionDetails'
          - description: Reserved for future use.
          title: Details
        OutputUrl:
          $ref: '#/components/schemas/Session_OutputUrl'
        MaxSessionDuration:
          allOf:
          - $ref: '#/components/schemas/MaxSessionDuration'
          - description: The maximum duration of a session before it terminates.
          title: MaxSessionDuration
      title: Session
      type: object
    SessionFilterKey:
      enum:
      - InvokedAfter
      - InvokedBefore
      - Target
      - Owner
      - Status
      - SessionId
      title: SessionFilterKey
      type: string
    SessionFilterValue:
      maxLength: 400
      minLength: 1
      type: string
    SessionFilter:
      description: Describes a filter for Session Manager information.
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/SessionFilterKey'
          - description: The name of the filter.
          title: key
        value:
          allOf:
          - $ref: '#/components/schemas/SessionFilterValue'
          - description: "<p>The filter value. Valid values for each filter key are\
              \ as follows:</p> <ul> <li> <p>InvokedAfter: Specify a timestamp to\
              \ limit your results. For example, specify 2018-08-29T00:00:00Z to see\
              \ sessions that started August 29, 2018, and later.</p> </li> <li> <p>InvokedBefore:\
              \ Specify a timestamp to limit your results. For example, specify 2018-08-29T00:00:00Z\
              \ to see sessions that started before August 29, 2018.</p> </li> <li>\
              \ <p>Target: Specify a managed node to which session connections have\
              \ been made.</p> </li> <li> <p>Owner: Specify an Amazon Web Services\
              \ user to see a list of sessions started by that user.</p> </li> <li>\
              \ <p>Status: Specify a valid session status to see a list of all sessions\
              \ with that status. Status values you can specify include:</p> <ul>\
              \ <li> <p>Connected</p> </li> <li> <p>Connecting</p> </li> <li> <p>Disconnected</p>\
              \ </li> <li> <p>Terminated</p> </li> <li> <p>Terminating</p> </li> <li>\
              \ <p>Failed</p> </li> </ul> </li> <li> <p>SessionId: Specify a session\
              \ ID to return details about the session.</p> </li> </ul>"
          title: value
      required:
      - key
      - value
      title: SessionFilter
      type: object
    SessionManagerCloudWatchOutputUrl:
      maxLength: 2083
      minLength: 1
      type: string
    SessionManagerS3OutputUrl:
      maxLength: 2083
      minLength: 1
      type: string
    SessionManagerParameterName:
      maxLength: 255
      minLength: 1
      type: string
    SessionManagerParameterValue:
      maxLength: 65535
      minLength: 1
      title: SessionManagerParameterValue
      type: string
    SessionManagerParameterValueList:
      items:
        $ref: '#/components/schemas/SessionManagerParameterValue'
      title: SessionManagerParameterValueList
      type: array
    SessionManagerParameters:
      additionalProperties:
        $ref: '#/components/schemas/SessionManagerParameterValueList'
      type: object
    ValidNextStepList:
      items:
        $ref: '#/components/schemas/ValidNextStep'
      type: array
    TargetLocation:
      description: The combination of Amazon Web Services Regions and Amazon Web Services
        accounts targeted by the current Automation execution.
      properties:
        Accounts:
          allOf:
          - $ref: '#/components/schemas/Accounts'
          - description: The Amazon Web Services accounts targeted by the current
              Automation execution.
          title: Accounts
        Regions:
          allOf:
          - $ref: '#/components/schemas/Regions'
          - description: The Amazon Web Services Regions targeted by the current Automation
              execution.
          title: Regions
        TargetLocationMaxConcurrency:
          allOf:
          - $ref: '#/components/schemas/MaxConcurrency'
          - description: The maximum number of Amazon Web Services Regions and Amazon
              Web Services accounts allowed to run the Automation concurrently.
          title: TargetLocationMaxConcurrency
        TargetLocationMaxErrors:
          allOf:
          - $ref: '#/components/schemas/MaxErrors'
          - description: The maximum number of errors allowed before the system stops
              queueing additional Automation executions for the currently running
              Automation.
          title: TargetLocationMaxErrors
        ExecutionRoleName:
          allOf:
          - $ref: '#/components/schemas/ExecutionRoleName'
          - description: "The Automation execution role used by the currently running\
              \ Automation. If not specified, the default value is <code>AWS-SystemsManager-AutomationExecutionRole</code>."
          title: ExecutionRoleName
        TargetLocationAlarmConfiguration:
          $ref: '#/components/schemas/AlarmConfiguration'
      title: TargetLocation
      type: object
    StepExecution:
      description: Detailed information about an the execution state of an Automation
        step.
      properties:
        StepName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of this execution step.
          title: StepName
        Action:
          allOf:
          - $ref: '#/components/schemas/AutomationActionName'
          - description: The action this step performs. The action determines the
              behavior of the step.
          title: Action
        TimeoutSeconds:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The timeout seconds of the step.
          title: TimeoutSeconds
        OnFailure:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The action to take if the step fails. The default value is
              <code>Abort</code>.
          title: OnFailure
        MaxAttempts:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The maximum number of tries to run the action of the step.
              The default value is <code>1</code>.
          title: MaxAttempts
        ExecutionStartTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: "If a step has begun execution, this contains the time the\
              \ step started. If the step is in Pending status, this field isn't populated."
          title: ExecutionStartTime
        ExecutionEndTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: "If a step has finished execution, this contains the time\
              \ the execution ended. If the step hasn't yet concluded, this field\
              \ isn't populated."
          title: ExecutionEndTime
        StepStatus:
          allOf:
          - $ref: '#/components/schemas/AutomationExecutionStatus'
          - description: The execution status for this step.
          title: StepStatus
        ResponseCode:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The response code returned by the execution of the step.
          title: ResponseCode
        Inputs:
          allOf:
          - $ref: '#/components/schemas/NormalStringMap'
          - description: Fully-resolved values passed into the step before execution.
          title: Inputs
        Outputs:
          allOf:
          - $ref: '#/components/schemas/AutomationParameterMap'
          - description: Returned values from the execution of the step.
          title: Outputs
        Response:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A message associated with the response code for an execution.
          title: Response
        FailureMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "If a step failed, this message explains why the execution\
              \ failed."
          title: FailureMessage
        FailureDetails:
          $ref: '#/components/schemas/StepExecution_FailureDetails'
        StepExecutionId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The unique ID of a step execution.
          title: StepExecutionId
        OverriddenParameters:
          allOf:
          - $ref: '#/components/schemas/AutomationParameterMap'
          - description: A user-specified list of parameters to override when running
              a step.
          title: OverriddenParameters
        IsEnd:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: The flag which can be used to end automation no matter whether
              the step succeeds or fails.
          title: IsEnd
        NextStep:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The next step after the step succeeds.
          title: NextStep
        IsCritical:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: The flag which can be used to help decide whether the failure
              of current step leads to the Automation failure.
          title: IsCritical
        ValidNextSteps:
          allOf:
          - $ref: '#/components/schemas/ValidNextStepList'
          - description: "Strategies used when step fails, we support Continue and\
              \ Abort. Abort will fail the automation when the step fails. Continue\
              \ will ignore the failure of current step and allow automation to run\
              \ the next step. With conditional branching, we add step:stepName to\
              \ support the automation to go to another specific step."
          title: ValidNextSteps
        Targets:
          allOf:
          - $ref: '#/components/schemas/Targets'
          - description: The targets for the step execution.
          title: Targets
        TargetLocation:
          $ref: '#/components/schemas/StepExecution_TargetLocation'
        TriggeredAlarms:
          allOf:
          - $ref: '#/components/schemas/AlarmStateInformationList'
          - description: The CloudWatch alarms that were invoked by the automation.
          title: TriggeredAlarms
      title: StepExecution
      type: object
    StepExecutionFilterKey:
      enum:
      - StartTimeBefore
      - StartTimeAfter
      - StepExecutionStatus
      - StepExecutionId
      - StepName
      - Action
      title: StepExecutionFilterKey
      type: string
    StepExecutionFilterValueList:
      items:
        $ref: '#/components/schemas/StepExecutionFilterValue'
      maxItems: 10
      minItems: 1
      type: array
    StepExecutionFilter:
      description: A filter to limit the amount of step execution information returned
        by the call.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/StepExecutionFilterKey'
          - description: "One or more keys to limit the results. Valid filter keys\
              \ include the following: StepName, Action, StepExecutionId, StepExecutionStatus,\
              \ StartTimeBefore, StartTimeAfter."
          title: Key
        Values:
          allOf:
          - $ref: '#/components/schemas/StepExecutionFilterValueList'
          - description: The values of the filter key.
          title: Values
      required:
      - Key
      - Values
      title: StepExecutionFilter
      type: object
    StepExecutionFilterValue:
      maxLength: 150
      minLength: 1
      title: StepExecutionFilterValue
      type: string
    StopType:
      enum:
      - Complete
      - Cancel
      title: StopType
      type: string
    TagValue:
      maxLength: 256
      minLength: 0
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      type: string
    Tag:
      description: "Metadata that you assign to your Amazon Web Services resources.\
        \ Tags enable you to categorize your resources in different ways, for example,\
        \ by purpose, owner, or environment. In Amazon Web Services Systems Manager,\
        \ you can apply tags to Systems Manager documents (SSM documents), managed\
        \ nodes, maintenance windows, parameters, patch baselines, OpsItems, and OpsMetadata."
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: The name of the tag.
          title: Key
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: The value of the tag.
          title: Value
      required:
      - Key
      - Value
      title: Tag
      type: object
    TargetKey:
      maxLength: 163
      minLength: 1
      pattern: "^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$|resource-groups:ResourceTypeFilters|resource-groups:Name"
      type: string
    TargetValues:
      items:
        $ref: '#/components/schemas/TargetValue'
      maxItems: 50
      minItems: 0
      type: array
    Target:
      description: "<p>An array of search criteria that targets managed nodes using\
        \ a key-value pair that you specify.</p> <note> <p> One or more targets must\
        \ be specified for maintenance window Run Command-type tasks. Depending on\
        \ the task, targets are optional for other maintenance window task types (Automation,\
        \ Lambda, and Step Functions). For more information about running tasks that\
        \ don't specify targets, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/maintenance-windows-targetless-tasks.html\"\
        >Registering maintenance window tasks without targets</a> in the <i>Amazon\
        \ Web Services Systems Manager User Guide</i>.</p> </note> <p>Supported formats\
        \ include the following.</p> <ul> <li> <p> <code>Key=InstanceIds,Values=&lt;instance-id-1&gt;,&lt;instance-id-2&gt;,&lt;instance-id-3&gt;</code>\
        \ </p> </li> <li> <p> <code>Key=tag:&lt;my-tag-key&gt;,Values=&lt;my-tag-value-1&gt;,&lt;my-tag-value-2&gt;</code>\
        \ </p> </li> <li> <p> <code>Key=tag-key,Values=&lt;my-tag-key-1&gt;,&lt;my-tag-key-2&gt;</code>\
        \ </p> </li> <li> <p> <b>Run Command and Maintenance window targets only</b>:\
        \ <code>Key=resource-groups:Name,Values=&lt;resource-group-name&gt;</code>\
        \ </p> </li> <li> <p> <b>Maintenance window targets only</b>: <code>Key=resource-groups:ResourceTypeFilters,Values=&lt;resource-type-1&gt;,&lt;resource-type-2&gt;</code>\
        \ </p> </li> <li> <p> <b>Automation targets only</b>: <code>Key=ResourceGroup;Values=&lt;resource-group-name&gt;</code>\
        \ </p> </li> </ul> <p>For example:</p> <ul> <li> <p> <code>Key=InstanceIds,Values=i-02573cafcfEXAMPLE,i-0471e04240EXAMPLE,i-07782c72faEXAMPLE</code>\
        \ </p> </li> <li> <p> <code>Key=tag:CostCenter,Values=CostCenter1,CostCenter2,CostCenter3</code>\
        \ </p> </li> <li> <p> <code>Key=tag-key,Values=Name,Instance-Type,CostCenter</code>\
        \ </p> </li> <li> <p> <b>Run Command and Maintenance window targets only</b>:\
        \ <code>Key=resource-groups:Name,Values=ProductionResourceGroup</code> </p>\
        \ <p>This example demonstrates how to target all resources in the resource\
        \ group <b>ProductionResourceGroup</b> in your maintenance window.</p> </li>\
        \ <li> <p> <b>Maintenance window targets only</b>: <code>Key=resource-groups:ResourceTypeFilters,Values=AWS::EC2::INSTANCE,AWS::EC2::VPC</code>\
        \ </p> <p>This example demonstrates how to target only Amazon Elastic Compute\
        \ Cloud (Amazon EC2) instances and VPCs in your maintenance window.</p> </li>\
        \ <li> <p> <b>Automation targets only</b>: <code>Key=ResourceGroup,Values=MyResourceGroup</code>\
        \ </p> </li> <li> <p> <b>State Manager association targets only</b>: <code>Key=InstanceIds,Values=*</code>\
        \ </p> <p>This example demonstrates how to target all managed instances in\
        \ the Amazon Web Services Region where the association was created.</p> </li>\
        \ </ul> <p>For more information about how to send commands that target managed\
        \ nodes using <code>Key,Value</code> parameters, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting\"\
        >Targeting multiple instances</a> in the <i>Amazon Web Services Systems Manager\
        \ User Guide</i>.</p>"
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TargetKey'
          - description: User-defined criteria for sending commands that target managed
              nodes that meet the criteria.
          title: Key
        Values:
          allOf:
          - $ref: '#/components/schemas/TargetValues'
          - description: "<p>User-defined criteria that maps to <code>Key</code>.\
              \ For example, if you specified <code>tag:ServerRole</code>, you could\
              \ specify <code>value:WebServer</code> to run a command on instances\
              \ that include EC2 tags of <code>ServerRole,WebServer</code>. </p> <p>Depending\
              \ on the type of target, the maximum number of values for a key might\
              \ be lower than the global maximum of 50.</p>"
          title: Values
      title: Target
      type: object
    TargetMapValueList:
      items:
        $ref: '#/components/schemas/TargetMapValue'
      maxItems: 25
      minItems: 0
      title: TargetMapValueList
      type: array
    TargetMap:
      additionalProperties:
        $ref: '#/components/schemas/TargetMapValueList'
      maxProperties: 20
      minProperties: 1
      title: TargetMap
      type: object
    TargetMapKey:
      maxLength: 50
      minLength: 1
      type: string
    TargetMapValue:
      maxLength: 50
      minLength: 1
      title: TargetMapValue
      type: string
    TargetValue:
      title: TargetValue
      type: string
    ValidNextStep:
      maxLength: 65535
      minLength: 1
      title: ValidNextStep
      type: string
    CreateAssociationResult_AssociationDescription:
      allOf:
      - $ref: '#/components/schemas/AssociationDescription'
      - description: Information about the association.
      example:
        LastExecutionDate: ""
        AssociationName: ""
        LastSuccessfulExecutionDate: ""
        MaxErrors: ""
        AssociationVersion: ""
        ScheduleOffset: ""
        Name: ""
        TriggeredAlarms: ""
        DocumentVersion: ""
        TargetLocations: ""
        Status:
          AdditionalInfo: ""
          Message: ""
          Date: ""
          Name: ""
        CalendarNames: ""
        ScheduleExpression: ""
        Parameters: ""
        InstanceId: ""
        TargetMaps: ""
        MaxConcurrency: ""
        ComplianceSeverity: ""
        Overview:
          Status: ""
          AssociationStatusAggregatedCount: ""
          DetailedStatus: ""
        Targets: ""
        SyncCompliance: ""
        AlarmConfiguration:
          IgnorePollAlarmFailure: ""
          Alarms: ""
        OutputLocation:
          S3Location:
            OutputS3KeyPrefix: ""
            OutputS3Region: ""
            OutputS3BucketName: ""
        Date: ""
        ApplyOnlyAtCronInterval: ""
        LastUpdateAssociationDate: ""
        AutomationTargetParameterName: ""
        AssociationId: ""
      title: CreateAssociationResult_AssociationDescription
    CreateAssociationRequest_OutputLocation:
      allOf:
      - $ref: '#/components/schemas/InstanceAssociationOutputLocation'
      - description: An Amazon Simple Storage Service (Amazon S3) bucket where you
          want to store the output details of the request.
      example:
        S3Location:
          OutputS3KeyPrefix: ""
          OutputS3Region: ""
          OutputS3BucketName: ""
      title: CreateAssociationRequest_OutputLocation
    CreateDocumentResult_DocumentDescription:
      allOf:
      - $ref: '#/components/schemas/DocumentDescription'
      - description: Information about the SSM document.
      example:
        ReviewInformation: ""
        Sha1: ""
        Owner: ""
        DocumentFormat: ""
        Description: ""
        Category: ""
        AttachmentsInformation: ""
        StatusInformation: ""
        DefaultVersion: ""
        Hash: ""
        Name: ""
        ApprovedVersion: ""
        CategoryEnum: ""
        ReviewStatus: ""
        DisplayName: ""
        TargetType: ""
        VersionName: ""
        DocumentVersion: ""
        Tags: ""
        Status: ""
        Parameters: ""
        SchemaVersion: ""
        Requires: ""
        HashType: ""
        DocumentType: ""
        LatestVersion: ""
        PendingReviewVersion: ""
        CreatedDate: ""
        Author: ""
        PlatformTypes: ""
      title: CreateDocumentResult_DocumentDescription
    CreatePatchBaselineRequest_GlobalFilters:
      allOf:
      - $ref: '#/components/schemas/PatchFilterGroup'
      - description: A set of global filters used to include patches in the baseline.
      example:
        PatchFilters: ""
      title: CreatePatchBaselineRequest_GlobalFilters
    CreatePatchBaselineRequest_ApprovalRules:
      allOf:
      - $ref: '#/components/schemas/PatchRuleGroup'
      - description: A set of rules used to include patches in the baseline.
      example:
        PatchRules: ""
      title: CreatePatchBaselineRequest_ApprovalRules
    CreateResourceDataSyncRequest_S3Destination:
      allOf:
      - $ref: '#/components/schemas/ResourceDataSyncS3Destination'
      - description: Amazon S3 configuration details for the sync. This parameter
          is required if the <code>SyncType</code> value is SyncToDestination.
      example:
        AWSKMSKeyARN: ""
        BucketName: ""
        SyncFormat: ""
        Region: ""
        Prefix: ""
        DestinationDataSharing:
          DestinationDataSharingType: ""
      title: CreateResourceDataSyncRequest_S3Destination
    CreateResourceDataSyncRequest_SyncSource:
      allOf:
      - $ref: '#/components/schemas/ResourceDataSyncSource'
      - description: Specify information about the data sources to synchronize. This
          parameter is required if the <code>SyncType</code> value is SyncFromSource.
      example:
        SourceType: ""
        AwsOrganizationsSource:
          OrganizationSourceType: ""
          OrganizationalUnits: ""
        IncludeFutureRegions: ""
        SourceRegions: ""
        EnableAllOpsDataSources: ""
      title: CreateResourceDataSyncRequest_SyncSource
    DeleteInventoryResult_DeletionSummary:
      allOf:
      - $ref: '#/components/schemas/InventoryDeletionSummary'
      - description: "A summary of the delete operation. For more information about\
          \ this summary, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-inventory-custom.html#sysman-inventory-delete-summary\"\
          >Deleting custom inventory</a> in the <i>Amazon Web Services Systems Manager\
          \ User Guide</i>."
      example:
        TotalCount: ""
        RemainingCount: ""
        SummaryItems: ""
      title: DeleteInventoryResult_DeletionSummary
    GetAutomationExecutionResult_AutomationExecution:
      allOf:
      - $ref: '#/components/schemas/AutomationExecution'
      - description: Detailed information about the current state of an automation
          execution.
      example:
        CurrentAction: ""
        StepExecutions: ""
        MaxErrors: ""
        ExecutionStartTime: ""
        ProgressCounters:
          SuccessSteps: ""
          TimedOutSteps: ""
          FailedSteps: ""
          CancelledSteps: ""
          TotalSteps: ""
        ExecutionEndTime: ""
        Target: ""
        AutomationSubtype: ""
        AutomationExecutionStatus: ""
        TriggeredAlarms: ""
        FailureMessage: ""
        DocumentVersion: ""
        ExecutedBy: ""
        DocumentName: ""
        TargetLocations: ""
        ScheduledTime: ""
        ChangeRequestName: ""
        Parameters: ""
        Mode: ""
        TargetMaps: ""
        MaxConcurrency: ""
        Targets: ""
        AlarmConfiguration:
          IgnorePollAlarmFailure: ""
          Alarms: ""
        AutomationExecutionId: ""
        StepExecutionsTruncated: ""
        TargetParameterName: ""
        OpsItemId: ""
        ParentAutomationExecutionId: ""
        ResolvedTargets:
          Truncated: ""
          ParameterValues: ""
        CurrentStepName: ""
        Outputs: ""
        Runbooks: ""
        AssociationId: ""
      title: GetAutomationExecutionResult_AutomationExecution
    GetCommandInvocationResult_CloudWatchOutputConfig:
      allOf:
      - $ref: '#/components/schemas/CloudWatchOutputConfig'
      - description: Amazon CloudWatch Logs information where Systems Manager sent
          the command output.
      example:
        CloudWatchOutputEnabled: ""
        CloudWatchLogGroupName: ""
      title: GetCommandInvocationResult_CloudWatchOutputConfig
    GetDeployablePatchSnapshotForInstanceRequest_BaselineOverride:
      allOf:
      - $ref: '#/components/schemas/BaselineOverride'
      - description: Defines the basic information about a patch baseline override.
      example:
        OperatingSystem: ""
        ApprovedPatches: ""
        RejectedPatchesAction: ""
        ApprovedPatchesComplianceLevel: ""
        ApprovedPatchesEnableNonSecurity: ""
        ApprovalRules:
          PatchRules: ""
        GlobalFilters:
          PatchFilters: ""
        Sources: ""
        RejectedPatches: ""
      title: GetDeployablePatchSnapshotForInstanceRequest_BaselineOverride
    GetMaintenanceWindowExecutionTaskResult_AlarmConfiguration:
      allOf:
      - $ref: '#/components/schemas/AlarmConfiguration'
      - description: The details for the CloudWatch alarm you applied to your maintenance
          window task.
      example:
        IgnorePollAlarmFailure: ""
        Alarms: ""
      title: GetMaintenanceWindowExecutionTaskResult_AlarmConfiguration
    GetMaintenanceWindowTaskResult_TaskInvocationParameters:
      allOf:
      - $ref: '#/components/schemas/MaintenanceWindowTaskInvocationParameters'
      - description: The parameters to pass to the task when it runs.
      example:
        Automation:
          Parameters: ""
          DocumentVersion: ""
        StepFunctions:
          Input: ""
          Name: ""
        RunCommand:
          TimeoutSeconds: ""
          Comment: ""
          OutputS3KeyPrefix: ""
          Parameters: ""
          CloudWatchOutputConfig:
            CloudWatchOutputEnabled: ""
            CloudWatchLogGroupName: ""
          DocumentHashType: ""
          ServiceRoleArn: ""
          NotificationConfig:
            NotificationArn: ""
            NotificationType: ""
            NotificationEvents: ""
          DocumentVersion: ""
          OutputS3BucketName: ""
          DocumentHash: ""
        Lambda:
          ClientContext: ""
          Qualifier: ""
          Payload: ""
      title: GetMaintenanceWindowTaskResult_TaskInvocationParameters
    GetMaintenanceWindowTaskResult_LoggingInfo:
      allOf:
      - $ref: '#/components/schemas/LoggingInfo'
      - description: "<p>The location in Amazon Simple Storage Service (Amazon S3)\
          \ where the task results are logged.</p> <note> <p> <code>LoggingInfo</code>\
          \ has been deprecated. To specify an Amazon Simple Storage Service (Amazon\
          \ S3) bucket to contain logs, instead use the <code>OutputS3BucketName</code>\
          \ and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code>\
          \ structure. For information about how Amazon Web Services Systems Manager\
          \ handles these options for the supported maintenance window task types,\
          \ see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>"
      example:
        S3KeyPrefix: ""
        S3Region: ""
        S3BucketName: ""
      title: GetMaintenanceWindowTaskResult_LoggingInfo
    GetOpsItemResponse_OpsItem:
      allOf:
      - $ref: '#/components/schemas/OpsItem'
      - description: The OpsItem.
      example:
        Status: ""
        LastModifiedBy: ""
        CreatedBy: ""
        OpsItemType: ""
        CreatedTime: ""
        Description: ""
        Category: ""
        OpsItemArn: ""
        Priority: ""
        OperationalData: ""
        PlannedStartTime: ""
        Title: ""
        Severity: ""
        Source: ""
        OpsItemId: ""
        ActualStartTime: ""
        Version: ""
        LastModifiedTime: ""
        ActualEndTime: ""
        Notifications: ""
        RelatedOpsItems: ""
        PlannedEndTime: ""
      title: GetOpsItemResponse_OpsItem
    GetParameterResult_Parameter:
      allOf:
      - $ref: '#/components/schemas/Parameter'
      - description: Information about a parameter.
      example:
        SourceResult: ""
        LastModifiedDate: ""
        Type: ""
        Version: ""
        Value: ""
        DataType: ""
        ARN: ""
        Name: ""
        Selector: ""
      title: GetParameterResult_Parameter
    GetPatchBaselineResult_GlobalFilters:
      allOf:
      - $ref: '#/components/schemas/PatchFilterGroup'
      - description: A set of global filters used to exclude patches from the baseline.
      example:
        PatchFilters: ""
      title: GetPatchBaselineResult_GlobalFilters
    GetServiceSettingResult_ServiceSetting:
      allOf:
      - $ref: '#/components/schemas/ServiceSetting'
      - description: The query result of the current service setting.
      example:
        Status: ""
        LastModifiedDate: ""
        SettingValue: ""
        SettingId: ""
        ARN: ""
        LastModifiedUser: ""
      title: GetServiceSettingResult_ServiceSetting
    ListDocumentMetadataHistoryResponse_Metadata:
      allOf:
      - $ref: '#/components/schemas/DocumentMetadataResponseInfo'
      - description: Information about the response to the change template approval
          request.
      example:
        ReviewerResponse: ""
      title: ListDocumentMetadataHistoryResponse_Metadata
    PutComplianceItemsRequest_ExecutionSummary:
      allOf:
      - $ref: '#/components/schemas/ComplianceExecutionSummary'
      - description: "A summary of the call execution that includes an execution ID,\
          \ the type of execution (for example, <code>Command</code>), and the date/time\
          \ of the execution using a datetime object that is saved in the following\
          \ format: yyyy-MM-dd'T'HH:mm:ss'Z'."
      example:
        ExecutionTime: ""
        ExecutionType: ""
        ExecutionId: ""
      title: PutComplianceItemsRequest_ExecutionSummary
    RegisterTaskWithMaintenanceWindowRequest_TaskInvocationParameters:
      allOf:
      - $ref: '#/components/schemas/MaintenanceWindowTaskInvocationParameters'
      - description: 'The parameters that the task should use during execution. Populate
          only the fields that match the task type. All other fields should be empty. '
      example:
        Automation:
          Parameters: ""
          DocumentVersion: ""
        StepFunctions:
          Input: ""
          Name: ""
        RunCommand:
          TimeoutSeconds: ""
          Comment: ""
          OutputS3KeyPrefix: ""
          Parameters: ""
          CloudWatchOutputConfig:
            CloudWatchOutputEnabled: ""
            CloudWatchLogGroupName: ""
          DocumentHashType: ""
          ServiceRoleArn: ""
          NotificationConfig:
            NotificationArn: ""
            NotificationType: ""
            NotificationEvents: ""
          DocumentVersion: ""
          OutputS3BucketName: ""
          DocumentHash: ""
        Lambda:
          ClientContext: ""
          Qualifier: ""
          Payload: ""
      title: RegisterTaskWithMaintenanceWindowRequest_TaskInvocationParameters
    RegisterTaskWithMaintenanceWindowRequest_LoggingInfo:
      allOf:
      - $ref: '#/components/schemas/LoggingInfo'
      - description: "<p>A structure containing information about an Amazon Simple\
          \ Storage Service (Amazon S3) bucket to write managed node-level logs to.\
          \ </p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify\
          \ an Amazon Simple Storage Service (Amazon S3) bucket to contain logs, instead\
          \ use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code>\
          \ options in the <code>TaskInvocationParameters</code> structure. For information\
          \ about how Amazon Web Services Systems Manager handles these options for\
          \ the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p>\
          \ </note>"
      example:
        S3KeyPrefix: ""
        S3Region: ""
        S3BucketName: ""
      title: RegisterTaskWithMaintenanceWindowRequest_LoggingInfo
    RegisterTaskWithMaintenanceWindowRequest_AlarmConfiguration:
      allOf:
      - $ref: '#/components/schemas/AlarmConfiguration'
      - description: The CloudWatch alarm you want to apply to your maintenance window
          task.
      example:
        IgnorePollAlarmFailure: ""
        Alarms: ""
      title: RegisterTaskWithMaintenanceWindowRequest_AlarmConfiguration
    ResetServiceSettingResult_ServiceSetting:
      allOf:
      - $ref: '#/components/schemas/ServiceSetting'
      - description: "The current, effective service setting after calling the ResetServiceSetting\
          \ API operation."
      example:
        Status: ""
        LastModifiedDate: ""
        SettingValue: ""
        SettingId: ""
        ARN: ""
        LastModifiedUser: ""
      title: ResetServiceSettingResult_ServiceSetting
    SendCommandResult_Command:
      allOf:
      - $ref: '#/components/schemas/Command'
      - description: The request as it was received by Systems Manager. Also provides
          the command ID which can be used future references to this request.
      example:
        MaxErrors: ""
        TargetCount: ""
        OutputS3Region: ""
        CompletedCount: ""
        ErrorCount: ""
        ExpiresAfter: ""
        TimeoutSeconds: ""
        OutputS3KeyPrefix: ""
        ServiceRole: ""
        DeliveryTimedOutCount: ""
        CloudWatchOutputConfig:
          CloudWatchOutputEnabled: ""
          CloudWatchLogGroupName: ""
        NotificationConfig:
          NotificationArn: ""
          NotificationType: ""
          NotificationEvents: ""
        TriggeredAlarms: ""
        DocumentVersion: ""
        InstanceIds: ""
        OutputS3BucketName: ""
        DocumentName: ""
        Status: ""
        Comment: ""
        Parameters: ""
        MaxConcurrency: ""
        Targets: ""
        AlarmConfiguration:
          IgnorePollAlarmFailure: ""
          Alarms: ""
        StatusDetails: ""
        CommandId: ""
        RequestedDateTime: ""
      title: SendCommandResult_Command
    SendCommandRequest_NotificationConfig:
      allOf:
      - $ref: '#/components/schemas/NotificationConfig'
      - description: Configurations for sending notifications.
      example:
        NotificationArn: ""
        NotificationType: ""
        NotificationEvents: ""
      title: SendCommandRequest_NotificationConfig
    SendCommandRequest_CloudWatchOutputConfig:
      allOf:
      - $ref: '#/components/schemas/CloudWatchOutputConfig'
      - description: Enables Amazon Web Services Systems Manager to send Run Command
          output to Amazon CloudWatch Logs. Run Command is a capability of Amazon
          Web Services Systems Manager.
      example:
        CloudWatchOutputEnabled: ""
        CloudWatchLogGroupName: ""
      title: SendCommandRequest_CloudWatchOutputConfig
    SendCommandRequest_AlarmConfiguration:
      allOf:
      - $ref: '#/components/schemas/AlarmConfiguration'
      - description: The CloudWatch alarm you want to apply to your command.
      example:
        IgnorePollAlarmFailure: ""
        Alarms: ""
      title: SendCommandRequest_AlarmConfiguration
    StartAutomationExecutionRequest_AlarmConfiguration:
      allOf:
      - $ref: '#/components/schemas/AlarmConfiguration'
      - description: The CloudWatch alarm you want to apply to your automation.
      example:
        IgnorePollAlarmFailure: ""
        Alarms: ""
      title: StartAutomationExecutionRequest_AlarmConfiguration
    UpdateAssociationResult_AssociationDescription:
      allOf:
      - $ref: '#/components/schemas/AssociationDescription'
      - description: The description of the association that was updated.
      example:
        LastExecutionDate: ""
        AssociationName: ""
        LastSuccessfulExecutionDate: ""
        MaxErrors: ""
        AssociationVersion: ""
        ScheduleOffset: ""
        Name: ""
        TriggeredAlarms: ""
        DocumentVersion: ""
        TargetLocations: ""
        Status:
          AdditionalInfo: ""
          Message: ""
          Date: ""
          Name: ""
        CalendarNames: ""
        ScheduleExpression: ""
        Parameters: ""
        InstanceId: ""
        TargetMaps: ""
        MaxConcurrency: ""
        ComplianceSeverity: ""
        Overview:
          Status: ""
          AssociationStatusAggregatedCount: ""
          DetailedStatus: ""
        Targets: ""
        SyncCompliance: ""
        AlarmConfiguration:
          IgnorePollAlarmFailure: ""
          Alarms: ""
        OutputLocation:
          S3Location:
            OutputS3KeyPrefix: ""
            OutputS3Region: ""
            OutputS3BucketName: ""
        Date: ""
        ApplyOnlyAtCronInterval: ""
        LastUpdateAssociationDate: ""
        AutomationTargetParameterName: ""
        AssociationId: ""
      title: UpdateAssociationResult_AssociationDescription
    UpdateAssociationRequest_OutputLocation:
      allOf:
      - $ref: '#/components/schemas/InstanceAssociationOutputLocation'
      - description: An S3 bucket where you want to store the results of this request.
      example:
        S3Location:
          OutputS3KeyPrefix: ""
          OutputS3Region: ""
          OutputS3BucketName: ""
      title: UpdateAssociationRequest_OutputLocation
    UpdateAssociationStatusRequest_AssociationStatus:
      allOf:
      - $ref: '#/components/schemas/AssociationStatus'
      - description: The association status.
      example:
        AdditionalInfo: ""
        Message: ""
        Date: ""
        Name: ""
      title: UpdateAssociationStatusRequest_AssociationStatus
    UpdateDocumentResult_DocumentDescription:
      allOf:
      - $ref: '#/components/schemas/DocumentDescription'
      - description: A description of the document that was updated.
      example:
        ReviewInformation: ""
        Sha1: ""
        Owner: ""
        DocumentFormat: ""
        Description: ""
        Category: ""
        AttachmentsInformation: ""
        StatusInformation: ""
        DefaultVersion: ""
        Hash: ""
        Name: ""
        ApprovedVersion: ""
        CategoryEnum: ""
        ReviewStatus: ""
        DisplayName: ""
        TargetType: ""
        VersionName: ""
        DocumentVersion: ""
        Tags: ""
        Status: ""
        Parameters: ""
        SchemaVersion: ""
        Requires: ""
        HashType: ""
        DocumentType: ""
        LatestVersion: ""
        PendingReviewVersion: ""
        CreatedDate: ""
        Author: ""
        PlatformTypes: ""
      title: UpdateDocumentResult_DocumentDescription
    UpdateDocumentDefaultVersionResult_Description:
      allOf:
      - $ref: '#/components/schemas/DocumentDefaultVersionDescription'
      - description: The description of a custom document that you want to set as
          the default version.
      example:
        DefaultVersionName: ""
        DefaultVersion: ""
        Name: ""
      title: UpdateDocumentDefaultVersionResult_Description
    UpdateDocumentMetadataRequest_DocumentReviews:
      allOf:
      - $ref: '#/components/schemas/DocumentReviews'
      - description: The change template review details to update.
      example:
        Comment: ""
        Action: ""
      title: UpdateDocumentMetadataRequest_DocumentReviews
    UpdateMaintenanceWindowTaskResult_TaskInvocationParameters:
      allOf:
      - $ref: '#/components/schemas/MaintenanceWindowTaskInvocationParameters'
      - description: The updated parameter values.
      example:
        Automation:
          Parameters: ""
          DocumentVersion: ""
        StepFunctions:
          Input: ""
          Name: ""
        RunCommand:
          TimeoutSeconds: ""
          Comment: ""
          OutputS3KeyPrefix: ""
          Parameters: ""
          CloudWatchOutputConfig:
            CloudWatchOutputEnabled: ""
            CloudWatchLogGroupName: ""
          DocumentHashType: ""
          ServiceRoleArn: ""
          NotificationConfig:
            NotificationArn: ""
            NotificationType: ""
            NotificationEvents: ""
          DocumentVersion: ""
          OutputS3BucketName: ""
          DocumentHash: ""
        Lambda:
          ClientContext: ""
          Qualifier: ""
          Payload: ""
      title: UpdateMaintenanceWindowTaskResult_TaskInvocationParameters
    UpdateMaintenanceWindowTaskResult_LoggingInfo:
      allOf:
      - $ref: '#/components/schemas/LoggingInfo'
      - description: "<p>The updated logging information in Amazon S3.</p> <note>\
          \ <p> <code>LoggingInfo</code> has been deprecated. To specify an Amazon\
          \ Simple Storage Service (Amazon S3) bucket to contain logs, instead use\
          \ the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code>\
          \ options in the <code>TaskInvocationParameters</code> structure. For information\
          \ about how Amazon Web Services Systems Manager handles these options for\
          \ the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p>\
          \ </note>"
      example:
        S3KeyPrefix: ""
        S3Region: ""
        S3BucketName: ""
      title: UpdateMaintenanceWindowTaskResult_LoggingInfo
    UpdateMaintenanceWindowTaskRequest_TaskInvocationParameters:
      allOf:
      - $ref: '#/components/schemas/MaintenanceWindowTaskInvocationParameters'
      - description: "<p>The parameters that the task should use during execution.\
          \ Populate only the fields that match the task type. All other fields should\
          \ be empty.</p> <important> <p>When you update a maintenance window task\
          \ that has options specified in <code>TaskInvocationParameters</code>, you\
          \ must provide again all the <code>TaskInvocationParameters</code> values\
          \ that you want to retain. The values you don't specify again are removed.\
          \ For example, suppose that when you registered a Run Command task, you\
          \ specified <code>TaskInvocationParameters</code> values for <code>Comment</code>,\
          \ <code>NotificationConfig</code>, and <code>OutputS3BucketName</code>.\
          \ If you update the maintenance window task and specify only a different\
          \ <code>OutputS3BucketName</code> value, the values for <code>Comment</code>\
          \ and <code>NotificationConfig</code> are removed.</p> </important>"
      example:
        Automation:
          Parameters: ""
          DocumentVersion: ""
        StepFunctions:
          Input: ""
          Name: ""
        RunCommand:
          TimeoutSeconds: ""
          Comment: ""
          OutputS3KeyPrefix: ""
          Parameters: ""
          CloudWatchOutputConfig:
            CloudWatchOutputEnabled: ""
            CloudWatchLogGroupName: ""
          DocumentHashType: ""
          ServiceRoleArn: ""
          NotificationConfig:
            NotificationArn: ""
            NotificationType: ""
            NotificationEvents: ""
          DocumentVersion: ""
          OutputS3BucketName: ""
          DocumentHash: ""
        Lambda:
          ClientContext: ""
          Qualifier: ""
          Payload: ""
      title: UpdateMaintenanceWindowTaskRequest_TaskInvocationParameters
    UpdateMaintenanceWindowTaskRequest_LoggingInfo:
      allOf:
      - $ref: '#/components/schemas/LoggingInfo'
      - description: "<p>The new logging location in Amazon S3 to specify.</p> <note>\
          \ <p> <code>LoggingInfo</code> has been deprecated. To specify an Amazon\
          \ Simple Storage Service (Amazon S3) bucket to contain logs, instead use\
          \ the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code>\
          \ options in the <code>TaskInvocationParameters</code> structure. For information\
          \ about how Amazon Web Services Systems Manager handles these options for\
          \ the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p>\
          \ </note>"
      example:
        S3KeyPrefix: ""
        S3Region: ""
        S3BucketName: ""
      title: UpdateMaintenanceWindowTaskRequest_LoggingInfo
    UpdateResourceDataSyncRequest_SyncSource:
      allOf:
      - $ref: '#/components/schemas/ResourceDataSyncSource'
      - description: Specify information about the data sources to synchronize.
      example:
        SourceType: ""
        AwsOrganizationsSource:
          OrganizationSourceType: ""
          OrganizationalUnits: ""
        IncludeFutureRegions: ""
        SourceRegions: ""
        EnableAllOpsDataSources: ""
      title: UpdateResourceDataSyncRequest_SyncSource
    Association_Overview:
      allOf:
      - $ref: '#/components/schemas/AssociationOverview'
      - description: Information about the association.
      example:
        Status: ""
        AssociationStatusAggregatedCount: ""
        DetailedStatus: ""
      title: Association_Overview
    InstanceAssociationOutputLocation_S3Location:
      allOf:
      - $ref: '#/components/schemas/S3OutputLocation'
      - description: An S3 bucket where you want to store the results of this request.
      example:
        OutputS3KeyPrefix: ""
        OutputS3Region: ""
        OutputS3BucketName: ""
      title: InstanceAssociationOutputLocation_S3Location
    AssociationDescription_OutputLocation:
      allOf:
      - $ref: '#/components/schemas/InstanceAssociationOutputLocation'
      - description: An S3 bucket where you want to store the output details of the
          request.
      example:
        S3Location:
          OutputS3KeyPrefix: ""
          OutputS3Region: ""
          OutputS3BucketName: ""
      title: AssociationDescription_OutputLocation
    AssociationExecutionTarget_OutputSource:
      allOf:
      - $ref: '#/components/schemas/OutputSource'
      - description: The location where the association details are saved.
      title: AssociationExecutionTarget_OutputSource
    AssociationVersionInfo_OutputLocation:
      allOf:
      - $ref: '#/components/schemas/InstanceAssociationOutputLocation'
      - description: The location in Amazon S3 specified for the association when
          the association version was created.
      title: AssociationVersionInfo_OutputLocation
    AutomationExecution_ResolvedTargets:
      allOf:
      - $ref: '#/components/schemas/ResolvedTargets'
      - description: A list of resolved targets in the rate control execution.
      example:
        Truncated: ""
        ParameterValues: ""
      title: AutomationExecution_ResolvedTargets
    AutomationExecution_ProgressCounters:
      allOf:
      - $ref: '#/components/schemas/ProgressCounters'
      - description: An aggregate of step execution statuses displayed in the Amazon
          Web Services Systems Manager console for a multi-Region and multi-account
          Automation execution.
      example:
        SuccessSteps: ""
        TimedOutSteps: ""
        FailedSteps: ""
        CancelledSteps: ""
        TotalSteps: ""
      title: AutomationExecution_ProgressCounters
    AutomationExecution_AlarmConfiguration:
      allOf:
      - $ref: '#/components/schemas/AlarmConfiguration'
      - description: The details for the CloudWatch alarm applied to your automation.
      example:
        IgnorePollAlarmFailure: ""
        Alarms: ""
      title: AutomationExecution_AlarmConfiguration
    AutomationExecutionMetadata_ResolvedTargets:
      allOf:
      - $ref: '#/components/schemas/ResolvedTargets'
      - description: A list of targets that resolved during the execution.
      title: AutomationExecutionMetadata_ResolvedTargets
    Command_NotificationConfig:
      allOf:
      - $ref: '#/components/schemas/NotificationConfig'
      - description: 'Configurations for sending notifications about command status
          changes. '
      example:
        NotificationArn: ""
        NotificationType: ""
        NotificationEvents: ""
      title: Command_NotificationConfig
    Command_CloudWatchOutputConfig:
      allOf:
      - $ref: '#/components/schemas/CloudWatchOutputConfig'
      - description: Amazon CloudWatch Logs information where you want Amazon Web
          Services Systems Manager to send the command output.
      example:
        CloudWatchOutputEnabled: ""
        CloudWatchLogGroupName: ""
      title: Command_CloudWatchOutputConfig
    Command_AlarmConfiguration:
      allOf:
      - $ref: '#/components/schemas/AlarmConfiguration'
      - description: The details for the CloudWatch alarm applied to your command.
      example:
        IgnorePollAlarmFailure: ""
        Alarms: ""
      title: Command_AlarmConfiguration
    CommandInvocation_NotificationConfig:
      allOf:
      - $ref: '#/components/schemas/NotificationConfig'
      - description: Configurations for sending notifications about command status
          changes on a per managed node basis.
      title: CommandInvocation_NotificationConfig
    ComplianceItem_ExecutionSummary:
      allOf:
      - $ref: '#/components/schemas/ComplianceExecutionSummary'
      - description: "A summary for the compliance item. The summary includes an execution\
          \ ID, the execution type (for example, command), and the execution time."
      title: ComplianceItem_ExecutionSummary
    CompliantSummary_SeveritySummary:
      allOf:
      - $ref: '#/components/schemas/SeveritySummary'
      - description: A summary of the compliance severity by compliance type.
      title: CompliantSummary_SeveritySummary
    NonCompliantSummary_SeveritySummary:
      allOf:
      - $ref: '#/components/schemas/SeveritySummary'
      - description: A summary of the non-compliance severity by compliance type
      title: NonCompliantSummary_SeveritySummary
    ComplianceSummaryItem_CompliantSummary:
      allOf:
      - $ref: '#/components/schemas/CompliantSummary'
      - description: A list of COMPLIANT items for the specified compliance type.
      title: ComplianceSummaryItem_CompliantSummary
    ComplianceSummaryItem_NonCompliantSummary:
      allOf:
      - $ref: '#/components/schemas/NonCompliantSummary'
      - description: A list of NON_COMPLIANT items for the specified compliance type.
      title: ComplianceSummaryItem_NonCompliantSummary
    ResourceDataSyncS3Destination_DestinationDataSharing:
      allOf:
      - $ref: '#/components/schemas/ResourceDataSyncDestinationDataSharing'
      - description: "Enables destination data sharing. By default, this field is\
          \ <code>null</code>."
      example:
        DestinationDataSharingType: ""
      title: ResourceDataSyncS3Destination_DestinationDataSharing
    ResourceDataSyncSource_AwsOrganizationsSource:
      allOf:
      - $ref: '#/components/schemas/ResourceDataSyncAwsOrganizationsSource'
      - description: Information about the <code>AwsOrganizationsSource</code> resource
          data sync source. A sync source of this type can synchronize data from Organizations.
      example:
        OrganizationSourceType: ""
        OrganizationalUnits: ""
      title: ResourceDataSyncSource_AwsOrganizationsSource
    EffectivePatch_Patch:
      allOf:
      - $ref: '#/components/schemas/Patch'
      - description: "Provides metadata for a patch, including information such as\
          \ the KB ID, severity, classification and a URL for where more information\
          \ can be obtained about the patch."
      title: EffectivePatch_Patch
    EffectivePatch_PatchStatus:
      allOf:
      - $ref: '#/components/schemas/PatchStatus'
      - description: "The status of the patch in a patch baseline. This includes information\
          \ about whether the patch is currently approved, due to be approved by a\
          \ rule, explicitly approved, or explicitly rejected and the date the patch\
          \ was or will be approved."
      title: EffectivePatch_PatchStatus
    FailedCreateAssociation_Entry:
      allOf:
      - $ref: '#/components/schemas/CreateAssociationBatchRequestEntry'
      - description: The association.
      title: FailedCreateAssociation_Entry
    MaintenanceWindowTaskInvocationParameters_RunCommand:
      allOf:
      - $ref: '#/components/schemas/MaintenanceWindowRunCommandParameters'
      - description: The parameters for a <code>RUN_COMMAND</code> task type.
      example:
        TimeoutSeconds: ""
        Comment: ""
        OutputS3KeyPrefix: ""
        Parameters: ""
        CloudWatchOutputConfig:
          CloudWatchOutputEnabled: ""
          CloudWatchLogGroupName: ""
        DocumentHashType: ""
        ServiceRoleArn: ""
        NotificationConfig:
          NotificationArn: ""
          NotificationType: ""
          NotificationEvents: ""
        DocumentVersion: ""
        OutputS3BucketName: ""
        DocumentHash: ""
      title: MaintenanceWindowTaskInvocationParameters_RunCommand
    MaintenanceWindowTaskInvocationParameters_Automation:
      allOf:
      - $ref: '#/components/schemas/MaintenanceWindowAutomationParameters'
      - description: The parameters for an <code>AUTOMATION</code> task type.
      example:
        Parameters: ""
        DocumentVersion: ""
      title: MaintenanceWindowTaskInvocationParameters_Automation
    MaintenanceWindowTaskInvocationParameters_StepFunctions:
      allOf:
      - $ref: '#/components/schemas/MaintenanceWindowStepFunctionsParameters'
      - description: The parameters for a <code>STEP_FUNCTIONS</code> task type.
      example:
        Input: ""
        Name: ""
      title: MaintenanceWindowTaskInvocationParameters_StepFunctions
    MaintenanceWindowTaskInvocationParameters_Lambda:
      allOf:
      - $ref: '#/components/schemas/MaintenanceWindowLambdaParameters'
      - description: The parameters for a <code>LAMBDA</code> task type.
      example:
        ClientContext: ""
        Qualifier: ""
        Payload: ""
      title: MaintenanceWindowTaskInvocationParameters_Lambda
    InstanceAssociationOutputUrl_S3OutputUrl:
      allOf:
      - $ref: '#/components/schemas/S3OutputUrl'
      - description: The URL of S3 bucket where you want to store the results of this
          request.
      title: InstanceAssociationOutputUrl_S3OutputUrl
    InstanceAssociationStatusInfo_OutputUrl:
      allOf:
      - $ref: '#/components/schemas/InstanceAssociationOutputUrl'
      - description: A URL for an S3 bucket where you want to store the results of
          this request.
      title: InstanceAssociationStatusInfo_OutputUrl
    InstanceInformation_AssociationOverview:
      allOf:
      - $ref: '#/components/schemas/InstanceAggregatedAssociationOverview'
      - description: Information about the association.
      title: InstanceInformation_AssociationOverview
    InventoryDeletionStatusItem_DeletionSummary:
      allOf:
      - $ref: '#/components/schemas/InventoryDeletionSummary'
      - description: "Information about the delete operation. For more information\
          \ about this summary, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-inventory-custom.html#sysman-inventory-delete\"\
          >Understanding the delete inventory summary</a> in the <i>Amazon Web Services\
          \ Systems Manager User Guide</i>."
      title: InventoryDeletionStatusItem_DeletionSummary
    MaintenanceWindowExecutionTaskIdentity_AlarmConfiguration:
      allOf:
      - $ref: '#/components/schemas/AlarmConfiguration'
      - description: The details for the CloudWatch alarm applied to your maintenance
          window task.
      title: MaintenanceWindowExecutionTaskIdentity_AlarmConfiguration
    MaintenanceWindowRunCommandParameters_NotificationConfig:
      allOf:
      - $ref: '#/components/schemas/NotificationConfig'
      - description: Configurations for sending notifications about command status
          changes on a per-managed node basis.
      example:
        NotificationArn: ""
        NotificationType: ""
        NotificationEvents: ""
      title: MaintenanceWindowRunCommandParameters_NotificationConfig
    MaintenanceWindowTask_LoggingInfo:
      allOf:
      - $ref: '#/components/schemas/LoggingInfo'
      - description: "<p>Information about an S3 bucket to write task-level logs to.</p>\
          \ <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an\
          \ Amazon Simple Storage Service (Amazon S3) bucket to contain logs, instead\
          \ use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code>\
          \ options in the <code>TaskInvocationParameters</code> structure. For information\
          \ about how Amazon Web Services Systems Manager handles these options for\
          \ the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p>\
          \ </note>"
      title: MaintenanceWindowTask_LoggingInfo
    OpsItemEventSummary_CreatedBy:
      allOf:
      - $ref: '#/components/schemas/OpsItemIdentity'
      - description: Information about the user or resource that created the OpsItem
          event.
      title: OpsItemEventSummary_CreatedBy
    PatchGroupPatchBaselineMapping_BaselineIdentity:
      allOf:
      - $ref: '#/components/schemas/PatchBaselineIdentity'
      - description: The patch baseline the patch group is registered with.
      title: PatchGroupPatchBaselineMapping_BaselineIdentity
    PatchRule_PatchFilterGroup:
      allOf:
      - $ref: '#/components/schemas/PatchFilterGroup'
      - description: The patch filter group that defines the criteria for the rule.
      title: PatchRule_PatchFilterGroup
    ResourceComplianceSummaryItem_ExecutionSummary:
      allOf:
      - $ref: '#/components/schemas/ComplianceExecutionSummary'
      - description: Information about the execution.
      title: ResourceComplianceSummaryItem_ExecutionSummary
    ResourceComplianceSummaryItem_CompliantSummary:
      allOf:
      - $ref: '#/components/schemas/CompliantSummary'
      - description: A list of items that are compliant for the resource.
      title: ResourceComplianceSummaryItem_CompliantSummary
    ResourceComplianceSummaryItem_NonCompliantSummary:
      allOf:
      - $ref: '#/components/schemas/NonCompliantSummary'
      - description: A list of items that aren't compliant for the resource.
      title: ResourceComplianceSummaryItem_NonCompliantSummary
    ResourceDataSyncSourceWithState_AwsOrganizationsSource:
      allOf:
      - $ref: '#/components/schemas/ResourceDataSyncAwsOrganizationsSource'
      - description: The field name in <code>SyncSource</code> for the <code>ResourceDataSyncAwsOrganizationsSource</code>
          type.
      title: ResourceDataSyncSourceWithState_AwsOrganizationsSource
    ResourceDataSyncItem_SyncSource:
      allOf:
      - $ref: '#/components/schemas/ResourceDataSyncSourceWithState'
      - description: 'Information about the source where the data was synchronized. '
      title: ResourceDataSyncItem_SyncSource
    ResourceDataSyncItem_S3Destination:
      allOf:
      - $ref: '#/components/schemas/ResourceDataSyncS3Destination'
      - description: Configuration information for the target S3 bucket.
      title: ResourceDataSyncItem_S3Destination
    Session_OutputUrl:
      allOf:
      - $ref: '#/components/schemas/SessionManagerOutputUrl'
      - description: Reserved for future use.
      title: Session_OutputUrl
    StepExecution_FailureDetails:
      allOf:
      - $ref: '#/components/schemas/FailureDetails'
      - description: Information about the Automation failure.
      title: StepExecution_FailureDetails
    StepExecution_TargetLocation:
      allOf:
      - $ref: '#/components/schemas/TargetLocation'
      - description: The combination of Amazon Web Services Regions and Amazon Web
          Services accounts targeted by the current Automation execution.
      title: StepExecution_TargetLocation
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
