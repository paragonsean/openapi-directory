# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetMaintenanceWindowExecutionTaskRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, window_execution_id: str=None, task_id: str=None):
        """GetMaintenanceWindowExecutionTaskRequest - a model defined in OpenAPI

        :param window_execution_id: The window_execution_id of this GetMaintenanceWindowExecutionTaskRequest.
        :param task_id: The task_id of this GetMaintenanceWindowExecutionTaskRequest.
        """
        self.openapi_types = {
            'window_execution_id': str,
            'task_id': str
        }

        self.attribute_map = {
            'window_execution_id': 'WindowExecutionId',
            'task_id': 'TaskId'
        }

        self._window_execution_id = window_execution_id
        self._task_id = task_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetMaintenanceWindowExecutionTaskRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetMaintenanceWindowExecutionTaskRequest of this GetMaintenanceWindowExecutionTaskRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def window_execution_id(self):
        """Gets the window_execution_id of this GetMaintenanceWindowExecutionTaskRequest.


        :return: The window_execution_id of this GetMaintenanceWindowExecutionTaskRequest.
        :rtype: str
        """
        return self._window_execution_id

    @window_execution_id.setter
    def window_execution_id(self, window_execution_id):
        """Sets the window_execution_id of this GetMaintenanceWindowExecutionTaskRequest.


        :param window_execution_id: The window_execution_id of this GetMaintenanceWindowExecutionTaskRequest.
        :type window_execution_id: str
        """
        if window_execution_id is None:
            raise ValueError("Invalid value for `window_execution_id`, must not be `None`")

        self._window_execution_id = window_execution_id

    @property
    def task_id(self):
        """Gets the task_id of this GetMaintenanceWindowExecutionTaskRequest.


        :return: The task_id of this GetMaintenanceWindowExecutionTaskRequest.
        :rtype: str
        """
        return self._task_id

    @task_id.setter
    def task_id(self, task_id):
        """Sets the task_id of this GetMaintenanceWindowExecutionTaskRequest.


        :param task_id: The task_id of this GetMaintenanceWindowExecutionTaskRequest.
        :type task_id: str
        """
        if task_id is None:
            raise ValueError("Invalid value for `task_id`, must not be `None`")

        self._task_id = task_id
