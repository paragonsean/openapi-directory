# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.effective_patch_patch import EffectivePatchPatch
from openapi_server.models.effective_patch_patch_status import EffectivePatchPatchStatus
from openapi_server import util


class EffectivePatch(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, patch: EffectivePatchPatch=None, patch_status: EffectivePatchPatchStatus=None):
        """EffectivePatch - a model defined in OpenAPI

        :param patch: The patch of this EffectivePatch.
        :param patch_status: The patch_status of this EffectivePatch.
        """
        self.openapi_types = {
            'patch': EffectivePatchPatch,
            'patch_status': EffectivePatchPatchStatus
        }

        self.attribute_map = {
            'patch': 'Patch',
            'patch_status': 'PatchStatus'
        }

        self._patch = patch
        self._patch_status = patch_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EffectivePatch':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EffectivePatch of this EffectivePatch.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def patch(self):
        """Gets the patch of this EffectivePatch.


        :return: The patch of this EffectivePatch.
        :rtype: EffectivePatchPatch
        """
        return self._patch

    @patch.setter
    def patch(self, patch):
        """Sets the patch of this EffectivePatch.


        :param patch: The patch of this EffectivePatch.
        :type patch: EffectivePatchPatch
        """

        self._patch = patch

    @property
    def patch_status(self):
        """Gets the patch_status of this EffectivePatch.


        :return: The patch_status of this EffectivePatch.
        :rtype: EffectivePatchPatchStatus
        """
        return self._patch_status

    @patch_status.setter
    def patch_status(self, patch_status):
        """Sets the patch_status of this EffectivePatch.


        :param patch_status: The patch_status of this EffectivePatch.
        :type patch_status: EffectivePatchPatchStatus
        """

        self._patch_status = patch_status
