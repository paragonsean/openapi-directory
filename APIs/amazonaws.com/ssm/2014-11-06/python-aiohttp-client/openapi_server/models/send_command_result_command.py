# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.command_alarm_configuration import CommandAlarmConfiguration
from openapi_server.models.command_cloud_watch_output_config import CommandCloudWatchOutputConfig
from openapi_server.models.command_notification_config import CommandNotificationConfig
from openapi_server.models.command_status import CommandStatus
from openapi_server import util


class SendCommandResultCommand(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, command_id: str=None, document_name: str=None, document_version: str=None, comment: str=None, expires_after: datetime=None, parameters: Dict=None, instance_ids: List=None, targets: List=None, requested_date_time: datetime=None, status: CommandStatus=None, status_details: str=None, output_s3_region: str=None, output_s3_bucket_name: str=None, output_s3_key_prefix: str=None, max_concurrency: str=None, max_errors: str=None, target_count: int=None, completed_count: int=None, error_count: int=None, delivery_timed_out_count: int=None, service_role: str=None, notification_config: CommandNotificationConfig=None, cloud_watch_output_config: CommandCloudWatchOutputConfig=None, timeout_seconds: int=None, alarm_configuration: CommandAlarmConfiguration=None, triggered_alarms: List=None):
        """SendCommandResultCommand - a model defined in OpenAPI

        :param command_id: The command_id of this SendCommandResultCommand.
        :param document_name: The document_name of this SendCommandResultCommand.
        :param document_version: The document_version of this SendCommandResultCommand.
        :param comment: The comment of this SendCommandResultCommand.
        :param expires_after: The expires_after of this SendCommandResultCommand.
        :param parameters: The parameters of this SendCommandResultCommand.
        :param instance_ids: The instance_ids of this SendCommandResultCommand.
        :param targets: The targets of this SendCommandResultCommand.
        :param requested_date_time: The requested_date_time of this SendCommandResultCommand.
        :param status: The status of this SendCommandResultCommand.
        :param status_details: The status_details of this SendCommandResultCommand.
        :param output_s3_region: The output_s3_region of this SendCommandResultCommand.
        :param output_s3_bucket_name: The output_s3_bucket_name of this SendCommandResultCommand.
        :param output_s3_key_prefix: The output_s3_key_prefix of this SendCommandResultCommand.
        :param max_concurrency: The max_concurrency of this SendCommandResultCommand.
        :param max_errors: The max_errors of this SendCommandResultCommand.
        :param target_count: The target_count of this SendCommandResultCommand.
        :param completed_count: The completed_count of this SendCommandResultCommand.
        :param error_count: The error_count of this SendCommandResultCommand.
        :param delivery_timed_out_count: The delivery_timed_out_count of this SendCommandResultCommand.
        :param service_role: The service_role of this SendCommandResultCommand.
        :param notification_config: The notification_config of this SendCommandResultCommand.
        :param cloud_watch_output_config: The cloud_watch_output_config of this SendCommandResultCommand.
        :param timeout_seconds: The timeout_seconds of this SendCommandResultCommand.
        :param alarm_configuration: The alarm_configuration of this SendCommandResultCommand.
        :param triggered_alarms: The triggered_alarms of this SendCommandResultCommand.
        """
        self.openapi_types = {
            'command_id': str,
            'document_name': str,
            'document_version': str,
            'comment': str,
            'expires_after': datetime,
            'parameters': Dict,
            'instance_ids': List,
            'targets': List,
            'requested_date_time': datetime,
            'status': CommandStatus,
            'status_details': str,
            'output_s3_region': str,
            'output_s3_bucket_name': str,
            'output_s3_key_prefix': str,
            'max_concurrency': str,
            'max_errors': str,
            'target_count': int,
            'completed_count': int,
            'error_count': int,
            'delivery_timed_out_count': int,
            'service_role': str,
            'notification_config': CommandNotificationConfig,
            'cloud_watch_output_config': CommandCloudWatchOutputConfig,
            'timeout_seconds': int,
            'alarm_configuration': CommandAlarmConfiguration,
            'triggered_alarms': List
        }

        self.attribute_map = {
            'command_id': 'CommandId',
            'document_name': 'DocumentName',
            'document_version': 'DocumentVersion',
            'comment': 'Comment',
            'expires_after': 'ExpiresAfter',
            'parameters': 'Parameters',
            'instance_ids': 'InstanceIds',
            'targets': 'Targets',
            'requested_date_time': 'RequestedDateTime',
            'status': 'Status',
            'status_details': 'StatusDetails',
            'output_s3_region': 'OutputS3Region',
            'output_s3_bucket_name': 'OutputS3BucketName',
            'output_s3_key_prefix': 'OutputS3KeyPrefix',
            'max_concurrency': 'MaxConcurrency',
            'max_errors': 'MaxErrors',
            'target_count': 'TargetCount',
            'completed_count': 'CompletedCount',
            'error_count': 'ErrorCount',
            'delivery_timed_out_count': 'DeliveryTimedOutCount',
            'service_role': 'ServiceRole',
            'notification_config': 'NotificationConfig',
            'cloud_watch_output_config': 'CloudWatchOutputConfig',
            'timeout_seconds': 'TimeoutSeconds',
            'alarm_configuration': 'AlarmConfiguration',
            'triggered_alarms': 'TriggeredAlarms'
        }

        self._command_id = command_id
        self._document_name = document_name
        self._document_version = document_version
        self._comment = comment
        self._expires_after = expires_after
        self._parameters = parameters
        self._instance_ids = instance_ids
        self._targets = targets
        self._requested_date_time = requested_date_time
        self._status = status
        self._status_details = status_details
        self._output_s3_region = output_s3_region
        self._output_s3_bucket_name = output_s3_bucket_name
        self._output_s3_key_prefix = output_s3_key_prefix
        self._max_concurrency = max_concurrency
        self._max_errors = max_errors
        self._target_count = target_count
        self._completed_count = completed_count
        self._error_count = error_count
        self._delivery_timed_out_count = delivery_timed_out_count
        self._service_role = service_role
        self._notification_config = notification_config
        self._cloud_watch_output_config = cloud_watch_output_config
        self._timeout_seconds = timeout_seconds
        self._alarm_configuration = alarm_configuration
        self._triggered_alarms = triggered_alarms

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SendCommandResultCommand':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SendCommandResult_Command of this SendCommandResultCommand.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def command_id(self):
        """Gets the command_id of this SendCommandResultCommand.


        :return: The command_id of this SendCommandResultCommand.
        :rtype: str
        """
        return self._command_id

    @command_id.setter
    def command_id(self, command_id):
        """Sets the command_id of this SendCommandResultCommand.


        :param command_id: The command_id of this SendCommandResultCommand.
        :type command_id: str
        """

        self._command_id = command_id

    @property
    def document_name(self):
        """Gets the document_name of this SendCommandResultCommand.


        :return: The document_name of this SendCommandResultCommand.
        :rtype: str
        """
        return self._document_name

    @document_name.setter
    def document_name(self, document_name):
        """Sets the document_name of this SendCommandResultCommand.


        :param document_name: The document_name of this SendCommandResultCommand.
        :type document_name: str
        """

        self._document_name = document_name

    @property
    def document_version(self):
        """Gets the document_version of this SendCommandResultCommand.


        :return: The document_version of this SendCommandResultCommand.
        :rtype: str
        """
        return self._document_version

    @document_version.setter
    def document_version(self, document_version):
        """Sets the document_version of this SendCommandResultCommand.


        :param document_version: The document_version of this SendCommandResultCommand.
        :type document_version: str
        """

        self._document_version = document_version

    @property
    def comment(self):
        """Gets the comment of this SendCommandResultCommand.


        :return: The comment of this SendCommandResultCommand.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this SendCommandResultCommand.


        :param comment: The comment of this SendCommandResultCommand.
        :type comment: str
        """

        self._comment = comment

    @property
    def expires_after(self):
        """Gets the expires_after of this SendCommandResultCommand.


        :return: The expires_after of this SendCommandResultCommand.
        :rtype: datetime
        """
        return self._expires_after

    @expires_after.setter
    def expires_after(self, expires_after):
        """Sets the expires_after of this SendCommandResultCommand.


        :param expires_after: The expires_after of this SendCommandResultCommand.
        :type expires_after: datetime
        """

        self._expires_after = expires_after

    @property
    def parameters(self):
        """Gets the parameters of this SendCommandResultCommand.


        :return: The parameters of this SendCommandResultCommand.
        :rtype: Dict
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this SendCommandResultCommand.


        :param parameters: The parameters of this SendCommandResultCommand.
        :type parameters: Dict
        """

        self._parameters = parameters

    @property
    def instance_ids(self):
        """Gets the instance_ids of this SendCommandResultCommand.


        :return: The instance_ids of this SendCommandResultCommand.
        :rtype: List
        """
        return self._instance_ids

    @instance_ids.setter
    def instance_ids(self, instance_ids):
        """Sets the instance_ids of this SendCommandResultCommand.


        :param instance_ids: The instance_ids of this SendCommandResultCommand.
        :type instance_ids: List
        """

        self._instance_ids = instance_ids

    @property
    def targets(self):
        """Gets the targets of this SendCommandResultCommand.


        :return: The targets of this SendCommandResultCommand.
        :rtype: List
        """
        return self._targets

    @targets.setter
    def targets(self, targets):
        """Sets the targets of this SendCommandResultCommand.


        :param targets: The targets of this SendCommandResultCommand.
        :type targets: List
        """

        self._targets = targets

    @property
    def requested_date_time(self):
        """Gets the requested_date_time of this SendCommandResultCommand.


        :return: The requested_date_time of this SendCommandResultCommand.
        :rtype: datetime
        """
        return self._requested_date_time

    @requested_date_time.setter
    def requested_date_time(self, requested_date_time):
        """Sets the requested_date_time of this SendCommandResultCommand.


        :param requested_date_time: The requested_date_time of this SendCommandResultCommand.
        :type requested_date_time: datetime
        """

        self._requested_date_time = requested_date_time

    @property
    def status(self):
        """Gets the status of this SendCommandResultCommand.


        :return: The status of this SendCommandResultCommand.
        :rtype: CommandStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this SendCommandResultCommand.


        :param status: The status of this SendCommandResultCommand.
        :type status: CommandStatus
        """

        self._status = status

    @property
    def status_details(self):
        """Gets the status_details of this SendCommandResultCommand.


        :return: The status_details of this SendCommandResultCommand.
        :rtype: str
        """
        return self._status_details

    @status_details.setter
    def status_details(self, status_details):
        """Sets the status_details of this SendCommandResultCommand.


        :param status_details: The status_details of this SendCommandResultCommand.
        :type status_details: str
        """

        self._status_details = status_details

    @property
    def output_s3_region(self):
        """Gets the output_s3_region of this SendCommandResultCommand.


        :return: The output_s3_region of this SendCommandResultCommand.
        :rtype: str
        """
        return self._output_s3_region

    @output_s3_region.setter
    def output_s3_region(self, output_s3_region):
        """Sets the output_s3_region of this SendCommandResultCommand.


        :param output_s3_region: The output_s3_region of this SendCommandResultCommand.
        :type output_s3_region: str
        """

        self._output_s3_region = output_s3_region

    @property
    def output_s3_bucket_name(self):
        """Gets the output_s3_bucket_name of this SendCommandResultCommand.


        :return: The output_s3_bucket_name of this SendCommandResultCommand.
        :rtype: str
        """
        return self._output_s3_bucket_name

    @output_s3_bucket_name.setter
    def output_s3_bucket_name(self, output_s3_bucket_name):
        """Sets the output_s3_bucket_name of this SendCommandResultCommand.


        :param output_s3_bucket_name: The output_s3_bucket_name of this SendCommandResultCommand.
        :type output_s3_bucket_name: str
        """

        self._output_s3_bucket_name = output_s3_bucket_name

    @property
    def output_s3_key_prefix(self):
        """Gets the output_s3_key_prefix of this SendCommandResultCommand.


        :return: The output_s3_key_prefix of this SendCommandResultCommand.
        :rtype: str
        """
        return self._output_s3_key_prefix

    @output_s3_key_prefix.setter
    def output_s3_key_prefix(self, output_s3_key_prefix):
        """Sets the output_s3_key_prefix of this SendCommandResultCommand.


        :param output_s3_key_prefix: The output_s3_key_prefix of this SendCommandResultCommand.
        :type output_s3_key_prefix: str
        """

        self._output_s3_key_prefix = output_s3_key_prefix

    @property
    def max_concurrency(self):
        """Gets the max_concurrency of this SendCommandResultCommand.


        :return: The max_concurrency of this SendCommandResultCommand.
        :rtype: str
        """
        return self._max_concurrency

    @max_concurrency.setter
    def max_concurrency(self, max_concurrency):
        """Sets the max_concurrency of this SendCommandResultCommand.


        :param max_concurrency: The max_concurrency of this SendCommandResultCommand.
        :type max_concurrency: str
        """

        self._max_concurrency = max_concurrency

    @property
    def max_errors(self):
        """Gets the max_errors of this SendCommandResultCommand.


        :return: The max_errors of this SendCommandResultCommand.
        :rtype: str
        """
        return self._max_errors

    @max_errors.setter
    def max_errors(self, max_errors):
        """Sets the max_errors of this SendCommandResultCommand.


        :param max_errors: The max_errors of this SendCommandResultCommand.
        :type max_errors: str
        """

        self._max_errors = max_errors

    @property
    def target_count(self):
        """Gets the target_count of this SendCommandResultCommand.


        :return: The target_count of this SendCommandResultCommand.
        :rtype: int
        """
        return self._target_count

    @target_count.setter
    def target_count(self, target_count):
        """Sets the target_count of this SendCommandResultCommand.


        :param target_count: The target_count of this SendCommandResultCommand.
        :type target_count: int
        """

        self._target_count = target_count

    @property
    def completed_count(self):
        """Gets the completed_count of this SendCommandResultCommand.


        :return: The completed_count of this SendCommandResultCommand.
        :rtype: int
        """
        return self._completed_count

    @completed_count.setter
    def completed_count(self, completed_count):
        """Sets the completed_count of this SendCommandResultCommand.


        :param completed_count: The completed_count of this SendCommandResultCommand.
        :type completed_count: int
        """

        self._completed_count = completed_count

    @property
    def error_count(self):
        """Gets the error_count of this SendCommandResultCommand.


        :return: The error_count of this SendCommandResultCommand.
        :rtype: int
        """
        return self._error_count

    @error_count.setter
    def error_count(self, error_count):
        """Sets the error_count of this SendCommandResultCommand.


        :param error_count: The error_count of this SendCommandResultCommand.
        :type error_count: int
        """

        self._error_count = error_count

    @property
    def delivery_timed_out_count(self):
        """Gets the delivery_timed_out_count of this SendCommandResultCommand.


        :return: The delivery_timed_out_count of this SendCommandResultCommand.
        :rtype: int
        """
        return self._delivery_timed_out_count

    @delivery_timed_out_count.setter
    def delivery_timed_out_count(self, delivery_timed_out_count):
        """Sets the delivery_timed_out_count of this SendCommandResultCommand.


        :param delivery_timed_out_count: The delivery_timed_out_count of this SendCommandResultCommand.
        :type delivery_timed_out_count: int
        """

        self._delivery_timed_out_count = delivery_timed_out_count

    @property
    def service_role(self):
        """Gets the service_role of this SendCommandResultCommand.


        :return: The service_role of this SendCommandResultCommand.
        :rtype: str
        """
        return self._service_role

    @service_role.setter
    def service_role(self, service_role):
        """Sets the service_role of this SendCommandResultCommand.


        :param service_role: The service_role of this SendCommandResultCommand.
        :type service_role: str
        """

        self._service_role = service_role

    @property
    def notification_config(self):
        """Gets the notification_config of this SendCommandResultCommand.


        :return: The notification_config of this SendCommandResultCommand.
        :rtype: CommandNotificationConfig
        """
        return self._notification_config

    @notification_config.setter
    def notification_config(self, notification_config):
        """Sets the notification_config of this SendCommandResultCommand.


        :param notification_config: The notification_config of this SendCommandResultCommand.
        :type notification_config: CommandNotificationConfig
        """

        self._notification_config = notification_config

    @property
    def cloud_watch_output_config(self):
        """Gets the cloud_watch_output_config of this SendCommandResultCommand.


        :return: The cloud_watch_output_config of this SendCommandResultCommand.
        :rtype: CommandCloudWatchOutputConfig
        """
        return self._cloud_watch_output_config

    @cloud_watch_output_config.setter
    def cloud_watch_output_config(self, cloud_watch_output_config):
        """Sets the cloud_watch_output_config of this SendCommandResultCommand.


        :param cloud_watch_output_config: The cloud_watch_output_config of this SendCommandResultCommand.
        :type cloud_watch_output_config: CommandCloudWatchOutputConfig
        """

        self._cloud_watch_output_config = cloud_watch_output_config

    @property
    def timeout_seconds(self):
        """Gets the timeout_seconds of this SendCommandResultCommand.


        :return: The timeout_seconds of this SendCommandResultCommand.
        :rtype: int
        """
        return self._timeout_seconds

    @timeout_seconds.setter
    def timeout_seconds(self, timeout_seconds):
        """Sets the timeout_seconds of this SendCommandResultCommand.


        :param timeout_seconds: The timeout_seconds of this SendCommandResultCommand.
        :type timeout_seconds: int
        """

        self._timeout_seconds = timeout_seconds

    @property
    def alarm_configuration(self):
        """Gets the alarm_configuration of this SendCommandResultCommand.


        :return: The alarm_configuration of this SendCommandResultCommand.
        :rtype: CommandAlarmConfiguration
        """
        return self._alarm_configuration

    @alarm_configuration.setter
    def alarm_configuration(self, alarm_configuration):
        """Sets the alarm_configuration of this SendCommandResultCommand.


        :param alarm_configuration: The alarm_configuration of this SendCommandResultCommand.
        :type alarm_configuration: CommandAlarmConfiguration
        """

        self._alarm_configuration = alarm_configuration

    @property
    def triggered_alarms(self):
        """Gets the triggered_alarms of this SendCommandResultCommand.


        :return: The triggered_alarms of this SendCommandResultCommand.
        :rtype: List
        """
        return self._triggered_alarms

    @triggered_alarms.setter
    def triggered_alarms(self, triggered_alarms):
        """Sets the triggered_alarms of this SendCommandResultCommand.


        :param triggered_alarms: The triggered_alarms of this SendCommandResultCommand.
        :type triggered_alarms: List
        """

        self._triggered_alarms = triggered_alarms
