# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateManagedInstanceRoleRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, instance_id: str=None, iam_role: str=None):
        """UpdateManagedInstanceRoleRequest - a model defined in OpenAPI

        :param instance_id: The instance_id of this UpdateManagedInstanceRoleRequest.
        :param iam_role: The iam_role of this UpdateManagedInstanceRoleRequest.
        """
        self.openapi_types = {
            'instance_id': str,
            'iam_role': str
        }

        self.attribute_map = {
            'instance_id': 'InstanceId',
            'iam_role': 'IamRole'
        }

        self._instance_id = instance_id
        self._iam_role = iam_role

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateManagedInstanceRoleRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateManagedInstanceRoleRequest of this UpdateManagedInstanceRoleRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def instance_id(self):
        """Gets the instance_id of this UpdateManagedInstanceRoleRequest.


        :return: The instance_id of this UpdateManagedInstanceRoleRequest.
        :rtype: str
        """
        return self._instance_id

    @instance_id.setter
    def instance_id(self, instance_id):
        """Sets the instance_id of this UpdateManagedInstanceRoleRequest.


        :param instance_id: The instance_id of this UpdateManagedInstanceRoleRequest.
        :type instance_id: str
        """
        if instance_id is None:
            raise ValueError("Invalid value for `instance_id`, must not be `None`")

        self._instance_id = instance_id

    @property
    def iam_role(self):
        """Gets the iam_role of this UpdateManagedInstanceRoleRequest.


        :return: The iam_role of this UpdateManagedInstanceRoleRequest.
        :rtype: str
        """
        return self._iam_role

    @iam_role.setter
    def iam_role(self, iam_role):
        """Sets the iam_role of this UpdateManagedInstanceRoleRequest.


        :param iam_role: The iam_role of this UpdateManagedInstanceRoleRequest.
        :type iam_role: str
        """
        if iam_role is None:
            raise ValueError("Invalid value for `iam_role`, must not be `None`")

        self._iam_role = iam_role
