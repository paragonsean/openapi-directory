# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProgressCounters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, total_steps: int=None, success_steps: int=None, failed_steps: int=None, cancelled_steps: int=None, timed_out_steps: int=None):
        """ProgressCounters - a model defined in OpenAPI

        :param total_steps: The total_steps of this ProgressCounters.
        :param success_steps: The success_steps of this ProgressCounters.
        :param failed_steps: The failed_steps of this ProgressCounters.
        :param cancelled_steps: The cancelled_steps of this ProgressCounters.
        :param timed_out_steps: The timed_out_steps of this ProgressCounters.
        """
        self.openapi_types = {
            'total_steps': int,
            'success_steps': int,
            'failed_steps': int,
            'cancelled_steps': int,
            'timed_out_steps': int
        }

        self.attribute_map = {
            'total_steps': 'TotalSteps',
            'success_steps': 'SuccessSteps',
            'failed_steps': 'FailedSteps',
            'cancelled_steps': 'CancelledSteps',
            'timed_out_steps': 'TimedOutSteps'
        }

        self._total_steps = total_steps
        self._success_steps = success_steps
        self._failed_steps = failed_steps
        self._cancelled_steps = cancelled_steps
        self._timed_out_steps = timed_out_steps

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProgressCounters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProgressCounters of this ProgressCounters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def total_steps(self):
        """Gets the total_steps of this ProgressCounters.


        :return: The total_steps of this ProgressCounters.
        :rtype: int
        """
        return self._total_steps

    @total_steps.setter
    def total_steps(self, total_steps):
        """Sets the total_steps of this ProgressCounters.


        :param total_steps: The total_steps of this ProgressCounters.
        :type total_steps: int
        """

        self._total_steps = total_steps

    @property
    def success_steps(self):
        """Gets the success_steps of this ProgressCounters.


        :return: The success_steps of this ProgressCounters.
        :rtype: int
        """
        return self._success_steps

    @success_steps.setter
    def success_steps(self, success_steps):
        """Sets the success_steps of this ProgressCounters.


        :param success_steps: The success_steps of this ProgressCounters.
        :type success_steps: int
        """

        self._success_steps = success_steps

    @property
    def failed_steps(self):
        """Gets the failed_steps of this ProgressCounters.


        :return: The failed_steps of this ProgressCounters.
        :rtype: int
        """
        return self._failed_steps

    @failed_steps.setter
    def failed_steps(self, failed_steps):
        """Sets the failed_steps of this ProgressCounters.


        :param failed_steps: The failed_steps of this ProgressCounters.
        :type failed_steps: int
        """

        self._failed_steps = failed_steps

    @property
    def cancelled_steps(self):
        """Gets the cancelled_steps of this ProgressCounters.


        :return: The cancelled_steps of this ProgressCounters.
        :rtype: int
        """
        return self._cancelled_steps

    @cancelled_steps.setter
    def cancelled_steps(self, cancelled_steps):
        """Sets the cancelled_steps of this ProgressCounters.


        :param cancelled_steps: The cancelled_steps of this ProgressCounters.
        :type cancelled_steps: int
        """

        self._cancelled_steps = cancelled_steps

    @property
    def timed_out_steps(self):
        """Gets the timed_out_steps of this ProgressCounters.


        :return: The timed_out_steps of this ProgressCounters.
        :rtype: int
        """
        return self._timed_out_steps

    @timed_out_steps.setter
    def timed_out_steps(self, timed_out_steps):
        """Sets the timed_out_steps of this ProgressCounters.


        :param timed_out_steps: The timed_out_steps of this ProgressCounters.
        :type timed_out_steps: int
        """

        self._timed_out_steps = timed_out_steps
