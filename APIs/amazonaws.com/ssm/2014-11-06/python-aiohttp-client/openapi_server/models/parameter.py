# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.parameter_type import ParameterType
from openapi_server import util


class Parameter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, type: ParameterType=None, value: str=None, version: int=None, selector: str=None, source_result: str=None, last_modified_date: datetime=None, arn: str=None, data_type: str=None):
        """Parameter - a model defined in OpenAPI

        :param name: The name of this Parameter.
        :param type: The type of this Parameter.
        :param value: The value of this Parameter.
        :param version: The version of this Parameter.
        :param selector: The selector of this Parameter.
        :param source_result: The source_result of this Parameter.
        :param last_modified_date: The last_modified_date of this Parameter.
        :param arn: The arn of this Parameter.
        :param data_type: The data_type of this Parameter.
        """
        self.openapi_types = {
            'name': str,
            'type': ParameterType,
            'value': str,
            'version': int,
            'selector': str,
            'source_result': str,
            'last_modified_date': datetime,
            'arn': str,
            'data_type': str
        }

        self.attribute_map = {
            'name': 'Name',
            'type': 'Type',
            'value': 'Value',
            'version': 'Version',
            'selector': 'Selector',
            'source_result': 'SourceResult',
            'last_modified_date': 'LastModifiedDate',
            'arn': 'ARN',
            'data_type': 'DataType'
        }

        self._name = name
        self._type = type
        self._value = value
        self._version = version
        self._selector = selector
        self._source_result = source_result
        self._last_modified_date = last_modified_date
        self._arn = arn
        self._data_type = data_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Parameter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Parameter of this Parameter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this Parameter.


        :return: The name of this Parameter.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Parameter.


        :param name: The name of this Parameter.
        :type name: str
        """

        self._name = name

    @property
    def type(self):
        """Gets the type of this Parameter.


        :return: The type of this Parameter.
        :rtype: ParameterType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Parameter.


        :param type: The type of this Parameter.
        :type type: ParameterType
        """

        self._type = type

    @property
    def value(self):
        """Gets the value of this Parameter.


        :return: The value of this Parameter.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this Parameter.


        :param value: The value of this Parameter.
        :type value: str
        """

        self._value = value

    @property
    def version(self):
        """Gets the version of this Parameter.


        :return: The version of this Parameter.
        :rtype: int
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this Parameter.


        :param version: The version of this Parameter.
        :type version: int
        """

        self._version = version

    @property
    def selector(self):
        """Gets the selector of this Parameter.


        :return: The selector of this Parameter.
        :rtype: str
        """
        return self._selector

    @selector.setter
    def selector(self, selector):
        """Sets the selector of this Parameter.


        :param selector: The selector of this Parameter.
        :type selector: str
        """

        self._selector = selector

    @property
    def source_result(self):
        """Gets the source_result of this Parameter.


        :return: The source_result of this Parameter.
        :rtype: str
        """
        return self._source_result

    @source_result.setter
    def source_result(self, source_result):
        """Sets the source_result of this Parameter.


        :param source_result: The source_result of this Parameter.
        :type source_result: str
        """

        self._source_result = source_result

    @property
    def last_modified_date(self):
        """Gets the last_modified_date of this Parameter.


        :return: The last_modified_date of this Parameter.
        :rtype: datetime
        """
        return self._last_modified_date

    @last_modified_date.setter
    def last_modified_date(self, last_modified_date):
        """Sets the last_modified_date of this Parameter.


        :param last_modified_date: The last_modified_date of this Parameter.
        :type last_modified_date: datetime
        """

        self._last_modified_date = last_modified_date

    @property
    def arn(self):
        """Gets the arn of this Parameter.


        :return: The arn of this Parameter.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this Parameter.


        :param arn: The arn of this Parameter.
        :type arn: str
        """

        self._arn = arn

    @property
    def data_type(self):
        """Gets the data_type of this Parameter.


        :return: The data_type of this Parameter.
        :rtype: str
        """
        return self._data_type

    @data_type.setter
    def data_type(self, data_type):
        """Sets the data_type of this Parameter.


        :param data_type: The data_type of this Parameter.
        :type data_type: str
        """

        self._data_type = data_type
