# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ResumeSessionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, session_id: str=None):
        """ResumeSessionRequest - a model defined in OpenAPI

        :param session_id: The session_id of this ResumeSessionRequest.
        """
        self.openapi_types = {
            'session_id': str
        }

        self.attribute_map = {
            'session_id': 'SessionId'
        }

        self._session_id = session_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResumeSessionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResumeSessionRequest of this ResumeSessionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def session_id(self):
        """Gets the session_id of this ResumeSessionRequest.


        :return: The session_id of this ResumeSessionRequest.
        :rtype: str
        """
        return self._session_id

    @session_id.setter
    def session_id(self, session_id):
        """Sets the session_id of this ResumeSessionRequest.


        :param session_id: The session_id of this ResumeSessionRequest.
        :type session_id: str
        """
        if session_id is None:
            raise ValueError("Invalid value for `session_id`, must not be `None`")

        self._session_id = session_id
