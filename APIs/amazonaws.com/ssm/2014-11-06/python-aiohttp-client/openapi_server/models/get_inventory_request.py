# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetInventoryRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, filters: List=None, aggregators: List=None, result_attributes: List=None, next_token: str=None, max_results: int=None):
        """GetInventoryRequest - a model defined in OpenAPI

        :param filters: The filters of this GetInventoryRequest.
        :param aggregators: The aggregators of this GetInventoryRequest.
        :param result_attributes: The result_attributes of this GetInventoryRequest.
        :param next_token: The next_token of this GetInventoryRequest.
        :param max_results: The max_results of this GetInventoryRequest.
        """
        self.openapi_types = {
            'filters': List,
            'aggregators': List,
            'result_attributes': List,
            'next_token': str,
            'max_results': int
        }

        self.attribute_map = {
            'filters': 'Filters',
            'aggregators': 'Aggregators',
            'result_attributes': 'ResultAttributes',
            'next_token': 'NextToken',
            'max_results': 'MaxResults'
        }

        self._filters = filters
        self._aggregators = aggregators
        self._result_attributes = result_attributes
        self._next_token = next_token
        self._max_results = max_results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetInventoryRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetInventoryRequest of this GetInventoryRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def filters(self):
        """Gets the filters of this GetInventoryRequest.


        :return: The filters of this GetInventoryRequest.
        :rtype: List
        """
        return self._filters

    @filters.setter
    def filters(self, filters):
        """Sets the filters of this GetInventoryRequest.


        :param filters: The filters of this GetInventoryRequest.
        :type filters: List
        """

        self._filters = filters

    @property
    def aggregators(self):
        """Gets the aggregators of this GetInventoryRequest.


        :return: The aggregators of this GetInventoryRequest.
        :rtype: List
        """
        return self._aggregators

    @aggregators.setter
    def aggregators(self, aggregators):
        """Sets the aggregators of this GetInventoryRequest.


        :param aggregators: The aggregators of this GetInventoryRequest.
        :type aggregators: List
        """

        self._aggregators = aggregators

    @property
    def result_attributes(self):
        """Gets the result_attributes of this GetInventoryRequest.


        :return: The result_attributes of this GetInventoryRequest.
        :rtype: List
        """
        return self._result_attributes

    @result_attributes.setter
    def result_attributes(self, result_attributes):
        """Sets the result_attributes of this GetInventoryRequest.


        :param result_attributes: The result_attributes of this GetInventoryRequest.
        :type result_attributes: List
        """

        self._result_attributes = result_attributes

    @property
    def next_token(self):
        """Gets the next_token of this GetInventoryRequest.


        :return: The next_token of this GetInventoryRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this GetInventoryRequest.


        :param next_token: The next_token of this GetInventoryRequest.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def max_results(self):
        """Gets the max_results of this GetInventoryRequest.


        :return: The max_results of this GetInventoryRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this GetInventoryRequest.


        :param max_results: The max_results of this GetInventoryRequest.
        :type max_results: int
        """

        self._max_results = max_results
