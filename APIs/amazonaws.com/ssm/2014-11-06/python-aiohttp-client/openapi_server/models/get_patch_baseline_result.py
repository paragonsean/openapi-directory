# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_patch_baseline_request_approval_rules import CreatePatchBaselineRequestApprovalRules
from openapi_server.models.get_patch_baseline_result_global_filters import GetPatchBaselineResultGlobalFilters
from openapi_server.models.operating_system import OperatingSystem
from openapi_server.models.patch_action import PatchAction
from openapi_server.models.patch_compliance_level import PatchComplianceLevel
from openapi_server import util


class GetPatchBaselineResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, baseline_id: str=None, name: str=None, operating_system: OperatingSystem=None, global_filters: GetPatchBaselineResultGlobalFilters=None, approval_rules: CreatePatchBaselineRequestApprovalRules=None, approved_patches: List=None, approved_patches_compliance_level: PatchComplianceLevel=None, approved_patches_enable_non_security: bool=None, rejected_patches: List=None, rejected_patches_action: PatchAction=None, patch_groups: List=None, created_date: datetime=None, modified_date: datetime=None, description: str=None, sources: List=None):
        """GetPatchBaselineResult - a model defined in OpenAPI

        :param baseline_id: The baseline_id of this GetPatchBaselineResult.
        :param name: The name of this GetPatchBaselineResult.
        :param operating_system: The operating_system of this GetPatchBaselineResult.
        :param global_filters: The global_filters of this GetPatchBaselineResult.
        :param approval_rules: The approval_rules of this GetPatchBaselineResult.
        :param approved_patches: The approved_patches of this GetPatchBaselineResult.
        :param approved_patches_compliance_level: The approved_patches_compliance_level of this GetPatchBaselineResult.
        :param approved_patches_enable_non_security: The approved_patches_enable_non_security of this GetPatchBaselineResult.
        :param rejected_patches: The rejected_patches of this GetPatchBaselineResult.
        :param rejected_patches_action: The rejected_patches_action of this GetPatchBaselineResult.
        :param patch_groups: The patch_groups of this GetPatchBaselineResult.
        :param created_date: The created_date of this GetPatchBaselineResult.
        :param modified_date: The modified_date of this GetPatchBaselineResult.
        :param description: The description of this GetPatchBaselineResult.
        :param sources: The sources of this GetPatchBaselineResult.
        """
        self.openapi_types = {
            'baseline_id': str,
            'name': str,
            'operating_system': OperatingSystem,
            'global_filters': GetPatchBaselineResultGlobalFilters,
            'approval_rules': CreatePatchBaselineRequestApprovalRules,
            'approved_patches': List,
            'approved_patches_compliance_level': PatchComplianceLevel,
            'approved_patches_enable_non_security': bool,
            'rejected_patches': List,
            'rejected_patches_action': PatchAction,
            'patch_groups': List,
            'created_date': datetime,
            'modified_date': datetime,
            'description': str,
            'sources': List
        }

        self.attribute_map = {
            'baseline_id': 'BaselineId',
            'name': 'Name',
            'operating_system': 'OperatingSystem',
            'global_filters': 'GlobalFilters',
            'approval_rules': 'ApprovalRules',
            'approved_patches': 'ApprovedPatches',
            'approved_patches_compliance_level': 'ApprovedPatchesComplianceLevel',
            'approved_patches_enable_non_security': 'ApprovedPatchesEnableNonSecurity',
            'rejected_patches': 'RejectedPatches',
            'rejected_patches_action': 'RejectedPatchesAction',
            'patch_groups': 'PatchGroups',
            'created_date': 'CreatedDate',
            'modified_date': 'ModifiedDate',
            'description': 'Description',
            'sources': 'Sources'
        }

        self._baseline_id = baseline_id
        self._name = name
        self._operating_system = operating_system
        self._global_filters = global_filters
        self._approval_rules = approval_rules
        self._approved_patches = approved_patches
        self._approved_patches_compliance_level = approved_patches_compliance_level
        self._approved_patches_enable_non_security = approved_patches_enable_non_security
        self._rejected_patches = rejected_patches
        self._rejected_patches_action = rejected_patches_action
        self._patch_groups = patch_groups
        self._created_date = created_date
        self._modified_date = modified_date
        self._description = description
        self._sources = sources

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetPatchBaselineResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetPatchBaselineResult of this GetPatchBaselineResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def baseline_id(self):
        """Gets the baseline_id of this GetPatchBaselineResult.


        :return: The baseline_id of this GetPatchBaselineResult.
        :rtype: str
        """
        return self._baseline_id

    @baseline_id.setter
    def baseline_id(self, baseline_id):
        """Sets the baseline_id of this GetPatchBaselineResult.


        :param baseline_id: The baseline_id of this GetPatchBaselineResult.
        :type baseline_id: str
        """

        self._baseline_id = baseline_id

    @property
    def name(self):
        """Gets the name of this GetPatchBaselineResult.


        :return: The name of this GetPatchBaselineResult.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetPatchBaselineResult.


        :param name: The name of this GetPatchBaselineResult.
        :type name: str
        """

        self._name = name

    @property
    def operating_system(self):
        """Gets the operating_system of this GetPatchBaselineResult.


        :return: The operating_system of this GetPatchBaselineResult.
        :rtype: OperatingSystem
        """
        return self._operating_system

    @operating_system.setter
    def operating_system(self, operating_system):
        """Sets the operating_system of this GetPatchBaselineResult.


        :param operating_system: The operating_system of this GetPatchBaselineResult.
        :type operating_system: OperatingSystem
        """

        self._operating_system = operating_system

    @property
    def global_filters(self):
        """Gets the global_filters of this GetPatchBaselineResult.


        :return: The global_filters of this GetPatchBaselineResult.
        :rtype: GetPatchBaselineResultGlobalFilters
        """
        return self._global_filters

    @global_filters.setter
    def global_filters(self, global_filters):
        """Sets the global_filters of this GetPatchBaselineResult.


        :param global_filters: The global_filters of this GetPatchBaselineResult.
        :type global_filters: GetPatchBaselineResultGlobalFilters
        """

        self._global_filters = global_filters

    @property
    def approval_rules(self):
        """Gets the approval_rules of this GetPatchBaselineResult.


        :return: The approval_rules of this GetPatchBaselineResult.
        :rtype: CreatePatchBaselineRequestApprovalRules
        """
        return self._approval_rules

    @approval_rules.setter
    def approval_rules(self, approval_rules):
        """Sets the approval_rules of this GetPatchBaselineResult.


        :param approval_rules: The approval_rules of this GetPatchBaselineResult.
        :type approval_rules: CreatePatchBaselineRequestApprovalRules
        """

        self._approval_rules = approval_rules

    @property
    def approved_patches(self):
        """Gets the approved_patches of this GetPatchBaselineResult.


        :return: The approved_patches of this GetPatchBaselineResult.
        :rtype: List
        """
        return self._approved_patches

    @approved_patches.setter
    def approved_patches(self, approved_patches):
        """Sets the approved_patches of this GetPatchBaselineResult.


        :param approved_patches: The approved_patches of this GetPatchBaselineResult.
        :type approved_patches: List
        """

        self._approved_patches = approved_patches

    @property
    def approved_patches_compliance_level(self):
        """Gets the approved_patches_compliance_level of this GetPatchBaselineResult.


        :return: The approved_patches_compliance_level of this GetPatchBaselineResult.
        :rtype: PatchComplianceLevel
        """
        return self._approved_patches_compliance_level

    @approved_patches_compliance_level.setter
    def approved_patches_compliance_level(self, approved_patches_compliance_level):
        """Sets the approved_patches_compliance_level of this GetPatchBaselineResult.


        :param approved_patches_compliance_level: The approved_patches_compliance_level of this GetPatchBaselineResult.
        :type approved_patches_compliance_level: PatchComplianceLevel
        """

        self._approved_patches_compliance_level = approved_patches_compliance_level

    @property
    def approved_patches_enable_non_security(self):
        """Gets the approved_patches_enable_non_security of this GetPatchBaselineResult.


        :return: The approved_patches_enable_non_security of this GetPatchBaselineResult.
        :rtype: bool
        """
        return self._approved_patches_enable_non_security

    @approved_patches_enable_non_security.setter
    def approved_patches_enable_non_security(self, approved_patches_enable_non_security):
        """Sets the approved_patches_enable_non_security of this GetPatchBaselineResult.


        :param approved_patches_enable_non_security: The approved_patches_enable_non_security of this GetPatchBaselineResult.
        :type approved_patches_enable_non_security: bool
        """

        self._approved_patches_enable_non_security = approved_patches_enable_non_security

    @property
    def rejected_patches(self):
        """Gets the rejected_patches of this GetPatchBaselineResult.


        :return: The rejected_patches of this GetPatchBaselineResult.
        :rtype: List
        """
        return self._rejected_patches

    @rejected_patches.setter
    def rejected_patches(self, rejected_patches):
        """Sets the rejected_patches of this GetPatchBaselineResult.


        :param rejected_patches: The rejected_patches of this GetPatchBaselineResult.
        :type rejected_patches: List
        """

        self._rejected_patches = rejected_patches

    @property
    def rejected_patches_action(self):
        """Gets the rejected_patches_action of this GetPatchBaselineResult.


        :return: The rejected_patches_action of this GetPatchBaselineResult.
        :rtype: PatchAction
        """
        return self._rejected_patches_action

    @rejected_patches_action.setter
    def rejected_patches_action(self, rejected_patches_action):
        """Sets the rejected_patches_action of this GetPatchBaselineResult.


        :param rejected_patches_action: The rejected_patches_action of this GetPatchBaselineResult.
        :type rejected_patches_action: PatchAction
        """

        self._rejected_patches_action = rejected_patches_action

    @property
    def patch_groups(self):
        """Gets the patch_groups of this GetPatchBaselineResult.


        :return: The patch_groups of this GetPatchBaselineResult.
        :rtype: List
        """
        return self._patch_groups

    @patch_groups.setter
    def patch_groups(self, patch_groups):
        """Sets the patch_groups of this GetPatchBaselineResult.


        :param patch_groups: The patch_groups of this GetPatchBaselineResult.
        :type patch_groups: List
        """

        self._patch_groups = patch_groups

    @property
    def created_date(self):
        """Gets the created_date of this GetPatchBaselineResult.


        :return: The created_date of this GetPatchBaselineResult.
        :rtype: datetime
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this GetPatchBaselineResult.


        :param created_date: The created_date of this GetPatchBaselineResult.
        :type created_date: datetime
        """

        self._created_date = created_date

    @property
    def modified_date(self):
        """Gets the modified_date of this GetPatchBaselineResult.


        :return: The modified_date of this GetPatchBaselineResult.
        :rtype: datetime
        """
        return self._modified_date

    @modified_date.setter
    def modified_date(self, modified_date):
        """Sets the modified_date of this GetPatchBaselineResult.


        :param modified_date: The modified_date of this GetPatchBaselineResult.
        :type modified_date: datetime
        """

        self._modified_date = modified_date

    @property
    def description(self):
        """Gets the description of this GetPatchBaselineResult.


        :return: The description of this GetPatchBaselineResult.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GetPatchBaselineResult.


        :param description: The description of this GetPatchBaselineResult.
        :type description: str
        """

        self._description = description

    @property
    def sources(self):
        """Gets the sources of this GetPatchBaselineResult.


        :return: The sources of this GetPatchBaselineResult.
        :rtype: List
        """
        return self._sources

    @sources.setter
    def sources(self, sources):
        """Sets the sources of this GetPatchBaselineResult.


        :param sources: The sources of this GetPatchBaselineResult.
        :type sources: List
        """

        self._sources = sources
