# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.command_cloud_watch_output_config import CommandCloudWatchOutputConfig
from openapi_server.models.command_invocation_notification_config import CommandInvocationNotificationConfig
from openapi_server.models.command_invocation_status import CommandInvocationStatus
from openapi_server import util


class CommandInvocation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, command_id: str=None, instance_id: str=None, instance_name: str=None, comment: str=None, document_name: str=None, document_version: str=None, requested_date_time: datetime=None, status: CommandInvocationStatus=None, status_details: str=None, trace_output: str=None, standard_output_url: str=None, standard_error_url: str=None, command_plugins: List=None, service_role: str=None, notification_config: CommandInvocationNotificationConfig=None, cloud_watch_output_config: CommandCloudWatchOutputConfig=None):
        """CommandInvocation - a model defined in OpenAPI

        :param command_id: The command_id of this CommandInvocation.
        :param instance_id: The instance_id of this CommandInvocation.
        :param instance_name: The instance_name of this CommandInvocation.
        :param comment: The comment of this CommandInvocation.
        :param document_name: The document_name of this CommandInvocation.
        :param document_version: The document_version of this CommandInvocation.
        :param requested_date_time: The requested_date_time of this CommandInvocation.
        :param status: The status of this CommandInvocation.
        :param status_details: The status_details of this CommandInvocation.
        :param trace_output: The trace_output of this CommandInvocation.
        :param standard_output_url: The standard_output_url of this CommandInvocation.
        :param standard_error_url: The standard_error_url of this CommandInvocation.
        :param command_plugins: The command_plugins of this CommandInvocation.
        :param service_role: The service_role of this CommandInvocation.
        :param notification_config: The notification_config of this CommandInvocation.
        :param cloud_watch_output_config: The cloud_watch_output_config of this CommandInvocation.
        """
        self.openapi_types = {
            'command_id': str,
            'instance_id': str,
            'instance_name': str,
            'comment': str,
            'document_name': str,
            'document_version': str,
            'requested_date_time': datetime,
            'status': CommandInvocationStatus,
            'status_details': str,
            'trace_output': str,
            'standard_output_url': str,
            'standard_error_url': str,
            'command_plugins': List,
            'service_role': str,
            'notification_config': CommandInvocationNotificationConfig,
            'cloud_watch_output_config': CommandCloudWatchOutputConfig
        }

        self.attribute_map = {
            'command_id': 'CommandId',
            'instance_id': 'InstanceId',
            'instance_name': 'InstanceName',
            'comment': 'Comment',
            'document_name': 'DocumentName',
            'document_version': 'DocumentVersion',
            'requested_date_time': 'RequestedDateTime',
            'status': 'Status',
            'status_details': 'StatusDetails',
            'trace_output': 'TraceOutput',
            'standard_output_url': 'StandardOutputUrl',
            'standard_error_url': 'StandardErrorUrl',
            'command_plugins': 'CommandPlugins',
            'service_role': 'ServiceRole',
            'notification_config': 'NotificationConfig',
            'cloud_watch_output_config': 'CloudWatchOutputConfig'
        }

        self._command_id = command_id
        self._instance_id = instance_id
        self._instance_name = instance_name
        self._comment = comment
        self._document_name = document_name
        self._document_version = document_version
        self._requested_date_time = requested_date_time
        self._status = status
        self._status_details = status_details
        self._trace_output = trace_output
        self._standard_output_url = standard_output_url
        self._standard_error_url = standard_error_url
        self._command_plugins = command_plugins
        self._service_role = service_role
        self._notification_config = notification_config
        self._cloud_watch_output_config = cloud_watch_output_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CommandInvocation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CommandInvocation of this CommandInvocation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def command_id(self):
        """Gets the command_id of this CommandInvocation.


        :return: The command_id of this CommandInvocation.
        :rtype: str
        """
        return self._command_id

    @command_id.setter
    def command_id(self, command_id):
        """Sets the command_id of this CommandInvocation.


        :param command_id: The command_id of this CommandInvocation.
        :type command_id: str
        """

        self._command_id = command_id

    @property
    def instance_id(self):
        """Gets the instance_id of this CommandInvocation.


        :return: The instance_id of this CommandInvocation.
        :rtype: str
        """
        return self._instance_id

    @instance_id.setter
    def instance_id(self, instance_id):
        """Sets the instance_id of this CommandInvocation.


        :param instance_id: The instance_id of this CommandInvocation.
        :type instance_id: str
        """

        self._instance_id = instance_id

    @property
    def instance_name(self):
        """Gets the instance_name of this CommandInvocation.


        :return: The instance_name of this CommandInvocation.
        :rtype: str
        """
        return self._instance_name

    @instance_name.setter
    def instance_name(self, instance_name):
        """Sets the instance_name of this CommandInvocation.


        :param instance_name: The instance_name of this CommandInvocation.
        :type instance_name: str
        """

        self._instance_name = instance_name

    @property
    def comment(self):
        """Gets the comment of this CommandInvocation.


        :return: The comment of this CommandInvocation.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this CommandInvocation.


        :param comment: The comment of this CommandInvocation.
        :type comment: str
        """

        self._comment = comment

    @property
    def document_name(self):
        """Gets the document_name of this CommandInvocation.


        :return: The document_name of this CommandInvocation.
        :rtype: str
        """
        return self._document_name

    @document_name.setter
    def document_name(self, document_name):
        """Sets the document_name of this CommandInvocation.


        :param document_name: The document_name of this CommandInvocation.
        :type document_name: str
        """

        self._document_name = document_name

    @property
    def document_version(self):
        """Gets the document_version of this CommandInvocation.


        :return: The document_version of this CommandInvocation.
        :rtype: str
        """
        return self._document_version

    @document_version.setter
    def document_version(self, document_version):
        """Sets the document_version of this CommandInvocation.


        :param document_version: The document_version of this CommandInvocation.
        :type document_version: str
        """

        self._document_version = document_version

    @property
    def requested_date_time(self):
        """Gets the requested_date_time of this CommandInvocation.


        :return: The requested_date_time of this CommandInvocation.
        :rtype: datetime
        """
        return self._requested_date_time

    @requested_date_time.setter
    def requested_date_time(self, requested_date_time):
        """Sets the requested_date_time of this CommandInvocation.


        :param requested_date_time: The requested_date_time of this CommandInvocation.
        :type requested_date_time: datetime
        """

        self._requested_date_time = requested_date_time

    @property
    def status(self):
        """Gets the status of this CommandInvocation.


        :return: The status of this CommandInvocation.
        :rtype: CommandInvocationStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this CommandInvocation.


        :param status: The status of this CommandInvocation.
        :type status: CommandInvocationStatus
        """

        self._status = status

    @property
    def status_details(self):
        """Gets the status_details of this CommandInvocation.


        :return: The status_details of this CommandInvocation.
        :rtype: str
        """
        return self._status_details

    @status_details.setter
    def status_details(self, status_details):
        """Sets the status_details of this CommandInvocation.


        :param status_details: The status_details of this CommandInvocation.
        :type status_details: str
        """

        self._status_details = status_details

    @property
    def trace_output(self):
        """Gets the trace_output of this CommandInvocation.


        :return: The trace_output of this CommandInvocation.
        :rtype: str
        """
        return self._trace_output

    @trace_output.setter
    def trace_output(self, trace_output):
        """Sets the trace_output of this CommandInvocation.


        :param trace_output: The trace_output of this CommandInvocation.
        :type trace_output: str
        """

        self._trace_output = trace_output

    @property
    def standard_output_url(self):
        """Gets the standard_output_url of this CommandInvocation.


        :return: The standard_output_url of this CommandInvocation.
        :rtype: str
        """
        return self._standard_output_url

    @standard_output_url.setter
    def standard_output_url(self, standard_output_url):
        """Sets the standard_output_url of this CommandInvocation.


        :param standard_output_url: The standard_output_url of this CommandInvocation.
        :type standard_output_url: str
        """

        self._standard_output_url = standard_output_url

    @property
    def standard_error_url(self):
        """Gets the standard_error_url of this CommandInvocation.


        :return: The standard_error_url of this CommandInvocation.
        :rtype: str
        """
        return self._standard_error_url

    @standard_error_url.setter
    def standard_error_url(self, standard_error_url):
        """Sets the standard_error_url of this CommandInvocation.


        :param standard_error_url: The standard_error_url of this CommandInvocation.
        :type standard_error_url: str
        """

        self._standard_error_url = standard_error_url

    @property
    def command_plugins(self):
        """Gets the command_plugins of this CommandInvocation.


        :return: The command_plugins of this CommandInvocation.
        :rtype: List
        """
        return self._command_plugins

    @command_plugins.setter
    def command_plugins(self, command_plugins):
        """Sets the command_plugins of this CommandInvocation.


        :param command_plugins: The command_plugins of this CommandInvocation.
        :type command_plugins: List
        """

        self._command_plugins = command_plugins

    @property
    def service_role(self):
        """Gets the service_role of this CommandInvocation.


        :return: The service_role of this CommandInvocation.
        :rtype: str
        """
        return self._service_role

    @service_role.setter
    def service_role(self, service_role):
        """Sets the service_role of this CommandInvocation.


        :param service_role: The service_role of this CommandInvocation.
        :type service_role: str
        """

        self._service_role = service_role

    @property
    def notification_config(self):
        """Gets the notification_config of this CommandInvocation.


        :return: The notification_config of this CommandInvocation.
        :rtype: CommandInvocationNotificationConfig
        """
        return self._notification_config

    @notification_config.setter
    def notification_config(self, notification_config):
        """Sets the notification_config of this CommandInvocation.


        :param notification_config: The notification_config of this CommandInvocation.
        :type notification_config: CommandInvocationNotificationConfig
        """

        self._notification_config = notification_config

    @property
    def cloud_watch_output_config(self):
        """Gets the cloud_watch_output_config of this CommandInvocation.


        :return: The cloud_watch_output_config of this CommandInvocation.
        :rtype: CommandCloudWatchOutputConfig
        """
        return self._cloud_watch_output_config

    @cloud_watch_output_config.setter
    def cloud_watch_output_config(self, cloud_watch_output_config):
        """Sets the cloud_watch_output_config of this CommandInvocation.


        :param cloud_watch_output_config: The cloud_watch_output_config of this CommandInvocation.
        :type cloud_watch_output_config: CommandCloudWatchOutputConfig
        """

        self._cloud_watch_output_config = cloud_watch_output_config
