# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InstanceInformationStringFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key: str=None, values: List=None):
        """InstanceInformationStringFilter - a model defined in OpenAPI

        :param key: The key of this InstanceInformationStringFilter.
        :param values: The values of this InstanceInformationStringFilter.
        """
        self.openapi_types = {
            'key': str,
            'values': List
        }

        self.attribute_map = {
            'key': 'Key',
            'values': 'Values'
        }

        self._key = key
        self._values = values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InstanceInformationStringFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InstanceInformationStringFilter of this InstanceInformationStringFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key(self):
        """Gets the key of this InstanceInformationStringFilter.


        :return: The key of this InstanceInformationStringFilter.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this InstanceInformationStringFilter.


        :param key: The key of this InstanceInformationStringFilter.
        :type key: str
        """
        if key is None:
            raise ValueError("Invalid value for `key`, must not be `None`")

        self._key = key

    @property
    def values(self):
        """Gets the values of this InstanceInformationStringFilter.


        :return: The values of this InstanceInformationStringFilter.
        :rtype: List
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this InstanceInformationStringFilter.


        :param values: The values of this InstanceInformationStringFilter.
        :type values: List
        """
        if values is None:
            raise ValueError("Invalid value for `values`, must not be `None`")

        self._values = values
