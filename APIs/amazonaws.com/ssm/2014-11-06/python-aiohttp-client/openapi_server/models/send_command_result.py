# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.send_command_result_command import SendCommandResultCommand
from openapi_server import util


class SendCommandResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, command: SendCommandResultCommand=None):
        """SendCommandResult - a model defined in OpenAPI

        :param command: The command of this SendCommandResult.
        """
        self.openapi_types = {
            'command': SendCommandResultCommand
        }

        self.attribute_map = {
            'command': 'Command'
        }

        self._command = command

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SendCommandResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SendCommandResult of this SendCommandResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def command(self):
        """Gets the command of this SendCommandResult.


        :return: The command of this SendCommandResult.
        :rtype: SendCommandResultCommand
        """
        return self._command

    @command.setter
    def command(self, command):
        """Sets the command of this SendCommandResult.


        :param command: The command of this SendCommandResult.
        :type command: SendCommandResultCommand
        """

        self._command = command
