# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_automation_execution_result_automation_execution import GetAutomationExecutionResultAutomationExecution
from openapi_server import util


class GetAutomationExecutionResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, automation_execution: GetAutomationExecutionResultAutomationExecution=None):
        """GetAutomationExecutionResult - a model defined in OpenAPI

        :param automation_execution: The automation_execution of this GetAutomationExecutionResult.
        """
        self.openapi_types = {
            'automation_execution': GetAutomationExecutionResultAutomationExecution
        }

        self.attribute_map = {
            'automation_execution': 'AutomationExecution'
        }

        self._automation_execution = automation_execution

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetAutomationExecutionResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetAutomationExecutionResult of this GetAutomationExecutionResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def automation_execution(self):
        """Gets the automation_execution of this GetAutomationExecutionResult.


        :return: The automation_execution of this GetAutomationExecutionResult.
        :rtype: GetAutomationExecutionResultAutomationExecution
        """
        return self._automation_execution

    @automation_execution.setter
    def automation_execution(self, automation_execution):
        """Sets the automation_execution of this GetAutomationExecutionResult.


        :param automation_execution: The automation_execution of this GetAutomationExecutionResult.
        :type automation_execution: GetAutomationExecutionResultAutomationExecution
        """

        self._automation_execution = automation_execution
