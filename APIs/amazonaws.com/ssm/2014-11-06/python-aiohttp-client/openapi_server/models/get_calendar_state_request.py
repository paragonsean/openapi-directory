# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetCalendarStateRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, calendar_names: List=None, at_time: str=None):
        """GetCalendarStateRequest - a model defined in OpenAPI

        :param calendar_names: The calendar_names of this GetCalendarStateRequest.
        :param at_time: The at_time of this GetCalendarStateRequest.
        """
        self.openapi_types = {
            'calendar_names': List,
            'at_time': str
        }

        self.attribute_map = {
            'calendar_names': 'CalendarNames',
            'at_time': 'AtTime'
        }

        self._calendar_names = calendar_names
        self._at_time = at_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetCalendarStateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetCalendarStateRequest of this GetCalendarStateRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def calendar_names(self):
        """Gets the calendar_names of this GetCalendarStateRequest.


        :return: The calendar_names of this GetCalendarStateRequest.
        :rtype: List
        """
        return self._calendar_names

    @calendar_names.setter
    def calendar_names(self, calendar_names):
        """Sets the calendar_names of this GetCalendarStateRequest.


        :param calendar_names: The calendar_names of this GetCalendarStateRequest.
        :type calendar_names: List
        """
        if calendar_names is None:
            raise ValueError("Invalid value for `calendar_names`, must not be `None`")

        self._calendar_names = calendar_names

    @property
    def at_time(self):
        """Gets the at_time of this GetCalendarStateRequest.


        :return: The at_time of this GetCalendarStateRequest.
        :rtype: str
        """
        return self._at_time

    @at_time.setter
    def at_time(self, at_time):
        """Sets the at_time of this GetCalendarStateRequest.


        :param at_time: The at_time of this GetCalendarStateRequest.
        :type at_time: str
        """

        self._at_time = at_time
