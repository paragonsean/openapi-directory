# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.document_permission_type import DocumentPermissionType
from openapi_server import util


class ModifyDocumentPermissionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, permission_type: DocumentPermissionType=None, account_ids_to_add: List=None, account_ids_to_remove: List=None, shared_document_version: str=None):
        """ModifyDocumentPermissionRequest - a model defined in OpenAPI

        :param name: The name of this ModifyDocumentPermissionRequest.
        :param permission_type: The permission_type of this ModifyDocumentPermissionRequest.
        :param account_ids_to_add: The account_ids_to_add of this ModifyDocumentPermissionRequest.
        :param account_ids_to_remove: The account_ids_to_remove of this ModifyDocumentPermissionRequest.
        :param shared_document_version: The shared_document_version of this ModifyDocumentPermissionRequest.
        """
        self.openapi_types = {
            'name': str,
            'permission_type': DocumentPermissionType,
            'account_ids_to_add': List,
            'account_ids_to_remove': List,
            'shared_document_version': str
        }

        self.attribute_map = {
            'name': 'Name',
            'permission_type': 'PermissionType',
            'account_ids_to_add': 'AccountIdsToAdd',
            'account_ids_to_remove': 'AccountIdsToRemove',
            'shared_document_version': 'SharedDocumentVersion'
        }

        self._name = name
        self._permission_type = permission_type
        self._account_ids_to_add = account_ids_to_add
        self._account_ids_to_remove = account_ids_to_remove
        self._shared_document_version = shared_document_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ModifyDocumentPermissionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ModifyDocumentPermissionRequest of this ModifyDocumentPermissionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this ModifyDocumentPermissionRequest.


        :return: The name of this ModifyDocumentPermissionRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ModifyDocumentPermissionRequest.


        :param name: The name of this ModifyDocumentPermissionRequest.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def permission_type(self):
        """Gets the permission_type of this ModifyDocumentPermissionRequest.


        :return: The permission_type of this ModifyDocumentPermissionRequest.
        :rtype: DocumentPermissionType
        """
        return self._permission_type

    @permission_type.setter
    def permission_type(self, permission_type):
        """Sets the permission_type of this ModifyDocumentPermissionRequest.


        :param permission_type: The permission_type of this ModifyDocumentPermissionRequest.
        :type permission_type: DocumentPermissionType
        """
        if permission_type is None:
            raise ValueError("Invalid value for `permission_type`, must not be `None`")

        self._permission_type = permission_type

    @property
    def account_ids_to_add(self):
        """Gets the account_ids_to_add of this ModifyDocumentPermissionRequest.


        :return: The account_ids_to_add of this ModifyDocumentPermissionRequest.
        :rtype: List
        """
        return self._account_ids_to_add

    @account_ids_to_add.setter
    def account_ids_to_add(self, account_ids_to_add):
        """Sets the account_ids_to_add of this ModifyDocumentPermissionRequest.


        :param account_ids_to_add: The account_ids_to_add of this ModifyDocumentPermissionRequest.
        :type account_ids_to_add: List
        """

        self._account_ids_to_add = account_ids_to_add

    @property
    def account_ids_to_remove(self):
        """Gets the account_ids_to_remove of this ModifyDocumentPermissionRequest.


        :return: The account_ids_to_remove of this ModifyDocumentPermissionRequest.
        :rtype: List
        """
        return self._account_ids_to_remove

    @account_ids_to_remove.setter
    def account_ids_to_remove(self, account_ids_to_remove):
        """Sets the account_ids_to_remove of this ModifyDocumentPermissionRequest.


        :param account_ids_to_remove: The account_ids_to_remove of this ModifyDocumentPermissionRequest.
        :type account_ids_to_remove: List
        """

        self._account_ids_to_remove = account_ids_to_remove

    @property
    def shared_document_version(self):
        """Gets the shared_document_version of this ModifyDocumentPermissionRequest.


        :return: The shared_document_version of this ModifyDocumentPermissionRequest.
        :rtype: str
        """
        return self._shared_document_version

    @shared_document_version.setter
    def shared_document_version(self, shared_document_version):
        """Sets the shared_document_version of this ModifyDocumentPermissionRequest.


        :param shared_document_version: The shared_document_version of this ModifyDocumentPermissionRequest.
        :type shared_document_version: str
        """

        self._shared_document_version = shared_document_version
