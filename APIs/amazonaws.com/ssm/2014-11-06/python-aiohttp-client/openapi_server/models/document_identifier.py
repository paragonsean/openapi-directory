# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.document_format import DocumentFormat
from openapi_server.models.document_type import DocumentType
from openapi_server.models.review_status import ReviewStatus
from openapi_server import util


class DocumentIdentifier(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, created_date: datetime=None, display_name: str=None, owner: str=None, version_name: str=None, platform_types: List=None, document_version: str=None, document_type: DocumentType=None, schema_version: str=None, document_format: DocumentFormat=None, target_type: str=None, tags: List=None, requires: List=None, review_status: ReviewStatus=None, author: str=None):
        """DocumentIdentifier - a model defined in OpenAPI

        :param name: The name of this DocumentIdentifier.
        :param created_date: The created_date of this DocumentIdentifier.
        :param display_name: The display_name of this DocumentIdentifier.
        :param owner: The owner of this DocumentIdentifier.
        :param version_name: The version_name of this DocumentIdentifier.
        :param platform_types: The platform_types of this DocumentIdentifier.
        :param document_version: The document_version of this DocumentIdentifier.
        :param document_type: The document_type of this DocumentIdentifier.
        :param schema_version: The schema_version of this DocumentIdentifier.
        :param document_format: The document_format of this DocumentIdentifier.
        :param target_type: The target_type of this DocumentIdentifier.
        :param tags: The tags of this DocumentIdentifier.
        :param requires: The requires of this DocumentIdentifier.
        :param review_status: The review_status of this DocumentIdentifier.
        :param author: The author of this DocumentIdentifier.
        """
        self.openapi_types = {
            'name': str,
            'created_date': datetime,
            'display_name': str,
            'owner': str,
            'version_name': str,
            'platform_types': List,
            'document_version': str,
            'document_type': DocumentType,
            'schema_version': str,
            'document_format': DocumentFormat,
            'target_type': str,
            'tags': List,
            'requires': List,
            'review_status': ReviewStatus,
            'author': str
        }

        self.attribute_map = {
            'name': 'Name',
            'created_date': 'CreatedDate',
            'display_name': 'DisplayName',
            'owner': 'Owner',
            'version_name': 'VersionName',
            'platform_types': 'PlatformTypes',
            'document_version': 'DocumentVersion',
            'document_type': 'DocumentType',
            'schema_version': 'SchemaVersion',
            'document_format': 'DocumentFormat',
            'target_type': 'TargetType',
            'tags': 'Tags',
            'requires': 'Requires',
            'review_status': 'ReviewStatus',
            'author': 'Author'
        }

        self._name = name
        self._created_date = created_date
        self._display_name = display_name
        self._owner = owner
        self._version_name = version_name
        self._platform_types = platform_types
        self._document_version = document_version
        self._document_type = document_type
        self._schema_version = schema_version
        self._document_format = document_format
        self._target_type = target_type
        self._tags = tags
        self._requires = requires
        self._review_status = review_status
        self._author = author

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DocumentIdentifier':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DocumentIdentifier of this DocumentIdentifier.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this DocumentIdentifier.


        :return: The name of this DocumentIdentifier.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DocumentIdentifier.


        :param name: The name of this DocumentIdentifier.
        :type name: str
        """

        self._name = name

    @property
    def created_date(self):
        """Gets the created_date of this DocumentIdentifier.


        :return: The created_date of this DocumentIdentifier.
        :rtype: datetime
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this DocumentIdentifier.


        :param created_date: The created_date of this DocumentIdentifier.
        :type created_date: datetime
        """

        self._created_date = created_date

    @property
    def display_name(self):
        """Gets the display_name of this DocumentIdentifier.


        :return: The display_name of this DocumentIdentifier.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this DocumentIdentifier.


        :param display_name: The display_name of this DocumentIdentifier.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def owner(self):
        """Gets the owner of this DocumentIdentifier.


        :return: The owner of this DocumentIdentifier.
        :rtype: str
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this DocumentIdentifier.


        :param owner: The owner of this DocumentIdentifier.
        :type owner: str
        """

        self._owner = owner

    @property
    def version_name(self):
        """Gets the version_name of this DocumentIdentifier.


        :return: The version_name of this DocumentIdentifier.
        :rtype: str
        """
        return self._version_name

    @version_name.setter
    def version_name(self, version_name):
        """Sets the version_name of this DocumentIdentifier.


        :param version_name: The version_name of this DocumentIdentifier.
        :type version_name: str
        """

        self._version_name = version_name

    @property
    def platform_types(self):
        """Gets the platform_types of this DocumentIdentifier.


        :return: The platform_types of this DocumentIdentifier.
        :rtype: List
        """
        return self._platform_types

    @platform_types.setter
    def platform_types(self, platform_types):
        """Sets the platform_types of this DocumentIdentifier.


        :param platform_types: The platform_types of this DocumentIdentifier.
        :type platform_types: List
        """

        self._platform_types = platform_types

    @property
    def document_version(self):
        """Gets the document_version of this DocumentIdentifier.


        :return: The document_version of this DocumentIdentifier.
        :rtype: str
        """
        return self._document_version

    @document_version.setter
    def document_version(self, document_version):
        """Sets the document_version of this DocumentIdentifier.


        :param document_version: The document_version of this DocumentIdentifier.
        :type document_version: str
        """

        self._document_version = document_version

    @property
    def document_type(self):
        """Gets the document_type of this DocumentIdentifier.


        :return: The document_type of this DocumentIdentifier.
        :rtype: DocumentType
        """
        return self._document_type

    @document_type.setter
    def document_type(self, document_type):
        """Sets the document_type of this DocumentIdentifier.


        :param document_type: The document_type of this DocumentIdentifier.
        :type document_type: DocumentType
        """

        self._document_type = document_type

    @property
    def schema_version(self):
        """Gets the schema_version of this DocumentIdentifier.


        :return: The schema_version of this DocumentIdentifier.
        :rtype: str
        """
        return self._schema_version

    @schema_version.setter
    def schema_version(self, schema_version):
        """Sets the schema_version of this DocumentIdentifier.


        :param schema_version: The schema_version of this DocumentIdentifier.
        :type schema_version: str
        """

        self._schema_version = schema_version

    @property
    def document_format(self):
        """Gets the document_format of this DocumentIdentifier.


        :return: The document_format of this DocumentIdentifier.
        :rtype: DocumentFormat
        """
        return self._document_format

    @document_format.setter
    def document_format(self, document_format):
        """Sets the document_format of this DocumentIdentifier.


        :param document_format: The document_format of this DocumentIdentifier.
        :type document_format: DocumentFormat
        """

        self._document_format = document_format

    @property
    def target_type(self):
        """Gets the target_type of this DocumentIdentifier.


        :return: The target_type of this DocumentIdentifier.
        :rtype: str
        """
        return self._target_type

    @target_type.setter
    def target_type(self, target_type):
        """Sets the target_type of this DocumentIdentifier.


        :param target_type: The target_type of this DocumentIdentifier.
        :type target_type: str
        """

        self._target_type = target_type

    @property
    def tags(self):
        """Gets the tags of this DocumentIdentifier.


        :return: The tags of this DocumentIdentifier.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this DocumentIdentifier.


        :param tags: The tags of this DocumentIdentifier.
        :type tags: List
        """

        self._tags = tags

    @property
    def requires(self):
        """Gets the requires of this DocumentIdentifier.


        :return: The requires of this DocumentIdentifier.
        :rtype: List
        """
        return self._requires

    @requires.setter
    def requires(self, requires):
        """Sets the requires of this DocumentIdentifier.


        :param requires: The requires of this DocumentIdentifier.
        :type requires: List
        """

        self._requires = requires

    @property
    def review_status(self):
        """Gets the review_status of this DocumentIdentifier.


        :return: The review_status of this DocumentIdentifier.
        :rtype: ReviewStatus
        """
        return self._review_status

    @review_status.setter
    def review_status(self, review_status):
        """Sets the review_status of this DocumentIdentifier.


        :param review_status: The review_status of this DocumentIdentifier.
        :type review_status: ReviewStatus
        """

        self._review_status = review_status

    @property
    def author(self):
        """Gets the author of this DocumentIdentifier.


        :return: The author of this DocumentIdentifier.
        :rtype: str
        """
        return self._author

    @author.setter
    def author(self, author):
        """Sets the author of this DocumentIdentifier.


        :param author: The author of this DocumentIdentifier.
        :type author: str
        """

        self._author = author
