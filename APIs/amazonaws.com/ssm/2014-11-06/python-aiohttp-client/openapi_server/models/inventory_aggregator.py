# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InventoryAggregator(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expression: str=None, aggregators: List=None, groups: List=None):
        """InventoryAggregator - a model defined in OpenAPI

        :param expression: The expression of this InventoryAggregator.
        :param aggregators: The aggregators of this InventoryAggregator.
        :param groups: The groups of this InventoryAggregator.
        """
        self.openapi_types = {
            'expression': str,
            'aggregators': List,
            'groups': List
        }

        self.attribute_map = {
            'expression': 'Expression',
            'aggregators': 'Aggregators',
            'groups': 'Groups'
        }

        self._expression = expression
        self._aggregators = aggregators
        self._groups = groups

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InventoryAggregator':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InventoryAggregator of this InventoryAggregator.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expression(self):
        """Gets the expression of this InventoryAggregator.


        :return: The expression of this InventoryAggregator.
        :rtype: str
        """
        return self._expression

    @expression.setter
    def expression(self, expression):
        """Sets the expression of this InventoryAggregator.


        :param expression: The expression of this InventoryAggregator.
        :type expression: str
        """

        self._expression = expression

    @property
    def aggregators(self):
        """Gets the aggregators of this InventoryAggregator.


        :return: The aggregators of this InventoryAggregator.
        :rtype: List
        """
        return self._aggregators

    @aggregators.setter
    def aggregators(self, aggregators):
        """Sets the aggregators of this InventoryAggregator.


        :param aggregators: The aggregators of this InventoryAggregator.
        :type aggregators: List
        """

        self._aggregators = aggregators

    @property
    def groups(self):
        """Gets the groups of this InventoryAggregator.


        :return: The groups of this InventoryAggregator.
        :rtype: List
        """
        return self._groups

    @groups.setter
    def groups(self, groups):
        """Sets the groups of this InventoryAggregator.


        :param groups: The groups of this InventoryAggregator.
        :type groups: List
        """

        self._groups = groups
