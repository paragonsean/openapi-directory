# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MaintenanceWindowIdentity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, window_id: str=None, name: str=None, description: str=None, enabled: bool=None, duration: int=None, cutoff: int=None, schedule: str=None, schedule_timezone: str=None, schedule_offset: int=None, end_date: str=None, start_date: str=None, next_execution_time: str=None):
        """MaintenanceWindowIdentity - a model defined in OpenAPI

        :param window_id: The window_id of this MaintenanceWindowIdentity.
        :param name: The name of this MaintenanceWindowIdentity.
        :param description: The description of this MaintenanceWindowIdentity.
        :param enabled: The enabled of this MaintenanceWindowIdentity.
        :param duration: The duration of this MaintenanceWindowIdentity.
        :param cutoff: The cutoff of this MaintenanceWindowIdentity.
        :param schedule: The schedule of this MaintenanceWindowIdentity.
        :param schedule_timezone: The schedule_timezone of this MaintenanceWindowIdentity.
        :param schedule_offset: The schedule_offset of this MaintenanceWindowIdentity.
        :param end_date: The end_date of this MaintenanceWindowIdentity.
        :param start_date: The start_date of this MaintenanceWindowIdentity.
        :param next_execution_time: The next_execution_time of this MaintenanceWindowIdentity.
        """
        self.openapi_types = {
            'window_id': str,
            'name': str,
            'description': str,
            'enabled': bool,
            'duration': int,
            'cutoff': int,
            'schedule': str,
            'schedule_timezone': str,
            'schedule_offset': int,
            'end_date': str,
            'start_date': str,
            'next_execution_time': str
        }

        self.attribute_map = {
            'window_id': 'WindowId',
            'name': 'Name',
            'description': 'Description',
            'enabled': 'Enabled',
            'duration': 'Duration',
            'cutoff': 'Cutoff',
            'schedule': 'Schedule',
            'schedule_timezone': 'ScheduleTimezone',
            'schedule_offset': 'ScheduleOffset',
            'end_date': 'EndDate',
            'start_date': 'StartDate',
            'next_execution_time': 'NextExecutionTime'
        }

        self._window_id = window_id
        self._name = name
        self._description = description
        self._enabled = enabled
        self._duration = duration
        self._cutoff = cutoff
        self._schedule = schedule
        self._schedule_timezone = schedule_timezone
        self._schedule_offset = schedule_offset
        self._end_date = end_date
        self._start_date = start_date
        self._next_execution_time = next_execution_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MaintenanceWindowIdentity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MaintenanceWindowIdentity of this MaintenanceWindowIdentity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def window_id(self):
        """Gets the window_id of this MaintenanceWindowIdentity.


        :return: The window_id of this MaintenanceWindowIdentity.
        :rtype: str
        """
        return self._window_id

    @window_id.setter
    def window_id(self, window_id):
        """Sets the window_id of this MaintenanceWindowIdentity.


        :param window_id: The window_id of this MaintenanceWindowIdentity.
        :type window_id: str
        """

        self._window_id = window_id

    @property
    def name(self):
        """Gets the name of this MaintenanceWindowIdentity.


        :return: The name of this MaintenanceWindowIdentity.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this MaintenanceWindowIdentity.


        :param name: The name of this MaintenanceWindowIdentity.
        :type name: str
        """

        self._name = name

    @property
    def description(self):
        """Gets the description of this MaintenanceWindowIdentity.


        :return: The description of this MaintenanceWindowIdentity.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this MaintenanceWindowIdentity.


        :param description: The description of this MaintenanceWindowIdentity.
        :type description: str
        """

        self._description = description

    @property
    def enabled(self):
        """Gets the enabled of this MaintenanceWindowIdentity.


        :return: The enabled of this MaintenanceWindowIdentity.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this MaintenanceWindowIdentity.


        :param enabled: The enabled of this MaintenanceWindowIdentity.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def duration(self):
        """Gets the duration of this MaintenanceWindowIdentity.


        :return: The duration of this MaintenanceWindowIdentity.
        :rtype: int
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this MaintenanceWindowIdentity.


        :param duration: The duration of this MaintenanceWindowIdentity.
        :type duration: int
        """

        self._duration = duration

    @property
    def cutoff(self):
        """Gets the cutoff of this MaintenanceWindowIdentity.


        :return: The cutoff of this MaintenanceWindowIdentity.
        :rtype: int
        """
        return self._cutoff

    @cutoff.setter
    def cutoff(self, cutoff):
        """Sets the cutoff of this MaintenanceWindowIdentity.


        :param cutoff: The cutoff of this MaintenanceWindowIdentity.
        :type cutoff: int
        """

        self._cutoff = cutoff

    @property
    def schedule(self):
        """Gets the schedule of this MaintenanceWindowIdentity.


        :return: The schedule of this MaintenanceWindowIdentity.
        :rtype: str
        """
        return self._schedule

    @schedule.setter
    def schedule(self, schedule):
        """Sets the schedule of this MaintenanceWindowIdentity.


        :param schedule: The schedule of this MaintenanceWindowIdentity.
        :type schedule: str
        """

        self._schedule = schedule

    @property
    def schedule_timezone(self):
        """Gets the schedule_timezone of this MaintenanceWindowIdentity.


        :return: The schedule_timezone of this MaintenanceWindowIdentity.
        :rtype: str
        """
        return self._schedule_timezone

    @schedule_timezone.setter
    def schedule_timezone(self, schedule_timezone):
        """Sets the schedule_timezone of this MaintenanceWindowIdentity.


        :param schedule_timezone: The schedule_timezone of this MaintenanceWindowIdentity.
        :type schedule_timezone: str
        """

        self._schedule_timezone = schedule_timezone

    @property
    def schedule_offset(self):
        """Gets the schedule_offset of this MaintenanceWindowIdentity.


        :return: The schedule_offset of this MaintenanceWindowIdentity.
        :rtype: int
        """
        return self._schedule_offset

    @schedule_offset.setter
    def schedule_offset(self, schedule_offset):
        """Sets the schedule_offset of this MaintenanceWindowIdentity.


        :param schedule_offset: The schedule_offset of this MaintenanceWindowIdentity.
        :type schedule_offset: int
        """

        self._schedule_offset = schedule_offset

    @property
    def end_date(self):
        """Gets the end_date of this MaintenanceWindowIdentity.


        :return: The end_date of this MaintenanceWindowIdentity.
        :rtype: str
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this MaintenanceWindowIdentity.


        :param end_date: The end_date of this MaintenanceWindowIdentity.
        :type end_date: str
        """

        self._end_date = end_date

    @property
    def start_date(self):
        """Gets the start_date of this MaintenanceWindowIdentity.


        :return: The start_date of this MaintenanceWindowIdentity.
        :rtype: str
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this MaintenanceWindowIdentity.


        :param start_date: The start_date of this MaintenanceWindowIdentity.
        :type start_date: str
        """

        self._start_date = start_date

    @property
    def next_execution_time(self):
        """Gets the next_execution_time of this MaintenanceWindowIdentity.


        :return: The next_execution_time of this MaintenanceWindowIdentity.
        :rtype: str
        """
        return self._next_execution_time

    @next_execution_time.setter
    def next_execution_time(self, next_execution_time):
        """Sets the next_execution_time of this MaintenanceWindowIdentity.


        :param next_execution_time: The next_execution_time of this MaintenanceWindowIdentity.
        :type next_execution_time: str
        """

        self._next_execution_time = next_execution_time
