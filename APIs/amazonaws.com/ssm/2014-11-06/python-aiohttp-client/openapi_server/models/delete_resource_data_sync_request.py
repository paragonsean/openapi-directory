# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteResourceDataSyncRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sync_name: str=None, sync_type: str=None):
        """DeleteResourceDataSyncRequest - a model defined in OpenAPI

        :param sync_name: The sync_name of this DeleteResourceDataSyncRequest.
        :param sync_type: The sync_type of this DeleteResourceDataSyncRequest.
        """
        self.openapi_types = {
            'sync_name': str,
            'sync_type': str
        }

        self.attribute_map = {
            'sync_name': 'SyncName',
            'sync_type': 'SyncType'
        }

        self._sync_name = sync_name
        self._sync_type = sync_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteResourceDataSyncRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteResourceDataSyncRequest of this DeleteResourceDataSyncRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sync_name(self):
        """Gets the sync_name of this DeleteResourceDataSyncRequest.


        :return: The sync_name of this DeleteResourceDataSyncRequest.
        :rtype: str
        """
        return self._sync_name

    @sync_name.setter
    def sync_name(self, sync_name):
        """Sets the sync_name of this DeleteResourceDataSyncRequest.


        :param sync_name: The sync_name of this DeleteResourceDataSyncRequest.
        :type sync_name: str
        """
        if sync_name is None:
            raise ValueError("Invalid value for `sync_name`, must not be `None`")

        self._sync_name = sync_name

    @property
    def sync_type(self):
        """Gets the sync_type of this DeleteResourceDataSyncRequest.


        :return: The sync_type of this DeleteResourceDataSyncRequest.
        :rtype: str
        """
        return self._sync_type

    @sync_type.setter
    def sync_type(self, sync_type):
        """Sets the sync_type of this DeleteResourceDataSyncRequest.


        :param sync_type: The sync_type of this DeleteResourceDataSyncRequest.
        :type sync_type: str
        """

        self._sync_type = sync_type
