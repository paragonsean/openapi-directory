# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ResourceTypeForTagging(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    DOCUMENT = 'Document'
    MANAGEDINSTANCE = 'ManagedInstance'
    MAINTENANCEWINDOW = 'MaintenanceWindow'
    PARAMETER = 'Parameter'
    PATCHBASELINE = 'PatchBaseline'
    OPSITEM = 'OpsItem'
    OPSMETADATA = 'OpsMetadata'
    AUTOMATION = 'Automation'
    ASSOCIATION = 'Association'

    def __init__(self):
        """ResourceTypeForTagging - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResourceTypeForTagging':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResourceTypeForTagging of this ResourceTypeForTagging.
        """
        return util.deserialize_model(dikt, cls)
