# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateOpsMetadataRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ops_metadata_arn: str=None, metadata_to_update: Dict=None, keys_to_delete: List=None):
        """UpdateOpsMetadataRequest - a model defined in OpenAPI

        :param ops_metadata_arn: The ops_metadata_arn of this UpdateOpsMetadataRequest.
        :param metadata_to_update: The metadata_to_update of this UpdateOpsMetadataRequest.
        :param keys_to_delete: The keys_to_delete of this UpdateOpsMetadataRequest.
        """
        self.openapi_types = {
            'ops_metadata_arn': str,
            'metadata_to_update': Dict,
            'keys_to_delete': List
        }

        self.attribute_map = {
            'ops_metadata_arn': 'OpsMetadataArn',
            'metadata_to_update': 'MetadataToUpdate',
            'keys_to_delete': 'KeysToDelete'
        }

        self._ops_metadata_arn = ops_metadata_arn
        self._metadata_to_update = metadata_to_update
        self._keys_to_delete = keys_to_delete

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateOpsMetadataRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateOpsMetadataRequest of this UpdateOpsMetadataRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ops_metadata_arn(self):
        """Gets the ops_metadata_arn of this UpdateOpsMetadataRequest.


        :return: The ops_metadata_arn of this UpdateOpsMetadataRequest.
        :rtype: str
        """
        return self._ops_metadata_arn

    @ops_metadata_arn.setter
    def ops_metadata_arn(self, ops_metadata_arn):
        """Sets the ops_metadata_arn of this UpdateOpsMetadataRequest.


        :param ops_metadata_arn: The ops_metadata_arn of this UpdateOpsMetadataRequest.
        :type ops_metadata_arn: str
        """
        if ops_metadata_arn is None:
            raise ValueError("Invalid value for `ops_metadata_arn`, must not be `None`")

        self._ops_metadata_arn = ops_metadata_arn

    @property
    def metadata_to_update(self):
        """Gets the metadata_to_update of this UpdateOpsMetadataRequest.


        :return: The metadata_to_update of this UpdateOpsMetadataRequest.
        :rtype: Dict
        """
        return self._metadata_to_update

    @metadata_to_update.setter
    def metadata_to_update(self, metadata_to_update):
        """Sets the metadata_to_update of this UpdateOpsMetadataRequest.


        :param metadata_to_update: The metadata_to_update of this UpdateOpsMetadataRequest.
        :type metadata_to_update: Dict
        """

        self._metadata_to_update = metadata_to_update

    @property
    def keys_to_delete(self):
        """Gets the keys_to_delete of this UpdateOpsMetadataRequest.


        :return: The keys_to_delete of this UpdateOpsMetadataRequest.
        :rtype: List
        """
        return self._keys_to_delete

    @keys_to_delete.setter
    def keys_to_delete(self, keys_to_delete):
        """Sets the keys_to_delete of this UpdateOpsMetadataRequest.


        :param keys_to_delete: The keys_to_delete of this UpdateOpsMetadataRequest.
        :type keys_to_delete: List
        """

        self._keys_to_delete = keys_to_delete
