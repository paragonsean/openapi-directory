# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PatchFilterKey(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    ARCH = 'ARCH'
    ADVISORY_ID = 'ADVISORY_ID'
    BUGZILLA_ID = 'BUGZILLA_ID'
    PATCH_SET = 'PATCH_SET'
    PRODUCT = 'PRODUCT'
    PRODUCT_FAMILY = 'PRODUCT_FAMILY'
    CLASSIFICATION = 'CLASSIFICATION'
    CVE_ID = 'CVE_ID'
    EPOCH = 'EPOCH'
    MSRC_SEVERITY = 'MSRC_SEVERITY'
    NAME = 'NAME'
    PATCH_ID = 'PATCH_ID'
    SECTION = 'SECTION'
    PRIORITY = 'PRIORITY'
    REPOSITORY = 'REPOSITORY'
    RELEASE = 'RELEASE'
    SEVERITY = 'SEVERITY'
    SECURITY = 'SECURITY'
    VERSION = 'VERSION'

    def __init__(self):
        """PatchFilterKey - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PatchFilterKey':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PatchFilterKey of this PatchFilterKey.
        """
        return util.deserialize_model(dikt, cls)
