# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.compliance_severity import ComplianceSeverity
from openapi_server.models.compliance_status import ComplianceStatus
from openapi_server import util


class ComplianceItemEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, title: str=None, severity: ComplianceSeverity=None, status: ComplianceStatus=None, details: Dict=None):
        """ComplianceItemEntry - a model defined in OpenAPI

        :param id: The id of this ComplianceItemEntry.
        :param title: The title of this ComplianceItemEntry.
        :param severity: The severity of this ComplianceItemEntry.
        :param status: The status of this ComplianceItemEntry.
        :param details: The details of this ComplianceItemEntry.
        """
        self.openapi_types = {
            'id': str,
            'title': str,
            'severity': ComplianceSeverity,
            'status': ComplianceStatus,
            'details': Dict
        }

        self.attribute_map = {
            'id': 'Id',
            'title': 'Title',
            'severity': 'Severity',
            'status': 'Status',
            'details': 'Details'
        }

        self._id = id
        self._title = title
        self._severity = severity
        self._status = status
        self._details = details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ComplianceItemEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ComplianceItemEntry of this ComplianceItemEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this ComplianceItemEntry.


        :return: The id of this ComplianceItemEntry.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ComplianceItemEntry.


        :param id: The id of this ComplianceItemEntry.
        :type id: str
        """

        self._id = id

    @property
    def title(self):
        """Gets the title of this ComplianceItemEntry.


        :return: The title of this ComplianceItemEntry.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this ComplianceItemEntry.


        :param title: The title of this ComplianceItemEntry.
        :type title: str
        """

        self._title = title

    @property
    def severity(self):
        """Gets the severity of this ComplianceItemEntry.


        :return: The severity of this ComplianceItemEntry.
        :rtype: ComplianceSeverity
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this ComplianceItemEntry.


        :param severity: The severity of this ComplianceItemEntry.
        :type severity: ComplianceSeverity
        """
        if severity is None:
            raise ValueError("Invalid value for `severity`, must not be `None`")

        self._severity = severity

    @property
    def status(self):
        """Gets the status of this ComplianceItemEntry.


        :return: The status of this ComplianceItemEntry.
        :rtype: ComplianceStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ComplianceItemEntry.


        :param status: The status of this ComplianceItemEntry.
        :type status: ComplianceStatus
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")

        self._status = status

    @property
    def details(self):
        """Gets the details of this ComplianceItemEntry.


        :return: The details of this ComplianceItemEntry.
        :rtype: Dict
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this ComplianceItemEntry.


        :param details: The details of this ComplianceItemEntry.
        :type details: Dict
        """

        self._details = details
