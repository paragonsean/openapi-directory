# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OpsItemFilterKey(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    STATUS = 'Status'
    CREATEDBY = 'CreatedBy'
    SOURCE = 'Source'
    PRIORITY = 'Priority'
    TITLE = 'Title'
    OPSITEMID = 'OpsItemId'
    CREATEDTIME = 'CreatedTime'
    LASTMODIFIEDTIME = 'LastModifiedTime'
    ACTUALSTARTTIME = 'ActualStartTime'
    ACTUALENDTIME = 'ActualEndTime'
    PLANNEDSTARTTIME = 'PlannedStartTime'
    PLANNEDENDTIME = 'PlannedEndTime'
    OPERATIONALDATA = 'OperationalData'
    OPERATIONALDATAKEY = 'OperationalDataKey'
    OPERATIONALDATAVALUE = 'OperationalDataValue'
    RESOURCEID = 'ResourceId'
    AUTOMATIONID = 'AutomationId'
    CATEGORY = 'Category'
    SEVERITY = 'Severity'
    OPSITEMTYPE = 'OpsItemType'
    CHANGEREQUESTBYREQUESTERARN = 'ChangeRequestByRequesterArn'
    CHANGEREQUESTBYREQUESTERNAME = 'ChangeRequestByRequesterName'
    CHANGEREQUESTBYAPPROVERARN = 'ChangeRequestByApproverArn'
    CHANGEREQUESTBYAPPROVERNAME = 'ChangeRequestByApproverName'
    CHANGEREQUESTBYTEMPLATE = 'ChangeRequestByTemplate'
    CHANGEREQUESTBYTARGETSRESOURCEGROUP = 'ChangeRequestByTargetsResourceGroup'
    INSIGHTBYTYPE = 'InsightByType'
    ACCOUNTID = 'AccountId'

    def __init__(self):
        """OpsItemFilterKey - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OpsItemFilterKey':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OpsItemFilterKey of this OpsItemFilterKey.
        """
        return util.deserialize_model(dikt, cls)
