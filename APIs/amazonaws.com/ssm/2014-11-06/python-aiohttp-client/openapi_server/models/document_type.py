# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DocumentType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    COMMAND = 'Command'
    POLICY = 'Policy'
    AUTOMATION = 'Automation'
    SESSION = 'Session'
    PACKAGE = 'Package'
    APPLICATIONCONFIGURATION = 'ApplicationConfiguration'
    APPLICATIONCONFIGURATIONSCHEMA = 'ApplicationConfigurationSchema'
    DEPLOYMENTSTRATEGY = 'DeploymentStrategy'
    CHANGECALENDAR = 'ChangeCalendar'
    AUTOMATION_PERIOD_CHANGE_TEMPLATE = 'Automation.ChangeTemplate'
    PROBLEMANALYSIS = 'ProblemAnalysis'
    PROBLEMANALYSISTEMPLATE = 'ProblemAnalysisTemplate'
    CLOUDFORMATION = 'CloudFormation'
    CONFORMANCEPACKTEMPLATE = 'ConformancePackTemplate'
    QUICKSETUP = 'QuickSetup'

    def __init__(self):
        """DocumentType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DocumentType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DocumentType of this DocumentType.
        """
        return util.deserialize_model(dikt, cls)
