# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource_data_sync_s3_destination_destination_data_sharing import ResourceDataSyncS3DestinationDestinationDataSharing
from openapi_server.models.resource_data_sync_s3_format import ResourceDataSyncS3Format
from openapi_server import util


class ResourceDataSyncS3Destination(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bucket_name: str=None, prefix: str=None, sync_format: ResourceDataSyncS3Format=None, region: str=None, awskms_key_arn: str=None, destination_data_sharing: ResourceDataSyncS3DestinationDestinationDataSharing=None):
        """ResourceDataSyncS3Destination - a model defined in OpenAPI

        :param bucket_name: The bucket_name of this ResourceDataSyncS3Destination.
        :param prefix: The prefix of this ResourceDataSyncS3Destination.
        :param sync_format: The sync_format of this ResourceDataSyncS3Destination.
        :param region: The region of this ResourceDataSyncS3Destination.
        :param awskms_key_arn: The awskms_key_arn of this ResourceDataSyncS3Destination.
        :param destination_data_sharing: The destination_data_sharing of this ResourceDataSyncS3Destination.
        """
        self.openapi_types = {
            'bucket_name': str,
            'prefix': str,
            'sync_format': ResourceDataSyncS3Format,
            'region': str,
            'awskms_key_arn': str,
            'destination_data_sharing': ResourceDataSyncS3DestinationDestinationDataSharing
        }

        self.attribute_map = {
            'bucket_name': 'BucketName',
            'prefix': 'Prefix',
            'sync_format': 'SyncFormat',
            'region': 'Region',
            'awskms_key_arn': 'AWSKMSKeyARN',
            'destination_data_sharing': 'DestinationDataSharing'
        }

        self._bucket_name = bucket_name
        self._prefix = prefix
        self._sync_format = sync_format
        self._region = region
        self._awskms_key_arn = awskms_key_arn
        self._destination_data_sharing = destination_data_sharing

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResourceDataSyncS3Destination':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResourceDataSyncS3Destination of this ResourceDataSyncS3Destination.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bucket_name(self):
        """Gets the bucket_name of this ResourceDataSyncS3Destination.


        :return: The bucket_name of this ResourceDataSyncS3Destination.
        :rtype: str
        """
        return self._bucket_name

    @bucket_name.setter
    def bucket_name(self, bucket_name):
        """Sets the bucket_name of this ResourceDataSyncS3Destination.


        :param bucket_name: The bucket_name of this ResourceDataSyncS3Destination.
        :type bucket_name: str
        """
        if bucket_name is None:
            raise ValueError("Invalid value for `bucket_name`, must not be `None`")

        self._bucket_name = bucket_name

    @property
    def prefix(self):
        """Gets the prefix of this ResourceDataSyncS3Destination.


        :return: The prefix of this ResourceDataSyncS3Destination.
        :rtype: str
        """
        return self._prefix

    @prefix.setter
    def prefix(self, prefix):
        """Sets the prefix of this ResourceDataSyncS3Destination.


        :param prefix: The prefix of this ResourceDataSyncS3Destination.
        :type prefix: str
        """

        self._prefix = prefix

    @property
    def sync_format(self):
        """Gets the sync_format of this ResourceDataSyncS3Destination.


        :return: The sync_format of this ResourceDataSyncS3Destination.
        :rtype: ResourceDataSyncS3Format
        """
        return self._sync_format

    @sync_format.setter
    def sync_format(self, sync_format):
        """Sets the sync_format of this ResourceDataSyncS3Destination.


        :param sync_format: The sync_format of this ResourceDataSyncS3Destination.
        :type sync_format: ResourceDataSyncS3Format
        """
        if sync_format is None:
            raise ValueError("Invalid value for `sync_format`, must not be `None`")

        self._sync_format = sync_format

    @property
    def region(self):
        """Gets the region of this ResourceDataSyncS3Destination.


        :return: The region of this ResourceDataSyncS3Destination.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this ResourceDataSyncS3Destination.


        :param region: The region of this ResourceDataSyncS3Destination.
        :type region: str
        """
        if region is None:
            raise ValueError("Invalid value for `region`, must not be `None`")

        self._region = region

    @property
    def awskms_key_arn(self):
        """Gets the awskms_key_arn of this ResourceDataSyncS3Destination.


        :return: The awskms_key_arn of this ResourceDataSyncS3Destination.
        :rtype: str
        """
        return self._awskms_key_arn

    @awskms_key_arn.setter
    def awskms_key_arn(self, awskms_key_arn):
        """Sets the awskms_key_arn of this ResourceDataSyncS3Destination.


        :param awskms_key_arn: The awskms_key_arn of this ResourceDataSyncS3Destination.
        :type awskms_key_arn: str
        """

        self._awskms_key_arn = awskms_key_arn

    @property
    def destination_data_sharing(self):
        """Gets the destination_data_sharing of this ResourceDataSyncS3Destination.


        :return: The destination_data_sharing of this ResourceDataSyncS3Destination.
        :rtype: ResourceDataSyncS3DestinationDestinationDataSharing
        """
        return self._destination_data_sharing

    @destination_data_sharing.setter
    def destination_data_sharing(self, destination_data_sharing):
        """Sets the destination_data_sharing of this ResourceDataSyncS3Destination.


        :param destination_data_sharing: The destination_data_sharing of this ResourceDataSyncS3Destination.
        :type destination_data_sharing: ResourceDataSyncS3DestinationDestinationDataSharing
        """

        self._destination_data_sharing = destination_data_sharing
