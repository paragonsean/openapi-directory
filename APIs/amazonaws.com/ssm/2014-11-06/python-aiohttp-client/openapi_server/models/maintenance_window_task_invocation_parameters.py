# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.maintenance_window_task_invocation_parameters_automation import MaintenanceWindowTaskInvocationParametersAutomation
from openapi_server.models.maintenance_window_task_invocation_parameters_lambda import MaintenanceWindowTaskInvocationParametersLambda
from openapi_server.models.maintenance_window_task_invocation_parameters_run_command import MaintenanceWindowTaskInvocationParametersRunCommand
from openapi_server.models.maintenance_window_task_invocation_parameters_step_functions import MaintenanceWindowTaskInvocationParametersStepFunctions
from openapi_server import util


class MaintenanceWindowTaskInvocationParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, run_command: MaintenanceWindowTaskInvocationParametersRunCommand=None, automation: MaintenanceWindowTaskInvocationParametersAutomation=None, step_functions: MaintenanceWindowTaskInvocationParametersStepFunctions=None, _lambda: MaintenanceWindowTaskInvocationParametersLambda=None):
        """MaintenanceWindowTaskInvocationParameters - a model defined in OpenAPI

        :param run_command: The run_command of this MaintenanceWindowTaskInvocationParameters.
        :param automation: The automation of this MaintenanceWindowTaskInvocationParameters.
        :param step_functions: The step_functions of this MaintenanceWindowTaskInvocationParameters.
        :param _lambda: The _lambda of this MaintenanceWindowTaskInvocationParameters.
        """
        self.openapi_types = {
            'run_command': MaintenanceWindowTaskInvocationParametersRunCommand,
            'automation': MaintenanceWindowTaskInvocationParametersAutomation,
            'step_functions': MaintenanceWindowTaskInvocationParametersStepFunctions,
            '_lambda': MaintenanceWindowTaskInvocationParametersLambda
        }

        self.attribute_map = {
            'run_command': 'RunCommand',
            'automation': 'Automation',
            'step_functions': 'StepFunctions',
            '_lambda': 'Lambda'
        }

        self._run_command = run_command
        self._automation = automation
        self._step_functions = step_functions
        self.__lambda = _lambda

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MaintenanceWindowTaskInvocationParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MaintenanceWindowTaskInvocationParameters of this MaintenanceWindowTaskInvocationParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def run_command(self):
        """Gets the run_command of this MaintenanceWindowTaskInvocationParameters.


        :return: The run_command of this MaintenanceWindowTaskInvocationParameters.
        :rtype: MaintenanceWindowTaskInvocationParametersRunCommand
        """
        return self._run_command

    @run_command.setter
    def run_command(self, run_command):
        """Sets the run_command of this MaintenanceWindowTaskInvocationParameters.


        :param run_command: The run_command of this MaintenanceWindowTaskInvocationParameters.
        :type run_command: MaintenanceWindowTaskInvocationParametersRunCommand
        """

        self._run_command = run_command

    @property
    def automation(self):
        """Gets the automation of this MaintenanceWindowTaskInvocationParameters.


        :return: The automation of this MaintenanceWindowTaskInvocationParameters.
        :rtype: MaintenanceWindowTaskInvocationParametersAutomation
        """
        return self._automation

    @automation.setter
    def automation(self, automation):
        """Sets the automation of this MaintenanceWindowTaskInvocationParameters.


        :param automation: The automation of this MaintenanceWindowTaskInvocationParameters.
        :type automation: MaintenanceWindowTaskInvocationParametersAutomation
        """

        self._automation = automation

    @property
    def step_functions(self):
        """Gets the step_functions of this MaintenanceWindowTaskInvocationParameters.


        :return: The step_functions of this MaintenanceWindowTaskInvocationParameters.
        :rtype: MaintenanceWindowTaskInvocationParametersStepFunctions
        """
        return self._step_functions

    @step_functions.setter
    def step_functions(self, step_functions):
        """Sets the step_functions of this MaintenanceWindowTaskInvocationParameters.


        :param step_functions: The step_functions of this MaintenanceWindowTaskInvocationParameters.
        :type step_functions: MaintenanceWindowTaskInvocationParametersStepFunctions
        """

        self._step_functions = step_functions

    @property
    def _lambda(self):
        """Gets the _lambda of this MaintenanceWindowTaskInvocationParameters.


        :return: The _lambda of this MaintenanceWindowTaskInvocationParameters.
        :rtype: MaintenanceWindowTaskInvocationParametersLambda
        """
        return self.__lambda

    @_lambda.setter
    def _lambda(self, _lambda):
        """Sets the _lambda of this MaintenanceWindowTaskInvocationParameters.


        :param _lambda: The _lambda of this MaintenanceWindowTaskInvocationParameters.
        :type _lambda: MaintenanceWindowTaskInvocationParametersLambda
        """

        self.__lambda = _lambda
