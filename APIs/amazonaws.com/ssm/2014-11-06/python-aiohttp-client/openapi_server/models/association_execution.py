# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.alarm_configuration import AlarmConfiguration
from openapi_server import util


class AssociationExecution(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, association_id: str=None, association_version: str=None, execution_id: str=None, status: str=None, detailed_status: str=None, created_time: datetime=None, last_execution_date: datetime=None, resource_count_by_status: str=None, alarm_configuration: AlarmConfiguration=None, triggered_alarms: List=None):
        """AssociationExecution - a model defined in OpenAPI

        :param association_id: The association_id of this AssociationExecution.
        :param association_version: The association_version of this AssociationExecution.
        :param execution_id: The execution_id of this AssociationExecution.
        :param status: The status of this AssociationExecution.
        :param detailed_status: The detailed_status of this AssociationExecution.
        :param created_time: The created_time of this AssociationExecution.
        :param last_execution_date: The last_execution_date of this AssociationExecution.
        :param resource_count_by_status: The resource_count_by_status of this AssociationExecution.
        :param alarm_configuration: The alarm_configuration of this AssociationExecution.
        :param triggered_alarms: The triggered_alarms of this AssociationExecution.
        """
        self.openapi_types = {
            'association_id': str,
            'association_version': str,
            'execution_id': str,
            'status': str,
            'detailed_status': str,
            'created_time': datetime,
            'last_execution_date': datetime,
            'resource_count_by_status': str,
            'alarm_configuration': AlarmConfiguration,
            'triggered_alarms': List
        }

        self.attribute_map = {
            'association_id': 'AssociationId',
            'association_version': 'AssociationVersion',
            'execution_id': 'ExecutionId',
            'status': 'Status',
            'detailed_status': 'DetailedStatus',
            'created_time': 'CreatedTime',
            'last_execution_date': 'LastExecutionDate',
            'resource_count_by_status': 'ResourceCountByStatus',
            'alarm_configuration': 'AlarmConfiguration',
            'triggered_alarms': 'TriggeredAlarms'
        }

        self._association_id = association_id
        self._association_version = association_version
        self._execution_id = execution_id
        self._status = status
        self._detailed_status = detailed_status
        self._created_time = created_time
        self._last_execution_date = last_execution_date
        self._resource_count_by_status = resource_count_by_status
        self._alarm_configuration = alarm_configuration
        self._triggered_alarms = triggered_alarms

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssociationExecution':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AssociationExecution of this AssociationExecution.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def association_id(self):
        """Gets the association_id of this AssociationExecution.


        :return: The association_id of this AssociationExecution.
        :rtype: str
        """
        return self._association_id

    @association_id.setter
    def association_id(self, association_id):
        """Sets the association_id of this AssociationExecution.


        :param association_id: The association_id of this AssociationExecution.
        :type association_id: str
        """

        self._association_id = association_id

    @property
    def association_version(self):
        """Gets the association_version of this AssociationExecution.


        :return: The association_version of this AssociationExecution.
        :rtype: str
        """
        return self._association_version

    @association_version.setter
    def association_version(self, association_version):
        """Sets the association_version of this AssociationExecution.


        :param association_version: The association_version of this AssociationExecution.
        :type association_version: str
        """

        self._association_version = association_version

    @property
    def execution_id(self):
        """Gets the execution_id of this AssociationExecution.


        :return: The execution_id of this AssociationExecution.
        :rtype: str
        """
        return self._execution_id

    @execution_id.setter
    def execution_id(self, execution_id):
        """Sets the execution_id of this AssociationExecution.


        :param execution_id: The execution_id of this AssociationExecution.
        :type execution_id: str
        """

        self._execution_id = execution_id

    @property
    def status(self):
        """Gets the status of this AssociationExecution.


        :return: The status of this AssociationExecution.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this AssociationExecution.


        :param status: The status of this AssociationExecution.
        :type status: str
        """

        self._status = status

    @property
    def detailed_status(self):
        """Gets the detailed_status of this AssociationExecution.


        :return: The detailed_status of this AssociationExecution.
        :rtype: str
        """
        return self._detailed_status

    @detailed_status.setter
    def detailed_status(self, detailed_status):
        """Sets the detailed_status of this AssociationExecution.


        :param detailed_status: The detailed_status of this AssociationExecution.
        :type detailed_status: str
        """

        self._detailed_status = detailed_status

    @property
    def created_time(self):
        """Gets the created_time of this AssociationExecution.


        :return: The created_time of this AssociationExecution.
        :rtype: datetime
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """Sets the created_time of this AssociationExecution.


        :param created_time: The created_time of this AssociationExecution.
        :type created_time: datetime
        """

        self._created_time = created_time

    @property
    def last_execution_date(self):
        """Gets the last_execution_date of this AssociationExecution.


        :return: The last_execution_date of this AssociationExecution.
        :rtype: datetime
        """
        return self._last_execution_date

    @last_execution_date.setter
    def last_execution_date(self, last_execution_date):
        """Sets the last_execution_date of this AssociationExecution.


        :param last_execution_date: The last_execution_date of this AssociationExecution.
        :type last_execution_date: datetime
        """

        self._last_execution_date = last_execution_date

    @property
    def resource_count_by_status(self):
        """Gets the resource_count_by_status of this AssociationExecution.


        :return: The resource_count_by_status of this AssociationExecution.
        :rtype: str
        """
        return self._resource_count_by_status

    @resource_count_by_status.setter
    def resource_count_by_status(self, resource_count_by_status):
        """Sets the resource_count_by_status of this AssociationExecution.


        :param resource_count_by_status: The resource_count_by_status of this AssociationExecution.
        :type resource_count_by_status: str
        """

        self._resource_count_by_status = resource_count_by_status

    @property
    def alarm_configuration(self):
        """Gets the alarm_configuration of this AssociationExecution.


        :return: The alarm_configuration of this AssociationExecution.
        :rtype: AlarmConfiguration
        """
        return self._alarm_configuration

    @alarm_configuration.setter
    def alarm_configuration(self, alarm_configuration):
        """Sets the alarm_configuration of this AssociationExecution.


        :param alarm_configuration: The alarm_configuration of this AssociationExecution.
        :type alarm_configuration: AlarmConfiguration
        """

        self._alarm_configuration = alarm_configuration

    @property
    def triggered_alarms(self):
        """Gets the triggered_alarms of this AssociationExecution.


        :return: The triggered_alarms of this AssociationExecution.
        :rtype: List
        """
        return self._triggered_alarms

    @triggered_alarms.setter
    def triggered_alarms(self, triggered_alarms):
        """Sets the triggered_alarms of this AssociationExecution.


        :param triggered_alarms: The triggered_alarms of this AssociationExecution.
        :type triggered_alarms: List
        """

        self._triggered_alarms = triggered_alarms
