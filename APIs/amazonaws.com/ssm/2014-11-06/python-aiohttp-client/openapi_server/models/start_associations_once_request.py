# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StartAssociationsOnceRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, association_ids: List=None):
        """StartAssociationsOnceRequest - a model defined in OpenAPI

        :param association_ids: The association_ids of this StartAssociationsOnceRequest.
        """
        self.openapi_types = {
            'association_ids': List
        }

        self.attribute_map = {
            'association_ids': 'AssociationIds'
        }

        self._association_ids = association_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartAssociationsOnceRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartAssociationsOnceRequest of this StartAssociationsOnceRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def association_ids(self):
        """Gets the association_ids of this StartAssociationsOnceRequest.


        :return: The association_ids of this StartAssociationsOnceRequest.
        :rtype: List
        """
        return self._association_ids

    @association_ids.setter
    def association_ids(self, association_ids):
        """Sets the association_ids of this StartAssociationsOnceRequest.


        :param association_ids: The association_ids of this StartAssociationsOnceRequest.
        :type association_ids: List
        """
        if association_ids is None:
            raise ValueError("Invalid value for `association_ids`, must not be `None`")

        self._association_ids = association_ids
