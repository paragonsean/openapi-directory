# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.parameter_tier import ParameterTier
from openapi_server.models.parameter_type import ParameterType
from openapi_server import util


class ParameterMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, type: ParameterType=None, key_id: str=None, last_modified_date: datetime=None, last_modified_user: str=None, description: str=None, allowed_pattern: str=None, version: int=None, tier: ParameterTier=None, policies: List=None, data_type: str=None):
        """ParameterMetadata - a model defined in OpenAPI

        :param name: The name of this ParameterMetadata.
        :param type: The type of this ParameterMetadata.
        :param key_id: The key_id of this ParameterMetadata.
        :param last_modified_date: The last_modified_date of this ParameterMetadata.
        :param last_modified_user: The last_modified_user of this ParameterMetadata.
        :param description: The description of this ParameterMetadata.
        :param allowed_pattern: The allowed_pattern of this ParameterMetadata.
        :param version: The version of this ParameterMetadata.
        :param tier: The tier of this ParameterMetadata.
        :param policies: The policies of this ParameterMetadata.
        :param data_type: The data_type of this ParameterMetadata.
        """
        self.openapi_types = {
            'name': str,
            'type': ParameterType,
            'key_id': str,
            'last_modified_date': datetime,
            'last_modified_user': str,
            'description': str,
            'allowed_pattern': str,
            'version': int,
            'tier': ParameterTier,
            'policies': List,
            'data_type': str
        }

        self.attribute_map = {
            'name': 'Name',
            'type': 'Type',
            'key_id': 'KeyId',
            'last_modified_date': 'LastModifiedDate',
            'last_modified_user': 'LastModifiedUser',
            'description': 'Description',
            'allowed_pattern': 'AllowedPattern',
            'version': 'Version',
            'tier': 'Tier',
            'policies': 'Policies',
            'data_type': 'DataType'
        }

        self._name = name
        self._type = type
        self._key_id = key_id
        self._last_modified_date = last_modified_date
        self._last_modified_user = last_modified_user
        self._description = description
        self._allowed_pattern = allowed_pattern
        self._version = version
        self._tier = tier
        self._policies = policies
        self._data_type = data_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ParameterMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ParameterMetadata of this ParameterMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this ParameterMetadata.


        :return: The name of this ParameterMetadata.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ParameterMetadata.


        :param name: The name of this ParameterMetadata.
        :type name: str
        """

        self._name = name

    @property
    def type(self):
        """Gets the type of this ParameterMetadata.


        :return: The type of this ParameterMetadata.
        :rtype: ParameterType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ParameterMetadata.


        :param type: The type of this ParameterMetadata.
        :type type: ParameterType
        """

        self._type = type

    @property
    def key_id(self):
        """Gets the key_id of this ParameterMetadata.


        :return: The key_id of this ParameterMetadata.
        :rtype: str
        """
        return self._key_id

    @key_id.setter
    def key_id(self, key_id):
        """Sets the key_id of this ParameterMetadata.


        :param key_id: The key_id of this ParameterMetadata.
        :type key_id: str
        """

        self._key_id = key_id

    @property
    def last_modified_date(self):
        """Gets the last_modified_date of this ParameterMetadata.


        :return: The last_modified_date of this ParameterMetadata.
        :rtype: datetime
        """
        return self._last_modified_date

    @last_modified_date.setter
    def last_modified_date(self, last_modified_date):
        """Sets the last_modified_date of this ParameterMetadata.


        :param last_modified_date: The last_modified_date of this ParameterMetadata.
        :type last_modified_date: datetime
        """

        self._last_modified_date = last_modified_date

    @property
    def last_modified_user(self):
        """Gets the last_modified_user of this ParameterMetadata.


        :return: The last_modified_user of this ParameterMetadata.
        :rtype: str
        """
        return self._last_modified_user

    @last_modified_user.setter
    def last_modified_user(self, last_modified_user):
        """Sets the last_modified_user of this ParameterMetadata.


        :param last_modified_user: The last_modified_user of this ParameterMetadata.
        :type last_modified_user: str
        """

        self._last_modified_user = last_modified_user

    @property
    def description(self):
        """Gets the description of this ParameterMetadata.


        :return: The description of this ParameterMetadata.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ParameterMetadata.


        :param description: The description of this ParameterMetadata.
        :type description: str
        """

        self._description = description

    @property
    def allowed_pattern(self):
        """Gets the allowed_pattern of this ParameterMetadata.


        :return: The allowed_pattern of this ParameterMetadata.
        :rtype: str
        """
        return self._allowed_pattern

    @allowed_pattern.setter
    def allowed_pattern(self, allowed_pattern):
        """Sets the allowed_pattern of this ParameterMetadata.


        :param allowed_pattern: The allowed_pattern of this ParameterMetadata.
        :type allowed_pattern: str
        """

        self._allowed_pattern = allowed_pattern

    @property
    def version(self):
        """Gets the version of this ParameterMetadata.


        :return: The version of this ParameterMetadata.
        :rtype: int
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this ParameterMetadata.


        :param version: The version of this ParameterMetadata.
        :type version: int
        """

        self._version = version

    @property
    def tier(self):
        """Gets the tier of this ParameterMetadata.


        :return: The tier of this ParameterMetadata.
        :rtype: ParameterTier
        """
        return self._tier

    @tier.setter
    def tier(self, tier):
        """Sets the tier of this ParameterMetadata.


        :param tier: The tier of this ParameterMetadata.
        :type tier: ParameterTier
        """

        self._tier = tier

    @property
    def policies(self):
        """Gets the policies of this ParameterMetadata.


        :return: The policies of this ParameterMetadata.
        :rtype: List
        """
        return self._policies

    @policies.setter
    def policies(self, policies):
        """Sets the policies of this ParameterMetadata.


        :param policies: The policies of this ParameterMetadata.
        :type policies: List
        """

        self._policies = policies

    @property
    def data_type(self):
        """Gets the data_type of this ParameterMetadata.


        :return: The data_type of this ParameterMetadata.
        :rtype: str
        """
        return self._data_type

    @data_type.setter
    def data_type(self, data_type):
        """Sets the data_type of this ParameterMetadata.


        :param data_type: The data_type of this ParameterMetadata.
        :type data_type: str
        """

        self._data_type = data_type
