# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StartChangeRequestExecutionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, scheduled_time: datetime=None, document_name: str=None, document_version: str=None, parameters: Dict=None, change_request_name: str=None, client_token: str=None, auto_approve: bool=None, runbooks: List=None, tags: List=None, scheduled_end_time: datetime=None, change_details: str=None):
        """StartChangeRequestExecutionRequest - a model defined in OpenAPI

        :param scheduled_time: The scheduled_time of this StartChangeRequestExecutionRequest.
        :param document_name: The document_name of this StartChangeRequestExecutionRequest.
        :param document_version: The document_version of this StartChangeRequestExecutionRequest.
        :param parameters: The parameters of this StartChangeRequestExecutionRequest.
        :param change_request_name: The change_request_name of this StartChangeRequestExecutionRequest.
        :param client_token: The client_token of this StartChangeRequestExecutionRequest.
        :param auto_approve: The auto_approve of this StartChangeRequestExecutionRequest.
        :param runbooks: The runbooks of this StartChangeRequestExecutionRequest.
        :param tags: The tags of this StartChangeRequestExecutionRequest.
        :param scheduled_end_time: The scheduled_end_time of this StartChangeRequestExecutionRequest.
        :param change_details: The change_details of this StartChangeRequestExecutionRequest.
        """
        self.openapi_types = {
            'scheduled_time': datetime,
            'document_name': str,
            'document_version': str,
            'parameters': Dict,
            'change_request_name': str,
            'client_token': str,
            'auto_approve': bool,
            'runbooks': List,
            'tags': List,
            'scheduled_end_time': datetime,
            'change_details': str
        }

        self.attribute_map = {
            'scheduled_time': 'ScheduledTime',
            'document_name': 'DocumentName',
            'document_version': 'DocumentVersion',
            'parameters': 'Parameters',
            'change_request_name': 'ChangeRequestName',
            'client_token': 'ClientToken',
            'auto_approve': 'AutoApprove',
            'runbooks': 'Runbooks',
            'tags': 'Tags',
            'scheduled_end_time': 'ScheduledEndTime',
            'change_details': 'ChangeDetails'
        }

        self._scheduled_time = scheduled_time
        self._document_name = document_name
        self._document_version = document_version
        self._parameters = parameters
        self._change_request_name = change_request_name
        self._client_token = client_token
        self._auto_approve = auto_approve
        self._runbooks = runbooks
        self._tags = tags
        self._scheduled_end_time = scheduled_end_time
        self._change_details = change_details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartChangeRequestExecutionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartChangeRequestExecutionRequest of this StartChangeRequestExecutionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def scheduled_time(self):
        """Gets the scheduled_time of this StartChangeRequestExecutionRequest.


        :return: The scheduled_time of this StartChangeRequestExecutionRequest.
        :rtype: datetime
        """
        return self._scheduled_time

    @scheduled_time.setter
    def scheduled_time(self, scheduled_time):
        """Sets the scheduled_time of this StartChangeRequestExecutionRequest.


        :param scheduled_time: The scheduled_time of this StartChangeRequestExecutionRequest.
        :type scheduled_time: datetime
        """

        self._scheduled_time = scheduled_time

    @property
    def document_name(self):
        """Gets the document_name of this StartChangeRequestExecutionRequest.


        :return: The document_name of this StartChangeRequestExecutionRequest.
        :rtype: str
        """
        return self._document_name

    @document_name.setter
    def document_name(self, document_name):
        """Sets the document_name of this StartChangeRequestExecutionRequest.


        :param document_name: The document_name of this StartChangeRequestExecutionRequest.
        :type document_name: str
        """
        if document_name is None:
            raise ValueError("Invalid value for `document_name`, must not be `None`")

        self._document_name = document_name

    @property
    def document_version(self):
        """Gets the document_version of this StartChangeRequestExecutionRequest.


        :return: The document_version of this StartChangeRequestExecutionRequest.
        :rtype: str
        """
        return self._document_version

    @document_version.setter
    def document_version(self, document_version):
        """Sets the document_version of this StartChangeRequestExecutionRequest.


        :param document_version: The document_version of this StartChangeRequestExecutionRequest.
        :type document_version: str
        """

        self._document_version = document_version

    @property
    def parameters(self):
        """Gets the parameters of this StartChangeRequestExecutionRequest.


        :return: The parameters of this StartChangeRequestExecutionRequest.
        :rtype: Dict
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this StartChangeRequestExecutionRequest.


        :param parameters: The parameters of this StartChangeRequestExecutionRequest.
        :type parameters: Dict
        """

        self._parameters = parameters

    @property
    def change_request_name(self):
        """Gets the change_request_name of this StartChangeRequestExecutionRequest.


        :return: The change_request_name of this StartChangeRequestExecutionRequest.
        :rtype: str
        """
        return self._change_request_name

    @change_request_name.setter
    def change_request_name(self, change_request_name):
        """Sets the change_request_name of this StartChangeRequestExecutionRequest.


        :param change_request_name: The change_request_name of this StartChangeRequestExecutionRequest.
        :type change_request_name: str
        """

        self._change_request_name = change_request_name

    @property
    def client_token(self):
        """Gets the client_token of this StartChangeRequestExecutionRequest.


        :return: The client_token of this StartChangeRequestExecutionRequest.
        :rtype: str
        """
        return self._client_token

    @client_token.setter
    def client_token(self, client_token):
        """Sets the client_token of this StartChangeRequestExecutionRequest.


        :param client_token: The client_token of this StartChangeRequestExecutionRequest.
        :type client_token: str
        """

        self._client_token = client_token

    @property
    def auto_approve(self):
        """Gets the auto_approve of this StartChangeRequestExecutionRequest.


        :return: The auto_approve of this StartChangeRequestExecutionRequest.
        :rtype: bool
        """
        return self._auto_approve

    @auto_approve.setter
    def auto_approve(self, auto_approve):
        """Sets the auto_approve of this StartChangeRequestExecutionRequest.


        :param auto_approve: The auto_approve of this StartChangeRequestExecutionRequest.
        :type auto_approve: bool
        """

        self._auto_approve = auto_approve

    @property
    def runbooks(self):
        """Gets the runbooks of this StartChangeRequestExecutionRequest.


        :return: The runbooks of this StartChangeRequestExecutionRequest.
        :rtype: List
        """
        return self._runbooks

    @runbooks.setter
    def runbooks(self, runbooks):
        """Sets the runbooks of this StartChangeRequestExecutionRequest.


        :param runbooks: The runbooks of this StartChangeRequestExecutionRequest.
        :type runbooks: List
        """
        if runbooks is None:
            raise ValueError("Invalid value for `runbooks`, must not be `None`")

        self._runbooks = runbooks

    @property
    def tags(self):
        """Gets the tags of this StartChangeRequestExecutionRequest.


        :return: The tags of this StartChangeRequestExecutionRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this StartChangeRequestExecutionRequest.


        :param tags: The tags of this StartChangeRequestExecutionRequest.
        :type tags: List
        """

        self._tags = tags

    @property
    def scheduled_end_time(self):
        """Gets the scheduled_end_time of this StartChangeRequestExecutionRequest.


        :return: The scheduled_end_time of this StartChangeRequestExecutionRequest.
        :rtype: datetime
        """
        return self._scheduled_end_time

    @scheduled_end_time.setter
    def scheduled_end_time(self, scheduled_end_time):
        """Sets the scheduled_end_time of this StartChangeRequestExecutionRequest.


        :param scheduled_end_time: The scheduled_end_time of this StartChangeRequestExecutionRequest.
        :type scheduled_end_time: datetime
        """

        self._scheduled_end_time = scheduled_end_time

    @property
    def change_details(self):
        """Gets the change_details of this StartChangeRequestExecutionRequest.


        :return: The change_details of this StartChangeRequestExecutionRequest.
        :rtype: str
        """
        return self._change_details

    @change_details.setter
    def change_details(self, change_details):
        """Sets the change_details of this StartChangeRequestExecutionRequest.


        :param change_details: The change_details of this StartChangeRequestExecutionRequest.
        :type change_details: str
        """

        self._change_details = change_details
