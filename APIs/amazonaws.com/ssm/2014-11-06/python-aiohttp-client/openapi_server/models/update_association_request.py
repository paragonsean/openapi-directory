# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.alarm_configuration import AlarmConfiguration
from openapi_server.models.association_compliance_severity import AssociationComplianceSeverity
from openapi_server.models.association_sync_compliance import AssociationSyncCompliance
from openapi_server.models.update_association_request_output_location import UpdateAssociationRequestOutputLocation
from openapi_server import util


class UpdateAssociationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, association_id: str=None, parameters: Dict=None, document_version: str=None, schedule_expression: str=None, output_location: UpdateAssociationRequestOutputLocation=None, name: str=None, targets: List=None, association_name: str=None, association_version: str=None, automation_target_parameter_name: str=None, max_errors: str=None, max_concurrency: str=None, compliance_severity: AssociationComplianceSeverity=None, sync_compliance: AssociationSyncCompliance=None, apply_only_at_cron_interval: bool=None, calendar_names: List=None, target_locations: List=None, schedule_offset: int=None, target_maps: List=None, alarm_configuration: AlarmConfiguration=None):
        """UpdateAssociationRequest - a model defined in OpenAPI

        :param association_id: The association_id of this UpdateAssociationRequest.
        :param parameters: The parameters of this UpdateAssociationRequest.
        :param document_version: The document_version of this UpdateAssociationRequest.
        :param schedule_expression: The schedule_expression of this UpdateAssociationRequest.
        :param output_location: The output_location of this UpdateAssociationRequest.
        :param name: The name of this UpdateAssociationRequest.
        :param targets: The targets of this UpdateAssociationRequest.
        :param association_name: The association_name of this UpdateAssociationRequest.
        :param association_version: The association_version of this UpdateAssociationRequest.
        :param automation_target_parameter_name: The automation_target_parameter_name of this UpdateAssociationRequest.
        :param max_errors: The max_errors of this UpdateAssociationRequest.
        :param max_concurrency: The max_concurrency of this UpdateAssociationRequest.
        :param compliance_severity: The compliance_severity of this UpdateAssociationRequest.
        :param sync_compliance: The sync_compliance of this UpdateAssociationRequest.
        :param apply_only_at_cron_interval: The apply_only_at_cron_interval of this UpdateAssociationRequest.
        :param calendar_names: The calendar_names of this UpdateAssociationRequest.
        :param target_locations: The target_locations of this UpdateAssociationRequest.
        :param schedule_offset: The schedule_offset of this UpdateAssociationRequest.
        :param target_maps: The target_maps of this UpdateAssociationRequest.
        :param alarm_configuration: The alarm_configuration of this UpdateAssociationRequest.
        """
        self.openapi_types = {
            'association_id': str,
            'parameters': Dict,
            'document_version': str,
            'schedule_expression': str,
            'output_location': UpdateAssociationRequestOutputLocation,
            'name': str,
            'targets': List,
            'association_name': str,
            'association_version': str,
            'automation_target_parameter_name': str,
            'max_errors': str,
            'max_concurrency': str,
            'compliance_severity': AssociationComplianceSeverity,
            'sync_compliance': AssociationSyncCompliance,
            'apply_only_at_cron_interval': bool,
            'calendar_names': List,
            'target_locations': List,
            'schedule_offset': int,
            'target_maps': List,
            'alarm_configuration': AlarmConfiguration
        }

        self.attribute_map = {
            'association_id': 'AssociationId',
            'parameters': 'Parameters',
            'document_version': 'DocumentVersion',
            'schedule_expression': 'ScheduleExpression',
            'output_location': 'OutputLocation',
            'name': 'Name',
            'targets': 'Targets',
            'association_name': 'AssociationName',
            'association_version': 'AssociationVersion',
            'automation_target_parameter_name': 'AutomationTargetParameterName',
            'max_errors': 'MaxErrors',
            'max_concurrency': 'MaxConcurrency',
            'compliance_severity': 'ComplianceSeverity',
            'sync_compliance': 'SyncCompliance',
            'apply_only_at_cron_interval': 'ApplyOnlyAtCronInterval',
            'calendar_names': 'CalendarNames',
            'target_locations': 'TargetLocations',
            'schedule_offset': 'ScheduleOffset',
            'target_maps': 'TargetMaps',
            'alarm_configuration': 'AlarmConfiguration'
        }

        self._association_id = association_id
        self._parameters = parameters
        self._document_version = document_version
        self._schedule_expression = schedule_expression
        self._output_location = output_location
        self._name = name
        self._targets = targets
        self._association_name = association_name
        self._association_version = association_version
        self._automation_target_parameter_name = automation_target_parameter_name
        self._max_errors = max_errors
        self._max_concurrency = max_concurrency
        self._compliance_severity = compliance_severity
        self._sync_compliance = sync_compliance
        self._apply_only_at_cron_interval = apply_only_at_cron_interval
        self._calendar_names = calendar_names
        self._target_locations = target_locations
        self._schedule_offset = schedule_offset
        self._target_maps = target_maps
        self._alarm_configuration = alarm_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateAssociationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateAssociationRequest of this UpdateAssociationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def association_id(self):
        """Gets the association_id of this UpdateAssociationRequest.


        :return: The association_id of this UpdateAssociationRequest.
        :rtype: str
        """
        return self._association_id

    @association_id.setter
    def association_id(self, association_id):
        """Sets the association_id of this UpdateAssociationRequest.


        :param association_id: The association_id of this UpdateAssociationRequest.
        :type association_id: str
        """
        if association_id is None:
            raise ValueError("Invalid value for `association_id`, must not be `None`")

        self._association_id = association_id

    @property
    def parameters(self):
        """Gets the parameters of this UpdateAssociationRequest.


        :return: The parameters of this UpdateAssociationRequest.
        :rtype: Dict
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this UpdateAssociationRequest.


        :param parameters: The parameters of this UpdateAssociationRequest.
        :type parameters: Dict
        """

        self._parameters = parameters

    @property
    def document_version(self):
        """Gets the document_version of this UpdateAssociationRequest.


        :return: The document_version of this UpdateAssociationRequest.
        :rtype: str
        """
        return self._document_version

    @document_version.setter
    def document_version(self, document_version):
        """Sets the document_version of this UpdateAssociationRequest.


        :param document_version: The document_version of this UpdateAssociationRequest.
        :type document_version: str
        """

        self._document_version = document_version

    @property
    def schedule_expression(self):
        """Gets the schedule_expression of this UpdateAssociationRequest.


        :return: The schedule_expression of this UpdateAssociationRequest.
        :rtype: str
        """
        return self._schedule_expression

    @schedule_expression.setter
    def schedule_expression(self, schedule_expression):
        """Sets the schedule_expression of this UpdateAssociationRequest.


        :param schedule_expression: The schedule_expression of this UpdateAssociationRequest.
        :type schedule_expression: str
        """

        self._schedule_expression = schedule_expression

    @property
    def output_location(self):
        """Gets the output_location of this UpdateAssociationRequest.


        :return: The output_location of this UpdateAssociationRequest.
        :rtype: UpdateAssociationRequestOutputLocation
        """
        return self._output_location

    @output_location.setter
    def output_location(self, output_location):
        """Sets the output_location of this UpdateAssociationRequest.


        :param output_location: The output_location of this UpdateAssociationRequest.
        :type output_location: UpdateAssociationRequestOutputLocation
        """

        self._output_location = output_location

    @property
    def name(self):
        """Gets the name of this UpdateAssociationRequest.


        :return: The name of this UpdateAssociationRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateAssociationRequest.


        :param name: The name of this UpdateAssociationRequest.
        :type name: str
        """

        self._name = name

    @property
    def targets(self):
        """Gets the targets of this UpdateAssociationRequest.


        :return: The targets of this UpdateAssociationRequest.
        :rtype: List
        """
        return self._targets

    @targets.setter
    def targets(self, targets):
        """Sets the targets of this UpdateAssociationRequest.


        :param targets: The targets of this UpdateAssociationRequest.
        :type targets: List
        """

        self._targets = targets

    @property
    def association_name(self):
        """Gets the association_name of this UpdateAssociationRequest.


        :return: The association_name of this UpdateAssociationRequest.
        :rtype: str
        """
        return self._association_name

    @association_name.setter
    def association_name(self, association_name):
        """Sets the association_name of this UpdateAssociationRequest.


        :param association_name: The association_name of this UpdateAssociationRequest.
        :type association_name: str
        """

        self._association_name = association_name

    @property
    def association_version(self):
        """Gets the association_version of this UpdateAssociationRequest.


        :return: The association_version of this UpdateAssociationRequest.
        :rtype: str
        """
        return self._association_version

    @association_version.setter
    def association_version(self, association_version):
        """Sets the association_version of this UpdateAssociationRequest.


        :param association_version: The association_version of this UpdateAssociationRequest.
        :type association_version: str
        """

        self._association_version = association_version

    @property
    def automation_target_parameter_name(self):
        """Gets the automation_target_parameter_name of this UpdateAssociationRequest.


        :return: The automation_target_parameter_name of this UpdateAssociationRequest.
        :rtype: str
        """
        return self._automation_target_parameter_name

    @automation_target_parameter_name.setter
    def automation_target_parameter_name(self, automation_target_parameter_name):
        """Sets the automation_target_parameter_name of this UpdateAssociationRequest.


        :param automation_target_parameter_name: The automation_target_parameter_name of this UpdateAssociationRequest.
        :type automation_target_parameter_name: str
        """

        self._automation_target_parameter_name = automation_target_parameter_name

    @property
    def max_errors(self):
        """Gets the max_errors of this UpdateAssociationRequest.


        :return: The max_errors of this UpdateAssociationRequest.
        :rtype: str
        """
        return self._max_errors

    @max_errors.setter
    def max_errors(self, max_errors):
        """Sets the max_errors of this UpdateAssociationRequest.


        :param max_errors: The max_errors of this UpdateAssociationRequest.
        :type max_errors: str
        """

        self._max_errors = max_errors

    @property
    def max_concurrency(self):
        """Gets the max_concurrency of this UpdateAssociationRequest.


        :return: The max_concurrency of this UpdateAssociationRequest.
        :rtype: str
        """
        return self._max_concurrency

    @max_concurrency.setter
    def max_concurrency(self, max_concurrency):
        """Sets the max_concurrency of this UpdateAssociationRequest.


        :param max_concurrency: The max_concurrency of this UpdateAssociationRequest.
        :type max_concurrency: str
        """

        self._max_concurrency = max_concurrency

    @property
    def compliance_severity(self):
        """Gets the compliance_severity of this UpdateAssociationRequest.


        :return: The compliance_severity of this UpdateAssociationRequest.
        :rtype: AssociationComplianceSeverity
        """
        return self._compliance_severity

    @compliance_severity.setter
    def compliance_severity(self, compliance_severity):
        """Sets the compliance_severity of this UpdateAssociationRequest.


        :param compliance_severity: The compliance_severity of this UpdateAssociationRequest.
        :type compliance_severity: AssociationComplianceSeverity
        """

        self._compliance_severity = compliance_severity

    @property
    def sync_compliance(self):
        """Gets the sync_compliance of this UpdateAssociationRequest.


        :return: The sync_compliance of this UpdateAssociationRequest.
        :rtype: AssociationSyncCompliance
        """
        return self._sync_compliance

    @sync_compliance.setter
    def sync_compliance(self, sync_compliance):
        """Sets the sync_compliance of this UpdateAssociationRequest.


        :param sync_compliance: The sync_compliance of this UpdateAssociationRequest.
        :type sync_compliance: AssociationSyncCompliance
        """

        self._sync_compliance = sync_compliance

    @property
    def apply_only_at_cron_interval(self):
        """Gets the apply_only_at_cron_interval of this UpdateAssociationRequest.


        :return: The apply_only_at_cron_interval of this UpdateAssociationRequest.
        :rtype: bool
        """
        return self._apply_only_at_cron_interval

    @apply_only_at_cron_interval.setter
    def apply_only_at_cron_interval(self, apply_only_at_cron_interval):
        """Sets the apply_only_at_cron_interval of this UpdateAssociationRequest.


        :param apply_only_at_cron_interval: The apply_only_at_cron_interval of this UpdateAssociationRequest.
        :type apply_only_at_cron_interval: bool
        """

        self._apply_only_at_cron_interval = apply_only_at_cron_interval

    @property
    def calendar_names(self):
        """Gets the calendar_names of this UpdateAssociationRequest.


        :return: The calendar_names of this UpdateAssociationRequest.
        :rtype: List
        """
        return self._calendar_names

    @calendar_names.setter
    def calendar_names(self, calendar_names):
        """Sets the calendar_names of this UpdateAssociationRequest.


        :param calendar_names: The calendar_names of this UpdateAssociationRequest.
        :type calendar_names: List
        """

        self._calendar_names = calendar_names

    @property
    def target_locations(self):
        """Gets the target_locations of this UpdateAssociationRequest.


        :return: The target_locations of this UpdateAssociationRequest.
        :rtype: List
        """
        return self._target_locations

    @target_locations.setter
    def target_locations(self, target_locations):
        """Sets the target_locations of this UpdateAssociationRequest.


        :param target_locations: The target_locations of this UpdateAssociationRequest.
        :type target_locations: List
        """

        self._target_locations = target_locations

    @property
    def schedule_offset(self):
        """Gets the schedule_offset of this UpdateAssociationRequest.


        :return: The schedule_offset of this UpdateAssociationRequest.
        :rtype: int
        """
        return self._schedule_offset

    @schedule_offset.setter
    def schedule_offset(self, schedule_offset):
        """Sets the schedule_offset of this UpdateAssociationRequest.


        :param schedule_offset: The schedule_offset of this UpdateAssociationRequest.
        :type schedule_offset: int
        """

        self._schedule_offset = schedule_offset

    @property
    def target_maps(self):
        """Gets the target_maps of this UpdateAssociationRequest.


        :return: The target_maps of this UpdateAssociationRequest.
        :rtype: List
        """
        return self._target_maps

    @target_maps.setter
    def target_maps(self, target_maps):
        """Sets the target_maps of this UpdateAssociationRequest.


        :param target_maps: The target_maps of this UpdateAssociationRequest.
        :type target_maps: List
        """

        self._target_maps = target_maps

    @property
    def alarm_configuration(self):
        """Gets the alarm_configuration of this UpdateAssociationRequest.


        :return: The alarm_configuration of this UpdateAssociationRequest.
        :rtype: AlarmConfiguration
        """
        return self._alarm_configuration

    @alarm_configuration.setter
    def alarm_configuration(self, alarm_configuration):
        """Sets the alarm_configuration of this UpdateAssociationRequest.


        :param alarm_configuration: The alarm_configuration of this UpdateAssociationRequest.
        :type alarm_configuration: AlarmConfiguration
        """

        self._alarm_configuration = alarm_configuration
