# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_resource_data_sync_request_sync_source import UpdateResourceDataSyncRequestSyncSource
from openapi_server import util


class UpdateResourceDataSyncRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sync_name: str=None, sync_type: str=None, sync_source: UpdateResourceDataSyncRequestSyncSource=None):
        """UpdateResourceDataSyncRequest - a model defined in OpenAPI

        :param sync_name: The sync_name of this UpdateResourceDataSyncRequest.
        :param sync_type: The sync_type of this UpdateResourceDataSyncRequest.
        :param sync_source: The sync_source of this UpdateResourceDataSyncRequest.
        """
        self.openapi_types = {
            'sync_name': str,
            'sync_type': str,
            'sync_source': UpdateResourceDataSyncRequestSyncSource
        }

        self.attribute_map = {
            'sync_name': 'SyncName',
            'sync_type': 'SyncType',
            'sync_source': 'SyncSource'
        }

        self._sync_name = sync_name
        self._sync_type = sync_type
        self._sync_source = sync_source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateResourceDataSyncRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateResourceDataSyncRequest of this UpdateResourceDataSyncRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sync_name(self):
        """Gets the sync_name of this UpdateResourceDataSyncRequest.


        :return: The sync_name of this UpdateResourceDataSyncRequest.
        :rtype: str
        """
        return self._sync_name

    @sync_name.setter
    def sync_name(self, sync_name):
        """Sets the sync_name of this UpdateResourceDataSyncRequest.


        :param sync_name: The sync_name of this UpdateResourceDataSyncRequest.
        :type sync_name: str
        """
        if sync_name is None:
            raise ValueError("Invalid value for `sync_name`, must not be `None`")

        self._sync_name = sync_name

    @property
    def sync_type(self):
        """Gets the sync_type of this UpdateResourceDataSyncRequest.


        :return: The sync_type of this UpdateResourceDataSyncRequest.
        :rtype: str
        """
        return self._sync_type

    @sync_type.setter
    def sync_type(self, sync_type):
        """Sets the sync_type of this UpdateResourceDataSyncRequest.


        :param sync_type: The sync_type of this UpdateResourceDataSyncRequest.
        :type sync_type: str
        """
        if sync_type is None:
            raise ValueError("Invalid value for `sync_type`, must not be `None`")

        self._sync_type = sync_type

    @property
    def sync_source(self):
        """Gets the sync_source of this UpdateResourceDataSyncRequest.


        :return: The sync_source of this UpdateResourceDataSyncRequest.
        :rtype: UpdateResourceDataSyncRequestSyncSource
        """
        return self._sync_source

    @sync_source.setter
    def sync_source(self, sync_source):
        """Sets the sync_source of this UpdateResourceDataSyncRequest.


        :param sync_source: The sync_source of this UpdateResourceDataSyncRequest.
        :type sync_source: UpdateResourceDataSyncRequestSyncSource
        """
        if sync_source is None:
            raise ValueError("Invalid value for `sync_source`, must not be `None`")

        self._sync_source = sync_source
