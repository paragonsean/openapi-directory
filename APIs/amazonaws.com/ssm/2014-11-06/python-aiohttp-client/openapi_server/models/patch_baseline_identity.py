# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.operating_system import OperatingSystem
from openapi_server import util


class PatchBaselineIdentity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, baseline_id: str=None, baseline_name: str=None, operating_system: OperatingSystem=None, baseline_description: str=None, default_baseline: bool=None):
        """PatchBaselineIdentity - a model defined in OpenAPI

        :param baseline_id: The baseline_id of this PatchBaselineIdentity.
        :param baseline_name: The baseline_name of this PatchBaselineIdentity.
        :param operating_system: The operating_system of this PatchBaselineIdentity.
        :param baseline_description: The baseline_description of this PatchBaselineIdentity.
        :param default_baseline: The default_baseline of this PatchBaselineIdentity.
        """
        self.openapi_types = {
            'baseline_id': str,
            'baseline_name': str,
            'operating_system': OperatingSystem,
            'baseline_description': str,
            'default_baseline': bool
        }

        self.attribute_map = {
            'baseline_id': 'BaselineId',
            'baseline_name': 'BaselineName',
            'operating_system': 'OperatingSystem',
            'baseline_description': 'BaselineDescription',
            'default_baseline': 'DefaultBaseline'
        }

        self._baseline_id = baseline_id
        self._baseline_name = baseline_name
        self._operating_system = operating_system
        self._baseline_description = baseline_description
        self._default_baseline = default_baseline

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PatchBaselineIdentity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PatchBaselineIdentity of this PatchBaselineIdentity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def baseline_id(self):
        """Gets the baseline_id of this PatchBaselineIdentity.


        :return: The baseline_id of this PatchBaselineIdentity.
        :rtype: str
        """
        return self._baseline_id

    @baseline_id.setter
    def baseline_id(self, baseline_id):
        """Sets the baseline_id of this PatchBaselineIdentity.


        :param baseline_id: The baseline_id of this PatchBaselineIdentity.
        :type baseline_id: str
        """

        self._baseline_id = baseline_id

    @property
    def baseline_name(self):
        """Gets the baseline_name of this PatchBaselineIdentity.


        :return: The baseline_name of this PatchBaselineIdentity.
        :rtype: str
        """
        return self._baseline_name

    @baseline_name.setter
    def baseline_name(self, baseline_name):
        """Sets the baseline_name of this PatchBaselineIdentity.


        :param baseline_name: The baseline_name of this PatchBaselineIdentity.
        :type baseline_name: str
        """

        self._baseline_name = baseline_name

    @property
    def operating_system(self):
        """Gets the operating_system of this PatchBaselineIdentity.


        :return: The operating_system of this PatchBaselineIdentity.
        :rtype: OperatingSystem
        """
        return self._operating_system

    @operating_system.setter
    def operating_system(self, operating_system):
        """Sets the operating_system of this PatchBaselineIdentity.


        :param operating_system: The operating_system of this PatchBaselineIdentity.
        :type operating_system: OperatingSystem
        """

        self._operating_system = operating_system

    @property
    def baseline_description(self):
        """Gets the baseline_description of this PatchBaselineIdentity.


        :return: The baseline_description of this PatchBaselineIdentity.
        :rtype: str
        """
        return self._baseline_description

    @baseline_description.setter
    def baseline_description(self, baseline_description):
        """Sets the baseline_description of this PatchBaselineIdentity.


        :param baseline_description: The baseline_description of this PatchBaselineIdentity.
        :type baseline_description: str
        """

        self._baseline_description = baseline_description

    @property
    def default_baseline(self):
        """Gets the default_baseline of this PatchBaselineIdentity.


        :return: The default_baseline of this PatchBaselineIdentity.
        :rtype: bool
        """
        return self._default_baseline

    @default_baseline.setter
    def default_baseline(self, default_baseline):
        """Sets the default_baseline of this PatchBaselineIdentity.


        :param default_baseline: The default_baseline of this PatchBaselineIdentity.
        :type default_baseline: bool
        """

        self._default_baseline = default_baseline
