# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_resource_data_sync_request_s3_destination import CreateResourceDataSyncRequestS3Destination
from openapi_server.models.create_resource_data_sync_request_sync_source import CreateResourceDataSyncRequestSyncSource
from openapi_server import util


class CreateResourceDataSyncRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sync_name: str=None, s3_destination: CreateResourceDataSyncRequestS3Destination=None, sync_type: str=None, sync_source: CreateResourceDataSyncRequestSyncSource=None):
        """CreateResourceDataSyncRequest - a model defined in OpenAPI

        :param sync_name: The sync_name of this CreateResourceDataSyncRequest.
        :param s3_destination: The s3_destination of this CreateResourceDataSyncRequest.
        :param sync_type: The sync_type of this CreateResourceDataSyncRequest.
        :param sync_source: The sync_source of this CreateResourceDataSyncRequest.
        """
        self.openapi_types = {
            'sync_name': str,
            's3_destination': CreateResourceDataSyncRequestS3Destination,
            'sync_type': str,
            'sync_source': CreateResourceDataSyncRequestSyncSource
        }

        self.attribute_map = {
            'sync_name': 'SyncName',
            's3_destination': 'S3Destination',
            'sync_type': 'SyncType',
            'sync_source': 'SyncSource'
        }

        self._sync_name = sync_name
        self._s3_destination = s3_destination
        self._sync_type = sync_type
        self._sync_source = sync_source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateResourceDataSyncRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateResourceDataSyncRequest of this CreateResourceDataSyncRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sync_name(self):
        """Gets the sync_name of this CreateResourceDataSyncRequest.


        :return: The sync_name of this CreateResourceDataSyncRequest.
        :rtype: str
        """
        return self._sync_name

    @sync_name.setter
    def sync_name(self, sync_name):
        """Sets the sync_name of this CreateResourceDataSyncRequest.


        :param sync_name: The sync_name of this CreateResourceDataSyncRequest.
        :type sync_name: str
        """
        if sync_name is None:
            raise ValueError("Invalid value for `sync_name`, must not be `None`")

        self._sync_name = sync_name

    @property
    def s3_destination(self):
        """Gets the s3_destination of this CreateResourceDataSyncRequest.


        :return: The s3_destination of this CreateResourceDataSyncRequest.
        :rtype: CreateResourceDataSyncRequestS3Destination
        """
        return self._s3_destination

    @s3_destination.setter
    def s3_destination(self, s3_destination):
        """Sets the s3_destination of this CreateResourceDataSyncRequest.


        :param s3_destination: The s3_destination of this CreateResourceDataSyncRequest.
        :type s3_destination: CreateResourceDataSyncRequestS3Destination
        """

        self._s3_destination = s3_destination

    @property
    def sync_type(self):
        """Gets the sync_type of this CreateResourceDataSyncRequest.


        :return: The sync_type of this CreateResourceDataSyncRequest.
        :rtype: str
        """
        return self._sync_type

    @sync_type.setter
    def sync_type(self, sync_type):
        """Sets the sync_type of this CreateResourceDataSyncRequest.


        :param sync_type: The sync_type of this CreateResourceDataSyncRequest.
        :type sync_type: str
        """

        self._sync_type = sync_type

    @property
    def sync_source(self):
        """Gets the sync_source of this CreateResourceDataSyncRequest.


        :return: The sync_source of this CreateResourceDataSyncRequest.
        :rtype: CreateResourceDataSyncRequestSyncSource
        """
        return self._sync_source

    @sync_source.setter
    def sync_source(self, sync_source):
        """Sets the sync_source of this CreateResourceDataSyncRequest.


        :param sync_source: The sync_source of this CreateResourceDataSyncRequest.
        :type sync_source: CreateResourceDataSyncRequestSyncSource
        """

        self._sync_source = sync_source
