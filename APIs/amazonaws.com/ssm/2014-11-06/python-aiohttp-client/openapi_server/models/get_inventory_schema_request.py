# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetInventorySchemaRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type_name: str=None, next_token: str=None, max_results: int=None, aggregator: bool=None, sub_type: bool=None):
        """GetInventorySchemaRequest - a model defined in OpenAPI

        :param type_name: The type_name of this GetInventorySchemaRequest.
        :param next_token: The next_token of this GetInventorySchemaRequest.
        :param max_results: The max_results of this GetInventorySchemaRequest.
        :param aggregator: The aggregator of this GetInventorySchemaRequest.
        :param sub_type: The sub_type of this GetInventorySchemaRequest.
        """
        self.openapi_types = {
            'type_name': str,
            'next_token': str,
            'max_results': int,
            'aggregator': bool,
            'sub_type': bool
        }

        self.attribute_map = {
            'type_name': 'TypeName',
            'next_token': 'NextToken',
            'max_results': 'MaxResults',
            'aggregator': 'Aggregator',
            'sub_type': 'SubType'
        }

        self._type_name = type_name
        self._next_token = next_token
        self._max_results = max_results
        self._aggregator = aggregator
        self._sub_type = sub_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetInventorySchemaRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetInventorySchemaRequest of this GetInventorySchemaRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type_name(self):
        """Gets the type_name of this GetInventorySchemaRequest.


        :return: The type_name of this GetInventorySchemaRequest.
        :rtype: str
        """
        return self._type_name

    @type_name.setter
    def type_name(self, type_name):
        """Sets the type_name of this GetInventorySchemaRequest.


        :param type_name: The type_name of this GetInventorySchemaRequest.
        :type type_name: str
        """

        self._type_name = type_name

    @property
    def next_token(self):
        """Gets the next_token of this GetInventorySchemaRequest.


        :return: The next_token of this GetInventorySchemaRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this GetInventorySchemaRequest.


        :param next_token: The next_token of this GetInventorySchemaRequest.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def max_results(self):
        """Gets the max_results of this GetInventorySchemaRequest.


        :return: The max_results of this GetInventorySchemaRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this GetInventorySchemaRequest.


        :param max_results: The max_results of this GetInventorySchemaRequest.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def aggregator(self):
        """Gets the aggregator of this GetInventorySchemaRequest.


        :return: The aggregator of this GetInventorySchemaRequest.
        :rtype: bool
        """
        return self._aggregator

    @aggregator.setter
    def aggregator(self, aggregator):
        """Sets the aggregator of this GetInventorySchemaRequest.


        :param aggregator: The aggregator of this GetInventorySchemaRequest.
        :type aggregator: bool
        """

        self._aggregator = aggregator

    @property
    def sub_type(self):
        """Gets the sub_type of this GetInventorySchemaRequest.


        :return: The sub_type of this GetInventorySchemaRequest.
        :rtype: bool
        """
        return self._sub_type

    @sub_type.setter
    def sub_type(self, sub_type):
        """Sets the sub_type of this GetInventorySchemaRequest.


        :param sub_type: The sub_type of this GetInventorySchemaRequest.
        :type sub_type: bool
        """

        self._sub_type = sub_type
