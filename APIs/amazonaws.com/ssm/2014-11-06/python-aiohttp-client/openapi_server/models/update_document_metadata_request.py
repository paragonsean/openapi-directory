# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_document_metadata_request_document_reviews import UpdateDocumentMetadataRequestDocumentReviews
from openapi_server import util


class UpdateDocumentMetadataRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, document_version: str=None, document_reviews: UpdateDocumentMetadataRequestDocumentReviews=None):
        """UpdateDocumentMetadataRequest - a model defined in OpenAPI

        :param name: The name of this UpdateDocumentMetadataRequest.
        :param document_version: The document_version of this UpdateDocumentMetadataRequest.
        :param document_reviews: The document_reviews of this UpdateDocumentMetadataRequest.
        """
        self.openapi_types = {
            'name': str,
            'document_version': str,
            'document_reviews': UpdateDocumentMetadataRequestDocumentReviews
        }

        self.attribute_map = {
            'name': 'Name',
            'document_version': 'DocumentVersion',
            'document_reviews': 'DocumentReviews'
        }

        self._name = name
        self._document_version = document_version
        self._document_reviews = document_reviews

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateDocumentMetadataRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateDocumentMetadataRequest of this UpdateDocumentMetadataRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this UpdateDocumentMetadataRequest.


        :return: The name of this UpdateDocumentMetadataRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateDocumentMetadataRequest.


        :param name: The name of this UpdateDocumentMetadataRequest.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def document_version(self):
        """Gets the document_version of this UpdateDocumentMetadataRequest.


        :return: The document_version of this UpdateDocumentMetadataRequest.
        :rtype: str
        """
        return self._document_version

    @document_version.setter
    def document_version(self, document_version):
        """Sets the document_version of this UpdateDocumentMetadataRequest.


        :param document_version: The document_version of this UpdateDocumentMetadataRequest.
        :type document_version: str
        """

        self._document_version = document_version

    @property
    def document_reviews(self):
        """Gets the document_reviews of this UpdateDocumentMetadataRequest.


        :return: The document_reviews of this UpdateDocumentMetadataRequest.
        :rtype: UpdateDocumentMetadataRequestDocumentReviews
        """
        return self._document_reviews

    @document_reviews.setter
    def document_reviews(self, document_reviews):
        """Sets the document_reviews of this UpdateDocumentMetadataRequest.


        :param document_reviews: The document_reviews of this UpdateDocumentMetadataRequest.
        :type document_reviews: UpdateDocumentMetadataRequestDocumentReviews
        """
        if document_reviews is None:
            raise ValueError("Invalid value for `document_reviews`, must not be `None`")

        self._document_reviews = document_reviews
