# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.notification_type import NotificationType
from openapi_server import util


class MaintenanceWindowRunCommandParametersNotificationConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, notification_arn: str=None, notification_events: List=None, notification_type: NotificationType=None):
        """MaintenanceWindowRunCommandParametersNotificationConfig - a model defined in OpenAPI

        :param notification_arn: The notification_arn of this MaintenanceWindowRunCommandParametersNotificationConfig.
        :param notification_events: The notification_events of this MaintenanceWindowRunCommandParametersNotificationConfig.
        :param notification_type: The notification_type of this MaintenanceWindowRunCommandParametersNotificationConfig.
        """
        self.openapi_types = {
            'notification_arn': str,
            'notification_events': List,
            'notification_type': NotificationType
        }

        self.attribute_map = {
            'notification_arn': 'NotificationArn',
            'notification_events': 'NotificationEvents',
            'notification_type': 'NotificationType'
        }

        self._notification_arn = notification_arn
        self._notification_events = notification_events
        self._notification_type = notification_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MaintenanceWindowRunCommandParametersNotificationConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MaintenanceWindowRunCommandParameters_NotificationConfig of this MaintenanceWindowRunCommandParametersNotificationConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def notification_arn(self):
        """Gets the notification_arn of this MaintenanceWindowRunCommandParametersNotificationConfig.


        :return: The notification_arn of this MaintenanceWindowRunCommandParametersNotificationConfig.
        :rtype: str
        """
        return self._notification_arn

    @notification_arn.setter
    def notification_arn(self, notification_arn):
        """Sets the notification_arn of this MaintenanceWindowRunCommandParametersNotificationConfig.


        :param notification_arn: The notification_arn of this MaintenanceWindowRunCommandParametersNotificationConfig.
        :type notification_arn: str
        """

        self._notification_arn = notification_arn

    @property
    def notification_events(self):
        """Gets the notification_events of this MaintenanceWindowRunCommandParametersNotificationConfig.


        :return: The notification_events of this MaintenanceWindowRunCommandParametersNotificationConfig.
        :rtype: List
        """
        return self._notification_events

    @notification_events.setter
    def notification_events(self, notification_events):
        """Sets the notification_events of this MaintenanceWindowRunCommandParametersNotificationConfig.


        :param notification_events: The notification_events of this MaintenanceWindowRunCommandParametersNotificationConfig.
        :type notification_events: List
        """

        self._notification_events = notification_events

    @property
    def notification_type(self):
        """Gets the notification_type of this MaintenanceWindowRunCommandParametersNotificationConfig.


        :return: The notification_type of this MaintenanceWindowRunCommandParametersNotificationConfig.
        :rtype: NotificationType
        """
        return self._notification_type

    @notification_type.setter
    def notification_type(self, notification_type):
        """Sets the notification_type of this MaintenanceWindowRunCommandParametersNotificationConfig.


        :param notification_type: The notification_type of this MaintenanceWindowRunCommandParametersNotificationConfig.
        :type notification_type: NotificationType
        """

        self._notification_type = notification_type
