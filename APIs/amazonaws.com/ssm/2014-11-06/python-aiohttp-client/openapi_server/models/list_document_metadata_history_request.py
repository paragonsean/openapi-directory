# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.document_metadata_enum import DocumentMetadataEnum
from openapi_server import util


class ListDocumentMetadataHistoryRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, document_version: str=None, metadata: DocumentMetadataEnum=None, next_token: str=None, max_results: int=None):
        """ListDocumentMetadataHistoryRequest - a model defined in OpenAPI

        :param name: The name of this ListDocumentMetadataHistoryRequest.
        :param document_version: The document_version of this ListDocumentMetadataHistoryRequest.
        :param metadata: The metadata of this ListDocumentMetadataHistoryRequest.
        :param next_token: The next_token of this ListDocumentMetadataHistoryRequest.
        :param max_results: The max_results of this ListDocumentMetadataHistoryRequest.
        """
        self.openapi_types = {
            'name': str,
            'document_version': str,
            'metadata': DocumentMetadataEnum,
            'next_token': str,
            'max_results': int
        }

        self.attribute_map = {
            'name': 'Name',
            'document_version': 'DocumentVersion',
            'metadata': 'Metadata',
            'next_token': 'NextToken',
            'max_results': 'MaxResults'
        }

        self._name = name
        self._document_version = document_version
        self._metadata = metadata
        self._next_token = next_token
        self._max_results = max_results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListDocumentMetadataHistoryRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListDocumentMetadataHistoryRequest of this ListDocumentMetadataHistoryRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this ListDocumentMetadataHistoryRequest.


        :return: The name of this ListDocumentMetadataHistoryRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ListDocumentMetadataHistoryRequest.


        :param name: The name of this ListDocumentMetadataHistoryRequest.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def document_version(self):
        """Gets the document_version of this ListDocumentMetadataHistoryRequest.


        :return: The document_version of this ListDocumentMetadataHistoryRequest.
        :rtype: str
        """
        return self._document_version

    @document_version.setter
    def document_version(self, document_version):
        """Sets the document_version of this ListDocumentMetadataHistoryRequest.


        :param document_version: The document_version of this ListDocumentMetadataHistoryRequest.
        :type document_version: str
        """

        self._document_version = document_version

    @property
    def metadata(self):
        """Gets the metadata of this ListDocumentMetadataHistoryRequest.


        :return: The metadata of this ListDocumentMetadataHistoryRequest.
        :rtype: DocumentMetadataEnum
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this ListDocumentMetadataHistoryRequest.


        :param metadata: The metadata of this ListDocumentMetadataHistoryRequest.
        :type metadata: DocumentMetadataEnum
        """
        if metadata is None:
            raise ValueError("Invalid value for `metadata`, must not be `None`")

        self._metadata = metadata

    @property
    def next_token(self):
        """Gets the next_token of this ListDocumentMetadataHistoryRequest.


        :return: The next_token of this ListDocumentMetadataHistoryRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListDocumentMetadataHistoryRequest.


        :param next_token: The next_token of this ListDocumentMetadataHistoryRequest.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def max_results(self):
        """Gets the max_results of this ListDocumentMetadataHistoryRequest.


        :return: The max_results of this ListDocumentMetadataHistoryRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this ListDocumentMetadataHistoryRequest.


        :param max_results: The max_results of this ListDocumentMetadataHistoryRequest.
        :type max_results: int
        """

        self._max_results = max_results
