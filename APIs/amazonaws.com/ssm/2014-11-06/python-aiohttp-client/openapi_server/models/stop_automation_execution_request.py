# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.stop_type import StopType
from openapi_server import util


class StopAutomationExecutionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, automation_execution_id: str=None, type: StopType=None):
        """StopAutomationExecutionRequest - a model defined in OpenAPI

        :param automation_execution_id: The automation_execution_id of this StopAutomationExecutionRequest.
        :param type: The type of this StopAutomationExecutionRequest.
        """
        self.openapi_types = {
            'automation_execution_id': str,
            'type': StopType
        }

        self.attribute_map = {
            'automation_execution_id': 'AutomationExecutionId',
            'type': 'Type'
        }

        self._automation_execution_id = automation_execution_id
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StopAutomationExecutionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StopAutomationExecutionRequest of this StopAutomationExecutionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def automation_execution_id(self):
        """Gets the automation_execution_id of this StopAutomationExecutionRequest.


        :return: The automation_execution_id of this StopAutomationExecutionRequest.
        :rtype: str
        """
        return self._automation_execution_id

    @automation_execution_id.setter
    def automation_execution_id(self, automation_execution_id):
        """Sets the automation_execution_id of this StopAutomationExecutionRequest.


        :param automation_execution_id: The automation_execution_id of this StopAutomationExecutionRequest.
        :type automation_execution_id: str
        """
        if automation_execution_id is None:
            raise ValueError("Invalid value for `automation_execution_id`, must not be `None`")

        self._automation_execution_id = automation_execution_id

    @property
    def type(self):
        """Gets the type of this StopAutomationExecutionRequest.


        :return: The type of this StopAutomationExecutionRequest.
        :rtype: StopType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this StopAutomationExecutionRequest.


        :param type: The type of this StopAutomationExecutionRequest.
        :type type: StopType
        """

        self._type = type
