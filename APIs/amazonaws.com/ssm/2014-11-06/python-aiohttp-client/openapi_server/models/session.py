# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.session_output_url import SessionOutputUrl
from openapi_server.models.session_status import SessionStatus
from openapi_server import util


class Session(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, session_id: str=None, target: str=None, status: SessionStatus=None, start_date: datetime=None, end_date: datetime=None, document_name: str=None, owner: str=None, reason: str=None, details: str=None, output_url: SessionOutputUrl=None, max_session_duration: str=None):
        """Session - a model defined in OpenAPI

        :param session_id: The session_id of this Session.
        :param target: The target of this Session.
        :param status: The status of this Session.
        :param start_date: The start_date of this Session.
        :param end_date: The end_date of this Session.
        :param document_name: The document_name of this Session.
        :param owner: The owner of this Session.
        :param reason: The reason of this Session.
        :param details: The details of this Session.
        :param output_url: The output_url of this Session.
        :param max_session_duration: The max_session_duration of this Session.
        """
        self.openapi_types = {
            'session_id': str,
            'target': str,
            'status': SessionStatus,
            'start_date': datetime,
            'end_date': datetime,
            'document_name': str,
            'owner': str,
            'reason': str,
            'details': str,
            'output_url': SessionOutputUrl,
            'max_session_duration': str
        }

        self.attribute_map = {
            'session_id': 'SessionId',
            'target': 'Target',
            'status': 'Status',
            'start_date': 'StartDate',
            'end_date': 'EndDate',
            'document_name': 'DocumentName',
            'owner': 'Owner',
            'reason': 'Reason',
            'details': 'Details',
            'output_url': 'OutputUrl',
            'max_session_duration': 'MaxSessionDuration'
        }

        self._session_id = session_id
        self._target = target
        self._status = status
        self._start_date = start_date
        self._end_date = end_date
        self._document_name = document_name
        self._owner = owner
        self._reason = reason
        self._details = details
        self._output_url = output_url
        self._max_session_duration = max_session_duration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Session':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Session of this Session.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def session_id(self):
        """Gets the session_id of this Session.


        :return: The session_id of this Session.
        :rtype: str
        """
        return self._session_id

    @session_id.setter
    def session_id(self, session_id):
        """Sets the session_id of this Session.


        :param session_id: The session_id of this Session.
        :type session_id: str
        """

        self._session_id = session_id

    @property
    def target(self):
        """Gets the target of this Session.


        :return: The target of this Session.
        :rtype: str
        """
        return self._target

    @target.setter
    def target(self, target):
        """Sets the target of this Session.


        :param target: The target of this Session.
        :type target: str
        """

        self._target = target

    @property
    def status(self):
        """Gets the status of this Session.


        :return: The status of this Session.
        :rtype: SessionStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Session.


        :param status: The status of this Session.
        :type status: SessionStatus
        """

        self._status = status

    @property
    def start_date(self):
        """Gets the start_date of this Session.


        :return: The start_date of this Session.
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this Session.


        :param start_date: The start_date of this Session.
        :type start_date: datetime
        """

        self._start_date = start_date

    @property
    def end_date(self):
        """Gets the end_date of this Session.


        :return: The end_date of this Session.
        :rtype: datetime
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this Session.


        :param end_date: The end_date of this Session.
        :type end_date: datetime
        """

        self._end_date = end_date

    @property
    def document_name(self):
        """Gets the document_name of this Session.


        :return: The document_name of this Session.
        :rtype: str
        """
        return self._document_name

    @document_name.setter
    def document_name(self, document_name):
        """Sets the document_name of this Session.


        :param document_name: The document_name of this Session.
        :type document_name: str
        """

        self._document_name = document_name

    @property
    def owner(self):
        """Gets the owner of this Session.


        :return: The owner of this Session.
        :rtype: str
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this Session.


        :param owner: The owner of this Session.
        :type owner: str
        """

        self._owner = owner

    @property
    def reason(self):
        """Gets the reason of this Session.


        :return: The reason of this Session.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this Session.


        :param reason: The reason of this Session.
        :type reason: str
        """

        self._reason = reason

    @property
    def details(self):
        """Gets the details of this Session.


        :return: The details of this Session.
        :rtype: str
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this Session.


        :param details: The details of this Session.
        :type details: str
        """

        self._details = details

    @property
    def output_url(self):
        """Gets the output_url of this Session.


        :return: The output_url of this Session.
        :rtype: SessionOutputUrl
        """
        return self._output_url

    @output_url.setter
    def output_url(self, output_url):
        """Sets the output_url of this Session.


        :param output_url: The output_url of this Session.
        :type output_url: SessionOutputUrl
        """

        self._output_url = output_url

    @property
    def max_session_duration(self):
        """Gets the max_session_duration of this Session.


        :return: The max_session_duration of this Session.
        :rtype: str
        """
        return self._max_session_duration

    @max_session_duration.setter
    def max_session_duration(self, max_session_duration):
        """Sets the max_session_duration of this Session.


        :param max_session_duration: The max_session_duration of this Session.
        :type max_session_duration: str
        """

        self._max_session_duration = max_session_duration
