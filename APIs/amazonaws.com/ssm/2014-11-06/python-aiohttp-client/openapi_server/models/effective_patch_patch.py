# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EffectivePatchPatch(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, release_date: datetime=None, title: str=None, description: str=None, content_url: str=None, vendor: str=None, product_family: str=None, product: str=None, classification: str=None, msrc_severity: str=None, kb_number: str=None, msrc_number: str=None, language: str=None, advisory_ids: List=None, bugzilla_ids: List=None, cve_ids: List=None, name: str=None, epoch: int=None, version: str=None, release: str=None, arch: str=None, severity: str=None, repository: str=None):
        """EffectivePatchPatch - a model defined in OpenAPI

        :param id: The id of this EffectivePatchPatch.
        :param release_date: The release_date of this EffectivePatchPatch.
        :param title: The title of this EffectivePatchPatch.
        :param description: The description of this EffectivePatchPatch.
        :param content_url: The content_url of this EffectivePatchPatch.
        :param vendor: The vendor of this EffectivePatchPatch.
        :param product_family: The product_family of this EffectivePatchPatch.
        :param product: The product of this EffectivePatchPatch.
        :param classification: The classification of this EffectivePatchPatch.
        :param msrc_severity: The msrc_severity of this EffectivePatchPatch.
        :param kb_number: The kb_number of this EffectivePatchPatch.
        :param msrc_number: The msrc_number of this EffectivePatchPatch.
        :param language: The language of this EffectivePatchPatch.
        :param advisory_ids: The advisory_ids of this EffectivePatchPatch.
        :param bugzilla_ids: The bugzilla_ids of this EffectivePatchPatch.
        :param cve_ids: The cve_ids of this EffectivePatchPatch.
        :param name: The name of this EffectivePatchPatch.
        :param epoch: The epoch of this EffectivePatchPatch.
        :param version: The version of this EffectivePatchPatch.
        :param release: The release of this EffectivePatchPatch.
        :param arch: The arch of this EffectivePatchPatch.
        :param severity: The severity of this EffectivePatchPatch.
        :param repository: The repository of this EffectivePatchPatch.
        """
        self.openapi_types = {
            'id': str,
            'release_date': datetime,
            'title': str,
            'description': str,
            'content_url': str,
            'vendor': str,
            'product_family': str,
            'product': str,
            'classification': str,
            'msrc_severity': str,
            'kb_number': str,
            'msrc_number': str,
            'language': str,
            'advisory_ids': List,
            'bugzilla_ids': List,
            'cve_ids': List,
            'name': str,
            'epoch': int,
            'version': str,
            'release': str,
            'arch': str,
            'severity': str,
            'repository': str
        }

        self.attribute_map = {
            'id': 'Id',
            'release_date': 'ReleaseDate',
            'title': 'Title',
            'description': 'Description',
            'content_url': 'ContentUrl',
            'vendor': 'Vendor',
            'product_family': 'ProductFamily',
            'product': 'Product',
            'classification': 'Classification',
            'msrc_severity': 'MsrcSeverity',
            'kb_number': 'KbNumber',
            'msrc_number': 'MsrcNumber',
            'language': 'Language',
            'advisory_ids': 'AdvisoryIds',
            'bugzilla_ids': 'BugzillaIds',
            'cve_ids': 'CVEIds',
            'name': 'Name',
            'epoch': 'Epoch',
            'version': 'Version',
            'release': 'Release',
            'arch': 'Arch',
            'severity': 'Severity',
            'repository': 'Repository'
        }

        self._id = id
        self._release_date = release_date
        self._title = title
        self._description = description
        self._content_url = content_url
        self._vendor = vendor
        self._product_family = product_family
        self._product = product
        self._classification = classification
        self._msrc_severity = msrc_severity
        self._kb_number = kb_number
        self._msrc_number = msrc_number
        self._language = language
        self._advisory_ids = advisory_ids
        self._bugzilla_ids = bugzilla_ids
        self._cve_ids = cve_ids
        self._name = name
        self._epoch = epoch
        self._version = version
        self._release = release
        self._arch = arch
        self._severity = severity
        self._repository = repository

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EffectivePatchPatch':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EffectivePatch_Patch of this EffectivePatchPatch.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this EffectivePatchPatch.


        :return: The id of this EffectivePatchPatch.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this EffectivePatchPatch.


        :param id: The id of this EffectivePatchPatch.
        :type id: str
        """

        self._id = id

    @property
    def release_date(self):
        """Gets the release_date of this EffectivePatchPatch.


        :return: The release_date of this EffectivePatchPatch.
        :rtype: datetime
        """
        return self._release_date

    @release_date.setter
    def release_date(self, release_date):
        """Sets the release_date of this EffectivePatchPatch.


        :param release_date: The release_date of this EffectivePatchPatch.
        :type release_date: datetime
        """

        self._release_date = release_date

    @property
    def title(self):
        """Gets the title of this EffectivePatchPatch.


        :return: The title of this EffectivePatchPatch.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this EffectivePatchPatch.


        :param title: The title of this EffectivePatchPatch.
        :type title: str
        """

        self._title = title

    @property
    def description(self):
        """Gets the description of this EffectivePatchPatch.


        :return: The description of this EffectivePatchPatch.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this EffectivePatchPatch.


        :param description: The description of this EffectivePatchPatch.
        :type description: str
        """

        self._description = description

    @property
    def content_url(self):
        """Gets the content_url of this EffectivePatchPatch.


        :return: The content_url of this EffectivePatchPatch.
        :rtype: str
        """
        return self._content_url

    @content_url.setter
    def content_url(self, content_url):
        """Sets the content_url of this EffectivePatchPatch.


        :param content_url: The content_url of this EffectivePatchPatch.
        :type content_url: str
        """

        self._content_url = content_url

    @property
    def vendor(self):
        """Gets the vendor of this EffectivePatchPatch.


        :return: The vendor of this EffectivePatchPatch.
        :rtype: str
        """
        return self._vendor

    @vendor.setter
    def vendor(self, vendor):
        """Sets the vendor of this EffectivePatchPatch.


        :param vendor: The vendor of this EffectivePatchPatch.
        :type vendor: str
        """

        self._vendor = vendor

    @property
    def product_family(self):
        """Gets the product_family of this EffectivePatchPatch.


        :return: The product_family of this EffectivePatchPatch.
        :rtype: str
        """
        return self._product_family

    @product_family.setter
    def product_family(self, product_family):
        """Sets the product_family of this EffectivePatchPatch.


        :param product_family: The product_family of this EffectivePatchPatch.
        :type product_family: str
        """

        self._product_family = product_family

    @property
    def product(self):
        """Gets the product of this EffectivePatchPatch.


        :return: The product of this EffectivePatchPatch.
        :rtype: str
        """
        return self._product

    @product.setter
    def product(self, product):
        """Sets the product of this EffectivePatchPatch.


        :param product: The product of this EffectivePatchPatch.
        :type product: str
        """

        self._product = product

    @property
    def classification(self):
        """Gets the classification of this EffectivePatchPatch.


        :return: The classification of this EffectivePatchPatch.
        :rtype: str
        """
        return self._classification

    @classification.setter
    def classification(self, classification):
        """Sets the classification of this EffectivePatchPatch.


        :param classification: The classification of this EffectivePatchPatch.
        :type classification: str
        """

        self._classification = classification

    @property
    def msrc_severity(self):
        """Gets the msrc_severity of this EffectivePatchPatch.


        :return: The msrc_severity of this EffectivePatchPatch.
        :rtype: str
        """
        return self._msrc_severity

    @msrc_severity.setter
    def msrc_severity(self, msrc_severity):
        """Sets the msrc_severity of this EffectivePatchPatch.


        :param msrc_severity: The msrc_severity of this EffectivePatchPatch.
        :type msrc_severity: str
        """

        self._msrc_severity = msrc_severity

    @property
    def kb_number(self):
        """Gets the kb_number of this EffectivePatchPatch.


        :return: The kb_number of this EffectivePatchPatch.
        :rtype: str
        """
        return self._kb_number

    @kb_number.setter
    def kb_number(self, kb_number):
        """Sets the kb_number of this EffectivePatchPatch.


        :param kb_number: The kb_number of this EffectivePatchPatch.
        :type kb_number: str
        """

        self._kb_number = kb_number

    @property
    def msrc_number(self):
        """Gets the msrc_number of this EffectivePatchPatch.


        :return: The msrc_number of this EffectivePatchPatch.
        :rtype: str
        """
        return self._msrc_number

    @msrc_number.setter
    def msrc_number(self, msrc_number):
        """Sets the msrc_number of this EffectivePatchPatch.


        :param msrc_number: The msrc_number of this EffectivePatchPatch.
        :type msrc_number: str
        """

        self._msrc_number = msrc_number

    @property
    def language(self):
        """Gets the language of this EffectivePatchPatch.


        :return: The language of this EffectivePatchPatch.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this EffectivePatchPatch.


        :param language: The language of this EffectivePatchPatch.
        :type language: str
        """

        self._language = language

    @property
    def advisory_ids(self):
        """Gets the advisory_ids of this EffectivePatchPatch.


        :return: The advisory_ids of this EffectivePatchPatch.
        :rtype: List
        """
        return self._advisory_ids

    @advisory_ids.setter
    def advisory_ids(self, advisory_ids):
        """Sets the advisory_ids of this EffectivePatchPatch.


        :param advisory_ids: The advisory_ids of this EffectivePatchPatch.
        :type advisory_ids: List
        """

        self._advisory_ids = advisory_ids

    @property
    def bugzilla_ids(self):
        """Gets the bugzilla_ids of this EffectivePatchPatch.


        :return: The bugzilla_ids of this EffectivePatchPatch.
        :rtype: List
        """
        return self._bugzilla_ids

    @bugzilla_ids.setter
    def bugzilla_ids(self, bugzilla_ids):
        """Sets the bugzilla_ids of this EffectivePatchPatch.


        :param bugzilla_ids: The bugzilla_ids of this EffectivePatchPatch.
        :type bugzilla_ids: List
        """

        self._bugzilla_ids = bugzilla_ids

    @property
    def cve_ids(self):
        """Gets the cve_ids of this EffectivePatchPatch.


        :return: The cve_ids of this EffectivePatchPatch.
        :rtype: List
        """
        return self._cve_ids

    @cve_ids.setter
    def cve_ids(self, cve_ids):
        """Sets the cve_ids of this EffectivePatchPatch.


        :param cve_ids: The cve_ids of this EffectivePatchPatch.
        :type cve_ids: List
        """

        self._cve_ids = cve_ids

    @property
    def name(self):
        """Gets the name of this EffectivePatchPatch.


        :return: The name of this EffectivePatchPatch.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this EffectivePatchPatch.


        :param name: The name of this EffectivePatchPatch.
        :type name: str
        """

        self._name = name

    @property
    def epoch(self):
        """Gets the epoch of this EffectivePatchPatch.


        :return: The epoch of this EffectivePatchPatch.
        :rtype: int
        """
        return self._epoch

    @epoch.setter
    def epoch(self, epoch):
        """Sets the epoch of this EffectivePatchPatch.


        :param epoch: The epoch of this EffectivePatchPatch.
        :type epoch: int
        """

        self._epoch = epoch

    @property
    def version(self):
        """Gets the version of this EffectivePatchPatch.


        :return: The version of this EffectivePatchPatch.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this EffectivePatchPatch.


        :param version: The version of this EffectivePatchPatch.
        :type version: str
        """

        self._version = version

    @property
    def release(self):
        """Gets the release of this EffectivePatchPatch.


        :return: The release of this EffectivePatchPatch.
        :rtype: str
        """
        return self._release

    @release.setter
    def release(self, release):
        """Sets the release of this EffectivePatchPatch.


        :param release: The release of this EffectivePatchPatch.
        :type release: str
        """

        self._release = release

    @property
    def arch(self):
        """Gets the arch of this EffectivePatchPatch.


        :return: The arch of this EffectivePatchPatch.
        :rtype: str
        """
        return self._arch

    @arch.setter
    def arch(self, arch):
        """Sets the arch of this EffectivePatchPatch.


        :param arch: The arch of this EffectivePatchPatch.
        :type arch: str
        """

        self._arch = arch

    @property
    def severity(self):
        """Gets the severity of this EffectivePatchPatch.


        :return: The severity of this EffectivePatchPatch.
        :rtype: str
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this EffectivePatchPatch.


        :param severity: The severity of this EffectivePatchPatch.
        :type severity: str
        """

        self._severity = severity

    @property
    def repository(self):
        """Gets the repository of this EffectivePatchPatch.


        :return: The repository of this EffectivePatchPatch.
        :rtype: str
        """
        return self._repository

    @repository.setter
    def repository(self, repository):
        """Sets the repository of this EffectivePatchPatch.


        :param repository: The repository of this EffectivePatchPatch.
        :type repository: str
        """

        self._repository = repository
