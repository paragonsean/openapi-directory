# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InventoryDeletionSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, total_count: int=None, remaining_count: int=None, summary_items: List=None):
        """InventoryDeletionSummary - a model defined in OpenAPI

        :param total_count: The total_count of this InventoryDeletionSummary.
        :param remaining_count: The remaining_count of this InventoryDeletionSummary.
        :param summary_items: The summary_items of this InventoryDeletionSummary.
        """
        self.openapi_types = {
            'total_count': int,
            'remaining_count': int,
            'summary_items': List
        }

        self.attribute_map = {
            'total_count': 'TotalCount',
            'remaining_count': 'RemainingCount',
            'summary_items': 'SummaryItems'
        }

        self._total_count = total_count
        self._remaining_count = remaining_count
        self._summary_items = summary_items

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InventoryDeletionSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InventoryDeletionSummary of this InventoryDeletionSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def total_count(self):
        """Gets the total_count of this InventoryDeletionSummary.


        :return: The total_count of this InventoryDeletionSummary.
        :rtype: int
        """
        return self._total_count

    @total_count.setter
    def total_count(self, total_count):
        """Sets the total_count of this InventoryDeletionSummary.


        :param total_count: The total_count of this InventoryDeletionSummary.
        :type total_count: int
        """

        self._total_count = total_count

    @property
    def remaining_count(self):
        """Gets the remaining_count of this InventoryDeletionSummary.


        :return: The remaining_count of this InventoryDeletionSummary.
        :rtype: int
        """
        return self._remaining_count

    @remaining_count.setter
    def remaining_count(self, remaining_count):
        """Sets the remaining_count of this InventoryDeletionSummary.


        :param remaining_count: The remaining_count of this InventoryDeletionSummary.
        :type remaining_count: int
        """

        self._remaining_count = remaining_count

    @property
    def summary_items(self):
        """Gets the summary_items of this InventoryDeletionSummary.


        :return: The summary_items of this InventoryDeletionSummary.
        :rtype: List
        """
        return self._summary_items

    @summary_items.setter
    def summary_items(self, summary_items):
        """Sets the summary_items of this InventoryDeletionSummary.


        :param summary_items: The summary_items of this InventoryDeletionSummary.
        :type summary_items: List
        """

        self._summary_items = summary_items
