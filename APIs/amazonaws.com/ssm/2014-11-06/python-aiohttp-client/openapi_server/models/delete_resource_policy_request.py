# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteResourcePolicyRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource_arn: str=None, policy_id: str=None, policy_hash: str=None):
        """DeleteResourcePolicyRequest - a model defined in OpenAPI

        :param resource_arn: The resource_arn of this DeleteResourcePolicyRequest.
        :param policy_id: The policy_id of this DeleteResourcePolicyRequest.
        :param policy_hash: The policy_hash of this DeleteResourcePolicyRequest.
        """
        self.openapi_types = {
            'resource_arn': str,
            'policy_id': str,
            'policy_hash': str
        }

        self.attribute_map = {
            'resource_arn': 'ResourceArn',
            'policy_id': 'PolicyId',
            'policy_hash': 'PolicyHash'
        }

        self._resource_arn = resource_arn
        self._policy_id = policy_id
        self._policy_hash = policy_hash

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteResourcePolicyRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteResourcePolicyRequest of this DeleteResourcePolicyRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource_arn(self):
        """Gets the resource_arn of this DeleteResourcePolicyRequest.


        :return: The resource_arn of this DeleteResourcePolicyRequest.
        :rtype: str
        """
        return self._resource_arn

    @resource_arn.setter
    def resource_arn(self, resource_arn):
        """Sets the resource_arn of this DeleteResourcePolicyRequest.


        :param resource_arn: The resource_arn of this DeleteResourcePolicyRequest.
        :type resource_arn: str
        """
        if resource_arn is None:
            raise ValueError("Invalid value for `resource_arn`, must not be `None`")

        self._resource_arn = resource_arn

    @property
    def policy_id(self):
        """Gets the policy_id of this DeleteResourcePolicyRequest.


        :return: The policy_id of this DeleteResourcePolicyRequest.
        :rtype: str
        """
        return self._policy_id

    @policy_id.setter
    def policy_id(self, policy_id):
        """Sets the policy_id of this DeleteResourcePolicyRequest.


        :param policy_id: The policy_id of this DeleteResourcePolicyRequest.
        :type policy_id: str
        """
        if policy_id is None:
            raise ValueError("Invalid value for `policy_id`, must not be `None`")

        self._policy_id = policy_id

    @property
    def policy_hash(self):
        """Gets the policy_hash of this DeleteResourcePolicyRequest.


        :return: The policy_hash of this DeleteResourcePolicyRequest.
        :rtype: str
        """
        return self._policy_hash

    @policy_hash.setter
    def policy_hash(self, policy_hash):
        """Sets the policy_hash of this DeleteResourcePolicyRequest.


        :param policy_hash: The policy_hash of this DeleteResourcePolicyRequest.
        :type policy_hash: str
        """
        if policy_hash is None:
            raise ValueError("Invalid value for `policy_hash`, must not be `None`")

        self._policy_hash = policy_hash
