# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.maintenance_window_execution_status import MaintenanceWindowExecutionStatus
from openapi_server import util


class MaintenanceWindowExecution(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, window_id: str=None, window_execution_id: str=None, status: MaintenanceWindowExecutionStatus=None, status_details: str=None, start_time: datetime=None, end_time: datetime=None):
        """MaintenanceWindowExecution - a model defined in OpenAPI

        :param window_id: The window_id of this MaintenanceWindowExecution.
        :param window_execution_id: The window_execution_id of this MaintenanceWindowExecution.
        :param status: The status of this MaintenanceWindowExecution.
        :param status_details: The status_details of this MaintenanceWindowExecution.
        :param start_time: The start_time of this MaintenanceWindowExecution.
        :param end_time: The end_time of this MaintenanceWindowExecution.
        """
        self.openapi_types = {
            'window_id': str,
            'window_execution_id': str,
            'status': MaintenanceWindowExecutionStatus,
            'status_details': str,
            'start_time': datetime,
            'end_time': datetime
        }

        self.attribute_map = {
            'window_id': 'WindowId',
            'window_execution_id': 'WindowExecutionId',
            'status': 'Status',
            'status_details': 'StatusDetails',
            'start_time': 'StartTime',
            'end_time': 'EndTime'
        }

        self._window_id = window_id
        self._window_execution_id = window_execution_id
        self._status = status
        self._status_details = status_details
        self._start_time = start_time
        self._end_time = end_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MaintenanceWindowExecution':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MaintenanceWindowExecution of this MaintenanceWindowExecution.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def window_id(self):
        """Gets the window_id of this MaintenanceWindowExecution.


        :return: The window_id of this MaintenanceWindowExecution.
        :rtype: str
        """
        return self._window_id

    @window_id.setter
    def window_id(self, window_id):
        """Sets the window_id of this MaintenanceWindowExecution.


        :param window_id: The window_id of this MaintenanceWindowExecution.
        :type window_id: str
        """

        self._window_id = window_id

    @property
    def window_execution_id(self):
        """Gets the window_execution_id of this MaintenanceWindowExecution.


        :return: The window_execution_id of this MaintenanceWindowExecution.
        :rtype: str
        """
        return self._window_execution_id

    @window_execution_id.setter
    def window_execution_id(self, window_execution_id):
        """Sets the window_execution_id of this MaintenanceWindowExecution.


        :param window_execution_id: The window_execution_id of this MaintenanceWindowExecution.
        :type window_execution_id: str
        """

        self._window_execution_id = window_execution_id

    @property
    def status(self):
        """Gets the status of this MaintenanceWindowExecution.


        :return: The status of this MaintenanceWindowExecution.
        :rtype: MaintenanceWindowExecutionStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this MaintenanceWindowExecution.


        :param status: The status of this MaintenanceWindowExecution.
        :type status: MaintenanceWindowExecutionStatus
        """

        self._status = status

    @property
    def status_details(self):
        """Gets the status_details of this MaintenanceWindowExecution.


        :return: The status_details of this MaintenanceWindowExecution.
        :rtype: str
        """
        return self._status_details

    @status_details.setter
    def status_details(self, status_details):
        """Sets the status_details of this MaintenanceWindowExecution.


        :param status_details: The status_details of this MaintenanceWindowExecution.
        :type status_details: str
        """

        self._status_details = status_details

    @property
    def start_time(self):
        """Gets the start_time of this MaintenanceWindowExecution.


        :return: The start_time of this MaintenanceWindowExecution.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this MaintenanceWindowExecution.


        :param start_time: The start_time of this MaintenanceWindowExecution.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def end_time(self):
        """Gets the end_time of this MaintenanceWindowExecution.


        :return: The end_time of this MaintenanceWindowExecution.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this MaintenanceWindowExecution.


        :param end_time: The end_time of this MaintenanceWindowExecution.
        :type end_time: datetime
        """

        self._end_time = end_time
