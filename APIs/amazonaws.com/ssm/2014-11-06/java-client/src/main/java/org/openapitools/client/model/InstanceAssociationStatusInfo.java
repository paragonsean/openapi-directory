/*
 * Amazon Simple Systems Manager (SSM)
 * <p>Amazon Web Services Systems Manager is the operations hub for your Amazon Web Services applications and resources and a secure end-to-end management solution for hybrid cloud environments that enables safe and secure operations at scale.</p> <p>This reference is intended to be used with the <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/\">Amazon Web Services Systems Manager User Guide</a>. To get started, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html\">Setting up Amazon Web Services Systems Manager</a>.</p> <p class=\"title\"> <b>Related resources</b> </p> <ul> <li> <p>For information about each of the capabilities that comprise Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/systems-manager-capabilities.html\">Systems Manager capabilities</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </li> <li> <p>For details about predefined runbooks for Automation, a capability of Amazon Web Services Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-runbook-reference.html\">Systems Manager Automation runbook reference</a> </i>.</p> </li> <li> <p>For information about AppConfig, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/\">AppConfig User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/\">AppConfig API Reference</a> </i>.</p> </li> <li> <p>For information about Incident Manager, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/userguide/\">Systems Manager Incident Manager User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/APIReference/\">Systems Manager Incident Manager API Reference</a> </i>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2014-11-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.InstanceAssociationStatusInfoOutputUrl;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Status information about the association.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:14:21.701211-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class InstanceAssociationStatusInfo {
  public static final String SERIALIZED_NAME_ASSOCIATION_ID = "AssociationId";
  @SerializedName(SERIALIZED_NAME_ASSOCIATION_ID)
  private String associationId;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DOCUMENT_VERSION = "DocumentVersion";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_VERSION)
  private String documentVersion;

  public static final String SERIALIZED_NAME_ASSOCIATION_VERSION = "AssociationVersion";
  @SerializedName(SERIALIZED_NAME_ASSOCIATION_VERSION)
  private String associationVersion;

  public static final String SERIALIZED_NAME_INSTANCE_ID = "InstanceId";
  @SerializedName(SERIALIZED_NAME_INSTANCE_ID)
  private String instanceId;

  public static final String SERIALIZED_NAME_EXECUTION_DATE = "ExecutionDate";
  @SerializedName(SERIALIZED_NAME_EXECUTION_DATE)
  private OffsetDateTime executionDate;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_DETAILED_STATUS = "DetailedStatus";
  @SerializedName(SERIALIZED_NAME_DETAILED_STATUS)
  private String detailedStatus;

  public static final String SERIALIZED_NAME_EXECUTION_SUMMARY = "ExecutionSummary";
  @SerializedName(SERIALIZED_NAME_EXECUTION_SUMMARY)
  private String executionSummary;

  public static final String SERIALIZED_NAME_ERROR_CODE = "ErrorCode";
  @SerializedName(SERIALIZED_NAME_ERROR_CODE)
  private String errorCode;

  public static final String SERIALIZED_NAME_OUTPUT_URL = "OutputUrl";
  @SerializedName(SERIALIZED_NAME_OUTPUT_URL)
  private InstanceAssociationStatusInfoOutputUrl outputUrl;

  public static final String SERIALIZED_NAME_ASSOCIATION_NAME = "AssociationName";
  @SerializedName(SERIALIZED_NAME_ASSOCIATION_NAME)
  private String associationName;

  public InstanceAssociationStatusInfo() {
  }

  public InstanceAssociationStatusInfo associationId(String associationId) {
    this.associationId = associationId;
    return this;
  }

  /**
   * Get associationId
   * @return associationId
   */
  @javax.annotation.Nullable
  public String getAssociationId() {
    return associationId;
  }

  public void setAssociationId(String associationId) {
    this.associationId = associationId;
  }


  public InstanceAssociationStatusInfo name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public InstanceAssociationStatusInfo documentVersion(String documentVersion) {
    this.documentVersion = documentVersion;
    return this;
  }

  /**
   * Get documentVersion
   * @return documentVersion
   */
  @javax.annotation.Nullable
  public String getDocumentVersion() {
    return documentVersion;
  }

  public void setDocumentVersion(String documentVersion) {
    this.documentVersion = documentVersion;
  }


  public InstanceAssociationStatusInfo associationVersion(String associationVersion) {
    this.associationVersion = associationVersion;
    return this;
  }

  /**
   * Get associationVersion
   * @return associationVersion
   */
  @javax.annotation.Nullable
  public String getAssociationVersion() {
    return associationVersion;
  }

  public void setAssociationVersion(String associationVersion) {
    this.associationVersion = associationVersion;
  }


  public InstanceAssociationStatusInfo instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

  /**
   * Get instanceId
   * @return instanceId
   */
  @javax.annotation.Nullable
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }


  public InstanceAssociationStatusInfo executionDate(OffsetDateTime executionDate) {
    this.executionDate = executionDate;
    return this;
  }

  /**
   * Get executionDate
   * @return executionDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getExecutionDate() {
    return executionDate;
  }

  public void setExecutionDate(OffsetDateTime executionDate) {
    this.executionDate = executionDate;
  }


  public InstanceAssociationStatusInfo status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public InstanceAssociationStatusInfo detailedStatus(String detailedStatus) {
    this.detailedStatus = detailedStatus;
    return this;
  }

  /**
   * Get detailedStatus
   * @return detailedStatus
   */
  @javax.annotation.Nullable
  public String getDetailedStatus() {
    return detailedStatus;
  }

  public void setDetailedStatus(String detailedStatus) {
    this.detailedStatus = detailedStatus;
  }


  public InstanceAssociationStatusInfo executionSummary(String executionSummary) {
    this.executionSummary = executionSummary;
    return this;
  }

  /**
   * Get executionSummary
   * @return executionSummary
   */
  @javax.annotation.Nullable
  public String getExecutionSummary() {
    return executionSummary;
  }

  public void setExecutionSummary(String executionSummary) {
    this.executionSummary = executionSummary;
  }


  public InstanceAssociationStatusInfo errorCode(String errorCode) {
    this.errorCode = errorCode;
    return this;
  }

  /**
   * Get errorCode
   * @return errorCode
   */
  @javax.annotation.Nullable
  public String getErrorCode() {
    return errorCode;
  }

  public void setErrorCode(String errorCode) {
    this.errorCode = errorCode;
  }


  public InstanceAssociationStatusInfo outputUrl(InstanceAssociationStatusInfoOutputUrl outputUrl) {
    this.outputUrl = outputUrl;
    return this;
  }

  /**
   * Get outputUrl
   * @return outputUrl
   */
  @javax.annotation.Nullable
  public InstanceAssociationStatusInfoOutputUrl getOutputUrl() {
    return outputUrl;
  }

  public void setOutputUrl(InstanceAssociationStatusInfoOutputUrl outputUrl) {
    this.outputUrl = outputUrl;
  }


  public InstanceAssociationStatusInfo associationName(String associationName) {
    this.associationName = associationName;
    return this;
  }

  /**
   * Get associationName
   * @return associationName
   */
  @javax.annotation.Nullable
  public String getAssociationName() {
    return associationName;
  }

  public void setAssociationName(String associationName) {
    this.associationName = associationName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstanceAssociationStatusInfo instanceAssociationStatusInfo = (InstanceAssociationStatusInfo) o;
    return Objects.equals(this.associationId, instanceAssociationStatusInfo.associationId) &&
        Objects.equals(this.name, instanceAssociationStatusInfo.name) &&
        Objects.equals(this.documentVersion, instanceAssociationStatusInfo.documentVersion) &&
        Objects.equals(this.associationVersion, instanceAssociationStatusInfo.associationVersion) &&
        Objects.equals(this.instanceId, instanceAssociationStatusInfo.instanceId) &&
        Objects.equals(this.executionDate, instanceAssociationStatusInfo.executionDate) &&
        Objects.equals(this.status, instanceAssociationStatusInfo.status) &&
        Objects.equals(this.detailedStatus, instanceAssociationStatusInfo.detailedStatus) &&
        Objects.equals(this.executionSummary, instanceAssociationStatusInfo.executionSummary) &&
        Objects.equals(this.errorCode, instanceAssociationStatusInfo.errorCode) &&
        Objects.equals(this.outputUrl, instanceAssociationStatusInfo.outputUrl) &&
        Objects.equals(this.associationName, instanceAssociationStatusInfo.associationName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(associationId, name, documentVersion, associationVersion, instanceId, executionDate, status, detailedStatus, executionSummary, errorCode, outputUrl, associationName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstanceAssociationStatusInfo {\n");
    sb.append("    associationId: ").append(toIndentedString(associationId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    documentVersion: ").append(toIndentedString(documentVersion)).append("\n");
    sb.append("    associationVersion: ").append(toIndentedString(associationVersion)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    executionDate: ").append(toIndentedString(executionDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    detailedStatus: ").append(toIndentedString(detailedStatus)).append("\n");
    sb.append("    executionSummary: ").append(toIndentedString(executionSummary)).append("\n");
    sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
    sb.append("    outputUrl: ").append(toIndentedString(outputUrl)).append("\n");
    sb.append("    associationName: ").append(toIndentedString(associationName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AssociationId");
    openapiFields.add("Name");
    openapiFields.add("DocumentVersion");
    openapiFields.add("AssociationVersion");
    openapiFields.add("InstanceId");
    openapiFields.add("ExecutionDate");
    openapiFields.add("Status");
    openapiFields.add("DetailedStatus");
    openapiFields.add("ExecutionSummary");
    openapiFields.add("ErrorCode");
    openapiFields.add("OutputUrl");
    openapiFields.add("AssociationName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to InstanceAssociationStatusInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!InstanceAssociationStatusInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in InstanceAssociationStatusInfo is not found in the empty JSON string", InstanceAssociationStatusInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!InstanceAssociationStatusInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `InstanceAssociationStatusInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AssociationId`
      if (jsonObj.get("AssociationId") != null && !jsonObj.get("AssociationId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AssociationId"));
      }
      // validate the optional field `Name`
      if (jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Name"));
      }
      // validate the optional field `DocumentVersion`
      if (jsonObj.get("DocumentVersion") != null && !jsonObj.get("DocumentVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DocumentVersion"));
      }
      // validate the optional field `AssociationVersion`
      if (jsonObj.get("AssociationVersion") != null && !jsonObj.get("AssociationVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AssociationVersion"));
      }
      // validate the optional field `InstanceId`
      if (jsonObj.get("InstanceId") != null && !jsonObj.get("InstanceId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("InstanceId"));
      }
      // validate the optional field `ExecutionDate`
      if (jsonObj.get("ExecutionDate") != null && !jsonObj.get("ExecutionDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("ExecutionDate"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `DetailedStatus`
      if (jsonObj.get("DetailedStatus") != null && !jsonObj.get("DetailedStatus").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DetailedStatus"));
      }
      // validate the optional field `ExecutionSummary`
      if (jsonObj.get("ExecutionSummary") != null && !jsonObj.get("ExecutionSummary").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ExecutionSummary"));
      }
      // validate the optional field `ErrorCode`
      if (jsonObj.get("ErrorCode") != null && !jsonObj.get("ErrorCode").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ErrorCode"));
      }
      // validate the optional field `OutputUrl`
      if (jsonObj.get("OutputUrl") != null && !jsonObj.get("OutputUrl").isJsonNull()) {
        InstanceAssociationStatusInfoOutputUrl.validateJsonElement(jsonObj.get("OutputUrl"));
      }
      // validate the optional field `AssociationName`
      if (jsonObj.get("AssociationName") != null && !jsonObj.get("AssociationName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AssociationName"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InstanceAssociationStatusInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InstanceAssociationStatusInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InstanceAssociationStatusInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InstanceAssociationStatusInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<InstanceAssociationStatusInfo>() {
           @Override
           public void write(JsonWriter out, InstanceAssociationStatusInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public InstanceAssociationStatusInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of InstanceAssociationStatusInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of InstanceAssociationStatusInfo
   * @throws IOException if the JSON string is invalid with respect to InstanceAssociationStatusInfo
   */
  public static InstanceAssociationStatusInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InstanceAssociationStatusInfo.class);
  }

  /**
   * Convert an instance of InstanceAssociationStatusInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

