/*
 * Amazon Simple Systems Manager (SSM)
 * <p>Amazon Web Services Systems Manager is the operations hub for your Amazon Web Services applications and resources and a secure end-to-end management solution for hybrid cloud environments that enables safe and secure operations at scale.</p> <p>This reference is intended to be used with the <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/\">Amazon Web Services Systems Manager User Guide</a>. To get started, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html\">Setting up Amazon Web Services Systems Manager</a>.</p> <p class=\"title\"> <b>Related resources</b> </p> <ul> <li> <p>For information about each of the capabilities that comprise Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/systems-manager-capabilities.html\">Systems Manager capabilities</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </li> <li> <p>For details about predefined runbooks for Automation, a capability of Amazon Web Services Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-runbook-reference.html\">Systems Manager Automation runbook reference</a> </i>.</p> </li> <li> <p>For information about AppConfig, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/\">AppConfig User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/\">AppConfig API Reference</a> </i>.</p> </li> <li> <p>For information about Incident Manager, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/userguide/\">Systems Manager Incident Manager User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/APIReference/\">Systems Manager Incident Manager API Reference</a> </i>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2014-11-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ResourceDataSyncSourceAwsOrganizationsSource;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Information about the source of the data included in the resource data sync.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:14:21.701211-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ResourceDataSyncSource {
  public static final String SERIALIZED_NAME_SOURCE_TYPE = "SourceType";
  @SerializedName(SERIALIZED_NAME_SOURCE_TYPE)
  private String sourceType;

  public static final String SERIALIZED_NAME_AWS_ORGANIZATIONS_SOURCE = "AwsOrganizationsSource";
  @SerializedName(SERIALIZED_NAME_AWS_ORGANIZATIONS_SOURCE)
  private ResourceDataSyncSourceAwsOrganizationsSource awsOrganizationsSource;

  public static final String SERIALIZED_NAME_SOURCE_REGIONS = "SourceRegions";
  @SerializedName(SERIALIZED_NAME_SOURCE_REGIONS)
  private List sourceRegions;

  public static final String SERIALIZED_NAME_INCLUDE_FUTURE_REGIONS = "IncludeFutureRegions";
  @SerializedName(SERIALIZED_NAME_INCLUDE_FUTURE_REGIONS)
  private Boolean includeFutureRegions;

  public static final String SERIALIZED_NAME_ENABLE_ALL_OPS_DATA_SOURCES = "EnableAllOpsDataSources";
  @SerializedName(SERIALIZED_NAME_ENABLE_ALL_OPS_DATA_SOURCES)
  private Boolean enableAllOpsDataSources;

  public ResourceDataSyncSource() {
  }

  public ResourceDataSyncSource sourceType(String sourceType) {
    this.sourceType = sourceType;
    return this;
  }

  /**
   * Get sourceType
   * @return sourceType
   */
  @javax.annotation.Nonnull
  public String getSourceType() {
    return sourceType;
  }

  public void setSourceType(String sourceType) {
    this.sourceType = sourceType;
  }


  public ResourceDataSyncSource awsOrganizationsSource(ResourceDataSyncSourceAwsOrganizationsSource awsOrganizationsSource) {
    this.awsOrganizationsSource = awsOrganizationsSource;
    return this;
  }

  /**
   * Get awsOrganizationsSource
   * @return awsOrganizationsSource
   */
  @javax.annotation.Nullable
  public ResourceDataSyncSourceAwsOrganizationsSource getAwsOrganizationsSource() {
    return awsOrganizationsSource;
  }

  public void setAwsOrganizationsSource(ResourceDataSyncSourceAwsOrganizationsSource awsOrganizationsSource) {
    this.awsOrganizationsSource = awsOrganizationsSource;
  }


  public ResourceDataSyncSource sourceRegions(List sourceRegions) {
    this.sourceRegions = sourceRegions;
    return this;
  }

  /**
   * Get sourceRegions
   * @return sourceRegions
   */
  @javax.annotation.Nonnull
  public List getSourceRegions() {
    return sourceRegions;
  }

  public void setSourceRegions(List sourceRegions) {
    this.sourceRegions = sourceRegions;
  }


  public ResourceDataSyncSource includeFutureRegions(Boolean includeFutureRegions) {
    this.includeFutureRegions = includeFutureRegions;
    return this;
  }

  /**
   * Get includeFutureRegions
   * @return includeFutureRegions
   */
  @javax.annotation.Nullable
  public Boolean getIncludeFutureRegions() {
    return includeFutureRegions;
  }

  public void setIncludeFutureRegions(Boolean includeFutureRegions) {
    this.includeFutureRegions = includeFutureRegions;
  }


  public ResourceDataSyncSource enableAllOpsDataSources(Boolean enableAllOpsDataSources) {
    this.enableAllOpsDataSources = enableAllOpsDataSources;
    return this;
  }

  /**
   * Get enableAllOpsDataSources
   * @return enableAllOpsDataSources
   */
  @javax.annotation.Nullable
  public Boolean getEnableAllOpsDataSources() {
    return enableAllOpsDataSources;
  }

  public void setEnableAllOpsDataSources(Boolean enableAllOpsDataSources) {
    this.enableAllOpsDataSources = enableAllOpsDataSources;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResourceDataSyncSource resourceDataSyncSource = (ResourceDataSyncSource) o;
    return Objects.equals(this.sourceType, resourceDataSyncSource.sourceType) &&
        Objects.equals(this.awsOrganizationsSource, resourceDataSyncSource.awsOrganizationsSource) &&
        Objects.equals(this.sourceRegions, resourceDataSyncSource.sourceRegions) &&
        Objects.equals(this.includeFutureRegions, resourceDataSyncSource.includeFutureRegions) &&
        Objects.equals(this.enableAllOpsDataSources, resourceDataSyncSource.enableAllOpsDataSources);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sourceType, awsOrganizationsSource, sourceRegions, includeFutureRegions, enableAllOpsDataSources);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResourceDataSyncSource {\n");
    sb.append("    sourceType: ").append(toIndentedString(sourceType)).append("\n");
    sb.append("    awsOrganizationsSource: ").append(toIndentedString(awsOrganizationsSource)).append("\n");
    sb.append("    sourceRegions: ").append(toIndentedString(sourceRegions)).append("\n");
    sb.append("    includeFutureRegions: ").append(toIndentedString(includeFutureRegions)).append("\n");
    sb.append("    enableAllOpsDataSources: ").append(toIndentedString(enableAllOpsDataSources)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("SourceType");
    openapiFields.add("AwsOrganizationsSource");
    openapiFields.add("SourceRegions");
    openapiFields.add("IncludeFutureRegions");
    openapiFields.add("EnableAllOpsDataSources");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("SourceType");
    openapiRequiredFields.add("SourceRegions");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ResourceDataSyncSource
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ResourceDataSyncSource.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ResourceDataSyncSource is not found in the empty JSON string", ResourceDataSyncSource.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ResourceDataSyncSource.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ResourceDataSyncSource` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ResourceDataSyncSource.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `SourceType`
      String.validateJsonElement(jsonObj.get("SourceType"));
      // validate the optional field `AwsOrganizationsSource`
      if (jsonObj.get("AwsOrganizationsSource") != null && !jsonObj.get("AwsOrganizationsSource").isJsonNull()) {
        ResourceDataSyncSourceAwsOrganizationsSource.validateJsonElement(jsonObj.get("AwsOrganizationsSource"));
      }
      // validate the required field `SourceRegions`
      List.validateJsonElement(jsonObj.get("SourceRegions"));
      // validate the optional field `IncludeFutureRegions`
      if (jsonObj.get("IncludeFutureRegions") != null && !jsonObj.get("IncludeFutureRegions").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("IncludeFutureRegions"));
      }
      // validate the optional field `EnableAllOpsDataSources`
      if (jsonObj.get("EnableAllOpsDataSources") != null && !jsonObj.get("EnableAllOpsDataSources").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("EnableAllOpsDataSources"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ResourceDataSyncSource.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ResourceDataSyncSource' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ResourceDataSyncSource> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ResourceDataSyncSource.class));

       return (TypeAdapter<T>) new TypeAdapter<ResourceDataSyncSource>() {
           @Override
           public void write(JsonWriter out, ResourceDataSyncSource value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ResourceDataSyncSource read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ResourceDataSyncSource given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ResourceDataSyncSource
   * @throws IOException if the JSON string is invalid with respect to ResourceDataSyncSource
   */
  public static ResourceDataSyncSource fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ResourceDataSyncSource.class);
  }

  /**
   * Convert an instance of ResourceDataSyncSource to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

