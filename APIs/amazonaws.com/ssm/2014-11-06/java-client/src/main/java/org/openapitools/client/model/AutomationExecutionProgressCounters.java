/*
 * Amazon Simple Systems Manager (SSM)
 * <p>Amazon Web Services Systems Manager is the operations hub for your Amazon Web Services applications and resources and a secure end-to-end management solution for hybrid cloud environments that enables safe and secure operations at scale.</p> <p>This reference is intended to be used with the <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/\">Amazon Web Services Systems Manager User Guide</a>. To get started, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html\">Setting up Amazon Web Services Systems Manager</a>.</p> <p class=\"title\"> <b>Related resources</b> </p> <ul> <li> <p>For information about each of the capabilities that comprise Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/systems-manager-capabilities.html\">Systems Manager capabilities</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </li> <li> <p>For details about predefined runbooks for Automation, a capability of Amazon Web Services Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-runbook-reference.html\">Systems Manager Automation runbook reference</a> </i>.</p> </li> <li> <p>For information about AppConfig, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/\">AppConfig User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/\">AppConfig API Reference</a> </i>.</p> </li> <li> <p>For information about Incident Manager, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/userguide/\">Systems Manager Incident Manager User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/APIReference/\">Systems Manager Incident Manager API Reference</a> </i>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2014-11-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AutomationExecutionProgressCounters
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:14:21.701211-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AutomationExecutionProgressCounters {
  public static final String SERIALIZED_NAME_TOTAL_STEPS = "TotalSteps";
  @SerializedName(SERIALIZED_NAME_TOTAL_STEPS)
  private Integer totalSteps;

  public static final String SERIALIZED_NAME_SUCCESS_STEPS = "SuccessSteps";
  @SerializedName(SERIALIZED_NAME_SUCCESS_STEPS)
  private Integer successSteps;

  public static final String SERIALIZED_NAME_FAILED_STEPS = "FailedSteps";
  @SerializedName(SERIALIZED_NAME_FAILED_STEPS)
  private Integer failedSteps;

  public static final String SERIALIZED_NAME_CANCELLED_STEPS = "CancelledSteps";
  @SerializedName(SERIALIZED_NAME_CANCELLED_STEPS)
  private Integer cancelledSteps;

  public static final String SERIALIZED_NAME_TIMED_OUT_STEPS = "TimedOutSteps";
  @SerializedName(SERIALIZED_NAME_TIMED_OUT_STEPS)
  private Integer timedOutSteps;

  public AutomationExecutionProgressCounters() {
  }

  public AutomationExecutionProgressCounters totalSteps(Integer totalSteps) {
    this.totalSteps = totalSteps;
    return this;
  }

  /**
   * Get totalSteps
   * @return totalSteps
   */
  @javax.annotation.Nullable
  public Integer getTotalSteps() {
    return totalSteps;
  }

  public void setTotalSteps(Integer totalSteps) {
    this.totalSteps = totalSteps;
  }


  public AutomationExecutionProgressCounters successSteps(Integer successSteps) {
    this.successSteps = successSteps;
    return this;
  }

  /**
   * Get successSteps
   * @return successSteps
   */
  @javax.annotation.Nullable
  public Integer getSuccessSteps() {
    return successSteps;
  }

  public void setSuccessSteps(Integer successSteps) {
    this.successSteps = successSteps;
  }


  public AutomationExecutionProgressCounters failedSteps(Integer failedSteps) {
    this.failedSteps = failedSteps;
    return this;
  }

  /**
   * Get failedSteps
   * @return failedSteps
   */
  @javax.annotation.Nullable
  public Integer getFailedSteps() {
    return failedSteps;
  }

  public void setFailedSteps(Integer failedSteps) {
    this.failedSteps = failedSteps;
  }


  public AutomationExecutionProgressCounters cancelledSteps(Integer cancelledSteps) {
    this.cancelledSteps = cancelledSteps;
    return this;
  }

  /**
   * Get cancelledSteps
   * @return cancelledSteps
   */
  @javax.annotation.Nullable
  public Integer getCancelledSteps() {
    return cancelledSteps;
  }

  public void setCancelledSteps(Integer cancelledSteps) {
    this.cancelledSteps = cancelledSteps;
  }


  public AutomationExecutionProgressCounters timedOutSteps(Integer timedOutSteps) {
    this.timedOutSteps = timedOutSteps;
    return this;
  }

  /**
   * Get timedOutSteps
   * @return timedOutSteps
   */
  @javax.annotation.Nullable
  public Integer getTimedOutSteps() {
    return timedOutSteps;
  }

  public void setTimedOutSteps(Integer timedOutSteps) {
    this.timedOutSteps = timedOutSteps;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutomationExecutionProgressCounters automationExecutionProgressCounters = (AutomationExecutionProgressCounters) o;
    return Objects.equals(this.totalSteps, automationExecutionProgressCounters.totalSteps) &&
        Objects.equals(this.successSteps, automationExecutionProgressCounters.successSteps) &&
        Objects.equals(this.failedSteps, automationExecutionProgressCounters.failedSteps) &&
        Objects.equals(this.cancelledSteps, automationExecutionProgressCounters.cancelledSteps) &&
        Objects.equals(this.timedOutSteps, automationExecutionProgressCounters.timedOutSteps);
  }

  @Override
  public int hashCode() {
    return Objects.hash(totalSteps, successSteps, failedSteps, cancelledSteps, timedOutSteps);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutomationExecutionProgressCounters {\n");
    sb.append("    totalSteps: ").append(toIndentedString(totalSteps)).append("\n");
    sb.append("    successSteps: ").append(toIndentedString(successSteps)).append("\n");
    sb.append("    failedSteps: ").append(toIndentedString(failedSteps)).append("\n");
    sb.append("    cancelledSteps: ").append(toIndentedString(cancelledSteps)).append("\n");
    sb.append("    timedOutSteps: ").append(toIndentedString(timedOutSteps)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("TotalSteps");
    openapiFields.add("SuccessSteps");
    openapiFields.add("FailedSteps");
    openapiFields.add("CancelledSteps");
    openapiFields.add("TimedOutSteps");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AutomationExecutionProgressCounters
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AutomationExecutionProgressCounters.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AutomationExecutionProgressCounters is not found in the empty JSON string", AutomationExecutionProgressCounters.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AutomationExecutionProgressCounters.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AutomationExecutionProgressCounters` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `TotalSteps`
      if (jsonObj.get("TotalSteps") != null && !jsonObj.get("TotalSteps").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("TotalSteps"));
      }
      // validate the optional field `SuccessSteps`
      if (jsonObj.get("SuccessSteps") != null && !jsonObj.get("SuccessSteps").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("SuccessSteps"));
      }
      // validate the optional field `FailedSteps`
      if (jsonObj.get("FailedSteps") != null && !jsonObj.get("FailedSteps").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("FailedSteps"));
      }
      // validate the optional field `CancelledSteps`
      if (jsonObj.get("CancelledSteps") != null && !jsonObj.get("CancelledSteps").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("CancelledSteps"));
      }
      // validate the optional field `TimedOutSteps`
      if (jsonObj.get("TimedOutSteps") != null && !jsonObj.get("TimedOutSteps").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("TimedOutSteps"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AutomationExecutionProgressCounters.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AutomationExecutionProgressCounters' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AutomationExecutionProgressCounters> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AutomationExecutionProgressCounters.class));

       return (TypeAdapter<T>) new TypeAdapter<AutomationExecutionProgressCounters>() {
           @Override
           public void write(JsonWriter out, AutomationExecutionProgressCounters value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AutomationExecutionProgressCounters read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AutomationExecutionProgressCounters given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AutomationExecutionProgressCounters
   * @throws IOException if the JSON string is invalid with respect to AutomationExecutionProgressCounters
   */
  public static AutomationExecutionProgressCounters fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AutomationExecutionProgressCounters.class);
  }

  /**
   * Convert an instance of AutomationExecutionProgressCounters to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

