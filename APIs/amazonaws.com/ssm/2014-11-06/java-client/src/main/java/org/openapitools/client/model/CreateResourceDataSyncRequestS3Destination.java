/*
 * Amazon Simple Systems Manager (SSM)
 * <p>Amazon Web Services Systems Manager is the operations hub for your Amazon Web Services applications and resources and a secure end-to-end management solution for hybrid cloud environments that enables safe and secure operations at scale.</p> <p>This reference is intended to be used with the <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/\">Amazon Web Services Systems Manager User Guide</a>. To get started, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html\">Setting up Amazon Web Services Systems Manager</a>.</p> <p class=\"title\"> <b>Related resources</b> </p> <ul> <li> <p>For information about each of the capabilities that comprise Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/systems-manager-capabilities.html\">Systems Manager capabilities</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </li> <li> <p>For details about predefined runbooks for Automation, a capability of Amazon Web Services Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-runbook-reference.html\">Systems Manager Automation runbook reference</a> </i>.</p> </li> <li> <p>For information about AppConfig, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/\">AppConfig User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/\">AppConfig API Reference</a> </i>.</p> </li> <li> <p>For information about Incident Manager, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/userguide/\">Systems Manager Incident Manager User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/APIReference/\">Systems Manager Incident Manager API Reference</a> </i>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2014-11-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ResourceDataSyncS3DestinationDestinationDataSharing;
import org.openapitools.client.model.ResourceDataSyncS3Format;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateResourceDataSyncRequestS3Destination
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:14:21.701211-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateResourceDataSyncRequestS3Destination {
  public static final String SERIALIZED_NAME_BUCKET_NAME = "BucketName";
  @SerializedName(SERIALIZED_NAME_BUCKET_NAME)
  private String bucketName;

  public static final String SERIALIZED_NAME_PREFIX = "Prefix";
  @SerializedName(SERIALIZED_NAME_PREFIX)
  private String prefix;

  public static final String SERIALIZED_NAME_SYNC_FORMAT = "SyncFormat";
  @SerializedName(SERIALIZED_NAME_SYNC_FORMAT)
  private ResourceDataSyncS3Format syncFormat;

  public static final String SERIALIZED_NAME_REGION = "Region";
  @SerializedName(SERIALIZED_NAME_REGION)
  private String region;

  public static final String SERIALIZED_NAME_AW_S_K_M_S_KEY_A_R_N = "AWSKMSKeyARN";
  @SerializedName(SERIALIZED_NAME_AW_S_K_M_S_KEY_A_R_N)
  private String awSKMSKeyARN;

  public static final String SERIALIZED_NAME_DESTINATION_DATA_SHARING = "DestinationDataSharing";
  @SerializedName(SERIALIZED_NAME_DESTINATION_DATA_SHARING)
  private ResourceDataSyncS3DestinationDestinationDataSharing destinationDataSharing;

  public CreateResourceDataSyncRequestS3Destination() {
  }

  public CreateResourceDataSyncRequestS3Destination bucketName(String bucketName) {
    this.bucketName = bucketName;
    return this;
  }

  /**
   * Get bucketName
   * @return bucketName
   */
  @javax.annotation.Nonnull
  public String getBucketName() {
    return bucketName;
  }

  public void setBucketName(String bucketName) {
    this.bucketName = bucketName;
  }


  public CreateResourceDataSyncRequestS3Destination prefix(String prefix) {
    this.prefix = prefix;
    return this;
  }

  /**
   * Get prefix
   * @return prefix
   */
  @javax.annotation.Nullable
  public String getPrefix() {
    return prefix;
  }

  public void setPrefix(String prefix) {
    this.prefix = prefix;
  }


  public CreateResourceDataSyncRequestS3Destination syncFormat(ResourceDataSyncS3Format syncFormat) {
    this.syncFormat = syncFormat;
    return this;
  }

  /**
   * Get syncFormat
   * @return syncFormat
   */
  @javax.annotation.Nonnull
  public ResourceDataSyncS3Format getSyncFormat() {
    return syncFormat;
  }

  public void setSyncFormat(ResourceDataSyncS3Format syncFormat) {
    this.syncFormat = syncFormat;
  }


  public CreateResourceDataSyncRequestS3Destination region(String region) {
    this.region = region;
    return this;
  }

  /**
   * Get region
   * @return region
   */
  @javax.annotation.Nonnull
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }


  public CreateResourceDataSyncRequestS3Destination awSKMSKeyARN(String awSKMSKeyARN) {
    this.awSKMSKeyARN = awSKMSKeyARN;
    return this;
  }

  /**
   * Get awSKMSKeyARN
   * @return awSKMSKeyARN
   */
  @javax.annotation.Nullable
  public String getAwSKMSKeyARN() {
    return awSKMSKeyARN;
  }

  public void setAwSKMSKeyARN(String awSKMSKeyARN) {
    this.awSKMSKeyARN = awSKMSKeyARN;
  }


  public CreateResourceDataSyncRequestS3Destination destinationDataSharing(ResourceDataSyncS3DestinationDestinationDataSharing destinationDataSharing) {
    this.destinationDataSharing = destinationDataSharing;
    return this;
  }

  /**
   * Get destinationDataSharing
   * @return destinationDataSharing
   */
  @javax.annotation.Nullable
  public ResourceDataSyncS3DestinationDestinationDataSharing getDestinationDataSharing() {
    return destinationDataSharing;
  }

  public void setDestinationDataSharing(ResourceDataSyncS3DestinationDestinationDataSharing destinationDataSharing) {
    this.destinationDataSharing = destinationDataSharing;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateResourceDataSyncRequestS3Destination createResourceDataSyncRequestS3Destination = (CreateResourceDataSyncRequestS3Destination) o;
    return Objects.equals(this.bucketName, createResourceDataSyncRequestS3Destination.bucketName) &&
        Objects.equals(this.prefix, createResourceDataSyncRequestS3Destination.prefix) &&
        Objects.equals(this.syncFormat, createResourceDataSyncRequestS3Destination.syncFormat) &&
        Objects.equals(this.region, createResourceDataSyncRequestS3Destination.region) &&
        Objects.equals(this.awSKMSKeyARN, createResourceDataSyncRequestS3Destination.awSKMSKeyARN) &&
        Objects.equals(this.destinationDataSharing, createResourceDataSyncRequestS3Destination.destinationDataSharing);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bucketName, prefix, syncFormat, region, awSKMSKeyARN, destinationDataSharing);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateResourceDataSyncRequestS3Destination {\n");
    sb.append("    bucketName: ").append(toIndentedString(bucketName)).append("\n");
    sb.append("    prefix: ").append(toIndentedString(prefix)).append("\n");
    sb.append("    syncFormat: ").append(toIndentedString(syncFormat)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    awSKMSKeyARN: ").append(toIndentedString(awSKMSKeyARN)).append("\n");
    sb.append("    destinationDataSharing: ").append(toIndentedString(destinationDataSharing)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("BucketName");
    openapiFields.add("Prefix");
    openapiFields.add("SyncFormat");
    openapiFields.add("Region");
    openapiFields.add("AWSKMSKeyARN");
    openapiFields.add("DestinationDataSharing");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("BucketName");
    openapiRequiredFields.add("SyncFormat");
    openapiRequiredFields.add("Region");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateResourceDataSyncRequestS3Destination
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateResourceDataSyncRequestS3Destination.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateResourceDataSyncRequestS3Destination is not found in the empty JSON string", CreateResourceDataSyncRequestS3Destination.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateResourceDataSyncRequestS3Destination.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateResourceDataSyncRequestS3Destination` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateResourceDataSyncRequestS3Destination.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `BucketName`
      String.validateJsonElement(jsonObj.get("BucketName"));
      // validate the optional field `Prefix`
      if (jsonObj.get("Prefix") != null && !jsonObj.get("Prefix").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Prefix"));
      }
      // validate the required field `SyncFormat`
      ResourceDataSyncS3Format.validateJsonElement(jsonObj.get("SyncFormat"));
      // validate the required field `Region`
      String.validateJsonElement(jsonObj.get("Region"));
      // validate the optional field `AWSKMSKeyARN`
      if (jsonObj.get("AWSKMSKeyARN") != null && !jsonObj.get("AWSKMSKeyARN").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AWSKMSKeyARN"));
      }
      // validate the optional field `DestinationDataSharing`
      if (jsonObj.get("DestinationDataSharing") != null && !jsonObj.get("DestinationDataSharing").isJsonNull()) {
        ResourceDataSyncS3DestinationDestinationDataSharing.validateJsonElement(jsonObj.get("DestinationDataSharing"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateResourceDataSyncRequestS3Destination.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateResourceDataSyncRequestS3Destination' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateResourceDataSyncRequestS3Destination> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateResourceDataSyncRequestS3Destination.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateResourceDataSyncRequestS3Destination>() {
           @Override
           public void write(JsonWriter out, CreateResourceDataSyncRequestS3Destination value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateResourceDataSyncRequestS3Destination read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateResourceDataSyncRequestS3Destination given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateResourceDataSyncRequestS3Destination
   * @throws IOException if the JSON string is invalid with respect to CreateResourceDataSyncRequestS3Destination
   */
  public static CreateResourceDataSyncRequestS3Destination fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateResourceDataSyncRequestS3Destination.class);
  }

  /**
   * Convert an instance of CreateResourceDataSyncRequestS3Destination to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

