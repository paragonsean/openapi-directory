/*
 * Amazon Simple Systems Manager (SSM)
 * <p>Amazon Web Services Systems Manager is the operations hub for your Amazon Web Services applications and resources and a secure end-to-end management solution for hybrid cloud environments that enables safe and secure operations at scale.</p> <p>This reference is intended to be used with the <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/\">Amazon Web Services Systems Manager User Guide</a>. To get started, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html\">Setting up Amazon Web Services Systems Manager</a>.</p> <p class=\"title\"> <b>Related resources</b> </p> <ul> <li> <p>For information about each of the capabilities that comprise Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/systems-manager-capabilities.html\">Systems Manager capabilities</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </li> <li> <p>For details about predefined runbooks for Automation, a capability of Amazon Web Services Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-runbook-reference.html\">Systems Manager Automation runbook reference</a> </i>.</p> </li> <li> <p>For information about AppConfig, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/\">AppConfig User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/\">AppConfig API Reference</a> </i>.</p> </li> <li> <p>For information about Incident Manager, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/userguide/\">Systems Manager Incident Manager User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/APIReference/\">Systems Manager Incident Manager API Reference</a> </i>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2014-11-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.LastResourceDataSyncStatus;
import org.openapitools.client.model.ResourceDataSyncItemS3Destination;
import org.openapitools.client.model.ResourceDataSyncItemSyncSource;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Information about a resource data sync configuration, including its current status and last successful sync.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:14:21.701211-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ResourceDataSyncItem {
  public static final String SERIALIZED_NAME_SYNC_NAME = "SyncName";
  @SerializedName(SERIALIZED_NAME_SYNC_NAME)
  private String syncName;

  public static final String SERIALIZED_NAME_SYNC_TYPE = "SyncType";
  @SerializedName(SERIALIZED_NAME_SYNC_TYPE)
  private String syncType;

  public static final String SERIALIZED_NAME_SYNC_SOURCE = "SyncSource";
  @SerializedName(SERIALIZED_NAME_SYNC_SOURCE)
  private ResourceDataSyncItemSyncSource syncSource;

  public static final String SERIALIZED_NAME_S3_DESTINATION = "S3Destination";
  @SerializedName(SERIALIZED_NAME_S3_DESTINATION)
  private ResourceDataSyncItemS3Destination s3Destination;

  public static final String SERIALIZED_NAME_LAST_SYNC_TIME = "LastSyncTime";
  @SerializedName(SERIALIZED_NAME_LAST_SYNC_TIME)
  private OffsetDateTime lastSyncTime;

  public static final String SERIALIZED_NAME_LAST_SUCCESSFUL_SYNC_TIME = "LastSuccessfulSyncTime";
  @SerializedName(SERIALIZED_NAME_LAST_SUCCESSFUL_SYNC_TIME)
  private OffsetDateTime lastSuccessfulSyncTime;

  public static final String SERIALIZED_NAME_SYNC_LAST_MODIFIED_TIME = "SyncLastModifiedTime";
  @SerializedName(SERIALIZED_NAME_SYNC_LAST_MODIFIED_TIME)
  private OffsetDateTime syncLastModifiedTime;

  public static final String SERIALIZED_NAME_LAST_STATUS = "LastStatus";
  @SerializedName(SERIALIZED_NAME_LAST_STATUS)
  private LastResourceDataSyncStatus lastStatus;

  public static final String SERIALIZED_NAME_SYNC_CREATED_TIME = "SyncCreatedTime";
  @SerializedName(SERIALIZED_NAME_SYNC_CREATED_TIME)
  private OffsetDateTime syncCreatedTime;

  public static final String SERIALIZED_NAME_LAST_SYNC_STATUS_MESSAGE = "LastSyncStatusMessage";
  @SerializedName(SERIALIZED_NAME_LAST_SYNC_STATUS_MESSAGE)
  private String lastSyncStatusMessage;

  public ResourceDataSyncItem() {
  }

  public ResourceDataSyncItem syncName(String syncName) {
    this.syncName = syncName;
    return this;
  }

  /**
   * Get syncName
   * @return syncName
   */
  @javax.annotation.Nullable
  public String getSyncName() {
    return syncName;
  }

  public void setSyncName(String syncName) {
    this.syncName = syncName;
  }


  public ResourceDataSyncItem syncType(String syncType) {
    this.syncType = syncType;
    return this;
  }

  /**
   * Get syncType
   * @return syncType
   */
  @javax.annotation.Nullable
  public String getSyncType() {
    return syncType;
  }

  public void setSyncType(String syncType) {
    this.syncType = syncType;
  }


  public ResourceDataSyncItem syncSource(ResourceDataSyncItemSyncSource syncSource) {
    this.syncSource = syncSource;
    return this;
  }

  /**
   * Get syncSource
   * @return syncSource
   */
  @javax.annotation.Nullable
  public ResourceDataSyncItemSyncSource getSyncSource() {
    return syncSource;
  }

  public void setSyncSource(ResourceDataSyncItemSyncSource syncSource) {
    this.syncSource = syncSource;
  }


  public ResourceDataSyncItem s3Destination(ResourceDataSyncItemS3Destination s3Destination) {
    this.s3Destination = s3Destination;
    return this;
  }

  /**
   * Get s3Destination
   * @return s3Destination
   */
  @javax.annotation.Nullable
  public ResourceDataSyncItemS3Destination getS3Destination() {
    return s3Destination;
  }

  public void setS3Destination(ResourceDataSyncItemS3Destination s3Destination) {
    this.s3Destination = s3Destination;
  }


  public ResourceDataSyncItem lastSyncTime(OffsetDateTime lastSyncTime) {
    this.lastSyncTime = lastSyncTime;
    return this;
  }

  /**
   * Get lastSyncTime
   * @return lastSyncTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastSyncTime() {
    return lastSyncTime;
  }

  public void setLastSyncTime(OffsetDateTime lastSyncTime) {
    this.lastSyncTime = lastSyncTime;
  }


  public ResourceDataSyncItem lastSuccessfulSyncTime(OffsetDateTime lastSuccessfulSyncTime) {
    this.lastSuccessfulSyncTime = lastSuccessfulSyncTime;
    return this;
  }

  /**
   * Get lastSuccessfulSyncTime
   * @return lastSuccessfulSyncTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastSuccessfulSyncTime() {
    return lastSuccessfulSyncTime;
  }

  public void setLastSuccessfulSyncTime(OffsetDateTime lastSuccessfulSyncTime) {
    this.lastSuccessfulSyncTime = lastSuccessfulSyncTime;
  }


  public ResourceDataSyncItem syncLastModifiedTime(OffsetDateTime syncLastModifiedTime) {
    this.syncLastModifiedTime = syncLastModifiedTime;
    return this;
  }

  /**
   * Get syncLastModifiedTime
   * @return syncLastModifiedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getSyncLastModifiedTime() {
    return syncLastModifiedTime;
  }

  public void setSyncLastModifiedTime(OffsetDateTime syncLastModifiedTime) {
    this.syncLastModifiedTime = syncLastModifiedTime;
  }


  public ResourceDataSyncItem lastStatus(LastResourceDataSyncStatus lastStatus) {
    this.lastStatus = lastStatus;
    return this;
  }

  /**
   * Get lastStatus
   * @return lastStatus
   */
  @javax.annotation.Nullable
  public LastResourceDataSyncStatus getLastStatus() {
    return lastStatus;
  }

  public void setLastStatus(LastResourceDataSyncStatus lastStatus) {
    this.lastStatus = lastStatus;
  }


  public ResourceDataSyncItem syncCreatedTime(OffsetDateTime syncCreatedTime) {
    this.syncCreatedTime = syncCreatedTime;
    return this;
  }

  /**
   * Get syncCreatedTime
   * @return syncCreatedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getSyncCreatedTime() {
    return syncCreatedTime;
  }

  public void setSyncCreatedTime(OffsetDateTime syncCreatedTime) {
    this.syncCreatedTime = syncCreatedTime;
  }


  public ResourceDataSyncItem lastSyncStatusMessage(String lastSyncStatusMessage) {
    this.lastSyncStatusMessage = lastSyncStatusMessage;
    return this;
  }

  /**
   * Get lastSyncStatusMessage
   * @return lastSyncStatusMessage
   */
  @javax.annotation.Nullable
  public String getLastSyncStatusMessage() {
    return lastSyncStatusMessage;
  }

  public void setLastSyncStatusMessage(String lastSyncStatusMessage) {
    this.lastSyncStatusMessage = lastSyncStatusMessage;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResourceDataSyncItem resourceDataSyncItem = (ResourceDataSyncItem) o;
    return Objects.equals(this.syncName, resourceDataSyncItem.syncName) &&
        Objects.equals(this.syncType, resourceDataSyncItem.syncType) &&
        Objects.equals(this.syncSource, resourceDataSyncItem.syncSource) &&
        Objects.equals(this.s3Destination, resourceDataSyncItem.s3Destination) &&
        Objects.equals(this.lastSyncTime, resourceDataSyncItem.lastSyncTime) &&
        Objects.equals(this.lastSuccessfulSyncTime, resourceDataSyncItem.lastSuccessfulSyncTime) &&
        Objects.equals(this.syncLastModifiedTime, resourceDataSyncItem.syncLastModifiedTime) &&
        Objects.equals(this.lastStatus, resourceDataSyncItem.lastStatus) &&
        Objects.equals(this.syncCreatedTime, resourceDataSyncItem.syncCreatedTime) &&
        Objects.equals(this.lastSyncStatusMessage, resourceDataSyncItem.lastSyncStatusMessage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(syncName, syncType, syncSource, s3Destination, lastSyncTime, lastSuccessfulSyncTime, syncLastModifiedTime, lastStatus, syncCreatedTime, lastSyncStatusMessage);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResourceDataSyncItem {\n");
    sb.append("    syncName: ").append(toIndentedString(syncName)).append("\n");
    sb.append("    syncType: ").append(toIndentedString(syncType)).append("\n");
    sb.append("    syncSource: ").append(toIndentedString(syncSource)).append("\n");
    sb.append("    s3Destination: ").append(toIndentedString(s3Destination)).append("\n");
    sb.append("    lastSyncTime: ").append(toIndentedString(lastSyncTime)).append("\n");
    sb.append("    lastSuccessfulSyncTime: ").append(toIndentedString(lastSuccessfulSyncTime)).append("\n");
    sb.append("    syncLastModifiedTime: ").append(toIndentedString(syncLastModifiedTime)).append("\n");
    sb.append("    lastStatus: ").append(toIndentedString(lastStatus)).append("\n");
    sb.append("    syncCreatedTime: ").append(toIndentedString(syncCreatedTime)).append("\n");
    sb.append("    lastSyncStatusMessage: ").append(toIndentedString(lastSyncStatusMessage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("SyncName");
    openapiFields.add("SyncType");
    openapiFields.add("SyncSource");
    openapiFields.add("S3Destination");
    openapiFields.add("LastSyncTime");
    openapiFields.add("LastSuccessfulSyncTime");
    openapiFields.add("SyncLastModifiedTime");
    openapiFields.add("LastStatus");
    openapiFields.add("SyncCreatedTime");
    openapiFields.add("LastSyncStatusMessage");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ResourceDataSyncItem
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ResourceDataSyncItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ResourceDataSyncItem is not found in the empty JSON string", ResourceDataSyncItem.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ResourceDataSyncItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ResourceDataSyncItem` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `SyncName`
      if (jsonObj.get("SyncName") != null && !jsonObj.get("SyncName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SyncName"));
      }
      // validate the optional field `SyncType`
      if (jsonObj.get("SyncType") != null && !jsonObj.get("SyncType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SyncType"));
      }
      // validate the optional field `SyncSource`
      if (jsonObj.get("SyncSource") != null && !jsonObj.get("SyncSource").isJsonNull()) {
        ResourceDataSyncItemSyncSource.validateJsonElement(jsonObj.get("SyncSource"));
      }
      // validate the optional field `S3Destination`
      if (jsonObj.get("S3Destination") != null && !jsonObj.get("S3Destination").isJsonNull()) {
        ResourceDataSyncItemS3Destination.validateJsonElement(jsonObj.get("S3Destination"));
      }
      // validate the optional field `LastSyncTime`
      if (jsonObj.get("LastSyncTime") != null && !jsonObj.get("LastSyncTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastSyncTime"));
      }
      // validate the optional field `LastSuccessfulSyncTime`
      if (jsonObj.get("LastSuccessfulSyncTime") != null && !jsonObj.get("LastSuccessfulSyncTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastSuccessfulSyncTime"));
      }
      // validate the optional field `SyncLastModifiedTime`
      if (jsonObj.get("SyncLastModifiedTime") != null && !jsonObj.get("SyncLastModifiedTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("SyncLastModifiedTime"));
      }
      // validate the optional field `LastStatus`
      if (jsonObj.get("LastStatus") != null && !jsonObj.get("LastStatus").isJsonNull()) {
        LastResourceDataSyncStatus.validateJsonElement(jsonObj.get("LastStatus"));
      }
      // validate the optional field `SyncCreatedTime`
      if (jsonObj.get("SyncCreatedTime") != null && !jsonObj.get("SyncCreatedTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("SyncCreatedTime"));
      }
      // validate the optional field `LastSyncStatusMessage`
      if (jsonObj.get("LastSyncStatusMessage") != null && !jsonObj.get("LastSyncStatusMessage").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LastSyncStatusMessage"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ResourceDataSyncItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ResourceDataSyncItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ResourceDataSyncItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ResourceDataSyncItem.class));

       return (TypeAdapter<T>) new TypeAdapter<ResourceDataSyncItem>() {
           @Override
           public void write(JsonWriter out, ResourceDataSyncItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ResourceDataSyncItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ResourceDataSyncItem given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ResourceDataSyncItem
   * @throws IOException if the JSON string is invalid with respect to ResourceDataSyncItem
   */
  public static ResourceDataSyncItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ResourceDataSyncItem.class);
  }

  /**
   * Convert an instance of ResourceDataSyncItem to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

