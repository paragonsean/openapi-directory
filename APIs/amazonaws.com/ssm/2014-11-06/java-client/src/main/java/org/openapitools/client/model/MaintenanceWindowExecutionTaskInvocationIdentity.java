/*
 * Amazon Simple Systems Manager (SSM)
 * <p>Amazon Web Services Systems Manager is the operations hub for your Amazon Web Services applications and resources and a secure end-to-end management solution for hybrid cloud environments that enables safe and secure operations at scale.</p> <p>This reference is intended to be used with the <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/\">Amazon Web Services Systems Manager User Guide</a>. To get started, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html\">Setting up Amazon Web Services Systems Manager</a>.</p> <p class=\"title\"> <b>Related resources</b> </p> <ul> <li> <p>For information about each of the capabilities that comprise Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/systems-manager-capabilities.html\">Systems Manager capabilities</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </li> <li> <p>For details about predefined runbooks for Automation, a capability of Amazon Web Services Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-runbook-reference.html\">Systems Manager Automation runbook reference</a> </i>.</p> </li> <li> <p>For information about AppConfig, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/\">AppConfig User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/\">AppConfig API Reference</a> </i>.</p> </li> <li> <p>For information about Incident Manager, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/userguide/\">Systems Manager Incident Manager User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/APIReference/\">Systems Manager Incident Manager API Reference</a> </i>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2014-11-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.MaintenanceWindowExecutionStatus;
import org.openapitools.client.model.MaintenanceWindowTaskType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Describes the information about a task invocation for a particular target as part of a task execution performed as part of a maintenance window execution.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:14:21.701211-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class MaintenanceWindowExecutionTaskInvocationIdentity {
  public static final String SERIALIZED_NAME_WINDOW_EXECUTION_ID = "WindowExecutionId";
  @SerializedName(SERIALIZED_NAME_WINDOW_EXECUTION_ID)
  private String windowExecutionId;

  public static final String SERIALIZED_NAME_TASK_EXECUTION_ID = "TaskExecutionId";
  @SerializedName(SERIALIZED_NAME_TASK_EXECUTION_ID)
  private String taskExecutionId;

  public static final String SERIALIZED_NAME_INVOCATION_ID = "InvocationId";
  @SerializedName(SERIALIZED_NAME_INVOCATION_ID)
  private String invocationId;

  public static final String SERIALIZED_NAME_EXECUTION_ID = "ExecutionId";
  @SerializedName(SERIALIZED_NAME_EXECUTION_ID)
  private String executionId;

  public static final String SERIALIZED_NAME_TASK_TYPE = "TaskType";
  @SerializedName(SERIALIZED_NAME_TASK_TYPE)
  private MaintenanceWindowTaskType taskType;

  public static final String SERIALIZED_NAME_PARAMETERS = "Parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  private String parameters;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private MaintenanceWindowExecutionStatus status;

  public static final String SERIALIZED_NAME_STATUS_DETAILS = "StatusDetails";
  @SerializedName(SERIALIZED_NAME_STATUS_DETAILS)
  private String statusDetails;

  public static final String SERIALIZED_NAME_START_TIME = "StartTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_END_TIME = "EndTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private OffsetDateTime endTime;

  public static final String SERIALIZED_NAME_OWNER_INFORMATION = "OwnerInformation";
  @SerializedName(SERIALIZED_NAME_OWNER_INFORMATION)
  private String ownerInformation;

  public static final String SERIALIZED_NAME_WINDOW_TARGET_ID = "WindowTargetId";
  @SerializedName(SERIALIZED_NAME_WINDOW_TARGET_ID)
  private String windowTargetId;

  public MaintenanceWindowExecutionTaskInvocationIdentity() {
  }

  public MaintenanceWindowExecutionTaskInvocationIdentity windowExecutionId(String windowExecutionId) {
    this.windowExecutionId = windowExecutionId;
    return this;
  }

  /**
   * Get windowExecutionId
   * @return windowExecutionId
   */
  @javax.annotation.Nullable
  public String getWindowExecutionId() {
    return windowExecutionId;
  }

  public void setWindowExecutionId(String windowExecutionId) {
    this.windowExecutionId = windowExecutionId;
  }


  public MaintenanceWindowExecutionTaskInvocationIdentity taskExecutionId(String taskExecutionId) {
    this.taskExecutionId = taskExecutionId;
    return this;
  }

  /**
   * Get taskExecutionId
   * @return taskExecutionId
   */
  @javax.annotation.Nullable
  public String getTaskExecutionId() {
    return taskExecutionId;
  }

  public void setTaskExecutionId(String taskExecutionId) {
    this.taskExecutionId = taskExecutionId;
  }


  public MaintenanceWindowExecutionTaskInvocationIdentity invocationId(String invocationId) {
    this.invocationId = invocationId;
    return this;
  }

  /**
   * Get invocationId
   * @return invocationId
   */
  @javax.annotation.Nullable
  public String getInvocationId() {
    return invocationId;
  }

  public void setInvocationId(String invocationId) {
    this.invocationId = invocationId;
  }


  public MaintenanceWindowExecutionTaskInvocationIdentity executionId(String executionId) {
    this.executionId = executionId;
    return this;
  }

  /**
   * Get executionId
   * @return executionId
   */
  @javax.annotation.Nullable
  public String getExecutionId() {
    return executionId;
  }

  public void setExecutionId(String executionId) {
    this.executionId = executionId;
  }


  public MaintenanceWindowExecutionTaskInvocationIdentity taskType(MaintenanceWindowTaskType taskType) {
    this.taskType = taskType;
    return this;
  }

  /**
   * Get taskType
   * @return taskType
   */
  @javax.annotation.Nullable
  public MaintenanceWindowTaskType getTaskType() {
    return taskType;
  }

  public void setTaskType(MaintenanceWindowTaskType taskType) {
    this.taskType = taskType;
  }


  public MaintenanceWindowExecutionTaskInvocationIdentity parameters(String parameters) {
    this.parameters = parameters;
    return this;
  }

  /**
   * Get parameters
   * @return parameters
   */
  @javax.annotation.Nullable
  public String getParameters() {
    return parameters;
  }

  public void setParameters(String parameters) {
    this.parameters = parameters;
  }


  public MaintenanceWindowExecutionTaskInvocationIdentity status(MaintenanceWindowExecutionStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public MaintenanceWindowExecutionStatus getStatus() {
    return status;
  }

  public void setStatus(MaintenanceWindowExecutionStatus status) {
    this.status = status;
  }


  public MaintenanceWindowExecutionTaskInvocationIdentity statusDetails(String statusDetails) {
    this.statusDetails = statusDetails;
    return this;
  }

  /**
   * Get statusDetails
   * @return statusDetails
   */
  @javax.annotation.Nullable
  public String getStatusDetails() {
    return statusDetails;
  }

  public void setStatusDetails(String statusDetails) {
    this.statusDetails = statusDetails;
  }


  public MaintenanceWindowExecutionTaskInvocationIdentity startTime(OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public MaintenanceWindowExecutionTaskInvocationIdentity endTime(OffsetDateTime endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEndTime() {
    return endTime;
  }

  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }


  public MaintenanceWindowExecutionTaskInvocationIdentity ownerInformation(String ownerInformation) {
    this.ownerInformation = ownerInformation;
    return this;
  }

  /**
   * Get ownerInformation
   * @return ownerInformation
   */
  @javax.annotation.Nullable
  public String getOwnerInformation() {
    return ownerInformation;
  }

  public void setOwnerInformation(String ownerInformation) {
    this.ownerInformation = ownerInformation;
  }


  public MaintenanceWindowExecutionTaskInvocationIdentity windowTargetId(String windowTargetId) {
    this.windowTargetId = windowTargetId;
    return this;
  }

  /**
   * Get windowTargetId
   * @return windowTargetId
   */
  @javax.annotation.Nullable
  public String getWindowTargetId() {
    return windowTargetId;
  }

  public void setWindowTargetId(String windowTargetId) {
    this.windowTargetId = windowTargetId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MaintenanceWindowExecutionTaskInvocationIdentity maintenanceWindowExecutionTaskInvocationIdentity = (MaintenanceWindowExecutionTaskInvocationIdentity) o;
    return Objects.equals(this.windowExecutionId, maintenanceWindowExecutionTaskInvocationIdentity.windowExecutionId) &&
        Objects.equals(this.taskExecutionId, maintenanceWindowExecutionTaskInvocationIdentity.taskExecutionId) &&
        Objects.equals(this.invocationId, maintenanceWindowExecutionTaskInvocationIdentity.invocationId) &&
        Objects.equals(this.executionId, maintenanceWindowExecutionTaskInvocationIdentity.executionId) &&
        Objects.equals(this.taskType, maintenanceWindowExecutionTaskInvocationIdentity.taskType) &&
        Objects.equals(this.parameters, maintenanceWindowExecutionTaskInvocationIdentity.parameters) &&
        Objects.equals(this.status, maintenanceWindowExecutionTaskInvocationIdentity.status) &&
        Objects.equals(this.statusDetails, maintenanceWindowExecutionTaskInvocationIdentity.statusDetails) &&
        Objects.equals(this.startTime, maintenanceWindowExecutionTaskInvocationIdentity.startTime) &&
        Objects.equals(this.endTime, maintenanceWindowExecutionTaskInvocationIdentity.endTime) &&
        Objects.equals(this.ownerInformation, maintenanceWindowExecutionTaskInvocationIdentity.ownerInformation) &&
        Objects.equals(this.windowTargetId, maintenanceWindowExecutionTaskInvocationIdentity.windowTargetId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(windowExecutionId, taskExecutionId, invocationId, executionId, taskType, parameters, status, statusDetails, startTime, endTime, ownerInformation, windowTargetId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MaintenanceWindowExecutionTaskInvocationIdentity {\n");
    sb.append("    windowExecutionId: ").append(toIndentedString(windowExecutionId)).append("\n");
    sb.append("    taskExecutionId: ").append(toIndentedString(taskExecutionId)).append("\n");
    sb.append("    invocationId: ").append(toIndentedString(invocationId)).append("\n");
    sb.append("    executionId: ").append(toIndentedString(executionId)).append("\n");
    sb.append("    taskType: ").append(toIndentedString(taskType)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusDetails: ").append(toIndentedString(statusDetails)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    ownerInformation: ").append(toIndentedString(ownerInformation)).append("\n");
    sb.append("    windowTargetId: ").append(toIndentedString(windowTargetId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("WindowExecutionId");
    openapiFields.add("TaskExecutionId");
    openapiFields.add("InvocationId");
    openapiFields.add("ExecutionId");
    openapiFields.add("TaskType");
    openapiFields.add("Parameters");
    openapiFields.add("Status");
    openapiFields.add("StatusDetails");
    openapiFields.add("StartTime");
    openapiFields.add("EndTime");
    openapiFields.add("OwnerInformation");
    openapiFields.add("WindowTargetId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MaintenanceWindowExecutionTaskInvocationIdentity
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MaintenanceWindowExecutionTaskInvocationIdentity.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MaintenanceWindowExecutionTaskInvocationIdentity is not found in the empty JSON string", MaintenanceWindowExecutionTaskInvocationIdentity.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MaintenanceWindowExecutionTaskInvocationIdentity.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MaintenanceWindowExecutionTaskInvocationIdentity` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `WindowExecutionId`
      if (jsonObj.get("WindowExecutionId") != null && !jsonObj.get("WindowExecutionId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("WindowExecutionId"));
      }
      // validate the optional field `TaskExecutionId`
      if (jsonObj.get("TaskExecutionId") != null && !jsonObj.get("TaskExecutionId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TaskExecutionId"));
      }
      // validate the optional field `InvocationId`
      if (jsonObj.get("InvocationId") != null && !jsonObj.get("InvocationId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("InvocationId"));
      }
      // validate the optional field `ExecutionId`
      if (jsonObj.get("ExecutionId") != null && !jsonObj.get("ExecutionId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ExecutionId"));
      }
      // validate the optional field `TaskType`
      if (jsonObj.get("TaskType") != null && !jsonObj.get("TaskType").isJsonNull()) {
        MaintenanceWindowTaskType.validateJsonElement(jsonObj.get("TaskType"));
      }
      // validate the optional field `Parameters`
      if (jsonObj.get("Parameters") != null && !jsonObj.get("Parameters").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Parameters"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        MaintenanceWindowExecutionStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `StatusDetails`
      if (jsonObj.get("StatusDetails") != null && !jsonObj.get("StatusDetails").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StatusDetails"));
      }
      // validate the optional field `StartTime`
      if (jsonObj.get("StartTime") != null && !jsonObj.get("StartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("StartTime"));
      }
      // validate the optional field `EndTime`
      if (jsonObj.get("EndTime") != null && !jsonObj.get("EndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("EndTime"));
      }
      // validate the optional field `OwnerInformation`
      if (jsonObj.get("OwnerInformation") != null && !jsonObj.get("OwnerInformation").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("OwnerInformation"));
      }
      // validate the optional field `WindowTargetId`
      if (jsonObj.get("WindowTargetId") != null && !jsonObj.get("WindowTargetId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("WindowTargetId"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MaintenanceWindowExecutionTaskInvocationIdentity.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MaintenanceWindowExecutionTaskInvocationIdentity' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MaintenanceWindowExecutionTaskInvocationIdentity> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MaintenanceWindowExecutionTaskInvocationIdentity.class));

       return (TypeAdapter<T>) new TypeAdapter<MaintenanceWindowExecutionTaskInvocationIdentity>() {
           @Override
           public void write(JsonWriter out, MaintenanceWindowExecutionTaskInvocationIdentity value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MaintenanceWindowExecutionTaskInvocationIdentity read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MaintenanceWindowExecutionTaskInvocationIdentity given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MaintenanceWindowExecutionTaskInvocationIdentity
   * @throws IOException if the JSON string is invalid with respect to MaintenanceWindowExecutionTaskInvocationIdentity
   */
  public static MaintenanceWindowExecutionTaskInvocationIdentity fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MaintenanceWindowExecutionTaskInvocationIdentity.class);
  }

  /**
   * Convert an instance of MaintenanceWindowExecutionTaskInvocationIdentity to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

