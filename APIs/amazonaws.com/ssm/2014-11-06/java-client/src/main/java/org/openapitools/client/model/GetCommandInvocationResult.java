/*
 * Amazon Simple Systems Manager (SSM)
 * <p>Amazon Web Services Systems Manager is the operations hub for your Amazon Web Services applications and resources and a secure end-to-end management solution for hybrid cloud environments that enables safe and secure operations at scale.</p> <p>This reference is intended to be used with the <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/\">Amazon Web Services Systems Manager User Guide</a>. To get started, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html\">Setting up Amazon Web Services Systems Manager</a>.</p> <p class=\"title\"> <b>Related resources</b> </p> <ul> <li> <p>For information about each of the capabilities that comprise Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/systems-manager-capabilities.html\">Systems Manager capabilities</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </li> <li> <p>For details about predefined runbooks for Automation, a capability of Amazon Web Services Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-runbook-reference.html\">Systems Manager Automation runbook reference</a> </i>.</p> </li> <li> <p>For information about AppConfig, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/\">AppConfig User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/\">AppConfig API Reference</a> </i>.</p> </li> <li> <p>For information about Incident Manager, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/userguide/\">Systems Manager Incident Manager User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/APIReference/\">Systems Manager Incident Manager API Reference</a> </i>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2014-11-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CommandInvocationStatus;
import org.openapitools.client.model.GetCommandInvocationResultCloudWatchOutputConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetCommandInvocationResult
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:14:21.701211-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetCommandInvocationResult {
  public static final String SERIALIZED_NAME_COMMAND_ID = "CommandId";
  @SerializedName(SERIALIZED_NAME_COMMAND_ID)
  private String commandId;

  public static final String SERIALIZED_NAME_INSTANCE_ID = "InstanceId";
  @SerializedName(SERIALIZED_NAME_INSTANCE_ID)
  private String instanceId;

  public static final String SERIALIZED_NAME_COMMENT = "Comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private String comment;

  public static final String SERIALIZED_NAME_DOCUMENT_NAME = "DocumentName";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_NAME)
  private String documentName;

  public static final String SERIALIZED_NAME_DOCUMENT_VERSION = "DocumentVersion";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_VERSION)
  private String documentVersion;

  public static final String SERIALIZED_NAME_PLUGIN_NAME = "PluginName";
  @SerializedName(SERIALIZED_NAME_PLUGIN_NAME)
  private String pluginName;

  public static final String SERIALIZED_NAME_RESPONSE_CODE = "ResponseCode";
  @SerializedName(SERIALIZED_NAME_RESPONSE_CODE)
  private Integer responseCode;

  public static final String SERIALIZED_NAME_EXECUTION_START_DATE_TIME = "ExecutionStartDateTime";
  @SerializedName(SERIALIZED_NAME_EXECUTION_START_DATE_TIME)
  private String executionStartDateTime;

  public static final String SERIALIZED_NAME_EXECUTION_ELAPSED_TIME = "ExecutionElapsedTime";
  @SerializedName(SERIALIZED_NAME_EXECUTION_ELAPSED_TIME)
  private String executionElapsedTime;

  public static final String SERIALIZED_NAME_EXECUTION_END_DATE_TIME = "ExecutionEndDateTime";
  @SerializedName(SERIALIZED_NAME_EXECUTION_END_DATE_TIME)
  private String executionEndDateTime;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private CommandInvocationStatus status;

  public static final String SERIALIZED_NAME_STATUS_DETAILS = "StatusDetails";
  @SerializedName(SERIALIZED_NAME_STATUS_DETAILS)
  private String statusDetails;

  public static final String SERIALIZED_NAME_STANDARD_OUTPUT_CONTENT = "StandardOutputContent";
  @SerializedName(SERIALIZED_NAME_STANDARD_OUTPUT_CONTENT)
  private String standardOutputContent;

  public static final String SERIALIZED_NAME_STANDARD_OUTPUT_URL = "StandardOutputUrl";
  @SerializedName(SERIALIZED_NAME_STANDARD_OUTPUT_URL)
  private String standardOutputUrl;

  public static final String SERIALIZED_NAME_STANDARD_ERROR_CONTENT = "StandardErrorContent";
  @SerializedName(SERIALIZED_NAME_STANDARD_ERROR_CONTENT)
  private String standardErrorContent;

  public static final String SERIALIZED_NAME_STANDARD_ERROR_URL = "StandardErrorUrl";
  @SerializedName(SERIALIZED_NAME_STANDARD_ERROR_URL)
  private String standardErrorUrl;

  public static final String SERIALIZED_NAME_CLOUD_WATCH_OUTPUT_CONFIG = "CloudWatchOutputConfig";
  @SerializedName(SERIALIZED_NAME_CLOUD_WATCH_OUTPUT_CONFIG)
  private GetCommandInvocationResultCloudWatchOutputConfig cloudWatchOutputConfig;

  public GetCommandInvocationResult() {
  }

  public GetCommandInvocationResult commandId(String commandId) {
    this.commandId = commandId;
    return this;
  }

  /**
   * Get commandId
   * @return commandId
   */
  @javax.annotation.Nullable
  public String getCommandId() {
    return commandId;
  }

  public void setCommandId(String commandId) {
    this.commandId = commandId;
  }


  public GetCommandInvocationResult instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

  /**
   * Get instanceId
   * @return instanceId
   */
  @javax.annotation.Nullable
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }


  public GetCommandInvocationResult comment(String comment) {
    this.comment = comment;
    return this;
  }

  /**
   * Get comment
   * @return comment
   */
  @javax.annotation.Nullable
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }


  public GetCommandInvocationResult documentName(String documentName) {
    this.documentName = documentName;
    return this;
  }

  /**
   * Get documentName
   * @return documentName
   */
  @javax.annotation.Nullable
  public String getDocumentName() {
    return documentName;
  }

  public void setDocumentName(String documentName) {
    this.documentName = documentName;
  }


  public GetCommandInvocationResult documentVersion(String documentVersion) {
    this.documentVersion = documentVersion;
    return this;
  }

  /**
   * Get documentVersion
   * @return documentVersion
   */
  @javax.annotation.Nullable
  public String getDocumentVersion() {
    return documentVersion;
  }

  public void setDocumentVersion(String documentVersion) {
    this.documentVersion = documentVersion;
  }


  public GetCommandInvocationResult pluginName(String pluginName) {
    this.pluginName = pluginName;
    return this;
  }

  /**
   * Get pluginName
   * @return pluginName
   */
  @javax.annotation.Nullable
  public String getPluginName() {
    return pluginName;
  }

  public void setPluginName(String pluginName) {
    this.pluginName = pluginName;
  }


  public GetCommandInvocationResult responseCode(Integer responseCode) {
    this.responseCode = responseCode;
    return this;
  }

  /**
   * Get responseCode
   * @return responseCode
   */
  @javax.annotation.Nullable
  public Integer getResponseCode() {
    return responseCode;
  }

  public void setResponseCode(Integer responseCode) {
    this.responseCode = responseCode;
  }


  public GetCommandInvocationResult executionStartDateTime(String executionStartDateTime) {
    this.executionStartDateTime = executionStartDateTime;
    return this;
  }

  /**
   * Get executionStartDateTime
   * @return executionStartDateTime
   */
  @javax.annotation.Nullable
  public String getExecutionStartDateTime() {
    return executionStartDateTime;
  }

  public void setExecutionStartDateTime(String executionStartDateTime) {
    this.executionStartDateTime = executionStartDateTime;
  }


  public GetCommandInvocationResult executionElapsedTime(String executionElapsedTime) {
    this.executionElapsedTime = executionElapsedTime;
    return this;
  }

  /**
   * Get executionElapsedTime
   * @return executionElapsedTime
   */
  @javax.annotation.Nullable
  public String getExecutionElapsedTime() {
    return executionElapsedTime;
  }

  public void setExecutionElapsedTime(String executionElapsedTime) {
    this.executionElapsedTime = executionElapsedTime;
  }


  public GetCommandInvocationResult executionEndDateTime(String executionEndDateTime) {
    this.executionEndDateTime = executionEndDateTime;
    return this;
  }

  /**
   * Get executionEndDateTime
   * @return executionEndDateTime
   */
  @javax.annotation.Nullable
  public String getExecutionEndDateTime() {
    return executionEndDateTime;
  }

  public void setExecutionEndDateTime(String executionEndDateTime) {
    this.executionEndDateTime = executionEndDateTime;
  }


  public GetCommandInvocationResult status(CommandInvocationStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public CommandInvocationStatus getStatus() {
    return status;
  }

  public void setStatus(CommandInvocationStatus status) {
    this.status = status;
  }


  public GetCommandInvocationResult statusDetails(String statusDetails) {
    this.statusDetails = statusDetails;
    return this;
  }

  /**
   * Get statusDetails
   * @return statusDetails
   */
  @javax.annotation.Nullable
  public String getStatusDetails() {
    return statusDetails;
  }

  public void setStatusDetails(String statusDetails) {
    this.statusDetails = statusDetails;
  }


  public GetCommandInvocationResult standardOutputContent(String standardOutputContent) {
    this.standardOutputContent = standardOutputContent;
    return this;
  }

  /**
   * Get standardOutputContent
   * @return standardOutputContent
   */
  @javax.annotation.Nullable
  public String getStandardOutputContent() {
    return standardOutputContent;
  }

  public void setStandardOutputContent(String standardOutputContent) {
    this.standardOutputContent = standardOutputContent;
  }


  public GetCommandInvocationResult standardOutputUrl(String standardOutputUrl) {
    this.standardOutputUrl = standardOutputUrl;
    return this;
  }

  /**
   * Get standardOutputUrl
   * @return standardOutputUrl
   */
  @javax.annotation.Nullable
  public String getStandardOutputUrl() {
    return standardOutputUrl;
  }

  public void setStandardOutputUrl(String standardOutputUrl) {
    this.standardOutputUrl = standardOutputUrl;
  }


  public GetCommandInvocationResult standardErrorContent(String standardErrorContent) {
    this.standardErrorContent = standardErrorContent;
    return this;
  }

  /**
   * Get standardErrorContent
   * @return standardErrorContent
   */
  @javax.annotation.Nullable
  public String getStandardErrorContent() {
    return standardErrorContent;
  }

  public void setStandardErrorContent(String standardErrorContent) {
    this.standardErrorContent = standardErrorContent;
  }


  public GetCommandInvocationResult standardErrorUrl(String standardErrorUrl) {
    this.standardErrorUrl = standardErrorUrl;
    return this;
  }

  /**
   * Get standardErrorUrl
   * @return standardErrorUrl
   */
  @javax.annotation.Nullable
  public String getStandardErrorUrl() {
    return standardErrorUrl;
  }

  public void setStandardErrorUrl(String standardErrorUrl) {
    this.standardErrorUrl = standardErrorUrl;
  }


  public GetCommandInvocationResult cloudWatchOutputConfig(GetCommandInvocationResultCloudWatchOutputConfig cloudWatchOutputConfig) {
    this.cloudWatchOutputConfig = cloudWatchOutputConfig;
    return this;
  }

  /**
   * Get cloudWatchOutputConfig
   * @return cloudWatchOutputConfig
   */
  @javax.annotation.Nullable
  public GetCommandInvocationResultCloudWatchOutputConfig getCloudWatchOutputConfig() {
    return cloudWatchOutputConfig;
  }

  public void setCloudWatchOutputConfig(GetCommandInvocationResultCloudWatchOutputConfig cloudWatchOutputConfig) {
    this.cloudWatchOutputConfig = cloudWatchOutputConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetCommandInvocationResult getCommandInvocationResult = (GetCommandInvocationResult) o;
    return Objects.equals(this.commandId, getCommandInvocationResult.commandId) &&
        Objects.equals(this.instanceId, getCommandInvocationResult.instanceId) &&
        Objects.equals(this.comment, getCommandInvocationResult.comment) &&
        Objects.equals(this.documentName, getCommandInvocationResult.documentName) &&
        Objects.equals(this.documentVersion, getCommandInvocationResult.documentVersion) &&
        Objects.equals(this.pluginName, getCommandInvocationResult.pluginName) &&
        Objects.equals(this.responseCode, getCommandInvocationResult.responseCode) &&
        Objects.equals(this.executionStartDateTime, getCommandInvocationResult.executionStartDateTime) &&
        Objects.equals(this.executionElapsedTime, getCommandInvocationResult.executionElapsedTime) &&
        Objects.equals(this.executionEndDateTime, getCommandInvocationResult.executionEndDateTime) &&
        Objects.equals(this.status, getCommandInvocationResult.status) &&
        Objects.equals(this.statusDetails, getCommandInvocationResult.statusDetails) &&
        Objects.equals(this.standardOutputContent, getCommandInvocationResult.standardOutputContent) &&
        Objects.equals(this.standardOutputUrl, getCommandInvocationResult.standardOutputUrl) &&
        Objects.equals(this.standardErrorContent, getCommandInvocationResult.standardErrorContent) &&
        Objects.equals(this.standardErrorUrl, getCommandInvocationResult.standardErrorUrl) &&
        Objects.equals(this.cloudWatchOutputConfig, getCommandInvocationResult.cloudWatchOutputConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(commandId, instanceId, comment, documentName, documentVersion, pluginName, responseCode, executionStartDateTime, executionElapsedTime, executionEndDateTime, status, statusDetails, standardOutputContent, standardOutputUrl, standardErrorContent, standardErrorUrl, cloudWatchOutputConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetCommandInvocationResult {\n");
    sb.append("    commandId: ").append(toIndentedString(commandId)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    documentName: ").append(toIndentedString(documentName)).append("\n");
    sb.append("    documentVersion: ").append(toIndentedString(documentVersion)).append("\n");
    sb.append("    pluginName: ").append(toIndentedString(pluginName)).append("\n");
    sb.append("    responseCode: ").append(toIndentedString(responseCode)).append("\n");
    sb.append("    executionStartDateTime: ").append(toIndentedString(executionStartDateTime)).append("\n");
    sb.append("    executionElapsedTime: ").append(toIndentedString(executionElapsedTime)).append("\n");
    sb.append("    executionEndDateTime: ").append(toIndentedString(executionEndDateTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusDetails: ").append(toIndentedString(statusDetails)).append("\n");
    sb.append("    standardOutputContent: ").append(toIndentedString(standardOutputContent)).append("\n");
    sb.append("    standardOutputUrl: ").append(toIndentedString(standardOutputUrl)).append("\n");
    sb.append("    standardErrorContent: ").append(toIndentedString(standardErrorContent)).append("\n");
    sb.append("    standardErrorUrl: ").append(toIndentedString(standardErrorUrl)).append("\n");
    sb.append("    cloudWatchOutputConfig: ").append(toIndentedString(cloudWatchOutputConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CommandId");
    openapiFields.add("InstanceId");
    openapiFields.add("Comment");
    openapiFields.add("DocumentName");
    openapiFields.add("DocumentVersion");
    openapiFields.add("PluginName");
    openapiFields.add("ResponseCode");
    openapiFields.add("ExecutionStartDateTime");
    openapiFields.add("ExecutionElapsedTime");
    openapiFields.add("ExecutionEndDateTime");
    openapiFields.add("Status");
    openapiFields.add("StatusDetails");
    openapiFields.add("StandardOutputContent");
    openapiFields.add("StandardOutputUrl");
    openapiFields.add("StandardErrorContent");
    openapiFields.add("StandardErrorUrl");
    openapiFields.add("CloudWatchOutputConfig");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetCommandInvocationResult
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetCommandInvocationResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetCommandInvocationResult is not found in the empty JSON string", GetCommandInvocationResult.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetCommandInvocationResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetCommandInvocationResult` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `CommandId`
      if (jsonObj.get("CommandId") != null && !jsonObj.get("CommandId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CommandId"));
      }
      // validate the optional field `InstanceId`
      if (jsonObj.get("InstanceId") != null && !jsonObj.get("InstanceId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("InstanceId"));
      }
      // validate the optional field `Comment`
      if (jsonObj.get("Comment") != null && !jsonObj.get("Comment").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Comment"));
      }
      // validate the optional field `DocumentName`
      if (jsonObj.get("DocumentName") != null && !jsonObj.get("DocumentName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DocumentName"));
      }
      // validate the optional field `DocumentVersion`
      if (jsonObj.get("DocumentVersion") != null && !jsonObj.get("DocumentVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DocumentVersion"));
      }
      // validate the optional field `PluginName`
      if (jsonObj.get("PluginName") != null && !jsonObj.get("PluginName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PluginName"));
      }
      // validate the optional field `ResponseCode`
      if (jsonObj.get("ResponseCode") != null && !jsonObj.get("ResponseCode").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ResponseCode"));
      }
      // validate the optional field `ExecutionStartDateTime`
      if (jsonObj.get("ExecutionStartDateTime") != null && !jsonObj.get("ExecutionStartDateTime").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ExecutionStartDateTime"));
      }
      // validate the optional field `ExecutionElapsedTime`
      if (jsonObj.get("ExecutionElapsedTime") != null && !jsonObj.get("ExecutionElapsedTime").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ExecutionElapsedTime"));
      }
      // validate the optional field `ExecutionEndDateTime`
      if (jsonObj.get("ExecutionEndDateTime") != null && !jsonObj.get("ExecutionEndDateTime").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ExecutionEndDateTime"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        CommandInvocationStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `StatusDetails`
      if (jsonObj.get("StatusDetails") != null && !jsonObj.get("StatusDetails").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StatusDetails"));
      }
      // validate the optional field `StandardOutputContent`
      if (jsonObj.get("StandardOutputContent") != null && !jsonObj.get("StandardOutputContent").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StandardOutputContent"));
      }
      // validate the optional field `StandardOutputUrl`
      if (jsonObj.get("StandardOutputUrl") != null && !jsonObj.get("StandardOutputUrl").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StandardOutputUrl"));
      }
      // validate the optional field `StandardErrorContent`
      if (jsonObj.get("StandardErrorContent") != null && !jsonObj.get("StandardErrorContent").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StandardErrorContent"));
      }
      // validate the optional field `StandardErrorUrl`
      if (jsonObj.get("StandardErrorUrl") != null && !jsonObj.get("StandardErrorUrl").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StandardErrorUrl"));
      }
      // validate the optional field `CloudWatchOutputConfig`
      if (jsonObj.get("CloudWatchOutputConfig") != null && !jsonObj.get("CloudWatchOutputConfig").isJsonNull()) {
        GetCommandInvocationResultCloudWatchOutputConfig.validateJsonElement(jsonObj.get("CloudWatchOutputConfig"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetCommandInvocationResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetCommandInvocationResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetCommandInvocationResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetCommandInvocationResult.class));

       return (TypeAdapter<T>) new TypeAdapter<GetCommandInvocationResult>() {
           @Override
           public void write(JsonWriter out, GetCommandInvocationResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetCommandInvocationResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetCommandInvocationResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetCommandInvocationResult
   * @throws IOException if the JSON string is invalid with respect to GetCommandInvocationResult
   */
  public static GetCommandInvocationResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetCommandInvocationResult.class);
  }

  /**
   * Convert an instance of GetCommandInvocationResult to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

