/*
 * Amazon Simple Systems Manager (SSM)
 * <p>Amazon Web Services Systems Manager is the operations hub for your Amazon Web Services applications and resources and a secure end-to-end management solution for hybrid cloud environments that enables safe and secure operations at scale.</p> <p>This reference is intended to be used with the <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/\">Amazon Web Services Systems Manager User Guide</a>. To get started, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html\">Setting up Amazon Web Services Systems Manager</a>.</p> <p class=\"title\"> <b>Related resources</b> </p> <ul> <li> <p>For information about each of the capabilities that comprise Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/systems-manager-capabilities.html\">Systems Manager capabilities</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </li> <li> <p>For details about predefined runbooks for Automation, a capability of Amazon Web Services Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-runbook-reference.html\">Systems Manager Automation runbook reference</a> </i>.</p> </li> <li> <p>For information about AppConfig, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/\">AppConfig User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/\">AppConfig API Reference</a> </i>.</p> </li> <li> <p>For information about Incident Manager, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/userguide/\">Systems Manager Incident Manager User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/APIReference/\">Systems Manager Incident Manager API Reference</a> </i>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2014-11-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.ComplianceItemExecutionSummary;
import org.openapitools.client.model.ComplianceSeverity;
import org.openapitools.client.model.ComplianceStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Information about the compliance as defined by the resource type. For example, for a patch resource type, &lt;code&gt;Items&lt;/code&gt; includes information about the PatchSeverity, Classification, and so on.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:14:21.701211-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ComplianceItem {
  public static final String SERIALIZED_NAME_COMPLIANCE_TYPE = "ComplianceType";
  @SerializedName(SERIALIZED_NAME_COMPLIANCE_TYPE)
  private String complianceType;

  public static final String SERIALIZED_NAME_RESOURCE_TYPE = "ResourceType";
  @SerializedName(SERIALIZED_NAME_RESOURCE_TYPE)
  private String resourceType;

  public static final String SERIALIZED_NAME_RESOURCE_ID = "ResourceId";
  @SerializedName(SERIALIZED_NAME_RESOURCE_ID)
  private String resourceId;

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_TITLE = "Title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private ComplianceStatus status;

  public static final String SERIALIZED_NAME_SEVERITY = "Severity";
  @SerializedName(SERIALIZED_NAME_SEVERITY)
  private ComplianceSeverity severity;

  public static final String SERIALIZED_NAME_EXECUTION_SUMMARY = "ExecutionSummary";
  @SerializedName(SERIALIZED_NAME_EXECUTION_SUMMARY)
  private ComplianceItemExecutionSummary executionSummary;

  public static final String SERIALIZED_NAME_DETAILS = "Details";
  @SerializedName(SERIALIZED_NAME_DETAILS)
  private Map details;

  public ComplianceItem() {
  }

  public ComplianceItem complianceType(String complianceType) {
    this.complianceType = complianceType;
    return this;
  }

  /**
   * Get complianceType
   * @return complianceType
   */
  @javax.annotation.Nullable
  public String getComplianceType() {
    return complianceType;
  }

  public void setComplianceType(String complianceType) {
    this.complianceType = complianceType;
  }


  public ComplianceItem resourceType(String resourceType) {
    this.resourceType = resourceType;
    return this;
  }

  /**
   * Get resourceType
   * @return resourceType
   */
  @javax.annotation.Nullable
  public String getResourceType() {
    return resourceType;
  }

  public void setResourceType(String resourceType) {
    this.resourceType = resourceType;
  }


  public ComplianceItem resourceId(String resourceId) {
    this.resourceId = resourceId;
    return this;
  }

  /**
   * Get resourceId
   * @return resourceId
   */
  @javax.annotation.Nullable
  public String getResourceId() {
    return resourceId;
  }

  public void setResourceId(String resourceId) {
    this.resourceId = resourceId;
  }


  public ComplianceItem id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public ComplianceItem title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public ComplianceItem status(ComplianceStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public ComplianceStatus getStatus() {
    return status;
  }

  public void setStatus(ComplianceStatus status) {
    this.status = status;
  }


  public ComplianceItem severity(ComplianceSeverity severity) {
    this.severity = severity;
    return this;
  }

  /**
   * Get severity
   * @return severity
   */
  @javax.annotation.Nullable
  public ComplianceSeverity getSeverity() {
    return severity;
  }

  public void setSeverity(ComplianceSeverity severity) {
    this.severity = severity;
  }


  public ComplianceItem executionSummary(ComplianceItemExecutionSummary executionSummary) {
    this.executionSummary = executionSummary;
    return this;
  }

  /**
   * Get executionSummary
   * @return executionSummary
   */
  @javax.annotation.Nullable
  public ComplianceItemExecutionSummary getExecutionSummary() {
    return executionSummary;
  }

  public void setExecutionSummary(ComplianceItemExecutionSummary executionSummary) {
    this.executionSummary = executionSummary;
  }


  public ComplianceItem details(Map details) {
    this.details = details;
    return this;
  }

  /**
   * Get details
   * @return details
   */
  @javax.annotation.Nullable
  public Map getDetails() {
    return details;
  }

  public void setDetails(Map details) {
    this.details = details;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComplianceItem complianceItem = (ComplianceItem) o;
    return Objects.equals(this.complianceType, complianceItem.complianceType) &&
        Objects.equals(this.resourceType, complianceItem.resourceType) &&
        Objects.equals(this.resourceId, complianceItem.resourceId) &&
        Objects.equals(this.id, complianceItem.id) &&
        Objects.equals(this.title, complianceItem.title) &&
        Objects.equals(this.status, complianceItem.status) &&
        Objects.equals(this.severity, complianceItem.severity) &&
        Objects.equals(this.executionSummary, complianceItem.executionSummary) &&
        Objects.equals(this.details, complianceItem.details);
  }

  @Override
  public int hashCode() {
    return Objects.hash(complianceType, resourceType, resourceId, id, title, status, severity, executionSummary, details);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComplianceItem {\n");
    sb.append("    complianceType: ").append(toIndentedString(complianceType)).append("\n");
    sb.append("    resourceType: ").append(toIndentedString(resourceType)).append("\n");
    sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    severity: ").append(toIndentedString(severity)).append("\n");
    sb.append("    executionSummary: ").append(toIndentedString(executionSummary)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ComplianceType");
    openapiFields.add("ResourceType");
    openapiFields.add("ResourceId");
    openapiFields.add("Id");
    openapiFields.add("Title");
    openapiFields.add("Status");
    openapiFields.add("Severity");
    openapiFields.add("ExecutionSummary");
    openapiFields.add("Details");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ComplianceItem
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ComplianceItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ComplianceItem is not found in the empty JSON string", ComplianceItem.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ComplianceItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ComplianceItem` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ComplianceType`
      if (jsonObj.get("ComplianceType") != null && !jsonObj.get("ComplianceType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ComplianceType"));
      }
      // validate the optional field `ResourceType`
      if (jsonObj.get("ResourceType") != null && !jsonObj.get("ResourceType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ResourceType"));
      }
      // validate the optional field `ResourceId`
      if (jsonObj.get("ResourceId") != null && !jsonObj.get("ResourceId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ResourceId"));
      }
      // validate the optional field `Id`
      if (jsonObj.get("Id") != null && !jsonObj.get("Id").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Id"));
      }
      // validate the optional field `Title`
      if (jsonObj.get("Title") != null && !jsonObj.get("Title").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Title"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        ComplianceStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `Severity`
      if (jsonObj.get("Severity") != null && !jsonObj.get("Severity").isJsonNull()) {
        ComplianceSeverity.validateJsonElement(jsonObj.get("Severity"));
      }
      // validate the optional field `ExecutionSummary`
      if (jsonObj.get("ExecutionSummary") != null && !jsonObj.get("ExecutionSummary").isJsonNull()) {
        ComplianceItemExecutionSummary.validateJsonElement(jsonObj.get("ExecutionSummary"));
      }
      // validate the optional field `Details`
      if (jsonObj.get("Details") != null && !jsonObj.get("Details").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("Details"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ComplianceItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ComplianceItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ComplianceItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ComplianceItem.class));

       return (TypeAdapter<T>) new TypeAdapter<ComplianceItem>() {
           @Override
           public void write(JsonWriter out, ComplianceItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ComplianceItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ComplianceItem given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ComplianceItem
   * @throws IOException if the JSON string is invalid with respect to ComplianceItem
   */
  public static ComplianceItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ComplianceItem.class);
  }

  /**
   * Convert an instance of ComplianceItem to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

