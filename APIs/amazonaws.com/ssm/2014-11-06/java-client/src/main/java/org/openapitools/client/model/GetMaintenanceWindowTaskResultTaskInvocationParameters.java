/*
 * Amazon Simple Systems Manager (SSM)
 * <p>Amazon Web Services Systems Manager is the operations hub for your Amazon Web Services applications and resources and a secure end-to-end management solution for hybrid cloud environments that enables safe and secure operations at scale.</p> <p>This reference is intended to be used with the <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/\">Amazon Web Services Systems Manager User Guide</a>. To get started, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html\">Setting up Amazon Web Services Systems Manager</a>.</p> <p class=\"title\"> <b>Related resources</b> </p> <ul> <li> <p>For information about each of the capabilities that comprise Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/systems-manager-capabilities.html\">Systems Manager capabilities</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </li> <li> <p>For details about predefined runbooks for Automation, a capability of Amazon Web Services Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-runbook-reference.html\">Systems Manager Automation runbook reference</a> </i>.</p> </li> <li> <p>For information about AppConfig, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/\">AppConfig User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/\">AppConfig API Reference</a> </i>.</p> </li> <li> <p>For information about Incident Manager, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/userguide/\">Systems Manager Incident Manager User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/APIReference/\">Systems Manager Incident Manager API Reference</a> </i>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2014-11-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.MaintenanceWindowTaskInvocationParametersAutomation;
import org.openapitools.client.model.MaintenanceWindowTaskInvocationParametersLambda;
import org.openapitools.client.model.MaintenanceWindowTaskInvocationParametersRunCommand;
import org.openapitools.client.model.MaintenanceWindowTaskInvocationParametersStepFunctions;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetMaintenanceWindowTaskResultTaskInvocationParameters
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:14:21.701211-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetMaintenanceWindowTaskResultTaskInvocationParameters {
  public static final String SERIALIZED_NAME_RUN_COMMAND = "RunCommand";
  @SerializedName(SERIALIZED_NAME_RUN_COMMAND)
  private MaintenanceWindowTaskInvocationParametersRunCommand runCommand;

  public static final String SERIALIZED_NAME_AUTOMATION = "Automation";
  @SerializedName(SERIALIZED_NAME_AUTOMATION)
  private MaintenanceWindowTaskInvocationParametersAutomation automation;

  public static final String SERIALIZED_NAME_STEP_FUNCTIONS = "StepFunctions";
  @SerializedName(SERIALIZED_NAME_STEP_FUNCTIONS)
  private MaintenanceWindowTaskInvocationParametersStepFunctions stepFunctions;

  public static final String SERIALIZED_NAME_LAMBDA = "Lambda";
  @SerializedName(SERIALIZED_NAME_LAMBDA)
  private MaintenanceWindowTaskInvocationParametersLambda lambda;

  public GetMaintenanceWindowTaskResultTaskInvocationParameters() {
  }

  public GetMaintenanceWindowTaskResultTaskInvocationParameters runCommand(MaintenanceWindowTaskInvocationParametersRunCommand runCommand) {
    this.runCommand = runCommand;
    return this;
  }

  /**
   * Get runCommand
   * @return runCommand
   */
  @javax.annotation.Nullable
  public MaintenanceWindowTaskInvocationParametersRunCommand getRunCommand() {
    return runCommand;
  }

  public void setRunCommand(MaintenanceWindowTaskInvocationParametersRunCommand runCommand) {
    this.runCommand = runCommand;
  }


  public GetMaintenanceWindowTaskResultTaskInvocationParameters automation(MaintenanceWindowTaskInvocationParametersAutomation automation) {
    this.automation = automation;
    return this;
  }

  /**
   * Get automation
   * @return automation
   */
  @javax.annotation.Nullable
  public MaintenanceWindowTaskInvocationParametersAutomation getAutomation() {
    return automation;
  }

  public void setAutomation(MaintenanceWindowTaskInvocationParametersAutomation automation) {
    this.automation = automation;
  }


  public GetMaintenanceWindowTaskResultTaskInvocationParameters stepFunctions(MaintenanceWindowTaskInvocationParametersStepFunctions stepFunctions) {
    this.stepFunctions = stepFunctions;
    return this;
  }

  /**
   * Get stepFunctions
   * @return stepFunctions
   */
  @javax.annotation.Nullable
  public MaintenanceWindowTaskInvocationParametersStepFunctions getStepFunctions() {
    return stepFunctions;
  }

  public void setStepFunctions(MaintenanceWindowTaskInvocationParametersStepFunctions stepFunctions) {
    this.stepFunctions = stepFunctions;
  }


  public GetMaintenanceWindowTaskResultTaskInvocationParameters lambda(MaintenanceWindowTaskInvocationParametersLambda lambda) {
    this.lambda = lambda;
    return this;
  }

  /**
   * Get lambda
   * @return lambda
   */
  @javax.annotation.Nullable
  public MaintenanceWindowTaskInvocationParametersLambda getLambda() {
    return lambda;
  }

  public void setLambda(MaintenanceWindowTaskInvocationParametersLambda lambda) {
    this.lambda = lambda;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetMaintenanceWindowTaskResultTaskInvocationParameters getMaintenanceWindowTaskResultTaskInvocationParameters = (GetMaintenanceWindowTaskResultTaskInvocationParameters) o;
    return Objects.equals(this.runCommand, getMaintenanceWindowTaskResultTaskInvocationParameters.runCommand) &&
        Objects.equals(this.automation, getMaintenanceWindowTaskResultTaskInvocationParameters.automation) &&
        Objects.equals(this.stepFunctions, getMaintenanceWindowTaskResultTaskInvocationParameters.stepFunctions) &&
        Objects.equals(this.lambda, getMaintenanceWindowTaskResultTaskInvocationParameters.lambda);
  }

  @Override
  public int hashCode() {
    return Objects.hash(runCommand, automation, stepFunctions, lambda);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetMaintenanceWindowTaskResultTaskInvocationParameters {\n");
    sb.append("    runCommand: ").append(toIndentedString(runCommand)).append("\n");
    sb.append("    automation: ").append(toIndentedString(automation)).append("\n");
    sb.append("    stepFunctions: ").append(toIndentedString(stepFunctions)).append("\n");
    sb.append("    lambda: ").append(toIndentedString(lambda)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("RunCommand");
    openapiFields.add("Automation");
    openapiFields.add("StepFunctions");
    openapiFields.add("Lambda");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetMaintenanceWindowTaskResultTaskInvocationParameters
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetMaintenanceWindowTaskResultTaskInvocationParameters.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetMaintenanceWindowTaskResultTaskInvocationParameters is not found in the empty JSON string", GetMaintenanceWindowTaskResultTaskInvocationParameters.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetMaintenanceWindowTaskResultTaskInvocationParameters.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetMaintenanceWindowTaskResultTaskInvocationParameters` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `RunCommand`
      if (jsonObj.get("RunCommand") != null && !jsonObj.get("RunCommand").isJsonNull()) {
        MaintenanceWindowTaskInvocationParametersRunCommand.validateJsonElement(jsonObj.get("RunCommand"));
      }
      // validate the optional field `Automation`
      if (jsonObj.get("Automation") != null && !jsonObj.get("Automation").isJsonNull()) {
        MaintenanceWindowTaskInvocationParametersAutomation.validateJsonElement(jsonObj.get("Automation"));
      }
      // validate the optional field `StepFunctions`
      if (jsonObj.get("StepFunctions") != null && !jsonObj.get("StepFunctions").isJsonNull()) {
        MaintenanceWindowTaskInvocationParametersStepFunctions.validateJsonElement(jsonObj.get("StepFunctions"));
      }
      // validate the optional field `Lambda`
      if (jsonObj.get("Lambda") != null && !jsonObj.get("Lambda").isJsonNull()) {
        MaintenanceWindowTaskInvocationParametersLambda.validateJsonElement(jsonObj.get("Lambda"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetMaintenanceWindowTaskResultTaskInvocationParameters.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetMaintenanceWindowTaskResultTaskInvocationParameters' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetMaintenanceWindowTaskResultTaskInvocationParameters> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetMaintenanceWindowTaskResultTaskInvocationParameters.class));

       return (TypeAdapter<T>) new TypeAdapter<GetMaintenanceWindowTaskResultTaskInvocationParameters>() {
           @Override
           public void write(JsonWriter out, GetMaintenanceWindowTaskResultTaskInvocationParameters value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetMaintenanceWindowTaskResultTaskInvocationParameters read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetMaintenanceWindowTaskResultTaskInvocationParameters given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetMaintenanceWindowTaskResultTaskInvocationParameters
   * @throws IOException if the JSON string is invalid with respect to GetMaintenanceWindowTaskResultTaskInvocationParameters
   */
  public static GetMaintenanceWindowTaskResultTaskInvocationParameters fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetMaintenanceWindowTaskResultTaskInvocationParameters.class);
  }

  /**
   * Convert an instance of GetMaintenanceWindowTaskResultTaskInvocationParameters to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

