/*
 * Amazon Simple Systems Manager (SSM)
 * <p>Amazon Web Services Systems Manager is the operations hub for your Amazon Web Services applications and resources and a secure end-to-end management solution for hybrid cloud environments that enables safe and secure operations at scale.</p> <p>This reference is intended to be used with the <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/\">Amazon Web Services Systems Manager User Guide</a>. To get started, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html\">Setting up Amazon Web Services Systems Manager</a>.</p> <p class=\"title\"> <b>Related resources</b> </p> <ul> <li> <p>For information about each of the capabilities that comprise Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/systems-manager-capabilities.html\">Systems Manager capabilities</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </li> <li> <p>For details about predefined runbooks for Automation, a capability of Amazon Web Services Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-runbook-reference.html\">Systems Manager Automation runbook reference</a> </i>.</p> </li> <li> <p>For information about AppConfig, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/\">AppConfig User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/\">AppConfig API Reference</a> </i>.</p> </li> <li> <p>For information about Incident Manager, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/userguide/\">Systems Manager Incident Manager User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/APIReference/\">Systems Manager Incident Manager API Reference</a> </i>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2014-11-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GetMaintenanceWindowExecutionTaskResultAlarmConfiguration;
import org.openapitools.client.model.MaintenanceWindowExecutionStatus;
import org.openapitools.client.model.MaintenanceWindowTaskType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetMaintenanceWindowExecutionTaskResult
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:14:21.701211-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetMaintenanceWindowExecutionTaskResult {
  public static final String SERIALIZED_NAME_WINDOW_EXECUTION_ID = "WindowExecutionId";
  @SerializedName(SERIALIZED_NAME_WINDOW_EXECUTION_ID)
  private String windowExecutionId;

  public static final String SERIALIZED_NAME_TASK_EXECUTION_ID = "TaskExecutionId";
  @SerializedName(SERIALIZED_NAME_TASK_EXECUTION_ID)
  private String taskExecutionId;

  public static final String SERIALIZED_NAME_TASK_ARN = "TaskArn";
  @SerializedName(SERIALIZED_NAME_TASK_ARN)
  private String taskArn;

  public static final String SERIALIZED_NAME_SERVICE_ROLE = "ServiceRole";
  @SerializedName(SERIALIZED_NAME_SERVICE_ROLE)
  private String serviceRole;

  public static final String SERIALIZED_NAME_TYPE = "Type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private MaintenanceWindowTaskType type;

  public static final String SERIALIZED_NAME_TASK_PARAMETERS = "TaskParameters";
  @SerializedName(SERIALIZED_NAME_TASK_PARAMETERS)
  private List taskParameters;

  public static final String SERIALIZED_NAME_PRIORITY = "Priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private Integer priority;

  public static final String SERIALIZED_NAME_MAX_CONCURRENCY = "MaxConcurrency";
  @SerializedName(SERIALIZED_NAME_MAX_CONCURRENCY)
  private String maxConcurrency;

  public static final String SERIALIZED_NAME_MAX_ERRORS = "MaxErrors";
  @SerializedName(SERIALIZED_NAME_MAX_ERRORS)
  private String maxErrors;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private MaintenanceWindowExecutionStatus status;

  public static final String SERIALIZED_NAME_STATUS_DETAILS = "StatusDetails";
  @SerializedName(SERIALIZED_NAME_STATUS_DETAILS)
  private String statusDetails;

  public static final String SERIALIZED_NAME_START_TIME = "StartTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_END_TIME = "EndTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private OffsetDateTime endTime;

  public static final String SERIALIZED_NAME_ALARM_CONFIGURATION = "AlarmConfiguration";
  @SerializedName(SERIALIZED_NAME_ALARM_CONFIGURATION)
  private GetMaintenanceWindowExecutionTaskResultAlarmConfiguration alarmConfiguration;

  public static final String SERIALIZED_NAME_TRIGGERED_ALARMS = "TriggeredAlarms";
  @SerializedName(SERIALIZED_NAME_TRIGGERED_ALARMS)
  private List triggeredAlarms;

  public GetMaintenanceWindowExecutionTaskResult() {
  }

  public GetMaintenanceWindowExecutionTaskResult windowExecutionId(String windowExecutionId) {
    this.windowExecutionId = windowExecutionId;
    return this;
  }

  /**
   * Get windowExecutionId
   * @return windowExecutionId
   */
  @javax.annotation.Nullable
  public String getWindowExecutionId() {
    return windowExecutionId;
  }

  public void setWindowExecutionId(String windowExecutionId) {
    this.windowExecutionId = windowExecutionId;
  }


  public GetMaintenanceWindowExecutionTaskResult taskExecutionId(String taskExecutionId) {
    this.taskExecutionId = taskExecutionId;
    return this;
  }

  /**
   * Get taskExecutionId
   * @return taskExecutionId
   */
  @javax.annotation.Nullable
  public String getTaskExecutionId() {
    return taskExecutionId;
  }

  public void setTaskExecutionId(String taskExecutionId) {
    this.taskExecutionId = taskExecutionId;
  }


  public GetMaintenanceWindowExecutionTaskResult taskArn(String taskArn) {
    this.taskArn = taskArn;
    return this;
  }

  /**
   * Get taskArn
   * @return taskArn
   */
  @javax.annotation.Nullable
  public String getTaskArn() {
    return taskArn;
  }

  public void setTaskArn(String taskArn) {
    this.taskArn = taskArn;
  }


  public GetMaintenanceWindowExecutionTaskResult serviceRole(String serviceRole) {
    this.serviceRole = serviceRole;
    return this;
  }

  /**
   * Get serviceRole
   * @return serviceRole
   */
  @javax.annotation.Nullable
  public String getServiceRole() {
    return serviceRole;
  }

  public void setServiceRole(String serviceRole) {
    this.serviceRole = serviceRole;
  }


  public GetMaintenanceWindowExecutionTaskResult type(MaintenanceWindowTaskType type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public MaintenanceWindowTaskType getType() {
    return type;
  }

  public void setType(MaintenanceWindowTaskType type) {
    this.type = type;
  }


  public GetMaintenanceWindowExecutionTaskResult taskParameters(List taskParameters) {
    this.taskParameters = taskParameters;
    return this;
  }

  /**
   * Get taskParameters
   * @return taskParameters
   */
  @javax.annotation.Nullable
  public List getTaskParameters() {
    return taskParameters;
  }

  public void setTaskParameters(List taskParameters) {
    this.taskParameters = taskParameters;
  }


  public GetMaintenanceWindowExecutionTaskResult priority(Integer priority) {
    this.priority = priority;
    return this;
  }

  /**
   * Get priority
   * @return priority
   */
  @javax.annotation.Nullable
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }


  public GetMaintenanceWindowExecutionTaskResult maxConcurrency(String maxConcurrency) {
    this.maxConcurrency = maxConcurrency;
    return this;
  }

  /**
   * Get maxConcurrency
   * @return maxConcurrency
   */
  @javax.annotation.Nullable
  public String getMaxConcurrency() {
    return maxConcurrency;
  }

  public void setMaxConcurrency(String maxConcurrency) {
    this.maxConcurrency = maxConcurrency;
  }


  public GetMaintenanceWindowExecutionTaskResult maxErrors(String maxErrors) {
    this.maxErrors = maxErrors;
    return this;
  }

  /**
   * Get maxErrors
   * @return maxErrors
   */
  @javax.annotation.Nullable
  public String getMaxErrors() {
    return maxErrors;
  }

  public void setMaxErrors(String maxErrors) {
    this.maxErrors = maxErrors;
  }


  public GetMaintenanceWindowExecutionTaskResult status(MaintenanceWindowExecutionStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public MaintenanceWindowExecutionStatus getStatus() {
    return status;
  }

  public void setStatus(MaintenanceWindowExecutionStatus status) {
    this.status = status;
  }


  public GetMaintenanceWindowExecutionTaskResult statusDetails(String statusDetails) {
    this.statusDetails = statusDetails;
    return this;
  }

  /**
   * Get statusDetails
   * @return statusDetails
   */
  @javax.annotation.Nullable
  public String getStatusDetails() {
    return statusDetails;
  }

  public void setStatusDetails(String statusDetails) {
    this.statusDetails = statusDetails;
  }


  public GetMaintenanceWindowExecutionTaskResult startTime(OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public GetMaintenanceWindowExecutionTaskResult endTime(OffsetDateTime endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEndTime() {
    return endTime;
  }

  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }


  public GetMaintenanceWindowExecutionTaskResult alarmConfiguration(GetMaintenanceWindowExecutionTaskResultAlarmConfiguration alarmConfiguration) {
    this.alarmConfiguration = alarmConfiguration;
    return this;
  }

  /**
   * Get alarmConfiguration
   * @return alarmConfiguration
   */
  @javax.annotation.Nullable
  public GetMaintenanceWindowExecutionTaskResultAlarmConfiguration getAlarmConfiguration() {
    return alarmConfiguration;
  }

  public void setAlarmConfiguration(GetMaintenanceWindowExecutionTaskResultAlarmConfiguration alarmConfiguration) {
    this.alarmConfiguration = alarmConfiguration;
  }


  public GetMaintenanceWindowExecutionTaskResult triggeredAlarms(List triggeredAlarms) {
    this.triggeredAlarms = triggeredAlarms;
    return this;
  }

  /**
   * Get triggeredAlarms
   * @return triggeredAlarms
   */
  @javax.annotation.Nullable
  public List getTriggeredAlarms() {
    return triggeredAlarms;
  }

  public void setTriggeredAlarms(List triggeredAlarms) {
    this.triggeredAlarms = triggeredAlarms;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetMaintenanceWindowExecutionTaskResult getMaintenanceWindowExecutionTaskResult = (GetMaintenanceWindowExecutionTaskResult) o;
    return Objects.equals(this.windowExecutionId, getMaintenanceWindowExecutionTaskResult.windowExecutionId) &&
        Objects.equals(this.taskExecutionId, getMaintenanceWindowExecutionTaskResult.taskExecutionId) &&
        Objects.equals(this.taskArn, getMaintenanceWindowExecutionTaskResult.taskArn) &&
        Objects.equals(this.serviceRole, getMaintenanceWindowExecutionTaskResult.serviceRole) &&
        Objects.equals(this.type, getMaintenanceWindowExecutionTaskResult.type) &&
        Objects.equals(this.taskParameters, getMaintenanceWindowExecutionTaskResult.taskParameters) &&
        Objects.equals(this.priority, getMaintenanceWindowExecutionTaskResult.priority) &&
        Objects.equals(this.maxConcurrency, getMaintenanceWindowExecutionTaskResult.maxConcurrency) &&
        Objects.equals(this.maxErrors, getMaintenanceWindowExecutionTaskResult.maxErrors) &&
        Objects.equals(this.status, getMaintenanceWindowExecutionTaskResult.status) &&
        Objects.equals(this.statusDetails, getMaintenanceWindowExecutionTaskResult.statusDetails) &&
        Objects.equals(this.startTime, getMaintenanceWindowExecutionTaskResult.startTime) &&
        Objects.equals(this.endTime, getMaintenanceWindowExecutionTaskResult.endTime) &&
        Objects.equals(this.alarmConfiguration, getMaintenanceWindowExecutionTaskResult.alarmConfiguration) &&
        Objects.equals(this.triggeredAlarms, getMaintenanceWindowExecutionTaskResult.triggeredAlarms);
  }

  @Override
  public int hashCode() {
    return Objects.hash(windowExecutionId, taskExecutionId, taskArn, serviceRole, type, taskParameters, priority, maxConcurrency, maxErrors, status, statusDetails, startTime, endTime, alarmConfiguration, triggeredAlarms);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetMaintenanceWindowExecutionTaskResult {\n");
    sb.append("    windowExecutionId: ").append(toIndentedString(windowExecutionId)).append("\n");
    sb.append("    taskExecutionId: ").append(toIndentedString(taskExecutionId)).append("\n");
    sb.append("    taskArn: ").append(toIndentedString(taskArn)).append("\n");
    sb.append("    serviceRole: ").append(toIndentedString(serviceRole)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    taskParameters: ").append(toIndentedString(taskParameters)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    maxConcurrency: ").append(toIndentedString(maxConcurrency)).append("\n");
    sb.append("    maxErrors: ").append(toIndentedString(maxErrors)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusDetails: ").append(toIndentedString(statusDetails)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    alarmConfiguration: ").append(toIndentedString(alarmConfiguration)).append("\n");
    sb.append("    triggeredAlarms: ").append(toIndentedString(triggeredAlarms)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("WindowExecutionId");
    openapiFields.add("TaskExecutionId");
    openapiFields.add("TaskArn");
    openapiFields.add("ServiceRole");
    openapiFields.add("Type");
    openapiFields.add("TaskParameters");
    openapiFields.add("Priority");
    openapiFields.add("MaxConcurrency");
    openapiFields.add("MaxErrors");
    openapiFields.add("Status");
    openapiFields.add("StatusDetails");
    openapiFields.add("StartTime");
    openapiFields.add("EndTime");
    openapiFields.add("AlarmConfiguration");
    openapiFields.add("TriggeredAlarms");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetMaintenanceWindowExecutionTaskResult
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetMaintenanceWindowExecutionTaskResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetMaintenanceWindowExecutionTaskResult is not found in the empty JSON string", GetMaintenanceWindowExecutionTaskResult.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetMaintenanceWindowExecutionTaskResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetMaintenanceWindowExecutionTaskResult` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `WindowExecutionId`
      if (jsonObj.get("WindowExecutionId") != null && !jsonObj.get("WindowExecutionId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("WindowExecutionId"));
      }
      // validate the optional field `TaskExecutionId`
      if (jsonObj.get("TaskExecutionId") != null && !jsonObj.get("TaskExecutionId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TaskExecutionId"));
      }
      // validate the optional field `TaskArn`
      if (jsonObj.get("TaskArn") != null && !jsonObj.get("TaskArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TaskArn"));
      }
      // validate the optional field `ServiceRole`
      if (jsonObj.get("ServiceRole") != null && !jsonObj.get("ServiceRole").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ServiceRole"));
      }
      // validate the optional field `Type`
      if (jsonObj.get("Type") != null && !jsonObj.get("Type").isJsonNull()) {
        MaintenanceWindowTaskType.validateJsonElement(jsonObj.get("Type"));
      }
      // validate the optional field `TaskParameters`
      if (jsonObj.get("TaskParameters") != null && !jsonObj.get("TaskParameters").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("TaskParameters"));
      }
      // validate the optional field `Priority`
      if (jsonObj.get("Priority") != null && !jsonObj.get("Priority").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Priority"));
      }
      // validate the optional field `MaxConcurrency`
      if (jsonObj.get("MaxConcurrency") != null && !jsonObj.get("MaxConcurrency").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MaxConcurrency"));
      }
      // validate the optional field `MaxErrors`
      if (jsonObj.get("MaxErrors") != null && !jsonObj.get("MaxErrors").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MaxErrors"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        MaintenanceWindowExecutionStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `StatusDetails`
      if (jsonObj.get("StatusDetails") != null && !jsonObj.get("StatusDetails").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StatusDetails"));
      }
      // validate the optional field `StartTime`
      if (jsonObj.get("StartTime") != null && !jsonObj.get("StartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("StartTime"));
      }
      // validate the optional field `EndTime`
      if (jsonObj.get("EndTime") != null && !jsonObj.get("EndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("EndTime"));
      }
      // validate the optional field `AlarmConfiguration`
      if (jsonObj.get("AlarmConfiguration") != null && !jsonObj.get("AlarmConfiguration").isJsonNull()) {
        GetMaintenanceWindowExecutionTaskResultAlarmConfiguration.validateJsonElement(jsonObj.get("AlarmConfiguration"));
      }
      // validate the optional field `TriggeredAlarms`
      if (jsonObj.get("TriggeredAlarms") != null && !jsonObj.get("TriggeredAlarms").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("TriggeredAlarms"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetMaintenanceWindowExecutionTaskResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetMaintenanceWindowExecutionTaskResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetMaintenanceWindowExecutionTaskResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetMaintenanceWindowExecutionTaskResult.class));

       return (TypeAdapter<T>) new TypeAdapter<GetMaintenanceWindowExecutionTaskResult>() {
           @Override
           public void write(JsonWriter out, GetMaintenanceWindowExecutionTaskResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetMaintenanceWindowExecutionTaskResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetMaintenanceWindowExecutionTaskResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetMaintenanceWindowExecutionTaskResult
   * @throws IOException if the JSON string is invalid with respect to GetMaintenanceWindowExecutionTaskResult
   */
  public static GetMaintenanceWindowExecutionTaskResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetMaintenanceWindowExecutionTaskResult.class);
  }

  /**
   * Convert an instance of GetMaintenanceWindowExecutionTaskResult to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

