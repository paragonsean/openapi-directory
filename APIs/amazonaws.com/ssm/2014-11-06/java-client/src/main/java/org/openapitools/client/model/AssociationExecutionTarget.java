/*
 * Amazon Simple Systems Manager (SSM)
 * <p>Amazon Web Services Systems Manager is the operations hub for your Amazon Web Services applications and resources and a secure end-to-end management solution for hybrid cloud environments that enables safe and secure operations at scale.</p> <p>This reference is intended to be used with the <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/\">Amazon Web Services Systems Manager User Guide</a>. To get started, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html\">Setting up Amazon Web Services Systems Manager</a>.</p> <p class=\"title\"> <b>Related resources</b> </p> <ul> <li> <p>For information about each of the capabilities that comprise Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/systems-manager-capabilities.html\">Systems Manager capabilities</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </li> <li> <p>For details about predefined runbooks for Automation, a capability of Amazon Web Services Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-runbook-reference.html\">Systems Manager Automation runbook reference</a> </i>.</p> </li> <li> <p>For information about AppConfig, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/\">AppConfig User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/\">AppConfig API Reference</a> </i>.</p> </li> <li> <p>For information about Incident Manager, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/userguide/\">Systems Manager Incident Manager User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/APIReference/\">Systems Manager Incident Manager API Reference</a> </i>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2014-11-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.AssociationExecutionTargetOutputSource;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Includes information about the specified association execution.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:14:21.701211-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AssociationExecutionTarget {
  public static final String SERIALIZED_NAME_ASSOCIATION_ID = "AssociationId";
  @SerializedName(SERIALIZED_NAME_ASSOCIATION_ID)
  private String associationId;

  public static final String SERIALIZED_NAME_ASSOCIATION_VERSION = "AssociationVersion";
  @SerializedName(SERIALIZED_NAME_ASSOCIATION_VERSION)
  private String associationVersion;

  public static final String SERIALIZED_NAME_EXECUTION_ID = "ExecutionId";
  @SerializedName(SERIALIZED_NAME_EXECUTION_ID)
  private String executionId;

  public static final String SERIALIZED_NAME_RESOURCE_ID = "ResourceId";
  @SerializedName(SERIALIZED_NAME_RESOURCE_ID)
  private String resourceId;

  public static final String SERIALIZED_NAME_RESOURCE_TYPE = "ResourceType";
  @SerializedName(SERIALIZED_NAME_RESOURCE_TYPE)
  private String resourceType;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_DETAILED_STATUS = "DetailedStatus";
  @SerializedName(SERIALIZED_NAME_DETAILED_STATUS)
  private String detailedStatus;

  public static final String SERIALIZED_NAME_LAST_EXECUTION_DATE = "LastExecutionDate";
  @SerializedName(SERIALIZED_NAME_LAST_EXECUTION_DATE)
  private OffsetDateTime lastExecutionDate;

  public static final String SERIALIZED_NAME_OUTPUT_SOURCE = "OutputSource";
  @SerializedName(SERIALIZED_NAME_OUTPUT_SOURCE)
  private AssociationExecutionTargetOutputSource outputSource;

  public AssociationExecutionTarget() {
  }

  public AssociationExecutionTarget associationId(String associationId) {
    this.associationId = associationId;
    return this;
  }

  /**
   * Get associationId
   * @return associationId
   */
  @javax.annotation.Nullable
  public String getAssociationId() {
    return associationId;
  }

  public void setAssociationId(String associationId) {
    this.associationId = associationId;
  }


  public AssociationExecutionTarget associationVersion(String associationVersion) {
    this.associationVersion = associationVersion;
    return this;
  }

  /**
   * Get associationVersion
   * @return associationVersion
   */
  @javax.annotation.Nullable
  public String getAssociationVersion() {
    return associationVersion;
  }

  public void setAssociationVersion(String associationVersion) {
    this.associationVersion = associationVersion;
  }


  public AssociationExecutionTarget executionId(String executionId) {
    this.executionId = executionId;
    return this;
  }

  /**
   * Get executionId
   * @return executionId
   */
  @javax.annotation.Nullable
  public String getExecutionId() {
    return executionId;
  }

  public void setExecutionId(String executionId) {
    this.executionId = executionId;
  }


  public AssociationExecutionTarget resourceId(String resourceId) {
    this.resourceId = resourceId;
    return this;
  }

  /**
   * Get resourceId
   * @return resourceId
   */
  @javax.annotation.Nullable
  public String getResourceId() {
    return resourceId;
  }

  public void setResourceId(String resourceId) {
    this.resourceId = resourceId;
  }


  public AssociationExecutionTarget resourceType(String resourceType) {
    this.resourceType = resourceType;
    return this;
  }

  /**
   * Get resourceType
   * @return resourceType
   */
  @javax.annotation.Nullable
  public String getResourceType() {
    return resourceType;
  }

  public void setResourceType(String resourceType) {
    this.resourceType = resourceType;
  }


  public AssociationExecutionTarget status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public AssociationExecutionTarget detailedStatus(String detailedStatus) {
    this.detailedStatus = detailedStatus;
    return this;
  }

  /**
   * Get detailedStatus
   * @return detailedStatus
   */
  @javax.annotation.Nullable
  public String getDetailedStatus() {
    return detailedStatus;
  }

  public void setDetailedStatus(String detailedStatus) {
    this.detailedStatus = detailedStatus;
  }


  public AssociationExecutionTarget lastExecutionDate(OffsetDateTime lastExecutionDate) {
    this.lastExecutionDate = lastExecutionDate;
    return this;
  }

  /**
   * Get lastExecutionDate
   * @return lastExecutionDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastExecutionDate() {
    return lastExecutionDate;
  }

  public void setLastExecutionDate(OffsetDateTime lastExecutionDate) {
    this.lastExecutionDate = lastExecutionDate;
  }


  public AssociationExecutionTarget outputSource(AssociationExecutionTargetOutputSource outputSource) {
    this.outputSource = outputSource;
    return this;
  }

  /**
   * Get outputSource
   * @return outputSource
   */
  @javax.annotation.Nullable
  public AssociationExecutionTargetOutputSource getOutputSource() {
    return outputSource;
  }

  public void setOutputSource(AssociationExecutionTargetOutputSource outputSource) {
    this.outputSource = outputSource;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AssociationExecutionTarget associationExecutionTarget = (AssociationExecutionTarget) o;
    return Objects.equals(this.associationId, associationExecutionTarget.associationId) &&
        Objects.equals(this.associationVersion, associationExecutionTarget.associationVersion) &&
        Objects.equals(this.executionId, associationExecutionTarget.executionId) &&
        Objects.equals(this.resourceId, associationExecutionTarget.resourceId) &&
        Objects.equals(this.resourceType, associationExecutionTarget.resourceType) &&
        Objects.equals(this.status, associationExecutionTarget.status) &&
        Objects.equals(this.detailedStatus, associationExecutionTarget.detailedStatus) &&
        Objects.equals(this.lastExecutionDate, associationExecutionTarget.lastExecutionDate) &&
        Objects.equals(this.outputSource, associationExecutionTarget.outputSource);
  }

  @Override
  public int hashCode() {
    return Objects.hash(associationId, associationVersion, executionId, resourceId, resourceType, status, detailedStatus, lastExecutionDate, outputSource);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AssociationExecutionTarget {\n");
    sb.append("    associationId: ").append(toIndentedString(associationId)).append("\n");
    sb.append("    associationVersion: ").append(toIndentedString(associationVersion)).append("\n");
    sb.append("    executionId: ").append(toIndentedString(executionId)).append("\n");
    sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
    sb.append("    resourceType: ").append(toIndentedString(resourceType)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    detailedStatus: ").append(toIndentedString(detailedStatus)).append("\n");
    sb.append("    lastExecutionDate: ").append(toIndentedString(lastExecutionDate)).append("\n");
    sb.append("    outputSource: ").append(toIndentedString(outputSource)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AssociationId");
    openapiFields.add("AssociationVersion");
    openapiFields.add("ExecutionId");
    openapiFields.add("ResourceId");
    openapiFields.add("ResourceType");
    openapiFields.add("Status");
    openapiFields.add("DetailedStatus");
    openapiFields.add("LastExecutionDate");
    openapiFields.add("OutputSource");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AssociationExecutionTarget
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AssociationExecutionTarget.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AssociationExecutionTarget is not found in the empty JSON string", AssociationExecutionTarget.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AssociationExecutionTarget.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AssociationExecutionTarget` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AssociationId`
      if (jsonObj.get("AssociationId") != null && !jsonObj.get("AssociationId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AssociationId"));
      }
      // validate the optional field `AssociationVersion`
      if (jsonObj.get("AssociationVersion") != null && !jsonObj.get("AssociationVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AssociationVersion"));
      }
      // validate the optional field `ExecutionId`
      if (jsonObj.get("ExecutionId") != null && !jsonObj.get("ExecutionId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ExecutionId"));
      }
      // validate the optional field `ResourceId`
      if (jsonObj.get("ResourceId") != null && !jsonObj.get("ResourceId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ResourceId"));
      }
      // validate the optional field `ResourceType`
      if (jsonObj.get("ResourceType") != null && !jsonObj.get("ResourceType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ResourceType"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `DetailedStatus`
      if (jsonObj.get("DetailedStatus") != null && !jsonObj.get("DetailedStatus").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DetailedStatus"));
      }
      // validate the optional field `LastExecutionDate`
      if (jsonObj.get("LastExecutionDate") != null && !jsonObj.get("LastExecutionDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastExecutionDate"));
      }
      // validate the optional field `OutputSource`
      if (jsonObj.get("OutputSource") != null && !jsonObj.get("OutputSource").isJsonNull()) {
        AssociationExecutionTargetOutputSource.validateJsonElement(jsonObj.get("OutputSource"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AssociationExecutionTarget.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AssociationExecutionTarget' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AssociationExecutionTarget> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AssociationExecutionTarget.class));

       return (TypeAdapter<T>) new TypeAdapter<AssociationExecutionTarget>() {
           @Override
           public void write(JsonWriter out, AssociationExecutionTarget value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AssociationExecutionTarget read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AssociationExecutionTarget given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AssociationExecutionTarget
   * @throws IOException if the JSON string is invalid with respect to AssociationExecutionTarget
   */
  public static AssociationExecutionTarget fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AssociationExecutionTarget.class);
  }

  /**
   * Convert an instance of AssociationExecutionTarget to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

