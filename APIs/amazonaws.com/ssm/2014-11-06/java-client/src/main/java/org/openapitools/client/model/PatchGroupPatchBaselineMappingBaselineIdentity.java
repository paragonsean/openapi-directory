/*
 * Amazon Simple Systems Manager (SSM)
 * <p>Amazon Web Services Systems Manager is the operations hub for your Amazon Web Services applications and resources and a secure end-to-end management solution for hybrid cloud environments that enables safe and secure operations at scale.</p> <p>This reference is intended to be used with the <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/\">Amazon Web Services Systems Manager User Guide</a>. To get started, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html\">Setting up Amazon Web Services Systems Manager</a>.</p> <p class=\"title\"> <b>Related resources</b> </p> <ul> <li> <p>For information about each of the capabilities that comprise Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/systems-manager-capabilities.html\">Systems Manager capabilities</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </li> <li> <p>For details about predefined runbooks for Automation, a capability of Amazon Web Services Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-runbook-reference.html\">Systems Manager Automation runbook reference</a> </i>.</p> </li> <li> <p>For information about AppConfig, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/\">AppConfig User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/\">AppConfig API Reference</a> </i>.</p> </li> <li> <p>For information about Incident Manager, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/userguide/\">Systems Manager Incident Manager User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/APIReference/\">Systems Manager Incident Manager API Reference</a> </i>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2014-11-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.OperatingSystem;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PatchGroupPatchBaselineMappingBaselineIdentity
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:14:21.701211-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PatchGroupPatchBaselineMappingBaselineIdentity {
  public static final String SERIALIZED_NAME_BASELINE_ID = "BaselineId";
  @SerializedName(SERIALIZED_NAME_BASELINE_ID)
  private String baselineId;

  public static final String SERIALIZED_NAME_BASELINE_NAME = "BaselineName";
  @SerializedName(SERIALIZED_NAME_BASELINE_NAME)
  private String baselineName;

  public static final String SERIALIZED_NAME_OPERATING_SYSTEM = "OperatingSystem";
  @SerializedName(SERIALIZED_NAME_OPERATING_SYSTEM)
  private OperatingSystem operatingSystem;

  public static final String SERIALIZED_NAME_BASELINE_DESCRIPTION = "BaselineDescription";
  @SerializedName(SERIALIZED_NAME_BASELINE_DESCRIPTION)
  private String baselineDescription;

  public static final String SERIALIZED_NAME_DEFAULT_BASELINE = "DefaultBaseline";
  @SerializedName(SERIALIZED_NAME_DEFAULT_BASELINE)
  private Boolean defaultBaseline;

  public PatchGroupPatchBaselineMappingBaselineIdentity() {
  }

  public PatchGroupPatchBaselineMappingBaselineIdentity baselineId(String baselineId) {
    this.baselineId = baselineId;
    return this;
  }

  /**
   * Get baselineId
   * @return baselineId
   */
  @javax.annotation.Nullable
  public String getBaselineId() {
    return baselineId;
  }

  public void setBaselineId(String baselineId) {
    this.baselineId = baselineId;
  }


  public PatchGroupPatchBaselineMappingBaselineIdentity baselineName(String baselineName) {
    this.baselineName = baselineName;
    return this;
  }

  /**
   * Get baselineName
   * @return baselineName
   */
  @javax.annotation.Nullable
  public String getBaselineName() {
    return baselineName;
  }

  public void setBaselineName(String baselineName) {
    this.baselineName = baselineName;
  }


  public PatchGroupPatchBaselineMappingBaselineIdentity operatingSystem(OperatingSystem operatingSystem) {
    this.operatingSystem = operatingSystem;
    return this;
  }

  /**
   * Get operatingSystem
   * @return operatingSystem
   */
  @javax.annotation.Nullable
  public OperatingSystem getOperatingSystem() {
    return operatingSystem;
  }

  public void setOperatingSystem(OperatingSystem operatingSystem) {
    this.operatingSystem = operatingSystem;
  }


  public PatchGroupPatchBaselineMappingBaselineIdentity baselineDescription(String baselineDescription) {
    this.baselineDescription = baselineDescription;
    return this;
  }

  /**
   * Get baselineDescription
   * @return baselineDescription
   */
  @javax.annotation.Nullable
  public String getBaselineDescription() {
    return baselineDescription;
  }

  public void setBaselineDescription(String baselineDescription) {
    this.baselineDescription = baselineDescription;
  }


  public PatchGroupPatchBaselineMappingBaselineIdentity defaultBaseline(Boolean defaultBaseline) {
    this.defaultBaseline = defaultBaseline;
    return this;
  }

  /**
   * Get defaultBaseline
   * @return defaultBaseline
   */
  @javax.annotation.Nullable
  public Boolean getDefaultBaseline() {
    return defaultBaseline;
  }

  public void setDefaultBaseline(Boolean defaultBaseline) {
    this.defaultBaseline = defaultBaseline;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PatchGroupPatchBaselineMappingBaselineIdentity patchGroupPatchBaselineMappingBaselineIdentity = (PatchGroupPatchBaselineMappingBaselineIdentity) o;
    return Objects.equals(this.baselineId, patchGroupPatchBaselineMappingBaselineIdentity.baselineId) &&
        Objects.equals(this.baselineName, patchGroupPatchBaselineMappingBaselineIdentity.baselineName) &&
        Objects.equals(this.operatingSystem, patchGroupPatchBaselineMappingBaselineIdentity.operatingSystem) &&
        Objects.equals(this.baselineDescription, patchGroupPatchBaselineMappingBaselineIdentity.baselineDescription) &&
        Objects.equals(this.defaultBaseline, patchGroupPatchBaselineMappingBaselineIdentity.defaultBaseline);
  }

  @Override
  public int hashCode() {
    return Objects.hash(baselineId, baselineName, operatingSystem, baselineDescription, defaultBaseline);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PatchGroupPatchBaselineMappingBaselineIdentity {\n");
    sb.append("    baselineId: ").append(toIndentedString(baselineId)).append("\n");
    sb.append("    baselineName: ").append(toIndentedString(baselineName)).append("\n");
    sb.append("    operatingSystem: ").append(toIndentedString(operatingSystem)).append("\n");
    sb.append("    baselineDescription: ").append(toIndentedString(baselineDescription)).append("\n");
    sb.append("    defaultBaseline: ").append(toIndentedString(defaultBaseline)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("BaselineId");
    openapiFields.add("BaselineName");
    openapiFields.add("OperatingSystem");
    openapiFields.add("BaselineDescription");
    openapiFields.add("DefaultBaseline");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PatchGroupPatchBaselineMappingBaselineIdentity
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PatchGroupPatchBaselineMappingBaselineIdentity.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PatchGroupPatchBaselineMappingBaselineIdentity is not found in the empty JSON string", PatchGroupPatchBaselineMappingBaselineIdentity.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PatchGroupPatchBaselineMappingBaselineIdentity.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PatchGroupPatchBaselineMappingBaselineIdentity` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `BaselineId`
      if (jsonObj.get("BaselineId") != null && !jsonObj.get("BaselineId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("BaselineId"));
      }
      // validate the optional field `BaselineName`
      if (jsonObj.get("BaselineName") != null && !jsonObj.get("BaselineName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("BaselineName"));
      }
      // validate the optional field `OperatingSystem`
      if (jsonObj.get("OperatingSystem") != null && !jsonObj.get("OperatingSystem").isJsonNull()) {
        OperatingSystem.validateJsonElement(jsonObj.get("OperatingSystem"));
      }
      // validate the optional field `BaselineDescription`
      if (jsonObj.get("BaselineDescription") != null && !jsonObj.get("BaselineDescription").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("BaselineDescription"));
      }
      // validate the optional field `DefaultBaseline`
      if (jsonObj.get("DefaultBaseline") != null && !jsonObj.get("DefaultBaseline").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("DefaultBaseline"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PatchGroupPatchBaselineMappingBaselineIdentity.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PatchGroupPatchBaselineMappingBaselineIdentity' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PatchGroupPatchBaselineMappingBaselineIdentity> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PatchGroupPatchBaselineMappingBaselineIdentity.class));

       return (TypeAdapter<T>) new TypeAdapter<PatchGroupPatchBaselineMappingBaselineIdentity>() {
           @Override
           public void write(JsonWriter out, PatchGroupPatchBaselineMappingBaselineIdentity value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PatchGroupPatchBaselineMappingBaselineIdentity read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PatchGroupPatchBaselineMappingBaselineIdentity given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PatchGroupPatchBaselineMappingBaselineIdentity
   * @throws IOException if the JSON string is invalid with respect to PatchGroupPatchBaselineMappingBaselineIdentity
   */
  public static PatchGroupPatchBaselineMappingBaselineIdentity fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PatchGroupPatchBaselineMappingBaselineIdentity.class);
  }

  /**
   * Convert an instance of PatchGroupPatchBaselineMappingBaselineIdentity to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

