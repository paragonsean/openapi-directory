/*
 * Amazon Simple Systems Manager (SSM)
 * <p>Amazon Web Services Systems Manager is the operations hub for your Amazon Web Services applications and resources and a secure end-to-end management solution for hybrid cloud environments that enables safe and secure operations at scale.</p> <p>This reference is intended to be used with the <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/\">Amazon Web Services Systems Manager User Guide</a>. To get started, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html\">Setting up Amazon Web Services Systems Manager</a>.</p> <p class=\"title\"> <b>Related resources</b> </p> <ul> <li> <p>For information about each of the capabilities that comprise Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/systems-manager-capabilities.html\">Systems Manager capabilities</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </li> <li> <p>For details about predefined runbooks for Automation, a capability of Amazon Web Services Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-runbook-reference.html\">Systems Manager Automation runbook reference</a> </i>.</p> </li> <li> <p>For information about AppConfig, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/\">AppConfig User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/\">AppConfig API Reference</a> </i>.</p> </li> <li> <p>For information about Incident Manager, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/userguide/\">Systems Manager Incident Manager User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/APIReference/\">Systems Manager Incident Manager API Reference</a> </i>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2014-11-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AlarmConfiguration;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Includes information about the specified association.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:14:21.701211-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AssociationExecution {
  public static final String SERIALIZED_NAME_ASSOCIATION_ID = "AssociationId";
  @SerializedName(SERIALIZED_NAME_ASSOCIATION_ID)
  private String associationId;

  public static final String SERIALIZED_NAME_ASSOCIATION_VERSION = "AssociationVersion";
  @SerializedName(SERIALIZED_NAME_ASSOCIATION_VERSION)
  private String associationVersion;

  public static final String SERIALIZED_NAME_EXECUTION_ID = "ExecutionId";
  @SerializedName(SERIALIZED_NAME_EXECUTION_ID)
  private String executionId;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_DETAILED_STATUS = "DetailedStatus";
  @SerializedName(SERIALIZED_NAME_DETAILED_STATUS)
  private String detailedStatus;

  public static final String SERIALIZED_NAME_CREATED_TIME = "CreatedTime";
  @SerializedName(SERIALIZED_NAME_CREATED_TIME)
  private OffsetDateTime createdTime;

  public static final String SERIALIZED_NAME_LAST_EXECUTION_DATE = "LastExecutionDate";
  @SerializedName(SERIALIZED_NAME_LAST_EXECUTION_DATE)
  private OffsetDateTime lastExecutionDate;

  public static final String SERIALIZED_NAME_RESOURCE_COUNT_BY_STATUS = "ResourceCountByStatus";
  @SerializedName(SERIALIZED_NAME_RESOURCE_COUNT_BY_STATUS)
  private String resourceCountByStatus;

  public static final String SERIALIZED_NAME_ALARM_CONFIGURATION = "AlarmConfiguration";
  @SerializedName(SERIALIZED_NAME_ALARM_CONFIGURATION)
  private AlarmConfiguration alarmConfiguration;

  public static final String SERIALIZED_NAME_TRIGGERED_ALARMS = "TriggeredAlarms";
  @SerializedName(SERIALIZED_NAME_TRIGGERED_ALARMS)
  private List triggeredAlarms;

  public AssociationExecution() {
  }

  public AssociationExecution associationId(String associationId) {
    this.associationId = associationId;
    return this;
  }

  /**
   * Get associationId
   * @return associationId
   */
  @javax.annotation.Nullable
  public String getAssociationId() {
    return associationId;
  }

  public void setAssociationId(String associationId) {
    this.associationId = associationId;
  }


  public AssociationExecution associationVersion(String associationVersion) {
    this.associationVersion = associationVersion;
    return this;
  }

  /**
   * Get associationVersion
   * @return associationVersion
   */
  @javax.annotation.Nullable
  public String getAssociationVersion() {
    return associationVersion;
  }

  public void setAssociationVersion(String associationVersion) {
    this.associationVersion = associationVersion;
  }


  public AssociationExecution executionId(String executionId) {
    this.executionId = executionId;
    return this;
  }

  /**
   * Get executionId
   * @return executionId
   */
  @javax.annotation.Nullable
  public String getExecutionId() {
    return executionId;
  }

  public void setExecutionId(String executionId) {
    this.executionId = executionId;
  }


  public AssociationExecution status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public AssociationExecution detailedStatus(String detailedStatus) {
    this.detailedStatus = detailedStatus;
    return this;
  }

  /**
   * Get detailedStatus
   * @return detailedStatus
   */
  @javax.annotation.Nullable
  public String getDetailedStatus() {
    return detailedStatus;
  }

  public void setDetailedStatus(String detailedStatus) {
    this.detailedStatus = detailedStatus;
  }


  public AssociationExecution createdTime(OffsetDateTime createdTime) {
    this.createdTime = createdTime;
    return this;
  }

  /**
   * Get createdTime
   * @return createdTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedTime() {
    return createdTime;
  }

  public void setCreatedTime(OffsetDateTime createdTime) {
    this.createdTime = createdTime;
  }


  public AssociationExecution lastExecutionDate(OffsetDateTime lastExecutionDate) {
    this.lastExecutionDate = lastExecutionDate;
    return this;
  }

  /**
   * Get lastExecutionDate
   * @return lastExecutionDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastExecutionDate() {
    return lastExecutionDate;
  }

  public void setLastExecutionDate(OffsetDateTime lastExecutionDate) {
    this.lastExecutionDate = lastExecutionDate;
  }


  public AssociationExecution resourceCountByStatus(String resourceCountByStatus) {
    this.resourceCountByStatus = resourceCountByStatus;
    return this;
  }

  /**
   * Get resourceCountByStatus
   * @return resourceCountByStatus
   */
  @javax.annotation.Nullable
  public String getResourceCountByStatus() {
    return resourceCountByStatus;
  }

  public void setResourceCountByStatus(String resourceCountByStatus) {
    this.resourceCountByStatus = resourceCountByStatus;
  }


  public AssociationExecution alarmConfiguration(AlarmConfiguration alarmConfiguration) {
    this.alarmConfiguration = alarmConfiguration;
    return this;
  }

  /**
   * Get alarmConfiguration
   * @return alarmConfiguration
   */
  @javax.annotation.Nullable
  public AlarmConfiguration getAlarmConfiguration() {
    return alarmConfiguration;
  }

  public void setAlarmConfiguration(AlarmConfiguration alarmConfiguration) {
    this.alarmConfiguration = alarmConfiguration;
  }


  public AssociationExecution triggeredAlarms(List triggeredAlarms) {
    this.triggeredAlarms = triggeredAlarms;
    return this;
  }

  /**
   * Get triggeredAlarms
   * @return triggeredAlarms
   */
  @javax.annotation.Nullable
  public List getTriggeredAlarms() {
    return triggeredAlarms;
  }

  public void setTriggeredAlarms(List triggeredAlarms) {
    this.triggeredAlarms = triggeredAlarms;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AssociationExecution associationExecution = (AssociationExecution) o;
    return Objects.equals(this.associationId, associationExecution.associationId) &&
        Objects.equals(this.associationVersion, associationExecution.associationVersion) &&
        Objects.equals(this.executionId, associationExecution.executionId) &&
        Objects.equals(this.status, associationExecution.status) &&
        Objects.equals(this.detailedStatus, associationExecution.detailedStatus) &&
        Objects.equals(this.createdTime, associationExecution.createdTime) &&
        Objects.equals(this.lastExecutionDate, associationExecution.lastExecutionDate) &&
        Objects.equals(this.resourceCountByStatus, associationExecution.resourceCountByStatus) &&
        Objects.equals(this.alarmConfiguration, associationExecution.alarmConfiguration) &&
        Objects.equals(this.triggeredAlarms, associationExecution.triggeredAlarms);
  }

  @Override
  public int hashCode() {
    return Objects.hash(associationId, associationVersion, executionId, status, detailedStatus, createdTime, lastExecutionDate, resourceCountByStatus, alarmConfiguration, triggeredAlarms);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AssociationExecution {\n");
    sb.append("    associationId: ").append(toIndentedString(associationId)).append("\n");
    sb.append("    associationVersion: ").append(toIndentedString(associationVersion)).append("\n");
    sb.append("    executionId: ").append(toIndentedString(executionId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    detailedStatus: ").append(toIndentedString(detailedStatus)).append("\n");
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    lastExecutionDate: ").append(toIndentedString(lastExecutionDate)).append("\n");
    sb.append("    resourceCountByStatus: ").append(toIndentedString(resourceCountByStatus)).append("\n");
    sb.append("    alarmConfiguration: ").append(toIndentedString(alarmConfiguration)).append("\n");
    sb.append("    triggeredAlarms: ").append(toIndentedString(triggeredAlarms)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AssociationId");
    openapiFields.add("AssociationVersion");
    openapiFields.add("ExecutionId");
    openapiFields.add("Status");
    openapiFields.add("DetailedStatus");
    openapiFields.add("CreatedTime");
    openapiFields.add("LastExecutionDate");
    openapiFields.add("ResourceCountByStatus");
    openapiFields.add("AlarmConfiguration");
    openapiFields.add("TriggeredAlarms");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AssociationExecution
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AssociationExecution.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AssociationExecution is not found in the empty JSON string", AssociationExecution.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AssociationExecution.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AssociationExecution` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AssociationId`
      if (jsonObj.get("AssociationId") != null && !jsonObj.get("AssociationId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AssociationId"));
      }
      // validate the optional field `AssociationVersion`
      if (jsonObj.get("AssociationVersion") != null && !jsonObj.get("AssociationVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AssociationVersion"));
      }
      // validate the optional field `ExecutionId`
      if (jsonObj.get("ExecutionId") != null && !jsonObj.get("ExecutionId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ExecutionId"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `DetailedStatus`
      if (jsonObj.get("DetailedStatus") != null && !jsonObj.get("DetailedStatus").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DetailedStatus"));
      }
      // validate the optional field `CreatedTime`
      if (jsonObj.get("CreatedTime") != null && !jsonObj.get("CreatedTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreatedTime"));
      }
      // validate the optional field `LastExecutionDate`
      if (jsonObj.get("LastExecutionDate") != null && !jsonObj.get("LastExecutionDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastExecutionDate"));
      }
      // validate the optional field `ResourceCountByStatus`
      if (jsonObj.get("ResourceCountByStatus") != null && !jsonObj.get("ResourceCountByStatus").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ResourceCountByStatus"));
      }
      // validate the optional field `AlarmConfiguration`
      if (jsonObj.get("AlarmConfiguration") != null && !jsonObj.get("AlarmConfiguration").isJsonNull()) {
        AlarmConfiguration.validateJsonElement(jsonObj.get("AlarmConfiguration"));
      }
      // validate the optional field `TriggeredAlarms`
      if (jsonObj.get("TriggeredAlarms") != null && !jsonObj.get("TriggeredAlarms").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("TriggeredAlarms"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AssociationExecution.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AssociationExecution' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AssociationExecution> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AssociationExecution.class));

       return (TypeAdapter<T>) new TypeAdapter<AssociationExecution>() {
           @Override
           public void write(JsonWriter out, AssociationExecution value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AssociationExecution read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AssociationExecution given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AssociationExecution
   * @throws IOException if the JSON string is invalid with respect to AssociationExecution
   */
  public static AssociationExecution fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AssociationExecution.class);
  }

  /**
   * Convert an instance of AssociationExecution to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

