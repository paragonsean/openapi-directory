/*
 * Amazon Simple Systems Manager (SSM)
 * <p>Amazon Web Services Systems Manager is the operations hub for your Amazon Web Services applications and resources and a secure end-to-end management solution for hybrid cloud environments that enables safe and secure operations at scale.</p> <p>This reference is intended to be used with the <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/\">Amazon Web Services Systems Manager User Guide</a>. To get started, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html\">Setting up Amazon Web Services Systems Manager</a>.</p> <p class=\"title\"> <b>Related resources</b> </p> <ul> <li> <p>For information about each of the capabilities that comprise Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/systems-manager-capabilities.html\">Systems Manager capabilities</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </li> <li> <p>For details about predefined runbooks for Automation, a capability of Amazon Web Services Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-runbook-reference.html\">Systems Manager Automation runbook reference</a> </i>.</p> </li> <li> <p>For information about AppConfig, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/\">AppConfig User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/\">AppConfig API Reference</a> </i>.</p> </li> <li> <p>For information about Incident Manager, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/userguide/\">Systems Manager Incident Manager User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/APIReference/\">Systems Manager Incident Manager API Reference</a> </i>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2014-11-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Information about the maintenance window.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:14:21.701211-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class MaintenanceWindowIdentity {
  public static final String SERIALIZED_NAME_WINDOW_ID = "WindowId";
  @SerializedName(SERIALIZED_NAME_WINDOW_ID)
  private String windowId;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ENABLED = "Enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_DURATION = "Duration";
  @SerializedName(SERIALIZED_NAME_DURATION)
  private Integer duration;

  public static final String SERIALIZED_NAME_CUTOFF = "Cutoff";
  @SerializedName(SERIALIZED_NAME_CUTOFF)
  private Integer cutoff;

  public static final String SERIALIZED_NAME_SCHEDULE = "Schedule";
  @SerializedName(SERIALIZED_NAME_SCHEDULE)
  private String schedule;

  public static final String SERIALIZED_NAME_SCHEDULE_TIMEZONE = "ScheduleTimezone";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_TIMEZONE)
  private String scheduleTimezone;

  public static final String SERIALIZED_NAME_SCHEDULE_OFFSET = "ScheduleOffset";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_OFFSET)
  private Integer scheduleOffset;

  public static final String SERIALIZED_NAME_END_DATE = "EndDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private String endDate;

  public static final String SERIALIZED_NAME_START_DATE = "StartDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private String startDate;

  public static final String SERIALIZED_NAME_NEXT_EXECUTION_TIME = "NextExecutionTime";
  @SerializedName(SERIALIZED_NAME_NEXT_EXECUTION_TIME)
  private String nextExecutionTime;

  public MaintenanceWindowIdentity() {
  }

  public MaintenanceWindowIdentity windowId(String windowId) {
    this.windowId = windowId;
    return this;
  }

  /**
   * Get windowId
   * @return windowId
   */
  @javax.annotation.Nullable
  public String getWindowId() {
    return windowId;
  }

  public void setWindowId(String windowId) {
    this.windowId = windowId;
  }


  public MaintenanceWindowIdentity name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public MaintenanceWindowIdentity description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public MaintenanceWindowIdentity enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Get enabled
   * @return enabled
   */
  @javax.annotation.Nullable
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public MaintenanceWindowIdentity duration(Integer duration) {
    this.duration = duration;
    return this;
  }

  /**
   * Get duration
   * @return duration
   */
  @javax.annotation.Nullable
  public Integer getDuration() {
    return duration;
  }

  public void setDuration(Integer duration) {
    this.duration = duration;
  }


  public MaintenanceWindowIdentity cutoff(Integer cutoff) {
    this.cutoff = cutoff;
    return this;
  }

  /**
   * Get cutoff
   * @return cutoff
   */
  @javax.annotation.Nullable
  public Integer getCutoff() {
    return cutoff;
  }

  public void setCutoff(Integer cutoff) {
    this.cutoff = cutoff;
  }


  public MaintenanceWindowIdentity schedule(String schedule) {
    this.schedule = schedule;
    return this;
  }

  /**
   * Get schedule
   * @return schedule
   */
  @javax.annotation.Nullable
  public String getSchedule() {
    return schedule;
  }

  public void setSchedule(String schedule) {
    this.schedule = schedule;
  }


  public MaintenanceWindowIdentity scheduleTimezone(String scheduleTimezone) {
    this.scheduleTimezone = scheduleTimezone;
    return this;
  }

  /**
   * Get scheduleTimezone
   * @return scheduleTimezone
   */
  @javax.annotation.Nullable
  public String getScheduleTimezone() {
    return scheduleTimezone;
  }

  public void setScheduleTimezone(String scheduleTimezone) {
    this.scheduleTimezone = scheduleTimezone;
  }


  public MaintenanceWindowIdentity scheduleOffset(Integer scheduleOffset) {
    this.scheduleOffset = scheduleOffset;
    return this;
  }

  /**
   * Get scheduleOffset
   * @return scheduleOffset
   */
  @javax.annotation.Nullable
  public Integer getScheduleOffset() {
    return scheduleOffset;
  }

  public void setScheduleOffset(Integer scheduleOffset) {
    this.scheduleOffset = scheduleOffset;
  }


  public MaintenanceWindowIdentity endDate(String endDate) {
    this.endDate = endDate;
    return this;
  }

  /**
   * Get endDate
   * @return endDate
   */
  @javax.annotation.Nullable
  public String getEndDate() {
    return endDate;
  }

  public void setEndDate(String endDate) {
    this.endDate = endDate;
  }


  public MaintenanceWindowIdentity startDate(String startDate) {
    this.startDate = startDate;
    return this;
  }

  /**
   * Get startDate
   * @return startDate
   */
  @javax.annotation.Nullable
  public String getStartDate() {
    return startDate;
  }

  public void setStartDate(String startDate) {
    this.startDate = startDate;
  }


  public MaintenanceWindowIdentity nextExecutionTime(String nextExecutionTime) {
    this.nextExecutionTime = nextExecutionTime;
    return this;
  }

  /**
   * Get nextExecutionTime
   * @return nextExecutionTime
   */
  @javax.annotation.Nullable
  public String getNextExecutionTime() {
    return nextExecutionTime;
  }

  public void setNextExecutionTime(String nextExecutionTime) {
    this.nextExecutionTime = nextExecutionTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MaintenanceWindowIdentity maintenanceWindowIdentity = (MaintenanceWindowIdentity) o;
    return Objects.equals(this.windowId, maintenanceWindowIdentity.windowId) &&
        Objects.equals(this.name, maintenanceWindowIdentity.name) &&
        Objects.equals(this.description, maintenanceWindowIdentity.description) &&
        Objects.equals(this.enabled, maintenanceWindowIdentity.enabled) &&
        Objects.equals(this.duration, maintenanceWindowIdentity.duration) &&
        Objects.equals(this.cutoff, maintenanceWindowIdentity.cutoff) &&
        Objects.equals(this.schedule, maintenanceWindowIdentity.schedule) &&
        Objects.equals(this.scheduleTimezone, maintenanceWindowIdentity.scheduleTimezone) &&
        Objects.equals(this.scheduleOffset, maintenanceWindowIdentity.scheduleOffset) &&
        Objects.equals(this.endDate, maintenanceWindowIdentity.endDate) &&
        Objects.equals(this.startDate, maintenanceWindowIdentity.startDate) &&
        Objects.equals(this.nextExecutionTime, maintenanceWindowIdentity.nextExecutionTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(windowId, name, description, enabled, duration, cutoff, schedule, scheduleTimezone, scheduleOffset, endDate, startDate, nextExecutionTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MaintenanceWindowIdentity {\n");
    sb.append("    windowId: ").append(toIndentedString(windowId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    cutoff: ").append(toIndentedString(cutoff)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    scheduleTimezone: ").append(toIndentedString(scheduleTimezone)).append("\n");
    sb.append("    scheduleOffset: ").append(toIndentedString(scheduleOffset)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    nextExecutionTime: ").append(toIndentedString(nextExecutionTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("WindowId");
    openapiFields.add("Name");
    openapiFields.add("Description");
    openapiFields.add("Enabled");
    openapiFields.add("Duration");
    openapiFields.add("Cutoff");
    openapiFields.add("Schedule");
    openapiFields.add("ScheduleTimezone");
    openapiFields.add("ScheduleOffset");
    openapiFields.add("EndDate");
    openapiFields.add("StartDate");
    openapiFields.add("NextExecutionTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MaintenanceWindowIdentity
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MaintenanceWindowIdentity.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MaintenanceWindowIdentity is not found in the empty JSON string", MaintenanceWindowIdentity.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MaintenanceWindowIdentity.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MaintenanceWindowIdentity` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `WindowId`
      if (jsonObj.get("WindowId") != null && !jsonObj.get("WindowId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("WindowId"));
      }
      // validate the optional field `Name`
      if (jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Name"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the optional field `Enabled`
      if (jsonObj.get("Enabled") != null && !jsonObj.get("Enabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("Enabled"));
      }
      // validate the optional field `Duration`
      if (jsonObj.get("Duration") != null && !jsonObj.get("Duration").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Duration"));
      }
      // validate the optional field `Cutoff`
      if (jsonObj.get("Cutoff") != null && !jsonObj.get("Cutoff").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Cutoff"));
      }
      // validate the optional field `Schedule`
      if (jsonObj.get("Schedule") != null && !jsonObj.get("Schedule").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Schedule"));
      }
      // validate the optional field `ScheduleTimezone`
      if (jsonObj.get("ScheduleTimezone") != null && !jsonObj.get("ScheduleTimezone").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ScheduleTimezone"));
      }
      // validate the optional field `ScheduleOffset`
      if (jsonObj.get("ScheduleOffset") != null && !jsonObj.get("ScheduleOffset").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ScheduleOffset"));
      }
      // validate the optional field `EndDate`
      if (jsonObj.get("EndDate") != null && !jsonObj.get("EndDate").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EndDate"));
      }
      // validate the optional field `StartDate`
      if (jsonObj.get("StartDate") != null && !jsonObj.get("StartDate").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StartDate"));
      }
      // validate the optional field `NextExecutionTime`
      if (jsonObj.get("NextExecutionTime") != null && !jsonObj.get("NextExecutionTime").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NextExecutionTime"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MaintenanceWindowIdentity.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MaintenanceWindowIdentity' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MaintenanceWindowIdentity> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MaintenanceWindowIdentity.class));

       return (TypeAdapter<T>) new TypeAdapter<MaintenanceWindowIdentity>() {
           @Override
           public void write(JsonWriter out, MaintenanceWindowIdentity value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MaintenanceWindowIdentity read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MaintenanceWindowIdentity given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MaintenanceWindowIdentity
   * @throws IOException if the JSON string is invalid with respect to MaintenanceWindowIdentity
   */
  public static MaintenanceWindowIdentity fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MaintenanceWindowIdentity.class);
  }

  /**
   * Convert an instance of MaintenanceWindowIdentity to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

