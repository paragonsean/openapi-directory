/*
 * Amazon Simple Systems Manager (SSM)
 * <p>Amazon Web Services Systems Manager is the operations hub for your Amazon Web Services applications and resources and a secure end-to-end management solution for hybrid cloud environments that enables safe and secure operations at scale.</p> <p>This reference is intended to be used with the <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/\">Amazon Web Services Systems Manager User Guide</a>. To get started, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html\">Setting up Amazon Web Services Systems Manager</a>.</p> <p class=\"title\"> <b>Related resources</b> </p> <ul> <li> <p>For information about each of the capabilities that comprise Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/systems-manager-capabilities.html\">Systems Manager capabilities</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </li> <li> <p>For details about predefined runbooks for Automation, a capability of Amazon Web Services Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-runbook-reference.html\">Systems Manager Automation runbook reference</a> </i>.</p> </li> <li> <p>For information about AppConfig, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/\">AppConfig User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/\">AppConfig API Reference</a> </i>.</p> </li> <li> <p>For information about Incident Manager, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/userguide/\">Systems Manager Incident Manager User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/APIReference/\">Systems Manager Incident Manager API Reference</a> </i>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2014-11-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.InstanceInformationAssociationOverview;
import org.openapitools.client.model.PingStatus;
import org.openapitools.client.model.PlatformType;
import org.openapitools.client.model.ResourceType;
import org.openapitools.client.model.SourceType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Describes a filter for a specific list of managed nodes. 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:14:21.701211-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class InstanceInformation {
  public static final String SERIALIZED_NAME_INSTANCE_ID = "InstanceId";
  @SerializedName(SERIALIZED_NAME_INSTANCE_ID)
  private String instanceId;

  public static final String SERIALIZED_NAME_PING_STATUS = "PingStatus";
  @SerializedName(SERIALIZED_NAME_PING_STATUS)
  private PingStatus pingStatus;

  public static final String SERIALIZED_NAME_LAST_PING_DATE_TIME = "LastPingDateTime";
  @SerializedName(SERIALIZED_NAME_LAST_PING_DATE_TIME)
  private OffsetDateTime lastPingDateTime;

  public static final String SERIALIZED_NAME_AGENT_VERSION = "AgentVersion";
  @SerializedName(SERIALIZED_NAME_AGENT_VERSION)
  private String agentVersion;

  public static final String SERIALIZED_NAME_IS_LATEST_VERSION = "IsLatestVersion";
  @SerializedName(SERIALIZED_NAME_IS_LATEST_VERSION)
  private Boolean isLatestVersion;

  public static final String SERIALIZED_NAME_PLATFORM_TYPE = "PlatformType";
  @SerializedName(SERIALIZED_NAME_PLATFORM_TYPE)
  private PlatformType platformType;

  public static final String SERIALIZED_NAME_PLATFORM_NAME = "PlatformName";
  @SerializedName(SERIALIZED_NAME_PLATFORM_NAME)
  private String platformName;

  public static final String SERIALIZED_NAME_PLATFORM_VERSION = "PlatformVersion";
  @SerializedName(SERIALIZED_NAME_PLATFORM_VERSION)
  private String platformVersion;

  public static final String SERIALIZED_NAME_ACTIVATION_ID = "ActivationId";
  @SerializedName(SERIALIZED_NAME_ACTIVATION_ID)
  private String activationId;

  public static final String SERIALIZED_NAME_IAM_ROLE = "IamRole";
  @SerializedName(SERIALIZED_NAME_IAM_ROLE)
  private String iamRole;

  public static final String SERIALIZED_NAME_REGISTRATION_DATE = "RegistrationDate";
  @SerializedName(SERIALIZED_NAME_REGISTRATION_DATE)
  private OffsetDateTime registrationDate;

  public static final String SERIALIZED_NAME_RESOURCE_TYPE = "ResourceType";
  @SerializedName(SERIALIZED_NAME_RESOURCE_TYPE)
  private ResourceType resourceType;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_IP_ADDRESS = "IPAddress";
  @SerializedName(SERIALIZED_NAME_IP_ADDRESS)
  private String ipAddress;

  public static final String SERIALIZED_NAME_COMPUTER_NAME = "ComputerName";
  @SerializedName(SERIALIZED_NAME_COMPUTER_NAME)
  private String computerName;

  public static final String SERIALIZED_NAME_ASSOCIATION_STATUS = "AssociationStatus";
  @SerializedName(SERIALIZED_NAME_ASSOCIATION_STATUS)
  private String associationStatus;

  public static final String SERIALIZED_NAME_LAST_ASSOCIATION_EXECUTION_DATE = "LastAssociationExecutionDate";
  @SerializedName(SERIALIZED_NAME_LAST_ASSOCIATION_EXECUTION_DATE)
  private OffsetDateTime lastAssociationExecutionDate;

  public static final String SERIALIZED_NAME_LAST_SUCCESSFUL_ASSOCIATION_EXECUTION_DATE = "LastSuccessfulAssociationExecutionDate";
  @SerializedName(SERIALIZED_NAME_LAST_SUCCESSFUL_ASSOCIATION_EXECUTION_DATE)
  private OffsetDateTime lastSuccessfulAssociationExecutionDate;

  public static final String SERIALIZED_NAME_ASSOCIATION_OVERVIEW = "AssociationOverview";
  @SerializedName(SERIALIZED_NAME_ASSOCIATION_OVERVIEW)
  private InstanceInformationAssociationOverview associationOverview;

  public static final String SERIALIZED_NAME_SOURCE_ID = "SourceId";
  @SerializedName(SERIALIZED_NAME_SOURCE_ID)
  private String sourceId;

  public static final String SERIALIZED_NAME_SOURCE_TYPE = "SourceType";
  @SerializedName(SERIALIZED_NAME_SOURCE_TYPE)
  private SourceType sourceType;

  public InstanceInformation() {
  }

  public InstanceInformation instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

  /**
   * Get instanceId
   * @return instanceId
   */
  @javax.annotation.Nullable
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }


  public InstanceInformation pingStatus(PingStatus pingStatus) {
    this.pingStatus = pingStatus;
    return this;
  }

  /**
   * Get pingStatus
   * @return pingStatus
   */
  @javax.annotation.Nullable
  public PingStatus getPingStatus() {
    return pingStatus;
  }

  public void setPingStatus(PingStatus pingStatus) {
    this.pingStatus = pingStatus;
  }


  public InstanceInformation lastPingDateTime(OffsetDateTime lastPingDateTime) {
    this.lastPingDateTime = lastPingDateTime;
    return this;
  }

  /**
   * Get lastPingDateTime
   * @return lastPingDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastPingDateTime() {
    return lastPingDateTime;
  }

  public void setLastPingDateTime(OffsetDateTime lastPingDateTime) {
    this.lastPingDateTime = lastPingDateTime;
  }


  public InstanceInformation agentVersion(String agentVersion) {
    this.agentVersion = agentVersion;
    return this;
  }

  /**
   * Get agentVersion
   * @return agentVersion
   */
  @javax.annotation.Nullable
  public String getAgentVersion() {
    return agentVersion;
  }

  public void setAgentVersion(String agentVersion) {
    this.agentVersion = agentVersion;
  }


  public InstanceInformation isLatestVersion(Boolean isLatestVersion) {
    this.isLatestVersion = isLatestVersion;
    return this;
  }

  /**
   * Get isLatestVersion
   * @return isLatestVersion
   */
  @javax.annotation.Nullable
  public Boolean getIsLatestVersion() {
    return isLatestVersion;
  }

  public void setIsLatestVersion(Boolean isLatestVersion) {
    this.isLatestVersion = isLatestVersion;
  }


  public InstanceInformation platformType(PlatformType platformType) {
    this.platformType = platformType;
    return this;
  }

  /**
   * Get platformType
   * @return platformType
   */
  @javax.annotation.Nullable
  public PlatformType getPlatformType() {
    return platformType;
  }

  public void setPlatformType(PlatformType platformType) {
    this.platformType = platformType;
  }


  public InstanceInformation platformName(String platformName) {
    this.platformName = platformName;
    return this;
  }

  /**
   * Get platformName
   * @return platformName
   */
  @javax.annotation.Nullable
  public String getPlatformName() {
    return platformName;
  }

  public void setPlatformName(String platformName) {
    this.platformName = platformName;
  }


  public InstanceInformation platformVersion(String platformVersion) {
    this.platformVersion = platformVersion;
    return this;
  }

  /**
   * Get platformVersion
   * @return platformVersion
   */
  @javax.annotation.Nullable
  public String getPlatformVersion() {
    return platformVersion;
  }

  public void setPlatformVersion(String platformVersion) {
    this.platformVersion = platformVersion;
  }


  public InstanceInformation activationId(String activationId) {
    this.activationId = activationId;
    return this;
  }

  /**
   * Get activationId
   * @return activationId
   */
  @javax.annotation.Nullable
  public String getActivationId() {
    return activationId;
  }

  public void setActivationId(String activationId) {
    this.activationId = activationId;
  }


  public InstanceInformation iamRole(String iamRole) {
    this.iamRole = iamRole;
    return this;
  }

  /**
   * Get iamRole
   * @return iamRole
   */
  @javax.annotation.Nullable
  public String getIamRole() {
    return iamRole;
  }

  public void setIamRole(String iamRole) {
    this.iamRole = iamRole;
  }


  public InstanceInformation registrationDate(OffsetDateTime registrationDate) {
    this.registrationDate = registrationDate;
    return this;
  }

  /**
   * Get registrationDate
   * @return registrationDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getRegistrationDate() {
    return registrationDate;
  }

  public void setRegistrationDate(OffsetDateTime registrationDate) {
    this.registrationDate = registrationDate;
  }


  public InstanceInformation resourceType(ResourceType resourceType) {
    this.resourceType = resourceType;
    return this;
  }

  /**
   * Get resourceType
   * @return resourceType
   */
  @javax.annotation.Nullable
  public ResourceType getResourceType() {
    return resourceType;
  }

  public void setResourceType(ResourceType resourceType) {
    this.resourceType = resourceType;
  }


  public InstanceInformation name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public InstanceInformation ipAddress(String ipAddress) {
    this.ipAddress = ipAddress;
    return this;
  }

  /**
   * Get ipAddress
   * @return ipAddress
   */
  @javax.annotation.Nullable
  public String getIpAddress() {
    return ipAddress;
  }

  public void setIpAddress(String ipAddress) {
    this.ipAddress = ipAddress;
  }


  public InstanceInformation computerName(String computerName) {
    this.computerName = computerName;
    return this;
  }

  /**
   * Get computerName
   * @return computerName
   */
  @javax.annotation.Nullable
  public String getComputerName() {
    return computerName;
  }

  public void setComputerName(String computerName) {
    this.computerName = computerName;
  }


  public InstanceInformation associationStatus(String associationStatus) {
    this.associationStatus = associationStatus;
    return this;
  }

  /**
   * Get associationStatus
   * @return associationStatus
   */
  @javax.annotation.Nullable
  public String getAssociationStatus() {
    return associationStatus;
  }

  public void setAssociationStatus(String associationStatus) {
    this.associationStatus = associationStatus;
  }


  public InstanceInformation lastAssociationExecutionDate(OffsetDateTime lastAssociationExecutionDate) {
    this.lastAssociationExecutionDate = lastAssociationExecutionDate;
    return this;
  }

  /**
   * Get lastAssociationExecutionDate
   * @return lastAssociationExecutionDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastAssociationExecutionDate() {
    return lastAssociationExecutionDate;
  }

  public void setLastAssociationExecutionDate(OffsetDateTime lastAssociationExecutionDate) {
    this.lastAssociationExecutionDate = lastAssociationExecutionDate;
  }


  public InstanceInformation lastSuccessfulAssociationExecutionDate(OffsetDateTime lastSuccessfulAssociationExecutionDate) {
    this.lastSuccessfulAssociationExecutionDate = lastSuccessfulAssociationExecutionDate;
    return this;
  }

  /**
   * Get lastSuccessfulAssociationExecutionDate
   * @return lastSuccessfulAssociationExecutionDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastSuccessfulAssociationExecutionDate() {
    return lastSuccessfulAssociationExecutionDate;
  }

  public void setLastSuccessfulAssociationExecutionDate(OffsetDateTime lastSuccessfulAssociationExecutionDate) {
    this.lastSuccessfulAssociationExecutionDate = lastSuccessfulAssociationExecutionDate;
  }


  public InstanceInformation associationOverview(InstanceInformationAssociationOverview associationOverview) {
    this.associationOverview = associationOverview;
    return this;
  }

  /**
   * Get associationOverview
   * @return associationOverview
   */
  @javax.annotation.Nullable
  public InstanceInformationAssociationOverview getAssociationOverview() {
    return associationOverview;
  }

  public void setAssociationOverview(InstanceInformationAssociationOverview associationOverview) {
    this.associationOverview = associationOverview;
  }


  public InstanceInformation sourceId(String sourceId) {
    this.sourceId = sourceId;
    return this;
  }

  /**
   * Get sourceId
   * @return sourceId
   */
  @javax.annotation.Nullable
  public String getSourceId() {
    return sourceId;
  }

  public void setSourceId(String sourceId) {
    this.sourceId = sourceId;
  }


  public InstanceInformation sourceType(SourceType sourceType) {
    this.sourceType = sourceType;
    return this;
  }

  /**
   * Get sourceType
   * @return sourceType
   */
  @javax.annotation.Nullable
  public SourceType getSourceType() {
    return sourceType;
  }

  public void setSourceType(SourceType sourceType) {
    this.sourceType = sourceType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstanceInformation instanceInformation = (InstanceInformation) o;
    return Objects.equals(this.instanceId, instanceInformation.instanceId) &&
        Objects.equals(this.pingStatus, instanceInformation.pingStatus) &&
        Objects.equals(this.lastPingDateTime, instanceInformation.lastPingDateTime) &&
        Objects.equals(this.agentVersion, instanceInformation.agentVersion) &&
        Objects.equals(this.isLatestVersion, instanceInformation.isLatestVersion) &&
        Objects.equals(this.platformType, instanceInformation.platformType) &&
        Objects.equals(this.platformName, instanceInformation.platformName) &&
        Objects.equals(this.platformVersion, instanceInformation.platformVersion) &&
        Objects.equals(this.activationId, instanceInformation.activationId) &&
        Objects.equals(this.iamRole, instanceInformation.iamRole) &&
        Objects.equals(this.registrationDate, instanceInformation.registrationDate) &&
        Objects.equals(this.resourceType, instanceInformation.resourceType) &&
        Objects.equals(this.name, instanceInformation.name) &&
        Objects.equals(this.ipAddress, instanceInformation.ipAddress) &&
        Objects.equals(this.computerName, instanceInformation.computerName) &&
        Objects.equals(this.associationStatus, instanceInformation.associationStatus) &&
        Objects.equals(this.lastAssociationExecutionDate, instanceInformation.lastAssociationExecutionDate) &&
        Objects.equals(this.lastSuccessfulAssociationExecutionDate, instanceInformation.lastSuccessfulAssociationExecutionDate) &&
        Objects.equals(this.associationOverview, instanceInformation.associationOverview) &&
        Objects.equals(this.sourceId, instanceInformation.sourceId) &&
        Objects.equals(this.sourceType, instanceInformation.sourceType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(instanceId, pingStatus, lastPingDateTime, agentVersion, isLatestVersion, platformType, platformName, platformVersion, activationId, iamRole, registrationDate, resourceType, name, ipAddress, computerName, associationStatus, lastAssociationExecutionDate, lastSuccessfulAssociationExecutionDate, associationOverview, sourceId, sourceType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstanceInformation {\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    pingStatus: ").append(toIndentedString(pingStatus)).append("\n");
    sb.append("    lastPingDateTime: ").append(toIndentedString(lastPingDateTime)).append("\n");
    sb.append("    agentVersion: ").append(toIndentedString(agentVersion)).append("\n");
    sb.append("    isLatestVersion: ").append(toIndentedString(isLatestVersion)).append("\n");
    sb.append("    platformType: ").append(toIndentedString(platformType)).append("\n");
    sb.append("    platformName: ").append(toIndentedString(platformName)).append("\n");
    sb.append("    platformVersion: ").append(toIndentedString(platformVersion)).append("\n");
    sb.append("    activationId: ").append(toIndentedString(activationId)).append("\n");
    sb.append("    iamRole: ").append(toIndentedString(iamRole)).append("\n");
    sb.append("    registrationDate: ").append(toIndentedString(registrationDate)).append("\n");
    sb.append("    resourceType: ").append(toIndentedString(resourceType)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    computerName: ").append(toIndentedString(computerName)).append("\n");
    sb.append("    associationStatus: ").append(toIndentedString(associationStatus)).append("\n");
    sb.append("    lastAssociationExecutionDate: ").append(toIndentedString(lastAssociationExecutionDate)).append("\n");
    sb.append("    lastSuccessfulAssociationExecutionDate: ").append(toIndentedString(lastSuccessfulAssociationExecutionDate)).append("\n");
    sb.append("    associationOverview: ").append(toIndentedString(associationOverview)).append("\n");
    sb.append("    sourceId: ").append(toIndentedString(sourceId)).append("\n");
    sb.append("    sourceType: ").append(toIndentedString(sourceType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("InstanceId");
    openapiFields.add("PingStatus");
    openapiFields.add("LastPingDateTime");
    openapiFields.add("AgentVersion");
    openapiFields.add("IsLatestVersion");
    openapiFields.add("PlatformType");
    openapiFields.add("PlatformName");
    openapiFields.add("PlatformVersion");
    openapiFields.add("ActivationId");
    openapiFields.add("IamRole");
    openapiFields.add("RegistrationDate");
    openapiFields.add("ResourceType");
    openapiFields.add("Name");
    openapiFields.add("IPAddress");
    openapiFields.add("ComputerName");
    openapiFields.add("AssociationStatus");
    openapiFields.add("LastAssociationExecutionDate");
    openapiFields.add("LastSuccessfulAssociationExecutionDate");
    openapiFields.add("AssociationOverview");
    openapiFields.add("SourceId");
    openapiFields.add("SourceType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to InstanceInformation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!InstanceInformation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in InstanceInformation is not found in the empty JSON string", InstanceInformation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!InstanceInformation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `InstanceInformation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `InstanceId`
      if (jsonObj.get("InstanceId") != null && !jsonObj.get("InstanceId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("InstanceId"));
      }
      // validate the optional field `PingStatus`
      if (jsonObj.get("PingStatus") != null && !jsonObj.get("PingStatus").isJsonNull()) {
        PingStatus.validateJsonElement(jsonObj.get("PingStatus"));
      }
      // validate the optional field `LastPingDateTime`
      if (jsonObj.get("LastPingDateTime") != null && !jsonObj.get("LastPingDateTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastPingDateTime"));
      }
      // validate the optional field `AgentVersion`
      if (jsonObj.get("AgentVersion") != null && !jsonObj.get("AgentVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AgentVersion"));
      }
      // validate the optional field `IsLatestVersion`
      if (jsonObj.get("IsLatestVersion") != null && !jsonObj.get("IsLatestVersion").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("IsLatestVersion"));
      }
      // validate the optional field `PlatformType`
      if (jsonObj.get("PlatformType") != null && !jsonObj.get("PlatformType").isJsonNull()) {
        PlatformType.validateJsonElement(jsonObj.get("PlatformType"));
      }
      // validate the optional field `PlatformName`
      if (jsonObj.get("PlatformName") != null && !jsonObj.get("PlatformName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PlatformName"));
      }
      // validate the optional field `PlatformVersion`
      if (jsonObj.get("PlatformVersion") != null && !jsonObj.get("PlatformVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PlatformVersion"));
      }
      // validate the optional field `ActivationId`
      if (jsonObj.get("ActivationId") != null && !jsonObj.get("ActivationId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ActivationId"));
      }
      // validate the optional field `IamRole`
      if (jsonObj.get("IamRole") != null && !jsonObj.get("IamRole").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("IamRole"));
      }
      // validate the optional field `RegistrationDate`
      if (jsonObj.get("RegistrationDate") != null && !jsonObj.get("RegistrationDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("RegistrationDate"));
      }
      // validate the optional field `ResourceType`
      if (jsonObj.get("ResourceType") != null && !jsonObj.get("ResourceType").isJsonNull()) {
        ResourceType.validateJsonElement(jsonObj.get("ResourceType"));
      }
      // validate the optional field `Name`
      if (jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Name"));
      }
      // validate the optional field `IPAddress`
      if (jsonObj.get("IPAddress") != null && !jsonObj.get("IPAddress").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("IPAddress"));
      }
      // validate the optional field `ComputerName`
      if (jsonObj.get("ComputerName") != null && !jsonObj.get("ComputerName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ComputerName"));
      }
      // validate the optional field `AssociationStatus`
      if (jsonObj.get("AssociationStatus") != null && !jsonObj.get("AssociationStatus").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AssociationStatus"));
      }
      // validate the optional field `LastAssociationExecutionDate`
      if (jsonObj.get("LastAssociationExecutionDate") != null && !jsonObj.get("LastAssociationExecutionDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastAssociationExecutionDate"));
      }
      // validate the optional field `LastSuccessfulAssociationExecutionDate`
      if (jsonObj.get("LastSuccessfulAssociationExecutionDate") != null && !jsonObj.get("LastSuccessfulAssociationExecutionDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastSuccessfulAssociationExecutionDate"));
      }
      // validate the optional field `AssociationOverview`
      if (jsonObj.get("AssociationOverview") != null && !jsonObj.get("AssociationOverview").isJsonNull()) {
        InstanceInformationAssociationOverview.validateJsonElement(jsonObj.get("AssociationOverview"));
      }
      // validate the optional field `SourceId`
      if (jsonObj.get("SourceId") != null && !jsonObj.get("SourceId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SourceId"));
      }
      // validate the optional field `SourceType`
      if (jsonObj.get("SourceType") != null && !jsonObj.get("SourceType").isJsonNull()) {
        SourceType.validateJsonElement(jsonObj.get("SourceType"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InstanceInformation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InstanceInformation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InstanceInformation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InstanceInformation.class));

       return (TypeAdapter<T>) new TypeAdapter<InstanceInformation>() {
           @Override
           public void write(JsonWriter out, InstanceInformation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public InstanceInformation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of InstanceInformation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of InstanceInformation
   * @throws IOException if the JSON string is invalid with respect to InstanceInformation
   */
  public static InstanceInformation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InstanceInformation.class);
  }

  /**
   * Convert an instance of InstanceInformation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

