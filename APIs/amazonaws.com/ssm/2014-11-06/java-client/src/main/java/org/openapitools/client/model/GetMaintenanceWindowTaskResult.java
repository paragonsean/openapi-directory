/*
 * Amazon Simple Systems Manager (SSM)
 * <p>Amazon Web Services Systems Manager is the operations hub for your Amazon Web Services applications and resources and a secure end-to-end management solution for hybrid cloud environments that enables safe and secure operations at scale.</p> <p>This reference is intended to be used with the <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/\">Amazon Web Services Systems Manager User Guide</a>. To get started, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html\">Setting up Amazon Web Services Systems Manager</a>.</p> <p class=\"title\"> <b>Related resources</b> </p> <ul> <li> <p>For information about each of the capabilities that comprise Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/systems-manager-capabilities.html\">Systems Manager capabilities</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </li> <li> <p>For details about predefined runbooks for Automation, a capability of Amazon Web Services Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-runbook-reference.html\">Systems Manager Automation runbook reference</a> </i>.</p> </li> <li> <p>For information about AppConfig, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/\">AppConfig User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/\">AppConfig API Reference</a> </i>.</p> </li> <li> <p>For information about Incident Manager, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/userguide/\">Systems Manager Incident Manager User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/APIReference/\">Systems Manager Incident Manager API Reference</a> </i>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2014-11-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.GetMaintenanceWindowExecutionTaskResultAlarmConfiguration;
import org.openapitools.client.model.GetMaintenanceWindowTaskResultLoggingInfo;
import org.openapitools.client.model.GetMaintenanceWindowTaskResultTaskInvocationParameters;
import org.openapitools.client.model.MaintenanceWindowTaskCutoffBehavior;
import org.openapitools.client.model.MaintenanceWindowTaskType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetMaintenanceWindowTaskResult
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:14:21.701211-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetMaintenanceWindowTaskResult {
  public static final String SERIALIZED_NAME_WINDOW_ID = "WindowId";
  @SerializedName(SERIALIZED_NAME_WINDOW_ID)
  private String windowId;

  public static final String SERIALIZED_NAME_WINDOW_TASK_ID = "WindowTaskId";
  @SerializedName(SERIALIZED_NAME_WINDOW_TASK_ID)
  private String windowTaskId;

  public static final String SERIALIZED_NAME_TARGETS = "Targets";
  @SerializedName(SERIALIZED_NAME_TARGETS)
  private List targets;

  public static final String SERIALIZED_NAME_TASK_ARN = "TaskArn";
  @SerializedName(SERIALIZED_NAME_TASK_ARN)
  private String taskArn;

  public static final String SERIALIZED_NAME_SERVICE_ROLE_ARN = "ServiceRoleArn";
  @SerializedName(SERIALIZED_NAME_SERVICE_ROLE_ARN)
  private String serviceRoleArn;

  public static final String SERIALIZED_NAME_TASK_TYPE = "TaskType";
  @SerializedName(SERIALIZED_NAME_TASK_TYPE)
  private MaintenanceWindowTaskType taskType;

  public static final String SERIALIZED_NAME_TASK_PARAMETERS = "TaskParameters";
  @SerializedName(SERIALIZED_NAME_TASK_PARAMETERS)
  private Map taskParameters;

  public static final String SERIALIZED_NAME_TASK_INVOCATION_PARAMETERS = "TaskInvocationParameters";
  @SerializedName(SERIALIZED_NAME_TASK_INVOCATION_PARAMETERS)
  private GetMaintenanceWindowTaskResultTaskInvocationParameters taskInvocationParameters;

  public static final String SERIALIZED_NAME_PRIORITY = "Priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private Integer priority;

  public static final String SERIALIZED_NAME_MAX_CONCURRENCY = "MaxConcurrency";
  @SerializedName(SERIALIZED_NAME_MAX_CONCURRENCY)
  private String maxConcurrency;

  public static final String SERIALIZED_NAME_MAX_ERRORS = "MaxErrors";
  @SerializedName(SERIALIZED_NAME_MAX_ERRORS)
  private String maxErrors;

  public static final String SERIALIZED_NAME_LOGGING_INFO = "LoggingInfo";
  @SerializedName(SERIALIZED_NAME_LOGGING_INFO)
  private GetMaintenanceWindowTaskResultLoggingInfo loggingInfo;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_CUTOFF_BEHAVIOR = "CutoffBehavior";
  @SerializedName(SERIALIZED_NAME_CUTOFF_BEHAVIOR)
  private MaintenanceWindowTaskCutoffBehavior cutoffBehavior;

  public static final String SERIALIZED_NAME_ALARM_CONFIGURATION = "AlarmConfiguration";
  @SerializedName(SERIALIZED_NAME_ALARM_CONFIGURATION)
  private GetMaintenanceWindowExecutionTaskResultAlarmConfiguration alarmConfiguration;

  public GetMaintenanceWindowTaskResult() {
  }

  public GetMaintenanceWindowTaskResult windowId(String windowId) {
    this.windowId = windowId;
    return this;
  }

  /**
   * Get windowId
   * @return windowId
   */
  @javax.annotation.Nullable
  public String getWindowId() {
    return windowId;
  }

  public void setWindowId(String windowId) {
    this.windowId = windowId;
  }


  public GetMaintenanceWindowTaskResult windowTaskId(String windowTaskId) {
    this.windowTaskId = windowTaskId;
    return this;
  }

  /**
   * Get windowTaskId
   * @return windowTaskId
   */
  @javax.annotation.Nullable
  public String getWindowTaskId() {
    return windowTaskId;
  }

  public void setWindowTaskId(String windowTaskId) {
    this.windowTaskId = windowTaskId;
  }


  public GetMaintenanceWindowTaskResult targets(List targets) {
    this.targets = targets;
    return this;
  }

  /**
   * Get targets
   * @return targets
   */
  @javax.annotation.Nullable
  public List getTargets() {
    return targets;
  }

  public void setTargets(List targets) {
    this.targets = targets;
  }


  public GetMaintenanceWindowTaskResult taskArn(String taskArn) {
    this.taskArn = taskArn;
    return this;
  }

  /**
   * Get taskArn
   * @return taskArn
   */
  @javax.annotation.Nullable
  public String getTaskArn() {
    return taskArn;
  }

  public void setTaskArn(String taskArn) {
    this.taskArn = taskArn;
  }


  public GetMaintenanceWindowTaskResult serviceRoleArn(String serviceRoleArn) {
    this.serviceRoleArn = serviceRoleArn;
    return this;
  }

  /**
   * Get serviceRoleArn
   * @return serviceRoleArn
   */
  @javax.annotation.Nullable
  public String getServiceRoleArn() {
    return serviceRoleArn;
  }

  public void setServiceRoleArn(String serviceRoleArn) {
    this.serviceRoleArn = serviceRoleArn;
  }


  public GetMaintenanceWindowTaskResult taskType(MaintenanceWindowTaskType taskType) {
    this.taskType = taskType;
    return this;
  }

  /**
   * Get taskType
   * @return taskType
   */
  @javax.annotation.Nullable
  public MaintenanceWindowTaskType getTaskType() {
    return taskType;
  }

  public void setTaskType(MaintenanceWindowTaskType taskType) {
    this.taskType = taskType;
  }


  public GetMaintenanceWindowTaskResult taskParameters(Map taskParameters) {
    this.taskParameters = taskParameters;
    return this;
  }

  /**
   * Get taskParameters
   * @return taskParameters
   */
  @javax.annotation.Nullable
  public Map getTaskParameters() {
    return taskParameters;
  }

  public void setTaskParameters(Map taskParameters) {
    this.taskParameters = taskParameters;
  }


  public GetMaintenanceWindowTaskResult taskInvocationParameters(GetMaintenanceWindowTaskResultTaskInvocationParameters taskInvocationParameters) {
    this.taskInvocationParameters = taskInvocationParameters;
    return this;
  }

  /**
   * Get taskInvocationParameters
   * @return taskInvocationParameters
   */
  @javax.annotation.Nullable
  public GetMaintenanceWindowTaskResultTaskInvocationParameters getTaskInvocationParameters() {
    return taskInvocationParameters;
  }

  public void setTaskInvocationParameters(GetMaintenanceWindowTaskResultTaskInvocationParameters taskInvocationParameters) {
    this.taskInvocationParameters = taskInvocationParameters;
  }


  public GetMaintenanceWindowTaskResult priority(Integer priority) {
    this.priority = priority;
    return this;
  }

  /**
   * Get priority
   * @return priority
   */
  @javax.annotation.Nullable
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }


  public GetMaintenanceWindowTaskResult maxConcurrency(String maxConcurrency) {
    this.maxConcurrency = maxConcurrency;
    return this;
  }

  /**
   * Get maxConcurrency
   * @return maxConcurrency
   */
  @javax.annotation.Nullable
  public String getMaxConcurrency() {
    return maxConcurrency;
  }

  public void setMaxConcurrency(String maxConcurrency) {
    this.maxConcurrency = maxConcurrency;
  }


  public GetMaintenanceWindowTaskResult maxErrors(String maxErrors) {
    this.maxErrors = maxErrors;
    return this;
  }

  /**
   * Get maxErrors
   * @return maxErrors
   */
  @javax.annotation.Nullable
  public String getMaxErrors() {
    return maxErrors;
  }

  public void setMaxErrors(String maxErrors) {
    this.maxErrors = maxErrors;
  }


  public GetMaintenanceWindowTaskResult loggingInfo(GetMaintenanceWindowTaskResultLoggingInfo loggingInfo) {
    this.loggingInfo = loggingInfo;
    return this;
  }

  /**
   * Get loggingInfo
   * @return loggingInfo
   */
  @javax.annotation.Nullable
  public GetMaintenanceWindowTaskResultLoggingInfo getLoggingInfo() {
    return loggingInfo;
  }

  public void setLoggingInfo(GetMaintenanceWindowTaskResultLoggingInfo loggingInfo) {
    this.loggingInfo = loggingInfo;
  }


  public GetMaintenanceWindowTaskResult name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GetMaintenanceWindowTaskResult description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GetMaintenanceWindowTaskResult cutoffBehavior(MaintenanceWindowTaskCutoffBehavior cutoffBehavior) {
    this.cutoffBehavior = cutoffBehavior;
    return this;
  }

  /**
   * Get cutoffBehavior
   * @return cutoffBehavior
   */
  @javax.annotation.Nullable
  public MaintenanceWindowTaskCutoffBehavior getCutoffBehavior() {
    return cutoffBehavior;
  }

  public void setCutoffBehavior(MaintenanceWindowTaskCutoffBehavior cutoffBehavior) {
    this.cutoffBehavior = cutoffBehavior;
  }


  public GetMaintenanceWindowTaskResult alarmConfiguration(GetMaintenanceWindowExecutionTaskResultAlarmConfiguration alarmConfiguration) {
    this.alarmConfiguration = alarmConfiguration;
    return this;
  }

  /**
   * Get alarmConfiguration
   * @return alarmConfiguration
   */
  @javax.annotation.Nullable
  public GetMaintenanceWindowExecutionTaskResultAlarmConfiguration getAlarmConfiguration() {
    return alarmConfiguration;
  }

  public void setAlarmConfiguration(GetMaintenanceWindowExecutionTaskResultAlarmConfiguration alarmConfiguration) {
    this.alarmConfiguration = alarmConfiguration;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetMaintenanceWindowTaskResult getMaintenanceWindowTaskResult = (GetMaintenanceWindowTaskResult) o;
    return Objects.equals(this.windowId, getMaintenanceWindowTaskResult.windowId) &&
        Objects.equals(this.windowTaskId, getMaintenanceWindowTaskResult.windowTaskId) &&
        Objects.equals(this.targets, getMaintenanceWindowTaskResult.targets) &&
        Objects.equals(this.taskArn, getMaintenanceWindowTaskResult.taskArn) &&
        Objects.equals(this.serviceRoleArn, getMaintenanceWindowTaskResult.serviceRoleArn) &&
        Objects.equals(this.taskType, getMaintenanceWindowTaskResult.taskType) &&
        Objects.equals(this.taskParameters, getMaintenanceWindowTaskResult.taskParameters) &&
        Objects.equals(this.taskInvocationParameters, getMaintenanceWindowTaskResult.taskInvocationParameters) &&
        Objects.equals(this.priority, getMaintenanceWindowTaskResult.priority) &&
        Objects.equals(this.maxConcurrency, getMaintenanceWindowTaskResult.maxConcurrency) &&
        Objects.equals(this.maxErrors, getMaintenanceWindowTaskResult.maxErrors) &&
        Objects.equals(this.loggingInfo, getMaintenanceWindowTaskResult.loggingInfo) &&
        Objects.equals(this.name, getMaintenanceWindowTaskResult.name) &&
        Objects.equals(this.description, getMaintenanceWindowTaskResult.description) &&
        Objects.equals(this.cutoffBehavior, getMaintenanceWindowTaskResult.cutoffBehavior) &&
        Objects.equals(this.alarmConfiguration, getMaintenanceWindowTaskResult.alarmConfiguration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(windowId, windowTaskId, targets, taskArn, serviceRoleArn, taskType, taskParameters, taskInvocationParameters, priority, maxConcurrency, maxErrors, loggingInfo, name, description, cutoffBehavior, alarmConfiguration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetMaintenanceWindowTaskResult {\n");
    sb.append("    windowId: ").append(toIndentedString(windowId)).append("\n");
    sb.append("    windowTaskId: ").append(toIndentedString(windowTaskId)).append("\n");
    sb.append("    targets: ").append(toIndentedString(targets)).append("\n");
    sb.append("    taskArn: ").append(toIndentedString(taskArn)).append("\n");
    sb.append("    serviceRoleArn: ").append(toIndentedString(serviceRoleArn)).append("\n");
    sb.append("    taskType: ").append(toIndentedString(taskType)).append("\n");
    sb.append("    taskParameters: ").append(toIndentedString(taskParameters)).append("\n");
    sb.append("    taskInvocationParameters: ").append(toIndentedString(taskInvocationParameters)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    maxConcurrency: ").append(toIndentedString(maxConcurrency)).append("\n");
    sb.append("    maxErrors: ").append(toIndentedString(maxErrors)).append("\n");
    sb.append("    loggingInfo: ").append(toIndentedString(loggingInfo)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    cutoffBehavior: ").append(toIndentedString(cutoffBehavior)).append("\n");
    sb.append("    alarmConfiguration: ").append(toIndentedString(alarmConfiguration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("WindowId");
    openapiFields.add("WindowTaskId");
    openapiFields.add("Targets");
    openapiFields.add("TaskArn");
    openapiFields.add("ServiceRoleArn");
    openapiFields.add("TaskType");
    openapiFields.add("TaskParameters");
    openapiFields.add("TaskInvocationParameters");
    openapiFields.add("Priority");
    openapiFields.add("MaxConcurrency");
    openapiFields.add("MaxErrors");
    openapiFields.add("LoggingInfo");
    openapiFields.add("Name");
    openapiFields.add("Description");
    openapiFields.add("CutoffBehavior");
    openapiFields.add("AlarmConfiguration");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetMaintenanceWindowTaskResult
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetMaintenanceWindowTaskResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetMaintenanceWindowTaskResult is not found in the empty JSON string", GetMaintenanceWindowTaskResult.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetMaintenanceWindowTaskResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetMaintenanceWindowTaskResult` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `WindowId`
      if (jsonObj.get("WindowId") != null && !jsonObj.get("WindowId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("WindowId"));
      }
      // validate the optional field `WindowTaskId`
      if (jsonObj.get("WindowTaskId") != null && !jsonObj.get("WindowTaskId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("WindowTaskId"));
      }
      // validate the optional field `Targets`
      if (jsonObj.get("Targets") != null && !jsonObj.get("Targets").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Targets"));
      }
      // validate the optional field `TaskArn`
      if (jsonObj.get("TaskArn") != null && !jsonObj.get("TaskArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TaskArn"));
      }
      // validate the optional field `ServiceRoleArn`
      if (jsonObj.get("ServiceRoleArn") != null && !jsonObj.get("ServiceRoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ServiceRoleArn"));
      }
      // validate the optional field `TaskType`
      if (jsonObj.get("TaskType") != null && !jsonObj.get("TaskType").isJsonNull()) {
        MaintenanceWindowTaskType.validateJsonElement(jsonObj.get("TaskType"));
      }
      // validate the optional field `TaskParameters`
      if (jsonObj.get("TaskParameters") != null && !jsonObj.get("TaskParameters").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("TaskParameters"));
      }
      // validate the optional field `TaskInvocationParameters`
      if (jsonObj.get("TaskInvocationParameters") != null && !jsonObj.get("TaskInvocationParameters").isJsonNull()) {
        GetMaintenanceWindowTaskResultTaskInvocationParameters.validateJsonElement(jsonObj.get("TaskInvocationParameters"));
      }
      // validate the optional field `Priority`
      if (jsonObj.get("Priority") != null && !jsonObj.get("Priority").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Priority"));
      }
      // validate the optional field `MaxConcurrency`
      if (jsonObj.get("MaxConcurrency") != null && !jsonObj.get("MaxConcurrency").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MaxConcurrency"));
      }
      // validate the optional field `MaxErrors`
      if (jsonObj.get("MaxErrors") != null && !jsonObj.get("MaxErrors").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MaxErrors"));
      }
      // validate the optional field `LoggingInfo`
      if (jsonObj.get("LoggingInfo") != null && !jsonObj.get("LoggingInfo").isJsonNull()) {
        GetMaintenanceWindowTaskResultLoggingInfo.validateJsonElement(jsonObj.get("LoggingInfo"));
      }
      // validate the optional field `Name`
      if (jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Name"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the optional field `CutoffBehavior`
      if (jsonObj.get("CutoffBehavior") != null && !jsonObj.get("CutoffBehavior").isJsonNull()) {
        MaintenanceWindowTaskCutoffBehavior.validateJsonElement(jsonObj.get("CutoffBehavior"));
      }
      // validate the optional field `AlarmConfiguration`
      if (jsonObj.get("AlarmConfiguration") != null && !jsonObj.get("AlarmConfiguration").isJsonNull()) {
        GetMaintenanceWindowExecutionTaskResultAlarmConfiguration.validateJsonElement(jsonObj.get("AlarmConfiguration"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetMaintenanceWindowTaskResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetMaintenanceWindowTaskResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetMaintenanceWindowTaskResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetMaintenanceWindowTaskResult.class));

       return (TypeAdapter<T>) new TypeAdapter<GetMaintenanceWindowTaskResult>() {
           @Override
           public void write(JsonWriter out, GetMaintenanceWindowTaskResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetMaintenanceWindowTaskResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetMaintenanceWindowTaskResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetMaintenanceWindowTaskResult
   * @throws IOException if the JSON string is invalid with respect to GetMaintenanceWindowTaskResult
   */
  public static GetMaintenanceWindowTaskResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetMaintenanceWindowTaskResult.class);
  }

  /**
   * Convert an instance of GetMaintenanceWindowTaskResult to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

