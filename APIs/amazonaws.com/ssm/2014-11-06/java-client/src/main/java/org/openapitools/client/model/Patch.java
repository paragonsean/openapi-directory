/*
 * Amazon Simple Systems Manager (SSM)
 * <p>Amazon Web Services Systems Manager is the operations hub for your Amazon Web Services applications and resources and a secure end-to-end management solution for hybrid cloud environments that enables safe and secure operations at scale.</p> <p>This reference is intended to be used with the <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/\">Amazon Web Services Systems Manager User Guide</a>. To get started, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html\">Setting up Amazon Web Services Systems Manager</a>.</p> <p class=\"title\"> <b>Related resources</b> </p> <ul> <li> <p>For information about each of the capabilities that comprise Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/systems-manager-capabilities.html\">Systems Manager capabilities</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </li> <li> <p>For details about predefined runbooks for Automation, a capability of Amazon Web Services Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-runbook-reference.html\">Systems Manager Automation runbook reference</a> </i>.</p> </li> <li> <p>For information about AppConfig, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/\">AppConfig User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/\">AppConfig API Reference</a> </i>.</p> </li> <li> <p>For information about Incident Manager, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/userguide/\">Systems Manager Incident Manager User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/APIReference/\">Systems Manager Incident Manager API Reference</a> </i>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2014-11-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents metadata about a patch.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:14:21.701211-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Patch {
  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_RELEASE_DATE = "ReleaseDate";
  @SerializedName(SERIALIZED_NAME_RELEASE_DATE)
  private OffsetDateTime releaseDate;

  public static final String SERIALIZED_NAME_TITLE = "Title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_CONTENT_URL = "ContentUrl";
  @SerializedName(SERIALIZED_NAME_CONTENT_URL)
  private String contentUrl;

  public static final String SERIALIZED_NAME_VENDOR = "Vendor";
  @SerializedName(SERIALIZED_NAME_VENDOR)
  private String vendor;

  public static final String SERIALIZED_NAME_PRODUCT_FAMILY = "ProductFamily";
  @SerializedName(SERIALIZED_NAME_PRODUCT_FAMILY)
  private String productFamily;

  public static final String SERIALIZED_NAME_PRODUCT = "Product";
  @SerializedName(SERIALIZED_NAME_PRODUCT)
  private String product;

  public static final String SERIALIZED_NAME_CLASSIFICATION = "Classification";
  @SerializedName(SERIALIZED_NAME_CLASSIFICATION)
  private String classification;

  public static final String SERIALIZED_NAME_MSRC_SEVERITY = "MsrcSeverity";
  @SerializedName(SERIALIZED_NAME_MSRC_SEVERITY)
  private String msrcSeverity;

  public static final String SERIALIZED_NAME_KB_NUMBER = "KbNumber";
  @SerializedName(SERIALIZED_NAME_KB_NUMBER)
  private String kbNumber;

  public static final String SERIALIZED_NAME_MSRC_NUMBER = "MsrcNumber";
  @SerializedName(SERIALIZED_NAME_MSRC_NUMBER)
  private String msrcNumber;

  public static final String SERIALIZED_NAME_LANGUAGE = "Language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  private String language;

  public static final String SERIALIZED_NAME_ADVISORY_IDS = "AdvisoryIds";
  @SerializedName(SERIALIZED_NAME_ADVISORY_IDS)
  private List advisoryIds;

  public static final String SERIALIZED_NAME_BUGZILLA_IDS = "BugzillaIds";
  @SerializedName(SERIALIZED_NAME_BUGZILLA_IDS)
  private List bugzillaIds;

  public static final String SERIALIZED_NAME_CV_E_IDS = "CVEIds";
  @SerializedName(SERIALIZED_NAME_CV_E_IDS)
  private List cvEIds;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_EPOCH = "Epoch";
  @SerializedName(SERIALIZED_NAME_EPOCH)
  private Integer epoch;

  public static final String SERIALIZED_NAME_VERSION = "Version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;

  public static final String SERIALIZED_NAME_RELEASE = "Release";
  @SerializedName(SERIALIZED_NAME_RELEASE)
  private String release;

  public static final String SERIALIZED_NAME_ARCH = "Arch";
  @SerializedName(SERIALIZED_NAME_ARCH)
  private String arch;

  public static final String SERIALIZED_NAME_SEVERITY = "Severity";
  @SerializedName(SERIALIZED_NAME_SEVERITY)
  private String severity;

  public static final String SERIALIZED_NAME_REPOSITORY = "Repository";
  @SerializedName(SERIALIZED_NAME_REPOSITORY)
  private String repository;

  public Patch() {
  }

  public Patch id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public Patch releaseDate(OffsetDateTime releaseDate) {
    this.releaseDate = releaseDate;
    return this;
  }

  /**
   * Get releaseDate
   * @return releaseDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getReleaseDate() {
    return releaseDate;
  }

  public void setReleaseDate(OffsetDateTime releaseDate) {
    this.releaseDate = releaseDate;
  }


  public Patch title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public Patch description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public Patch contentUrl(String contentUrl) {
    this.contentUrl = contentUrl;
    return this;
  }

  /**
   * Get contentUrl
   * @return contentUrl
   */
  @javax.annotation.Nullable
  public String getContentUrl() {
    return contentUrl;
  }

  public void setContentUrl(String contentUrl) {
    this.contentUrl = contentUrl;
  }


  public Patch vendor(String vendor) {
    this.vendor = vendor;
    return this;
  }

  /**
   * Get vendor
   * @return vendor
   */
  @javax.annotation.Nullable
  public String getVendor() {
    return vendor;
  }

  public void setVendor(String vendor) {
    this.vendor = vendor;
  }


  public Patch productFamily(String productFamily) {
    this.productFamily = productFamily;
    return this;
  }

  /**
   * Get productFamily
   * @return productFamily
   */
  @javax.annotation.Nullable
  public String getProductFamily() {
    return productFamily;
  }

  public void setProductFamily(String productFamily) {
    this.productFamily = productFamily;
  }


  public Patch product(String product) {
    this.product = product;
    return this;
  }

  /**
   * Get product
   * @return product
   */
  @javax.annotation.Nullable
  public String getProduct() {
    return product;
  }

  public void setProduct(String product) {
    this.product = product;
  }


  public Patch classification(String classification) {
    this.classification = classification;
    return this;
  }

  /**
   * Get classification
   * @return classification
   */
  @javax.annotation.Nullable
  public String getClassification() {
    return classification;
  }

  public void setClassification(String classification) {
    this.classification = classification;
  }


  public Patch msrcSeverity(String msrcSeverity) {
    this.msrcSeverity = msrcSeverity;
    return this;
  }

  /**
   * Get msrcSeverity
   * @return msrcSeverity
   */
  @javax.annotation.Nullable
  public String getMsrcSeverity() {
    return msrcSeverity;
  }

  public void setMsrcSeverity(String msrcSeverity) {
    this.msrcSeverity = msrcSeverity;
  }


  public Patch kbNumber(String kbNumber) {
    this.kbNumber = kbNumber;
    return this;
  }

  /**
   * Get kbNumber
   * @return kbNumber
   */
  @javax.annotation.Nullable
  public String getKbNumber() {
    return kbNumber;
  }

  public void setKbNumber(String kbNumber) {
    this.kbNumber = kbNumber;
  }


  public Patch msrcNumber(String msrcNumber) {
    this.msrcNumber = msrcNumber;
    return this;
  }

  /**
   * Get msrcNumber
   * @return msrcNumber
   */
  @javax.annotation.Nullable
  public String getMsrcNumber() {
    return msrcNumber;
  }

  public void setMsrcNumber(String msrcNumber) {
    this.msrcNumber = msrcNumber;
  }


  public Patch language(String language) {
    this.language = language;
    return this;
  }

  /**
   * Get language
   * @return language
   */
  @javax.annotation.Nullable
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }


  public Patch advisoryIds(List advisoryIds) {
    this.advisoryIds = advisoryIds;
    return this;
  }

  /**
   * Get advisoryIds
   * @return advisoryIds
   */
  @javax.annotation.Nullable
  public List getAdvisoryIds() {
    return advisoryIds;
  }

  public void setAdvisoryIds(List advisoryIds) {
    this.advisoryIds = advisoryIds;
  }


  public Patch bugzillaIds(List bugzillaIds) {
    this.bugzillaIds = bugzillaIds;
    return this;
  }

  /**
   * Get bugzillaIds
   * @return bugzillaIds
   */
  @javax.annotation.Nullable
  public List getBugzillaIds() {
    return bugzillaIds;
  }

  public void setBugzillaIds(List bugzillaIds) {
    this.bugzillaIds = bugzillaIds;
  }


  public Patch cvEIds(List cvEIds) {
    this.cvEIds = cvEIds;
    return this;
  }

  /**
   * Get cvEIds
   * @return cvEIds
   */
  @javax.annotation.Nullable
  public List getCvEIds() {
    return cvEIds;
  }

  public void setCvEIds(List cvEIds) {
    this.cvEIds = cvEIds;
  }


  public Patch name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public Patch epoch(Integer epoch) {
    this.epoch = epoch;
    return this;
  }

  /**
   * Get epoch
   * @return epoch
   */
  @javax.annotation.Nullable
  public Integer getEpoch() {
    return epoch;
  }

  public void setEpoch(Integer epoch) {
    this.epoch = epoch;
  }


  public Patch version(String version) {
    this.version = version;
    return this;
  }

  /**
   * Get version
   * @return version
   */
  @javax.annotation.Nullable
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  public Patch release(String release) {
    this.release = release;
    return this;
  }

  /**
   * Get release
   * @return release
   */
  @javax.annotation.Nullable
  public String getRelease() {
    return release;
  }

  public void setRelease(String release) {
    this.release = release;
  }


  public Patch arch(String arch) {
    this.arch = arch;
    return this;
  }

  /**
   * Get arch
   * @return arch
   */
  @javax.annotation.Nullable
  public String getArch() {
    return arch;
  }

  public void setArch(String arch) {
    this.arch = arch;
  }


  public Patch severity(String severity) {
    this.severity = severity;
    return this;
  }

  /**
   * Get severity
   * @return severity
   */
  @javax.annotation.Nullable
  public String getSeverity() {
    return severity;
  }

  public void setSeverity(String severity) {
    this.severity = severity;
  }


  public Patch repository(String repository) {
    this.repository = repository;
    return this;
  }

  /**
   * Get repository
   * @return repository
   */
  @javax.annotation.Nullable
  public String getRepository() {
    return repository;
  }

  public void setRepository(String repository) {
    this.repository = repository;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Patch patch = (Patch) o;
    return Objects.equals(this.id, patch.id) &&
        Objects.equals(this.releaseDate, patch.releaseDate) &&
        Objects.equals(this.title, patch.title) &&
        Objects.equals(this.description, patch.description) &&
        Objects.equals(this.contentUrl, patch.contentUrl) &&
        Objects.equals(this.vendor, patch.vendor) &&
        Objects.equals(this.productFamily, patch.productFamily) &&
        Objects.equals(this.product, patch.product) &&
        Objects.equals(this.classification, patch.classification) &&
        Objects.equals(this.msrcSeverity, patch.msrcSeverity) &&
        Objects.equals(this.kbNumber, patch.kbNumber) &&
        Objects.equals(this.msrcNumber, patch.msrcNumber) &&
        Objects.equals(this.language, patch.language) &&
        Objects.equals(this.advisoryIds, patch.advisoryIds) &&
        Objects.equals(this.bugzillaIds, patch.bugzillaIds) &&
        Objects.equals(this.cvEIds, patch.cvEIds) &&
        Objects.equals(this.name, patch.name) &&
        Objects.equals(this.epoch, patch.epoch) &&
        Objects.equals(this.version, patch.version) &&
        Objects.equals(this.release, patch.release) &&
        Objects.equals(this.arch, patch.arch) &&
        Objects.equals(this.severity, patch.severity) &&
        Objects.equals(this.repository, patch.repository);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, releaseDate, title, description, contentUrl, vendor, productFamily, product, classification, msrcSeverity, kbNumber, msrcNumber, language, advisoryIds, bugzillaIds, cvEIds, name, epoch, version, release, arch, severity, repository);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Patch {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    releaseDate: ").append(toIndentedString(releaseDate)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    contentUrl: ").append(toIndentedString(contentUrl)).append("\n");
    sb.append("    vendor: ").append(toIndentedString(vendor)).append("\n");
    sb.append("    productFamily: ").append(toIndentedString(productFamily)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    classification: ").append(toIndentedString(classification)).append("\n");
    sb.append("    msrcSeverity: ").append(toIndentedString(msrcSeverity)).append("\n");
    sb.append("    kbNumber: ").append(toIndentedString(kbNumber)).append("\n");
    sb.append("    msrcNumber: ").append(toIndentedString(msrcNumber)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    advisoryIds: ").append(toIndentedString(advisoryIds)).append("\n");
    sb.append("    bugzillaIds: ").append(toIndentedString(bugzillaIds)).append("\n");
    sb.append("    cvEIds: ").append(toIndentedString(cvEIds)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    epoch: ").append(toIndentedString(epoch)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    release: ").append(toIndentedString(release)).append("\n");
    sb.append("    arch: ").append(toIndentedString(arch)).append("\n");
    sb.append("    severity: ").append(toIndentedString(severity)).append("\n");
    sb.append("    repository: ").append(toIndentedString(repository)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Id");
    openapiFields.add("ReleaseDate");
    openapiFields.add("Title");
    openapiFields.add("Description");
    openapiFields.add("ContentUrl");
    openapiFields.add("Vendor");
    openapiFields.add("ProductFamily");
    openapiFields.add("Product");
    openapiFields.add("Classification");
    openapiFields.add("MsrcSeverity");
    openapiFields.add("KbNumber");
    openapiFields.add("MsrcNumber");
    openapiFields.add("Language");
    openapiFields.add("AdvisoryIds");
    openapiFields.add("BugzillaIds");
    openapiFields.add("CVEIds");
    openapiFields.add("Name");
    openapiFields.add("Epoch");
    openapiFields.add("Version");
    openapiFields.add("Release");
    openapiFields.add("Arch");
    openapiFields.add("Severity");
    openapiFields.add("Repository");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Patch
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Patch.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Patch is not found in the empty JSON string", Patch.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Patch.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Patch` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Id`
      if (jsonObj.get("Id") != null && !jsonObj.get("Id").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Id"));
      }
      // validate the optional field `ReleaseDate`
      if (jsonObj.get("ReleaseDate") != null && !jsonObj.get("ReleaseDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("ReleaseDate"));
      }
      // validate the optional field `Title`
      if (jsonObj.get("Title") != null && !jsonObj.get("Title").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Title"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the optional field `ContentUrl`
      if (jsonObj.get("ContentUrl") != null && !jsonObj.get("ContentUrl").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ContentUrl"));
      }
      // validate the optional field `Vendor`
      if (jsonObj.get("Vendor") != null && !jsonObj.get("Vendor").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Vendor"));
      }
      // validate the optional field `ProductFamily`
      if (jsonObj.get("ProductFamily") != null && !jsonObj.get("ProductFamily").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ProductFamily"));
      }
      // validate the optional field `Product`
      if (jsonObj.get("Product") != null && !jsonObj.get("Product").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Product"));
      }
      // validate the optional field `Classification`
      if (jsonObj.get("Classification") != null && !jsonObj.get("Classification").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Classification"));
      }
      // validate the optional field `MsrcSeverity`
      if (jsonObj.get("MsrcSeverity") != null && !jsonObj.get("MsrcSeverity").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MsrcSeverity"));
      }
      // validate the optional field `KbNumber`
      if (jsonObj.get("KbNumber") != null && !jsonObj.get("KbNumber").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("KbNumber"));
      }
      // validate the optional field `MsrcNumber`
      if (jsonObj.get("MsrcNumber") != null && !jsonObj.get("MsrcNumber").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MsrcNumber"));
      }
      // validate the optional field `Language`
      if (jsonObj.get("Language") != null && !jsonObj.get("Language").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Language"));
      }
      // validate the optional field `AdvisoryIds`
      if (jsonObj.get("AdvisoryIds") != null && !jsonObj.get("AdvisoryIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AdvisoryIds"));
      }
      // validate the optional field `BugzillaIds`
      if (jsonObj.get("BugzillaIds") != null && !jsonObj.get("BugzillaIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("BugzillaIds"));
      }
      // validate the optional field `CVEIds`
      if (jsonObj.get("CVEIds") != null && !jsonObj.get("CVEIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("CVEIds"));
      }
      // validate the optional field `Name`
      if (jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Name"));
      }
      // validate the optional field `Epoch`
      if (jsonObj.get("Epoch") != null && !jsonObj.get("Epoch").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Epoch"));
      }
      // validate the optional field `Version`
      if (jsonObj.get("Version") != null && !jsonObj.get("Version").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Version"));
      }
      // validate the optional field `Release`
      if (jsonObj.get("Release") != null && !jsonObj.get("Release").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Release"));
      }
      // validate the optional field `Arch`
      if (jsonObj.get("Arch") != null && !jsonObj.get("Arch").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Arch"));
      }
      // validate the optional field `Severity`
      if (jsonObj.get("Severity") != null && !jsonObj.get("Severity").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Severity"));
      }
      // validate the optional field `Repository`
      if (jsonObj.get("Repository") != null && !jsonObj.get("Repository").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Repository"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Patch.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Patch' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Patch> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Patch.class));

       return (TypeAdapter<T>) new TypeAdapter<Patch>() {
           @Override
           public void write(JsonWriter out, Patch value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Patch read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Patch given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Patch
   * @throws IOException if the JSON string is invalid with respect to Patch
   */
  public static Patch fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Patch.class);
  }

  /**
   * Convert an instance of Patch to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

