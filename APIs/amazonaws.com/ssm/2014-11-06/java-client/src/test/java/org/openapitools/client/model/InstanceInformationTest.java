/*
 * Amazon Simple Systems Manager (SSM)
 * <p>Amazon Web Services Systems Manager is the operations hub for your Amazon Web Services applications and resources and a secure end-to-end management solution for hybrid cloud environments that enables safe and secure operations at scale.</p> <p>This reference is intended to be used with the <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/\">Amazon Web Services Systems Manager User Guide</a>. To get started, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html\">Setting up Amazon Web Services Systems Manager</a>.</p> <p class=\"title\"> <b>Related resources</b> </p> <ul> <li> <p>For information about each of the capabilities that comprise Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/systems-manager-capabilities.html\">Systems Manager capabilities</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </li> <li> <p>For details about predefined runbooks for Automation, a capability of Amazon Web Services Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-runbook-reference.html\">Systems Manager Automation runbook reference</a> </i>.</p> </li> <li> <p>For information about AppConfig, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/\">AppConfig User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/\">AppConfig API Reference</a> </i>.</p> </li> <li> <p>For information about Incident Manager, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/userguide/\">Systems Manager Incident Manager User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/APIReference/\">Systems Manager Incident Manager API Reference</a> </i>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2014-11-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.InstanceInformationAssociationOverview;
import org.openapitools.client.model.PingStatus;
import org.openapitools.client.model.PlatformType;
import org.openapitools.client.model.ResourceType;
import org.openapitools.client.model.SourceType;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for InstanceInformation
 */
public class InstanceInformationTest {
    private final InstanceInformation model = new InstanceInformation();

    /**
     * Model tests for InstanceInformation
     */
    @Test
    public void testInstanceInformation() {
        // TODO: test InstanceInformation
    }

    /**
     * Test the property 'instanceId'
     */
    @Test
    public void instanceIdTest() {
        // TODO: test instanceId
    }

    /**
     * Test the property 'pingStatus'
     */
    @Test
    public void pingStatusTest() {
        // TODO: test pingStatus
    }

    /**
     * Test the property 'lastPingDateTime'
     */
    @Test
    public void lastPingDateTimeTest() {
        // TODO: test lastPingDateTime
    }

    /**
     * Test the property 'agentVersion'
     */
    @Test
    public void agentVersionTest() {
        // TODO: test agentVersion
    }

    /**
     * Test the property 'isLatestVersion'
     */
    @Test
    public void isLatestVersionTest() {
        // TODO: test isLatestVersion
    }

    /**
     * Test the property 'platformType'
     */
    @Test
    public void platformTypeTest() {
        // TODO: test platformType
    }

    /**
     * Test the property 'platformName'
     */
    @Test
    public void platformNameTest() {
        // TODO: test platformName
    }

    /**
     * Test the property 'platformVersion'
     */
    @Test
    public void platformVersionTest() {
        // TODO: test platformVersion
    }

    /**
     * Test the property 'activationId'
     */
    @Test
    public void activationIdTest() {
        // TODO: test activationId
    }

    /**
     * Test the property 'iamRole'
     */
    @Test
    public void iamRoleTest() {
        // TODO: test iamRole
    }

    /**
     * Test the property 'registrationDate'
     */
    @Test
    public void registrationDateTest() {
        // TODO: test registrationDate
    }

    /**
     * Test the property 'resourceType'
     */
    @Test
    public void resourceTypeTest() {
        // TODO: test resourceType
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'ipAddress'
     */
    @Test
    public void ipAddressTest() {
        // TODO: test ipAddress
    }

    /**
     * Test the property 'computerName'
     */
    @Test
    public void computerNameTest() {
        // TODO: test computerName
    }

    /**
     * Test the property 'associationStatus'
     */
    @Test
    public void associationStatusTest() {
        // TODO: test associationStatus
    }

    /**
     * Test the property 'lastAssociationExecutionDate'
     */
    @Test
    public void lastAssociationExecutionDateTest() {
        // TODO: test lastAssociationExecutionDate
    }

    /**
     * Test the property 'lastSuccessfulAssociationExecutionDate'
     */
    @Test
    public void lastSuccessfulAssociationExecutionDateTest() {
        // TODO: test lastSuccessfulAssociationExecutionDate
    }

    /**
     * Test the property 'associationOverview'
     */
    @Test
    public void associationOverviewTest() {
        // TODO: test associationOverview
    }

    /**
     * Test the property 'sourceId'
     */
    @Test
    public void sourceIdTest() {
        // TODO: test sourceId
    }

    /**
     * Test the property 'sourceType'
     */
    @Test
    public void sourceTypeTest() {
        // TODO: test sourceType
    }

}
