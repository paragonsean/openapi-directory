/*
 * Amazon Simple Systems Manager (SSM)
 * <p>Amazon Web Services Systems Manager is the operations hub for your Amazon Web Services applications and resources and a secure end-to-end management solution for hybrid cloud environments that enables safe and secure operations at scale.</p> <p>This reference is intended to be used with the <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/\">Amazon Web Services Systems Manager User Guide</a>. To get started, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html\">Setting up Amazon Web Services Systems Manager</a>.</p> <p class=\"title\"> <b>Related resources</b> </p> <ul> <li> <p>For information about each of the capabilities that comprise Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/systems-manager-capabilities.html\">Systems Manager capabilities</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </li> <li> <p>For details about predefined runbooks for Automation, a capability of Amazon Web Services Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-runbook-reference.html\">Systems Manager Automation runbook reference</a> </i>.</p> </li> <li> <p>For information about AppConfig, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/\">AppConfig User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/\">AppConfig API Reference</a> </i>.</p> </li> <li> <p>For information about Incident Manager, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/userguide/\">Systems Manager Incident Manager User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/APIReference/\">Systems Manager Incident Manager API Reference</a> </i>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2014-11-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.CommandAlarmConfiguration;
import org.openapitools.client.model.CommandCloudWatchOutputConfig;
import org.openapitools.client.model.CommandNotificationConfig;
import org.openapitools.client.model.CommandStatus;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for SendCommandResultCommand
 */
public class SendCommandResultCommandTest {
    private final SendCommandResultCommand model = new SendCommandResultCommand();

    /**
     * Model tests for SendCommandResultCommand
     */
    @Test
    public void testSendCommandResultCommand() {
        // TODO: test SendCommandResultCommand
    }

    /**
     * Test the property 'commandId'
     */
    @Test
    public void commandIdTest() {
        // TODO: test commandId
    }

    /**
     * Test the property 'documentName'
     */
    @Test
    public void documentNameTest() {
        // TODO: test documentName
    }

    /**
     * Test the property 'documentVersion'
     */
    @Test
    public void documentVersionTest() {
        // TODO: test documentVersion
    }

    /**
     * Test the property 'comment'
     */
    @Test
    public void commentTest() {
        // TODO: test comment
    }

    /**
     * Test the property 'expiresAfter'
     */
    @Test
    public void expiresAfterTest() {
        // TODO: test expiresAfter
    }

    /**
     * Test the property 'parameters'
     */
    @Test
    public void parametersTest() {
        // TODO: test parameters
    }

    /**
     * Test the property 'instanceIds'
     */
    @Test
    public void instanceIdsTest() {
        // TODO: test instanceIds
    }

    /**
     * Test the property 'targets'
     */
    @Test
    public void targetsTest() {
        // TODO: test targets
    }

    /**
     * Test the property 'requestedDateTime'
     */
    @Test
    public void requestedDateTimeTest() {
        // TODO: test requestedDateTime
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'statusDetails'
     */
    @Test
    public void statusDetailsTest() {
        // TODO: test statusDetails
    }

    /**
     * Test the property 'outputS3Region'
     */
    @Test
    public void outputS3RegionTest() {
        // TODO: test outputS3Region
    }

    /**
     * Test the property 'outputS3BucketName'
     */
    @Test
    public void outputS3BucketNameTest() {
        // TODO: test outputS3BucketName
    }

    /**
     * Test the property 'outputS3KeyPrefix'
     */
    @Test
    public void outputS3KeyPrefixTest() {
        // TODO: test outputS3KeyPrefix
    }

    /**
     * Test the property 'maxConcurrency'
     */
    @Test
    public void maxConcurrencyTest() {
        // TODO: test maxConcurrency
    }

    /**
     * Test the property 'maxErrors'
     */
    @Test
    public void maxErrorsTest() {
        // TODO: test maxErrors
    }

    /**
     * Test the property 'targetCount'
     */
    @Test
    public void targetCountTest() {
        // TODO: test targetCount
    }

    /**
     * Test the property 'completedCount'
     */
    @Test
    public void completedCountTest() {
        // TODO: test completedCount
    }

    /**
     * Test the property 'errorCount'
     */
    @Test
    public void errorCountTest() {
        // TODO: test errorCount
    }

    /**
     * Test the property 'deliveryTimedOutCount'
     */
    @Test
    public void deliveryTimedOutCountTest() {
        // TODO: test deliveryTimedOutCount
    }

    /**
     * Test the property 'serviceRole'
     */
    @Test
    public void serviceRoleTest() {
        // TODO: test serviceRole
    }

    /**
     * Test the property 'notificationConfig'
     */
    @Test
    public void notificationConfigTest() {
        // TODO: test notificationConfig
    }

    /**
     * Test the property 'cloudWatchOutputConfig'
     */
    @Test
    public void cloudWatchOutputConfigTest() {
        // TODO: test cloudWatchOutputConfig
    }

    /**
     * Test the property 'timeoutSeconds'
     */
    @Test
    public void timeoutSecondsTest() {
        // TODO: test timeoutSeconds
    }

    /**
     * Test the property 'alarmConfiguration'
     */
    @Test
    public void alarmConfigurationTest() {
        // TODO: test alarmConfiguration
    }

    /**
     * Test the property 'triggeredAlarms'
     */
    @Test
    public void triggeredAlarmsTest() {
        // TODO: test triggeredAlarms
    }

}
