/*
 * Amazon Simple Systems Manager (SSM)
 * <p>Amazon Web Services Systems Manager is the operations hub for your Amazon Web Services applications and resources and a secure end-to-end management solution for hybrid cloud environments that enables safe and secure operations at scale.</p> <p>This reference is intended to be used with the <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/\">Amazon Web Services Systems Manager User Guide</a>. To get started, see <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html\">Setting up Amazon Web Services Systems Manager</a>.</p> <p class=\"title\"> <b>Related resources</b> </p> <ul> <li> <p>For information about each of the capabilities that comprise Systems Manager, see <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/systems-manager-capabilities.html\">Systems Manager capabilities</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </li> <li> <p>For details about predefined runbooks for Automation, a capability of Amazon Web Services Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-runbook-reference.html\">Systems Manager Automation runbook reference</a> </i>.</p> </li> <li> <p>For information about AppConfig, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/\">AppConfig User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/\">AppConfig API Reference</a> </i>.</p> </li> <li> <p>For information about Incident Manager, a capability of Systems Manager, see the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/userguide/\">Systems Manager Incident Manager User Guide</a> </i> and the <i> <a href=\"https://docs.aws.amazon.com/incident-manager/latest/APIReference/\">Systems Manager Incident Manager API Reference</a> </i>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2014-11-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.AutomationExecutionAlarmConfiguration;
import org.openapitools.client.model.AutomationExecutionMetadataResolvedTargets;
import org.openapitools.client.model.AutomationExecutionStatus;
import org.openapitools.client.model.AutomationSubtype;
import org.openapitools.client.model.AutomationType;
import org.openapitools.client.model.ExecutionMode;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AutomationExecutionMetadata
 */
public class AutomationExecutionMetadataTest {
    private final AutomationExecutionMetadata model = new AutomationExecutionMetadata();

    /**
     * Model tests for AutomationExecutionMetadata
     */
    @Test
    public void testAutomationExecutionMetadata() {
        // TODO: test AutomationExecutionMetadata
    }

    /**
     * Test the property 'automationExecutionId'
     */
    @Test
    public void automationExecutionIdTest() {
        // TODO: test automationExecutionId
    }

    /**
     * Test the property 'documentName'
     */
    @Test
    public void documentNameTest() {
        // TODO: test documentName
    }

    /**
     * Test the property 'documentVersion'
     */
    @Test
    public void documentVersionTest() {
        // TODO: test documentVersion
    }

    /**
     * Test the property 'automationExecutionStatus'
     */
    @Test
    public void automationExecutionStatusTest() {
        // TODO: test automationExecutionStatus
    }

    /**
     * Test the property 'executionStartTime'
     */
    @Test
    public void executionStartTimeTest() {
        // TODO: test executionStartTime
    }

    /**
     * Test the property 'executionEndTime'
     */
    @Test
    public void executionEndTimeTest() {
        // TODO: test executionEndTime
    }

    /**
     * Test the property 'executedBy'
     */
    @Test
    public void executedByTest() {
        // TODO: test executedBy
    }

    /**
     * Test the property 'logFile'
     */
    @Test
    public void logFileTest() {
        // TODO: test logFile
    }

    /**
     * Test the property 'outputs'
     */
    @Test
    public void outputsTest() {
        // TODO: test outputs
    }

    /**
     * Test the property 'mode'
     */
    @Test
    public void modeTest() {
        // TODO: test mode
    }

    /**
     * Test the property 'parentAutomationExecutionId'
     */
    @Test
    public void parentAutomationExecutionIdTest() {
        // TODO: test parentAutomationExecutionId
    }

    /**
     * Test the property 'currentStepName'
     */
    @Test
    public void currentStepNameTest() {
        // TODO: test currentStepName
    }

    /**
     * Test the property 'currentAction'
     */
    @Test
    public void currentActionTest() {
        // TODO: test currentAction
    }

    /**
     * Test the property 'failureMessage'
     */
    @Test
    public void failureMessageTest() {
        // TODO: test failureMessage
    }

    /**
     * Test the property 'targetParameterName'
     */
    @Test
    public void targetParameterNameTest() {
        // TODO: test targetParameterName
    }

    /**
     * Test the property 'targets'
     */
    @Test
    public void targetsTest() {
        // TODO: test targets
    }

    /**
     * Test the property 'targetMaps'
     */
    @Test
    public void targetMapsTest() {
        // TODO: test targetMaps
    }

    /**
     * Test the property 'resolvedTargets'
     */
    @Test
    public void resolvedTargetsTest() {
        // TODO: test resolvedTargets
    }

    /**
     * Test the property 'maxConcurrency'
     */
    @Test
    public void maxConcurrencyTest() {
        // TODO: test maxConcurrency
    }

    /**
     * Test the property 'maxErrors'
     */
    @Test
    public void maxErrorsTest() {
        // TODO: test maxErrors
    }

    /**
     * Test the property 'target'
     */
    @Test
    public void targetTest() {
        // TODO: test target
    }

    /**
     * Test the property 'automationType'
     */
    @Test
    public void automationTypeTest() {
        // TODO: test automationType
    }

    /**
     * Test the property 'alarmConfiguration'
     */
    @Test
    public void alarmConfigurationTest() {
        // TODO: test alarmConfiguration
    }

    /**
     * Test the property 'triggeredAlarms'
     */
    @Test
    public void triggeredAlarmsTest() {
        // TODO: test triggeredAlarms
    }

    /**
     * Test the property 'automationSubtype'
     */
    @Test
    public void automationSubtypeTest() {
        // TODO: test automationSubtype
    }

    /**
     * Test the property 'scheduledTime'
     */
    @Test
    public void scheduledTimeTest() {
        // TODO: test scheduledTime
    }

    /**
     * Test the property 'runbooks'
     */
    @Test
    public void runbooksTest() {
        // TODO: test runbooks
    }

    /**
     * Test the property 'opsItemId'
     */
    @Test
    public void opsItemIdTest() {
        // TODO: test opsItemId
    }

    /**
     * Test the property 'associationId'
     */
    @Test
    public void associationIdTest() {
        // TODO: test associationId
    }

    /**
     * Test the property 'changeRequestName'
     */
    @Test
    public void changeRequestNameTest() {
        // TODO: test changeRequestName
    }

}
