/**
 * Amazon Voice ID
 * Amazon Connect Voice ID provides real-time caller authentication and fraud risk detection, which make voice interactions in contact centers more secure and efficient.
 *
 * The version of the OpenAPI document: 2021-09-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFraudRiskDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFraudRiskDetails::OAIFraudRiskDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFraudRiskDetails::OAIFraudRiskDetails() {
    this->initializeModel();
}

OAIFraudRiskDetails::~OAIFraudRiskDetails() {}

void OAIFraudRiskDetails::initializeModel() {

    m_known_fraudster_risk_isSet = false;
    m_known_fraudster_risk_isValid = false;

    m_voice_spoofing_risk_isSet = false;
    m_voice_spoofing_risk_isValid = false;
}

void OAIFraudRiskDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFraudRiskDetails::fromJsonObject(QJsonObject json) {

    m_known_fraudster_risk_isValid = ::OpenAPI::fromJsonValue(m_known_fraudster_risk, json[QString("KnownFraudsterRisk")]);
    m_known_fraudster_risk_isSet = !json[QString("KnownFraudsterRisk")].isNull() && m_known_fraudster_risk_isValid;

    m_voice_spoofing_risk_isValid = ::OpenAPI::fromJsonValue(m_voice_spoofing_risk, json[QString("VoiceSpoofingRisk")]);
    m_voice_spoofing_risk_isSet = !json[QString("VoiceSpoofingRisk")].isNull() && m_voice_spoofing_risk_isValid;
}

QString OAIFraudRiskDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFraudRiskDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_known_fraudster_risk.isSet()) {
        obj.insert(QString("KnownFraudsterRisk"), ::OpenAPI::toJsonValue(m_known_fraudster_risk));
    }
    if (m_voice_spoofing_risk.isSet()) {
        obj.insert(QString("VoiceSpoofingRisk"), ::OpenAPI::toJsonValue(m_voice_spoofing_risk));
    }
    return obj;
}

OAIFraudRiskDetails_KnownFraudsterRisk OAIFraudRiskDetails::getKnownFraudsterRisk() const {
    return m_known_fraudster_risk;
}
void OAIFraudRiskDetails::setKnownFraudsterRisk(const OAIFraudRiskDetails_KnownFraudsterRisk &known_fraudster_risk) {
    m_known_fraudster_risk = known_fraudster_risk;
    m_known_fraudster_risk_isSet = true;
}

bool OAIFraudRiskDetails::is_known_fraudster_risk_Set() const{
    return m_known_fraudster_risk_isSet;
}

bool OAIFraudRiskDetails::is_known_fraudster_risk_Valid() const{
    return m_known_fraudster_risk_isValid;
}

OAIFraudRiskDetails_VoiceSpoofingRisk OAIFraudRiskDetails::getVoiceSpoofingRisk() const {
    return m_voice_spoofing_risk;
}
void OAIFraudRiskDetails::setVoiceSpoofingRisk(const OAIFraudRiskDetails_VoiceSpoofingRisk &voice_spoofing_risk) {
    m_voice_spoofing_risk = voice_spoofing_risk;
    m_voice_spoofing_risk_isSet = true;
}

bool OAIFraudRiskDetails::is_voice_spoofing_risk_Set() const{
    return m_voice_spoofing_risk_isSet;
}

bool OAIFraudRiskDetails::is_voice_spoofing_risk_Valid() const{
    return m_voice_spoofing_risk_isValid;
}

bool OAIFraudRiskDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_known_fraudster_risk.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_voice_spoofing_risk.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFraudRiskDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_known_fraudster_risk_isValid && m_voice_spoofing_risk_isValid && true;
}

} // namespace OpenAPI
