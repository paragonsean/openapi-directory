/**
 * Amazon Voice ID
 * Amazon Connect Voice ID provides real-time caller authentication and fraud risk detection, which make voice interactions in contact centers more secure and efficient.
 *
 * The version of the OpenAPI document: 2021-09-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStartFraudsterRegistrationJobRequest_RegistrationConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStartFraudsterRegistrationJobRequest_RegistrationConfig::OAIStartFraudsterRegistrationJobRequest_RegistrationConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStartFraudsterRegistrationJobRequest_RegistrationConfig::OAIStartFraudsterRegistrationJobRequest_RegistrationConfig() {
    this->initializeModel();
}

OAIStartFraudsterRegistrationJobRequest_RegistrationConfig::~OAIStartFraudsterRegistrationJobRequest_RegistrationConfig() {}

void OAIStartFraudsterRegistrationJobRequest_RegistrationConfig::initializeModel() {

    m_duplicate_registration_action_isSet = false;
    m_duplicate_registration_action_isValid = false;

    m_fraudster_similarity_threshold_isSet = false;
    m_fraudster_similarity_threshold_isValid = false;

    m_watchlist_ids_isSet = false;
    m_watchlist_ids_isValid = false;
}

void OAIStartFraudsterRegistrationJobRequest_RegistrationConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStartFraudsterRegistrationJobRequest_RegistrationConfig::fromJsonObject(QJsonObject json) {

    m_duplicate_registration_action_isValid = ::OpenAPI::fromJsonValue(m_duplicate_registration_action, json[QString("DuplicateRegistrationAction")]);
    m_duplicate_registration_action_isSet = !json[QString("DuplicateRegistrationAction")].isNull() && m_duplicate_registration_action_isValid;

    m_fraudster_similarity_threshold_isValid = ::OpenAPI::fromJsonValue(m_fraudster_similarity_threshold, json[QString("FraudsterSimilarityThreshold")]);
    m_fraudster_similarity_threshold_isSet = !json[QString("FraudsterSimilarityThreshold")].isNull() && m_fraudster_similarity_threshold_isValid;

    m_watchlist_ids_isValid = ::OpenAPI::fromJsonValue(m_watchlist_ids, json[QString("WatchlistIds")]);
    m_watchlist_ids_isSet = !json[QString("WatchlistIds")].isNull() && m_watchlist_ids_isValid;
}

QString OAIStartFraudsterRegistrationJobRequest_RegistrationConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStartFraudsterRegistrationJobRequest_RegistrationConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_duplicate_registration_action.isSet()) {
        obj.insert(QString("DuplicateRegistrationAction"), ::OpenAPI::toJsonValue(m_duplicate_registration_action));
    }
    if (m_fraudster_similarity_threshold_isSet) {
        obj.insert(QString("FraudsterSimilarityThreshold"), ::OpenAPI::toJsonValue(m_fraudster_similarity_threshold));
    }
    if (m_watchlist_ids.isSet()) {
        obj.insert(QString("WatchlistIds"), ::OpenAPI::toJsonValue(m_watchlist_ids));
    }
    return obj;
}

OAIDuplicateRegistrationAction OAIStartFraudsterRegistrationJobRequest_RegistrationConfig::getDuplicateRegistrationAction() const {
    return m_duplicate_registration_action;
}
void OAIStartFraudsterRegistrationJobRequest_RegistrationConfig::setDuplicateRegistrationAction(const OAIDuplicateRegistrationAction &duplicate_registration_action) {
    m_duplicate_registration_action = duplicate_registration_action;
    m_duplicate_registration_action_isSet = true;
}

bool OAIStartFraudsterRegistrationJobRequest_RegistrationConfig::is_duplicate_registration_action_Set() const{
    return m_duplicate_registration_action_isSet;
}

bool OAIStartFraudsterRegistrationJobRequest_RegistrationConfig::is_duplicate_registration_action_Valid() const{
    return m_duplicate_registration_action_isValid;
}

qint32 OAIStartFraudsterRegistrationJobRequest_RegistrationConfig::getFraudsterSimilarityThreshold() const {
    return m_fraudster_similarity_threshold;
}
void OAIStartFraudsterRegistrationJobRequest_RegistrationConfig::setFraudsterSimilarityThreshold(const qint32 &fraudster_similarity_threshold) {
    m_fraudster_similarity_threshold = fraudster_similarity_threshold;
    m_fraudster_similarity_threshold_isSet = true;
}

bool OAIStartFraudsterRegistrationJobRequest_RegistrationConfig::is_fraudster_similarity_threshold_Set() const{
    return m_fraudster_similarity_threshold_isSet;
}

bool OAIStartFraudsterRegistrationJobRequest_RegistrationConfig::is_fraudster_similarity_threshold_Valid() const{
    return m_fraudster_similarity_threshold_isValid;
}

QList OAIStartFraudsterRegistrationJobRequest_RegistrationConfig::getWatchlistIds() const {
    return m_watchlist_ids;
}
void OAIStartFraudsterRegistrationJobRequest_RegistrationConfig::setWatchlistIds(const QList &watchlist_ids) {
    m_watchlist_ids = watchlist_ids;
    m_watchlist_ids_isSet = true;
}

bool OAIStartFraudsterRegistrationJobRequest_RegistrationConfig::is_watchlist_ids_Set() const{
    return m_watchlist_ids_isSet;
}

bool OAIStartFraudsterRegistrationJobRequest_RegistrationConfig::is_watchlist_ids_Valid() const{
    return m_watchlist_ids_isValid;
}

bool OAIStartFraudsterRegistrationJobRequest_RegistrationConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_duplicate_registration_action.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_fraudster_similarity_threshold_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_watchlist_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStartFraudsterRegistrationJobRequest_RegistrationConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
