/**
 * Amazon Voice ID
 * Amazon Connect Voice ID provides real-time caller authentication and fraud risk detection, which make voice interactions in contact centers more secure and efficient.
 *
 * The version of the OpenAPI document: 2021-09-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFraudDetectionResult.h
 *
 * The fraud detection result produced by Voice ID, processed against the current session state and streamed audio of the speaker.
 */

#ifndef OAIFraudDetectionResult_H
#define OAIFraudDetectionResult_H

#include <QJsonObject>

#include "OAIFraudDetectionDecision.h"
#include "OAIFraudDetectionResult_Configuration.h"
#include "OAIFraudDetectionResult_RiskDetails.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFraudDetectionResult_Configuration;
class OAIFraudDetectionResult_RiskDetails;

class OAIFraudDetectionResult : public OAIObject {
public:
    OAIFraudDetectionResult();
    OAIFraudDetectionResult(QString json);
    ~OAIFraudDetectionResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getAudioAggregationEndedAt() const;
    void setAudioAggregationEndedAt(const QDateTime &audio_aggregation_ended_at);
    bool is_audio_aggregation_ended_at_Set() const;
    bool is_audio_aggregation_ended_at_Valid() const;

    QDateTime getAudioAggregationStartedAt() const;
    void setAudioAggregationStartedAt(const QDateTime &audio_aggregation_started_at);
    bool is_audio_aggregation_started_at_Set() const;
    bool is_audio_aggregation_started_at_Valid() const;

    OAIFraudDetectionResult_Configuration getConfiguration() const;
    void setConfiguration(const OAIFraudDetectionResult_Configuration &configuration);
    bool is_configuration_Set() const;
    bool is_configuration_Valid() const;

    OAIFraudDetectionDecision getDecision() const;
    void setDecision(const OAIFraudDetectionDecision &decision);
    bool is_decision_Set() const;
    bool is_decision_Valid() const;

    QString getFraudDetectionResultId() const;
    void setFraudDetectionResultId(const QString &fraud_detection_result_id);
    bool is_fraud_detection_result_id_Set() const;
    bool is_fraud_detection_result_id_Valid() const;

    QList getReasons() const;
    void setReasons(const QList &reasons);
    bool is_reasons_Set() const;
    bool is_reasons_Valid() const;

    OAIFraudDetectionResult_RiskDetails getRiskDetails() const;
    void setRiskDetails(const OAIFraudDetectionResult_RiskDetails &risk_details);
    bool is_risk_details_Set() const;
    bool is_risk_details_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_audio_aggregation_ended_at;
    bool m_audio_aggregation_ended_at_isSet;
    bool m_audio_aggregation_ended_at_isValid;

    QDateTime m_audio_aggregation_started_at;
    bool m_audio_aggregation_started_at_isSet;
    bool m_audio_aggregation_started_at_isValid;

    OAIFraudDetectionResult_Configuration m_configuration;
    bool m_configuration_isSet;
    bool m_configuration_isValid;

    OAIFraudDetectionDecision m_decision;
    bool m_decision_isSet;
    bool m_decision_isValid;

    QString m_fraud_detection_result_id;
    bool m_fraud_detection_result_id_isSet;
    bool m_fraud_detection_result_id_isValid;

    QList m_reasons;
    bool m_reasons_isSet;
    bool m_reasons_isValid;

    OAIFraudDetectionResult_RiskDetails m_risk_details;
    bool m_risk_details_isSet;
    bool m_risk_details_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFraudDetectionResult)

#endif // OAIFraudDetectionResult_H
