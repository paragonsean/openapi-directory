/**
 * Amazon Voice ID
 * Amazon Connect Voice ID provides real-time caller authentication and fraud risk detection, which make voice interactions in contact centers more secure and efficient.
 *
 * The version of the OpenAPI document: 2021-09-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnrollmentConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnrollmentConfig::OAIEnrollmentConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnrollmentConfig::OAIEnrollmentConfig() {
    this->initializeModel();
}

OAIEnrollmentConfig::~OAIEnrollmentConfig() {}

void OAIEnrollmentConfig::initializeModel() {

    m_existing_enrollment_action_isSet = false;
    m_existing_enrollment_action_isValid = false;

    m_fraud_detection_config_isSet = false;
    m_fraud_detection_config_isValid = false;
}

void OAIEnrollmentConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnrollmentConfig::fromJsonObject(QJsonObject json) {

    m_existing_enrollment_action_isValid = ::OpenAPI::fromJsonValue(m_existing_enrollment_action, json[QString("ExistingEnrollmentAction")]);
    m_existing_enrollment_action_isSet = !json[QString("ExistingEnrollmentAction")].isNull() && m_existing_enrollment_action_isValid;

    m_fraud_detection_config_isValid = ::OpenAPI::fromJsonValue(m_fraud_detection_config, json[QString("FraudDetectionConfig")]);
    m_fraud_detection_config_isSet = !json[QString("FraudDetectionConfig")].isNull() && m_fraud_detection_config_isValid;
}

QString OAIEnrollmentConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnrollmentConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_existing_enrollment_action.isSet()) {
        obj.insert(QString("ExistingEnrollmentAction"), ::OpenAPI::toJsonValue(m_existing_enrollment_action));
    }
    if (m_fraud_detection_config.isSet()) {
        obj.insert(QString("FraudDetectionConfig"), ::OpenAPI::toJsonValue(m_fraud_detection_config));
    }
    return obj;
}

OAIExistingEnrollmentAction OAIEnrollmentConfig::getExistingEnrollmentAction() const {
    return m_existing_enrollment_action;
}
void OAIEnrollmentConfig::setExistingEnrollmentAction(const OAIExistingEnrollmentAction &existing_enrollment_action) {
    m_existing_enrollment_action = existing_enrollment_action;
    m_existing_enrollment_action_isSet = true;
}

bool OAIEnrollmentConfig::is_existing_enrollment_action_Set() const{
    return m_existing_enrollment_action_isSet;
}

bool OAIEnrollmentConfig::is_existing_enrollment_action_Valid() const{
    return m_existing_enrollment_action_isValid;
}

OAIEnrollmentConfig_FraudDetectionConfig OAIEnrollmentConfig::getFraudDetectionConfig() const {
    return m_fraud_detection_config;
}
void OAIEnrollmentConfig::setFraudDetectionConfig(const OAIEnrollmentConfig_FraudDetectionConfig &fraud_detection_config) {
    m_fraud_detection_config = fraud_detection_config;
    m_fraud_detection_config_isSet = true;
}

bool OAIEnrollmentConfig::is_fraud_detection_config_Set() const{
    return m_fraud_detection_config_isSet;
}

bool OAIEnrollmentConfig::is_fraud_detection_config_Valid() const{
    return m_fraud_detection_config_isValid;
}

bool OAIEnrollmentConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_existing_enrollment_action.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_fraud_detection_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnrollmentConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
