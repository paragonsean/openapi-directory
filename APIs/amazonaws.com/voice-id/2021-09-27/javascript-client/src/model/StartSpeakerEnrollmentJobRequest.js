/**
 * Amazon Voice ID
 * Amazon Connect Voice ID provides real-time caller authentication and fraud risk detection, which make voice interactions in contact centers more secure and efficient.
 *
 * The version of the OpenAPI document: 2021-09-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import StartFraudsterRegistrationJobRequestOutputDataConfig from './StartFraudsterRegistrationJobRequestOutputDataConfig';
import StartSpeakerEnrollmentJobRequestEnrollmentConfig from './StartSpeakerEnrollmentJobRequestEnrollmentConfig';
import StartSpeakerEnrollmentJobRequestInputDataConfig from './StartSpeakerEnrollmentJobRequestInputDataConfig';

/**
 * The StartSpeakerEnrollmentJobRequest model module.
 * @module model/StartSpeakerEnrollmentJobRequest
 * @version 2021-09-27
 */
class StartSpeakerEnrollmentJobRequest {
    /**
     * Constructs a new <code>StartSpeakerEnrollmentJobRequest</code>.
     * @alias module:model/StartSpeakerEnrollmentJobRequest
     * @param dataAccessRoleArn {String} 
     * @param domainId {String} 
     * @param inputDataConfig {module:model/StartSpeakerEnrollmentJobRequestInputDataConfig} 
     * @param outputDataConfig {module:model/StartFraudsterRegistrationJobRequestOutputDataConfig} 
     */
    constructor(dataAccessRoleArn, domainId, inputDataConfig, outputDataConfig) { 
        
        StartSpeakerEnrollmentJobRequest.initialize(this, dataAccessRoleArn, domainId, inputDataConfig, outputDataConfig);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, dataAccessRoleArn, domainId, inputDataConfig, outputDataConfig) { 
        obj['DataAccessRoleArn'] = dataAccessRoleArn;
        obj['DomainId'] = domainId;
        obj['InputDataConfig'] = inputDataConfig;
        obj['OutputDataConfig'] = outputDataConfig;
    }

    /**
     * Constructs a <code>StartSpeakerEnrollmentJobRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StartSpeakerEnrollmentJobRequest} obj Optional instance to populate.
     * @return {module:model/StartSpeakerEnrollmentJobRequest} The populated <code>StartSpeakerEnrollmentJobRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StartSpeakerEnrollmentJobRequest();

            if (data.hasOwnProperty('ClientToken')) {
                obj['ClientToken'] = ApiClient.convertToType(data['ClientToken'], 'String');
            }
            if (data.hasOwnProperty('DataAccessRoleArn')) {
                obj['DataAccessRoleArn'] = ApiClient.convertToType(data['DataAccessRoleArn'], 'String');
            }
            if (data.hasOwnProperty('DomainId')) {
                obj['DomainId'] = ApiClient.convertToType(data['DomainId'], 'String');
            }
            if (data.hasOwnProperty('EnrollmentConfig')) {
                obj['EnrollmentConfig'] = StartSpeakerEnrollmentJobRequestEnrollmentConfig.constructFromObject(data['EnrollmentConfig']);
            }
            if (data.hasOwnProperty('InputDataConfig')) {
                obj['InputDataConfig'] = StartSpeakerEnrollmentJobRequestInputDataConfig.constructFromObject(data['InputDataConfig']);
            }
            if (data.hasOwnProperty('JobName')) {
                obj['JobName'] = ApiClient.convertToType(data['JobName'], 'String');
            }
            if (data.hasOwnProperty('OutputDataConfig')) {
                obj['OutputDataConfig'] = StartFraudsterRegistrationJobRequestOutputDataConfig.constructFromObject(data['OutputDataConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StartSpeakerEnrollmentJobRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StartSpeakerEnrollmentJobRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StartSpeakerEnrollmentJobRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ClientToken`
        if (data['ClientToken']) { // data not null
          String.validateJSON(data['ClientToken']);
        }
        // validate the optional field `DataAccessRoleArn`
        if (data['DataAccessRoleArn']) { // data not null
          String.validateJSON(data['DataAccessRoleArn']);
        }
        // validate the optional field `DomainId`
        if (data['DomainId']) { // data not null
          String.validateJSON(data['DomainId']);
        }
        // validate the optional field `EnrollmentConfig`
        if (data['EnrollmentConfig']) { // data not null
          StartSpeakerEnrollmentJobRequestEnrollmentConfig.validateJSON(data['EnrollmentConfig']);
        }
        // validate the optional field `InputDataConfig`
        if (data['InputDataConfig']) { // data not null
          StartSpeakerEnrollmentJobRequestInputDataConfig.validateJSON(data['InputDataConfig']);
        }
        // validate the optional field `JobName`
        if (data['JobName']) { // data not null
          String.validateJSON(data['JobName']);
        }
        // validate the optional field `OutputDataConfig`
        if (data['OutputDataConfig']) { // data not null
          StartFraudsterRegistrationJobRequestOutputDataConfig.validateJSON(data['OutputDataConfig']);
        }

        return true;
    }


}

StartSpeakerEnrollmentJobRequest.RequiredProperties = ["DataAccessRoleArn", "DomainId", "InputDataConfig", "OutputDataConfig"];

/**
 * @member {String} ClientToken
 */
StartSpeakerEnrollmentJobRequest.prototype['ClientToken'] = undefined;

/**
 * @member {String} DataAccessRoleArn
 */
StartSpeakerEnrollmentJobRequest.prototype['DataAccessRoleArn'] = undefined;

/**
 * @member {String} DomainId
 */
StartSpeakerEnrollmentJobRequest.prototype['DomainId'] = undefined;

/**
 * @member {module:model/StartSpeakerEnrollmentJobRequestEnrollmentConfig} EnrollmentConfig
 */
StartSpeakerEnrollmentJobRequest.prototype['EnrollmentConfig'] = undefined;

/**
 * @member {module:model/StartSpeakerEnrollmentJobRequestInputDataConfig} InputDataConfig
 */
StartSpeakerEnrollmentJobRequest.prototype['InputDataConfig'] = undefined;

/**
 * @member {String} JobName
 */
StartSpeakerEnrollmentJobRequest.prototype['JobName'] = undefined;

/**
 * @member {module:model/StartFraudsterRegistrationJobRequestOutputDataConfig} OutputDataConfig
 */
StartSpeakerEnrollmentJobRequest.prototype['OutputDataConfig'] = undefined;






export default StartSpeakerEnrollmentJobRequest;

