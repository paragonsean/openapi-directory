/*
 * Amazon Voice ID
 * Amazon Connect Voice ID provides real-time caller authentication and fraud risk detection, which make voice interactions in contact centers more secure and efficient.
 *
 * The version of the OpenAPI document: 2021-09-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.FraudDetectionDecision;
import org.openapitools.client.model.FraudDetectionResultConfiguration;
import org.openapitools.client.model.FraudDetectionResultRiskDetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The fraud detection result produced by Voice ID, processed against the current session state and streamed audio of the speaker.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:01:42.900446-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class FraudDetectionResult {
  public static final String SERIALIZED_NAME_AUDIO_AGGREGATION_ENDED_AT = "AudioAggregationEndedAt";
  @SerializedName(SERIALIZED_NAME_AUDIO_AGGREGATION_ENDED_AT)
  private OffsetDateTime audioAggregationEndedAt;

  public static final String SERIALIZED_NAME_AUDIO_AGGREGATION_STARTED_AT = "AudioAggregationStartedAt";
  @SerializedName(SERIALIZED_NAME_AUDIO_AGGREGATION_STARTED_AT)
  private OffsetDateTime audioAggregationStartedAt;

  public static final String SERIALIZED_NAME_CONFIGURATION = "Configuration";
  @SerializedName(SERIALIZED_NAME_CONFIGURATION)
  private FraudDetectionResultConfiguration _configuration;

  public static final String SERIALIZED_NAME_DECISION = "Decision";
  @SerializedName(SERIALIZED_NAME_DECISION)
  private FraudDetectionDecision decision;

  public static final String SERIALIZED_NAME_FRAUD_DETECTION_RESULT_ID = "FraudDetectionResultId";
  @SerializedName(SERIALIZED_NAME_FRAUD_DETECTION_RESULT_ID)
  private String fraudDetectionResultId;

  public static final String SERIALIZED_NAME_REASONS = "Reasons";
  @SerializedName(SERIALIZED_NAME_REASONS)
  private List reasons;

  public static final String SERIALIZED_NAME_RISK_DETAILS = "RiskDetails";
  @SerializedName(SERIALIZED_NAME_RISK_DETAILS)
  private FraudDetectionResultRiskDetails riskDetails;

  public FraudDetectionResult() {
  }

  public FraudDetectionResult audioAggregationEndedAt(OffsetDateTime audioAggregationEndedAt) {
    this.audioAggregationEndedAt = audioAggregationEndedAt;
    return this;
  }

  /**
   * Get audioAggregationEndedAt
   * @return audioAggregationEndedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getAudioAggregationEndedAt() {
    return audioAggregationEndedAt;
  }

  public void setAudioAggregationEndedAt(OffsetDateTime audioAggregationEndedAt) {
    this.audioAggregationEndedAt = audioAggregationEndedAt;
  }


  public FraudDetectionResult audioAggregationStartedAt(OffsetDateTime audioAggregationStartedAt) {
    this.audioAggregationStartedAt = audioAggregationStartedAt;
    return this;
  }

  /**
   * Get audioAggregationStartedAt
   * @return audioAggregationStartedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getAudioAggregationStartedAt() {
    return audioAggregationStartedAt;
  }

  public void setAudioAggregationStartedAt(OffsetDateTime audioAggregationStartedAt) {
    this.audioAggregationStartedAt = audioAggregationStartedAt;
  }


  public FraudDetectionResult _configuration(FraudDetectionResultConfiguration _configuration) {
    this._configuration = _configuration;
    return this;
  }

  /**
   * Get _configuration
   * @return _configuration
   */
  @javax.annotation.Nullable
  public FraudDetectionResultConfiguration getConfiguration() {
    return _configuration;
  }

  public void setConfiguration(FraudDetectionResultConfiguration _configuration) {
    this._configuration = _configuration;
  }


  public FraudDetectionResult decision(FraudDetectionDecision decision) {
    this.decision = decision;
    return this;
  }

  /**
   * Get decision
   * @return decision
   */
  @javax.annotation.Nullable
  public FraudDetectionDecision getDecision() {
    return decision;
  }

  public void setDecision(FraudDetectionDecision decision) {
    this.decision = decision;
  }


  public FraudDetectionResult fraudDetectionResultId(String fraudDetectionResultId) {
    this.fraudDetectionResultId = fraudDetectionResultId;
    return this;
  }

  /**
   * Get fraudDetectionResultId
   * @return fraudDetectionResultId
   */
  @javax.annotation.Nullable
  public String getFraudDetectionResultId() {
    return fraudDetectionResultId;
  }

  public void setFraudDetectionResultId(String fraudDetectionResultId) {
    this.fraudDetectionResultId = fraudDetectionResultId;
  }


  public FraudDetectionResult reasons(List reasons) {
    this.reasons = reasons;
    return this;
  }

  /**
   * Get reasons
   * @return reasons
   */
  @javax.annotation.Nullable
  public List getReasons() {
    return reasons;
  }

  public void setReasons(List reasons) {
    this.reasons = reasons;
  }


  public FraudDetectionResult riskDetails(FraudDetectionResultRiskDetails riskDetails) {
    this.riskDetails = riskDetails;
    return this;
  }

  /**
   * Get riskDetails
   * @return riskDetails
   */
  @javax.annotation.Nullable
  public FraudDetectionResultRiskDetails getRiskDetails() {
    return riskDetails;
  }

  public void setRiskDetails(FraudDetectionResultRiskDetails riskDetails) {
    this.riskDetails = riskDetails;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FraudDetectionResult fraudDetectionResult = (FraudDetectionResult) o;
    return Objects.equals(this.audioAggregationEndedAt, fraudDetectionResult.audioAggregationEndedAt) &&
        Objects.equals(this.audioAggregationStartedAt, fraudDetectionResult.audioAggregationStartedAt) &&
        Objects.equals(this._configuration, fraudDetectionResult._configuration) &&
        Objects.equals(this.decision, fraudDetectionResult.decision) &&
        Objects.equals(this.fraudDetectionResultId, fraudDetectionResult.fraudDetectionResultId) &&
        Objects.equals(this.reasons, fraudDetectionResult.reasons) &&
        Objects.equals(this.riskDetails, fraudDetectionResult.riskDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(audioAggregationEndedAt, audioAggregationStartedAt, _configuration, decision, fraudDetectionResultId, reasons, riskDetails);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FraudDetectionResult {\n");
    sb.append("    audioAggregationEndedAt: ").append(toIndentedString(audioAggregationEndedAt)).append("\n");
    sb.append("    audioAggregationStartedAt: ").append(toIndentedString(audioAggregationStartedAt)).append("\n");
    sb.append("    _configuration: ").append(toIndentedString(_configuration)).append("\n");
    sb.append("    decision: ").append(toIndentedString(decision)).append("\n");
    sb.append("    fraudDetectionResultId: ").append(toIndentedString(fraudDetectionResultId)).append("\n");
    sb.append("    reasons: ").append(toIndentedString(reasons)).append("\n");
    sb.append("    riskDetails: ").append(toIndentedString(riskDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AudioAggregationEndedAt");
    openapiFields.add("AudioAggregationStartedAt");
    openapiFields.add("Configuration");
    openapiFields.add("Decision");
    openapiFields.add("FraudDetectionResultId");
    openapiFields.add("Reasons");
    openapiFields.add("RiskDetails");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FraudDetectionResult
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FraudDetectionResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FraudDetectionResult is not found in the empty JSON string", FraudDetectionResult.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FraudDetectionResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FraudDetectionResult` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AudioAggregationEndedAt`
      if (jsonObj.get("AudioAggregationEndedAt") != null && !jsonObj.get("AudioAggregationEndedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("AudioAggregationEndedAt"));
      }
      // validate the optional field `AudioAggregationStartedAt`
      if (jsonObj.get("AudioAggregationStartedAt") != null && !jsonObj.get("AudioAggregationStartedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("AudioAggregationStartedAt"));
      }
      // validate the optional field `Configuration`
      if (jsonObj.get("Configuration") != null && !jsonObj.get("Configuration").isJsonNull()) {
        FraudDetectionResultConfiguration.validateJsonElement(jsonObj.get("Configuration"));
      }
      // validate the optional field `Decision`
      if (jsonObj.get("Decision") != null && !jsonObj.get("Decision").isJsonNull()) {
        FraudDetectionDecision.validateJsonElement(jsonObj.get("Decision"));
      }
      // validate the optional field `FraudDetectionResultId`
      if (jsonObj.get("FraudDetectionResultId") != null && !jsonObj.get("FraudDetectionResultId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FraudDetectionResultId"));
      }
      // validate the optional field `Reasons`
      if (jsonObj.get("Reasons") != null && !jsonObj.get("Reasons").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Reasons"));
      }
      // validate the optional field `RiskDetails`
      if (jsonObj.get("RiskDetails") != null && !jsonObj.get("RiskDetails").isJsonNull()) {
        FraudDetectionResultRiskDetails.validateJsonElement(jsonObj.get("RiskDetails"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FraudDetectionResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FraudDetectionResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FraudDetectionResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FraudDetectionResult.class));

       return (TypeAdapter<T>) new TypeAdapter<FraudDetectionResult>() {
           @Override
           public void write(JsonWriter out, FraudDetectionResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FraudDetectionResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of FraudDetectionResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FraudDetectionResult
   * @throws IOException if the JSON string is invalid with respect to FraudDetectionResult
   */
  public static FraudDetectionResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FraudDetectionResult.class);
  }

  /**
   * Convert an instance of FraudDetectionResult to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

