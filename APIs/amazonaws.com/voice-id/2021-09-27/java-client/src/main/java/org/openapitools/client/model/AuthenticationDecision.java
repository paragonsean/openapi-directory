/*
 * Amazon Voice ID
 * Amazon Connect Voice ID provides real-time caller authentication and fraud risk detection, which make voice interactions in contact centers more secure and efficient.
 *
 * The version of the OpenAPI document: 2021-09-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets AuthenticationDecision
 */
@JsonAdapter(AuthenticationDecision.Adapter.class)
public enum AuthenticationDecision {
  
  ACCEPT("ACCEPT"),
  
  REJECT("REJECT"),
  
  NOT_ENOUGH_SPEECH("NOT_ENOUGH_SPEECH"),
  
  SPEAKER_NOT_ENROLLED("SPEAKER_NOT_ENROLLED"),
  
  SPEAKER_OPTED_OUT("SPEAKER_OPTED_OUT"),
  
  SPEAKER_ID_NOT_PROVIDED("SPEAKER_ID_NOT_PROVIDED"),
  
  SPEAKER_EXPIRED("SPEAKER_EXPIRED");

  private String value;

  AuthenticationDecision(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static AuthenticationDecision fromValue(String value) {
    for (AuthenticationDecision b : AuthenticationDecision.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<AuthenticationDecision> {
    @Override
    public void write(final JsonWriter jsonWriter, final AuthenticationDecision enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public AuthenticationDecision read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return AuthenticationDecision.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    AuthenticationDecision.fromValue(value);
  }
}

