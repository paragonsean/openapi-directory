# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.authentication_decision import AuthenticationDecision
from openapi_server.models.authentication_result_configuration import AuthenticationResultConfiguration
from openapi_server import util


class AuthenticationResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, audio_aggregation_ended_at: datetime=None, audio_aggregation_started_at: datetime=None, authentication_result_id: str=None, configuration: AuthenticationResultConfiguration=None, customer_speaker_id: str=None, decision: AuthenticationDecision=None, generated_speaker_id: str=None, score: int=None):
        """AuthenticationResult - a model defined in OpenAPI

        :param audio_aggregation_ended_at: The audio_aggregation_ended_at of this AuthenticationResult.
        :param audio_aggregation_started_at: The audio_aggregation_started_at of this AuthenticationResult.
        :param authentication_result_id: The authentication_result_id of this AuthenticationResult.
        :param configuration: The configuration of this AuthenticationResult.
        :param customer_speaker_id: The customer_speaker_id of this AuthenticationResult.
        :param decision: The decision of this AuthenticationResult.
        :param generated_speaker_id: The generated_speaker_id of this AuthenticationResult.
        :param score: The score of this AuthenticationResult.
        """
        self.openapi_types = {
            'audio_aggregation_ended_at': datetime,
            'audio_aggregation_started_at': datetime,
            'authentication_result_id': str,
            'configuration': AuthenticationResultConfiguration,
            'customer_speaker_id': str,
            'decision': AuthenticationDecision,
            'generated_speaker_id': str,
            'score': int
        }

        self.attribute_map = {
            'audio_aggregation_ended_at': 'AudioAggregationEndedAt',
            'audio_aggregation_started_at': 'AudioAggregationStartedAt',
            'authentication_result_id': 'AuthenticationResultId',
            'configuration': 'Configuration',
            'customer_speaker_id': 'CustomerSpeakerId',
            'decision': 'Decision',
            'generated_speaker_id': 'GeneratedSpeakerId',
            'score': 'Score'
        }

        self._audio_aggregation_ended_at = audio_aggregation_ended_at
        self._audio_aggregation_started_at = audio_aggregation_started_at
        self._authentication_result_id = authentication_result_id
        self._configuration = configuration
        self._customer_speaker_id = customer_speaker_id
        self._decision = decision
        self._generated_speaker_id = generated_speaker_id
        self._score = score

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AuthenticationResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AuthenticationResult of this AuthenticationResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audio_aggregation_ended_at(self):
        """Gets the audio_aggregation_ended_at of this AuthenticationResult.


        :return: The audio_aggregation_ended_at of this AuthenticationResult.
        :rtype: datetime
        """
        return self._audio_aggregation_ended_at

    @audio_aggregation_ended_at.setter
    def audio_aggregation_ended_at(self, audio_aggregation_ended_at):
        """Sets the audio_aggregation_ended_at of this AuthenticationResult.


        :param audio_aggregation_ended_at: The audio_aggregation_ended_at of this AuthenticationResult.
        :type audio_aggregation_ended_at: datetime
        """

        self._audio_aggregation_ended_at = audio_aggregation_ended_at

    @property
    def audio_aggregation_started_at(self):
        """Gets the audio_aggregation_started_at of this AuthenticationResult.


        :return: The audio_aggregation_started_at of this AuthenticationResult.
        :rtype: datetime
        """
        return self._audio_aggregation_started_at

    @audio_aggregation_started_at.setter
    def audio_aggregation_started_at(self, audio_aggregation_started_at):
        """Sets the audio_aggregation_started_at of this AuthenticationResult.


        :param audio_aggregation_started_at: The audio_aggregation_started_at of this AuthenticationResult.
        :type audio_aggregation_started_at: datetime
        """

        self._audio_aggregation_started_at = audio_aggregation_started_at

    @property
    def authentication_result_id(self):
        """Gets the authentication_result_id of this AuthenticationResult.


        :return: The authentication_result_id of this AuthenticationResult.
        :rtype: str
        """
        return self._authentication_result_id

    @authentication_result_id.setter
    def authentication_result_id(self, authentication_result_id):
        """Sets the authentication_result_id of this AuthenticationResult.


        :param authentication_result_id: The authentication_result_id of this AuthenticationResult.
        :type authentication_result_id: str
        """

        self._authentication_result_id = authentication_result_id

    @property
    def configuration(self):
        """Gets the configuration of this AuthenticationResult.


        :return: The configuration of this AuthenticationResult.
        :rtype: AuthenticationResultConfiguration
        """
        return self._configuration

    @configuration.setter
    def configuration(self, configuration):
        """Sets the configuration of this AuthenticationResult.


        :param configuration: The configuration of this AuthenticationResult.
        :type configuration: AuthenticationResultConfiguration
        """

        self._configuration = configuration

    @property
    def customer_speaker_id(self):
        """Gets the customer_speaker_id of this AuthenticationResult.


        :return: The customer_speaker_id of this AuthenticationResult.
        :rtype: str
        """
        return self._customer_speaker_id

    @customer_speaker_id.setter
    def customer_speaker_id(self, customer_speaker_id):
        """Sets the customer_speaker_id of this AuthenticationResult.


        :param customer_speaker_id: The customer_speaker_id of this AuthenticationResult.
        :type customer_speaker_id: str
        """

        self._customer_speaker_id = customer_speaker_id

    @property
    def decision(self):
        """Gets the decision of this AuthenticationResult.


        :return: The decision of this AuthenticationResult.
        :rtype: AuthenticationDecision
        """
        return self._decision

    @decision.setter
    def decision(self, decision):
        """Sets the decision of this AuthenticationResult.


        :param decision: The decision of this AuthenticationResult.
        :type decision: AuthenticationDecision
        """

        self._decision = decision

    @property
    def generated_speaker_id(self):
        """Gets the generated_speaker_id of this AuthenticationResult.


        :return: The generated_speaker_id of this AuthenticationResult.
        :rtype: str
        """
        return self._generated_speaker_id

    @generated_speaker_id.setter
    def generated_speaker_id(self, generated_speaker_id):
        """Sets the generated_speaker_id of this AuthenticationResult.


        :param generated_speaker_id: The generated_speaker_id of this AuthenticationResult.
        :type generated_speaker_id: str
        """

        self._generated_speaker_id = generated_speaker_id

    @property
    def score(self):
        """Gets the score of this AuthenticationResult.


        :return: The score of this AuthenticationResult.
        :rtype: int
        """
        return self._score

    @score.setter
    def score(self, score):
        """Sets the score of this AuthenticationResult.


        :param score: The score of this AuthenticationResult.
        :type score: int
        """

        self._score = score
