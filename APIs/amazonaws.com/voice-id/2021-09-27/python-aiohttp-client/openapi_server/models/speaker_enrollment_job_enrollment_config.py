# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.enrollment_config_fraud_detection_config import EnrollmentConfigFraudDetectionConfig
from openapi_server.models.existing_enrollment_action import ExistingEnrollmentAction
from openapi_server import util


class SpeakerEnrollmentJobEnrollmentConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, existing_enrollment_action: ExistingEnrollmentAction=None, fraud_detection_config: EnrollmentConfigFraudDetectionConfig=None):
        """SpeakerEnrollmentJobEnrollmentConfig - a model defined in OpenAPI

        :param existing_enrollment_action: The existing_enrollment_action of this SpeakerEnrollmentJobEnrollmentConfig.
        :param fraud_detection_config: The fraud_detection_config of this SpeakerEnrollmentJobEnrollmentConfig.
        """
        self.openapi_types = {
            'existing_enrollment_action': ExistingEnrollmentAction,
            'fraud_detection_config': EnrollmentConfigFraudDetectionConfig
        }

        self.attribute_map = {
            'existing_enrollment_action': 'ExistingEnrollmentAction',
            'fraud_detection_config': 'FraudDetectionConfig'
        }

        self._existing_enrollment_action = existing_enrollment_action
        self._fraud_detection_config = fraud_detection_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SpeakerEnrollmentJobEnrollmentConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SpeakerEnrollmentJob_EnrollmentConfig of this SpeakerEnrollmentJobEnrollmentConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def existing_enrollment_action(self):
        """Gets the existing_enrollment_action of this SpeakerEnrollmentJobEnrollmentConfig.


        :return: The existing_enrollment_action of this SpeakerEnrollmentJobEnrollmentConfig.
        :rtype: ExistingEnrollmentAction
        """
        return self._existing_enrollment_action

    @existing_enrollment_action.setter
    def existing_enrollment_action(self, existing_enrollment_action):
        """Sets the existing_enrollment_action of this SpeakerEnrollmentJobEnrollmentConfig.


        :param existing_enrollment_action: The existing_enrollment_action of this SpeakerEnrollmentJobEnrollmentConfig.
        :type existing_enrollment_action: ExistingEnrollmentAction
        """

        self._existing_enrollment_action = existing_enrollment_action

    @property
    def fraud_detection_config(self):
        """Gets the fraud_detection_config of this SpeakerEnrollmentJobEnrollmentConfig.


        :return: The fraud_detection_config of this SpeakerEnrollmentJobEnrollmentConfig.
        :rtype: EnrollmentConfigFraudDetectionConfig
        """
        return self._fraud_detection_config

    @fraud_detection_config.setter
    def fraud_detection_config(self, fraud_detection_config):
        """Sets the fraud_detection_config of this SpeakerEnrollmentJobEnrollmentConfig.


        :param fraud_detection_config: The fraud_detection_config of this SpeakerEnrollmentJobEnrollmentConfig.
        :type fraud_detection_config: EnrollmentConfigFraudDetectionConfig
        """

        self._fraud_detection_config = fraud_detection_config
