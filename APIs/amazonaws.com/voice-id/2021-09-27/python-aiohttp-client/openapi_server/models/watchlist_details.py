# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WatchlistDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default_watchlist_id: str=None):
        """WatchlistDetails - a model defined in OpenAPI

        :param default_watchlist_id: The default_watchlist_id of this WatchlistDetails.
        """
        self.openapi_types = {
            'default_watchlist_id': str
        }

        self.attribute_map = {
            'default_watchlist_id': 'DefaultWatchlistId'
        }

        self._default_watchlist_id = default_watchlist_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WatchlistDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WatchlistDetails of this WatchlistDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_watchlist_id(self):
        """Gets the default_watchlist_id of this WatchlistDetails.


        :return: The default_watchlist_id of this WatchlistDetails.
        :rtype: str
        """
        return self._default_watchlist_id

    @default_watchlist_id.setter
    def default_watchlist_id(self, default_watchlist_id):
        """Sets the default_watchlist_id of this WatchlistDetails.


        :param default_watchlist_id: The default_watchlist_id of this WatchlistDetails.
        :type default_watchlist_id: str
        """
        if default_watchlist_id is None:
            raise ValueError("Invalid value for `default_watchlist_id`, must not be `None`")

        self._default_watchlist_id = default_watchlist_id
