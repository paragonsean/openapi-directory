# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FraudRiskDetailsKnownFraudsterRisk(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, generated_fraudster_id: str=None, risk_score: int=None):
        """FraudRiskDetailsKnownFraudsterRisk - a model defined in OpenAPI

        :param generated_fraudster_id: The generated_fraudster_id of this FraudRiskDetailsKnownFraudsterRisk.
        :param risk_score: The risk_score of this FraudRiskDetailsKnownFraudsterRisk.
        """
        self.openapi_types = {
            'generated_fraudster_id': str,
            'risk_score': int
        }

        self.attribute_map = {
            'generated_fraudster_id': 'GeneratedFraudsterId',
            'risk_score': 'RiskScore'
        }

        self._generated_fraudster_id = generated_fraudster_id
        self._risk_score = risk_score

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FraudRiskDetailsKnownFraudsterRisk':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FraudRiskDetails_KnownFraudsterRisk of this FraudRiskDetailsKnownFraudsterRisk.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def generated_fraudster_id(self):
        """Gets the generated_fraudster_id of this FraudRiskDetailsKnownFraudsterRisk.


        :return: The generated_fraudster_id of this FraudRiskDetailsKnownFraudsterRisk.
        :rtype: str
        """
        return self._generated_fraudster_id

    @generated_fraudster_id.setter
    def generated_fraudster_id(self, generated_fraudster_id):
        """Sets the generated_fraudster_id of this FraudRiskDetailsKnownFraudsterRisk.


        :param generated_fraudster_id: The generated_fraudster_id of this FraudRiskDetailsKnownFraudsterRisk.
        :type generated_fraudster_id: str
        """

        self._generated_fraudster_id = generated_fraudster_id

    @property
    def risk_score(self):
        """Gets the risk_score of this FraudRiskDetailsKnownFraudsterRisk.


        :return: The risk_score of this FraudRiskDetailsKnownFraudsterRisk.
        :rtype: int
        """
        return self._risk_score

    @risk_score.setter
    def risk_score(self, risk_score):
        """Sets the risk_score of this FraudRiskDetailsKnownFraudsterRisk.


        :param risk_score: The risk_score of this FraudRiskDetailsKnownFraudsterRisk.
        :type risk_score: int
        """
        if risk_score is None:
            raise ValueError("Invalid value for `risk_score`, must not be `None`")

        self._risk_score = risk_score
