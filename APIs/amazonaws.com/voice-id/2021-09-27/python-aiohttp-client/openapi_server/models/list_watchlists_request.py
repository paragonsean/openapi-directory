# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListWatchlistsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain_id: str=None, max_results: int=None, next_token: str=None):
        """ListWatchlistsRequest - a model defined in OpenAPI

        :param domain_id: The domain_id of this ListWatchlistsRequest.
        :param max_results: The max_results of this ListWatchlistsRequest.
        :param next_token: The next_token of this ListWatchlistsRequest.
        """
        self.openapi_types = {
            'domain_id': str,
            'max_results': int,
            'next_token': str
        }

        self.attribute_map = {
            'domain_id': 'DomainId',
            'max_results': 'MaxResults',
            'next_token': 'NextToken'
        }

        self._domain_id = domain_id
        self._max_results = max_results
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListWatchlistsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListWatchlistsRequest of this ListWatchlistsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain_id(self):
        """Gets the domain_id of this ListWatchlistsRequest.


        :return: The domain_id of this ListWatchlistsRequest.
        :rtype: str
        """
        return self._domain_id

    @domain_id.setter
    def domain_id(self, domain_id):
        """Sets the domain_id of this ListWatchlistsRequest.


        :param domain_id: The domain_id of this ListWatchlistsRequest.
        :type domain_id: str
        """
        if domain_id is None:
            raise ValueError("Invalid value for `domain_id`, must not be `None`")

        self._domain_id = domain_id

    @property
    def max_results(self):
        """Gets the max_results of this ListWatchlistsRequest.


        :return: The max_results of this ListWatchlistsRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this ListWatchlistsRequest.


        :param max_results: The max_results of this ListWatchlistsRequest.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def next_token(self):
        """Gets the next_token of this ListWatchlistsRequest.


        :return: The next_token of this ListWatchlistsRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListWatchlistsRequest.


        :param next_token: The next_token of this ListWatchlistsRequest.
        :type next_token: str
        """

        self._next_token = next_token
