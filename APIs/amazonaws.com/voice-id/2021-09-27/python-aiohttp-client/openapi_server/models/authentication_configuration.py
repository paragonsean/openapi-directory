# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AuthenticationConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, acceptance_threshold: int=None):
        """AuthenticationConfiguration - a model defined in OpenAPI

        :param acceptance_threshold: The acceptance_threshold of this AuthenticationConfiguration.
        """
        self.openapi_types = {
            'acceptance_threshold': int
        }

        self.attribute_map = {
            'acceptance_threshold': 'AcceptanceThreshold'
        }

        self._acceptance_threshold = acceptance_threshold

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AuthenticationConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AuthenticationConfiguration of this AuthenticationConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def acceptance_threshold(self):
        """Gets the acceptance_threshold of this AuthenticationConfiguration.


        :return: The acceptance_threshold of this AuthenticationConfiguration.
        :rtype: int
        """
        return self._acceptance_threshold

    @acceptance_threshold.setter
    def acceptance_threshold(self, acceptance_threshold):
        """Sets the acceptance_threshold of this AuthenticationConfiguration.


        :param acceptance_threshold: The acceptance_threshold of this AuthenticationConfiguration.
        :type acceptance_threshold: int
        """
        if acceptance_threshold is None:
            raise ValueError("Invalid value for `acceptance_threshold`, must not be `None`")

        self._acceptance_threshold = acceptance_threshold
