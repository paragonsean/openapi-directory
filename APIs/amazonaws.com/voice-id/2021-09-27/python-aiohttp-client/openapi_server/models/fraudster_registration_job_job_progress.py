# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FraudsterRegistrationJobJobProgress(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, percent_complete: int=None):
        """FraudsterRegistrationJobJobProgress - a model defined in OpenAPI

        :param percent_complete: The percent_complete of this FraudsterRegistrationJobJobProgress.
        """
        self.openapi_types = {
            'percent_complete': int
        }

        self.attribute_map = {
            'percent_complete': 'PercentComplete'
        }

        self._percent_complete = percent_complete

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FraudsterRegistrationJobJobProgress':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FraudsterRegistrationJob_JobProgress of this FraudsterRegistrationJobJobProgress.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def percent_complete(self):
        """Gets the percent_complete of this FraudsterRegistrationJobJobProgress.


        :return: The percent_complete of this FraudsterRegistrationJobJobProgress.
        :rtype: int
        """
        return self._percent_complete

    @percent_complete.setter
    def percent_complete(self, percent_complete):
        """Sets the percent_complete of this FraudsterRegistrationJobJobProgress.


        :param percent_complete: The percent_complete of this FraudsterRegistrationJobJobProgress.
        :type percent_complete: int
        """

        self._percent_complete = percent_complete
