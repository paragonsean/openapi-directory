# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.fraud_risk_details_known_fraudster_risk import FraudRiskDetailsKnownFraudsterRisk
from openapi_server.models.fraud_risk_details_voice_spoofing_risk import FraudRiskDetailsVoiceSpoofingRisk
from openapi_server import util


class FraudRiskDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, known_fraudster_risk: FraudRiskDetailsKnownFraudsterRisk=None, voice_spoofing_risk: FraudRiskDetailsVoiceSpoofingRisk=None):
        """FraudRiskDetails - a model defined in OpenAPI

        :param known_fraudster_risk: The known_fraudster_risk of this FraudRiskDetails.
        :param voice_spoofing_risk: The voice_spoofing_risk of this FraudRiskDetails.
        """
        self.openapi_types = {
            'known_fraudster_risk': FraudRiskDetailsKnownFraudsterRisk,
            'voice_spoofing_risk': FraudRiskDetailsVoiceSpoofingRisk
        }

        self.attribute_map = {
            'known_fraudster_risk': 'KnownFraudsterRisk',
            'voice_spoofing_risk': 'VoiceSpoofingRisk'
        }

        self._known_fraudster_risk = known_fraudster_risk
        self._voice_spoofing_risk = voice_spoofing_risk

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FraudRiskDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FraudRiskDetails of this FraudRiskDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def known_fraudster_risk(self):
        """Gets the known_fraudster_risk of this FraudRiskDetails.


        :return: The known_fraudster_risk of this FraudRiskDetails.
        :rtype: FraudRiskDetailsKnownFraudsterRisk
        """
        return self._known_fraudster_risk

    @known_fraudster_risk.setter
    def known_fraudster_risk(self, known_fraudster_risk):
        """Sets the known_fraudster_risk of this FraudRiskDetails.


        :param known_fraudster_risk: The known_fraudster_risk of this FraudRiskDetails.
        :type known_fraudster_risk: FraudRiskDetailsKnownFraudsterRisk
        """
        if known_fraudster_risk is None:
            raise ValueError("Invalid value for `known_fraudster_risk`, must not be `None`")

        self._known_fraudster_risk = known_fraudster_risk

    @property
    def voice_spoofing_risk(self):
        """Gets the voice_spoofing_risk of this FraudRiskDetails.


        :return: The voice_spoofing_risk of this FraudRiskDetails.
        :rtype: FraudRiskDetailsVoiceSpoofingRisk
        """
        return self._voice_spoofing_risk

    @voice_spoofing_risk.setter
    def voice_spoofing_risk(self, voice_spoofing_risk):
        """Sets the voice_spoofing_risk of this FraudRiskDetails.


        :param voice_spoofing_risk: The voice_spoofing_risk of this FraudRiskDetails.
        :type voice_spoofing_risk: FraudRiskDetailsVoiceSpoofingRisk
        """
        if voice_spoofing_risk is None:
            raise ValueError("Invalid value for `voice_spoofing_risk`, must not be `None`")

        self._voice_spoofing_risk = voice_spoofing_risk
