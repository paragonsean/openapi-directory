openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "Amazon Connect Voice ID provides real-time caller authentication and\
    \ fraud risk detection, which make voice interactions in contact centers more\
    \ secure and efficient."
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon Voice ID
  version: 2021-09-27
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: voice-id
  x-aws-signingName: voiceid
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/voice-id-2021-09-27.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/voiceid/
servers:
- description: The Amazon Voice ID multi-region endpoint
  url: "http://voiceid.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Voice ID multi-region endpoint
  url: "https://voiceid.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Voice ID endpoint for China (Beijing) and China (Ningxia)
  url: "http://voiceid.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon Voice ID endpoint for China (Beijing) and China (Ningxia)
  url: "https://voiceid.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=VoiceID.AssociateFraudster:
    post:
      description: 'Associates the fraudsters with the watchlist specified in the
        same domain. '
      operationId: associate_fraudster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - VoiceID.AssociateFraudster
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateFraudsterRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateFraudsterResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=VoiceID.CreateDomain:
    post:
      description: "Creates a domain that contains all Amazon Connect Voice ID data,\
        \ such as speakers, fraudsters, customer audio, and voiceprints. Every domain\
        \ is created with a default watchlist that fraudsters can be a part of."
      operationId: create_domain
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - VoiceID.CreateDomain
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDomainRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDomainResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=VoiceID.CreateWatchlist:
    post:
      description: Creates a watchlist that fraudsters can be a part of.
      operationId: create_watchlist
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - VoiceID.CreateWatchlist
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWatchlistRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWatchlistResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=VoiceID.DeleteDomain:
    post:
      description: Deletes the specified domain from Voice ID.
      operationId: delete_domain
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - VoiceID.DeleteDomain
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDomainRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=VoiceID.DeleteFraudster:
    post:
      description: Deletes the specified fraudster from Voice ID. This action disassociates
        the fraudster from any watchlists it is a part of.
      operationId: delete_fraudster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - VoiceID.DeleteFraudster
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFraudsterRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=VoiceID.DeleteSpeaker:
    post:
      description: Deletes the specified speaker from Voice ID.
      operationId: delete_speaker
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - VoiceID.DeleteSpeaker
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSpeakerRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=VoiceID.DeleteWatchlist:
    post:
      description: "Deletes the specified watchlist from Voice ID. This API throws\
        \ an exception when there are fraudsters in the watchlist that you are trying\
        \ to delete. You must delete the fraudsters, and then delete the watchlist.\
        \ Every domain has a default watchlist which cannot be deleted. "
      operationId: delete_watchlist
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - VoiceID.DeleteWatchlist
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteWatchlistRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=VoiceID.DescribeDomain:
    post:
      description: Describes the specified domain.
      operationId: describe_domain
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - VoiceID.DescribeDomain
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDomainRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDomainResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=VoiceID.DescribeFraudster:
    post:
      description: Describes the specified fraudster.
      operationId: describe_fraudster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - VoiceID.DescribeFraudster
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeFraudsterRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeFraudsterResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=VoiceID.DescribeFraudsterRegistrationJob:
    post:
      description: Describes the specified fraudster registration job.
      operationId: describe_fraudster_registration_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - VoiceID.DescribeFraudsterRegistrationJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeFraudsterRegistrationJobRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeFraudsterRegistrationJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=VoiceID.DescribeSpeaker:
    post:
      description: Describes the specified speaker.
      operationId: describe_speaker
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - VoiceID.DescribeSpeaker
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeSpeakerRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSpeakerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=VoiceID.DescribeSpeakerEnrollmentJob:
    post:
      description: Describes the specified speaker enrollment job.
      operationId: describe_speaker_enrollment_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - VoiceID.DescribeSpeakerEnrollmentJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeSpeakerEnrollmentJobRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSpeakerEnrollmentJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=VoiceID.DescribeWatchlist:
    post:
      description: Describes the specified watchlist.
      operationId: describe_watchlist
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - VoiceID.DescribeWatchlist
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeWatchlistRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeWatchlistResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=VoiceID.DisassociateFraudster:
    post:
      description: "Disassociates the fraudsters from the watchlist specified. Voice\
        \ ID always expects a fraudster to be a part of at least one watchlist. If\
        \ you try to disassociate a fraudster from its only watchlist, a <code>ValidationException</code>\
        \ is thrown. "
      operationId: disassociate_fraudster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - VoiceID.DisassociateFraudster
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateFraudsterRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateFraudsterResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=VoiceID.EvaluateSession:
    post:
      description: Evaluates a specified session based on audio data accumulated during
        a streaming Amazon Connect Voice ID call.
      operationId: evaluate_session
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - VoiceID.EvaluateSession
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvaluateSessionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluateSessionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=VoiceID.ListDomains:
    post:
      description: 'Lists all the domains in the Amazon Web Services account. '
      operationId: list_domains
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - VoiceID.ListDomains
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDomainsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDomainsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=VoiceID.ListFraudsterRegistrationJobs:
    post:
      description: "Lists all the fraudster registration jobs in the domain with the\
        \ given <code>JobStatus</code>. If <code>JobStatus</code> is not provided,\
        \ this lists all fraudster registration jobs in the given domain. "
      operationId: list_fraudster_registration_jobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - VoiceID.ListFraudsterRegistrationJobs
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFraudsterRegistrationJobsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFraudsterRegistrationJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=VoiceID.ListFraudsters:
    post:
      description: Lists all fraudsters in a specified watchlist or domain.
      operationId: list_fraudsters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - VoiceID.ListFraudsters
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFraudstersRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFraudstersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=VoiceID.ListSpeakerEnrollmentJobs:
    post:
      description: "Lists all the speaker enrollment jobs in the domain with the specified\
        \ <code>JobStatus</code>. If <code>JobStatus</code> is not provided, this\
        \ lists all jobs with all possible speaker enrollment job statuses."
      operationId: list_speaker_enrollment_jobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - VoiceID.ListSpeakerEnrollmentJobs
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSpeakerEnrollmentJobsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSpeakerEnrollmentJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=VoiceID.ListSpeakers:
    post:
      description: Lists all speakers in a specified domain.
      operationId: list_speakers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - VoiceID.ListSpeakers
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSpeakersRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSpeakersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=VoiceID.ListTagsForResource:
    post:
      description: Lists all tags associated with a specified Voice ID resource.
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - VoiceID.ListTagsForResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=VoiceID.ListWatchlists:
    post:
      description: Lists all watchlists in a specified domain.
      operationId: list_watchlists
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - VoiceID.ListWatchlists
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListWatchlistsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWatchlistsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=VoiceID.OptOutSpeaker:
    post:
      description: "Opts out a speaker from Voice ID. A speaker can be opted out regardless\
        \ of whether or not they already exist in Voice ID. If they don't yet exist,\
        \ a new speaker is created in an opted out state. If they already exist, their\
        \ existing status is overridden and they are opted out. Enrollment and evaluation\
        \ authentication requests are rejected for opted out speakers, and opted out\
        \ speakers have no voice embeddings stored in Voice ID."
      operationId: opt_out_speaker
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - VoiceID.OptOutSpeaker
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OptOutSpeakerRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptOutSpeakerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=VoiceID.StartFraudsterRegistrationJob:
    post:
      description: Starts a new batch fraudster registration job using provided details.
      operationId: start_fraudster_registration_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - VoiceID.StartFraudsterRegistrationJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartFraudsterRegistrationJobRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartFraudsterRegistrationJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=VoiceID.StartSpeakerEnrollmentJob:
    post:
      description: Starts a new batch speaker enrollment job using specified details.
      operationId: start_speaker_enrollment_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - VoiceID.StartSpeakerEnrollmentJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartSpeakerEnrollmentJobRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartSpeakerEnrollmentJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=VoiceID.TagResource:
    post:
      description: Tags a Voice ID resource with the provided list of tags.
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - VoiceID.TagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=VoiceID.UntagResource:
    post:
      description: Removes specified tags from a specified Amazon Connect Voice ID
        resource.
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - VoiceID.UntagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=VoiceID.UpdateDomain:
    post:
      description: "Updates the specified domain. This API has clobber behavior, and\
        \ clears and replaces all attributes. If an optional field, such as 'Description'\
        \ is not provided, it is removed from the domain."
      operationId: update_domain
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - VoiceID.UpdateDomain
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDomainRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDomainResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=VoiceID.UpdateWatchlist:
    post:
      description: 'Updates the specified watchlist. Every domain has a default watchlist
        which cannot be updated. '
      operationId: update_watchlist
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - VoiceID.UpdateWatchlist
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWatchlistRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateWatchlistResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AssociateFraudsterResponse:
      example:
        Fraudster:
          GeneratedFraudsterId: ""
          DomainId: ""
          CreatedAt: ""
          WatchlistIds: ""
      properties:
        Fraudster:
          $ref: '#/components/schemas/Fraudster'
      title: AssociateFraudsterResponse
      type: object
    AssociateFraudsterRequest:
      example:
        DomainId: ""
        WatchlistId: ""
        FraudsterId: ""
      properties:
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: The identifier of the domain that contains the fraudster.
          title: DomainId
        FraudsterId:
          allOf:
          - $ref: '#/components/schemas/FraudsterId'
          - description: The identifier of the fraudster to be associated with the
              watchlist.
          title: FraudsterId
        WatchlistId:
          allOf:
          - $ref: '#/components/schemas/WatchlistId'
          - description: The identifier of the watchlist you want to associate with
              the fraudster.
          title: WatchlistId
      required:
      - DomainId
      - FraudsterId
      - WatchlistId
      title: AssociateFraudsterRequest
      type: object
    ServiceQuotaExceededException: {}
    ResourceNotFoundException: {}
    ValidationException: {}
    ConflictException: {}
    InternalServerException: {}
    ThrottlingException: {}
    AccessDeniedException: {}
    CreateDomainResponse:
      example:
        Domain:
          ServerSideEncryptionUpdateDetails:
            UpdateStatus: ""
            Message: ""
            OldKmsKeyId: ""
          Description: ""
          DomainId: ""
          CreatedAt: ""
          ServerSideEncryptionConfiguration:
            KmsKeyId: ""
          WatchlistDetails:
            DefaultWatchlistId: ""
          Arn: ""
          UpdatedAt: ""
          DomainStatus: ""
          Name: ""
      properties:
        Domain:
          $ref: '#/components/schemas/CreateDomainResponse_Domain'
      title: CreateDomainResponse
      type: object
    CreateDomainRequest:
      example:
        Description: ""
        ServerSideEncryptionConfiguration:
          KmsKeyId: ""
        ClientToken: ""
        Tags: ""
        Name: ""
      properties:
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientTokenString'
          - description: "A unique, case-sensitive identifier that you provide to\
              \ ensure the idempotency of the request. If not provided, the Amazon\
              \ Web Services SDK populates this field. For more information about\
              \ idempotency, see <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\"\
              >Making retries safe with idempotent APIs</a>."
          title: ClientToken
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A brief description of this domain.
          title: Description
        Name:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The name of the domain.
          title: Name
        ServerSideEncryptionConfiguration:
          $ref: '#/components/schemas/CreateDomainRequest_ServerSideEncryptionConfiguration'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: A list of tags you want added to the domain.
          title: Tags
      required:
      - Name
      - ServerSideEncryptionConfiguration
      title: CreateDomainRequest
      type: object
    CreateWatchlistResponse:
      example:
        Watchlist:
          Description: ""
          DomainId: ""
          DefaultWatchlist: ""
          CreatedAt: ""
          WatchlistId: ""
          UpdatedAt: ""
          Name: ""
      properties:
        Watchlist:
          $ref: '#/components/schemas/CreateWatchlistResponse_Watchlist'
      title: CreateWatchlistResponse
      type: object
    CreateWatchlistRequest:
      example:
        Description: ""
        DomainId: ""
        ClientToken: ""
        Name: ""
      properties:
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientTokenString'
          - description: "A unique, case-sensitive identifier that you provide to\
              \ ensure the idempotency of the request. If not provided, the Amazon\
              \ Web Services SDK populates this field. For more information about\
              \ idempotency, see <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\"\
              >Making retries safe with idempotent APIs</a>."
          title: ClientToken
        Description:
          allOf:
          - $ref: '#/components/schemas/WatchlistDescription'
          - description: A brief description of this watchlist.
          title: Description
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: The identifier of the domain that contains the watchlist.
          title: DomainId
        Name:
          allOf:
          - $ref: '#/components/schemas/WatchlistName'
          - description: The name of the watchlist.
          title: Name
      required:
      - DomainId
      - Name
      title: CreateWatchlistRequest
      type: object
    DeleteDomainRequest:
      example:
        DomainId: ""
      properties:
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: The identifier of the domain you want to delete.
          title: DomainId
      required:
      - DomainId
      title: DeleteDomainRequest
      type: object
    DeleteFraudsterRequest:
      example:
        DomainId: ""
        FraudsterId: ""
      properties:
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: The identifier of the domain that contains the fraudster.
          title: DomainId
        FraudsterId:
          allOf:
          - $ref: '#/components/schemas/FraudsterId'
          - description: The identifier of the fraudster you want to delete.
          title: FraudsterId
      required:
      - DomainId
      - FraudsterId
      title: DeleteFraudsterRequest
      type: object
    DeleteSpeakerRequest:
      example:
        DomainId: ""
        SpeakerId: ""
      properties:
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: The identifier of the domain that contains the speaker.
          title: DomainId
        SpeakerId:
          allOf:
          - $ref: '#/components/schemas/SpeakerId'
          - description: The identifier of the speaker you want to delete.
          title: SpeakerId
      required:
      - DomainId
      - SpeakerId
      title: DeleteSpeakerRequest
      type: object
    DeleteWatchlistRequest:
      example:
        DomainId: ""
        WatchlistId: ""
      properties:
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: The identifier of the domain that contains the watchlist.
          title: DomainId
        WatchlistId:
          allOf:
          - $ref: '#/components/schemas/WatchlistId'
          - description: The identifier of the watchlist to be deleted.
          title: WatchlistId
      required:
      - DomainId
      - WatchlistId
      title: DeleteWatchlistRequest
      type: object
    DescribeDomainResponse:
      example:
        Domain:
          ServerSideEncryptionUpdateDetails:
            UpdateStatus: ""
            Message: ""
            OldKmsKeyId: ""
          Description: ""
          DomainId: ""
          CreatedAt: ""
          ServerSideEncryptionConfiguration:
            KmsKeyId: ""
          WatchlistDetails:
            DefaultWatchlistId: ""
          Arn: ""
          UpdatedAt: ""
          DomainStatus: ""
          Name: ""
      properties:
        Domain:
          $ref: '#/components/schemas/DescribeDomainResponse_Domain'
      title: DescribeDomainResponse
      type: object
    DescribeDomainRequest:
      example:
        DomainId: ""
      properties:
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: The identifier of the domain that you are describing.
          title: DomainId
      required:
      - DomainId
      title: DescribeDomainRequest
      type: object
    DescribeFraudsterResponse:
      example:
        Fraudster:
          GeneratedFraudsterId: ""
          DomainId: ""
          CreatedAt: ""
          WatchlistIds: ""
      properties:
        Fraudster:
          $ref: '#/components/schemas/DescribeFraudsterResponse_Fraudster'
      title: DescribeFraudsterResponse
      type: object
    DescribeFraudsterRequest:
      example:
        DomainId: ""
        FraudsterId: ""
      properties:
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: The identifier of the domain that contains the fraudster.
          title: DomainId
        FraudsterId:
          allOf:
          - $ref: '#/components/schemas/FraudsterId'
          - description: The identifier of the fraudster you are describing.
          title: FraudsterId
      required:
      - DomainId
      - FraudsterId
      title: DescribeFraudsterRequest
      type: object
    DescribeFraudsterRegistrationJobResponse:
      example:
        Job:
          JobStatus: ""
          DataAccessRoleArn: ""
          DomainId: ""
          OutputDataConfig:
            KmsKeyId: ""
            S3Uri: ""
          RegistrationConfig:
            DuplicateRegistrationAction: ""
            FraudsterSimilarityThreshold: ""
            WatchlistIds: ""
          CreatedAt: ""
          JobName: ""
          FailureDetails:
            Message: ""
            StatusCode: ""
          InputDataConfig:
            S3Uri: ""
          EndedAt: ""
          JobId: ""
          JobProgress:
            PercentComplete: ""
      properties:
        Job:
          $ref: '#/components/schemas/DescribeFraudsterRegistrationJobResponse_Job'
      title: DescribeFraudsterRegistrationJobResponse
      type: object
    DescribeFraudsterRegistrationJobRequest:
      example:
        DomainId: ""
        JobId: ""
      properties:
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: The identifier of the domain that contains the fraudster
              registration job.
          title: DomainId
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The identifier of the fraudster registration job you are
              describing.
          title: JobId
      required:
      - DomainId
      - JobId
      title: DescribeFraudsterRegistrationJobRequest
      type: object
    DescribeSpeakerResponse:
      example:
        Speaker:
          Status: ""
          DomainId: ""
          GeneratedSpeakerId: ""
          CreatedAt: ""
          CustomerSpeakerId: ""
          UpdatedAt: ""
          LastAccessedAt: ""
      properties:
        Speaker:
          $ref: '#/components/schemas/DescribeSpeakerResponse_Speaker'
      title: DescribeSpeakerResponse
      type: object
    DescribeSpeakerRequest:
      example:
        DomainId: ""
        SpeakerId: ""
      properties:
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: The identifier of the domain that contains the speaker.
          title: DomainId
        SpeakerId:
          allOf:
          - $ref: '#/components/schemas/SpeakerId'
          - description: The identifier of the speaker you are describing.
          title: SpeakerId
      required:
      - DomainId
      - SpeakerId
      title: DescribeSpeakerRequest
      type: object
    DescribeSpeakerEnrollmentJobResponse:
      example:
        Job:
          EnrollmentConfig:
            FraudDetectionConfig:
              FraudDetectionAction: ""
              RiskThreshold: ""
              WatchlistIds: ""
            ExistingEnrollmentAction: ""
          JobStatus: ""
          DataAccessRoleArn: ""
          DomainId: ""
          OutputDataConfig:
            KmsKeyId: ""
            S3Uri: ""
          CreatedAt: ""
          JobName: ""
          FailureDetails:
            Message: ""
            StatusCode: ""
          InputDataConfig:
            S3Uri: ""
          EndedAt: ""
          JobId: ""
          JobProgress:
            PercentComplete: ""
      properties:
        Job:
          $ref: '#/components/schemas/DescribeSpeakerEnrollmentJobResponse_Job'
      title: DescribeSpeakerEnrollmentJobResponse
      type: object
    DescribeSpeakerEnrollmentJobRequest:
      example:
        DomainId: ""
        JobId: ""
      properties:
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: The identifier of the domain that contains the speaker enrollment
              job.
          title: DomainId
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The identifier of the speaker enrollment job you are describing.
          title: JobId
      required:
      - DomainId
      - JobId
      title: DescribeSpeakerEnrollmentJobRequest
      type: object
    DescribeWatchlistResponse:
      example:
        Watchlist:
          Description: ""
          DomainId: ""
          DefaultWatchlist: ""
          CreatedAt: ""
          WatchlistId: ""
          UpdatedAt: ""
          Name: ""
      properties:
        Watchlist:
          $ref: '#/components/schemas/DescribeWatchlistResponse_Watchlist'
      title: DescribeWatchlistResponse
      type: object
    DescribeWatchlistRequest:
      example:
        DomainId: ""
        WatchlistId: ""
      properties:
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: The identifier of the domain that contains the watchlist.
          title: DomainId
        WatchlistId:
          allOf:
          - $ref: '#/components/schemas/WatchlistId'
          - description: The identifier of the watchlist that you are describing.
          title: WatchlistId
      required:
      - DomainId
      - WatchlistId
      title: DescribeWatchlistRequest
      type: object
    DisassociateFraudsterResponse:
      example:
        Fraudster:
          GeneratedFraudsterId: ""
          DomainId: ""
          CreatedAt: ""
          WatchlistIds: ""
      properties:
        Fraudster:
          $ref: '#/components/schemas/Fraudster'
      title: DisassociateFraudsterResponse
      type: object
    DisassociateFraudsterRequest:
      example:
        DomainId: ""
        WatchlistId: ""
        FraudsterId: ""
      properties:
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: The identifier of the domain that contains the fraudster.
          title: DomainId
        FraudsterId:
          allOf:
          - $ref: '#/components/schemas/FraudsterId'
          - description: The identifier of the fraudster to be disassociated from
              the watchlist.
          title: FraudsterId
        WatchlistId:
          allOf:
          - $ref: '#/components/schemas/WatchlistId'
          - description: The identifier of the watchlist that you want to disassociate
              from the fraudster.
          title: WatchlistId
      required:
      - DomainId
      - FraudsterId
      - WatchlistId
      title: DisassociateFraudsterRequest
      type: object
    EvaluateSessionResponse:
      example:
        FraudDetectionResult:
          Configuration:
            RiskThreshold: ""
            WatchlistId: ""
          AudioAggregationEndedAt: ""
          FraudDetectionResultId: ""
          AudioAggregationStartedAt: ""
          Reasons: ""
          Decision: ""
          RiskDetails:
            KnownFraudsterRisk:
              GeneratedFraudsterId: ""
              RiskScore: ""
            VoiceSpoofingRisk:
              RiskScore: ""
        StreamingStatus: ""
        DomainId: ""
        SessionId: ""
        SessionName: ""
        AuthenticationResult:
          Score: ""
          Configuration:
            AcceptanceThreshold: ""
          GeneratedSpeakerId: ""
          AudioAggregationEndedAt: ""
          CustomerSpeakerId: ""
          AuthenticationResultId: ""
          AudioAggregationStartedAt: ""
          Decision: ""
      properties:
        AuthenticationResult:
          $ref: '#/components/schemas/EvaluateSessionResponse_AuthenticationResult'
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: The identifier of the domain that contains the session.
          title: DomainId
        FraudDetectionResult:
          $ref: '#/components/schemas/EvaluateSessionResponse_FraudDetectionResult'
        SessionId:
          allOf:
          - $ref: '#/components/schemas/SessionId'
          - description: The service-generated identifier of the session.
          title: SessionId
        SessionName:
          allOf:
          - $ref: '#/components/schemas/SessionName'
          - description: The client-provided name of the session.
          title: SessionName
        StreamingStatus:
          allOf:
          - $ref: '#/components/schemas/StreamingStatus'
          - description: "The current status of audio streaming for this session.\
              \ This field is useful to infer next steps when the Authentication or\
              \ Fraud Detection results are empty or the decision is <code>NOT_ENOUGH_SPEECH</code>.\
              \ In this situation, if the <code>StreamingStatus</code> is <code>ONGOING/PENDING_CONFIGURATION</code>,\
              \ it can mean that the client should call the API again later, after\
              \ Voice ID has enough audio to produce a result. If the decision remains\
              \ <code>NOT_ENOUGH_SPEECH</code> even after <code>StreamingStatus</code>\
              \ is <code>ENDED</code>, it means that the previously streamed session\
              \ did not have enough speech to perform evaluation, and a new streaming\
              \ session is needed to try again."
          title: StreamingStatus
      title: EvaluateSessionResponse
      type: object
    EvaluateSessionRequest:
      example:
        DomainId: ""
        SessionNameOrId: ""
      properties:
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: The identifier of the domain where the session started.
          title: DomainId
        SessionNameOrId:
          allOf:
          - $ref: '#/components/schemas/SessionNameOrId'
          - description: "The session identifier, or name of the session, that you\
              \ want to evaluate. In Voice ID integration, this is the Contact-Id."
          title: SessionNameOrId
      required:
      - DomainId
      - SessionNameOrId
      title: EvaluateSessionRequest
      type: object
    ListDomainsResponse:
      example:
        NextToken: ""
        DomainSummaries: ""
      properties:
        DomainSummaries:
          allOf:
          - $ref: '#/components/schemas/DomainSummaries'
          - description: A list containing details about each domain in the Amazon
              Web Services account.
          title: DomainSummaries
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "If <code>NextToken</code> is returned, there are more results\
              \ available. The value of <code>NextToken</code> is a unique pagination\
              \ token for each page. Make the call again using the returned token\
              \ to retrieve the next page. Keep all other arguments unchanged. Each\
              \ pagination token expires after 24 hours."
          title: NextToken
      title: ListDomainsResponse
      type: object
    ListDomainsRequest:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsForListDomainFe'
          - description: The maximum number of results that are returned per call.
              You can use <code>NextToken</code> to obtain more pages of results.
              The default is 100; the maximum allowed page size is also 100.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If <code>NextToken</code> is returned, there are more results\
              \ available. The value of <code>NextToken</code> is a unique pagination\
              \ token for each page. Make the call again using the returned token\
              \ to retrieve the next page. Keep all other arguments unchanged. Each\
              \ pagination token expires after 24 hours."
          title: NextToken
      title: ListDomainsRequest
      type: object
    ListFraudsterRegistrationJobsResponse:
      example:
        NextToken: ""
        JobSummaries: ""
      properties:
        JobSummaries:
          allOf:
          - $ref: '#/components/schemas/FraudsterRegistrationJobSummaries'
          - description: A list containing details about each specified fraudster
              registration job.
          title: JobSummaries
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "If <code>NextToken</code> is returned, there are more results\
              \ available. The value of <code>NextToken</code> is a unique pagination\
              \ token for each page. Make the call again using the returned token\
              \ to retrieve the next page. Keep all other arguments unchanged. Each\
              \ pagination token expires after 24 hours."
          title: NextToken
      title: ListFraudsterRegistrationJobsResponse
      type: object
    ListFraudsterRegistrationJobsRequest:
      example:
        JobStatus: ""
        DomainId: ""
        NextToken: ""
        MaxResults: ""
      properties:
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: The identifier of the domain that contains the fraudster
              registration Jobs.
          title: DomainId
        JobStatus:
          allOf:
          - $ref: '#/components/schemas/FraudsterRegistrationJobStatus'
          - description: Provides the status of your fraudster registration job.
          title: JobStatus
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsForList'
          - description: 'The maximum number of results that are returned per call.
              You can use <code>NextToken</code> to obtain more pages of results.
              The default is 100; the maximum allowed page size is also 100. '
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If <code>NextToken</code> is returned, there are more results\
              \ available. The value of <code>NextToken</code> is a unique pagination\
              \ token for each page. Make the call again using the returned token\
              \ to retrieve the next page. Keep all other arguments unchanged. Each\
              \ pagination token expires after 24 hours."
          title: NextToken
      required:
      - DomainId
      title: ListFraudsterRegistrationJobsRequest
      type: object
    ListFraudstersResponse:
      example:
        NextToken: ""
        FraudsterSummaries: ""
      properties:
        FraudsterSummaries:
          allOf:
          - $ref: '#/components/schemas/FraudsterSummaries'
          - description: 'A list that contains details about each fraudster in the
              Amazon Web Services account. '
          title: FraudsterSummaries
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "If <code>NextToken</code> is returned, there are more results\
              \ available. The value of <code>NextToken</code> is a unique pagination\
              \ token for each page. Make the call again using the returned token\
              \ to retrieve the next page. Keep all other arguments unchanged. Each\
              \ pagination token expires after 24 hours. "
          title: NextToken
      title: ListFraudstersResponse
      type: object
    ListFraudstersRequest:
      example:
        DomainId: ""
        NextToken: ""
        MaxResults: ""
        WatchlistId: ""
      properties:
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: 'The identifier of the domain. '
          title: DomainId
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsForList'
          - description: 'The maximum number of results that are returned per call.
              You can use <code>NextToken</code> to obtain more pages of results.
              The default is 100; the maximum allowed page size is also 100. '
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If <code>NextToken</code> is returned, there are more results\
              \ available. The value of <code>NextToken</code> is a unique pagination\
              \ token for each page. Make the call again using the returned token\
              \ to retrieve the next page. Keep all other arguments unchanged. Each\
              \ pagination token expires after 24 hours. "
          title: NextToken
        WatchlistId:
          allOf:
          - $ref: '#/components/schemas/WatchlistId'
          - description: "The identifier of the watchlist. If provided, all fraudsters\
              \ in the watchlist are listed. If not provided, all fraudsters in the\
              \ domain are listed."
          title: WatchlistId
      required:
      - DomainId
      title: ListFraudstersRequest
      type: object
    ListSpeakerEnrollmentJobsResponse:
      example:
        NextToken: ""
        JobSummaries: ""
      properties:
        JobSummaries:
          allOf:
          - $ref: '#/components/schemas/SpeakerEnrollmentJobSummaries'
          - description: A list containing details about each specified speaker enrollment
              job.
          title: JobSummaries
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "If <code>NextToken</code> is returned, there are more results\
              \ available. The value of <code>NextToken</code> is a unique pagination\
              \ token for each page. Make the call again using the returned token\
              \ to retrieve the next page. Keep all other arguments unchanged. Each\
              \ pagination token expires after 24 hours. "
          title: NextToken
      title: ListSpeakerEnrollmentJobsResponse
      type: object
    ListSpeakerEnrollmentJobsRequest:
      example:
        JobStatus: ""
        DomainId: ""
        NextToken: ""
        MaxResults: ""
      properties:
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: The identifier of the domain that contains the speaker enrollment
              jobs.
          title: DomainId
        JobStatus:
          allOf:
          - $ref: '#/components/schemas/SpeakerEnrollmentJobStatus'
          - description: Provides the status of your speaker enrollment Job.
          title: JobStatus
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsForList'
          - description: The maximum number of results that are returned per call.
              You can use <code>NextToken</code> to obtain more pages of results.
              The default is 100; the maximum allowed page size is also 100.
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If <code>NextToken</code> is returned, there are more results\
              \ available. The value of <code>NextToken</code> is a unique pagination\
              \ token for each page. Make the call again using the returned token\
              \ to retrieve the next page. Keep all other arguments unchanged. Each\
              \ pagination token expires after 24 hours."
          title: NextToken
      required:
      - DomainId
      title: ListSpeakerEnrollmentJobsRequest
      type: object
    ListSpeakersResponse:
      example:
        NextToken: ""
        SpeakerSummaries: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "If <code>NextToken</code> is returned, there are more results\
              \ available. The value of <code>NextToken</code> is a unique pagination\
              \ token for each page. Make the call again using the returned token\
              \ to retrieve the next page. Keep all other arguments unchanged. Each\
              \ pagination token expires after 24 hours. "
          title: NextToken
        SpeakerSummaries:
          allOf:
          - $ref: '#/components/schemas/SpeakerSummaries'
          - description: 'A list containing details about each speaker in the Amazon
              Web Services account. '
          title: SpeakerSummaries
      title: ListSpeakersResponse
      type: object
    ListSpeakersRequest:
      example:
        DomainId: ""
        NextToken: ""
        MaxResults: ""
      properties:
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: The identifier of the domain.
          title: DomainId
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsForList'
          - description: 'The maximum number of results that are returned per call.
              You can use <code>NextToken</code> to obtain more pages of results.
              The default is 100; the maximum allowed page size is also 100. '
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If <code>NextToken</code> is returned, there are more results\
              \ available. The value of <code>NextToken</code> is a unique pagination\
              \ token for each page. Make the call again using the returned token\
              \ to retrieve the next page. Keep all other arguments unchanged. Each\
              \ pagination token expires after 24 hours."
          title: NextToken
      required:
      - DomainId
      title: ListSpeakersRequest
      type: object
    ListTagsForResourceResponse:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The list of tags associated with the specified resource.
          title: Tags
      title: ListTagsForResourceResponse
      type: object
    ListTagsForResourceRequest:
      example:
        ResourceArn: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the Voice ID resource for
              which you want to list the tags.
          title: ResourceArn
      required:
      - ResourceArn
      title: ListTagsForResourceRequest
      type: object
    ListWatchlistsResponse:
      example:
        NextToken: ""
        WatchlistSummaries: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "If <code>NextToken</code> is returned, there are more results\
              \ available. The value of <code>NextToken</code> is a unique pagination\
              \ token for each page. Make the call again using the returned token\
              \ to retrieve the next page. Keep all other arguments unchanged. Each\
              \ pagination token expires after 24 hours. "
          title: NextToken
        WatchlistSummaries:
          allOf:
          - $ref: '#/components/schemas/WatchlistSummaries'
          - description: 'A list that contains details about each watchlist in the
              Amazon Web Services account. '
          title: WatchlistSummaries
      title: ListWatchlistsResponse
      type: object
    ListWatchlistsRequest:
      example:
        DomainId: ""
        NextToken: ""
        MaxResults: ""
      properties:
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: The identifier of the domain.
          title: DomainId
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsForList'
          - description: 'The maximum number of results that are returned per call.
              You can use <code>NextToken</code> to obtain more pages of results.
              The default is 100; the maximum allowed page size is also 100. '
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If <code>NextToken</code> is returned, there are more results\
              \ available. The value of <code>NextToken</code> is a unique pagination\
              \ token for each page. Make the call again using the returned token\
              \ to retrieve the next page. Keep all other arguments unchanged. Each\
              \ pagination token expires after 24 hours. "
          title: NextToken
      required:
      - DomainId
      title: ListWatchlistsRequest
      type: object
    OptOutSpeakerResponse:
      example:
        Speaker:
          Status: ""
          DomainId: ""
          GeneratedSpeakerId: ""
          CreatedAt: ""
          CustomerSpeakerId: ""
          UpdatedAt: ""
          LastAccessedAt: ""
      properties:
        Speaker:
          $ref: '#/components/schemas/OptOutSpeakerResponse_Speaker'
      title: OptOutSpeakerResponse
      type: object
    OptOutSpeakerRequest:
      example:
        DomainId: ""
        SpeakerId: ""
      properties:
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: The identifier of the domain that contains the speaker.
          title: DomainId
        SpeakerId:
          allOf:
          - $ref: '#/components/schemas/SpeakerId'
          - description: The identifier of the speaker you want opted-out.
          title: SpeakerId
      required:
      - DomainId
      - SpeakerId
      title: OptOutSpeakerRequest
      type: object
    StartFraudsterRegistrationJobResponse:
      example:
        Job:
          JobStatus: ""
          DataAccessRoleArn: ""
          DomainId: ""
          OutputDataConfig:
            KmsKeyId: ""
            S3Uri: ""
          RegistrationConfig:
            DuplicateRegistrationAction: ""
            FraudsterSimilarityThreshold: ""
            WatchlistIds: ""
          CreatedAt: ""
          JobName: ""
          FailureDetails:
            Message: ""
            StatusCode: ""
          InputDataConfig:
            S3Uri: ""
          EndedAt: ""
          JobId: ""
          JobProgress:
            PercentComplete: ""
      properties:
        Job:
          $ref: '#/components/schemas/StartFraudsterRegistrationJobResponse_Job'
      title: StartFraudsterRegistrationJobResponse
      type: object
    StartFraudsterRegistrationJobRequest:
      example:
        DataAccessRoleArn: ""
        DomainId: ""
        OutputDataConfig:
          KmsKeyId: ""
          S3Uri: ""
        RegistrationConfig:
          DuplicateRegistrationAction: ""
          FraudsterSimilarityThreshold: ""
          WatchlistIds: ""
        JobName: ""
        ClientToken: ""
        InputDataConfig:
          S3Uri: ""
      properties:
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientTokenString'
          - description: "A unique, case-sensitive identifier that you provide to\
              \ ensure the idempotency of the request. If not provided, the Amazon\
              \ Web Services SDK populates this field. For more information about\
              \ idempotency, see <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\"\
              >Making retries safe with idempotent APIs</a>."
          title: ClientToken
        DataAccessRoleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          - description: The IAM role Amazon Resource Name (ARN) that grants Voice
              ID permissions to access customer's buckets to read the input manifest
              file and write the Job output file. Refer to the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/voiceid-fraudster-watchlist.html">Create
              and edit a fraudster watchlist</a> documentation for the permissions
              needed in this role.
          title: DataAccessRoleArn
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: The identifier of the domain that contains the fraudster
              registration job and in which the fraudsters are registered.
          title: DomainId
        InputDataConfig:
          $ref: '#/components/schemas/StartFraudsterRegistrationJobRequest_InputDataConfig'
        JobName:
          allOf:
          - $ref: '#/components/schemas/JobName'
          - description: The name of the new fraudster registration job.
          title: JobName
        OutputDataConfig:
          $ref: '#/components/schemas/StartFraudsterRegistrationJobRequest_OutputDataConfig'
        RegistrationConfig:
          $ref: '#/components/schemas/StartFraudsterRegistrationJobRequest_RegistrationConfig'
      required:
      - DataAccessRoleArn
      - DomainId
      - InputDataConfig
      - OutputDataConfig
      title: StartFraudsterRegistrationJobRequest
      type: object
    StartSpeakerEnrollmentJobResponse:
      example:
        Job:
          EnrollmentConfig:
            FraudDetectionConfig:
              FraudDetectionAction: ""
              RiskThreshold: ""
              WatchlistIds: ""
            ExistingEnrollmentAction: ""
          JobStatus: ""
          DataAccessRoleArn: ""
          DomainId: ""
          OutputDataConfig:
            KmsKeyId: ""
            S3Uri: ""
          CreatedAt: ""
          JobName: ""
          FailureDetails:
            Message: ""
            StatusCode: ""
          InputDataConfig:
            S3Uri: ""
          EndedAt: ""
          JobId: ""
          JobProgress:
            PercentComplete: ""
      properties:
        Job:
          $ref: '#/components/schemas/StartSpeakerEnrollmentJobResponse_Job'
      title: StartSpeakerEnrollmentJobResponse
      type: object
    StartSpeakerEnrollmentJobRequest:
      example:
        EnrollmentConfig:
          FraudDetectionConfig:
            FraudDetectionAction: ""
            RiskThreshold: ""
            WatchlistIds: ""
          ExistingEnrollmentAction: ""
        DataAccessRoleArn: ""
        DomainId: ""
        OutputDataConfig:
          KmsKeyId: ""
          S3Uri: ""
        JobName: ""
        ClientToken: ""
        InputDataConfig:
          S3Uri: ""
      properties:
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientTokenString'
          - description: "A unique, case-sensitive identifier that you provide to\
              \ ensure the idempotency of the request. If not provided, the Amazon\
              \ Web Services SDK populates this field. For more information about\
              \ idempotency, see <a href=\"https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/\"\
              >Making retries safe with idempotent APIs</a>."
          title: ClientToken
        DataAccessRoleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          - description: The IAM role Amazon Resource Name (ARN) that grants Voice
              ID permissions to access customer's buckets to read the input manifest
              file and write the job output file. Refer to <a href="https://docs.aws.amazon.com/connect/latest/adminguide/voiceid-batch-enrollment.html">Batch
              enrollment using audio data from prior calls</a> for the permissions
              needed in this role.
          title: DataAccessRoleArn
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: 'The identifier of the domain that contains the speaker enrollment
              job and in which the speakers are enrolled. '
          title: DomainId
        EnrollmentConfig:
          $ref: '#/components/schemas/StartSpeakerEnrollmentJobRequest_EnrollmentConfig'
        InputDataConfig:
          $ref: '#/components/schemas/StartSpeakerEnrollmentJobRequest_InputDataConfig'
        JobName:
          allOf:
          - $ref: '#/components/schemas/JobName'
          - description: A name for your speaker enrollment job.
          title: JobName
        OutputDataConfig:
          $ref: '#/components/schemas/StartFraudsterRegistrationJobRequest_OutputDataConfig'
      required:
      - DataAccessRoleArn
      - DomainId
      - InputDataConfig
      - OutputDataConfig
      title: StartSpeakerEnrollmentJobRequest
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    TagResourceRequest:
      example:
        ResourceArn: ""
        Tags: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the Voice ID resource you
              want to tag.
          title: ResourceArn
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The list of tags to assign to the specified resource.
          title: Tags
      required:
      - ResourceArn
      - Tags
      title: TagResourceRequest
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    UntagResourceRequest:
      example:
        ResourceArn: ""
        TagKeys: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the Voice ID resource you
              want to remove tags from.
          title: ResourceArn
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          - description: The list of tag keys you want to remove from the specified
              resource.
          title: TagKeys
      required:
      - ResourceArn
      - TagKeys
      title: UntagResourceRequest
      type: object
    UpdateDomainResponse:
      example:
        Domain:
          ServerSideEncryptionUpdateDetails:
            UpdateStatus: ""
            Message: ""
            OldKmsKeyId: ""
          Description: ""
          DomainId: ""
          CreatedAt: ""
          ServerSideEncryptionConfiguration:
            KmsKeyId: ""
          WatchlistDetails:
            DefaultWatchlistId: ""
          Arn: ""
          UpdatedAt: ""
          DomainStatus: ""
          Name: ""
      properties:
        Domain:
          $ref: '#/components/schemas/UpdateDomainResponse_Domain'
      title: UpdateDomainResponse
      type: object
    UpdateDomainRequest:
      example:
        Description: ""
        DomainId: ""
        ServerSideEncryptionConfiguration:
          KmsKeyId: ""
        Name: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A brief description about this domain.
          title: Description
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: The identifier of the domain to be updated.
          title: DomainId
        Name:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The name of the domain.
          title: Name
        ServerSideEncryptionConfiguration:
          $ref: '#/components/schemas/UpdateDomainRequest_ServerSideEncryptionConfiguration'
      required:
      - DomainId
      - Name
      - ServerSideEncryptionConfiguration
      title: UpdateDomainRequest
      type: object
    UpdateWatchlistResponse:
      example:
        Watchlist:
          Description: ""
          DomainId: ""
          DefaultWatchlist: ""
          CreatedAt: ""
          WatchlistId: ""
          UpdatedAt: ""
          Name: ""
      properties:
        Watchlist:
          $ref: '#/components/schemas/UpdateWatchlistResponse_Watchlist'
      title: UpdateWatchlistResponse
      type: object
    UpdateWatchlistRequest:
      example:
        Description: ""
        DomainId: ""
        WatchlistId: ""
        Name: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/WatchlistDescription'
          - description: A brief description about this watchlist.
          title: Description
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: The identifier of the domain that contains the watchlist.
          title: DomainId
        Name:
          allOf:
          - $ref: '#/components/schemas/WatchlistName'
          - description: The name of the watchlist.
          title: Name
        WatchlistId:
          allOf:
          - $ref: '#/components/schemas/WatchlistId'
          - description: The identifier of the watchlist to be updated.
          title: WatchlistId
      required:
      - DomainId
      - WatchlistId
      title: UpdateWatchlistRequest
      type: object
    AmazonResourceName:
      maxLength: 1011
      minLength: 1
      pattern: "^arn:aws(-[^:]+)?:voiceid.+:[0-9]{12}:domain/[a-zA-Z0-9]{22}$"
      type: string
    Arn:
      pattern: "^arn:aws(-[^:]+)?:voiceid.+:[0-9]{12}:domain/[a-zA-Z0-9]{22}$"
      type: string
    DomainId:
      maxLength: 22
      minLength: 22
      pattern: "^[a-zA-Z0-9]{22}$"
      type: string
    FraudsterId:
      format: password
      maxLength: 25
      minLength: 25
      pattern: "^id#[a-zA-Z0-9]{22}$"
      type: string
    WatchlistId:
      maxLength: 22
      minLength: 22
      pattern: "^[a-zA-Z0-9]{22}$"
      title: WatchlistId
      type: string
    Fraudster:
      description: Contains all the information about a fraudster.
      example:
        GeneratedFraudsterId: ""
        DomainId: ""
        CreatedAt: ""
        WatchlistIds: ""
      properties:
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp of when Voice ID identified the fraudster.
          title: CreatedAt
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: The identifier of the domain that contains the fraudster.
          title: DomainId
        GeneratedFraudsterId:
          allOf:
          - $ref: '#/components/schemas/GeneratedFraudsterId'
          - description: The service-generated identifier for the fraudster.
          title: GeneratedFraudsterId
        WatchlistIds:
          allOf:
          - $ref: '#/components/schemas/ResponseWatchlistIds'
          - description: The identifier of the watchlists the fraudster is a part
              of.
          title: WatchlistIds
      title: Fraudster
      type: object
    Score:
      maximum: 100
      minimum: 0
      type: integer
    AuthenticationConfiguration:
      description: The configuration used to authenticate a speaker during a session.
      properties:
        AcceptanceThreshold:
          allOf:
          - $ref: '#/components/schemas/Score'
          - description: The minimum threshold needed to successfully authenticate
              a speaker.
          title: AcceptanceThreshold
      required:
      - AcceptanceThreshold
      title: AuthenticationConfiguration
      type: object
    AuthenticationDecision:
      enum:
      - ACCEPT
      - REJECT
      - NOT_ENOUGH_SPEECH
      - SPEAKER_NOT_ENROLLED
      - SPEAKER_OPTED_OUT
      - SPEAKER_ID_NOT_PROVIDED
      - SPEAKER_EXPIRED
      title: AuthenticationDecision
      type: string
    Timestamp:
      format: date-time
      type: string
    UniqueIdLarge:
      maxLength: 22
      minLength: 22
      pattern: "^[a-zA-Z0-9]{22}$"
      type: string
    CustomerSpeakerId:
      format: password
      maxLength: 256
      minLength: 1
      pattern: "^[a-zA-Z0-9][a-zA-Z0-9_-]*$"
      type: string
    GeneratedSpeakerId:
      maxLength: 25
      minLength: 25
      pattern: "^id#[a-zA-Z0-9]{22}$"
      type: string
    AuthenticationResult:
      description: "The authentication result produced by Voice ID, processed against\
        \ the current session state and streamed audio of the speaker."
      properties:
        AudioAggregationEndedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A timestamp of when audio aggregation ended for this authentication
              result.
          title: AudioAggregationEndedAt
        AudioAggregationStartedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A timestamp of when audio aggregation started for this authentication
              result.
          title: AudioAggregationStartedAt
        AuthenticationResultId:
          allOf:
          - $ref: '#/components/schemas/UniqueIdLarge'
          - description: "The unique identifier for this authentication result. Because\
              \ there can be multiple authentications for a given session, this field\
              \ helps to identify if the returned result is from a previous streaming\
              \ activity or a new result. Note that in absence of any new streaming\
              \ activity, <code>AcceptanceThreshold</code> changes, or <code>SpeakerId</code>\
              \ changes, Voice ID always returns cached Authentication Result for\
              \ this API."
          title: AuthenticationResultId
        Configuration:
          $ref: '#/components/schemas/AuthenticationResult_Configuration'
        CustomerSpeakerId:
          allOf:
          - $ref: '#/components/schemas/CustomerSpeakerId'
          - description: The client-provided identifier for the speaker whose authentication
              result is produced. Only present if a <code>SpeakerId</code> is provided
              for the session.
          title: CustomerSpeakerId
        Decision:
          allOf:
          - $ref: '#/components/schemas/AuthenticationDecision'
          - description: "The authentication decision produced by Voice ID, processed\
              \ against the current session state and streamed audio of the speaker."
          title: Decision
        GeneratedSpeakerId:
          allOf:
          - $ref: '#/components/schemas/GeneratedSpeakerId'
          - description: The service-generated identifier for the speaker whose authentication
              result is produced.
          title: GeneratedSpeakerId
        Score:
          allOf:
          - $ref: '#/components/schemas/Score'
          - description: The authentication score for the speaker whose authentication
              result is produced. This value is only present if the authentication
              decision is either <code>ACCEPT</code> or <code>REJECT</code>.
          title: Score
      title: AuthenticationResult
      type: object
    Boolean:
      type: boolean
    ClientTokenString:
      maxLength: 64
      minLength: 1
      pattern: "^[a-zA-Z0-9-_]+$"
      type: string
    Description:
      format: password
      maxLength: 1024
      minLength: 1
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-%@]*)$"
      type: string
    DomainName:
      format: password
      maxLength: 256
      minLength: 1
      pattern: "^[a-zA-Z0-9][a-zA-Z0-9_-]*$"
      type: string
    ServerSideEncryptionConfiguration:
      description: The configuration containing information about the customer managed
        key used for encrypting customer data.
      properties:
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyId'
          - description: 'The identifier of the KMS key to use to encrypt data stored
              by Voice ID. Voice ID doesn''t support asymmetric customer managed keys. '
          title: KmsKeyId
      required:
      - KmsKeyId
      title: ServerSideEncryptionConfiguration
      type: object
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 200
      minItems: 0
      type: array
    Domain:
      description: Contains all the information about a domain.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) for the domain.
          title: Arn
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp of when the domain was created.
          title: CreatedAt
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the domain.
          title: Description
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: The identifier of the domain.
          title: DomainId
        DomainStatus:
          allOf:
          - $ref: '#/components/schemas/DomainStatus'
          - description: The current status of the domain.
          title: DomainStatus
        Name:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The name for the domain.
          title: Name
        ServerSideEncryptionConfiguration:
          $ref: '#/components/schemas/Domain_ServerSideEncryptionConfiguration'
        ServerSideEncryptionUpdateDetails:
          $ref: '#/components/schemas/Domain_ServerSideEncryptionUpdateDetails'
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp of when the domain was last update.
          title: UpdatedAt
        WatchlistDetails:
          $ref: '#/components/schemas/Domain_WatchlistDetails'
      title: Domain
      type: object
    WatchlistDescription:
      format: password
      maxLength: 1024
      minLength: 1
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-%@]*)$"
      type: string
    WatchlistName:
      format: password
      maxLength: 256
      minLength: 1
      pattern: "^[a-zA-Z0-9][a-zA-Z0-9_-]*$"
      type: string
    Watchlist:
      description: Contains all the information about a watchlist.
      properties:
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp of when the watchlist was created.
          title: CreatedAt
        DefaultWatchlist:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether the specified watchlist is the default watchlist
              of a domain.
          title: DefaultWatchlist
        Description:
          allOf:
          - $ref: '#/components/schemas/WatchlistDescription'
          - description: The description of the watchlist.
          title: Description
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: The identifier of the domain that contains the watchlist.
          title: DomainId
        Name:
          allOf:
          - $ref: '#/components/schemas/WatchlistName'
          - description: The name for the watchlist.
          title: Name
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp of when the watchlist was updated.
          title: UpdatedAt
        WatchlistId:
          allOf:
          - $ref: '#/components/schemas/WatchlistId'
          - description: The identifier of the watchlist.
          title: WatchlistId
      title: Watchlist
      type: object
    SpeakerId:
      format: password
      maxLength: 256
      minLength: 1
      pattern: "^(id#[a-zA-Z0-9]{22}|[a-zA-Z0-9][a-zA-Z0-9_-]*)$"
      type: string
    JobId:
      maxLength: 22
      minLength: 22
      pattern: "^[a-zA-Z0-9]{22}$"
      type: string
    FraudsterRegistrationJob:
      description: Contains all the information about a fraudster registration job.
      properties:
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A timestamp of when the fraudster registration job was created.
          title: CreatedAt
        DataAccessRoleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          - description: The IAM role Amazon Resource Name (ARN) that grants Voice
              ID permissions to access customer's buckets to read the input manifest
              file and write the job output file.
          title: DataAccessRoleArn
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: The identifier of the domain that contains the fraudster
              registration job.
          title: DomainId
        EndedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A timestamp of when the fraudster registration job ended.
          title: EndedAt
        FailureDetails:
          $ref: '#/components/schemas/FraudsterRegistrationJob_FailureDetails'
        InputDataConfig:
          $ref: '#/components/schemas/FraudsterRegistrationJob_InputDataConfig'
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The service-generated identifier for the fraudster registration
              job.
          title: JobId
        JobName:
          allOf:
          - $ref: '#/components/schemas/JobName'
          - description: The client-provided name for the fraudster registration job.
          title: JobName
        JobProgress:
          $ref: '#/components/schemas/FraudsterRegistrationJob_JobProgress'
        JobStatus:
          allOf:
          - $ref: '#/components/schemas/FraudsterRegistrationJobStatus'
          - description: The current status of the fraudster registration job.
          title: JobStatus
        OutputDataConfig:
          $ref: '#/components/schemas/FraudsterRegistrationJob_OutputDataConfig'
        RegistrationConfig:
          $ref: '#/components/schemas/FraudsterRegistrationJob_RegistrationConfig'
      title: FraudsterRegistrationJob
      type: object
    SpeakerEnrollmentJob:
      description: Contains all the information about a speaker enrollment job.
      properties:
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A timestamp of when the speaker enrollment job was created.
          title: CreatedAt
        DataAccessRoleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          - description: The IAM role Amazon Resource Name (ARN) that grants Voice
              ID permissions to access customer's buckets to read the input manifest
              file and write the job output file.
          title: DataAccessRoleArn
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: The identifier of the domain that contains the speaker enrollment
              job.
          title: DomainId
        EndedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'A timestamp of when the speaker enrollment job ended. '
          title: EndedAt
        EnrollmentConfig:
          $ref: '#/components/schemas/SpeakerEnrollmentJob_EnrollmentConfig'
        FailureDetails:
          $ref: '#/components/schemas/FraudsterRegistrationJob_FailureDetails'
        InputDataConfig:
          $ref: '#/components/schemas/SpeakerEnrollmentJob_InputDataConfig'
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The service-generated identifier for the speaker enrollment
              job.
          title: JobId
        JobName:
          allOf:
          - $ref: '#/components/schemas/JobName'
          - description: The client-provided name for the speaker enrollment job.
          title: JobName
        JobProgress:
          $ref: '#/components/schemas/SpeakerEnrollmentJob_JobProgress'
        JobStatus:
          allOf:
          - $ref: '#/components/schemas/SpeakerEnrollmentJobStatus'
          - description: The current status of the speaker enrollment job.
          title: JobStatus
        OutputDataConfig:
          $ref: '#/components/schemas/StartFraudsterRegistrationJobRequest_OutputDataConfig'
      title: SpeakerEnrollmentJob
      type: object
    Speaker:
      description: Contains all the information about a speaker.
      properties:
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'A timestamp of when the speaker was created. '
          title: CreatedAt
        CustomerSpeakerId:
          allOf:
          - $ref: '#/components/schemas/CustomerSpeakerId'
          - description: The client-provided identifier for the speaker.
          title: CustomerSpeakerId
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: The identifier of the domain that contains the speaker.
          title: DomainId
        GeneratedSpeakerId:
          allOf:
          - $ref: '#/components/schemas/GeneratedSpeakerId'
          - description: The service-generated identifier for the speaker.
          title: GeneratedSpeakerId
        LastAccessedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The timestamp of when the speaker was last accessed for\
              \ enrollment, re-enrollment or a successful authentication. This timestamp\
              \ is accurate to one hour."
          title: LastAccessedAt
        Status:
          allOf:
          - $ref: '#/components/schemas/SpeakerStatus'
          - description: The current status of the speaker.
          title: Status
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A timestamp of the speaker's last update.
          title: UpdatedAt
      title: Speaker
      type: object
    DomainStatus:
      enum:
      - ACTIVE
      - PENDING
      - SUSPENDED
      title: DomainStatus
      type: string
    ServerSideEncryptionUpdateDetails:
      description: "Details about the most recent server-side encryption configuration\
        \ update. When the server-side encryption configuration is changed, dependency\
        \ on the old KMS key is removed through an asynchronous process. When this\
        \ update is complete, the domain’s data can only be accessed using the new\
        \ KMS key."
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Message explaining the current UpdateStatus. When the UpdateStatus\
              \ is FAILED, this message explains the cause of the failure."
          title: Message
        OldKmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyId'
          - description: "The previous KMS key ID the domain was encrypted with, before\
              \ ServerSideEncryptionConfiguration was updated to a new KMS key ID."
          title: OldKmsKeyId
        UpdateStatus:
          allOf:
          - $ref: '#/components/schemas/ServerSideEncryptionUpdateStatus'
          - description: "Status of the server-side encryption update. During an update,\
              \ if there is an issue with the domain's current or old KMS key ID,\
              \ such as an inaccessible or disabled key, then the status is FAILED.\
              \ In order to resolve this, the key needs to be made accessible, and\
              \ then an UpdateDomain call with the existing server-side encryption\
              \ configuration will re-attempt this update process."
          title: UpdateStatus
      title: ServerSideEncryptionUpdateDetails
      type: object
    WatchlistDetails:
      description: Details of the watchlists in a domain.
      properties:
        DefaultWatchlistId:
          allOf:
          - $ref: '#/components/schemas/WatchlistId'
          - description: The identifier of the default watchlist.
          title: DefaultWatchlistId
      required:
      - DefaultWatchlistId
      title: WatchlistDetails
      type: object
    DomainSummary:
      description: Contains a summary of information about a domain.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) for the domain.
          title: Arn
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp of when the domain was created.
          title: CreatedAt
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the domain.
          title: Description
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: The identifier of the domain.
          title: DomainId
        DomainStatus:
          allOf:
          - $ref: '#/components/schemas/DomainStatus'
          - description: The current status of the domain.
          title: DomainStatus
        Name:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The client-provided name for the domain.
          title: Name
        ServerSideEncryptionConfiguration:
          $ref: '#/components/schemas/Domain_ServerSideEncryptionConfiguration'
        ServerSideEncryptionUpdateDetails:
          $ref: '#/components/schemas/Domain_ServerSideEncryptionUpdateDetails'
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp of when the domain was last updated.
          title: UpdatedAt
        WatchlistDetails:
          $ref: '#/components/schemas/DomainSummary_WatchlistDetails'
      title: DomainSummary
      type: object
    DomainSummaries:
      items:
        $ref: '#/components/schemas/DomainSummary'
      type: array
    DuplicateRegistrationAction:
      enum:
      - SKIP
      - REGISTER_AS_NEW
      title: DuplicateRegistrationAction
      type: string
    ExistingEnrollmentAction:
      enum:
      - SKIP
      - OVERWRITE
      title: ExistingEnrollmentAction
      type: string
    EnrollmentJobFraudDetectionConfig:
      description: The fraud detection configuration to be used during the batch speaker
        enrollment job.
      properties:
        FraudDetectionAction:
          allOf:
          - $ref: '#/components/schemas/FraudDetectionAction'
          - description: "The action to take when the given speaker is flagged by\
              \ the fraud detection system. The default value is <code>FAIL</code>,\
              \ which fails the speaker enrollment. Changing this value to <code>IGNORE</code>\
              \ results in the speaker being enrolled even if they are flagged by\
              \ the fraud detection system."
          title: FraudDetectionAction
        RiskThreshold:
          allOf:
          - $ref: '#/components/schemas/Score'
          - description: "Threshold value for determining whether the speaker is a\
              \ high risk to be fraudulent. If the detected risk score calculated\
              \ by Voice ID is greater than or equal to the threshold, the speaker\
              \ is considered a fraudster."
          title: RiskThreshold
        WatchlistIds:
          allOf:
          - $ref: '#/components/schemas/EnrollmentJobFraudDetectionConfigWatchlistIds'
          - description: 'The identifier of watchlists against which fraud detection
              is performed. '
          title: WatchlistIds
      title: EnrollmentJobFraudDetectionConfig
      type: object
    EnrollmentConfig:
      description: Contains configurations defining enrollment behavior for the batch
        job.
      properties:
        ExistingEnrollmentAction:
          allOf:
          - $ref: '#/components/schemas/ExistingEnrollmentAction'
          - description: " The action to take when the specified speaker is already\
              \ enrolled in the specified domain. The default value is <code>SKIP</code>,\
              \ which skips the enrollment for the existing speaker. Setting the value\
              \ to <code>OVERWRITE</code> replaces the existing voice prints and enrollment\
              \ audio stored for that speaker with new data generated from the latest\
              \ audio."
          title: ExistingEnrollmentAction
        FraudDetectionConfig:
          $ref: '#/components/schemas/EnrollmentConfig_FraudDetectionConfig'
      title: EnrollmentConfig
      type: object
    FraudDetectionAction:
      enum:
      - IGNORE
      - FAIL
      title: FraudDetectionAction
      type: string
    EnrollmentJobFraudDetectionConfigWatchlistIds:
      items:
        $ref: '#/components/schemas/WatchlistId'
      maxItems: 1
      minItems: 1
      type: array
    SessionNameOrId:
      maxLength: 36
      minLength: 1
      pattern: "^(id#[a-zA-Z0-9]{22}|[a-zA-Z0-9][a-zA-Z0-9_-]*)$"
      type: string
    FraudDetectionResult:
      description: "The fraud detection result produced by Voice ID, processed against\
        \ the current session state and streamed audio of the speaker."
      properties:
        AudioAggregationEndedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A timestamp of when audio aggregation ended for this fraud
              detection result.
          title: AudioAggregationEndedAt
        AudioAggregationStartedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A timestamp of when audio aggregation started for this fraud
              detection result.
          title: AudioAggregationStartedAt
        Configuration:
          $ref: '#/components/schemas/FraudDetectionResult_Configuration'
        Decision:
          allOf:
          - $ref: '#/components/schemas/FraudDetectionDecision'
          - description: "The fraud detection decision produced by Voice ID, processed\
              \ against the current session state and streamed audio of the speaker."
          title: Decision
        FraudDetectionResultId:
          allOf:
          - $ref: '#/components/schemas/UniqueIdLarge'
          - description: "The unique identifier for this fraud detection result. Given\
              \ there can be multiple fraud detections for a given session, this field\
              \ helps in identifying if the returned result is from previous streaming\
              \ activity or a new result. Note that in the absence of any new streaming\
              \ activity or risk threshold changes, Voice ID always returns cached\
              \ Fraud Detection result for this API."
          title: FraudDetectionResultId
        Reasons:
          allOf:
          - $ref: '#/components/schemas/FraudDetectionReasons'
          - description: "The reason speaker was flagged by the fraud detection system.\
              \ This is only be populated if fraud detection Decision is <code>HIGH_RISK</code>,\
              \ and the following possible values: <code>KNOWN_FRAUDSTER</code> and\
              \ <code>VOICE_SPOOFING</code>."
          title: Reasons
        RiskDetails:
          $ref: '#/components/schemas/FraudDetectionResult_RiskDetails'
      title: FraudDetectionResult
      type: object
    SessionId:
      maxLength: 25
      minLength: 25
      pattern: "^id#[a-zA-Z0-9]{22}$"
      type: string
    SessionName:
      maxLength: 36
      minLength: 1
      pattern: "^[a-zA-Z0-9][a-zA-Z0-9_-]*$"
      type: string
    StreamingStatus:
      enum:
      - PENDING_CONFIGURATION
      - ONGOING
      - ENDED
      title: StreamingStatus
      type: string
    String:
      minLength: 1
      type: string
    Integer:
      type: integer
    FailureDetails:
      description: Contains error details for a failed batch job.
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A description of the error that caused the batch job failure.
          title: Message
        StatusCode:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: An HTTP status code representing the nature of the error.
          title: StatusCode
      title: FailureDetails
      type: object
    FraudDetectionConfiguration:
      description: The configuration used for performing fraud detection over a speaker
        during a session.
      properties:
        RiskThreshold:
          allOf:
          - $ref: '#/components/schemas/Score'
          - description: "Threshold value for determining whether the speaker is a\
              \ fraudster. If the detected risk score calculated by Voice ID is higher\
              \ than the threshold, the speaker is considered a fraudster."
          title: RiskThreshold
        WatchlistId:
          allOf:
          - $ref: '#/components/schemas/WatchlistId'
          - description: 'The identifier of the watchlist against which fraud detection
              is performed. '
          title: WatchlistId
      title: FraudDetectionConfiguration
      type: object
    FraudDetectionDecision:
      enum:
      - HIGH_RISK
      - LOW_RISK
      - NOT_ENOUGH_SPEECH
      title: FraudDetectionDecision
      type: string
    FraudDetectionReason:
      enum:
      - KNOWN_FRAUDSTER
      - VOICE_SPOOFING
      title: FraudDetectionReason
      type: string
    FraudDetectionReasons:
      items:
        $ref: '#/components/schemas/FraudDetectionReason'
      maxItems: 3
      minItems: 0
      type: array
    FraudRiskDetails:
      description: Details regarding various fraud risk analyses performed against
        the current session state and streamed audio of the speaker.
      properties:
        KnownFraudsterRisk:
          $ref: '#/components/schemas/FraudRiskDetails_KnownFraudsterRisk'
        VoiceSpoofingRisk:
          $ref: '#/components/schemas/FraudRiskDetails_VoiceSpoofingRisk'
      required:
      - KnownFraudsterRisk
      - VoiceSpoofingRisk
      title: FraudRiskDetails
      type: object
    KnownFraudsterRisk:
      description: Contains details produced as a result of performing known fraudster
        risk analysis on a speaker.
      properties:
        GeneratedFraudsterId:
          allOf:
          - $ref: '#/components/schemas/GeneratedFraudsterId'
          - description: "The identifier of the fraudster that is the closest match\
              \ to the speaker. If there are no fraudsters registered in a given domain,\
              \ or if there are no fraudsters with a non-zero RiskScore, this value\
              \ is <code>null</code>."
          title: GeneratedFraudsterId
        RiskScore:
          allOf:
          - $ref: '#/components/schemas/Score'
          - description: The score indicating the likelihood the speaker is a known
              fraudster.
          title: RiskScore
      required:
      - RiskScore
      title: KnownFraudsterRisk
      type: object
    VoiceSpoofingRisk:
      description: The details resulting from 'Voice Spoofing Risk' analysis of the
        speaker.
      properties:
        RiskScore:
          allOf:
          - $ref: '#/components/schemas/Score'
          - description: The score indicating the likelihood of speaker’s voice being
              spoofed.
          title: RiskScore
      required:
      - RiskScore
      title: VoiceSpoofingRisk
      type: object
    GeneratedFraudsterId:
      maxLength: 25
      minLength: 25
      pattern: "^id#[a-zA-Z0-9]{22}$"
      type: string
    ResponseWatchlistIds:
      items:
        $ref: '#/components/schemas/WatchlistId'
      type: array
    IamRoleArn:
      maxLength: 2048
      minLength: 20
      pattern: "^arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+$"
      type: string
    InputDataConfig:
      description: The configuration containing input file information for a batch
        job.
      properties:
        S3Uri:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          - description: The S3 location for the input manifest file that contains
              the list of individual enrollment or registration job requests.
          title: S3Uri
      required:
      - S3Uri
      title: InputDataConfig
      type: object
    JobName:
      format: password
      maxLength: 256
      minLength: 1
      pattern: "^[a-zA-Z0-9][a-zA-Z0-9_-]*$"
      type: string
    JobProgress:
      description: Indicates the completion progress for a batch job.
      properties:
        PercentComplete:
          allOf:
          - $ref: '#/components/schemas/Score'
          - description: Shows the completed percentage of enrollment or registration
              requests listed in the input file.
          title: PercentComplete
      title: JobProgress
      type: object
    FraudsterRegistrationJobStatus:
      enum:
      - SUBMITTED
      - IN_PROGRESS
      - COMPLETED
      - COMPLETED_WITH_ERRORS
      - FAILED
      title: FraudsterRegistrationJobStatus
      type: string
    OutputDataConfig:
      description: The configuration containing output file information for a batch
        job.
      properties:
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyId'
          - description: 'The identifier of the KMS key you want Voice ID to use to
              encrypt the output file of a speaker enrollment job/fraudster registration
              job. '
          title: KmsKeyId
        S3Uri:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          - description: "The S3 path of the folder where Voice ID writes the job\
              \ output file. It has a <code>*.out</code> extension. For example, if\
              \ the input file name is <code>input-file.json</code> and the output\
              \ folder path is <code>s3://output-bucket/output-folder</code>, the\
              \ full output file path is <code>s3://output-bucket/output-folder/job-Id/input-file.json.out</code>."
          title: S3Uri
      required:
      - S3Uri
      title: OutputDataConfig
      type: object
    RegistrationConfig:
      description: The registration configuration to be used during the batch fraudster
        registration job.
      properties:
        DuplicateRegistrationAction:
          allOf:
          - $ref: '#/components/schemas/DuplicateRegistrationAction'
          - description: "The action to take when a fraudster is identified as a duplicate.\
              \ The default action is <code>SKIP</code>, which skips registering the\
              \ duplicate fraudster. Setting the value to <code>REGISTER_AS_NEW</code>\
              \ always registers a new fraudster into the specified domain."
          title: DuplicateRegistrationAction
        FraudsterSimilarityThreshold:
          allOf:
          - $ref: '#/components/schemas/Score'
          - description: The minimum similarity score between the new and old fraudsters
              in order to consider the new fraudster a duplicate.
          title: FraudsterSimilarityThreshold
        WatchlistIds:
          allOf:
          - $ref: '#/components/schemas/RegistrationConfigWatchlistIds'
          - description: "The identifiers of watchlists that a fraudster is registered\
              \ to. If a watchlist isn't provided, the fraudsters are registered to\
              \ the default watchlist. "
          title: WatchlistIds
      title: RegistrationConfig
      type: object
    FraudsterRegistrationJobSummary:
      description: Contains a summary of information about a fraudster registration
        job.
      properties:
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'A timestamp of when the fraudster registration job was created. '
          title: CreatedAt
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: The identifier of the domain that contains the fraudster
              registration job.
          title: DomainId
        EndedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A timestamp of when the fraudster registration job ended.
          title: EndedAt
        FailureDetails:
          $ref: '#/components/schemas/FraudsterRegistrationJob_FailureDetails'
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The service-generated identifier for the fraudster registration
              job.
          title: JobId
        JobName:
          allOf:
          - $ref: '#/components/schemas/JobName'
          - description: The client-provided name for the fraudster registration job.
          title: JobName
        JobProgress:
          $ref: '#/components/schemas/FraudsterRegistrationJob_JobProgress'
        JobStatus:
          allOf:
          - $ref: '#/components/schemas/FraudsterRegistrationJobStatus'
          - description: The current status of the fraudster registration job.
          title: JobStatus
      title: FraudsterRegistrationJobSummary
      type: object
    FraudsterRegistrationJobSummaries:
      items:
        $ref: '#/components/schemas/FraudsterRegistrationJobSummary'
      type: array
    FraudsterSummary:
      description: 'Contains a summary of information about a fraudster. '
      properties:
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp of when the fraudster summary was created.
          title: CreatedAt
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: The identifier of the domain that contains the fraudster
              summary.
          title: DomainId
        GeneratedFraudsterId:
          allOf:
          - $ref: '#/components/schemas/GeneratedFraudsterId'
          - description: The service-generated identifier for the fraudster.
          title: GeneratedFraudsterId
        WatchlistIds:
          allOf:
          - $ref: '#/components/schemas/ResponseWatchlistIds'
          - description: The identifier of the watchlists the fraudster is a part
              of.
          title: WatchlistIds
      title: FraudsterSummary
      type: object
    FraudsterSummaries:
      items:
        $ref: '#/components/schemas/FraudsterSummary'
      type: array
    S3Uri:
      maxLength: 1024
      minLength: 0
      pattern: "^s3://[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9](/.*)?$"
      type: string
    KmsKeyId:
      maxLength: 2048
      minLength: 1
      type: string
    MaxResultsForListDomainFe:
      maximum: 10
      minimum: 1
      type: integer
    NextToken:
      maxLength: 8192
      minLength: 0
      pattern: "^\\p{ASCII}{0,8192}$"
      type: string
    MaxResultsForList:
      maximum: 100
      minimum: 1
      type: integer
    SpeakerEnrollmentJobStatus:
      enum:
      - SUBMITTED
      - IN_PROGRESS
      - COMPLETED
      - COMPLETED_WITH_ERRORS
      - FAILED
      title: SpeakerEnrollmentJobStatus
      type: string
    SpeakerEnrollmentJobSummaries:
      items:
        $ref: '#/components/schemas/SpeakerEnrollmentJobSummary'
      type: array
    SpeakerSummaries:
      items:
        $ref: '#/components/schemas/SpeakerSummary'
      type: array
    WatchlistSummaries:
      items:
        $ref: '#/components/schemas/WatchlistSummary'
      type: array
    RegistrationConfigWatchlistIds:
      items:
        $ref: '#/components/schemas/WatchlistId'
      maxItems: 1
      minItems: 1
      type: array
    ServerSideEncryptionUpdateStatus:
      enum:
      - IN_PROGRESS
      - COMPLETED
      - FAILED
      title: ServerSideEncryptionUpdateStatus
      type: string
    SpeakerStatus:
      enum:
      - ENROLLED
      - EXPIRED
      - OPTED_OUT
      - PENDING
      title: SpeakerStatus
      type: string
    SpeakerEnrollmentJobSummary:
      description: Contains a summary of information about a speaker enrollment job.
      properties:
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A timestamp of when of the speaker enrollment job was created.
          title: CreatedAt
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: The identifier of the domain that contains the speaker enrollment
              job.
          title: DomainId
        EndedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A timestamp of when the speaker enrollment job ended.
          title: EndedAt
        FailureDetails:
          $ref: '#/components/schemas/FraudsterRegistrationJob_FailureDetails'
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The service-generated identifier for the speaker enrollment
              job.
          title: JobId
        JobName:
          allOf:
          - $ref: '#/components/schemas/JobName'
          - description: The client-provided name for the speaker enrollment job.
          title: JobName
        JobProgress:
          $ref: '#/components/schemas/SpeakerEnrollmentJobSummary_JobProgress'
        JobStatus:
          allOf:
          - $ref: '#/components/schemas/SpeakerEnrollmentJobStatus'
          - description: The current status of the speaker enrollment job.
          title: JobStatus
      title: SpeakerEnrollmentJobSummary
      type: object
    SpeakerSummary:
      description: Contains a summary of information about a speaker.
      properties:
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'A timestamp showing the speaker''s creation time. '
          title: CreatedAt
        CustomerSpeakerId:
          allOf:
          - $ref: '#/components/schemas/CustomerSpeakerId'
          - description: The client-provided identifier for the speaker.
          title: CustomerSpeakerId
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: The identifier of the domain that contains the speaker.
          title: DomainId
        GeneratedSpeakerId:
          allOf:
          - $ref: '#/components/schemas/GeneratedSpeakerId'
          - description: 'The service-generated identifier for the speaker. '
          title: GeneratedSpeakerId
        LastAccessedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The timestamp when the speaker was last accessed for enrollment,\
              \ re-enrollment or a successful authentication. This timestamp is accurate\
              \ to one hour."
          title: LastAccessedAt
        Status:
          allOf:
          - $ref: '#/components/schemas/SpeakerStatus'
          - description: The current status of the speaker.
          title: Status
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A timestamp showing the speaker's last update.
          title: UpdatedAt
      title: SpeakerSummary
      type: object
    TagKey:
      format: password
      maxLength: 128
      minLength: 1
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      title: TagKey
      type: string
    TagValue:
      format: password
      maxLength: 256
      minLength: 0
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      type: string
    Tag:
      description: "The tags used to organize, track, or control access for this resource.\
        \ For example, { \"tags\": {\"key1\":\"value1\", \"key2\":\"value2\"} }."
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: "The first part of a key:value pair that forms a tag associated\
              \ with a given resource. For example, in the tag 'Department':'Sales',\
              \ the key is 'Department'. "
          title: Key
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: "The second part of a key:value pair that forms a tag associated\
              \ with a given resource. For example, in the tag 'Department':'Sales',\
              \ the value is 'Sales'. "
          title: Value
      required:
      - Key
      - Value
      title: Tag
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 200
      minItems: 0
      type: array
    WatchlistSummary:
      description: Contains a summary of information about a watchlist.
      properties:
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp of when the watchlist was created.
          title: CreatedAt
        DefaultWatchlist:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether the specified watchlist is the default watchlist
              of a domain.
          title: DefaultWatchlist
        Description:
          allOf:
          - $ref: '#/components/schemas/WatchlistDescription'
          - description: The description of the watchlist.
          title: Description
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          - description: The identifier of the domain that contains the watchlist.
          title: DomainId
        Name:
          allOf:
          - $ref: '#/components/schemas/WatchlistName'
          - description: The name for the watchlist.
          title: Name
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp of when the watchlist was last updated.
          title: UpdatedAt
        WatchlistId:
          allOf:
          - $ref: '#/components/schemas/WatchlistId'
          - description: The identifier of the watchlist.
          title: WatchlistId
      title: WatchlistSummary
      type: object
    CreateDomainResponse_Domain:
      allOf:
      - $ref: '#/components/schemas/Domain'
      - description: Information about the newly created domain.
      example:
        ServerSideEncryptionUpdateDetails:
          UpdateStatus: ""
          Message: ""
          OldKmsKeyId: ""
        Description: ""
        DomainId: ""
        CreatedAt: ""
        ServerSideEncryptionConfiguration:
          KmsKeyId: ""
        WatchlistDetails:
          DefaultWatchlistId: ""
        Arn: ""
        UpdatedAt: ""
        DomainStatus: ""
        Name: ""
      title: CreateDomainResponse_Domain
    CreateDomainRequest_ServerSideEncryptionConfiguration:
      allOf:
      - $ref: '#/components/schemas/ServerSideEncryptionConfiguration'
      - description: "The configuration, containing the KMS key identifier, to be\
          \ used by Voice ID for the server-side encryption of your data. Refer to\
          \ <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/encryption-at-rest.html#encryption-at-rest-voiceid\"\
          > Amazon Connect Voice ID encryption at rest</a> for more details on how\
          \ the KMS key is used. "
      example:
        KmsKeyId: ""
      title: CreateDomainRequest_ServerSideEncryptionConfiguration
    CreateWatchlistResponse_Watchlist:
      allOf:
      - $ref: '#/components/schemas/Watchlist'
      - description: Information about the newly created watchlist.
      example:
        Description: ""
        DomainId: ""
        DefaultWatchlist: ""
        CreatedAt: ""
        WatchlistId: ""
        UpdatedAt: ""
        Name: ""
      title: CreateWatchlistResponse_Watchlist
    DescribeDomainResponse_Domain:
      allOf:
      - $ref: '#/components/schemas/Domain'
      - description: Information about the specified domain.
      example:
        ServerSideEncryptionUpdateDetails:
          UpdateStatus: ""
          Message: ""
          OldKmsKeyId: ""
        Description: ""
        DomainId: ""
        CreatedAt: ""
        ServerSideEncryptionConfiguration:
          KmsKeyId: ""
        WatchlistDetails:
          DefaultWatchlistId: ""
        Arn: ""
        UpdatedAt: ""
        DomainStatus: ""
        Name: ""
      title: DescribeDomainResponse_Domain
    DescribeFraudsterResponse_Fraudster:
      allOf:
      - $ref: '#/components/schemas/Fraudster'
      - description: Information about the specified fraudster.
      example:
        GeneratedFraudsterId: ""
        DomainId: ""
        CreatedAt: ""
        WatchlistIds: ""
      title: DescribeFraudsterResponse_Fraudster
    DescribeFraudsterRegistrationJobResponse_Job:
      allOf:
      - $ref: '#/components/schemas/FraudsterRegistrationJob'
      - description: Contains details about the specified fraudster registration job.
      example:
        JobStatus: ""
        DataAccessRoleArn: ""
        DomainId: ""
        OutputDataConfig:
          KmsKeyId: ""
          S3Uri: ""
        RegistrationConfig:
          DuplicateRegistrationAction: ""
          FraudsterSimilarityThreshold: ""
          WatchlistIds: ""
        CreatedAt: ""
        JobName: ""
        FailureDetails:
          Message: ""
          StatusCode: ""
        InputDataConfig:
          S3Uri: ""
        EndedAt: ""
        JobId: ""
        JobProgress:
          PercentComplete: ""
      title: DescribeFraudsterRegistrationJobResponse_Job
    DescribeSpeakerResponse_Speaker:
      allOf:
      - $ref: '#/components/schemas/Speaker'
      - description: Information about the specified speaker.
      example:
        Status: ""
        DomainId: ""
        GeneratedSpeakerId: ""
        CreatedAt: ""
        CustomerSpeakerId: ""
        UpdatedAt: ""
        LastAccessedAt: ""
      title: DescribeSpeakerResponse_Speaker
    DescribeSpeakerEnrollmentJobResponse_Job:
      allOf:
      - $ref: '#/components/schemas/SpeakerEnrollmentJob'
      - description: Contains details about the specified speaker enrollment job.
      example:
        EnrollmentConfig:
          FraudDetectionConfig:
            FraudDetectionAction: ""
            RiskThreshold: ""
            WatchlistIds: ""
          ExistingEnrollmentAction: ""
        JobStatus: ""
        DataAccessRoleArn: ""
        DomainId: ""
        OutputDataConfig:
          KmsKeyId: ""
          S3Uri: ""
        CreatedAt: ""
        JobName: ""
        FailureDetails:
          Message: ""
          StatusCode: ""
        InputDataConfig:
          S3Uri: ""
        EndedAt: ""
        JobId: ""
        JobProgress:
          PercentComplete: ""
      title: DescribeSpeakerEnrollmentJobResponse_Job
    DescribeWatchlistResponse_Watchlist:
      allOf:
      - $ref: '#/components/schemas/Watchlist'
      - description: Information about the specified watchlist.
      example:
        Description: ""
        DomainId: ""
        DefaultWatchlist: ""
        CreatedAt: ""
        WatchlistId: ""
        UpdatedAt: ""
        Name: ""
      title: DescribeWatchlistResponse_Watchlist
    EvaluateSessionResponse_AuthenticationResult:
      allOf:
      - $ref: '#/components/schemas/AuthenticationResult'
      - description: "Details resulting from the authentication process, such as authentication\
          \ decision and authentication score."
      example:
        Score: ""
        Configuration:
          AcceptanceThreshold: ""
        GeneratedSpeakerId: ""
        AudioAggregationEndedAt: ""
        CustomerSpeakerId: ""
        AuthenticationResultId: ""
        AudioAggregationStartedAt: ""
        Decision: ""
      title: EvaluateSessionResponse_AuthenticationResult
    EvaluateSessionResponse_FraudDetectionResult:
      allOf:
      - $ref: '#/components/schemas/FraudDetectionResult'
      - description: "Details resulting from the fraud detection process, such as\
          \ fraud detection decision and risk score."
      example:
        Configuration:
          RiskThreshold: ""
          WatchlistId: ""
        AudioAggregationEndedAt: ""
        FraudDetectionResultId: ""
        AudioAggregationStartedAt: ""
        Reasons: ""
        Decision: ""
        RiskDetails:
          KnownFraudsterRisk:
            GeneratedFraudsterId: ""
            RiskScore: ""
          VoiceSpoofingRisk:
            RiskScore: ""
      title: EvaluateSessionResponse_FraudDetectionResult
    OptOutSpeakerResponse_Speaker:
      allOf:
      - $ref: '#/components/schemas/Speaker'
      - description: Details about the opted-out speaker.
      example:
        Status: ""
        DomainId: ""
        GeneratedSpeakerId: ""
        CreatedAt: ""
        CustomerSpeakerId: ""
        UpdatedAt: ""
        LastAccessedAt: ""
      title: OptOutSpeakerResponse_Speaker
    StartFraudsterRegistrationJobResponse_Job:
      allOf:
      - $ref: '#/components/schemas/FraudsterRegistrationJob'
      - description: Details about the started fraudster registration job.
      example:
        JobStatus: ""
        DataAccessRoleArn: ""
        DomainId: ""
        OutputDataConfig:
          KmsKeyId: ""
          S3Uri: ""
        RegistrationConfig:
          DuplicateRegistrationAction: ""
          FraudsterSimilarityThreshold: ""
          WatchlistIds: ""
        CreatedAt: ""
        JobName: ""
        FailureDetails:
          Message: ""
          StatusCode: ""
        InputDataConfig:
          S3Uri: ""
        EndedAt: ""
        JobId: ""
        JobProgress:
          PercentComplete: ""
      title: StartFraudsterRegistrationJobResponse_Job
    StartFraudsterRegistrationJobRequest_InputDataConfig:
      allOf:
      - $ref: '#/components/schemas/InputDataConfig'
      - description: The input data config containing an S3 URI for the input manifest
          file that contains the list of fraudster registration requests.
      example:
        S3Uri: ""
      title: StartFraudsterRegistrationJobRequest_InputDataConfig
    StartFraudsterRegistrationJobRequest_OutputDataConfig:
      allOf:
      - $ref: '#/components/schemas/OutputDataConfig'
      - description: The output data config containing the S3 location where Voice
          ID writes the job output file; you must also include a KMS key ID to encrypt
          the file.
      example:
        KmsKeyId: ""
        S3Uri: ""
      title: StartFraudsterRegistrationJobRequest_OutputDataConfig
    StartFraudsterRegistrationJobRequest_RegistrationConfig:
      allOf:
      - $ref: '#/components/schemas/RegistrationConfig'
      - description: "The registration config containing details such as the action\
          \ to take when a duplicate fraudster is detected, and the similarity threshold\
          \ to use for detecting a duplicate fraudster. "
      example:
        DuplicateRegistrationAction: ""
        FraudsterSimilarityThreshold: ""
        WatchlistIds: ""
      title: StartFraudsterRegistrationJobRequest_RegistrationConfig
    StartSpeakerEnrollmentJobResponse_Job:
      allOf:
      - $ref: '#/components/schemas/SpeakerEnrollmentJob'
      - description: Details about the started speaker enrollment job.
      example:
        EnrollmentConfig:
          FraudDetectionConfig:
            FraudDetectionAction: ""
            RiskThreshold: ""
            WatchlistIds: ""
          ExistingEnrollmentAction: ""
        JobStatus: ""
        DataAccessRoleArn: ""
        DomainId: ""
        OutputDataConfig:
          KmsKeyId: ""
          S3Uri: ""
        CreatedAt: ""
        JobName: ""
        FailureDetails:
          Message: ""
          StatusCode: ""
        InputDataConfig:
          S3Uri: ""
        EndedAt: ""
        JobId: ""
        JobProgress:
          PercentComplete: ""
      title: StartSpeakerEnrollmentJobResponse_Job
    StartSpeakerEnrollmentJobRequest_EnrollmentConfig:
      allOf:
      - $ref: '#/components/schemas/EnrollmentConfig'
      - description: The enrollment config that contains details such as the action
          to take when a speaker is already enrolled in Voice ID or when a speaker
          is identified as a fraudster.
      example:
        FraudDetectionConfig:
          FraudDetectionAction: ""
          RiskThreshold: ""
          WatchlistIds: ""
        ExistingEnrollmentAction: ""
      title: StartSpeakerEnrollmentJobRequest_EnrollmentConfig
    StartSpeakerEnrollmentJobRequest_InputDataConfig:
      allOf:
      - $ref: '#/components/schemas/InputDataConfig'
      - description: The input data config containing the S3 location for the input
          manifest file that contains the list of speaker enrollment requests.
      example:
        S3Uri: ""
      title: StartSpeakerEnrollmentJobRequest_InputDataConfig
    UpdateDomainResponse_Domain:
      allOf:
      - $ref: '#/components/schemas/Domain'
      - description: Details about the updated domain
      example:
        ServerSideEncryptionUpdateDetails:
          UpdateStatus: ""
          Message: ""
          OldKmsKeyId: ""
        Description: ""
        DomainId: ""
        CreatedAt: ""
        ServerSideEncryptionConfiguration:
          KmsKeyId: ""
        WatchlistDetails:
          DefaultWatchlistId: ""
        Arn: ""
        UpdatedAt: ""
        DomainStatus: ""
        Name: ""
      title: UpdateDomainResponse_Domain
    UpdateDomainRequest_ServerSideEncryptionConfiguration:
      allOf:
      - $ref: '#/components/schemas/ServerSideEncryptionConfiguration'
      - description: "The configuration, containing the KMS key identifier, to be\
          \ used by Voice ID for the server-side encryption of your data. Changing\
          \ the domain's associated KMS key immediately triggers an asynchronous process\
          \ to remove dependency on the old KMS key, such that the domain's data can\
          \ only be accessed using the new KMS key. The domain's <code>ServerSideEncryptionUpdateDetails</code>\
          \ contains the details for this process."
      example:
        KmsKeyId: ""
      title: UpdateDomainRequest_ServerSideEncryptionConfiguration
    UpdateWatchlistResponse_Watchlist:
      allOf:
      - $ref: '#/components/schemas/Watchlist'
      - description: Details about the updated watchlist.
      example:
        Description: ""
        DomainId: ""
        DefaultWatchlist: ""
        CreatedAt: ""
        WatchlistId: ""
        UpdatedAt: ""
        Name: ""
      title: UpdateWatchlistResponse_Watchlist
    AuthenticationResult_Configuration:
      allOf:
      - $ref: '#/components/schemas/AuthenticationConfiguration'
      - description: The <code>AuthenticationConfiguration</code> used to generate
          this authentication result.
      example:
        AcceptanceThreshold: ""
      title: AuthenticationResult_Configuration
    Domain_ServerSideEncryptionConfiguration:
      allOf:
      - $ref: '#/components/schemas/ServerSideEncryptionConfiguration'
      - description: The server-side encryption configuration containing the KMS key
          identifier you want Voice ID to use to encrypt your data.
      example:
        KmsKeyId: ""
      title: Domain_ServerSideEncryptionConfiguration
    Domain_ServerSideEncryptionUpdateDetails:
      allOf:
      - $ref: '#/components/schemas/ServerSideEncryptionUpdateDetails'
      - description: "Details about the most recent server-side encryption configuration\
          \ update. When the server-side encryption configuration is changed, dependency\
          \ on the old KMS key is removed through an asynchronous process. When this\
          \ update is complete, the domain's data can only be accessed using the new\
          \ KMS key."
      example:
        UpdateStatus: ""
        Message: ""
        OldKmsKeyId: ""
      title: Domain_ServerSideEncryptionUpdateDetails
    Domain_WatchlistDetails:
      allOf:
      - $ref: '#/components/schemas/WatchlistDetails'
      - description: The watchlist details of a domain. Contains the default watchlist
          ID of the domain.
      example:
        DefaultWatchlistId: ""
      title: Domain_WatchlistDetails
    FraudsterRegistrationJob_FailureDetails:
      allOf:
      - $ref: '#/components/schemas/FailureDetails'
      - description: "Contains details that are populated when an entire batch job\
          \ fails. In cases of individual registration job failures, the batch job\
          \ as a whole doesn't fail; it is completed with a <code>JobStatus</code>\
          \ of <code>COMPLETED_WITH_ERRORS</code>. You can use the job output file\
          \ to identify the individual registration requests that failed."
      example:
        Message: ""
        StatusCode: ""
      title: FraudsterRegistrationJob_FailureDetails
    FraudsterRegistrationJob_InputDataConfig:
      allOf:
      - $ref: '#/components/schemas/InputDataConfig'
      - description: The input data config containing an S3 URI for the input manifest
          file that contains the list of fraudster registration job requests.
      example:
        S3Uri: ""
      title: FraudsterRegistrationJob_InputDataConfig
    FraudsterRegistrationJob_JobProgress:
      allOf:
      - $ref: '#/components/schemas/JobProgress'
      - description: Shows the completed percentage of registration requests listed
          in the input file.
      example:
        PercentComplete: ""
      title: FraudsterRegistrationJob_JobProgress
    FraudsterRegistrationJob_OutputDataConfig:
      allOf:
      - $ref: '#/components/schemas/OutputDataConfig'
      - description: The output data config containing the S3 location where you want
          Voice ID to write your job output file; you must also include a KMS key
          ID in order to encrypt the file.
      example:
        KmsKeyId: ""
        S3Uri: ""
      title: FraudsterRegistrationJob_OutputDataConfig
    FraudsterRegistrationJob_RegistrationConfig:
      allOf:
      - $ref: '#/components/schemas/RegistrationConfig'
      - description: "The registration config containing details such as the action\
          \ to take when a duplicate fraudster is detected, and the similarity threshold\
          \ to use for detecting a duplicate fraudster."
      example:
        DuplicateRegistrationAction: ""
        FraudsterSimilarityThreshold: ""
        WatchlistIds: ""
      title: FraudsterRegistrationJob_RegistrationConfig
    SpeakerEnrollmentJob_EnrollmentConfig:
      allOf:
      - $ref: '#/components/schemas/EnrollmentConfig'
      - description: "The configuration that defines the action to take when the speaker\
          \ is already enrolled in Voice ID, and the <code>FraudDetectionConfig</code>\
          \ to use."
      example:
        FraudDetectionConfig:
          FraudDetectionAction: ""
          RiskThreshold: ""
          WatchlistIds: ""
        ExistingEnrollmentAction: ""
      title: SpeakerEnrollmentJob_EnrollmentConfig
    SpeakerEnrollmentJob_InputDataConfig:
      allOf:
      - $ref: '#/components/schemas/InputDataConfig'
      - description: The input data config containing an S3 URI for the input manifest
          file that contains the list of speaker enrollment job requests.
      example:
        S3Uri: ""
      title: SpeakerEnrollmentJob_InputDataConfig
    SpeakerEnrollmentJob_JobProgress:
      allOf:
      - $ref: '#/components/schemas/JobProgress'
      - description: Provides details on job progress. This field shows the completed
          percentage of registration requests listed in the input file.
      example:
        PercentComplete: ""
      title: SpeakerEnrollmentJob_JobProgress
    DomainSummary_WatchlistDetails:
      allOf:
      - $ref: '#/components/schemas/WatchlistDetails'
      - description: 'Provides information about <code>watchlistDetails</code> and
          <code>DefaultWatchlistID</code>. '
      title: DomainSummary_WatchlistDetails
    EnrollmentConfig_FraudDetectionConfig:
      allOf:
      - $ref: '#/components/schemas/EnrollmentJobFraudDetectionConfig'
      - description: The fraud detection configuration to use for the speaker enrollment
          job.
      example:
        FraudDetectionAction: ""
        RiskThreshold: ""
        WatchlistIds: ""
      title: EnrollmentConfig_FraudDetectionConfig
    FraudDetectionResult_Configuration:
      allOf:
      - $ref: '#/components/schemas/FraudDetectionConfiguration'
      - description: The <code>FraudDetectionConfiguration</code> used to generate
          this fraud detection result.
      example:
        RiskThreshold: ""
        WatchlistId: ""
      title: FraudDetectionResult_Configuration
    FraudDetectionResult_RiskDetails:
      allOf:
      - $ref: '#/components/schemas/FraudRiskDetails'
      - description: "Details about each risk analyzed for this speaker. Currently,\
          \ this contains KnownFraudsterRisk and VoiceSpoofingRisk details."
      example:
        KnownFraudsterRisk:
          GeneratedFraudsterId: ""
          RiskScore: ""
        VoiceSpoofingRisk:
          RiskScore: ""
      title: FraudDetectionResult_RiskDetails
    FraudRiskDetails_KnownFraudsterRisk:
      allOf:
      - $ref: '#/components/schemas/KnownFraudsterRisk'
      - description: The details resulting from 'Known Fraudster Risk' analysis of
          the speaker.
      example:
        GeneratedFraudsterId: ""
        RiskScore: ""
      title: FraudRiskDetails_KnownFraudsterRisk
    FraudRiskDetails_VoiceSpoofingRisk:
      allOf:
      - $ref: '#/components/schemas/VoiceSpoofingRisk'
      - description: The details resulting from 'Voice Spoofing Risk' analysis of
          the speaker.
      example:
        RiskScore: ""
      title: FraudRiskDetails_VoiceSpoofingRisk
    SpeakerEnrollmentJobSummary_JobProgress:
      allOf:
      - $ref: '#/components/schemas/JobProgress'
      - description: Provides details regarding job progress. This field shows the
          completed percentage of enrollment requests listed in the input file.
      title: SpeakerEnrollmentJobSummary_JobProgress
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
