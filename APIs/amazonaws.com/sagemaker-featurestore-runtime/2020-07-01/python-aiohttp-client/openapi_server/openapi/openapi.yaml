openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p>Contains all data plane API operations and data types for the Amazon\
    \ SageMaker Feature Store. Use this API to put, delete, and retrieve (get) features\
    \ from a feature store.</p> <p>Use the following operations to configure your\
    \ <code>OnlineStore</code> and <code>OfflineStore</code> features, and to create\
    \ and manage feature groups:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateFeatureGroup.html\"\
    >CreateFeatureGroup</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_DeleteFeatureGroup.html\"\
    >DeleteFeatureGroup</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_DescribeFeatureGroup.html\"\
    >DescribeFeatureGroup</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ListFeatureGroups.html\"\
    >ListFeatureGroups</a> </p> </li> </ul>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon SageMaker Feature Store Runtime
  version: 2020-07-01
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: sagemaker-featurestore-runtime
  x-aws-signingName: sagemaker
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/sagemaker-featurestore-runtime-2020-07-01.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/sagemaker/
servers:
- description: The Amazon SageMaker Feature Store Runtime multi-region endpoint
  url: "http://featurestore-runtime.sagemaker.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon SageMaker Feature Store Runtime multi-region endpoint
  url: "https://featurestore-runtime.sagemaker.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon SageMaker Feature Store Runtime endpoint for China (Beijing)
    and China (Ningxia)
  url: "http://featurestore-runtime.sagemaker.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon SageMaker Feature Store Runtime endpoint for China (Beijing)
    and China (Ningxia)
  url: "https://featurestore-runtime.sagemaker.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /BatchGetRecord:
    post:
      description: Retrieves a batch of <code>Records</code> from a <code>FeatureGroup</code>.
      operationId: batch_get_record
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchGetRecord_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetRecordResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ValidationError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailure'
          description: InternalFailure
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessForbidden'
          description: AccessForbidden
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /FeatureGroup/{FeatureGroupName}:
    put:
      description: "<p>The <code>PutRecord</code> API is used to ingest a list of\
        \ <code>Records</code> into your feature group. </p> <p>If a new record’s\
        \ <code>EventTime</code> is greater, the new record is written to both the\
        \ <code>OnlineStore</code> and <code>OfflineStore</code>. Otherwise, the record\
        \ is a historic record and it is written only to the <code>OfflineStore</code>.\
        \ </p> <p>You can specify the ingestion to be applied to the <code>OnlineStore</code>,\
        \ <code>OfflineStore</code>, or both by using the <code>TargetStores</code>\
        \ request parameter. </p> <p>You can set the ingested record to expire at\
        \ a given time to live (TTL) duration after the record’s event time, <code>ExpiresAt</code>\
        \ = <code>EventTime</code> + <code>TtlDuration</code>, by specifying the <code>TtlDuration</code>\
        \ parameter. A record level <code>TtlDuration</code> is set when specifying\
        \ the <code>TtlDuration</code> parameter using the <code>PutRecord</code>\
        \ API call. If the input <code>TtlDuration</code> is <code>null</code> or\
        \ unspecified, <code>TtlDuration</code> is set to the default feature group\
        \ level <code>TtlDuration</code>. A record level <code>TtlDuration</code>\
        \ supersedes the group level <code>TtlDuration</code>.</p>"
      operationId: put_record
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name or Amazon Resource Name (ARN) of the feature group that
          you want to insert the record into.
        explode: false
        in: path
        name: FeatureGroupName
        required: true
        schema:
          maxLength: 150
          minLength: 1
          pattern: "(arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:feature-group/)?([a-zA-Z0-9]([-_]*[a-zA-Z0-9]){0,63})"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutRecord_request'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ValidationError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailure'
          description: InternalFailure
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessForbidden'
          description: AccessForbidden
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /FeatureGroup/{FeatureGroupName}#RecordIdentifierValueAsString:
    get:
      description: "Use for <code>OnlineStore</code> serving from a <code>FeatureStore</code>.\
        \ Only the latest records stored in the <code>OnlineStore</code> can be retrieved.\
        \ If no Record with <code>RecordIdentifierValue</code> is found, then an empty\
        \ result is returned. "
      operationId: get_record
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name or Amazon Resource Name (ARN) of the feature group from
          which you want to retrieve a record.
        explode: false
        in: path
        name: FeatureGroupName
        required: true
        schema:
          maxLength: 150
          minLength: 1
          pattern: "(arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:feature-group/)?([a-zA-Z0-9]([-_]*[a-zA-Z0-9]){0,63})"
          type: string
        style: simple
      - description: 'The value that corresponds to <code>RecordIdentifier</code>
          type and uniquely identifies the record in the <code>FeatureGroup</code>. '
        explode: true
        in: query
        name: RecordIdentifierValueAsString
        required: true
        schema:
          maxLength: 358400
          pattern: .*
          type: string
        style: form
      - description: "List of names of Features to be retrieved. If not specified,\
          \ the latest value for all the Features are returned."
        explode: true
        in: query
        name: FeatureName
        required: false
        schema:
          items:
            $ref: '#/components/schemas/FeatureName'
          minItems: 1
          type: array
        style: form
      - description: "Parameter to request <code>ExpiresAt</code> in response. If\
          \ <code>Enabled</code>, <code>GetRecord</code> will return the value of\
          \ <code>ExpiresAt</code>, if it is not null. If <code>Disabled</code> and\
          \ null, <code>GetRecord</code> will return null."
        explode: true
        in: query
        name: ExpirationTimeResponse
        required: false
        schema:
          enum:
          - Enabled
          - Disabled
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecordResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ValidationError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
          description: ResourceNotFound
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailure'
          description: InternalFailure
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessForbidden'
          description: AccessForbidden
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /FeatureGroup/{FeatureGroupName}#RecordIdentifierValueAsString&EventTime:
    delete:
      description: "<p>Deletes a <code>Record</code> from a <code>FeatureGroup</code>\
        \ in the <code>OnlineStore</code>. Feature Store supports both <code>SoftDelete</code>\
        \ and <code>HardDelete</code>. For <code>SoftDelete</code> (default), feature\
        \ columns are set to <code>null</code> and the record is no longer retrievable\
        \ by <code>GetRecord</code> or <code>BatchGetRecord</code>. For <code>HardDelete</code>,\
        \ the complete <code>Record</code> is removed from the <code>OnlineStore</code>.\
        \ In both cases, Feature Store appends the deleted record marker to the <code>OfflineStore</code>\
        \ with feature values set to <code>null</code>, <code>is_deleted</code> value\
        \ set to <code>True</code>, and <code>EventTime</code> set to the delete input\
        \ <code>EventTime</code>.</p> <p>Note that the <code>EventTime</code> specified\
        \ in <code>DeleteRecord</code> should be set later than the <code>EventTime</code>\
        \ of the existing record in the <code>OnlineStore</code> for that <code>RecordIdentifer</code>.\
        \ If it is not, the deletion does not occur:</p> <ul> <li> <p>For <code>SoftDelete</code>,\
        \ the existing (undeleted) record remains in the <code>OnlineStore</code>,\
        \ though the delete record marker is still written to the <code>OfflineStore</code>.</p>\
        \ </li> <li> <p> <code>HardDelete</code> returns <code>EventTime</code>: <code>400\
        \ ValidationException</code> to indicate that the delete operation failed.\
        \ No delete record marker is written to the <code>OfflineStore</code>.</p>\
        \ </li> </ul>"
      operationId: delete_record
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: 'The name or Amazon Resource Name (ARN) of the feature group
          to delete the record from. '
        explode: false
        in: path
        name: FeatureGroupName
        required: true
        schema:
          maxLength: 150
          minLength: 1
          pattern: "(arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:feature-group/)?([a-zA-Z0-9]([-_]*[a-zA-Z0-9]){0,63})"
          type: string
        style: simple
      - description: "The value for the <code>RecordIdentifier</code> that uniquely\
          \ identifies the record, in string format. "
        explode: true
        in: query
        name: RecordIdentifierValueAsString
        required: true
        schema:
          maxLength: 358400
          pattern: .*
          type: string
        style: form
      - description: Timestamp indicating when the deletion event occurred. <code>EventTime</code>
          can be used to query data at a certain point in time.
        explode: true
        in: query
        name: EventTime
        required: true
        schema:
          maxLength: 358400
          pattern: .*
          type: string
        style: form
      - description: "A list of stores from which you're deleting the record. By default,\
          \ Feature Store deletes the record from all of the stores that you're using\
          \ for the <code>FeatureGroup</code>."
        explode: true
        in: query
        name: TargetStores
        required: false
        schema:
          items:
            $ref: '#/components/schemas/TargetStore'
          maxItems: 2
          minItems: 1
          type: array
        style: form
      - description: "The name of the deletion mode for deleting the record. By default,\
          \ the deletion mode is set to <code>SoftDelete</code>."
        explode: true
        in: query
        name: DeletionMode
        required: false
        schema:
          enum:
          - SoftDelete
          - HardDelete
          type: string
        style: form
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ValidationError
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailure'
          description: InternalFailure
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessForbidden'
          description: AccessForbidden
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    BatchGetRecordResponse:
      example:
        Errors: ""
        Records: ""
        UnprocessedIdentifiers: ""
      properties:
        Records:
          allOf:
          - $ref: '#/components/schemas/BatchGetRecordResultDetails'
          - description: A list of Records you requested to be retrieved in batch.
          title: Records
        Errors:
          allOf:
          - $ref: '#/components/schemas/BatchGetRecordErrors'
          - description: A list of errors that have occurred when retrieving a batch
              of Records.
          title: Errors
        UnprocessedIdentifiers:
          allOf:
          - $ref: '#/components/schemas/UnprocessedIdentifiers'
          - description: "A unprocessed list of <code>FeatureGroup</code> names, with\
              \ their corresponding <code>RecordIdentifier</code> value, and Feature\
              \ name."
          title: UnprocessedIdentifiers
      required:
      - Errors
      - Records
      - UnprocessedIdentifiers
      title: BatchGetRecordResponse
      type: object
    BatchGetRecordIdentifier:
      description: The identifier that identifies the batch of Records you are retrieving
        in a batch.
      properties:
        FeatureGroupName:
          allOf:
          - $ref: '#/components/schemas/FeatureGroupNameOrArn'
          - description: The name or Amazon Resource Name (ARN) of the <code>FeatureGroup</code>
              containing the records you are retrieving in a batch.
          title: FeatureGroupName
        RecordIdentifiersValueAsString:
          allOf:
          - $ref: '#/components/schemas/RecordIdentifiers'
          - description: The value for a list of record identifiers in string format.
          title: RecordIdentifiersValueAsString
        FeatureNames:
          allOf:
          - $ref: '#/components/schemas/FeatureNames'
          - description: "List of names of Features to be retrieved. If not specified,\
              \ the latest value for all the Features are returned."
          title: FeatureNames
      required:
      - FeatureGroupName
      - RecordIdentifiersValueAsString
      title: BatchGetRecordIdentifier
      type: object
    ValidationError: {}
    InternalFailure: {}
    ServiceUnavailable: {}
    AccessForbidden: {}
    TargetStore:
      enum:
      - OnlineStore
      - OfflineStore
      title: TargetStore
      type: string
    GetRecordResponse:
      example:
        Record: ""
        ExpiresAt: ""
      properties:
        Record:
          allOf:
          - $ref: '#/components/schemas/Record'
          - description: The record you requested. A list of <code>FeatureValues</code>.
          title: Record
        ExpiresAt:
          allOf:
          - $ref: '#/components/schemas/ExpiresAt'
          - description: The <code>ExpiresAt</code> ISO string of the requested record.
          title: ExpiresAt
      title: GetRecordResponse
      type: object
    FeatureName:
      maxLength: 64
      minLength: 1
      pattern: "^[a-zA-Z0-9]([-_]*[a-zA-Z0-9]){0,63}"
      title: FeatureName
      type: string
    ResourceNotFound: {}
    FeatureValue:
      description: The value associated with a feature.
      properties:
        FeatureName:
          allOf:
          - $ref: '#/components/schemas/FeatureName'
          - description: The name of a feature that a feature value corresponds to.
          title: FeatureName
        ValueAsString:
          allOf:
          - $ref: '#/components/schemas/ValueAsString'
          - description: "The value associated with a feature, in string format. Note\
              \ that features types can be String, Integral, or Fractional. This value\
              \ represents all three types as a string."
          title: ValueAsString
      required:
      - FeatureName
      - ValueAsString
      title: FeatureValue
      type: object
    TtlDurationUnit:
      enum:
      - Seconds
      - Minutes
      - Hours
      - Days
      - Weeks
      title: TtlDurationUnit
      type: string
    TtlDurationValue:
      minimum: 1
      type: integer
    ValueAsString:
      maxLength: 358400
      pattern: .*
      title: ValueAsString
      type: string
    Message:
      maxLength: 2048
      type: string
    BatchGetRecordError:
      description: The error that has occurred when attempting to retrieve a batch
        of Records.
      properties:
        FeatureGroupName:
          allOf:
          - $ref: '#/components/schemas/ValueAsString'
          - description: The name of the feature group that the record belongs to.
          title: FeatureGroupName
        RecordIdentifierValueAsString:
          allOf:
          - $ref: '#/components/schemas/ValueAsString'
          - description: The value for the <code>RecordIdentifier</code> in string
              format of a Record from a <code>FeatureGroup</code> that is causing
              an error when attempting to be retrieved.
          title: RecordIdentifierValueAsString
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/ValueAsString'
          - description: "The error code of an error that has occurred when attempting\
              \ to retrieve a batch of Records. For more information on errors, see\
              \ <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_feature_store_GetRecord.html#API_feature_store_GetRecord_Errors\"\
              >Errors</a>."
          title: ErrorCode
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: The error message of an error that has occurred when attempting
              to retrieve a record in the batch.
          title: ErrorMessage
      required:
      - ErrorCode
      - ErrorMessage
      - FeatureGroupName
      - RecordIdentifierValueAsString
      title: BatchGetRecordError
      type: object
    BatchGetRecordErrors:
      items:
        $ref: '#/components/schemas/BatchGetRecordError'
      minItems: 0
      type: array
    FeatureGroupNameOrArn:
      maxLength: 150
      minLength: 1
      pattern: "(arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:feature-group/)?([a-zA-Z0-9]([-_]*[a-zA-Z0-9]){0,63})"
      type: string
    RecordIdentifiers:
      items:
        $ref: '#/components/schemas/ValueAsString'
      maxItems: 100
      minItems: 1
      type: array
    FeatureNames:
      items:
        $ref: '#/components/schemas/FeatureName'
      minItems: 1
      type: array
    BatchGetRecordIdentifiers:
      items:
        $ref: '#/components/schemas/BatchGetRecordIdentifier'
      maxItems: 10
      minItems: 1
      type: array
    ExpirationTimeResponse:
      enum:
      - Enabled
      - Disabled
      title: ExpirationTimeResponse
      type: string
    BatchGetRecordRequest:
      example:
        ExpirationTimeResponse: ""
        Identifiers: ""
      properties:
        Identifiers:
          allOf:
          - $ref: '#/components/schemas/BatchGetRecordIdentifiers'
          - description: "A list containing the name or Amazon Resource Name (ARN)\
              \ of the <code>FeatureGroup</code>, the list of names of <code>Feature</code>s\
              \ to be retrieved, and the corresponding <code>RecordIdentifier</code>\
              \ values as strings."
        ExpirationTimeResponse:
          allOf:
          - $ref: '#/components/schemas/ExpirationTimeResponse'
          - description: "Parameter to request <code>ExpiresAt</code> in response.\
              \ If <code>Enabled</code>, <code>BatchGetRecord</code> will return the\
              \ value of <code>ExpiresAt</code>, if it is not null. If <code>Disabled</code>\
              \ and null, <code>BatchGetRecord</code> will return null."
      required:
      - Identifiers
      title: BatchGetRecordRequest
      type: object
    BatchGetRecordResultDetails:
      items:
        $ref: '#/components/schemas/BatchGetRecordResultDetail'
      minItems: 0
      type: array
    UnprocessedIdentifiers:
      items:
        $ref: '#/components/schemas/BatchGetRecordIdentifier'
      minItems: 0
      type: array
    Record:
      items:
        $ref: '#/components/schemas/FeatureValue'
      minItems: 1
      type: array
    ExpiresAt:
      type: string
    BatchGetRecordResultDetail:
      description: The output of records that have been retrieved in a batch.
      properties:
        FeatureGroupName:
          allOf:
          - $ref: '#/components/schemas/ValueAsString'
          - description: The <code>FeatureGroupName</code> containing Records you
              retrieved in a batch.
          title: FeatureGroupName
        RecordIdentifierValueAsString:
          allOf:
          - $ref: '#/components/schemas/ValueAsString'
          - description: The value of the record identifier in string format.
          title: RecordIdentifierValueAsString
        Record:
          allOf:
          - $ref: '#/components/schemas/Record'
          - description: The <code>Record</code> retrieved.
          title: Record
        ExpiresAt:
          allOf:
          - $ref: '#/components/schemas/ExpiresAt'
          - description: The <code>ExpiresAt</code> ISO string of the requested record.
          title: ExpiresAt
      required:
      - FeatureGroupName
      - Record
      - RecordIdentifierValueAsString
      title: BatchGetRecordResultDetail
      type: object
    TargetStores:
      items:
        $ref: '#/components/schemas/TargetStore'
      maxItems: 2
      minItems: 1
      type: array
    DeletionMode:
      enum:
      - SoftDelete
      - HardDelete
      type: string
    DeleteRecordRequest:
      properties: {}
      title: DeleteRecordRequest
      type: object
    GetRecordRequest:
      properties: {}
      title: GetRecordRequest
      type: object
    TtlDuration:
      description: "Time to live duration, where the record is hard deleted after\
        \ the expiration time is reached; <code>ExpiresAt</code> = <code>EventTime</code>\
        \ + <code>TtlDuration</code>. For information on HardDelete, see the <a href=\"\
        https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_feature_store_DeleteRecord.html\"\
        >DeleteRecord</a> API in the Amazon SageMaker API Reference guide."
      properties:
        Unit:
          allOf:
          - $ref: '#/components/schemas/TtlDurationUnit'
          - description: ' <code>TtlDuration</code> time unit.'
          title: Unit
        Value:
          allOf:
          - $ref: '#/components/schemas/TtlDurationValue'
          - description: ' <code>TtlDuration</code> time value.'
          title: Value
      required:
      - Unit
      - Value
      title: TtlDuration
      type: object
    PutRecordRequest:
      example:
        TargetStores: ""
        Record: ""
        TtlDuration:
          Value: ""
          Unit: ""
      properties:
        Record:
          allOf:
          - $ref: '#/components/schemas/Record'
          - description: "<p>List of FeatureValues to be inserted. This will be a\
              \ full over-write. If you only want to update few of the feature values,\
              \ do the following:</p> <ul> <li> <p>Use <code>GetRecord</code> to retrieve\
              \ the latest record.</p> </li> <li> <p>Update the record returned from\
              \ <code>GetRecord</code>. </p> </li> <li> <p>Use <code>PutRecord</code>\
              \ to update feature values.</p> </li> </ul>"
        TargetStores:
          allOf:
          - $ref: '#/components/schemas/TargetStores'
          - description: "A list of stores to which you're adding the record. By default,\
              \ Feature Store adds the record to all of the stores that you're using\
              \ for the <code>FeatureGroup</code>."
        TtlDuration:
          $ref: '#/components/schemas/PutRecordRequest_TtlDuration'
      required:
      - Record
      title: PutRecordRequest
      type: object
    BatchGetRecord_request:
      properties:
        Identifiers:
          description: "A list containing the name or Amazon Resource Name (ARN) of\
            \ the <code>FeatureGroup</code>, the list of names of <code>Feature</code>s\
            \ to be retrieved, and the corresponding <code>RecordIdentifier</code>\
            \ values as strings."
          items:
            $ref: '#/components/schemas/BatchGetRecordIdentifier'
          maxItems: 10
          minItems: 1
          title: Identifiers
          type: array
        ExpirationTimeResponse:
          description: "Parameter to request <code>ExpiresAt</code> in response. If\
            \ <code>Enabled</code>, <code>BatchGetRecord</code> will return the value\
            \ of <code>ExpiresAt</code>, if it is not null. If <code>Disabled</code>\
            \ and null, <code>BatchGetRecord</code> will return null."
          enum:
          - Enabled
          - Disabled
          title: ExpirationTimeResponse
          type: string
      required:
      - Identifiers
      title: BatchGetRecord_request
      type: object
    PutRecord_request_TtlDuration:
      description: "Time to live duration, where the record is hard deleted after\
        \ the expiration time is reached; <code>ExpiresAt</code> = <code>EventTime</code>\
        \ + <code>TtlDuration</code>. For information on HardDelete, see the <a href=\"\
        https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_feature_store_DeleteRecord.html\"\
        >DeleteRecord</a> API in the Amazon SageMaker API Reference guide."
      properties:
        Unit:
          allOf:
          - $ref: '#/components/schemas/TtlDurationUnit'
          - description: ' <code>TtlDuration</code> time unit.'
          title: Unit
        Value:
          allOf:
          - $ref: '#/components/schemas/TtlDurationValue'
          - description: ' <code>TtlDuration</code> time value.'
          title: Value
      title: PutRecord_request_TtlDuration
      type: object
    PutRecord_request:
      properties:
        Record:
          description: "<p>List of FeatureValues to be inserted. This will be a full\
            \ over-write. If you only want to update few of the feature values, do\
            \ the following:</p> <ul> <li> <p>Use <code>GetRecord</code> to retrieve\
            \ the latest record.</p> </li> <li> <p>Update the record returned from\
            \ <code>GetRecord</code>. </p> </li> <li> <p>Use <code>PutRecord</code>\
            \ to update feature values.</p> </li> </ul>"
          items:
            $ref: '#/components/schemas/FeatureValue'
          minItems: 1
          title: Record
          type: array
        TargetStores:
          description: "A list of stores to which you're adding the record. By default,\
            \ Feature Store adds the record to all of the stores that you're using\
            \ for the <code>FeatureGroup</code>."
          items:
            $ref: '#/components/schemas/TargetStore'
          maxItems: 2
          minItems: 1
          title: TargetStores
          type: array
        TtlDuration:
          $ref: '#/components/schemas/PutRecord_request_TtlDuration'
      required:
      - Record
      title: PutRecord_request
      type: object
    PutRecordRequest_TtlDuration:
      allOf:
      - $ref: '#/components/schemas/TtlDuration'
      - description: "Time to live duration, where the record is hard deleted after\
          \ the expiration time is reached; <code>ExpiresAt</code> = <code>EventTime</code>\
          \ + <code>TtlDuration</code>. For information on HardDelete, see the <a\
          \ href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_feature_store_DeleteRecord.html\"\
          >DeleteRecord</a> API in the Amazon SageMaker API Reference guide."
      example:
        Value: ""
        Unit: ""
      title: PutRecordRequest_TtlDuration
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
