/**
 * Amazon SageMaker Feature Store Runtime
 * <p>Contains all data plane API operations and data types for the Amazon SageMaker Feature Store. Use this API to put, delete, and retrieve (get) features from a feature store.</p> <p>Use the following operations to configure your <code>OnlineStore</code> and <code>OfflineStore</code> features, and to create and manage feature groups:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateFeatureGroup.html\">CreateFeatureGroup</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_DeleteFeatureGroup.html\">DeleteFeatureGroup</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_DescribeFeatureGroup.html\">DescribeFeatureGroup</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ListFeatureGroups.html\">ListFeatureGroups</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2020-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BatchGetRecordIdentifier model module.
 * @module model/BatchGetRecordIdentifier
 * @version 2020-07-01
 */
class BatchGetRecordIdentifier {
    /**
     * Constructs a new <code>BatchGetRecordIdentifier</code>.
     * The identifier that identifies the batch of Records you are retrieving in a batch.
     * @alias module:model/BatchGetRecordIdentifier
     * @param featureGroupName {String} 
     * @param recordIdentifiersValueAsString {Array} 
     */
    constructor(featureGroupName, recordIdentifiersValueAsString) { 
        
        BatchGetRecordIdentifier.initialize(this, featureGroupName, recordIdentifiersValueAsString);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, featureGroupName, recordIdentifiersValueAsString) { 
        obj['FeatureGroupName'] = featureGroupName;
        obj['RecordIdentifiersValueAsString'] = recordIdentifiersValueAsString;
    }

    /**
     * Constructs a <code>BatchGetRecordIdentifier</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BatchGetRecordIdentifier} obj Optional instance to populate.
     * @return {module:model/BatchGetRecordIdentifier} The populated <code>BatchGetRecordIdentifier</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BatchGetRecordIdentifier();

            if (data.hasOwnProperty('FeatureGroupName')) {
                obj['FeatureGroupName'] = ApiClient.convertToType(data['FeatureGroupName'], 'String');
            }
            if (data.hasOwnProperty('RecordIdentifiersValueAsString')) {
                obj['RecordIdentifiersValueAsString'] = ApiClient.convertToType(data['RecordIdentifiersValueAsString'], Array);
            }
            if (data.hasOwnProperty('FeatureNames')) {
                obj['FeatureNames'] = ApiClient.convertToType(data['FeatureNames'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BatchGetRecordIdentifier</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BatchGetRecordIdentifier</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BatchGetRecordIdentifier.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `FeatureGroupName`
        if (data['FeatureGroupName']) { // data not null
          String.validateJSON(data['FeatureGroupName']);
        }
        // validate the optional field `RecordIdentifiersValueAsString`
        if (data['RecordIdentifiersValueAsString']) { // data not null
          Array.validateJSON(data['RecordIdentifiersValueAsString']);
        }
        // validate the optional field `FeatureNames`
        if (data['FeatureNames']) { // data not null
          Array.validateJSON(data['FeatureNames']);
        }

        return true;
    }


}

BatchGetRecordIdentifier.RequiredProperties = ["FeatureGroupName", "RecordIdentifiersValueAsString"];

/**
 * @member {String} FeatureGroupName
 */
BatchGetRecordIdentifier.prototype['FeatureGroupName'] = undefined;

/**
 * @member {Array} RecordIdentifiersValueAsString
 */
BatchGetRecordIdentifier.prototype['RecordIdentifiersValueAsString'] = undefined;

/**
 * @member {Array} FeatureNames
 */
BatchGetRecordIdentifier.prototype['FeatureNames'] = undefined;






export default BatchGetRecordIdentifier;

