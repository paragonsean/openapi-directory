/**
 * Amazon SageMaker Feature Store Runtime
 * <p>Contains all data plane API operations and data types for the Amazon SageMaker Feature Store. Use this API to put, delete, and retrieve (get) features from a feature store.</p> <p>Use the following operations to configure your <code>OnlineStore</code> and <code>OfflineStore</code> features, and to create and manage feature groups:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateFeatureGroup.html\">CreateFeatureGroup</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_DeleteFeatureGroup.html\">DeleteFeatureGroup</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_DescribeFeatureGroup.html\">DescribeFeatureGroup</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ListFeatureGroups.html\">ListFeatureGroups</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2020-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BatchGetRecordResponse model module.
 * @module model/BatchGetRecordResponse
 * @version 2020-07-01
 */
class BatchGetRecordResponse {
    /**
     * Constructs a new <code>BatchGetRecordResponse</code>.
     * @alias module:model/BatchGetRecordResponse
     * @param records {Array} 
     * @param errors {Array} 
     * @param unprocessedIdentifiers {Array} 
     */
    constructor(records, errors, unprocessedIdentifiers) { 
        
        BatchGetRecordResponse.initialize(this, records, errors, unprocessedIdentifiers);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, records, errors, unprocessedIdentifiers) { 
        obj['Records'] = records;
        obj['Errors'] = errors;
        obj['UnprocessedIdentifiers'] = unprocessedIdentifiers;
    }

    /**
     * Constructs a <code>BatchGetRecordResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BatchGetRecordResponse} obj Optional instance to populate.
     * @return {module:model/BatchGetRecordResponse} The populated <code>BatchGetRecordResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BatchGetRecordResponse();

            if (data.hasOwnProperty('Records')) {
                obj['Records'] = ApiClient.convertToType(data['Records'], Array);
            }
            if (data.hasOwnProperty('Errors')) {
                obj['Errors'] = ApiClient.convertToType(data['Errors'], Array);
            }
            if (data.hasOwnProperty('UnprocessedIdentifiers')) {
                obj['UnprocessedIdentifiers'] = ApiClient.convertToType(data['UnprocessedIdentifiers'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BatchGetRecordResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BatchGetRecordResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BatchGetRecordResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Records`
        if (data['Records']) { // data not null
          Array.validateJSON(data['Records']);
        }
        // validate the optional field `Errors`
        if (data['Errors']) { // data not null
          Array.validateJSON(data['Errors']);
        }
        // validate the optional field `UnprocessedIdentifiers`
        if (data['UnprocessedIdentifiers']) { // data not null
          Array.validateJSON(data['UnprocessedIdentifiers']);
        }

        return true;
    }


}

BatchGetRecordResponse.RequiredProperties = ["Records", "Errors", "UnprocessedIdentifiers"];

/**
 * @member {Array} Records
 */
BatchGetRecordResponse.prototype['Records'] = undefined;

/**
 * @member {Array} Errors
 */
BatchGetRecordResponse.prototype['Errors'] = undefined;

/**
 * @member {Array} UnprocessedIdentifiers
 */
BatchGetRecordResponse.prototype['UnprocessedIdentifiers'] = undefined;






export default BatchGetRecordResponse;

