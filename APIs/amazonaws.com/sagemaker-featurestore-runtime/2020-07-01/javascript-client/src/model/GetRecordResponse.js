/**
 * Amazon SageMaker Feature Store Runtime
 * <p>Contains all data plane API operations and data types for the Amazon SageMaker Feature Store. Use this API to put, delete, and retrieve (get) features from a feature store.</p> <p>Use the following operations to configure your <code>OnlineStore</code> and <code>OfflineStore</code> features, and to create and manage feature groups:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateFeatureGroup.html\">CreateFeatureGroup</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_DeleteFeatureGroup.html\">DeleteFeatureGroup</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_DescribeFeatureGroup.html\">DescribeFeatureGroup</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ListFeatureGroups.html\">ListFeatureGroups</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2020-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetRecordResponse model module.
 * @module model/GetRecordResponse
 * @version 2020-07-01
 */
class GetRecordResponse {
    /**
     * Constructs a new <code>GetRecordResponse</code>.
     * @alias module:model/GetRecordResponse
     */
    constructor() { 
        
        GetRecordResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetRecordResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetRecordResponse} obj Optional instance to populate.
     * @return {module:model/GetRecordResponse} The populated <code>GetRecordResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetRecordResponse();

            if (data.hasOwnProperty('Record')) {
                obj['Record'] = ApiClient.convertToType(data['Record'], Array);
            }
            if (data.hasOwnProperty('ExpiresAt')) {
                obj['ExpiresAt'] = ApiClient.convertToType(data['ExpiresAt'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetRecordResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetRecordResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Record`
        if (data['Record']) { // data not null
          Array.validateJSON(data['Record']);
        }
        // validate the optional field `ExpiresAt`
        if (data['ExpiresAt']) { // data not null
          String.validateJSON(data['ExpiresAt']);
        }

        return true;
    }


}



/**
 * @member {Array} Record
 */
GetRecordResponse.prototype['Record'] = undefined;

/**
 * @member {String} ExpiresAt
 */
GetRecordResponse.prototype['ExpiresAt'] = undefined;






export default GetRecordResponse;

