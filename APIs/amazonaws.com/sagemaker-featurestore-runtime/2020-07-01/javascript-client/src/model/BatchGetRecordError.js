/**
 * Amazon SageMaker Feature Store Runtime
 * <p>Contains all data plane API operations and data types for the Amazon SageMaker Feature Store. Use this API to put, delete, and retrieve (get) features from a feature store.</p> <p>Use the following operations to configure your <code>OnlineStore</code> and <code>OfflineStore</code> features, and to create and manage feature groups:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateFeatureGroup.html\">CreateFeatureGroup</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_DeleteFeatureGroup.html\">DeleteFeatureGroup</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_DescribeFeatureGroup.html\">DescribeFeatureGroup</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ListFeatureGroups.html\">ListFeatureGroups</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2020-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BatchGetRecordError model module.
 * @module model/BatchGetRecordError
 * @version 2020-07-01
 */
class BatchGetRecordError {
    /**
     * Constructs a new <code>BatchGetRecordError</code>.
     * The error that has occurred when attempting to retrieve a batch of Records.
     * @alias module:model/BatchGetRecordError
     * @param featureGroupName {String} 
     * @param recordIdentifierValueAsString {String} 
     * @param errorCode {String} 
     * @param errorMessage {String} 
     */
    constructor(featureGroupName, recordIdentifierValueAsString, errorCode, errorMessage) { 
        
        BatchGetRecordError.initialize(this, featureGroupName, recordIdentifierValueAsString, errorCode, errorMessage);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, featureGroupName, recordIdentifierValueAsString, errorCode, errorMessage) { 
        obj['FeatureGroupName'] = featureGroupName;
        obj['RecordIdentifierValueAsString'] = recordIdentifierValueAsString;
        obj['ErrorCode'] = errorCode;
        obj['ErrorMessage'] = errorMessage;
    }

    /**
     * Constructs a <code>BatchGetRecordError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BatchGetRecordError} obj Optional instance to populate.
     * @return {module:model/BatchGetRecordError} The populated <code>BatchGetRecordError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BatchGetRecordError();

            if (data.hasOwnProperty('FeatureGroupName')) {
                obj['FeatureGroupName'] = ApiClient.convertToType(data['FeatureGroupName'], 'String');
            }
            if (data.hasOwnProperty('RecordIdentifierValueAsString')) {
                obj['RecordIdentifierValueAsString'] = ApiClient.convertToType(data['RecordIdentifierValueAsString'], 'String');
            }
            if (data.hasOwnProperty('ErrorCode')) {
                obj['ErrorCode'] = ApiClient.convertToType(data['ErrorCode'], 'String');
            }
            if (data.hasOwnProperty('ErrorMessage')) {
                obj['ErrorMessage'] = ApiClient.convertToType(data['ErrorMessage'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BatchGetRecordError</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BatchGetRecordError</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BatchGetRecordError.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `FeatureGroupName`
        if (data['FeatureGroupName']) { // data not null
          String.validateJSON(data['FeatureGroupName']);
        }
        // validate the optional field `RecordIdentifierValueAsString`
        if (data['RecordIdentifierValueAsString']) { // data not null
          String.validateJSON(data['RecordIdentifierValueAsString']);
        }
        // validate the optional field `ErrorCode`
        if (data['ErrorCode']) { // data not null
          String.validateJSON(data['ErrorCode']);
        }
        // validate the optional field `ErrorMessage`
        if (data['ErrorMessage']) { // data not null
          String.validateJSON(data['ErrorMessage']);
        }

        return true;
    }


}

BatchGetRecordError.RequiredProperties = ["FeatureGroupName", "RecordIdentifierValueAsString", "ErrorCode", "ErrorMessage"];

/**
 * @member {String} FeatureGroupName
 */
BatchGetRecordError.prototype['FeatureGroupName'] = undefined;

/**
 * @member {String} RecordIdentifierValueAsString
 */
BatchGetRecordError.prototype['RecordIdentifierValueAsString'] = undefined;

/**
 * @member {String} ErrorCode
 */
BatchGetRecordError.prototype['ErrorCode'] = undefined;

/**
 * @member {String} ErrorMessage
 */
BatchGetRecordError.prototype['ErrorMessage'] = undefined;






export default BatchGetRecordError;

