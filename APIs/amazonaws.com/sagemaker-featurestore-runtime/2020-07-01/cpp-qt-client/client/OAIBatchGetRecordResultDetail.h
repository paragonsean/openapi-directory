/**
 * Amazon SageMaker Feature Store Runtime
 * <p>Contains all data plane API operations and data types for the Amazon SageMaker Feature Store. Use this API to put, delete, and retrieve (get) features from a feature store.</p> <p>Use the following operations to configure your <code>OnlineStore</code> and <code>OfflineStore</code> features, and to create and manage feature groups:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateFeatureGroup.html\">CreateFeatureGroup</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_DeleteFeatureGroup.html\">DeleteFeatureGroup</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_DescribeFeatureGroup.html\">DescribeFeatureGroup</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ListFeatureGroups.html\">ListFeatureGroups</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2020-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBatchGetRecordResultDetail.h
 *
 * The output of records that have been retrieved in a batch.
 */

#ifndef OAIBatchGetRecordResultDetail_H
#define OAIBatchGetRecordResultDetail_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBatchGetRecordResultDetail : public OAIObject {
public:
    OAIBatchGetRecordResultDetail();
    OAIBatchGetRecordResultDetail(QString json);
    ~OAIBatchGetRecordResultDetail() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFeatureGroupName() const;
    void setFeatureGroupName(const QString &feature_group_name);
    bool is_feature_group_name_Set() const;
    bool is_feature_group_name_Valid() const;

    QString getRecordIdentifierValueAsString() const;
    void setRecordIdentifierValueAsString(const QString &record_identifier_value_as_string);
    bool is_record_identifier_value_as_string_Set() const;
    bool is_record_identifier_value_as_string_Valid() const;

    QList getRecord() const;
    void setRecord(const QList &record);
    bool is_record_Set() const;
    bool is_record_Valid() const;

    QString getExpiresAt() const;
    void setExpiresAt(const QString &expires_at);
    bool is_expires_at_Set() const;
    bool is_expires_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_feature_group_name;
    bool m_feature_group_name_isSet;
    bool m_feature_group_name_isValid;

    QString m_record_identifier_value_as_string;
    bool m_record_identifier_value_as_string_isSet;
    bool m_record_identifier_value_as_string_isValid;

    QList m_record;
    bool m_record_isSet;
    bool m_record_isValid;

    QString m_expires_at;
    bool m_expires_at_isSet;
    bool m_expires_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBatchGetRecordResultDetail)

#endif // OAIBatchGetRecordResultDetail_H
