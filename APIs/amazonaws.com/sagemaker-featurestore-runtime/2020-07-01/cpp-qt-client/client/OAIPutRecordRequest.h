/**
 * Amazon SageMaker Feature Store Runtime
 * <p>Contains all data plane API operations and data types for the Amazon SageMaker Feature Store. Use this API to put, delete, and retrieve (get) features from a feature store.</p> <p>Use the following operations to configure your <code>OnlineStore</code> and <code>OfflineStore</code> features, and to create and manage feature groups:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateFeatureGroup.html\">CreateFeatureGroup</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_DeleteFeatureGroup.html\">DeleteFeatureGroup</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_DescribeFeatureGroup.html\">DescribeFeatureGroup</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ListFeatureGroups.html\">ListFeatureGroups</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2020-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPutRecordRequest.h
 *
 * 
 */

#ifndef OAIPutRecordRequest_H
#define OAIPutRecordRequest_H

#include <QJsonObject>

#include "OAIPutRecordRequest_TtlDuration.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPutRecordRequest_TtlDuration;

class OAIPutRecordRequest : public OAIObject {
public:
    OAIPutRecordRequest();
    OAIPutRecordRequest(QString json);
    ~OAIPutRecordRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getRecord() const;
    void setRecord(const QList &record);
    bool is_record_Set() const;
    bool is_record_Valid() const;

    QList getTargetStores() const;
    void setTargetStores(const QList &target_stores);
    bool is_target_stores_Set() const;
    bool is_target_stores_Valid() const;

    OAIPutRecordRequest_TtlDuration getTtlDuration() const;
    void setTtlDuration(const OAIPutRecordRequest_TtlDuration &ttl_duration);
    bool is_ttl_duration_Set() const;
    bool is_ttl_duration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_record;
    bool m_record_isSet;
    bool m_record_isValid;

    QList m_target_stores;
    bool m_target_stores_isSet;
    bool m_target_stores_isValid;

    OAIPutRecordRequest_TtlDuration m_ttl_duration;
    bool m_ttl_duration_isSet;
    bool m_ttl_duration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPutRecordRequest)

#endif // OAIPutRecordRequest_H
