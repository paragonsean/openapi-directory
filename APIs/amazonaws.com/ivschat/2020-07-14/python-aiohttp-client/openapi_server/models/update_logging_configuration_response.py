# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_logging_configuration_response_destination_configuration import CreateLoggingConfigurationResponseDestinationConfiguration
from openapi_server.models.update_logging_configuration_state import UpdateLoggingConfigurationState
from openapi_server import util


class UpdateLoggingConfigurationResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, create_time: datetime=None, destination_configuration: CreateLoggingConfigurationResponseDestinationConfiguration=None, id: str=None, name: str=None, state: UpdateLoggingConfigurationState=None, tags: Dict=None, update_time: datetime=None):
        """UpdateLoggingConfigurationResponse - a model defined in OpenAPI

        :param arn: The arn of this UpdateLoggingConfigurationResponse.
        :param create_time: The create_time of this UpdateLoggingConfigurationResponse.
        :param destination_configuration: The destination_configuration of this UpdateLoggingConfigurationResponse.
        :param id: The id of this UpdateLoggingConfigurationResponse.
        :param name: The name of this UpdateLoggingConfigurationResponse.
        :param state: The state of this UpdateLoggingConfigurationResponse.
        :param tags: The tags of this UpdateLoggingConfigurationResponse.
        :param update_time: The update_time of this UpdateLoggingConfigurationResponse.
        """
        self.openapi_types = {
            'arn': str,
            'create_time': datetime,
            'destination_configuration': CreateLoggingConfigurationResponseDestinationConfiguration,
            'id': str,
            'name': str,
            'state': UpdateLoggingConfigurationState,
            'tags': Dict,
            'update_time': datetime
        }

        self.attribute_map = {
            'arn': 'arn',
            'create_time': 'createTime',
            'destination_configuration': 'destinationConfiguration',
            'id': 'id',
            'name': 'name',
            'state': 'state',
            'tags': 'tags',
            'update_time': 'updateTime'
        }

        self._arn = arn
        self._create_time = create_time
        self._destination_configuration = destination_configuration
        self._id = id
        self._name = name
        self._state = state
        self._tags = tags
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateLoggingConfigurationResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateLoggingConfigurationResponse of this UpdateLoggingConfigurationResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this UpdateLoggingConfigurationResponse.


        :return: The arn of this UpdateLoggingConfigurationResponse.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this UpdateLoggingConfigurationResponse.


        :param arn: The arn of this UpdateLoggingConfigurationResponse.
        :type arn: str
        """

        self._arn = arn

    @property
    def create_time(self):
        """Gets the create_time of this UpdateLoggingConfigurationResponse.


        :return: The create_time of this UpdateLoggingConfigurationResponse.
        :rtype: datetime
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this UpdateLoggingConfigurationResponse.


        :param create_time: The create_time of this UpdateLoggingConfigurationResponse.
        :type create_time: datetime
        """

        self._create_time = create_time

    @property
    def destination_configuration(self):
        """Gets the destination_configuration of this UpdateLoggingConfigurationResponse.


        :return: The destination_configuration of this UpdateLoggingConfigurationResponse.
        :rtype: CreateLoggingConfigurationResponseDestinationConfiguration
        """
        return self._destination_configuration

    @destination_configuration.setter
    def destination_configuration(self, destination_configuration):
        """Sets the destination_configuration of this UpdateLoggingConfigurationResponse.


        :param destination_configuration: The destination_configuration of this UpdateLoggingConfigurationResponse.
        :type destination_configuration: CreateLoggingConfigurationResponseDestinationConfiguration
        """

        self._destination_configuration = destination_configuration

    @property
    def id(self):
        """Gets the id of this UpdateLoggingConfigurationResponse.


        :return: The id of this UpdateLoggingConfigurationResponse.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this UpdateLoggingConfigurationResponse.


        :param id: The id of this UpdateLoggingConfigurationResponse.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this UpdateLoggingConfigurationResponse.


        :return: The name of this UpdateLoggingConfigurationResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateLoggingConfigurationResponse.


        :param name: The name of this UpdateLoggingConfigurationResponse.
        :type name: str
        """

        self._name = name

    @property
    def state(self):
        """Gets the state of this UpdateLoggingConfigurationResponse.


        :return: The state of this UpdateLoggingConfigurationResponse.
        :rtype: UpdateLoggingConfigurationState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this UpdateLoggingConfigurationResponse.


        :param state: The state of this UpdateLoggingConfigurationResponse.
        :type state: UpdateLoggingConfigurationState
        """

        self._state = state

    @property
    def tags(self):
        """Gets the tags of this UpdateLoggingConfigurationResponse.


        :return: The tags of this UpdateLoggingConfigurationResponse.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this UpdateLoggingConfigurationResponse.


        :param tags: The tags of this UpdateLoggingConfigurationResponse.
        :type tags: Dict
        """

        self._tags = tags

    @property
    def update_time(self):
        """Gets the update_time of this UpdateLoggingConfigurationResponse.


        :return: The update_time of this UpdateLoggingConfigurationResponse.
        :rtype: datetime
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this UpdateLoggingConfigurationResponse.


        :param update_time: The update_time of this UpdateLoggingConfigurationResponse.
        :type update_time: datetime
        """

        self._update_time = update_time
