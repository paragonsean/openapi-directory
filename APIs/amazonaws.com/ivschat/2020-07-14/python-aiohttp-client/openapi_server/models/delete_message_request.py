# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class DeleteMessageRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, reason: str=None, room_identifier: str=None):
        """DeleteMessageRequest - a model defined in OpenAPI

        :param id: The id of this DeleteMessageRequest.
        :param reason: The reason of this DeleteMessageRequest.
        :param room_identifier: The room_identifier of this DeleteMessageRequest.
        """
        self.openapi_types = {
            'id': str,
            'reason': str,
            'room_identifier': str
        }

        self.attribute_map = {
            'id': 'id',
            'reason': 'reason',
            'room_identifier': 'roomIdentifier'
        }

        self._id = id
        self._reason = reason
        self._room_identifier = room_identifier

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteMessageRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteMessage_request of this DeleteMessageRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this DeleteMessageRequest.

        ID of the message to be deleted. This is the <code>Id</code> field in the received message (see <a href=\"https://docs.aws.amazon.com/ivs/latest/chatmsgapireference/actions-message-subscribe.html\"> Message (Subscribe)</a> in the Chat Messaging API).

        :return: The id of this DeleteMessageRequest.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DeleteMessageRequest.

        ID of the message to be deleted. This is the <code>Id</code> field in the received message (see <a href=\"https://docs.aws.amazon.com/ivs/latest/chatmsgapireference/actions-message-subscribe.html\"> Message (Subscribe)</a> in the Chat Messaging API).

        :param id: The id of this DeleteMessageRequest.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")
        if id is not None and len(id) > 12:
            raise ValueError("Invalid value for `id`, length must be less than or equal to `12`")
        if id is not None and len(id) < 12:
            raise ValueError("Invalid value for `id`, length must be greater than or equal to `12`")
        if id is not None and not re.search(r'^[a-zA-Z0-9]+$', id):
            raise ValueError("Invalid value for `id`, must be a follow pattern or equal to `/^[a-zA-Z0-9]+$/`")

        self._id = id

    @property
    def reason(self):
        """Gets the reason of this DeleteMessageRequest.

        Reason for deleting the message.

        :return: The reason of this DeleteMessageRequest.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this DeleteMessageRequest.

        Reason for deleting the message.

        :param reason: The reason of this DeleteMessageRequest.
        :type reason: str
        """
        if reason is not None and len(reason) > 256:
            raise ValueError("Invalid value for `reason`, length must be less than or equal to `256`")
        if reason is not None and len(reason) < 1:
            raise ValueError("Invalid value for `reason`, length must be greater than or equal to `1`")

        self._reason = reason

    @property
    def room_identifier(self):
        """Gets the room_identifier of this DeleteMessageRequest.

        Identifier of the room where the message should be deleted. Currently this must be an ARN. 

        :return: The room_identifier of this DeleteMessageRequest.
        :rtype: str
        """
        return self._room_identifier

    @room_identifier.setter
    def room_identifier(self, room_identifier):
        """Sets the room_identifier of this DeleteMessageRequest.

        Identifier of the room where the message should be deleted. Currently this must be an ARN. 

        :param room_identifier: The room_identifier of this DeleteMessageRequest.
        :type room_identifier: str
        """
        if room_identifier is None:
            raise ValueError("Invalid value for `room_identifier`, must not be `None`")
        if room_identifier is not None and len(room_identifier) > 128:
            raise ValueError("Invalid value for `room_identifier`, length must be less than or equal to `128`")
        if room_identifier is not None and len(room_identifier) < 1:
            raise ValueError("Invalid value for `room_identifier`, length must be greater than or equal to `1`")
        if room_identifier is not None and not re.search(r'^arn:aws:ivschat:[a-z0-9-]+:[0-9]+:room\/[a-zA-Z0-9-]+$', room_identifier):
            raise ValueError("Invalid value for `room_identifier`, must be a follow pattern or equal to `/^arn:aws:ivschat:[a-z0-9-]+:[0-9]+:room\/[a-zA-Z0-9-]+$/`")

        self._room_identifier = room_identifier
