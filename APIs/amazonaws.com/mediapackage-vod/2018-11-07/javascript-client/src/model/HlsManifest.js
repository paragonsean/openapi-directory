/**
 * AWS Elemental MediaPackage VOD
 * AWS Elemental MediaPackage VOD
 *
 * The version of the OpenAPI document: 2018-11-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AdMarkers from './AdMarkers';
import DashManifestStreamSelection from './DashManifestStreamSelection';

/**
 * The HlsManifest model module.
 * @module model/HlsManifest
 * @version 2018-11-07
 */
class HlsManifest {
    /**
     * Constructs a new <code>HlsManifest</code>.
     * An HTTP Live Streaming (HLS) manifest configuration.
     * @alias module:model/HlsManifest
     */
    constructor() { 
        
        HlsManifest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HlsManifest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HlsManifest} obj Optional instance to populate.
     * @return {module:model/HlsManifest} The populated <code>HlsManifest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HlsManifest();

            if (data.hasOwnProperty('AdMarkers')) {
                obj['AdMarkers'] = ApiClient.convertToType(data['AdMarkers'], AdMarkers);
            }
            if (data.hasOwnProperty('IncludeIframeOnlyStream')) {
                obj['IncludeIframeOnlyStream'] = ApiClient.convertToType(data['IncludeIframeOnlyStream'], 'Boolean');
            }
            if (data.hasOwnProperty('ManifestName')) {
                obj['ManifestName'] = ApiClient.convertToType(data['ManifestName'], 'String');
            }
            if (data.hasOwnProperty('ProgramDateTimeIntervalSeconds')) {
                obj['ProgramDateTimeIntervalSeconds'] = ApiClient.convertToType(data['ProgramDateTimeIntervalSeconds'], 'Number');
            }
            if (data.hasOwnProperty('RepeatExtXKey')) {
                obj['RepeatExtXKey'] = ApiClient.convertToType(data['RepeatExtXKey'], 'Boolean');
            }
            if (data.hasOwnProperty('StreamSelection')) {
                obj['StreamSelection'] = DashManifestStreamSelection.constructFromObject(data['StreamSelection']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HlsManifest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HlsManifest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `AdMarkers`
        if (data['AdMarkers']) { // data not null
          AdMarkers.validateJSON(data['AdMarkers']);
        }
        // validate the optional field `IncludeIframeOnlyStream`
        if (data['IncludeIframeOnlyStream']) { // data not null
          Boolean.validateJSON(data['IncludeIframeOnlyStream']);
        }
        // validate the optional field `ManifestName`
        if (data['ManifestName']) { // data not null
          String.validateJSON(data['ManifestName']);
        }
        // validate the optional field `ProgramDateTimeIntervalSeconds`
        if (data['ProgramDateTimeIntervalSeconds']) { // data not null
          Number.validateJSON(data['ProgramDateTimeIntervalSeconds']);
        }
        // validate the optional field `RepeatExtXKey`
        if (data['RepeatExtXKey']) { // data not null
          Boolean.validateJSON(data['RepeatExtXKey']);
        }
        // validate the optional field `StreamSelection`
        if (data['StreamSelection']) { // data not null
          DashManifestStreamSelection.validateJSON(data['StreamSelection']);
        }

        return true;
    }


}



/**
 * @member {module:model/AdMarkers} AdMarkers
 */
HlsManifest.prototype['AdMarkers'] = undefined;

/**
 * @member {Boolean} IncludeIframeOnlyStream
 */
HlsManifest.prototype['IncludeIframeOnlyStream'] = undefined;

/**
 * @member {String} ManifestName
 */
HlsManifest.prototype['ManifestName'] = undefined;

/**
 * @member {Number} ProgramDateTimeIntervalSeconds
 */
HlsManifest.prototype['ProgramDateTimeIntervalSeconds'] = undefined;

/**
 * @member {Boolean} RepeatExtXKey
 */
HlsManifest.prototype['RepeatExtXKey'] = undefined;

/**
 * @member {module:model/DashManifestStreamSelection} StreamSelection
 */
HlsManifest.prototype['StreamSelection'] = undefined;






export default HlsManifest;

