/*
 * AWS Elemental MediaPackage VOD
 * AWS Elemental MediaPackage VOD
 *
 * The version of the OpenAPI document: 2018-11-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreatePackagingConfigurationRequestDashPackageEncryption;
import org.openapitools.client.model.SegmentTemplateFormat;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:10.701330-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreatePackagingConfigurationRequestDashPackage {
  public static final String SERIALIZED_NAME_DASH_MANIFESTS = "DashManifests";
  @SerializedName(SERIALIZED_NAME_DASH_MANIFESTS)
  private List dashManifests;

  public static final String SERIALIZED_NAME_ENCRYPTION = "Encryption";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION)
  private CreatePackagingConfigurationRequestDashPackageEncryption encryption;

  public static final String SERIALIZED_NAME_INCLUDE_ENCODER_CONFIGURATION_IN_SEGMENTS = "IncludeEncoderConfigurationInSegments";
  @SerializedName(SERIALIZED_NAME_INCLUDE_ENCODER_CONFIGURATION_IN_SEGMENTS)
  private Boolean includeEncoderConfigurationInSegments;

  public static final String SERIALIZED_NAME_INCLUDE_IFRAME_ONLY_STREAM = "IncludeIframeOnlyStream";
  @SerializedName(SERIALIZED_NAME_INCLUDE_IFRAME_ONLY_STREAM)
  private Boolean includeIframeOnlyStream;

  public static final String SERIALIZED_NAME_PERIOD_TRIGGERS = "PeriodTriggers";
  @SerializedName(SERIALIZED_NAME_PERIOD_TRIGGERS)
  private List periodTriggers;

  public static final String SERIALIZED_NAME_SEGMENT_DURATION_SECONDS = "SegmentDurationSeconds";
  @SerializedName(SERIALIZED_NAME_SEGMENT_DURATION_SECONDS)
  private Integer segmentDurationSeconds;

  public static final String SERIALIZED_NAME_SEGMENT_TEMPLATE_FORMAT = "SegmentTemplateFormat";
  @SerializedName(SERIALIZED_NAME_SEGMENT_TEMPLATE_FORMAT)
  private SegmentTemplateFormat segmentTemplateFormat;

  public CreatePackagingConfigurationRequestDashPackage() {
  }

  public CreatePackagingConfigurationRequestDashPackage dashManifests(List dashManifests) {
    this.dashManifests = dashManifests;
    return this;
  }

  /**
   * Get dashManifests
   * @return dashManifests
   */
  @javax.annotation.Nullable
  public List getDashManifests() {
    return dashManifests;
  }

  public void setDashManifests(List dashManifests) {
    this.dashManifests = dashManifests;
  }


  public CreatePackagingConfigurationRequestDashPackage encryption(CreatePackagingConfigurationRequestDashPackageEncryption encryption) {
    this.encryption = encryption;
    return this;
  }

  /**
   * Get encryption
   * @return encryption
   */
  @javax.annotation.Nullable
  public CreatePackagingConfigurationRequestDashPackageEncryption getEncryption() {
    return encryption;
  }

  public void setEncryption(CreatePackagingConfigurationRequestDashPackageEncryption encryption) {
    this.encryption = encryption;
  }


  public CreatePackagingConfigurationRequestDashPackage includeEncoderConfigurationInSegments(Boolean includeEncoderConfigurationInSegments) {
    this.includeEncoderConfigurationInSegments = includeEncoderConfigurationInSegments;
    return this;
  }

  /**
   * Get includeEncoderConfigurationInSegments
   * @return includeEncoderConfigurationInSegments
   */
  @javax.annotation.Nullable
  public Boolean getIncludeEncoderConfigurationInSegments() {
    return includeEncoderConfigurationInSegments;
  }

  public void setIncludeEncoderConfigurationInSegments(Boolean includeEncoderConfigurationInSegments) {
    this.includeEncoderConfigurationInSegments = includeEncoderConfigurationInSegments;
  }


  public CreatePackagingConfigurationRequestDashPackage includeIframeOnlyStream(Boolean includeIframeOnlyStream) {
    this.includeIframeOnlyStream = includeIframeOnlyStream;
    return this;
  }

  /**
   * Get includeIframeOnlyStream
   * @return includeIframeOnlyStream
   */
  @javax.annotation.Nullable
  public Boolean getIncludeIframeOnlyStream() {
    return includeIframeOnlyStream;
  }

  public void setIncludeIframeOnlyStream(Boolean includeIframeOnlyStream) {
    this.includeIframeOnlyStream = includeIframeOnlyStream;
  }


  public CreatePackagingConfigurationRequestDashPackage periodTriggers(List periodTriggers) {
    this.periodTriggers = periodTriggers;
    return this;
  }

  /**
   * Get periodTriggers
   * @return periodTriggers
   */
  @javax.annotation.Nullable
  public List getPeriodTriggers() {
    return periodTriggers;
  }

  public void setPeriodTriggers(List periodTriggers) {
    this.periodTriggers = periodTriggers;
  }


  public CreatePackagingConfigurationRequestDashPackage segmentDurationSeconds(Integer segmentDurationSeconds) {
    this.segmentDurationSeconds = segmentDurationSeconds;
    return this;
  }

  /**
   * Get segmentDurationSeconds
   * @return segmentDurationSeconds
   */
  @javax.annotation.Nullable
  public Integer getSegmentDurationSeconds() {
    return segmentDurationSeconds;
  }

  public void setSegmentDurationSeconds(Integer segmentDurationSeconds) {
    this.segmentDurationSeconds = segmentDurationSeconds;
  }


  public CreatePackagingConfigurationRequestDashPackage segmentTemplateFormat(SegmentTemplateFormat segmentTemplateFormat) {
    this.segmentTemplateFormat = segmentTemplateFormat;
    return this;
  }

  /**
   * Get segmentTemplateFormat
   * @return segmentTemplateFormat
   */
  @javax.annotation.Nullable
  public SegmentTemplateFormat getSegmentTemplateFormat() {
    return segmentTemplateFormat;
  }

  public void setSegmentTemplateFormat(SegmentTemplateFormat segmentTemplateFormat) {
    this.segmentTemplateFormat = segmentTemplateFormat;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatePackagingConfigurationRequestDashPackage createPackagingConfigurationRequestDashPackage = (CreatePackagingConfigurationRequestDashPackage) o;
    return Objects.equals(this.dashManifests, createPackagingConfigurationRequestDashPackage.dashManifests) &&
        Objects.equals(this.encryption, createPackagingConfigurationRequestDashPackage.encryption) &&
        Objects.equals(this.includeEncoderConfigurationInSegments, createPackagingConfigurationRequestDashPackage.includeEncoderConfigurationInSegments) &&
        Objects.equals(this.includeIframeOnlyStream, createPackagingConfigurationRequestDashPackage.includeIframeOnlyStream) &&
        Objects.equals(this.periodTriggers, createPackagingConfigurationRequestDashPackage.periodTriggers) &&
        Objects.equals(this.segmentDurationSeconds, createPackagingConfigurationRequestDashPackage.segmentDurationSeconds) &&
        Objects.equals(this.segmentTemplateFormat, createPackagingConfigurationRequestDashPackage.segmentTemplateFormat);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dashManifests, encryption, includeEncoderConfigurationInSegments, includeIframeOnlyStream, periodTriggers, segmentDurationSeconds, segmentTemplateFormat);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePackagingConfigurationRequestDashPackage {\n");
    sb.append("    dashManifests: ").append(toIndentedString(dashManifests)).append("\n");
    sb.append("    encryption: ").append(toIndentedString(encryption)).append("\n");
    sb.append("    includeEncoderConfigurationInSegments: ").append(toIndentedString(includeEncoderConfigurationInSegments)).append("\n");
    sb.append("    includeIframeOnlyStream: ").append(toIndentedString(includeIframeOnlyStream)).append("\n");
    sb.append("    periodTriggers: ").append(toIndentedString(periodTriggers)).append("\n");
    sb.append("    segmentDurationSeconds: ").append(toIndentedString(segmentDurationSeconds)).append("\n");
    sb.append("    segmentTemplateFormat: ").append(toIndentedString(segmentTemplateFormat)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("DashManifests");
    openapiFields.add("Encryption");
    openapiFields.add("IncludeEncoderConfigurationInSegments");
    openapiFields.add("IncludeIframeOnlyStream");
    openapiFields.add("PeriodTriggers");
    openapiFields.add("SegmentDurationSeconds");
    openapiFields.add("SegmentTemplateFormat");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreatePackagingConfigurationRequestDashPackage
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreatePackagingConfigurationRequestDashPackage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreatePackagingConfigurationRequestDashPackage is not found in the empty JSON string", CreatePackagingConfigurationRequestDashPackage.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreatePackagingConfigurationRequestDashPackage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreatePackagingConfigurationRequestDashPackage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `DashManifests`
      if (jsonObj.get("DashManifests") != null && !jsonObj.get("DashManifests").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("DashManifests"));
      }
      // validate the optional field `Encryption`
      if (jsonObj.get("Encryption") != null && !jsonObj.get("Encryption").isJsonNull()) {
        CreatePackagingConfigurationRequestDashPackageEncryption.validateJsonElement(jsonObj.get("Encryption"));
      }
      // validate the optional field `IncludeEncoderConfigurationInSegments`
      if (jsonObj.get("IncludeEncoderConfigurationInSegments") != null && !jsonObj.get("IncludeEncoderConfigurationInSegments").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("IncludeEncoderConfigurationInSegments"));
      }
      // validate the optional field `IncludeIframeOnlyStream`
      if (jsonObj.get("IncludeIframeOnlyStream") != null && !jsonObj.get("IncludeIframeOnlyStream").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("IncludeIframeOnlyStream"));
      }
      // validate the optional field `PeriodTriggers`
      if (jsonObj.get("PeriodTriggers") != null && !jsonObj.get("PeriodTriggers").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("PeriodTriggers"));
      }
      // validate the optional field `SegmentDurationSeconds`
      if (jsonObj.get("SegmentDurationSeconds") != null && !jsonObj.get("SegmentDurationSeconds").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("SegmentDurationSeconds"));
      }
      // validate the optional field `SegmentTemplateFormat`
      if (jsonObj.get("SegmentTemplateFormat") != null && !jsonObj.get("SegmentTemplateFormat").isJsonNull()) {
        SegmentTemplateFormat.validateJsonElement(jsonObj.get("SegmentTemplateFormat"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreatePackagingConfigurationRequestDashPackage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreatePackagingConfigurationRequestDashPackage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreatePackagingConfigurationRequestDashPackage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreatePackagingConfigurationRequestDashPackage.class));

       return (TypeAdapter<T>) new TypeAdapter<CreatePackagingConfigurationRequestDashPackage>() {
           @Override
           public void write(JsonWriter out, CreatePackagingConfigurationRequestDashPackage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreatePackagingConfigurationRequestDashPackage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreatePackagingConfigurationRequestDashPackage given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreatePackagingConfigurationRequestDashPackage
   * @throws IOException if the JSON string is invalid with respect to CreatePackagingConfigurationRequestDashPackage
   */
  public static CreatePackagingConfigurationRequestDashPackage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreatePackagingConfigurationRequestDashPackage.class);
  }

  /**
   * Convert an instance of CreatePackagingConfigurationRequestDashPackage to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

