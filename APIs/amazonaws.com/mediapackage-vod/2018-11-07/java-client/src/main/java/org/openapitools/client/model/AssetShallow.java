/*
 * AWS Elemental MediaPackage VOD
 * AWS Elemental MediaPackage VOD
 *
 * The version of the OpenAPI document: 2018-11-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A MediaPackage VOD Asset resource.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:10.701330-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AssetShallow {
  public static final String SERIALIZED_NAME_ARN = "Arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_CREATED_AT = "CreatedAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_PACKAGING_GROUP_ID = "PackagingGroupId";
  @SerializedName(SERIALIZED_NAME_PACKAGING_GROUP_ID)
  private String packagingGroupId;

  public static final String SERIALIZED_NAME_RESOURCE_ID = "ResourceId";
  @SerializedName(SERIALIZED_NAME_RESOURCE_ID)
  private String resourceId;

  public static final String SERIALIZED_NAME_SOURCE_ARN = "SourceArn";
  @SerializedName(SERIALIZED_NAME_SOURCE_ARN)
  private String sourceArn;

  public static final String SERIALIZED_NAME_SOURCE_ROLE_ARN = "SourceRoleArn";
  @SerializedName(SERIALIZED_NAME_SOURCE_ROLE_ARN)
  private String sourceRoleArn;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public AssetShallow() {
  }

  public AssetShallow arn(String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nullable
  public String getArn() {
    return arn;
  }

  public void setArn(String arn) {
    this.arn = arn;
  }


  public AssetShallow createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public AssetShallow id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public AssetShallow packagingGroupId(String packagingGroupId) {
    this.packagingGroupId = packagingGroupId;
    return this;
  }

  /**
   * Get packagingGroupId
   * @return packagingGroupId
   */
  @javax.annotation.Nullable
  public String getPackagingGroupId() {
    return packagingGroupId;
  }

  public void setPackagingGroupId(String packagingGroupId) {
    this.packagingGroupId = packagingGroupId;
  }


  public AssetShallow resourceId(String resourceId) {
    this.resourceId = resourceId;
    return this;
  }

  /**
   * Get resourceId
   * @return resourceId
   */
  @javax.annotation.Nullable
  public String getResourceId() {
    return resourceId;
  }

  public void setResourceId(String resourceId) {
    this.resourceId = resourceId;
  }


  public AssetShallow sourceArn(String sourceArn) {
    this.sourceArn = sourceArn;
    return this;
  }

  /**
   * Get sourceArn
   * @return sourceArn
   */
  @javax.annotation.Nullable
  public String getSourceArn() {
    return sourceArn;
  }

  public void setSourceArn(String sourceArn) {
    this.sourceArn = sourceArn;
  }


  public AssetShallow sourceRoleArn(String sourceRoleArn) {
    this.sourceRoleArn = sourceRoleArn;
    return this;
  }

  /**
   * Get sourceRoleArn
   * @return sourceRoleArn
   */
  @javax.annotation.Nullable
  public String getSourceRoleArn() {
    return sourceRoleArn;
  }

  public void setSourceRoleArn(String sourceRoleArn) {
    this.sourceRoleArn = sourceRoleArn;
  }


  public AssetShallow tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AssetShallow assetShallow = (AssetShallow) o;
    return Objects.equals(this.arn, assetShallow.arn) &&
        Objects.equals(this.createdAt, assetShallow.createdAt) &&
        Objects.equals(this.id, assetShallow.id) &&
        Objects.equals(this.packagingGroupId, assetShallow.packagingGroupId) &&
        Objects.equals(this.resourceId, assetShallow.resourceId) &&
        Objects.equals(this.sourceArn, assetShallow.sourceArn) &&
        Objects.equals(this.sourceRoleArn, assetShallow.sourceRoleArn) &&
        Objects.equals(this.tags, assetShallow.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arn, createdAt, id, packagingGroupId, resourceId, sourceArn, sourceRoleArn, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AssetShallow {\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    packagingGroupId: ").append(toIndentedString(packagingGroupId)).append("\n");
    sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
    sb.append("    sourceArn: ").append(toIndentedString(sourceArn)).append("\n");
    sb.append("    sourceRoleArn: ").append(toIndentedString(sourceRoleArn)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Arn");
    openapiFields.add("CreatedAt");
    openapiFields.add("Id");
    openapiFields.add("PackagingGroupId");
    openapiFields.add("ResourceId");
    openapiFields.add("SourceArn");
    openapiFields.add("SourceRoleArn");
    openapiFields.add("Tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AssetShallow
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AssetShallow.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AssetShallow is not found in the empty JSON string", AssetShallow.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AssetShallow.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AssetShallow` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Arn`
      if (jsonObj.get("Arn") != null && !jsonObj.get("Arn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Arn"));
      }
      // validate the optional field `CreatedAt`
      if (jsonObj.get("CreatedAt") != null && !jsonObj.get("CreatedAt").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CreatedAt"));
      }
      // validate the optional field `Id`
      if (jsonObj.get("Id") != null && !jsonObj.get("Id").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Id"));
      }
      // validate the optional field `PackagingGroupId`
      if (jsonObj.get("PackagingGroupId") != null && !jsonObj.get("PackagingGroupId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PackagingGroupId"));
      }
      // validate the optional field `ResourceId`
      if (jsonObj.get("ResourceId") != null && !jsonObj.get("ResourceId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ResourceId"));
      }
      // validate the optional field `SourceArn`
      if (jsonObj.get("SourceArn") != null && !jsonObj.get("SourceArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SourceArn"));
      }
      // validate the optional field `SourceRoleArn`
      if (jsonObj.get("SourceRoleArn") != null && !jsonObj.get("SourceRoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SourceRoleArn"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("Tags"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AssetShallow.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AssetShallow' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AssetShallow> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AssetShallow.class));

       return (TypeAdapter<T>) new TypeAdapter<AssetShallow>() {
           @Override
           public void write(JsonWriter out, AssetShallow value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AssetShallow read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AssetShallow given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AssetShallow
   * @throws IOException if the JSON string is invalid with respect to AssetShallow
   */
  public static AssetShallow fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AssetShallow.class);
  }

  /**
   * Convert an instance of AssetShallow to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

