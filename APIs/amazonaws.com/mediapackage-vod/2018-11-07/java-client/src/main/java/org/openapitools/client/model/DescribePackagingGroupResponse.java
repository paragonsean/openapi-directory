/*
 * AWS Elemental MediaPackage VOD
 * AWS Elemental MediaPackage VOD
 *
 * The version of the OpenAPI document: 2018-11-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.ConfigureLogsResponseAuthorization;
import org.openapitools.client.model.ConfigureLogsResponseEgressAccessLogs;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribePackagingGroupResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:10.701330-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribePackagingGroupResponse {
  public static final String SERIALIZED_NAME_APPROXIMATE_ASSET_COUNT = "ApproximateAssetCount";
  @SerializedName(SERIALIZED_NAME_APPROXIMATE_ASSET_COUNT)
  private Integer approximateAssetCount;

  public static final String SERIALIZED_NAME_ARN = "Arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_AUTHORIZATION = "Authorization";
  @SerializedName(SERIALIZED_NAME_AUTHORIZATION)
  private ConfigureLogsResponseAuthorization authorization;

  public static final String SERIALIZED_NAME_CREATED_AT = "CreatedAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_DOMAIN_NAME = "DomainName";
  @SerializedName(SERIALIZED_NAME_DOMAIN_NAME)
  private String domainName;

  public static final String SERIALIZED_NAME_EGRESS_ACCESS_LOGS = "EgressAccessLogs";
  @SerializedName(SERIALIZED_NAME_EGRESS_ACCESS_LOGS)
  private ConfigureLogsResponseEgressAccessLogs egressAccessLogs;

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public DescribePackagingGroupResponse() {
  }

  public DescribePackagingGroupResponse approximateAssetCount(Integer approximateAssetCount) {
    this.approximateAssetCount = approximateAssetCount;
    return this;
  }

  /**
   * Get approximateAssetCount
   * @return approximateAssetCount
   */
  @javax.annotation.Nullable
  public Integer getApproximateAssetCount() {
    return approximateAssetCount;
  }

  public void setApproximateAssetCount(Integer approximateAssetCount) {
    this.approximateAssetCount = approximateAssetCount;
  }


  public DescribePackagingGroupResponse arn(String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nullable
  public String getArn() {
    return arn;
  }

  public void setArn(String arn) {
    this.arn = arn;
  }


  public DescribePackagingGroupResponse authorization(ConfigureLogsResponseAuthorization authorization) {
    this.authorization = authorization;
    return this;
  }

  /**
   * Get authorization
   * @return authorization
   */
  @javax.annotation.Nullable
  public ConfigureLogsResponseAuthorization getAuthorization() {
    return authorization;
  }

  public void setAuthorization(ConfigureLogsResponseAuthorization authorization) {
    this.authorization = authorization;
  }


  public DescribePackagingGroupResponse createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public DescribePackagingGroupResponse domainName(String domainName) {
    this.domainName = domainName;
    return this;
  }

  /**
   * Get domainName
   * @return domainName
   */
  @javax.annotation.Nullable
  public String getDomainName() {
    return domainName;
  }

  public void setDomainName(String domainName) {
    this.domainName = domainName;
  }


  public DescribePackagingGroupResponse egressAccessLogs(ConfigureLogsResponseEgressAccessLogs egressAccessLogs) {
    this.egressAccessLogs = egressAccessLogs;
    return this;
  }

  /**
   * Get egressAccessLogs
   * @return egressAccessLogs
   */
  @javax.annotation.Nullable
  public ConfigureLogsResponseEgressAccessLogs getEgressAccessLogs() {
    return egressAccessLogs;
  }

  public void setEgressAccessLogs(ConfigureLogsResponseEgressAccessLogs egressAccessLogs) {
    this.egressAccessLogs = egressAccessLogs;
  }


  public DescribePackagingGroupResponse id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public DescribePackagingGroupResponse tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribePackagingGroupResponse describePackagingGroupResponse = (DescribePackagingGroupResponse) o;
    return Objects.equals(this.approximateAssetCount, describePackagingGroupResponse.approximateAssetCount) &&
        Objects.equals(this.arn, describePackagingGroupResponse.arn) &&
        Objects.equals(this.authorization, describePackagingGroupResponse.authorization) &&
        Objects.equals(this.createdAt, describePackagingGroupResponse.createdAt) &&
        Objects.equals(this.domainName, describePackagingGroupResponse.domainName) &&
        Objects.equals(this.egressAccessLogs, describePackagingGroupResponse.egressAccessLogs) &&
        Objects.equals(this.id, describePackagingGroupResponse.id) &&
        Objects.equals(this.tags, describePackagingGroupResponse.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(approximateAssetCount, arn, authorization, createdAt, domainName, egressAccessLogs, id, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribePackagingGroupResponse {\n");
    sb.append("    approximateAssetCount: ").append(toIndentedString(approximateAssetCount)).append("\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    authorization: ").append(toIndentedString(authorization)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    domainName: ").append(toIndentedString(domainName)).append("\n");
    sb.append("    egressAccessLogs: ").append(toIndentedString(egressAccessLogs)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ApproximateAssetCount");
    openapiFields.add("Arn");
    openapiFields.add("Authorization");
    openapiFields.add("CreatedAt");
    openapiFields.add("DomainName");
    openapiFields.add("EgressAccessLogs");
    openapiFields.add("Id");
    openapiFields.add("Tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribePackagingGroupResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribePackagingGroupResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribePackagingGroupResponse is not found in the empty JSON string", DescribePackagingGroupResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribePackagingGroupResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribePackagingGroupResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ApproximateAssetCount`
      if (jsonObj.get("ApproximateAssetCount") != null && !jsonObj.get("ApproximateAssetCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ApproximateAssetCount"));
      }
      // validate the optional field `Arn`
      if (jsonObj.get("Arn") != null && !jsonObj.get("Arn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Arn"));
      }
      // validate the optional field `Authorization`
      if (jsonObj.get("Authorization") != null && !jsonObj.get("Authorization").isJsonNull()) {
        ConfigureLogsResponseAuthorization.validateJsonElement(jsonObj.get("Authorization"));
      }
      // validate the optional field `CreatedAt`
      if (jsonObj.get("CreatedAt") != null && !jsonObj.get("CreatedAt").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CreatedAt"));
      }
      // validate the optional field `DomainName`
      if (jsonObj.get("DomainName") != null && !jsonObj.get("DomainName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DomainName"));
      }
      // validate the optional field `EgressAccessLogs`
      if (jsonObj.get("EgressAccessLogs") != null && !jsonObj.get("EgressAccessLogs").isJsonNull()) {
        ConfigureLogsResponseEgressAccessLogs.validateJsonElement(jsonObj.get("EgressAccessLogs"));
      }
      // validate the optional field `Id`
      if (jsonObj.get("Id") != null && !jsonObj.get("Id").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Id"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("Tags"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribePackagingGroupResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribePackagingGroupResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribePackagingGroupResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribePackagingGroupResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribePackagingGroupResponse>() {
           @Override
           public void write(JsonWriter out, DescribePackagingGroupResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribePackagingGroupResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribePackagingGroupResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribePackagingGroupResponse
   * @throws IOException if the JSON string is invalid with respect to DescribePackagingGroupResponse
   */
  public static DescribePackagingGroupResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribePackagingGroupResponse.class);
  }

  /**
   * Convert an instance of DescribePackagingGroupResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

