openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: AWS Elemental MediaPackage VOD
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS Elemental MediaPackage VOD
  version: 2018-11-07
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: mediapackage-vod
  x-aws-signingName: mediapackage-vod
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/mediapackage-vod-2018-11-07.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/mediapackage-vod/
servers:
- description: The MediaPackage Vod multi-region endpoint
  url: "http://mediapackage-vod.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The MediaPackage Vod multi-region endpoint
  url: "https://mediapackage-vod.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The MediaPackage Vod endpoint for China (Beijing) and China (Ningxia)
  url: "http://mediapackage-vod.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The MediaPackage Vod endpoint for China (Beijing) and China (Ningxia)
  url: "https://mediapackage-vod.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /packaging_groups/{id}/configure_logs:
    put:
      description: Changes the packaging group's properities to configure log subscription
      operationId: ConfigureLogs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of a MediaPackage VOD PackagingGroup resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigureLogs_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigureLogsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /assets:
    get:
      description: Returns a collection of MediaPackage VOD Asset resources.
      operationId: ListAssets
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Upper bound on number of records to return.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: A token used to resume pagination from the end of a previous
          request.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Returns Assets associated with the specified PackagingGroup.
        explode: true
        in: query
        name: packagingGroupId
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssetsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    post:
      description: Creates a new MediaPackage VOD Asset resource.
      operationId: CreateAsset
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAsset_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAssetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /packaging_configurations:
    get:
      description: Returns a collection of MediaPackage VOD PackagingConfiguration
        resources.
      operationId: ListPackagingConfigurations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Upper bound on number of records to return.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: A token used to resume pagination from the end of a previous
          request.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Returns MediaPackage VOD PackagingConfigurations associated with
          the specified PackagingGroup.
        explode: true
        in: query
        name: packagingGroupId
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPackagingConfigurationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    post:
      description: Creates a new MediaPackage VOD PackagingConfiguration resource.
      operationId: CreatePackagingConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePackagingConfiguration_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePackagingConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /packaging_groups:
    get:
      description: Returns a collection of MediaPackage VOD PackagingGroup resources.
      operationId: ListPackagingGroups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Upper bound on number of records to return.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: A token used to resume pagination from the end of a previous
          request.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPackagingGroupsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    post:
      description: Creates a new MediaPackage VOD PackagingGroup resource.
      operationId: CreatePackagingGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePackagingGroup_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePackagingGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /assets/{id}:
    delete:
      description: Deletes an existing MediaPackage VOD Asset resource.
      operationId: DeleteAsset
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the MediaPackage VOD Asset resource to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAssetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    get:
      description: Returns a description of a MediaPackage VOD Asset resource.
      operationId: DescribeAsset
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of an MediaPackage VOD Asset resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAssetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
  /packaging_configurations/{id}:
    delete:
      description: Deletes a MediaPackage VOD PackagingConfiguration resource.
      operationId: DeletePackagingConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the MediaPackage VOD PackagingConfiguration resource
          to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePackagingConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    get:
      description: Returns a description of a MediaPackage VOD PackagingConfiguration
        resource.
      operationId: DescribePackagingConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of a MediaPackage VOD PackagingConfiguration resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePackagingConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
  /packaging_groups/{id}:
    delete:
      description: Deletes a MediaPackage VOD PackagingGroup resource.
      operationId: DeletePackagingGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the MediaPackage VOD PackagingGroup resource to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePackagingGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    get:
      description: Returns a description of a MediaPackage VOD PackagingGroup resource.
      operationId: DescribePackagingGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of a MediaPackage VOD PackagingGroup resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePackagingGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    put:
      description: Updates a specific packaging group. You can't change the id attribute
        or any other system-generated attributes.
      operationId: UpdatePackagingGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of a MediaPackage VOD PackagingGroup resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePackagingGroup_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePackagingGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /tags/{resource-arn}:
    get:
      description: Returns a list of the tags assigned to the specified resource.
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) for the resource. You can get
          this from the response to any request to the resource.
        explode: false
        in: path
        name: resource-arn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
      x-accepts:
      - application/json
    post:
      description: Adds tags to the specified resource. You can specify one or more
        tags to add.
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) for the resource. You can get
          this from the response to any request to the resource.
        explode: false
        in: path
        name: resource-arn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
      responses:
        "204":
          description: Success
      x-content-type: application/json
      x-accepts:
      - application/json
  /tags/{resource-arn}#tagKeys:
    delete:
      description: Removes tags from the specified resource. You can specify one or
        more tags to remove.
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) for the resource. You can get
          this from the response to any request to the resource.
        explode: false
        in: path
        name: resource-arn
        required: true
        schema:
          type: string
        style: simple
      - description: A comma-separated list of the tag keys to remove from the resource.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/__string'
          type: array
        style: form
      responses:
        "204":
          description: Success
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    ConfigureLogsResponse:
      example:
        Authorization:
          SecretsRoleArn: ""
          CdnIdentifierSecret: ""
        DomainName: ""
        CreatedAt: ""
        EgressAccessLogs:
          LogGroupName: ""
        Id: ""
        Arn: ""
        Tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the PackagingGroup.
            xml:
              name: arn
        Authorization:
          $ref: '#/components/schemas/ConfigureLogsResponse_Authorization'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The time the PackagingGroup was created.
            xml:
              name: createdAt
        DomainName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The fully qualified domain name for Assets in the PackagingGroup.
            xml:
              name: domainName
        EgressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_EgressAccessLogs'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the PackagingGroup.
            xml:
              name: id
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
      type: object
    __string:
      type: string
    UnprocessableEntityException: {}
    InternalServerErrorException: {}
    ForbiddenException: {}
    NotFoundException: {}
    ServiceUnavailableException: {}
    TooManyRequestsException: {}
    CreateAssetResponse:
      example:
        SourceArn: ""
        ResourceId: ""
        CreatedAt: ""
        Id: ""
        Arn: ""
        PackagingGroupId: ""
        EgressEndpoints: ""
        Tags: ""
        SourceRoleArn: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the Asset.
            xml:
              name: arn
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The time the Asset was initially submitted for Ingest.
            xml:
              name: createdAt
        EgressEndpoints:
          allOf:
          - $ref: '#/components/schemas/__listOfEgressEndpoint'
          - description: The list of egress endpoints available for the Asset.
            xml:
              name: egressEndpoints
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the Asset.
            xml:
              name: id
        PackagingGroupId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the PackagingGroup for the Asset.
            xml:
              name: packagingGroupId
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The resource ID to include in SPEKE key requests.
            xml:
              name: resourceId
        SourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: ARN of the source object in S3.
            xml:
              name: sourceArn
        SourceRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The IAM role_arn used to access the source S3 bucket.
            xml:
              name: sourceRoleArn
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
      type: object
    CreatePackagingConfigurationResponse:
      example:
        MssPackage:
          MssManifests: ""
          SegmentDurationSeconds: ""
          Encryption:
            SpekeKeyProvider:
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
        CmafPackage:
          SegmentDurationSeconds: ""
          Encryption:
            ConstantInitializationVector: ""
            SpekeKeyProvider:
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
          HlsManifests: ""
          IncludeEncoderConfigurationInSegments: ""
        CreatedAt: ""
        Id: ""
        Arn: ""
        HlsPackage:
          UseAudioRenditionGroup: ""
          SegmentDurationSeconds: ""
          Encryption:
            ConstantInitializationVector: ""
            SpekeKeyProvider:
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
            EncryptionMethod: ""
          HlsManifests: ""
          IncludeDvbSubtitles: ""
        DashPackage:
          PeriodTriggers: ""
          IncludeIframeOnlyStream: ""
          SegmentDurationSeconds: ""
          Encryption:
            SpekeKeyProvider:
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
          IncludeEncoderConfigurationInSegments: ""
          SegmentTemplateFormat: ""
          DashManifests: ""
        PackagingGroupId: ""
        Tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the PackagingConfiguration.
            xml:
              name: arn
        CmafPackage:
          $ref: '#/components/schemas/CreatePackagingConfigurationResponse_CmafPackage'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The time the PackagingConfiguration was created.
            xml:
              name: createdAt
        DashPackage:
          $ref: '#/components/schemas/CreatePackagingConfigurationResponse_DashPackage'
        HlsPackage:
          $ref: '#/components/schemas/CreatePackagingConfigurationResponse_HlsPackage'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the PackagingConfiguration.
            xml:
              name: id
        MssPackage:
          $ref: '#/components/schemas/CreatePackagingConfigurationResponse_MssPackage'
        PackagingGroupId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of a PackagingGroup.
            xml:
              name: packagingGroupId
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
      type: object
    CmafEncryption:
      description: A CMAF encryption configuration.
      properties:
        ConstantInitializationVector:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "An optional 128-bit, 16-byte hex value represented by a\
              \ 32-character string, used in conjunction with the key for encrypting\
              \ blocks. If you don't specify a value, then MediaPackage creates the\
              \ constant initialization vector (IV)."
            xml:
              name: constantInitializationVector
        SpekeKeyProvider:
          $ref: '#/components/schemas/CmafEncryption_SpekeKeyProvider'
      required:
      - SpekeKeyProvider
      type: object
    __listOfHlsManifest:
      items:
        $ref: '#/components/schemas/HlsManifest'
      type: array
    __boolean:
      type: boolean
    __integer:
      type: integer
    __listOfDashManifest:
      items:
        $ref: '#/components/schemas/DashManifest'
      type: array
    DashEncryption:
      description: A Dynamic Adaptive Streaming over HTTP (DASH) encryption configuration.
      properties:
        SpekeKeyProvider:
          $ref: '#/components/schemas/CmafEncryption_SpekeKeyProvider'
      required:
      - SpekeKeyProvider
      type: object
    __listOf__PeriodTriggersElement:
      items:
        $ref: '#/components/schemas/__PeriodTriggersElement'
      type: array
    SegmentTemplateFormat:
      enum:
      - NUMBER_WITH_TIMELINE
      - TIME_WITH_TIMELINE
      - NUMBER_WITH_DURATION
      type: string
    HlsEncryption:
      description: An HTTP Live Streaming (HLS) encryption configuration.
      properties:
        ConstantInitializationVector:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              A constant initialization vector for encryption (optional).
              When not specified the initialization vector will be periodically rotated.
            xml:
              name: constantInitializationVector
        EncryptionMethod:
          allOf:
          - $ref: '#/components/schemas/EncryptionMethod'
          - description: The encryption method to use.
            xml:
              name: encryptionMethod
        SpekeKeyProvider:
          $ref: '#/components/schemas/CmafEncryption_SpekeKeyProvider'
      required:
      - SpekeKeyProvider
      type: object
    MssEncryption:
      description: A Microsoft Smooth Streaming (MSS) encryption configuration.
      properties:
        SpekeKeyProvider:
          $ref: '#/components/schemas/CmafEncryption_SpekeKeyProvider'
      required:
      - SpekeKeyProvider
      type: object
    __listOfMssManifest:
      items:
        $ref: '#/components/schemas/MssManifest'
      type: array
    CreatePackagingGroupResponse:
      example:
        Authorization:
          SecretsRoleArn: ""
          CdnIdentifierSecret: ""
        DomainName: ""
        CreatedAt: ""
        EgressAccessLogs:
          LogGroupName: ""
        Id: ""
        Arn: ""
        Tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the PackagingGroup.
            xml:
              name: arn
        Authorization:
          $ref: '#/components/schemas/ConfigureLogsResponse_Authorization'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The time the PackagingGroup was created.
            xml:
              name: createdAt
        DomainName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The fully qualified domain name for Assets in the PackagingGroup.
            xml:
              name: domainName
        EgressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_EgressAccessLogs'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the PackagingGroup.
            xml:
              name: id
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
      type: object
    DeleteAssetResponse:
      properties: {}
      type: object
    DeletePackagingConfigurationResponse:
      properties: {}
      type: object
    DeletePackagingGroupResponse:
      properties: {}
      type: object
    DescribeAssetResponse:
      example:
        SourceArn: ""
        ResourceId: ""
        CreatedAt: ""
        Id: ""
        Arn: ""
        PackagingGroupId: ""
        EgressEndpoints: ""
        Tags: ""
        SourceRoleArn: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the Asset.
            xml:
              name: arn
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The time the Asset was initially submitted for Ingest.
            xml:
              name: createdAt
        EgressEndpoints:
          allOf:
          - $ref: '#/components/schemas/__listOfEgressEndpoint'
          - description: The list of egress endpoints available for the Asset.
            xml:
              name: egressEndpoints
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the Asset.
            xml:
              name: id
        PackagingGroupId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the PackagingGroup for the Asset.
            xml:
              name: packagingGroupId
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The resource ID to include in SPEKE key requests.
            xml:
              name: resourceId
        SourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: ARN of the source object in S3.
            xml:
              name: sourceArn
        SourceRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The IAM role_arn used to access the source S3 bucket.
            xml:
              name: sourceRoleArn
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
      type: object
    DescribePackagingConfigurationResponse:
      example:
        MssPackage:
          MssManifests: ""
          SegmentDurationSeconds: ""
          Encryption:
            SpekeKeyProvider:
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
        CmafPackage:
          SegmentDurationSeconds: ""
          Encryption:
            ConstantInitializationVector: ""
            SpekeKeyProvider:
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
          HlsManifests: ""
          IncludeEncoderConfigurationInSegments: ""
        CreatedAt: ""
        Id: ""
        Arn: ""
        HlsPackage:
          UseAudioRenditionGroup: ""
          SegmentDurationSeconds: ""
          Encryption:
            ConstantInitializationVector: ""
            SpekeKeyProvider:
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
            EncryptionMethod: ""
          HlsManifests: ""
          IncludeDvbSubtitles: ""
        DashPackage:
          PeriodTriggers: ""
          IncludeIframeOnlyStream: ""
          SegmentDurationSeconds: ""
          Encryption:
            SpekeKeyProvider:
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
          IncludeEncoderConfigurationInSegments: ""
          SegmentTemplateFormat: ""
          DashManifests: ""
        PackagingGroupId: ""
        Tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the PackagingConfiguration.
            xml:
              name: arn
        CmafPackage:
          $ref: '#/components/schemas/CreatePackagingConfigurationResponse_CmafPackage'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The time the PackagingConfiguration was created.
            xml:
              name: createdAt
        DashPackage:
          $ref: '#/components/schemas/CreatePackagingConfigurationResponse_DashPackage'
        HlsPackage:
          $ref: '#/components/schemas/CreatePackagingConfigurationResponse_HlsPackage'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the PackagingConfiguration.
            xml:
              name: id
        MssPackage:
          $ref: '#/components/schemas/CreatePackagingConfigurationResponse_MssPackage'
        PackagingGroupId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of a PackagingGroup.
            xml:
              name: packagingGroupId
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
      type: object
    DescribePackagingGroupResponse:
      example:
        Authorization:
          SecretsRoleArn: ""
          CdnIdentifierSecret: ""
        DomainName: ""
        CreatedAt: ""
        EgressAccessLogs:
          LogGroupName: ""
        Id: ""
        ApproximateAssetCount: ""
        Arn: ""
        Tags: ""
      properties:
        ApproximateAssetCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The approximate asset count of the PackagingGroup.
            xml:
              name: approximateAssetCount
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the PackagingGroup.
            xml:
              name: arn
        Authorization:
          $ref: '#/components/schemas/ConfigureLogsResponse_Authorization'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The time the PackagingGroup was created.
            xml:
              name: createdAt
        DomainName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The fully qualified domain name for Assets in the PackagingGroup.
            xml:
              name: domainName
        EgressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_EgressAccessLogs'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the PackagingGroup.
            xml:
              name: id
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
      type: object
    ListAssetsResponse:
      example:
        NextToken: ""
        Assets: ""
      properties:
        Assets:
          allOf:
          - $ref: '#/components/schemas/__listOfAssetShallow'
          - description: A list of MediaPackage VOD Asset resources.
            xml:
              name: assets
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A token that can be used to resume pagination from the end
              of the collection.
            xml:
              name: nextToken
      type: object
    ListPackagingConfigurationsResponse:
      example:
        NextToken: ""
        PackagingConfigurations: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A token that can be used to resume pagination from the end
              of the collection.
            xml:
              name: nextToken
        PackagingConfigurations:
          allOf:
          - $ref: '#/components/schemas/__listOfPackagingConfiguration'
          - description: A list of MediaPackage VOD PackagingConfiguration resources.
            xml:
              name: packagingConfigurations
      type: object
    ListPackagingGroupsResponse:
      example:
        NextToken: ""
        PackagingGroups: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A token that can be used to resume pagination from the end
              of the collection.
            xml:
              name: nextToken
        PackagingGroups:
          allOf:
          - $ref: '#/components/schemas/__listOfPackagingGroup'
          - description: A list of MediaPackage VOD PackagingGroup resources.
            xml:
              name: packagingGroups
      type: object
    ListTagsForResourceResponse:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: A collection of tags associated with a resource
            xml:
              name: tags
      type: object
    UpdatePackagingGroupResponse:
      example:
        Authorization:
          SecretsRoleArn: ""
          CdnIdentifierSecret: ""
        DomainName: ""
        CreatedAt: ""
        EgressAccessLogs:
          LogGroupName: ""
        Id: ""
        ApproximateAssetCount: ""
        Arn: ""
        Tags: ""
      properties:
        ApproximateAssetCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The approximate asset count of the PackagingGroup.
            xml:
              name: approximateAssetCount
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the PackagingGroup.
            xml:
              name: arn
        Authorization:
          $ref: '#/components/schemas/ConfigureLogsResponse_Authorization'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The time the PackagingGroup was created.
            xml:
              name: createdAt
        DomainName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The fully qualified domain name for Assets in the PackagingGroup.
            xml:
              name: domainName
        EgressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_EgressAccessLogs'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the PackagingGroup.
            xml:
              name: id
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
      type: object
    AdMarkers:
      enum:
      - NONE
      - SCTE35_ENHANCED
      - PASSTHROUGH
      type: string
    Tags:
      additionalProperties:
        $ref: '#/components/schemas/__string'
      description: A collection of tags associated with a resource
      type: object
    AssetShallow:
      description: A MediaPackage VOD Asset resource.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the Asset.
            xml:
              name: arn
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The time the Asset was initially submitted for Ingest.
            xml:
              name: createdAt
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the Asset.
            xml:
              name: id
        PackagingGroupId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the PackagingGroup for the Asset.
            xml:
              name: packagingGroupId
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The resource ID to include in SPEKE key requests.
            xml:
              name: resourceId
        SourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: ARN of the source object in S3.
            xml:
              name: sourceArn
        SourceRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The IAM role ARN used to access the source S3 bucket.
            xml:
              name: sourceRoleArn
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
      type: object
    Authorization:
      description: CDN Authorization credentials
      properties:
        CdnIdentifierSecret:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) for the secret in AWS Secrets
              Manager that is used for CDN authorization.
            xml:
              name: cdnIdentifierSecret
        SecretsRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) for the IAM role that allows
              MediaPackage to communicate with AWS Secrets Manager.
            xml:
              name: secretsRoleArn
      required:
      - CdnIdentifierSecret
      - SecretsRoleArn
      type: object
    SpekeKeyProvider:
      description: A configuration for accessing an external Secure Packager and Encoder
        Key Exchange (SPEKE) service that will provide encryption keys.
      properties:
        EncryptionContractConfiguration:
          $ref: '#/components/schemas/SpekeKeyProvider_EncryptionContractConfiguration'
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              An Amazon Resource Name (ARN) of an IAM role that AWS Elemental
              MediaPackage will assume when accessing the key provider service.
            xml:
              name: roleArn
        SystemIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: The system IDs to include in key requests.
            xml:
              name: systemIds
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL of the external key provider service.
            xml:
              name: url
      required:
      - RoleArn
      - SystemIds
      - Url
      type: object
    CmafPackage:
      description: A CMAF packaging configuration.
      properties:
        Encryption:
          $ref: '#/components/schemas/CreatePackagingConfiguration_request_cmafPackage_Encryption'
        HlsManifests:
          allOf:
          - $ref: '#/components/schemas/__listOfHlsManifest'
          - description: A list of HLS manifest configurations.
            xml:
              name: hlsManifests
        IncludeEncoderConfigurationInSegments:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: |
              When includeEncoderConfigurationInSegments is set to true, MediaPackage places your encoder's Sequence Parameter Set (SPS), Picture Parameter Set (PPS), and Video Parameter Set (VPS) metadata in every video segment instead of in the init fragment. This lets you use different SPS/PPS/VPS settings for your assets during content playback.
            xml:
              name: includeEncoderConfigurationInSegments
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Duration (in seconds) of each fragment. Actual fragments will be
              rounded to the nearest multiple of the source fragment duration.
            xml:
              name: segmentDurationSeconds
      required:
      - HlsManifests
      type: object
    EgressAccessLogs:
      description: Configure egress access logging.
      properties:
        LogGroupName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Customize the log group name.
            xml:
              name: logGroupName
      type: object
    ConfigureLogsRequest:
      description: The option to configure log subscription.
      example:
        EgressAccessLogs:
          LogGroupName: ""
      properties:
        EgressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_EgressAccessLogs'
      title: ConfigureLogsRequest
      type: object
    CreateAssetRequest:
      description: A new MediaPackage VOD Asset configuration.
      example:
        SourceArn: ""
        ResourceId: ""
        Id: ""
        PackagingGroupId: ""
        Tags: ""
        SourceRoleArn: ""
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the Asset.
            xml:
              name: id
        PackagingGroupId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the PackagingGroup for the Asset.
            xml:
              name: packagingGroupId
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The resource ID to include in SPEKE key requests.
            xml:
              name: resourceId
        SourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: ARN of the source object in S3.
            xml:
              name: sourceArn
        SourceRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The IAM role ARN used to access the source S3 bucket.
            xml:
              name: sourceRoleArn
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
      required:
      - Id
      - PackagingGroupId
      - SourceArn
      - SourceRoleArn
      title: CreateAssetRequest
      type: object
    __listOfEgressEndpoint:
      items:
        $ref: '#/components/schemas/EgressEndpoint'
      type: array
    DashPackage:
      description: A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
      properties:
        DashManifests:
          allOf:
          - $ref: '#/components/schemas/__listOfDashManifest'
          - description: A list of DASH manifest configurations.
            xml:
              name: dashManifests
        Encryption:
          $ref: '#/components/schemas/CreatePackagingConfiguration_request_dashPackage_Encryption'
        IncludeEncoderConfigurationInSegments:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: |
              When includeEncoderConfigurationInSegments is set to true, MediaPackage places your encoder's Sequence Parameter Set (SPS), Picture Parameter Set (PPS), and Video Parameter Set (VPS) metadata in every video segment instead of in the init fragment. This lets you use different SPS/PPS/VPS settings for your assets during content playback.
            xml:
              name: includeEncoderConfigurationInSegments
        IncludeIframeOnlyStream:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "When enabled, an I-Frame only stream will be included in\
              \ the output."
            xml:
              name: includeIframeOnlyStream
        PeriodTriggers:
          allOf:
          - $ref: '#/components/schemas/__listOf__PeriodTriggersElement'
          - description: |
              A list of triggers that controls when the outgoing Dynamic Adaptive Streaming over HTTP (DASH)
              Media Presentation Description (MPD) will be partitioned into multiple periods. If empty, the content will not
              be partitioned into more than one period. If the list contains "ADS", new periods will be created where
              the Asset contains SCTE-35 ad markers.
            xml:
              name: periodTriggers
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Duration (in seconds) of each segment. Actual segments will be
              rounded to the nearest multiple of the source segment duration.
            xml:
              name: segmentDurationSeconds
        SegmentTemplateFormat:
          allOf:
          - $ref: '#/components/schemas/SegmentTemplateFormat'
          - description: "Determines the type of SegmentTemplate included in the Media\
              \ Presentation Description (MPD).  When set to NUMBER_WITH_TIMELINE,\
              \ a full timeline is presented in each SegmentTemplate, with $Number$\
              \ media URLs.  When set to TIME_WITH_TIMELINE, a full timeline is presented\
              \ in each SegmentTemplate, with $Time$ media URLs. When set to NUMBER_WITH_DURATION,\
              \ only a duration is included in each SegmentTemplate, with $Number$\
              \ media URLs."
            xml:
              name: segmentTemplateFormat
      required:
      - DashManifests
      type: object
    HlsPackage:
      description: An HTTP Live Streaming (HLS) packaging configuration.
      properties:
        Encryption:
          $ref: '#/components/schemas/CreatePackagingConfiguration_request_hlsPackage_Encryption'
        HlsManifests:
          allOf:
          - $ref: '#/components/schemas/__listOfHlsManifest'
          - description: A list of HLS manifest configurations.
            xml:
              name: hlsManifests
        IncludeDvbSubtitles:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "When enabled, MediaPackage passes through digital video\
              \ broadcasting (DVB) subtitles into the output."
            xml:
              name: includeDvbSubtitles
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Duration (in seconds) of each fragment. Actual fragments will be
              rounded to the nearest multiple of the source fragment duration.
            xml:
              name: segmentDurationSeconds
        UseAudioRenditionGroup:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "When enabled, audio streams will be placed in rendition\
              \ groups in the output."
            xml:
              name: useAudioRenditionGroup
      required:
      - HlsManifests
      type: object
    MssPackage:
      description: A Microsoft Smooth Streaming (MSS) PackagingConfiguration.
      properties:
        Encryption:
          $ref: '#/components/schemas/CreatePackagingConfiguration_request_mssPackage_Encryption'
        MssManifests:
          allOf:
          - $ref: '#/components/schemas/__listOfMssManifest'
          - description: A list of MSS manifest configurations.
            xml:
              name: mssManifests
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The duration (in seconds) of each segment.
            xml:
              name: segmentDurationSeconds
      required:
      - MssManifests
      type: object
    CreatePackagingConfigurationRequest:
      description: A new MediaPackage VOD PackagingConfiguration resource configuration.
      example:
        MssPackage:
          MssManifests: ""
          SegmentDurationSeconds: ""
          Encryption:
            SpekeKeyProvider:
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
        CmafPackage:
          SegmentDurationSeconds: ""
          Encryption:
            ConstantInitializationVector: ""
            SpekeKeyProvider:
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
          HlsManifests: ""
          IncludeEncoderConfigurationInSegments: ""
        Id: ""
        HlsPackage:
          UseAudioRenditionGroup: ""
          SegmentDurationSeconds: ""
          Encryption:
            ConstantInitializationVector: ""
            SpekeKeyProvider:
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
            EncryptionMethod: ""
          HlsManifests: ""
          IncludeDvbSubtitles: ""
        DashPackage:
          PeriodTriggers: ""
          IncludeIframeOnlyStream: ""
          SegmentDurationSeconds: ""
          Encryption:
            SpekeKeyProvider:
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
          IncludeEncoderConfigurationInSegments: ""
          SegmentTemplateFormat: ""
          DashManifests: ""
        PackagingGroupId: ""
        Tags: ""
      properties:
        CmafPackage:
          $ref: '#/components/schemas/CreatePackagingConfigurationResponse_CmafPackage'
        DashPackage:
          $ref: '#/components/schemas/CreatePackagingConfigurationResponse_DashPackage'
        HlsPackage:
          $ref: '#/components/schemas/CreatePackagingConfigurationResponse_HlsPackage'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the PackagingConfiguration.
            xml:
              name: id
        MssPackage:
          $ref: '#/components/schemas/CreatePackagingConfigurationResponse_MssPackage'
        PackagingGroupId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of a PackagingGroup.
            xml:
              name: packagingGroupId
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
      required:
      - Id
      - PackagingGroupId
      title: CreatePackagingConfigurationRequest
      type: object
    CreatePackagingGroupRequest:
      description: A new MediaPackage VOD PackagingGroup resource configuration.
      example:
        Authorization:
          SecretsRoleArn: ""
          CdnIdentifierSecret: ""
        EgressAccessLogs:
          LogGroupName: ""
        Id: ""
        Tags: ""
      properties:
        Authorization:
          $ref: '#/components/schemas/ConfigureLogsResponse_Authorization'
        EgressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_EgressAccessLogs'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the PackagingGroup.
            xml:
              name: id
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
      required:
      - Id
      title: CreatePackagingGroupRequest
      type: object
    ManifestLayout:
      enum:
      - FULL
      - COMPACT
      type: string
    Profile:
      enum:
      - NONE
      - HBBTV_1_5
      type: string
    ScteMarkersSource:
      enum:
      - SEGMENTS
      - MANIFEST
      type: string
    StreamSelection:
      description: A StreamSelection configuration.
      properties:
        MaxVideoBitsPerSecond:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The maximum video bitrate (bps) to include in output.
            xml:
              name: maxVideoBitsPerSecond
        MinVideoBitsPerSecond:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The minimum video bitrate (bps) to include in output.
            xml:
              name: minVideoBitsPerSecond
        StreamOrder:
          allOf:
          - $ref: '#/components/schemas/StreamOrder'
          - description: A directive that determines the order of streams in the output.
            xml:
              name: streamOrder
      type: object
    DashManifest:
      description: A DASH manifest configuration.
      properties:
        ManifestLayout:
          allOf:
          - $ref: '#/components/schemas/ManifestLayout'
          - description: "Determines the position of some tags in the Media Presentation\
              \ Description (MPD).  When set to FULL, elements like SegmentTemplate\
              \ and ContentProtection are included in each Representation.  When set\
              \ to COMPACT, duplicate elements are combined and presented at the AdaptationSet\
              \ level."
            xml:
              name: manifestLayout
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: An optional string to include in the name of the manifest.
            xml:
              name: manifestName
        MinBufferTimeSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Minimum duration (in seconds) that a player will buffer media
              before starting the presentation.
            xml:
              name: minBufferTimeSeconds
        Profile:
          allOf:
          - $ref: '#/components/schemas/Profile'
          - description: "The Dynamic Adaptive Streaming over HTTP (DASH) profile\
              \ type.  When set to \"HBBTV_1_5\", HbbTV 1.5 compliant output is enabled."
            xml:
              name: profile
        ScteMarkersSource:
          allOf:
          - $ref: '#/components/schemas/ScteMarkersSource'
          - description: "The source of scte markers used. When set to SEGMENTS, the\
              \ scte markers are sourced from the segments of the ingested content.\
              \ When set to MANIFEST, the scte markers are sourced from the manifest\
              \ of the ingested content."
            xml:
              name: scteMarkersSource
        StreamSelection:
          $ref: '#/components/schemas/DashManifest_StreamSelection'
      type: object
    DeleteAssetRequest:
      properties: {}
      title: DeleteAssetRequest
      type: object
    DeletePackagingConfigurationRequest:
      properties: {}
      title: DeletePackagingConfigurationRequest
      type: object
    DeletePackagingGroupRequest:
      properties: {}
      title: DeletePackagingGroupRequest
      type: object
    DescribeAssetRequest:
      properties: {}
      title: DescribeAssetRequest
      type: object
    DescribePackagingConfigurationRequest:
      properties: {}
      title: DescribePackagingConfigurationRequest
      type: object
    DescribePackagingGroupRequest:
      properties: {}
      title: DescribePackagingGroupRequest
      type: object
    EgressEndpoint:
      description: The endpoint URL used to access an Asset using one PackagingConfiguration.
      properties:
        PackagingConfigurationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the PackagingConfiguration being applied to the
              Asset.
            xml:
              name: packagingConfigurationId
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The current processing status of the asset used for the\
              \ packaging configuration. The status can be either QUEUED, PROCESSING,\
              \ PLAYABLE, or FAILED. Status information won't be available for most\
              \ assets ingested before 2021-09-30."
            xml:
              name: status
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL of the parent manifest for the repackaged Asset.
            xml:
              name: url
      type: object
    PresetSpeke20Audio:
      enum:
      - PRESET-AUDIO-1
      - PRESET-AUDIO-2
      - PRESET-AUDIO-3
      - SHARED
      - UNENCRYPTED
      type: string
    PresetSpeke20Video:
      enum:
      - PRESET-VIDEO-1
      - PRESET-VIDEO-2
      - PRESET-VIDEO-3
      - PRESET-VIDEO-4
      - PRESET-VIDEO-5
      - PRESET-VIDEO-6
      - PRESET-VIDEO-7
      - PRESET-VIDEO-8
      - SHARED
      - UNENCRYPTED
      type: string
    EncryptionContractConfiguration:
      description: "Use encryptionContractConfiguration to configure one or more content\
        \ encryption keys for your endpoints that use SPEKE 2.0. \nThe encryption\
        \ contract defines which content keys are used to encrypt the audio and video\
        \ tracks in your stream. \nTo configure the encryption contract, specify which\
        \ audio and video encryption presets to use.\nNote the following considerations\
        \ when using encryptionContractConfiguration:\nencryptionContractConfiguration\
        \ can be used for DASH endpoints that use SPEKE 2.0. SPEKE 2.0 relies on the\
        \ CPIX 2.3 specification.\nYou must disable key rotation for this endpoint\
        \ by setting keyRotationIntervalSeconds to 0.\n"
      properties:
        PresetSpeke20Audio:
          allOf:
          - $ref: '#/components/schemas/PresetSpeke20Audio'
          - description: A collection of audio encryption presets.
            xml:
              name: presetSpeke20Audio
        PresetSpeke20Video:
          allOf:
          - $ref: '#/components/schemas/PresetSpeke20Video'
          - description: A collection of video encryption presets.
            xml:
              name: presetSpeke20Video
      required:
      - PresetSpeke20Audio
      - PresetSpeke20Video
      type: object
    EncryptionMethod:
      enum:
      - AES_128
      - SAMPLE_AES
      type: string
    HlsManifest:
      description: An HTTP Live Streaming (HLS) manifest configuration.
      properties:
        AdMarkers:
          allOf:
          - $ref: '#/components/schemas/AdMarkers'
          - description: |
              This setting controls how ad markers are included in the packaged OriginEndpoint.
              "NONE" will omit all SCTE-35 ad markers from the output.
              "PASSTHROUGH" causes the manifest to contain a copy of the SCTE-35 ad
              markers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest.
              "SCTE35_ENHANCED" generates ad markers and blackout tags based on SCTE-35
              messages in the input source.
            xml:
              name: adMarkers
        IncludeIframeOnlyStream:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "When enabled, an I-Frame only stream will be included in\
              \ the output."
            xml:
              name: includeIframeOnlyStream
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: An optional string to include in the name of the manifest.
            xml:
              name: manifestName
        ProgramDateTimeIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag
              inserted into manifests. Additionally, when an interval is specified
              ID3Timed Metadata messages will be generated every 5 seconds using the
              ingest time of the content.
              If the interval is not specified, or set to 0, then
              no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no
              ID3Timed Metadata messages will be generated. Note that irrespective
              of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input,
              it will be passed through to HLS output.
            xml:
              name: programDateTimeIntervalSeconds
        RepeatExtXKey:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "When enabled, the EXT-X-KEY tag will be repeated in output\
              \ manifests."
            xml:
              name: repeatExtXKey
        StreamSelection:
          $ref: '#/components/schemas/DashManifest_StreamSelection'
      type: object
    MaxResults:
      maximum: 1000
      minimum: 1
      type: integer
    ListAssetsRequest:
      properties: {}
      title: ListAssetsRequest
      type: object
    __listOfAssetShallow:
      items:
        $ref: '#/components/schemas/AssetShallow'
      type: array
    ListPackagingConfigurationsRequest:
      properties: {}
      title: ListPackagingConfigurationsRequest
      type: object
    __listOfPackagingConfiguration:
      items:
        $ref: '#/components/schemas/PackagingConfiguration'
      type: array
    ListPackagingGroupsRequest:
      properties: {}
      title: ListPackagingGroupsRequest
      type: object
    __listOfPackagingGroup:
      items:
        $ref: '#/components/schemas/PackagingGroup'
      type: array
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    __mapOf__string:
      additionalProperties:
        $ref: '#/components/schemas/__string'
      type: object
    MssManifest:
      description: A Microsoft Smooth Streaming (MSS) manifest configuration.
      properties:
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: An optional string to include in the name of the manifest.
            xml:
              name: manifestName
        StreamSelection:
          $ref: '#/components/schemas/DashManifest_StreamSelection'
      type: object
    PackagingConfiguration:
      description: A MediaPackage VOD PackagingConfiguration resource.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the PackagingConfiguration.
            xml:
              name: arn
        CmafPackage:
          $ref: '#/components/schemas/CreatePackagingConfigurationResponse_CmafPackage'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The time the PackagingConfiguration was created.
            xml:
              name: createdAt
        DashPackage:
          $ref: '#/components/schemas/CreatePackagingConfigurationResponse_DashPackage'
        HlsPackage:
          $ref: '#/components/schemas/CreatePackagingConfigurationResponse_HlsPackage'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the PackagingConfiguration.
            xml:
              name: id
        MssPackage:
          $ref: '#/components/schemas/CreatePackagingConfigurationResponse_MssPackage'
        PackagingGroupId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of a PackagingGroup.
            xml:
              name: packagingGroupId
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
      type: object
    PackagingGroup:
      description: A MediaPackage VOD PackagingGroup resource.
      properties:
        ApproximateAssetCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The approximate asset count of the PackagingGroup.
            xml:
              name: approximateAssetCount
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the PackagingGroup.
            xml:
              name: arn
        Authorization:
          $ref: '#/components/schemas/ConfigureLogsResponse_Authorization'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The time the PackagingGroup was created.
            xml:
              name: createdAt
        DomainName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The fully qualified domain name for Assets in the PackagingGroup.
            xml:
              name: domainName
        EgressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_EgressAccessLogs'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the PackagingGroup.
            xml:
              name: id
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
      type: object
    __listOf__string:
      items:
        $ref: '#/components/schemas/__string'
      type: array
    StreamOrder:
      enum:
      - ORIGINAL
      - VIDEO_BITRATE_ASCENDING
      - VIDEO_BITRATE_DESCENDING
      type: string
    TagResourceRequest:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: A collection of tags associated with a resource
            xml:
              name: tags
      required:
      - Tags
      title: TagResourceRequest
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdatePackagingGroupRequest:
      description: A MediaPackage VOD PackagingGroup resource configuration.
      example:
        Authorization:
          SecretsRoleArn: ""
          CdnIdentifierSecret: ""
      properties:
        Authorization:
          $ref: '#/components/schemas/ConfigureLogsResponse_Authorization'
      title: UpdatePackagingGroupRequest
      type: object
    __PeriodTriggersElement:
      enum:
      - ADS
      type: string
    ConfigureLogs_request_egressAccessLogs:
      description: Configure egress access logging.
      properties:
        LogGroupName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Customize the log group name.
            xml:
              name: logGroupName
      type: object
    ConfigureLogs_request:
      properties:
        egressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogs_request_egressAccessLogs'
      type: object
    CreateAsset_request:
      properties:
        id:
          description: The unique identifier for the Asset.
          type: string
        packagingGroupId:
          description: The ID of the PackagingGroup for the Asset.
          type: string
        resourceId:
          description: The resource ID to include in SPEKE key requests.
          type: string
        sourceArn:
          description: ARN of the source object in S3.
          type: string
        sourceRoleArn:
          description: The IAM role ARN used to access the source S3 bucket.
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/__string'
          description: A collection of tags associated with a resource
          type: object
      required:
      - id
      - packagingGroupId
      - sourceArn
      - sourceRoleArn
      type: object
    CreatePackagingConfiguration_request_cmafPackage_Encryption:
      allOf:
      - $ref: '#/components/schemas/CmafEncryption'
      - xml:
          name: encryption
      example:
        ConstantInitializationVector: ""
        SpekeKeyProvider:
          SystemIds: ""
          EncryptionContractConfiguration:
            PresetSpeke20Audio: ""
            PresetSpeke20Video: ""
          RoleArn: ""
          Url: ""
    CreatePackagingConfiguration_request_cmafPackage:
      description: A CMAF packaging configuration.
      properties:
        Encryption:
          $ref: '#/components/schemas/CreatePackagingConfiguration_request_cmafPackage_Encryption'
        HlsManifests:
          allOf:
          - $ref: '#/components/schemas/__listOfHlsManifest'
          - description: A list of HLS manifest configurations.
            xml:
              name: hlsManifests
        IncludeEncoderConfigurationInSegments:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: |
              When includeEncoderConfigurationInSegments is set to true, MediaPackage places your encoder's Sequence Parameter Set (SPS), Picture Parameter Set (PPS), and Video Parameter Set (VPS) metadata in every video segment instead of in the init fragment. This lets you use different SPS/PPS/VPS settings for your assets during content playback.
            xml:
              name: includeEncoderConfigurationInSegments
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Duration (in seconds) of each fragment. Actual fragments will be
              rounded to the nearest multiple of the source fragment duration.
            xml:
              name: segmentDurationSeconds
      type: object
    CreatePackagingConfiguration_request_dashPackage_Encryption:
      allOf:
      - $ref: '#/components/schemas/DashEncryption'
      - xml:
          name: encryption
      example:
        SpekeKeyProvider:
          SystemIds: ""
          EncryptionContractConfiguration:
            PresetSpeke20Audio: ""
            PresetSpeke20Video: ""
          RoleArn: ""
          Url: ""
    CreatePackagingConfiguration_request_dashPackage:
      description: A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
      properties:
        DashManifests:
          allOf:
          - $ref: '#/components/schemas/__listOfDashManifest'
          - description: A list of DASH manifest configurations.
            xml:
              name: dashManifests
        Encryption:
          $ref: '#/components/schemas/CreatePackagingConfiguration_request_dashPackage_Encryption'
        IncludeEncoderConfigurationInSegments:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: |
              When includeEncoderConfigurationInSegments is set to true, MediaPackage places your encoder's Sequence Parameter Set (SPS), Picture Parameter Set (PPS), and Video Parameter Set (VPS) metadata in every video segment instead of in the init fragment. This lets you use different SPS/PPS/VPS settings for your assets during content playback.
            xml:
              name: includeEncoderConfigurationInSegments
        IncludeIframeOnlyStream:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "When enabled, an I-Frame only stream will be included in\
              \ the output."
            xml:
              name: includeIframeOnlyStream
        PeriodTriggers:
          allOf:
          - $ref: '#/components/schemas/__listOf__PeriodTriggersElement'
          - description: |
              A list of triggers that controls when the outgoing Dynamic Adaptive Streaming over HTTP (DASH)
              Media Presentation Description (MPD) will be partitioned into multiple periods. If empty, the content will not
              be partitioned into more than one period. If the list contains "ADS", new periods will be created where
              the Asset contains SCTE-35 ad markers.
            xml:
              name: periodTriggers
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Duration (in seconds) of each segment. Actual segments will be
              rounded to the nearest multiple of the source segment duration.
            xml:
              name: segmentDurationSeconds
        SegmentTemplateFormat:
          allOf:
          - $ref: '#/components/schemas/SegmentTemplateFormat'
          - description: "Determines the type of SegmentTemplate included in the Media\
              \ Presentation Description (MPD).  When set to NUMBER_WITH_TIMELINE,\
              \ a full timeline is presented in each SegmentTemplate, with $Number$\
              \ media URLs.  When set to TIME_WITH_TIMELINE, a full timeline is presented\
              \ in each SegmentTemplate, with $Time$ media URLs. When set to NUMBER_WITH_DURATION,\
              \ only a duration is included in each SegmentTemplate, with $Number$\
              \ media URLs."
            xml:
              name: segmentTemplateFormat
      type: object
    CreatePackagingConfiguration_request_hlsPackage_Encryption:
      allOf:
      - $ref: '#/components/schemas/HlsEncryption'
      - xml:
          name: encryption
      example:
        ConstantInitializationVector: ""
        SpekeKeyProvider:
          SystemIds: ""
          EncryptionContractConfiguration:
            PresetSpeke20Audio: ""
            PresetSpeke20Video: ""
          RoleArn: ""
          Url: ""
        EncryptionMethod: ""
    CreatePackagingConfiguration_request_hlsPackage:
      description: An HTTP Live Streaming (HLS) packaging configuration.
      properties:
        Encryption:
          $ref: '#/components/schemas/CreatePackagingConfiguration_request_hlsPackage_Encryption'
        HlsManifests:
          allOf:
          - $ref: '#/components/schemas/__listOfHlsManifest'
          - description: A list of HLS manifest configurations.
            xml:
              name: hlsManifests
        IncludeDvbSubtitles:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "When enabled, MediaPackage passes through digital video\
              \ broadcasting (DVB) subtitles into the output."
            xml:
              name: includeDvbSubtitles
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Duration (in seconds) of each fragment. Actual fragments will be
              rounded to the nearest multiple of the source fragment duration.
            xml:
              name: segmentDurationSeconds
        UseAudioRenditionGroup:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "When enabled, audio streams will be placed in rendition\
              \ groups in the output."
            xml:
              name: useAudioRenditionGroup
      type: object
    CreatePackagingConfiguration_request_mssPackage_Encryption:
      allOf:
      - $ref: '#/components/schemas/MssEncryption'
      - xml:
          name: encryption
      example:
        SpekeKeyProvider:
          SystemIds: ""
          EncryptionContractConfiguration:
            PresetSpeke20Audio: ""
            PresetSpeke20Video: ""
          RoleArn: ""
          Url: ""
    CreatePackagingConfiguration_request_mssPackage:
      description: A Microsoft Smooth Streaming (MSS) PackagingConfiguration.
      properties:
        Encryption:
          $ref: '#/components/schemas/CreatePackagingConfiguration_request_mssPackage_Encryption'
        MssManifests:
          allOf:
          - $ref: '#/components/schemas/__listOfMssManifest'
          - description: A list of MSS manifest configurations.
            xml:
              name: mssManifests
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The duration (in seconds) of each segment.
            xml:
              name: segmentDurationSeconds
      type: object
    CreatePackagingConfiguration_request:
      properties:
        cmafPackage:
          $ref: '#/components/schemas/CreatePackagingConfiguration_request_cmafPackage'
        dashPackage:
          $ref: '#/components/schemas/CreatePackagingConfiguration_request_dashPackage'
        hlsPackage:
          $ref: '#/components/schemas/CreatePackagingConfiguration_request_hlsPackage'
        id:
          description: The ID of the PackagingConfiguration.
          type: string
        mssPackage:
          $ref: '#/components/schemas/CreatePackagingConfiguration_request_mssPackage'
        packagingGroupId:
          description: The ID of a PackagingGroup.
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/__string'
          description: A collection of tags associated with a resource
          type: object
      required:
      - id
      - packagingGroupId
      type: object
    CreatePackagingGroup_request_authorization:
      description: CDN Authorization credentials
      properties:
        CdnIdentifierSecret:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) for the secret in AWS Secrets
              Manager that is used for CDN authorization.
            xml:
              name: cdnIdentifierSecret
        SecretsRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) for the IAM role that allows
              MediaPackage to communicate with AWS Secrets Manager.
            xml:
              name: secretsRoleArn
      type: object
    CreatePackagingGroup_request:
      properties:
        authorization:
          $ref: '#/components/schemas/CreatePackagingGroup_request_authorization'
        egressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogs_request_egressAccessLogs'
        id:
          description: The ID of the PackagingGroup.
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/__string'
          description: A collection of tags associated with a resource
          type: object
      required:
      - id
      type: object
    UpdatePackagingGroup_request:
      properties:
        authorization:
          $ref: '#/components/schemas/CreatePackagingGroup_request_authorization'
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/__string'
          description: A collection of tags associated with a resource
          type: object
      required:
      - tags
      type: object
    ConfigureLogsResponse_Authorization:
      allOf:
      - $ref: '#/components/schemas/Authorization'
      - xml:
          name: authorization
      example:
        SecretsRoleArn: ""
        CdnIdentifierSecret: ""
    ConfigureLogsResponse_EgressAccessLogs:
      allOf:
      - $ref: '#/components/schemas/EgressAccessLogs'
      - xml:
          name: egressAccessLogs
      example:
        LogGroupName: ""
    CreatePackagingConfigurationResponse_CmafPackage:
      allOf:
      - $ref: '#/components/schemas/CmafPackage'
      - xml:
          name: cmafPackage
      example:
        SegmentDurationSeconds: ""
        Encryption:
          ConstantInitializationVector: ""
          SpekeKeyProvider:
            SystemIds: ""
            EncryptionContractConfiguration:
              PresetSpeke20Audio: ""
              PresetSpeke20Video: ""
            RoleArn: ""
            Url: ""
        HlsManifests: ""
        IncludeEncoderConfigurationInSegments: ""
    CreatePackagingConfigurationResponse_DashPackage:
      allOf:
      - $ref: '#/components/schemas/DashPackage'
      - xml:
          name: dashPackage
      example:
        PeriodTriggers: ""
        IncludeIframeOnlyStream: ""
        SegmentDurationSeconds: ""
        Encryption:
          SpekeKeyProvider:
            SystemIds: ""
            EncryptionContractConfiguration:
              PresetSpeke20Audio: ""
              PresetSpeke20Video: ""
            RoleArn: ""
            Url: ""
        IncludeEncoderConfigurationInSegments: ""
        SegmentTemplateFormat: ""
        DashManifests: ""
    CreatePackagingConfigurationResponse_HlsPackage:
      allOf:
      - $ref: '#/components/schemas/HlsPackage'
      - xml:
          name: hlsPackage
      example:
        UseAudioRenditionGroup: ""
        SegmentDurationSeconds: ""
        Encryption:
          ConstantInitializationVector: ""
          SpekeKeyProvider:
            SystemIds: ""
            EncryptionContractConfiguration:
              PresetSpeke20Audio: ""
              PresetSpeke20Video: ""
            RoleArn: ""
            Url: ""
          EncryptionMethod: ""
        HlsManifests: ""
        IncludeDvbSubtitles: ""
    CreatePackagingConfigurationResponse_MssPackage:
      allOf:
      - $ref: '#/components/schemas/MssPackage'
      - xml:
          name: mssPackage
      example:
        MssManifests: ""
        SegmentDurationSeconds: ""
        Encryption:
          SpekeKeyProvider:
            SystemIds: ""
            EncryptionContractConfiguration:
              PresetSpeke20Audio: ""
              PresetSpeke20Video: ""
            RoleArn: ""
            Url: ""
    CmafEncryption_SpekeKeyProvider:
      allOf:
      - $ref: '#/components/schemas/SpekeKeyProvider'
      - xml:
          name: spekeKeyProvider
      example:
        SystemIds: ""
        EncryptionContractConfiguration:
          PresetSpeke20Audio: ""
          PresetSpeke20Video: ""
        RoleArn: ""
        Url: ""
    SpekeKeyProvider_EncryptionContractConfiguration:
      allOf:
      - $ref: '#/components/schemas/EncryptionContractConfiguration'
      - xml:
          name: encryptionContractConfiguration
      example:
        PresetSpeke20Audio: ""
        PresetSpeke20Video: ""
    DashManifest_StreamSelection:
      allOf:
      - $ref: '#/components/schemas/StreamSelection'
      - xml:
          name: streamSelection
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

