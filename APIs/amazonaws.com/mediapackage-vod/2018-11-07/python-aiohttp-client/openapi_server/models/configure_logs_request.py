# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.configure_logs_request_egress_access_logs import ConfigureLogsRequestEgressAccessLogs
from openapi_server import util


class ConfigureLogsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, egress_access_logs: ConfigureLogsRequestEgressAccessLogs=None):
        """ConfigureLogsRequest - a model defined in OpenAPI

        :param egress_access_logs: The egress_access_logs of this ConfigureLogsRequest.
        """
        self.openapi_types = {
            'egress_access_logs': ConfigureLogsRequestEgressAccessLogs
        }

        self.attribute_map = {
            'egress_access_logs': 'egressAccessLogs'
        }

        self._egress_access_logs = egress_access_logs

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConfigureLogsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConfigureLogs_request of this ConfigureLogsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def egress_access_logs(self):
        """Gets the egress_access_logs of this ConfigureLogsRequest.


        :return: The egress_access_logs of this ConfigureLogsRequest.
        :rtype: ConfigureLogsRequestEgressAccessLogs
        """
        return self._egress_access_logs

    @egress_access_logs.setter
    def egress_access_logs(self, egress_access_logs):
        """Sets the egress_access_logs of this ConfigureLogsRequest.


        :param egress_access_logs: The egress_access_logs of this ConfigureLogsRequest.
        :type egress_access_logs: ConfigureLogsRequestEgressAccessLogs
        """

        self._egress_access_logs = egress_access_logs
