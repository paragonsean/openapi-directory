# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cmaf_encryption_speke_key_provider import CmafEncryptionSpekeKeyProvider
from openapi_server import util


class MssEncryption(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, speke_key_provider: CmafEncryptionSpekeKeyProvider=None):
        """MssEncryption - a model defined in OpenAPI

        :param speke_key_provider: The speke_key_provider of this MssEncryption.
        """
        self.openapi_types = {
            'speke_key_provider': CmafEncryptionSpekeKeyProvider
        }

        self.attribute_map = {
            'speke_key_provider': 'SpekeKeyProvider'
        }

        self._speke_key_provider = speke_key_provider

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MssEncryption':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MssEncryption of this MssEncryption.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def speke_key_provider(self):
        """Gets the speke_key_provider of this MssEncryption.


        :return: The speke_key_provider of this MssEncryption.
        :rtype: CmafEncryptionSpekeKeyProvider
        """
        return self._speke_key_provider

    @speke_key_provider.setter
    def speke_key_provider(self, speke_key_provider):
        """Sets the speke_key_provider of this MssEncryption.


        :param speke_key_provider: The speke_key_provider of this MssEncryption.
        :type speke_key_provider: CmafEncryptionSpekeKeyProvider
        """
        if speke_key_provider is None:
            raise ValueError("Invalid value for `speke_key_provider`, must not be `None`")

        self._speke_key_provider = speke_key_provider
