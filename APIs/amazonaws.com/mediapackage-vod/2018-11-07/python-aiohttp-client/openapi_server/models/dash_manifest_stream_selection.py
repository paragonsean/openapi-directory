# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.stream_order import StreamOrder
from openapi_server import util


class DashManifestStreamSelection(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_video_bits_per_second: int=None, min_video_bits_per_second: int=None, stream_order: StreamOrder=None):
        """DashManifestStreamSelection - a model defined in OpenAPI

        :param max_video_bits_per_second: The max_video_bits_per_second of this DashManifestStreamSelection.
        :param min_video_bits_per_second: The min_video_bits_per_second of this DashManifestStreamSelection.
        :param stream_order: The stream_order of this DashManifestStreamSelection.
        """
        self.openapi_types = {
            'max_video_bits_per_second': int,
            'min_video_bits_per_second': int,
            'stream_order': StreamOrder
        }

        self.attribute_map = {
            'max_video_bits_per_second': 'MaxVideoBitsPerSecond',
            'min_video_bits_per_second': 'MinVideoBitsPerSecond',
            'stream_order': 'StreamOrder'
        }

        self._max_video_bits_per_second = max_video_bits_per_second
        self._min_video_bits_per_second = min_video_bits_per_second
        self._stream_order = stream_order

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DashManifestStreamSelection':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DashManifest_StreamSelection of this DashManifestStreamSelection.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_video_bits_per_second(self):
        """Gets the max_video_bits_per_second of this DashManifestStreamSelection.


        :return: The max_video_bits_per_second of this DashManifestStreamSelection.
        :rtype: int
        """
        return self._max_video_bits_per_second

    @max_video_bits_per_second.setter
    def max_video_bits_per_second(self, max_video_bits_per_second):
        """Sets the max_video_bits_per_second of this DashManifestStreamSelection.


        :param max_video_bits_per_second: The max_video_bits_per_second of this DashManifestStreamSelection.
        :type max_video_bits_per_second: int
        """

        self._max_video_bits_per_second = max_video_bits_per_second

    @property
    def min_video_bits_per_second(self):
        """Gets the min_video_bits_per_second of this DashManifestStreamSelection.


        :return: The min_video_bits_per_second of this DashManifestStreamSelection.
        :rtype: int
        """
        return self._min_video_bits_per_second

    @min_video_bits_per_second.setter
    def min_video_bits_per_second(self, min_video_bits_per_second):
        """Sets the min_video_bits_per_second of this DashManifestStreamSelection.


        :param min_video_bits_per_second: The min_video_bits_per_second of this DashManifestStreamSelection.
        :type min_video_bits_per_second: int
        """

        self._min_video_bits_per_second = min_video_bits_per_second

    @property
    def stream_order(self):
        """Gets the stream_order of this DashManifestStreamSelection.


        :return: The stream_order of this DashManifestStreamSelection.
        :rtype: StreamOrder
        """
        return self._stream_order

    @stream_order.setter
    def stream_order(self, stream_order):
        """Sets the stream_order of this DashManifestStreamSelection.


        :param stream_order: The stream_order of this DashManifestStreamSelection.
        :type stream_order: StreamOrder
        """

        self._stream_order = stream_order
