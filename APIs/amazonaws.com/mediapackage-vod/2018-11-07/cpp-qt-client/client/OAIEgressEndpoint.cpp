/**
 * AWS Elemental MediaPackage VOD
 * AWS Elemental MediaPackage VOD
 *
 * The version of the OpenAPI document: 2018-11-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEgressEndpoint.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEgressEndpoint::OAIEgressEndpoint(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEgressEndpoint::OAIEgressEndpoint() {
    this->initializeModel();
}

OAIEgressEndpoint::~OAIEgressEndpoint() {}

void OAIEgressEndpoint::initializeModel() {

    m_packaging_configuration_id_isSet = false;
    m_packaging_configuration_id_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIEgressEndpoint::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEgressEndpoint::fromJsonObject(QJsonObject json) {

    m_packaging_configuration_id_isValid = ::OpenAPI::fromJsonValue(m_packaging_configuration_id, json[QString("PackagingConfigurationId")]);
    m_packaging_configuration_id_isSet = !json[QString("PackagingConfigurationId")].isNull() && m_packaging_configuration_id_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("Url")]);
    m_url_isSet = !json[QString("Url")].isNull() && m_url_isValid;
}

QString OAIEgressEndpoint::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEgressEndpoint::asJsonObject() const {
    QJsonObject obj;
    if (m_packaging_configuration_id_isSet) {
        obj.insert(QString("PackagingConfigurationId"), ::OpenAPI::toJsonValue(m_packaging_configuration_id));
    }
    if (m_status_isSet) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_url_isSet) {
        obj.insert(QString("Url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAIEgressEndpoint::getPackagingConfigurationId() const {
    return m_packaging_configuration_id;
}
void OAIEgressEndpoint::setPackagingConfigurationId(const QString &packaging_configuration_id) {
    m_packaging_configuration_id = packaging_configuration_id;
    m_packaging_configuration_id_isSet = true;
}

bool OAIEgressEndpoint::is_packaging_configuration_id_Set() const{
    return m_packaging_configuration_id_isSet;
}

bool OAIEgressEndpoint::is_packaging_configuration_id_Valid() const{
    return m_packaging_configuration_id_isValid;
}

QString OAIEgressEndpoint::getStatus() const {
    return m_status;
}
void OAIEgressEndpoint::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIEgressEndpoint::is_status_Set() const{
    return m_status_isSet;
}

bool OAIEgressEndpoint::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIEgressEndpoint::getUrl() const {
    return m_url;
}
void OAIEgressEndpoint::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIEgressEndpoint::is_url_Set() const{
    return m_url_isSet;
}

bool OAIEgressEndpoint::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIEgressEndpoint::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_packaging_configuration_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEgressEndpoint::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
