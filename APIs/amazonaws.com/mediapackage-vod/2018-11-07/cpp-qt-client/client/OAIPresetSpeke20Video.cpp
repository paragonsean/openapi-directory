/**
 * AWS Elemental MediaPackage VOD
 * AWS Elemental MediaPackage VOD
 *
 * The version of the OpenAPI document: 2018-11-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPresetSpeke20Video.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPresetSpeke20Video::OAIPresetSpeke20Video(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPresetSpeke20Video::OAIPresetSpeke20Video() {
    this->initializeModel();
}

OAIPresetSpeke20Video::~OAIPresetSpeke20Video() {}

void OAIPresetSpeke20Video::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIPresetSpeke20Video::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIPresetSpeke20Video::fromJson(QString jsonString) {
    
    if ( jsonString.compare("PRESET-VIDEO-1", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPresetSpeke20Video::PRESET_VIDEO_1;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PRESET-VIDEO-2", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPresetSpeke20Video::PRESET_VIDEO_2;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PRESET-VIDEO-3", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPresetSpeke20Video::PRESET_VIDEO_3;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PRESET-VIDEO-4", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPresetSpeke20Video::PRESET_VIDEO_4;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PRESET-VIDEO-5", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPresetSpeke20Video::PRESET_VIDEO_5;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PRESET-VIDEO-6", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPresetSpeke20Video::PRESET_VIDEO_6;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PRESET-VIDEO-7", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPresetSpeke20Video::PRESET_VIDEO_7;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PRESET-VIDEO-8", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPresetSpeke20Video::PRESET_VIDEO_8;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SHARED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPresetSpeke20Video::SHARED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UNENCRYPTED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPresetSpeke20Video::UNENCRYPTED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIPresetSpeke20Video::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIPresetSpeke20Video::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIPresetSpeke20Video::PRESET_VIDEO_1:
            val = "PRESET-VIDEO-1";
            break;
        case eOAIPresetSpeke20Video::PRESET_VIDEO_2:
            val = "PRESET-VIDEO-2";
            break;
        case eOAIPresetSpeke20Video::PRESET_VIDEO_3:
            val = "PRESET-VIDEO-3";
            break;
        case eOAIPresetSpeke20Video::PRESET_VIDEO_4:
            val = "PRESET-VIDEO-4";
            break;
        case eOAIPresetSpeke20Video::PRESET_VIDEO_5:
            val = "PRESET-VIDEO-5";
            break;
        case eOAIPresetSpeke20Video::PRESET_VIDEO_6:
            val = "PRESET-VIDEO-6";
            break;
        case eOAIPresetSpeke20Video::PRESET_VIDEO_7:
            val = "PRESET-VIDEO-7";
            break;
        case eOAIPresetSpeke20Video::PRESET_VIDEO_8:
            val = "PRESET-VIDEO-8";
            break;
        case eOAIPresetSpeke20Video::SHARED:
            val = "SHARED";
            break;
        case eOAIPresetSpeke20Video::UNENCRYPTED:
            val = "UNENCRYPTED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIPresetSpeke20Video::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIPresetSpeke20Video::eOAIPresetSpeke20Video OAIPresetSpeke20Video::getValue() const {
    return m_value;
}

void OAIPresetSpeke20Video::setValue(const OAIPresetSpeke20Video::eOAIPresetSpeke20Video& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIPresetSpeke20Video::isSet() const {
    
    return m_value_isSet;
}

bool OAIPresetSpeke20Video::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
