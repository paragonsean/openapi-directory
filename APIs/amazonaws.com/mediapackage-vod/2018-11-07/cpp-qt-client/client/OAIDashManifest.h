/**
 * AWS Elemental MediaPackage VOD
 * AWS Elemental MediaPackage VOD
 *
 * The version of the OpenAPI document: 2018-11-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDashManifest.h
 *
 * A DASH manifest configuration.
 */

#ifndef OAIDashManifest_H
#define OAIDashManifest_H

#include <QJsonObject>

#include "OAIDashManifest_StreamSelection.h"
#include "OAIManifestLayout.h"
#include "OAIProfile.h"
#include "OAIScteMarkersSource.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDashManifest_StreamSelection;

class OAIDashManifest : public OAIObject {
public:
    OAIDashManifest();
    OAIDashManifest(QString json);
    ~OAIDashManifest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIManifestLayout getManifestLayout() const;
    void setManifestLayout(const OAIManifestLayout &manifest_layout);
    bool is_manifest_layout_Set() const;
    bool is_manifest_layout_Valid() const;

    QString getManifestName() const;
    void setManifestName(const QString &manifest_name);
    bool is_manifest_name_Set() const;
    bool is_manifest_name_Valid() const;

    qint32 getMinBufferTimeSeconds() const;
    void setMinBufferTimeSeconds(const qint32 &min_buffer_time_seconds);
    bool is_min_buffer_time_seconds_Set() const;
    bool is_min_buffer_time_seconds_Valid() const;

    OAIProfile getProfile() const;
    void setProfile(const OAIProfile &profile);
    bool is_profile_Set() const;
    bool is_profile_Valid() const;

    OAIScteMarkersSource getScteMarkersSource() const;
    void setScteMarkersSource(const OAIScteMarkersSource &scte_markers_source);
    bool is_scte_markers_source_Set() const;
    bool is_scte_markers_source_Valid() const;

    OAIDashManifest_StreamSelection getStreamSelection() const;
    void setStreamSelection(const OAIDashManifest_StreamSelection &stream_selection);
    bool is_stream_selection_Set() const;
    bool is_stream_selection_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIManifestLayout m_manifest_layout;
    bool m_manifest_layout_isSet;
    bool m_manifest_layout_isValid;

    QString m_manifest_name;
    bool m_manifest_name_isSet;
    bool m_manifest_name_isValid;

    qint32 m_min_buffer_time_seconds;
    bool m_min_buffer_time_seconds_isSet;
    bool m_min_buffer_time_seconds_isValid;

    OAIProfile m_profile;
    bool m_profile_isSet;
    bool m_profile_isValid;

    OAIScteMarkersSource m_scte_markers_source;
    bool m_scte_markers_source_isSet;
    bool m_scte_markers_source_isValid;

    OAIDashManifest_StreamSelection m_stream_selection;
    bool m_stream_selection_isSet;
    bool m_stream_selection_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDashManifest)

#endif // OAIDashManifest_H
