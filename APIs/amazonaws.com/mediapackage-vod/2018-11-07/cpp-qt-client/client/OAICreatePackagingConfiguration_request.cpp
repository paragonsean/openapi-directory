/**
 * AWS Elemental MediaPackage VOD
 * AWS Elemental MediaPackage VOD
 *
 * The version of the OpenAPI document: 2018-11-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreatePackagingConfiguration_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreatePackagingConfiguration_request::OAICreatePackagingConfiguration_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreatePackagingConfiguration_request::OAICreatePackagingConfiguration_request() {
    this->initializeModel();
}

OAICreatePackagingConfiguration_request::~OAICreatePackagingConfiguration_request() {}

void OAICreatePackagingConfiguration_request::initializeModel() {

    m_cmaf_package_isSet = false;
    m_cmaf_package_isValid = false;

    m_dash_package_isSet = false;
    m_dash_package_isValid = false;

    m_hls_package_isSet = false;
    m_hls_package_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_mss_package_isSet = false;
    m_mss_package_isValid = false;

    m_packaging_group_id_isSet = false;
    m_packaging_group_id_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAICreatePackagingConfiguration_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreatePackagingConfiguration_request::fromJsonObject(QJsonObject json) {

    m_cmaf_package_isValid = ::OpenAPI::fromJsonValue(m_cmaf_package, json[QString("cmafPackage")]);
    m_cmaf_package_isSet = !json[QString("cmafPackage")].isNull() && m_cmaf_package_isValid;

    m_dash_package_isValid = ::OpenAPI::fromJsonValue(m_dash_package, json[QString("dashPackage")]);
    m_dash_package_isSet = !json[QString("dashPackage")].isNull() && m_dash_package_isValid;

    m_hls_package_isValid = ::OpenAPI::fromJsonValue(m_hls_package, json[QString("hlsPackage")]);
    m_hls_package_isSet = !json[QString("hlsPackage")].isNull() && m_hls_package_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_mss_package_isValid = ::OpenAPI::fromJsonValue(m_mss_package, json[QString("mssPackage")]);
    m_mss_package_isSet = !json[QString("mssPackage")].isNull() && m_mss_package_isValid;

    m_packaging_group_id_isValid = ::OpenAPI::fromJsonValue(m_packaging_group_id, json[QString("packagingGroupId")]);
    m_packaging_group_id_isSet = !json[QString("packagingGroupId")].isNull() && m_packaging_group_id_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;
}

QString OAICreatePackagingConfiguration_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreatePackagingConfiguration_request::asJsonObject() const {
    QJsonObject obj;
    if (m_cmaf_package.isSet()) {
        obj.insert(QString("cmafPackage"), ::OpenAPI::toJsonValue(m_cmaf_package));
    }
    if (m_dash_package.isSet()) {
        obj.insert(QString("dashPackage"), ::OpenAPI::toJsonValue(m_dash_package));
    }
    if (m_hls_package.isSet()) {
        obj.insert(QString("hlsPackage"), ::OpenAPI::toJsonValue(m_hls_package));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_mss_package.isSet()) {
        obj.insert(QString("mssPackage"), ::OpenAPI::toJsonValue(m_mss_package));
    }
    if (m_packaging_group_id_isSet) {
        obj.insert(QString("packagingGroupId"), ::OpenAPI::toJsonValue(m_packaging_group_id));
    }
    if (m_tags.size() > 0) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

OAICreatePackagingConfiguration_request_cmafPackage OAICreatePackagingConfiguration_request::getCmafPackage() const {
    return m_cmaf_package;
}
void OAICreatePackagingConfiguration_request::setCmafPackage(const OAICreatePackagingConfiguration_request_cmafPackage &cmaf_package) {
    m_cmaf_package = cmaf_package;
    m_cmaf_package_isSet = true;
}

bool OAICreatePackagingConfiguration_request::is_cmaf_package_Set() const{
    return m_cmaf_package_isSet;
}

bool OAICreatePackagingConfiguration_request::is_cmaf_package_Valid() const{
    return m_cmaf_package_isValid;
}

OAICreatePackagingConfiguration_request_dashPackage OAICreatePackagingConfiguration_request::getDashPackage() const {
    return m_dash_package;
}
void OAICreatePackagingConfiguration_request::setDashPackage(const OAICreatePackagingConfiguration_request_dashPackage &dash_package) {
    m_dash_package = dash_package;
    m_dash_package_isSet = true;
}

bool OAICreatePackagingConfiguration_request::is_dash_package_Set() const{
    return m_dash_package_isSet;
}

bool OAICreatePackagingConfiguration_request::is_dash_package_Valid() const{
    return m_dash_package_isValid;
}

OAICreatePackagingConfiguration_request_hlsPackage OAICreatePackagingConfiguration_request::getHlsPackage() const {
    return m_hls_package;
}
void OAICreatePackagingConfiguration_request::setHlsPackage(const OAICreatePackagingConfiguration_request_hlsPackage &hls_package) {
    m_hls_package = hls_package;
    m_hls_package_isSet = true;
}

bool OAICreatePackagingConfiguration_request::is_hls_package_Set() const{
    return m_hls_package_isSet;
}

bool OAICreatePackagingConfiguration_request::is_hls_package_Valid() const{
    return m_hls_package_isValid;
}

QString OAICreatePackagingConfiguration_request::getId() const {
    return m_id;
}
void OAICreatePackagingConfiguration_request::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICreatePackagingConfiguration_request::is_id_Set() const{
    return m_id_isSet;
}

bool OAICreatePackagingConfiguration_request::is_id_Valid() const{
    return m_id_isValid;
}

OAICreatePackagingConfiguration_request_mssPackage OAICreatePackagingConfiguration_request::getMssPackage() const {
    return m_mss_package;
}
void OAICreatePackagingConfiguration_request::setMssPackage(const OAICreatePackagingConfiguration_request_mssPackage &mss_package) {
    m_mss_package = mss_package;
    m_mss_package_isSet = true;
}

bool OAICreatePackagingConfiguration_request::is_mss_package_Set() const{
    return m_mss_package_isSet;
}

bool OAICreatePackagingConfiguration_request::is_mss_package_Valid() const{
    return m_mss_package_isValid;
}

QString OAICreatePackagingConfiguration_request::getPackagingGroupId() const {
    return m_packaging_group_id;
}
void OAICreatePackagingConfiguration_request::setPackagingGroupId(const QString &packaging_group_id) {
    m_packaging_group_id = packaging_group_id;
    m_packaging_group_id_isSet = true;
}

bool OAICreatePackagingConfiguration_request::is_packaging_group_id_Set() const{
    return m_packaging_group_id_isSet;
}

bool OAICreatePackagingConfiguration_request::is_packaging_group_id_Valid() const{
    return m_packaging_group_id_isValid;
}

QMap<QString, QString> OAICreatePackagingConfiguration_request::getTags() const {
    return m_tags;
}
void OAICreatePackagingConfiguration_request::setTags(const QMap<QString, QString> &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAICreatePackagingConfiguration_request::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAICreatePackagingConfiguration_request::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAICreatePackagingConfiguration_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cmaf_package.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_dash_package.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_hls_package.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mss_package.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_packaging_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreatePackagingConfiguration_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && m_packaging_group_id_isValid && true;
}

} // namespace OpenAPI
