/**
 * AWS Elemental MediaPackage VOD
 * AWS Elemental MediaPackage VOD
 *
 * The version of the OpenAPI document: 2018-11-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHlsManifest.h
 *
 * An HTTP Live Streaming (HLS) manifest configuration.
 */

#ifndef OAIHlsManifest_H
#define OAIHlsManifest_H

#include <QJsonObject>

#include "OAIAdMarkers.h"
#include "OAIDashManifest_StreamSelection.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDashManifest_StreamSelection;

class OAIHlsManifest : public OAIObject {
public:
    OAIHlsManifest();
    OAIHlsManifest(QString json);
    ~OAIHlsManifest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAdMarkers getAdMarkers() const;
    void setAdMarkers(const OAIAdMarkers &ad_markers);
    bool is_ad_markers_Set() const;
    bool is_ad_markers_Valid() const;

    bool getIncludeIframeOnlyStream() const;
    void setIncludeIframeOnlyStream(const bool &include_iframe_only_stream);
    bool is_include_iframe_only_stream_Set() const;
    bool is_include_iframe_only_stream_Valid() const;

    QString getManifestName() const;
    void setManifestName(const QString &manifest_name);
    bool is_manifest_name_Set() const;
    bool is_manifest_name_Valid() const;

    qint32 getProgramDateTimeIntervalSeconds() const;
    void setProgramDateTimeIntervalSeconds(const qint32 &program_date_time_interval_seconds);
    bool is_program_date_time_interval_seconds_Set() const;
    bool is_program_date_time_interval_seconds_Valid() const;

    bool getRepeatExtXKey() const;
    void setRepeatExtXKey(const bool &repeat_ext_x_key);
    bool is_repeat_ext_x_key_Set() const;
    bool is_repeat_ext_x_key_Valid() const;

    OAIDashManifest_StreamSelection getStreamSelection() const;
    void setStreamSelection(const OAIDashManifest_StreamSelection &stream_selection);
    bool is_stream_selection_Set() const;
    bool is_stream_selection_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAdMarkers m_ad_markers;
    bool m_ad_markers_isSet;
    bool m_ad_markers_isValid;

    bool m_include_iframe_only_stream;
    bool m_include_iframe_only_stream_isSet;
    bool m_include_iframe_only_stream_isValid;

    QString m_manifest_name;
    bool m_manifest_name_isSet;
    bool m_manifest_name_isValid;

    qint32 m_program_date_time_interval_seconds;
    bool m_program_date_time_interval_seconds_isSet;
    bool m_program_date_time_interval_seconds_isValid;

    bool m_repeat_ext_x_key;
    bool m_repeat_ext_x_key_isSet;
    bool m_repeat_ext_x_key_isValid;

    OAIDashManifest_StreamSelection m_stream_selection;
    bool m_stream_selection_isSet;
    bool m_stream_selection_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHlsManifest)

#endif // OAIHlsManifest_H
