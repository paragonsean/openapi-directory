/**
 * Amazon VPC Lattice
 * Amazon VPC Lattice is a fully managed application networking service that you use to connect, secure, and monitor all of your services across multiple accounts and virtual private clouds (VPCs). Amazon VPC Lattice interconnects your microservices and legacy services within a logical boundary, so that you can discover and manage them more efficiently. For more information, see the <a href=\"https://docs.aws.amazon.com/vpc-lattice/latest/ug/\">Amazon VPC Lattice User Guide</a> 
 *
 * The version of the OpenAPI document: 2022-11-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetServiceNetworkResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetServiceNetworkResponse::OAIGetServiceNetworkResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetServiceNetworkResponse::OAIGetServiceNetworkResponse() {
    this->initializeModel();
}

OAIGetServiceNetworkResponse::~OAIGetServiceNetworkResponse() {}

void OAIGetServiceNetworkResponse::initializeModel() {

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_auth_type_isSet = false;
    m_auth_type_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_last_updated_at_isSet = false;
    m_last_updated_at_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_number_of_associated_services_isSet = false;
    m_number_of_associated_services_isValid = false;

    m_number_of_associated_vpcs_isSet = false;
    m_number_of_associated_vpcs_isValid = false;
}

void OAIGetServiceNetworkResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetServiceNetworkResponse::fromJsonObject(QJsonObject json) {

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("arn")]);
    m_arn_isSet = !json[QString("arn")].isNull() && m_arn_isValid;

    m_auth_type_isValid = ::OpenAPI::fromJsonValue(m_auth_type, json[QString("authType")]);
    m_auth_type_isSet = !json[QString("authType")].isNull() && m_auth_type_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_last_updated_at_isValid = ::OpenAPI::fromJsonValue(m_last_updated_at, json[QString("lastUpdatedAt")]);
    m_last_updated_at_isSet = !json[QString("lastUpdatedAt")].isNull() && m_last_updated_at_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_number_of_associated_services_isValid = ::OpenAPI::fromJsonValue(m_number_of_associated_services, json[QString("numberOfAssociatedServices")]);
    m_number_of_associated_services_isSet = !json[QString("numberOfAssociatedServices")].isNull() && m_number_of_associated_services_isValid;

    m_number_of_associated_vpcs_isValid = ::OpenAPI::fromJsonValue(m_number_of_associated_vpcs, json[QString("numberOfAssociatedVPCs")]);
    m_number_of_associated_vpcs_isSet = !json[QString("numberOfAssociatedVPCs")].isNull() && m_number_of_associated_vpcs_isValid;
}

QString OAIGetServiceNetworkResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetServiceNetworkResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_arn_isSet) {
        obj.insert(QString("arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_auth_type.isSet()) {
        obj.insert(QString("authType"), ::OpenAPI::toJsonValue(m_auth_type));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_last_updated_at_isSet) {
        obj.insert(QString("lastUpdatedAt"), ::OpenAPI::toJsonValue(m_last_updated_at));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_number_of_associated_services_isSet) {
        obj.insert(QString("numberOfAssociatedServices"), ::OpenAPI::toJsonValue(m_number_of_associated_services));
    }
    if (m_number_of_associated_vpcs_isSet) {
        obj.insert(QString("numberOfAssociatedVPCs"), ::OpenAPI::toJsonValue(m_number_of_associated_vpcs));
    }
    return obj;
}

QString OAIGetServiceNetworkResponse::getArn() const {
    return m_arn;
}
void OAIGetServiceNetworkResponse::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAIGetServiceNetworkResponse::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAIGetServiceNetworkResponse::is_arn_Valid() const{
    return m_arn_isValid;
}

OAIAuthType OAIGetServiceNetworkResponse::getAuthType() const {
    return m_auth_type;
}
void OAIGetServiceNetworkResponse::setAuthType(const OAIAuthType &auth_type) {
    m_auth_type = auth_type;
    m_auth_type_isSet = true;
}

bool OAIGetServiceNetworkResponse::is_auth_type_Set() const{
    return m_auth_type_isSet;
}

bool OAIGetServiceNetworkResponse::is_auth_type_Valid() const{
    return m_auth_type_isValid;
}

QDateTime OAIGetServiceNetworkResponse::getCreatedAt() const {
    return m_created_at;
}
void OAIGetServiceNetworkResponse::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIGetServiceNetworkResponse::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIGetServiceNetworkResponse::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIGetServiceNetworkResponse::getId() const {
    return m_id;
}
void OAIGetServiceNetworkResponse::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGetServiceNetworkResponse::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGetServiceNetworkResponse::is_id_Valid() const{
    return m_id_isValid;
}

QDateTime OAIGetServiceNetworkResponse::getLastUpdatedAt() const {
    return m_last_updated_at;
}
void OAIGetServiceNetworkResponse::setLastUpdatedAt(const QDateTime &last_updated_at) {
    m_last_updated_at = last_updated_at;
    m_last_updated_at_isSet = true;
}

bool OAIGetServiceNetworkResponse::is_last_updated_at_Set() const{
    return m_last_updated_at_isSet;
}

bool OAIGetServiceNetworkResponse::is_last_updated_at_Valid() const{
    return m_last_updated_at_isValid;
}

QString OAIGetServiceNetworkResponse::getName() const {
    return m_name;
}
void OAIGetServiceNetworkResponse::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGetServiceNetworkResponse::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGetServiceNetworkResponse::is_name_Valid() const{
    return m_name_isValid;
}

qint32 OAIGetServiceNetworkResponse::getNumberOfAssociatedServices() const {
    return m_number_of_associated_services;
}
void OAIGetServiceNetworkResponse::setNumberOfAssociatedServices(const qint32 &number_of_associated_services) {
    m_number_of_associated_services = number_of_associated_services;
    m_number_of_associated_services_isSet = true;
}

bool OAIGetServiceNetworkResponse::is_number_of_associated_services_Set() const{
    return m_number_of_associated_services_isSet;
}

bool OAIGetServiceNetworkResponse::is_number_of_associated_services_Valid() const{
    return m_number_of_associated_services_isValid;
}

qint32 OAIGetServiceNetworkResponse::getNumberOfAssociatedVpcs() const {
    return m_number_of_associated_vpcs;
}
void OAIGetServiceNetworkResponse::setNumberOfAssociatedVpcs(const qint32 &number_of_associated_vpcs) {
    m_number_of_associated_vpcs = number_of_associated_vpcs;
    m_number_of_associated_vpcs_isSet = true;
}

bool OAIGetServiceNetworkResponse::is_number_of_associated_vpcs_Set() const{
    return m_number_of_associated_vpcs_isSet;
}

bool OAIGetServiceNetworkResponse::is_number_of_associated_vpcs_Valid() const{
    return m_number_of_associated_vpcs_isValid;
}

bool OAIGetServiceNetworkResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_auth_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_associated_services_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_associated_vpcs_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetServiceNetworkResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
