/**
 * Amazon VPC Lattice
 * Amazon VPC Lattice is a fully managed application networking service that you use to connect, secure, and monitor all of your services across multiple accounts and virtual private clouds (VPCs). Amazon VPC Lattice interconnects your microservices and legacy services within a logical boundary, so that you can discover and manage them more efficiently. For more information, see the <a href=\"https://docs.aws.amazon.com/vpc-lattice/latest/ug/\">Amazon VPC Lattice User Guide</a> 
 *
 * The version of the OpenAPI document: 2022-11-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateServiceNetworkServiceAssociationResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateServiceNetworkServiceAssociationResponse::OAICreateServiceNetworkServiceAssociationResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateServiceNetworkServiceAssociationResponse::OAICreateServiceNetworkServiceAssociationResponse() {
    this->initializeModel();
}

OAICreateServiceNetworkServiceAssociationResponse::~OAICreateServiceNetworkServiceAssociationResponse() {}

void OAICreateServiceNetworkServiceAssociationResponse::initializeModel() {

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_created_by_isSet = false;
    m_created_by_isValid = false;

    m_custom_domain_name_isSet = false;
    m_custom_domain_name_isValid = false;

    m_dns_entry_isSet = false;
    m_dns_entry_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAICreateServiceNetworkServiceAssociationResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateServiceNetworkServiceAssociationResponse::fromJsonObject(QJsonObject json) {

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("arn")]);
    m_arn_isSet = !json[QString("arn")].isNull() && m_arn_isValid;

    m_created_by_isValid = ::OpenAPI::fromJsonValue(m_created_by, json[QString("createdBy")]);
    m_created_by_isSet = !json[QString("createdBy")].isNull() && m_created_by_isValid;

    m_custom_domain_name_isValid = ::OpenAPI::fromJsonValue(m_custom_domain_name, json[QString("customDomainName")]);
    m_custom_domain_name_isSet = !json[QString("customDomainName")].isNull() && m_custom_domain_name_isValid;

    m_dns_entry_isValid = ::OpenAPI::fromJsonValue(m_dns_entry, json[QString("dnsEntry")]);
    m_dns_entry_isSet = !json[QString("dnsEntry")].isNull() && m_dns_entry_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAICreateServiceNetworkServiceAssociationResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateServiceNetworkServiceAssociationResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_arn_isSet) {
        obj.insert(QString("arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_created_by_isSet) {
        obj.insert(QString("createdBy"), ::OpenAPI::toJsonValue(m_created_by));
    }
    if (m_custom_domain_name_isSet) {
        obj.insert(QString("customDomainName"), ::OpenAPI::toJsonValue(m_custom_domain_name));
    }
    if (m_dns_entry.isSet()) {
        obj.insert(QString("dnsEntry"), ::OpenAPI::toJsonValue(m_dns_entry));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAICreateServiceNetworkServiceAssociationResponse::getArn() const {
    return m_arn;
}
void OAICreateServiceNetworkServiceAssociationResponse::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAICreateServiceNetworkServiceAssociationResponse::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAICreateServiceNetworkServiceAssociationResponse::is_arn_Valid() const{
    return m_arn_isValid;
}

QString OAICreateServiceNetworkServiceAssociationResponse::getCreatedBy() const {
    return m_created_by;
}
void OAICreateServiceNetworkServiceAssociationResponse::setCreatedBy(const QString &created_by) {
    m_created_by = created_by;
    m_created_by_isSet = true;
}

bool OAICreateServiceNetworkServiceAssociationResponse::is_created_by_Set() const{
    return m_created_by_isSet;
}

bool OAICreateServiceNetworkServiceAssociationResponse::is_created_by_Valid() const{
    return m_created_by_isValid;
}

QString OAICreateServiceNetworkServiceAssociationResponse::getCustomDomainName() const {
    return m_custom_domain_name;
}
void OAICreateServiceNetworkServiceAssociationResponse::setCustomDomainName(const QString &custom_domain_name) {
    m_custom_domain_name = custom_domain_name;
    m_custom_domain_name_isSet = true;
}

bool OAICreateServiceNetworkServiceAssociationResponse::is_custom_domain_name_Set() const{
    return m_custom_domain_name_isSet;
}

bool OAICreateServiceNetworkServiceAssociationResponse::is_custom_domain_name_Valid() const{
    return m_custom_domain_name_isValid;
}

OAICreateServiceNetworkServiceAssociationResponse_dnsEntry OAICreateServiceNetworkServiceAssociationResponse::getDnsEntry() const {
    return m_dns_entry;
}
void OAICreateServiceNetworkServiceAssociationResponse::setDnsEntry(const OAICreateServiceNetworkServiceAssociationResponse_dnsEntry &dns_entry) {
    m_dns_entry = dns_entry;
    m_dns_entry_isSet = true;
}

bool OAICreateServiceNetworkServiceAssociationResponse::is_dns_entry_Set() const{
    return m_dns_entry_isSet;
}

bool OAICreateServiceNetworkServiceAssociationResponse::is_dns_entry_Valid() const{
    return m_dns_entry_isValid;
}

QString OAICreateServiceNetworkServiceAssociationResponse::getId() const {
    return m_id;
}
void OAICreateServiceNetworkServiceAssociationResponse::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICreateServiceNetworkServiceAssociationResponse::is_id_Set() const{
    return m_id_isSet;
}

bool OAICreateServiceNetworkServiceAssociationResponse::is_id_Valid() const{
    return m_id_isValid;
}

OAIServiceNetworkServiceAssociationStatus OAICreateServiceNetworkServiceAssociationResponse::getStatus() const {
    return m_status;
}
void OAICreateServiceNetworkServiceAssociationResponse::setStatus(const OAIServiceNetworkServiceAssociationStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAICreateServiceNetworkServiceAssociationResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAICreateServiceNetworkServiceAssociationResponse::is_status_Valid() const{
    return m_status_isValid;
}

bool OAICreateServiceNetworkServiceAssociationResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_domain_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dns_entry.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateServiceNetworkServiceAssociationResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
