/**
 * Amazon VPC Lattice
 * Amazon VPC Lattice is a fully managed application networking service that you use to connect, secure, and monitor all of your services across multiple accounts and virtual private clouds (VPCs). Amazon VPC Lattice interconnects your microservices and legacy services within a logical boundary, so that you can discover and manage them more efficiently. For more information, see the <a href=\"https://docs.aws.amazon.com/vpc-lattice/latest/ug/\">Amazon VPC Lattice User Guide</a> 
 *
 * The version of the OpenAPI document: 2022-11-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRegisterTargetsResponse.h
 *
 * 
 */

#ifndef OAIRegisterTargetsResponse_H
#define OAIRegisterTargetsResponse_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRegisterTargetsResponse : public OAIObject {
public:
    OAIRegisterTargetsResponse();
    OAIRegisterTargetsResponse(QString json);
    ~OAIRegisterTargetsResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getSuccessful() const;
    void setSuccessful(const QList &successful);
    bool is_successful_Set() const;
    bool is_successful_Valid() const;

    QList getUnsuccessful() const;
    void setUnsuccessful(const QList &unsuccessful);
    bool is_unsuccessful_Set() const;
    bool is_unsuccessful_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_successful;
    bool m_successful_isSet;
    bool m_successful_isValid;

    QList m_unsuccessful;
    bool m_unsuccessful_isSet;
    bool m_unsuccessful_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRegisterTargetsResponse)

#endif // OAIRegisterTargetsResponse_H
