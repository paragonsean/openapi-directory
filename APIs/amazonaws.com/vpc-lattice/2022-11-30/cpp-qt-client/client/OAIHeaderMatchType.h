/**
 * Amazon VPC Lattice
 * Amazon VPC Lattice is a fully managed application networking service that you use to connect, secure, and monitor all of your services across multiple accounts and virtual private clouds (VPCs). Amazon VPC Lattice interconnects your microservices and legacy services within a logical boundary, so that you can discover and manage them more efficiently. For more information, see the <a href=\"https://docs.aws.amazon.com/vpc-lattice/latest/ug/\">Amazon VPC Lattice User Guide</a> 
 *
 * The version of the OpenAPI document: 2022-11-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHeaderMatchType.h
 *
 * Describes a header match type. Only one can be provided.
 */

#ifndef OAIHeaderMatchType_H
#define OAIHeaderMatchType_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIHeaderMatchType : public OAIObject {
public:
    OAIHeaderMatchType();
    OAIHeaderMatchType(QString json);
    ~OAIHeaderMatchType() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getContains() const;
    void setContains(const QString &contains);
    bool is_contains_Set() const;
    bool is_contains_Valid() const;

    QString getExact() const;
    void setExact(const QString &exact);
    bool is_exact_Set() const;
    bool is_exact_Valid() const;

    QString getPrefix() const;
    void setPrefix(const QString &prefix);
    bool is_prefix_Set() const;
    bool is_prefix_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_contains;
    bool m_contains_isSet;
    bool m_contains_isValid;

    QString m_exact;
    bool m_exact_isSet;
    bool m_exact_isValid;

    QString m_prefix;
    bool m_prefix_isSet;
    bool m_prefix_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHeaderMatchType)

#endif // OAIHeaderMatchType_H
