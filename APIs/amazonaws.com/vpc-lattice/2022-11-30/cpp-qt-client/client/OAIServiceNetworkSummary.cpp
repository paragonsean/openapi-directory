/**
 * Amazon VPC Lattice
 * Amazon VPC Lattice is a fully managed application networking service that you use to connect, secure, and monitor all of your services across multiple accounts and virtual private clouds (VPCs). Amazon VPC Lattice interconnects your microservices and legacy services within a logical boundary, so that you can discover and manage them more efficiently. For more information, see the <a href=\"https://docs.aws.amazon.com/vpc-lattice/latest/ug/\">Amazon VPC Lattice User Guide</a> 
 *
 * The version of the OpenAPI document: 2022-11-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServiceNetworkSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServiceNetworkSummary::OAIServiceNetworkSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServiceNetworkSummary::OAIServiceNetworkSummary() {
    this->initializeModel();
}

OAIServiceNetworkSummary::~OAIServiceNetworkSummary() {}

void OAIServiceNetworkSummary::initializeModel() {

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_last_updated_at_isSet = false;
    m_last_updated_at_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_number_of_associated_services_isSet = false;
    m_number_of_associated_services_isValid = false;

    m_number_of_associated_vpcs_isSet = false;
    m_number_of_associated_vpcs_isValid = false;
}

void OAIServiceNetworkSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIServiceNetworkSummary::fromJsonObject(QJsonObject json) {

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("arn")]);
    m_arn_isSet = !json[QString("arn")].isNull() && m_arn_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_last_updated_at_isValid = ::OpenAPI::fromJsonValue(m_last_updated_at, json[QString("lastUpdatedAt")]);
    m_last_updated_at_isSet = !json[QString("lastUpdatedAt")].isNull() && m_last_updated_at_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_number_of_associated_services_isValid = ::OpenAPI::fromJsonValue(m_number_of_associated_services, json[QString("numberOfAssociatedServices")]);
    m_number_of_associated_services_isSet = !json[QString("numberOfAssociatedServices")].isNull() && m_number_of_associated_services_isValid;

    m_number_of_associated_vpcs_isValid = ::OpenAPI::fromJsonValue(m_number_of_associated_vpcs, json[QString("numberOfAssociatedVPCs")]);
    m_number_of_associated_vpcs_isSet = !json[QString("numberOfAssociatedVPCs")].isNull() && m_number_of_associated_vpcs_isValid;
}

QString OAIServiceNetworkSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIServiceNetworkSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_arn_isSet) {
        obj.insert(QString("arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_last_updated_at_isSet) {
        obj.insert(QString("lastUpdatedAt"), ::OpenAPI::toJsonValue(m_last_updated_at));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_number_of_associated_services_isSet) {
        obj.insert(QString("numberOfAssociatedServices"), ::OpenAPI::toJsonValue(m_number_of_associated_services));
    }
    if (m_number_of_associated_vpcs_isSet) {
        obj.insert(QString("numberOfAssociatedVPCs"), ::OpenAPI::toJsonValue(m_number_of_associated_vpcs));
    }
    return obj;
}

QString OAIServiceNetworkSummary::getArn() const {
    return m_arn;
}
void OAIServiceNetworkSummary::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAIServiceNetworkSummary::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAIServiceNetworkSummary::is_arn_Valid() const{
    return m_arn_isValid;
}

QDateTime OAIServiceNetworkSummary::getCreatedAt() const {
    return m_created_at;
}
void OAIServiceNetworkSummary::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIServiceNetworkSummary::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIServiceNetworkSummary::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIServiceNetworkSummary::getId() const {
    return m_id;
}
void OAIServiceNetworkSummary::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIServiceNetworkSummary::is_id_Set() const{
    return m_id_isSet;
}

bool OAIServiceNetworkSummary::is_id_Valid() const{
    return m_id_isValid;
}

QDateTime OAIServiceNetworkSummary::getLastUpdatedAt() const {
    return m_last_updated_at;
}
void OAIServiceNetworkSummary::setLastUpdatedAt(const QDateTime &last_updated_at) {
    m_last_updated_at = last_updated_at;
    m_last_updated_at_isSet = true;
}

bool OAIServiceNetworkSummary::is_last_updated_at_Set() const{
    return m_last_updated_at_isSet;
}

bool OAIServiceNetworkSummary::is_last_updated_at_Valid() const{
    return m_last_updated_at_isValid;
}

QString OAIServiceNetworkSummary::getName() const {
    return m_name;
}
void OAIServiceNetworkSummary::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIServiceNetworkSummary::is_name_Set() const{
    return m_name_isSet;
}

bool OAIServiceNetworkSummary::is_name_Valid() const{
    return m_name_isValid;
}

qint32 OAIServiceNetworkSummary::getNumberOfAssociatedServices() const {
    return m_number_of_associated_services;
}
void OAIServiceNetworkSummary::setNumberOfAssociatedServices(const qint32 &number_of_associated_services) {
    m_number_of_associated_services = number_of_associated_services;
    m_number_of_associated_services_isSet = true;
}

bool OAIServiceNetworkSummary::is_number_of_associated_services_Set() const{
    return m_number_of_associated_services_isSet;
}

bool OAIServiceNetworkSummary::is_number_of_associated_services_Valid() const{
    return m_number_of_associated_services_isValid;
}

qint32 OAIServiceNetworkSummary::getNumberOfAssociatedVpcs() const {
    return m_number_of_associated_vpcs;
}
void OAIServiceNetworkSummary::setNumberOfAssociatedVpcs(const qint32 &number_of_associated_vpcs) {
    m_number_of_associated_vpcs = number_of_associated_vpcs;
    m_number_of_associated_vpcs_isSet = true;
}

bool OAIServiceNetworkSummary::is_number_of_associated_vpcs_Set() const{
    return m_number_of_associated_vpcs_isSet;
}

bool OAIServiceNetworkSummary::is_number_of_associated_vpcs_Valid() const{
    return m_number_of_associated_vpcs_isValid;
}

bool OAIServiceNetworkSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_associated_services_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_associated_vpcs_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIServiceNetworkSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
