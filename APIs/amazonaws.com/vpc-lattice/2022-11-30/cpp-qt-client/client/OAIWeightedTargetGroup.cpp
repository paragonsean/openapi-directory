/**
 * Amazon VPC Lattice
 * Amazon VPC Lattice is a fully managed application networking service that you use to connect, secure, and monitor all of your services across multiple accounts and virtual private clouds (VPCs). Amazon VPC Lattice interconnects your microservices and legacy services within a logical boundary, so that you can discover and manage them more efficiently. For more information, see the <a href=\"https://docs.aws.amazon.com/vpc-lattice/latest/ug/\">Amazon VPC Lattice User Guide</a> 
 *
 * The version of the OpenAPI document: 2022-11-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWeightedTargetGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWeightedTargetGroup::OAIWeightedTargetGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWeightedTargetGroup::OAIWeightedTargetGroup() {
    this->initializeModel();
}

OAIWeightedTargetGroup::~OAIWeightedTargetGroup() {}

void OAIWeightedTargetGroup::initializeModel() {

    m_target_group_identifier_isSet = false;
    m_target_group_identifier_isValid = false;

    m_weight_isSet = false;
    m_weight_isValid = false;
}

void OAIWeightedTargetGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWeightedTargetGroup::fromJsonObject(QJsonObject json) {

    m_target_group_identifier_isValid = ::OpenAPI::fromJsonValue(m_target_group_identifier, json[QString("targetGroupIdentifier")]);
    m_target_group_identifier_isSet = !json[QString("targetGroupIdentifier")].isNull() && m_target_group_identifier_isValid;

    m_weight_isValid = ::OpenAPI::fromJsonValue(m_weight, json[QString("weight")]);
    m_weight_isSet = !json[QString("weight")].isNull() && m_weight_isValid;
}

QString OAIWeightedTargetGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWeightedTargetGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_target_group_identifier_isSet) {
        obj.insert(QString("targetGroupIdentifier"), ::OpenAPI::toJsonValue(m_target_group_identifier));
    }
    if (m_weight_isSet) {
        obj.insert(QString("weight"), ::OpenAPI::toJsonValue(m_weight));
    }
    return obj;
}

QString OAIWeightedTargetGroup::getTargetGroupIdentifier() const {
    return m_target_group_identifier;
}
void OAIWeightedTargetGroup::setTargetGroupIdentifier(const QString &target_group_identifier) {
    m_target_group_identifier = target_group_identifier;
    m_target_group_identifier_isSet = true;
}

bool OAIWeightedTargetGroup::is_target_group_identifier_Set() const{
    return m_target_group_identifier_isSet;
}

bool OAIWeightedTargetGroup::is_target_group_identifier_Valid() const{
    return m_target_group_identifier_isValid;
}

qint32 OAIWeightedTargetGroup::getWeight() const {
    return m_weight;
}
void OAIWeightedTargetGroup::setWeight(const qint32 &weight) {
    m_weight = weight;
    m_weight_isSet = true;
}

bool OAIWeightedTargetGroup::is_weight_Set() const{
    return m_weight_isSet;
}

bool OAIWeightedTargetGroup::is_weight_Valid() const{
    return m_weight_isValid;
}

bool OAIWeightedTargetGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_target_group_identifier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_weight_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWeightedTargetGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_target_group_identifier_isValid && true;
}

} // namespace OpenAPI
