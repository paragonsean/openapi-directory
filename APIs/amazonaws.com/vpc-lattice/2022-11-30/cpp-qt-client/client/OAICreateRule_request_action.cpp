/**
 * Amazon VPC Lattice
 * Amazon VPC Lattice is a fully managed application networking service that you use to connect, secure, and monitor all of your services across multiple accounts and virtual private clouds (VPCs). Amazon VPC Lattice interconnects your microservices and legacy services within a logical boundary, so that you can discover and manage them more efficiently. For more information, see the <a href=\"https://docs.aws.amazon.com/vpc-lattice/latest/ug/\">Amazon VPC Lattice User Guide</a> 
 *
 * The version of the OpenAPI document: 2022-11-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateRule_request_action.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateRule_request_action::OAICreateRule_request_action(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateRule_request_action::OAICreateRule_request_action() {
    this->initializeModel();
}

OAICreateRule_request_action::~OAICreateRule_request_action() {}

void OAICreateRule_request_action::initializeModel() {

    m_fixed_response_isSet = false;
    m_fixed_response_isValid = false;

    m_forward_isSet = false;
    m_forward_isValid = false;
}

void OAICreateRule_request_action::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateRule_request_action::fromJsonObject(QJsonObject json) {

    m_fixed_response_isValid = ::OpenAPI::fromJsonValue(m_fixed_response, json[QString("fixedResponse")]);
    m_fixed_response_isSet = !json[QString("fixedResponse")].isNull() && m_fixed_response_isValid;

    m_forward_isValid = ::OpenAPI::fromJsonValue(m_forward, json[QString("forward")]);
    m_forward_isSet = !json[QString("forward")].isNull() && m_forward_isValid;
}

QString OAICreateRule_request_action::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateRule_request_action::asJsonObject() const {
    QJsonObject obj;
    if (m_fixed_response.isSet()) {
        obj.insert(QString("fixedResponse"), ::OpenAPI::toJsonValue(m_fixed_response));
    }
    if (m_forward.isSet()) {
        obj.insert(QString("forward"), ::OpenAPI::toJsonValue(m_forward));
    }
    return obj;
}

OAICreateRule_request_action_fixedResponse OAICreateRule_request_action::getFixedResponse() const {
    return m_fixed_response;
}
void OAICreateRule_request_action::setFixedResponse(const OAICreateRule_request_action_fixedResponse &fixed_response) {
    m_fixed_response = fixed_response;
    m_fixed_response_isSet = true;
}

bool OAICreateRule_request_action::is_fixed_response_Set() const{
    return m_fixed_response_isSet;
}

bool OAICreateRule_request_action::is_fixed_response_Valid() const{
    return m_fixed_response_isValid;
}

OAICreateRule_request_action_forward OAICreateRule_request_action::getForward() const {
    return m_forward;
}
void OAICreateRule_request_action::setForward(const OAICreateRule_request_action_forward &forward) {
    m_forward = forward;
    m_forward_isSet = true;
}

bool OAICreateRule_request_action::is_forward_Set() const{
    return m_forward_isSet;
}

bool OAICreateRule_request_action::is_forward_Valid() const{
    return m_forward_isValid;
}

bool OAICreateRule_request_action::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_fixed_response.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_forward.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateRule_request_action::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
