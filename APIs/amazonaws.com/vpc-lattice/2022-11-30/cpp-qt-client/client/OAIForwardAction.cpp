/**
 * Amazon VPC Lattice
 * Amazon VPC Lattice is a fully managed application networking service that you use to connect, secure, and monitor all of your services across multiple accounts and virtual private clouds (VPCs). Amazon VPC Lattice interconnects your microservices and legacy services within a logical boundary, so that you can discover and manage them more efficiently. For more information, see the <a href=\"https://docs.aws.amazon.com/vpc-lattice/latest/ug/\">Amazon VPC Lattice User Guide</a> 
 *
 * The version of the OpenAPI document: 2022-11-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIForwardAction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIForwardAction::OAIForwardAction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIForwardAction::OAIForwardAction() {
    this->initializeModel();
}

OAIForwardAction::~OAIForwardAction() {}

void OAIForwardAction::initializeModel() {

    m_target_groups_isSet = false;
    m_target_groups_isValid = false;
}

void OAIForwardAction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIForwardAction::fromJsonObject(QJsonObject json) {

    m_target_groups_isValid = ::OpenAPI::fromJsonValue(m_target_groups, json[QString("targetGroups")]);
    m_target_groups_isSet = !json[QString("targetGroups")].isNull() && m_target_groups_isValid;
}

QString OAIForwardAction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIForwardAction::asJsonObject() const {
    QJsonObject obj;
    if (m_target_groups.isSet()) {
        obj.insert(QString("targetGroups"), ::OpenAPI::toJsonValue(m_target_groups));
    }
    return obj;
}

QList OAIForwardAction::getTargetGroups() const {
    return m_target_groups;
}
void OAIForwardAction::setTargetGroups(const QList &target_groups) {
    m_target_groups = target_groups;
    m_target_groups_isSet = true;
}

bool OAIForwardAction::is_target_groups_Set() const{
    return m_target_groups_isSet;
}

bool OAIForwardAction::is_target_groups_Valid() const{
    return m_target_groups_isValid;
}

bool OAIForwardAction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_target_groups.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIForwardAction::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_target_groups_isValid && true;
}

} // namespace OpenAPI
