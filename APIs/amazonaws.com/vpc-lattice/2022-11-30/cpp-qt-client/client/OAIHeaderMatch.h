/**
 * Amazon VPC Lattice
 * Amazon VPC Lattice is a fully managed application networking service that you use to connect, secure, and monitor all of your services across multiple accounts and virtual private clouds (VPCs). Amazon VPC Lattice interconnects your microservices and legacy services within a logical boundary, so that you can discover and manage them more efficiently. For more information, see the <a href=\"https://docs.aws.amazon.com/vpc-lattice/latest/ug/\">Amazon VPC Lattice User Guide</a> 
 *
 * The version of the OpenAPI document: 2022-11-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHeaderMatch.h
 *
 * Describes the constraints for a header match. Matches incoming requests with rule based on request header value before applying rule action.
 */

#ifndef OAIHeaderMatch_H
#define OAIHeaderMatch_H

#include <QJsonObject>

#include "OAIHeaderMatch_match.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHeaderMatch_match;

class OAIHeaderMatch : public OAIObject {
public:
    OAIHeaderMatch();
    OAIHeaderMatch(QString json);
    ~OAIHeaderMatch() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool getCaseSensitive() const;
    void setCaseSensitive(const bool &case_sensitive);
    bool is_case_sensitive_Set() const;
    bool is_case_sensitive_Valid() const;

    OAIHeaderMatch_match getMatch() const;
    void setMatch(const OAIHeaderMatch_match &match);
    bool is_match_Set() const;
    bool is_match_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_case_sensitive;
    bool m_case_sensitive_isSet;
    bool m_case_sensitive_isValid;

    OAIHeaderMatch_match m_match;
    bool m_match_isSet;
    bool m_match_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHeaderMatch)

#endif // OAIHeaderMatch_H
