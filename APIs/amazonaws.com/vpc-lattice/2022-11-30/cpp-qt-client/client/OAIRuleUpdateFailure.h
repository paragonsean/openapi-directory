/**
 * Amazon VPC Lattice
 * Amazon VPC Lattice is a fully managed application networking service that you use to connect, secure, and monitor all of your services across multiple accounts and virtual private clouds (VPCs). Amazon VPC Lattice interconnects your microservices and legacy services within a logical boundary, so that you can discover and manage them more efficiently. For more information, see the <a href=\"https://docs.aws.amazon.com/vpc-lattice/latest/ug/\">Amazon VPC Lattice User Guide</a> 
 *
 * The version of the OpenAPI document: 2022-11-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRuleUpdateFailure.h
 *
 * Describes a rule update that failed.
 */

#ifndef OAIRuleUpdateFailure_H
#define OAIRuleUpdateFailure_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRuleUpdateFailure : public OAIObject {
public:
    OAIRuleUpdateFailure();
    OAIRuleUpdateFailure(QString json);
    ~OAIRuleUpdateFailure() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFailureCode() const;
    void setFailureCode(const QString &failure_code);
    bool is_failure_code_Set() const;
    bool is_failure_code_Valid() const;

    QString getFailureMessage() const;
    void setFailureMessage(const QString &failure_message);
    bool is_failure_message_Set() const;
    bool is_failure_message_Valid() const;

    QString getRuleIdentifier() const;
    void setRuleIdentifier(const QString &rule_identifier);
    bool is_rule_identifier_Set() const;
    bool is_rule_identifier_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_failure_code;
    bool m_failure_code_isSet;
    bool m_failure_code_isValid;

    QString m_failure_message;
    bool m_failure_message_isSet;
    bool m_failure_message_isValid;

    QString m_rule_identifier;
    bool m_rule_identifier_isSet;
    bool m_rule_identifier_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRuleUpdateFailure)

#endif // OAIRuleUpdateFailure_H
